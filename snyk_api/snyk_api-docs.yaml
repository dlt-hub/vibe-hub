resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: iac_test_results
  endpoint:
    path: /api/v1/test
    method: POST
    data_selector: results
- name: monitor_projects
  endpoint:
    path: /api/v1/monitor
    method: POST
    data_selector: projects
- name: projects
  endpoint:
    path: /orgs/{orgId}/projects
    method: GET
    data_selector: projects
    params:
      version: '2024-10-15'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: Container Registry Integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
- name: Kubernetes Integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
- name: Scan Container Images
  endpoint:
    path: /scan-with-snyk/snyk-container/scan-container-images
    method: GET
- name: Snyk IaC
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
- name: Apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: Assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
- name: Audit Logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: Cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
- name: Collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
- name: ContainerImage
  endpoint:
    path: /snyk-api/reference/containerimage
    method: GET
- name: Custom Base Images
  endpoint:
    path: /snyk-api/reference/custom-base-images
    method: GET
- name: Dependencies (v1)
  endpoint:
    path: /snyk-api/reference/dependencies-v1
    method: GET
- name: Entitlements (v1)
  endpoint:
    path: /snyk-api/reference/entitlements-v1
    method: GET
- name: Export
  endpoint:
    path: /snyk-api/reference/export
    method: GET
- name: Groups (v1)
  endpoint:
    path: /snyk-api/reference/groups-v1
    method: GET
- name: Groups
  endpoint:
    path: /snyk-api/reference/groups
    method: GET
- name: IacSettings
  endpoint:
    path: /snyk-api/reference/iacsettings
    method: GET
- name: Ignores (v1)
  endpoint:
    path: /snyk-api/reference/ignores-v1
    method: GET
- name: Import Projects (v1)
  endpoint:
    path: /snyk-api/reference/import-projects-v1
    method: GET
- name: Integrations (v1)
  endpoint:
    path: /snyk-api/reference/integrations-v1
    method: GET
- name: Invites
  endpoint:
    path: /snyk-api/reference/invites
    method: GET
- name: Issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
- name: Jira (v1)
  endpoint:
    path: /snyk-api/reference/jira-v1
    method: GET
- name: Licenses (v1)
  endpoint:
    path: /snyk-api/reference/licenses-v1
    method: GET
- name: Monitor (v1)
  endpoint:
    path: /snyk-api/reference/monitor-v1
    method: GET
- name: OpenSourceSettings
  endpoint:
    path: /snyk-api/reference/opensourcesettings
    method: GET
- name: Organizations (v1)
  endpoint:
    path: /snyk-api/reference/organizations-v1
    method: GET
- name: Orgs
  endpoint:
    path: /snyk-api/reference/orgs
    method: GET
- name: Policies
  endpoint:
    path: /snyk-api/reference/policies
    method: GET
- name: Projects (v1)
  endpoint:
    path: /snyk-api/reference/projects-v1
    method: GET
- name: Projects
  endpoint:
    path: /snyk-api/reference/projects
    method: GET
- name: Pull Request Templates
  endpoint:
    path: /snyk-api/reference/pull-request-templates
    method: GET
- name: Reporting API (v1)
  endpoint:
    path: /snyk-api/reference/reporting-api-v1
    method: GET
- name: SBOM
  endpoint:
    path: /snyk-api/reference/sbom
    method: GET
- name: SastSettings
  endpoint:
    path: /snyk-api/reference/sastsettings
    method: GET
- name: ServiceAccounts
  endpoint:
    path: /snyk-api/reference/serviceaccounts
    method: GET
- name: SlackSettings
  endpoint:
    path: /snyk-api/reference/slacksettings
    method: GET
- name: Slack
  endpoint:
    path: /snyk-api/reference/slack
    method: GET
- name: Snapshots (v1)
  endpoint:
    path: /snyk-api/reference/snapshots-v1
    method: GET
- name: Targets
  endpoint:
    path: /snyk-api/reference/targets
    method: GET
- name: Tenants
  endpoint:
    path: /snyk-api/reference/tenants
    method: GET
- name: Test (v1)
  endpoint:
    path: /snyk-api/reference/test-v1
    method: GET
- name: Universal Broker
  endpoint:
    path: /snyk-api/reference/universal-broker
    method: GET
- name: Users (v1)
  endpoint:
    path: /snyk-api/reference/users-v1
    method: GET
- name: Users
  endpoint:
    path: /snyk-api/reference/users
    method: GET
- name: Webhooks (v1)
  endpoint:
    path: /snyk-api/reference/webhooks-v1
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /learn/reports
    method: GET
    data_selector: data
    params: {}
- name: assignments
  endpoint:
    path: /learn/assignments
    method: GET
    data_selector: data
    params: {}
- name: Org catalog progress
  endpoint:
    path: /orgs/-org_id-/learn/progress/catalog
    method: GET
- name: Org user progress
  endpoint:
    path: /orgs/-org_id-/learn/progress/users
    method: GET
- name: iac_cli_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: learn_access_controls
  endpoint:
    path: /learn/access-controls
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /api/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /api/audit-logs
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
- name: audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: data
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: cli_test_results
  endpoint:
    path: /cli/test/results
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: repositories
  endpoint:
    path: /api/v1/repositories
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: data
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/orgs
    method: GET
    data_selector: orgs
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: service_accounts
  endpoint:
    path: /implementation-and-setup/enterprise-setup/service-accounts
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: iac_test_results
  endpoint:
    path: /api/v1/test-results
    method: GET
    data_selector: results
    params: {}
- name: project_monitor
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: organization
  endpoint:
    path: /orgs
    method: GET
    data_selector: organizations
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: registries
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: kubernetes
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: iac
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: sbom_test
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/sbom-apis/rest-api-endpoint-test-an-sbom-document-for-vulnerabilities
    method: POST
    data_selector: results
- name: package_issues
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/issues-list-issues-for-a-package
    method: GET
    data_selector: issues
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
- name: apps
  endpoint:
    path: /reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /reference/assets
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test
    method: POST
    data_selector: results
    params: {}
- name: code_test_results
  endpoint:
    path: /code/test
    method: POST
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: Snyk Open Source
  endpoint:
    path: /snyk/open-source
    method: GET
    data_selector: projects
    params: {}
- name: Snyk Code
  endpoint:
    path: /snyk/code
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: iac_test_results
  endpoint:
    path: /iac/test-results
    method: GET
    data_selector: results
    params: {}
- name: cli_test_results
  endpoint:
    path: /cli/test-results
    method: GET
    data_selector: results
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /reference/apps
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /reference/assets
    method: GET
    data_selector: records
    params: {}
- name: audit_logs
  endpoint:
    path: /reference/audit-logs
    method: GET
    data_selector: records
    params: {}
- name: cloud
  endpoint:
    path: /reference/cloud
    method: GET
    data_selector: records
    params: {}
- name: collection
  endpoint:
    path: /reference/collection
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
    data_selector: records
- name: containerimage
  endpoint:
    path: /snyk-api/reference/containerimage
    method: GET
    data_selector: records
- name: dependencies_v1
  endpoint:
    path: /snyk-api/reference/dependencies-v1
    method: GET
    data_selector: records
- name: entitlements_v1
  endpoint:
    path: /snyk-api/reference/entitlements-v1
    method: GET
    data_selector: records
- name: export
  endpoint:
    path: /snyk-api/reference/export
    method: GET
    data_selector: records
- name: groups_v1
  endpoint:
    path: /snyk-api/reference/groups-v1
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: users_v1
  endpoint:
    path: /snyk-api/reference/users-v1
    method: GET
    data_selector: records
- name: test_sbom
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/sbom-apis/rest-api-endpoint-test-an-sbom-document-for-vulnerabilities
    method: GET
    data_selector: results
    params: {}
- name: test_packages
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/test_packages
    method: GET
    data_selector: results
    params: {}
- name: list_issues
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/issues-list-issues-for-a-package
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: dependencies
  endpoint:
    path: /api/v1/dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: project_vulnerabilities
  endpoint:
    path: /project/vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: Snyk Security Scan
  endpoint:
    path: /scan
    method: POST
- name: sbt
  endpoint:
    path: /supported-package-managers/sbt
    method: GET
    data_selector: supported
    params: {}
- name: build.sbt
  endpoint:
    path: /supported-file-formats/build.sbt
    method: GET
    data_selector: supported
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: project
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /v1/orgs
    method: GET
    data_selector: orgs
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: organizations
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: Apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: Assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: Audit Logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: Cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
    data_selector: records
- name: Collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
    data_selector: records
- name: ContainerImage
  endpoint:
    path: /snyk-api/reference/containerimage
    method: GET
    data_selector: records
- name: Custom Base Images
  endpoint:
    path: /snyk-api/reference/custom-base-images
    method: GET
    data_selector: records
- name: Dependencies (v1)
  endpoint:
    path: /snyk-api/reference/dependencies-v1
    method: GET
    data_selector: records
- name: Entitlements (v1)
  endpoint:
    path: /snyk-api/reference/entitlements-v1
    method: GET
    data_selector: records
- name: Export
  endpoint:
    path: /snyk-api/reference/export
    method: GET
    data_selector: records
- name: Groups (v1)
  endpoint:
    path: /snyk-api/reference/groups-v1
    method: GET
    data_selector: records
- name: Issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: Users (v1)
  endpoint:
    path: /snyk-api/reference/users-v1
    method: GET
    data_selector: records
- name: Sysdig
  endpoint:
    path: /integrations/connect-a-third-party-integration#sysdig-setup-guide
    method: GET
    data_selector: records
- name: Checkmarx
  endpoint:
    path: /integrations/connect-a-third-party-integration#checkmarx-setup-guide
    method: GET
    data_selector: records
- name: SonarQube
  endpoint:
    path: /integrations/connect-a-third-party-integration#sonarqube-setup-guide
    method: GET
    data_selector: records
- name: Nightfall
  endpoint:
    path: /integrations/connect-a-third-party-integration#nightfall-setup-guide
    method: GET
    data_selector: records
- name: GitGuardian
  endpoint:
    path: /integrations/connect-a-third-party-integration#gitguardian-setup-guide
    method: GET
    data_selector: records
- name: Dynatrace
  endpoint:
    path: /integrations/connect-a-third-party-integration#dynatrace-setup-guide
    method: GET
    data_selector: records
- name: Veracode
  endpoint:
    path: /integrations/connect-a-third-party-integration#veracode-setup-guide
    method: GET
    data_selector: records
- name: Crowdstrike
  endpoint:
    path: /integrations/connect-a-third-party-integration#crowdstrike-setup-guide
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: snyk-runtime-sensor
  endpoint:
    path: /integrations/snyk-runtime-sensor
    method: GET
    data_selector: results
- name: snyk_runtime_sensor
  endpoint:
    path: /services/data/vXX.X/sobjects/snyk_runtime_sensor
    method: POST
    data_selector: configurationValues
    params: {}
- name: create_jira_issue
  endpoint:
    path: /snyk-api/reference/jira-v1/org-orgid-project-projectid-issue-issueid-jira-issue
    method: POST
- name: list_jira_issues
  endpoint:
    path: /snyk-api/reference/jira-v1/org-orgid-project-projectid-jira-issues
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: resources
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: resources
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: resources
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: snyk_project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /api/v1/audit-logs
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
- name: organizations
  endpoint:
    path: /v1/orgs
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: group_registration
  endpoint:
    path: /groups/<YOUR GROUP ID>/cloud_events/group_registrations
    method: POST
    data_selector: data
    params: {}
- name: security_findings
  endpoint:
    path: /api/v1/security_findings
    method: GET
    data_selector: findings
    params: {}
- name: Snyk findings
  endpoint:
    path: /integrations/aws-securityhub
    method: POST
    data_selector: findings
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: project_information
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: Finding Source
  endpoint:
    path: /services/data/vXX.X/sobjects/FindingSource
    method: POST
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: Organization-level SCM integrations
  endpoint:
    path: /developer-tools/scm-integrations/organization-level-integrations
    method: GET
    data_selector: integrations
    params: {}
- name: Group-level SCM integrations
  endpoint:
    path: /developer-tools/scm-integrations/group-level-integrations
    method: GET
    data_selector: integrations
    params: {}
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: workspaces
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /v1/orgs
    method: GET
    data_selector: organizations
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: records
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
- name: test_results
  endpoint:
    path: /v1/test_results
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: auth
  endpoint:
    path: /developer-tools/snyk-cli/commands/auth
    method: GET
- name: config
  endpoint:
    path: /developer-tools/snyk-cli/commands/config
    method: GET
- name: test
  endpoint:
    path: /developer-tools/snyk-cli/commands/test
    method: GET
- name: monitor
  endpoint:
    path: /developer-tools/snyk-cli/commands/monitor
    method: GET
- name: code
  endpoint:
    path: /developer-tools/snyk-cli/commands/code
    method: GET
- name: container
  endpoint:
    path: /developer-tools/snyk-cli/commands/container
    method: GET
- name: iac
  endpoint:
    path: /developer-tools/snyk-cli/commands/iac
    method: GET
- name: iac_update_exclude_policy
  endpoint:
    path: /developer-tools/snyk-cli/commands/iac-update-exclude-policy
    method: GET
- name: ignore
  endpoint:
    path: /developer-tools/snyk-cli/commands/ignore
    method: GET
- name: sbom
  endpoint:
    path: /developer-tools/snyk-cli/commands/sbom
    method: GET
- name: container_sbom
  endpoint:
    path: /developer-tools/snyk-cli/commands/container-sbom
    method: GET
- name: test
  endpoint:
    path: /developer-tools/snyk-cli/commands/test
    method: GET
- name: monitor
  endpoint:
    path: /developer-tools/snyk-cli/commands/monitor
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
- name: AWS Integration
  endpoint:
    path: /scan-with-snyk/snyk-iac/cloud-platform-integrations/aws-integration
    method: GET
    data_selector: records
- name: Azure Integration
  endpoint:
    path: /scan-with-snyk/snyk-iac/cloud-platform-integrations/azure-integration-for-cloud-configurations
    method: GET
    data_selector: records
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
    data_selector: records
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: Visual Studio Code extension
  endpoint:
    path: /developer-tools/snyk-ide-plugins-and-extensions/visual-studio-code-extension
    method: GET
- name: JetBrains plugin
  endpoint:
    path: /developer-tools/snyk-ide-plugins-and-extensions/jetbrains-plugin
    method: GET
- name: Visual Studio extension
  endpoint:
    path: /developer-tools/snyk-ide-plugins-and-extensions/visual-studio-extension
    method: GET
- name: Eclipse plugin
  endpoint:
    path: /developer-tools/snyk-ide-plugins-and-extensions/eclipse-plugin
    method: GET
- name: Language Server
  endpoint:
    path: /developer-tools/snyk-ide-plugins-and-extensions/snyk-language-server
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: test_results
  endpoint:
    path: /test_results
    method: GET
    data_selector: results
    params: {}
- name: apps
  endpoint:
    path: /snyk/api/reference/apps
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /snyk/api/reference/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: results
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: iac_test_results
  endpoint:
    path: /iac/test-results
    method: GET
    data_selector: results
- name: open_source_test_results
  endpoint:
    path: /open-source/test-results
    method: GET
    data_selector: results
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: Snyk Open Source
  endpoint:
    path: /developer-tools/snyk-cli
    method: GET
    data_selector: records
- name: Snyk Container
  endpoint:
    path: /developer-tools/snyk-ci-cd-integrations/github-actions-for-snyk-setup-and-checking-for-vulnerabilities/snyk-container-action
    method: GET
    data_selector: records
- name: Snyk Infrastructure as Code
  endpoint:
    path: /developer-tools/snyk-ci-cd-integrations/github-actions-for-snyk-setup-and-checking-for-vulnerabilities/snyk-infrastructure-as-code-action
    method: GET
    data_selector: records
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: integrations
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: kubernetesIntegrations
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: iac
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: snyk-test
  endpoint:
    path: /test
    method: POST
    data_selector: vulnerabilities
- name: snyk-monitor
  endpoint:
    path: /monitor
    method: POST
    data_selector: monitoring
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: project_monitoring
  endpoint:
    path: /monitor/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: integrations
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: kubernetes
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: iac
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
- name: scans
  endpoint:
    path: /snyk-api/reference/test-v1
    method: GET
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /api/v1/integrations
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: organizations
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: audit_logs
  endpoint:
    path: /api/v1/audit-logs
    method: GET
    data_selector: logs
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: Code analysis Project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: pull_requests
  endpoint:
    path: /api/v1/pull-requests
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: code_analysis
  endpoint:
    path: /api/v1/code-analysis
    method: GET
    data_selector: results
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
    data_selector: records
- name: containerimage
  endpoint:
    path: /snyk-api/reference/containerimage
    method: GET
    data_selector: records
- name: dependencies_v1
  endpoint:
    path: /snyk-api/reference/dependencies-v1
    method: GET
    data_selector: records
- name: entitlements_v1
  endpoint:
    path: /snyk-api/reference/entitlements-v1
    method: GET
    data_selector: records
- name: export
  endpoint:
    path: /snyk-api/reference/export
    method: GET
    data_selector: records
- name: groups_v1
  endpoint:
    path: /snyk-api/reference/groups-v1
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: users_v1
  endpoint:
    path: /snyk-api/reference/users-v1
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: apps
  endpoint:
    path: /reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /reference/assets
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: AWS Integration
  endpoint:
    path: /scan-with-snyk/snyk-iac/cloud-platform-integrations/aws-integration
    method: GET
    data_selector: records
    params: {}
- name: Azure Integration
  endpoint:
    path: /scan-with-snyk/snyk-iac/cloud-platform-integrations/azure-integration-for-cloud-configurations
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
- name: cli_test_results
  endpoint:
    path: /cli/test/results
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
- name: iac
  endpoint:
    path: /iac/test
    method: POST
    data_selector: results
    params: {}
- name: code
  endpoint:
    path: /code/test
    method: POST
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: data
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: data
    params: {}
- name: Projects
  endpoint:
    path: /projects
    method: GET
- name: Re-import Projects
  endpoint:
    path: /reimport-projects
    method: POST
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: results
- name: import_targets
  endpoint:
    path: /snyk-api/reference/import-projects-v1#org-orgid-integrations-integrationid-import
    method: POST
- name: retest_repository
  endpoint:
    path: /scan-with-snyk/snyk-code/manage-code-vulnerabilities#retesting-code-repository
    method: POST
- name: Snyk Code rules
  endpoint:
    path: /scan-with-snyk/snyk-code/manage-code-vulnerabilities/fix-code-vulnerabilities-automatically
    method: GET
    data_selector: rules
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: test
  endpoint:
    path: /test
    method: POST
    data_selector: tests
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: iac_test_results
  endpoint:
    path: /iac/test_results
    method: GET
    data_selector: results
    params: {}
- name: project_test_results
  endpoint:
    path: /test_results
    method: GET
    data_selector: results
    params: {}
- name: audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: test_results
  endpoint:
    path: /test-results
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
- name: cli_test_results
  endpoint:
    path: /cli/test/results
    method: GET
    data_selector: results
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: latest_issues
  endpoint:
    path: /snyk-api/reference/reporting-api-v1/issues/latest
    method: POST
    data_selector: issues
    params:
      filters:
        orgs:
        - my-public-org-id
        types:
        - configuration
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: Apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: Assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
- name: Audit Logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: Cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
- name: Collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
- name: ContainerImage
  endpoint:
    path: /snyk-api/reference/containerimage
    method: GET
- name: Custom Base Images
  endpoint:
    path: /snyk-api/reference/custom-base-images
    method: GET
- name: Dependencies (v1)
  endpoint:
    path: /snyk-api/reference/dependencies-v1
    method: GET
- name: Entitlements (v1)
  endpoint:
    path: /snyk-api/reference/entitlements-v1
    method: GET
- name: Export
  endpoint:
    path: /snyk-api/reference/export
    method: GET
- name: Groups (v1)
  endpoint:
    path: /snyk-api/reference/groups-v1
    method: GET
- name: Groups
  endpoint:
    path: /snyk-api/reference/groups
    method: GET
- name: IacSettings
  endpoint:
    path: /snyk-api/reference/iacsettings
    method: GET
- name: Ignores (v1)
  endpoint:
    path: /snyk-api/reference/ignores-v1
    method: GET
- name: Import Projects (v1)
  endpoint:
    path: /snyk-api/reference/import-projects-v1
    method: GET
- name: Integrations (v1)
  endpoint:
    path: /snyk-api/reference/integrations-v1
    method: GET
- name: Invites
  endpoint:
    path: /snyk-api/reference/invites
    method: GET
- name: Issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
- name: Jira (v1)
  endpoint:
    path: /snyk-api/reference/jira-v1
    method: GET
- name: Licenses (v1)
  endpoint:
    path: /snyk-api/reference/licenses-v1
    method: GET
- name: Monitor (v1)
  endpoint:
    path: /snyk-api/reference/monitor-v1
    method: GET
- name: OpenSourceSettings
  endpoint:
    path: /snyk-api/reference/opensourcesettings
    method: GET
- name: Organizations (v1)
  endpoint:
    path: /snyk-api/reference/organizations-v1
    method: GET
- name: Orgs
  endpoint:
    path: /snyk-api/reference/orgs
    method: GET
- name: Policies
  endpoint:
    path: /snyk-api/reference/policies
    method: GET
- name: Projects (v1)
  endpoint:
    path: /snyk-api/reference/projects-v1
    method: GET
- name: Projects
  endpoint:
    path: /snyk-api/reference/projects
    method: GET
- name: Pull Request Templates
  endpoint:
    path: /snyk-api/reference/pull-request-templates
    method: GET
- name: Reporting API (v1)
  endpoint:
    path: /snyk-api/reference/reporting-api-v1
    method: GET
- name: SBOM
  endpoint:
    path: /snyk-api/reference/sbom
    method: GET
- name: SastSettings
  endpoint:
    path: /snyk-api/reference/sastsettings
    method: GET
- name: ServiceAccounts
  endpoint:
    path: /snyk-api/reference/serviceaccounts
    method: GET
- name: SlackSettings
  endpoint:
    path: /snyk-api/reference/slacksettings
    method: GET
- name: Slack
  endpoint:
    path: /snyk-api/reference/slack
    method: GET
- name: Snapshots (v1)
  endpoint:
    path: /snyk-api/reference/snapshots-v1
    method: GET
- name: Targets
  endpoint:
    path: /snyk-api/reference/targets
    method: GET
- name: Tenants
  endpoint:
    path: /snyk-api/reference/tenants
    method: GET
- name: Test (v1)
  endpoint:
    path: /snyk-api/reference/test-v1
    method: GET
- name: Universal Broker
  endpoint:
    path: /snyk-api/reference/universal-broker
    method: GET
- name: Users (v1)
  endpoint:
    path: /snyk-api/reference/users-v1
    method: GET
- name: Users
  endpoint:
    path: /snyk-api/reference/users
    method: GET
- name: Webhooks (v1)
  endpoint:
    path: /snyk-api/reference/webhooks-v1
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: jira_tickets
  endpoint:
    path: /api/tickets
    method: POST
    data_selector: projects
- name: iac_test_results
  endpoint:
    path: /iac/test-results
    method: GET
    data_selector: results
- name: monitoring_projects
  endpoint:
    path: /monitoring/projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: inventory_overview
  endpoint:
    path: /inventory/overview
    method: GET
    data_selector: repositories
    params: {}
- name: all_assets
  endpoint:
    path: /inventory/all_assets
    method: GET
    data_selector: assets
    params: {}
- name: asset_hierarchy
  endpoint:
    path: /inventory/asset_hierarchy
    method: GET
    data_selector: assets
    params: {}
- name: teams
  endpoint:
    path: /inventory/teams
    method: GET
    data_selector: teams
    params: {}
- name: technology
  endpoint:
    path: /inventory/technology
    method: GET
    data_selector: technologies
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: Assets
  endpoint:
    path: /manage-assets/assets-inventory-components#asset
    method: GET
- name: Issues
  endpoint:
    path: /manage-assets/assets-inventory-components#issues
    method: GET
- name: Coverage Controls
  endpoint:
    path: /manage-assets/assets-inventory-components#coverage-controls
    method: GET
- name: Tags
  endpoint:
    path: /manage-assets/assets-inventory-components#tags
    method: GET
- name: Developers
  endpoint:
    path: /manage-assets/assets-inventory-components#developers
    method: GET
- name: Class
  endpoint:
    path: /manage-assets/assets-inventory-components#class
    method: GET
- name: Risk factors
  endpoint:
    path: /manage-assets/assets-inventory-components#risk-factors
    method: GET
- name: Source
  endpoint:
    path: /manage-assets/assets-inventory-components#source
    method: GET
- name: SCM Repository freshness
  endpoint:
    path: /manage-assets/assets-inventory-components#scm-repository-freshness
    method: GET
- name: Clusters
  endpoint:
    path: /manage-assets/assets-inventory-components#clusters
    method: GET
- name: Organizations
  endpoint:
    path: /manage-assets/assets-inventory-components#organizations
    method: GET
- name: Visibility
  endpoint:
    path: /manage-assets/assets-inventory-components#visibility
    method: GET
- name: iac_test_results
  endpoint:
    path: /iac/test-results
    method: GET
    data_selector: results
    params: {}
- name: code_test_results
  endpoint:
    path: /code/test-results
    method: GET
    data_selector: results
    params: {}
- name: container_image_vulnerabilities
  endpoint:
    path: /v1/container/vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: iac_scan_results
  endpoint:
    path: /v1/iac/scan
    method: POST
    data_selector: scanResults
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
    params: {}
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /snyk-api/reference/reporting-api-v1#reporting-issues-latest
    method: GET
    data_selector: issues
- name: scan_results
  endpoint:
    path: /api/v1/scans
    method: GET
    data_selector: results
    params:
      incremental: last_scanned
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: cli_test_results
  endpoint:
    path: /cli/test/results
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
    data_selector: records
- name: containerimage
  endpoint:
    path: /snyk-api/reference/containerimage
    method: GET
    data_selector: records
- name: dependencies_v1
  endpoint:
    path: /snyk-api/reference/dependencies-v1
    method: GET
    data_selector: records
- name: entitlements_v1
  endpoint:
    path: /snyk-api/reference/entitlements-v1
    method: GET
    data_selector: records
- name: export
  endpoint:
    path: /snyk-api/reference/export
    method: GET
    data_selector: records
- name: groups_v1
  endpoint:
    path: /snyk-api/reference/groups-v1
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /snyk-api/reference/groups
    method: GET
    data_selector: records
- name: iacsettings
  endpoint:
    path: /snyk-api/reference/iacsettings
    method: GET
    data_selector: records
- name: ignores_v1
  endpoint:
    path: /snyk-api/reference/ignores-v1
    method: GET
    data_selector: records
- name: import_projects_v1
  endpoint:
    path: /snyk-api/reference/import-projects-v1
    method: GET
    data_selector: records
- name: integrations_v1
  endpoint:
    path: /snyk-api/reference/integrations-v1
    method: GET
    data_selector: records
- name: invites
  endpoint:
    path: /snyk-api/reference/invites
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: jira_v1
  endpoint:
    path: /snyk-api/reference/jira-v1
    method: GET
    data_selector: records
- name: licenses_v1
  endpoint:
    path: /snyk-api/reference/licenses-v1
    method: GET
    data_selector: records
- name: monitor_v1
  endpoint:
    path: /snyk-api/reference/monitor-v1
    method: GET
    data_selector: records
- name: organizations_v1
  endpoint:
    path: /snyk-api/reference/organizations-v1
    method: GET
    data_selector: records
- name: orgs
  endpoint:
    path: /snyk-api/reference/orgs
    method: GET
    data_selector: records
- name: policies
  endpoint:
    path: /snyk-api/reference/policies
    method: GET
    data_selector: records
- name: projects_v1
  endpoint:
    path: /snyk-api/reference/projects-v1
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /snyk-api/reference/projects
    method: GET
    data_selector: records
- name: webhooks_v1
  endpoint:
    path: /snyk-api/reference/webhooks-v1
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
- name: risk_factors
  endpoint:
    path: /api/v1/risk_factors
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: integrations
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: kubernetesIntegrations
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: iacServices
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: risk_factors
  endpoint:
    path: /manage-risk/prioritize-issues-for-fixing/assets-and-risk-factors-for-snyk-apprisk
    method: GET
    data_selector: risk_factors
    params: {}
- name: integrations
  endpoint:
    path: /integrations/connect-a-third-party-integration
    method: GET
    data_selector: integrations
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: iac_test_results
  endpoint:
    path: /api/v1/iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: snyk_security_scan
  endpoint:
    path: /api/v1/security-scan
    method: POST
    data_selector: results
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: snyk-runtime-sensor
  endpoint:
    path: /integrations/snyk-runtime-sensor
    method: GET
    data_selector: records
    params: {}
- name: snyk_runtime_sensor
  endpoint:
    path: /services/data/vXX.X/sobjects/SnykRuntimeSensor
    method: POST
    data_selector: records
    params: {}
- name: exploits
  endpoint:
    path: /api/v1/exploits
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: Issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: Projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: container_registry
  endpoint:
    path: /api/v1/container-registry
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: policies
  endpoint:
    path: /manage-risk/policies
    method: GET
    data_selector: policies
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: policies
  endpoint:
    path: /policies
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
    params: {}
- name: snyk_project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues_detail_report
  endpoint:
    path: /manage-risk/reporting/available-snyk-reports#issues-detail-report
    method: GET
    data_selector: records
- name: issues_summary_report
  endpoint:
    path: /manage-risk/reporting/available-snyk-reports#issues-summary-report
    method: GET
    data_selector: records
- name: vulnerabilities_detail_report
  endpoint:
    path: /manage-risk/reporting/available-snyk-reports#vulnerabilities-detail-report
    method: GET
    data_selector: records
- name: featured_zero_day_report
  endpoint:
    path: /manage-risk/reporting/available-snyk-reports#featured-zero-day-report
    method: GET
    data_selector: records
- name: sla_management_report
  endpoint:
    path: /manage-risk/reporting/available-snyk-reports#sla-management-report
    method: GET
    data_selector: records
- name: owasp_top_10_report
  endpoint:
    path: /manage-risk/reporting/available-snyk-reports#owasp-top-10-report
    method: GET
    data_selector: records
- name: cwe_top_25_report
  endpoint:
    path: /manage-risk/reporting/available-snyk-reports#cwe-top-25-report
    method: GET
    data_selector: records
- name: cwe_top_10_kev_report
  endpoint:
    path: /reports/cwe_top_10_kev
    method: GET
    data_selector: data
    params: {}
- name: pci_dss_v4_0_1_report
  endpoint:
    path: /reports/pci_dss_v4_0_1
    method: GET
    data_selector: data
    params: {}
- name: repositories_tested
  endpoint:
    path: /api/v1/repositories/tested
    method: GET
    data_selector: data
    params:
      date_range: last_30_days
- name: cloud_compliance_issues
  endpoint:
    path: /api/v1/cloud/compliance/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: project_analysis
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: records
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: records
- name: scan_container_images
  endpoint:
    path: /scan-with-snyk/snyk-container/scan-container-images
    method: GET
    data_selector: records
- name: use_snyk_container
  endpoint:
    path: /scan-with-snyk/snyk-container/use-snyk-container
    method: GET
    data_selector: records
- name: scan_your_dockerfile
  endpoint:
    path: /scan-with-snyk/snyk-container/scan-your-dockerfile
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: Snyk Groups
  endpoint:
    path: /manage-risk/reporting/reporting-and-bi-integrations-snowflake-data-share/data-share-data-dictionary
    method: GET
    data_selector: data
    params: {}
- name: Snyk Data
  endpoint:
    path: /manage-risk/reporting/reporting-and-bi-integrations-snowflake-data-share/build-your-first-dashboard
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test-results
    method: GET
    data_selector: results
- name: code_test_results
  endpoint:
    path: /code/test-results
    method: GET
    data_selector: results
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
- name: audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: snyk_security_scan
  endpoint:
    path: /api/v1/security-scans
    method: POST
    data_selector: data
    params: {}
- name: org_memberships
  endpoint:
    path: /orgs/{org_id}/memberships
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /groups/{group_id}/memberships
    method: GET
    data_selector: data/items
    params: {}
- name: orgs
  endpoint:
    path: /orgs
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /orgs/{org_id}/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /orgs/{org_id}/apps
    method: GET
    data_selector: data
    params: {}
- name: apps_installs
  endpoint:
    path: /orgs/{org_id}/apps/installs
    method: GET
- name: apps_creations
  endpoint:
    path: /orgs/{org_id}/apps/creations
    method: GET
- name: container_images
  endpoint:
    path: /orgs/{org_id}/container_images
    method: GET
- name: projects
  endpoint:
    path: /orgs/{org_id}/projects
    method: GET
- name: service_accounts
  endpoint:
    path: /orgs/{org_id}/service_accounts
    method: GET
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: PATCH
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: GET
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: DELETE
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}/secrets
    method: POST
- endpoint:
    path: /orgs/{org_id}/app_bots
    method: GET
- endpoint:
    path: /orgs/{org_id}/app_bots/{bot_id}
    method: DELETE
- endpoint:
    path: /orgs/{org_id}/settings/iac
    method: PATCH
- endpoint:
    path: /orgs/{org_id}/settings/iac
    method: GET
- endpoint:
    path: /groups/{group_id}/settings/iac
    method: PATCH
- endpoint:
    path: /groups/{group_id}/settings/iac
    method: GET
- name: policies
  endpoint:
    path: /orgs/{org_id}/policies
    method: GET
- name: service_accounts
  endpoint:
    path: /orgs/{org_id}/service_accounts
    method: GET
- name: export
  endpoint:
    path: /orgs/{org_id}/export
    method: POST
- name: service_accounts_export
  endpoint:
    path: /groups/{group_id}/export
    method: POST
- name: service_accounts_create
  endpoint:
    path: /orgs/{org_id}/service_accounts
    method: POST
- name: groups_service_accounts
  endpoint:
    path: /groups/{group_id}/service_accounts
    method: GET
- name: tenants
  endpoint:
    path: /tenants
    method: GET
- name: tenant_details
  endpoint:
    path: /tenants/{tenant_id}
    method: GET
- name: bulk_migration
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections/{connection_id}/bulk_migration
    method: POST
- name: bulk_migration_list
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections/{connection_id}/bulk_migration
    method: GET
- name: org_memberships
  endpoint:
    path: /orgs/{org_id}/memberships
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /groups/{group_id}/memberships
    method: GET
    data_selector: data
    params: {}
- name: orgs
  endpoint:
    path: /orgs/{org_id}/collections/{collection_id}
    method: GET
- name: projects
  endpoint:
    path: /orgs/{org_id}/projects
    method: GET
- name: apps
  endpoint:
    path: /orgs/{org_id}/apps
    method: GET
- name: issues
  endpoint:
    path: /orgs/{org_id}/issues
    method: GET
- name: apps_installs
  endpoint:
    path: /orgs/{org_id}/apps/installs
    method: GET
- name: apps_creations
  endpoint:
    path: /orgs/{org_id}/apps/creations
    method: GET
- name: container_images
  endpoint:
    path: /orgs/{org_id}/container_images
    method: GET
- name: projects
  endpoint:
    path: /orgs/{org_id}/projects
    method: GET
- name: service_accounts
  endpoint:
    path: /orgs/{org_id}/service_accounts
    method: GET
- name: invites
  endpoint:
    path: /orgs/{org_id}/invites
    method: GET
- name: custom_base_images
  endpoint:
    path: /custom_base_images
    method: GET
- name: app
  endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: PATCH
- name: app
  endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: GET
- name: app
  endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: DELETE
- name: client_secrets
  endpoint:
    path: /orgs/{org_id}/apps/{client_id}/secrets
    method: POST
- name: app_bots
  endpoint:
    path: /orgs/{org_id}/app_bots
    method: GET
- name: app_bots
  endpoint:
    path: /orgs/{org_id}/app_bots/{bot_id}
    method: DELETE
- name: iac_settings_org
  endpoint:
    path: /orgs/{org_id}/settings/iac
    method: PATCH
- name: iac_settings_org
  endpoint:
    path: /orgs/{org_id}/settings/iac
    method: GET
- name: iac_settings_group
  endpoint:
    path: /groups/{group_id}/settings/iac
    method: PATCH
- name: iac_settings_group
  endpoint:
    path: /groups/{group_id}/settings/iac
    method: GET
- name: packages_issues
  endpoint:
    path: /orgs/{org_id}/packages/issues
    method: POST
    data_selector: data
    params: {}
- name: orgs_policies
  endpoint:
    path: /orgs/{org_id}/policies
    method: GET
    data_selector: data
    params: {}
- name: orgs_policy
  endpoint:
    path: /orgs/{org_id}/policies/{policy_id}
    method: GET
    data_selector: data
    params: {}
- name: orgs_issues
  endpoint:
    path: /orgs/{org_id}/issues
    method: GET
    data_selector: data
    params: {}
- name: groups_issues
  endpoint:
    path: /groups/{group_id}/issues
    method: GET
    data_selector: data
    params: {}
- name: org_memberships
  endpoint:
    path: /orgs/{org_id}/memberships
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /groups/{group_id}/memberships
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /orgs/{org_id}/apps
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /orgs/{org_id}/audit_logs/search
    method: GET
    data_selector: data
    params:
      size: '100.00'
- name: orgs
  endpoint:
    path: /orgs/{org_id}
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /orgs/{org_id}/projects
    method: GET
    data_selector: data/items
    params: {}
- name: apps
  endpoint:
    path: /orgs/{org_id}/apps
    method: GET
    data_selector: data/items
    params: {}
- name: apps_installs
  endpoint:
    path: /orgs/{org_id}/apps/installs
    method: POST
- name: container_images
  endpoint:
    path: /orgs/{org_id}/container_images
    method: GET
- name: projects
  endpoint:
    path: /orgs/{org_id}/projects
    method: GET
- name: service_accounts
  endpoint:
    path: /orgs/{org_id}/service_accounts
    method: GET
- name: invites
  endpoint:
    path: /orgs/{org_id}/invites
    method: GET
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: PATCH
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: GET
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}
    method: DELETE
- endpoint:
    path: /orgs/{org_id}/apps/{client_id}/secrets
    method: POST
- endpoint:
    path: /orgs/{org_id}/app_bots
    method: GET
- endpoint:
    path: /orgs/{org_id}/app_bots/{bot_id}
    method: DELETE
- endpoint:
    path: /orgs/{org_id}/settings/iac
    method: PATCH
- endpoint:
    path: /orgs/{org_id}/settings/iac
    method: GET
- endpoint:
    path: /groups/{group_id}/settings/iac
    method: PATCH
- endpoint:
    path: /groups/{group_id}/settings/iac
    method: GET
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: broker
  endpoint:
    path: /api/v1/broker
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: code_test_results
  endpoint:
    path: /code/test/results
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /reference/apps
    method: GET
- name: assets
  endpoint:
    path: /reference/assets
    method: GET
- name: audit_logs
  endpoint:
    path: /reference/audit-logs
    method: GET
- name: cloud
  endpoint:
    path: /reference/cloud
    method: GET
- name: collection
  endpoint:
    path: /reference/collection
    method: GET
- name: containerimage
  endpoint:
    path: /reference/containerimage
    method: GET
- name: custom_base_images
  endpoint:
    path: /reference/custom-base-images
    method: GET
- name: dependencies_v1
  endpoint:
    path: /reference/dependencies-v1
    method: GET
- name: entitlements_v1
  endpoint:
    path: /reference/entitlements-v1
    method: GET
- name: export
  endpoint:
    path: /reference/export
    method: GET
- name: groups_v1
  endpoint:
    path: /reference/groups-v1
    method: GET
- name: issues
  endpoint:
    path: /reference/issues
    method: GET
- name: users_v1
  endpoint:
    path: /reference/users-v1
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: test_results
  endpoint:
    path: /test-results
    method: GET
    data_selector: results
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
    data_selector: records
- name: containerimage
  endpoint:
    path: /snyk-api/reference/containerimage
    method: GET
    data_selector: records
- name: custom_base_images
  endpoint:
    path: /snyk-api/reference/custom-base-images
    method: GET
    data_selector: records
- name: dependencies_v1
  endpoint:
    path: /snyk-api/reference/dependencies-v1
    method: GET
    data_selector: records
- name: entitlements_v1
  endpoint:
    path: /snyk-api/reference/entitlements-v1
    method: GET
    data_selector: records
- name: export
  endpoint:
    path: /snyk-api/reference/export
    method: GET
    data_selector: records
- name: groups_v1
  endpoint:
    path: /snyk-api/reference/groups-v1
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: users_v1
  endpoint:
    path: /snyk-api/reference/users-v1
    method: GET
    data_selector: records
- name: create_ai_bom
  endpoint:
    path: /rest/orgs/{org_id}/ai_boms
    method: POST
    data_selector: data
    params: {}
- name: get_ai_bom
  endpoint:
    path: /rest/orgs/{org_id}/ai_boms/{ai_bom_id}
    method: GET
    data_selector: data
    params: {}
- name: get_ai_bom_job_status
  endpoint:
    path: /rest/orgs/{org_id}/ai_bom_jobs/{job_id}
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: snyk_apps
  endpoint:
    path: /self/apps
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /rest/self/apps
    method: GET
    data_selector: data
- name: app_sessions
  endpoint:
    path: /rest/self/apps/{app_id}/sessions
    method: GET
    data_selector: data
- name: installed_apps
  endpoint:
    path: /rest/self/apps/installs
    method: GET
    data_selector: data
- name: apps
  endpoint:
    path: /rest/orgs/{org_id}/apps
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: app_creation
  endpoint:
    path: /rest/orgs/{org_id}/apps/creations/{app_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: app_install
  endpoint:
    path: /rest/orgs/{org_id}/apps/installs
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: apps_installs
  endpoint:
    path: /rest/orgs/{org_id}/apps/installs
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: apps_creations
  endpoint:
    path: /rest/orgs/{org_id}/apps/creations
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: app_creation
  endpoint:
    path: /rest/orgs/{org_id}/apps/creations/{app_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_app_by_id
  endpoint:
    path: /rest/orgs/{org_id}/apps/creations/{app_id}
    method: GET
    data_selector: data.attributes
    params:
      version: '2021-06-04'
- name: delete_app_by_id
  endpoint:
    path: /rest/orgs/{org_id}/apps/creations/{app_id}
    method: DELETE
    data_selector: ''
    params:
      version: '2021-06-04'
- name: manage_client_secret
  endpoint:
    path: /rest/orgs/{org_id}/apps/creations/{app_id}/secrets
    method: POST
    data_selector: data.attributes
    params:
      version: '2021-06-04'
- name: get_app_bots
  endpoint:
    path: /rest/orgs/{org_id}/app_bots
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: revoke_app_bot_authorization
  endpoint:
    path: /rest/orgs/{org_id}/app_bots/{bot_id}
    method: DELETE
    data_selector: ''
    params:
      version: '2021-06-04'
- name: install_app_for_group
  endpoint:
    path: /rest/groups/{group_id}/apps/installs
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: apps_installs
  endpoint:
    path: /rest/groups/{group_id}/apps/installs
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: revoke_app_authorization
  endpoint:
    path: /rest/groups/{group_id}/apps/installs/{install_id}
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: manage_client_secret
  endpoint:
    path: /rest/groups/{group_id}/apps/installs/{install_id}/secrets
    method: POST
    data_selector: null
    params:
      version: '2021-06-04'
- name: create_app
  endpoint:
    path: /rest/orgs/{org_id}/apps/creations
    method: POST
    data_selector: null
    params:
      version: '2021-06-04'
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: apps
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: asset
  endpoint:
    path: /rest/groups/{group_id}/assets/{asset_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: asset_projects
  endpoint:
    path: /rest/groups/{group_id}/assets/{asset_id}/relationships/projects
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: related_assets
  endpoint:
    path: /rest/groups/{group_id}/assets/{asset_id}/relationships/assets
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: search_assets
  endpoint:
    path: /rest/groups/{group_id}/assets/search
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: organization_audit_logs
  endpoint:
    path: /rest/orgs/{org_id}/audit_logs/search
    method: GET
    data_selector: data.items
    params:
      version: '2021-06-04'
- name: group_audit_logs
  endpoint:
    path: /rest/groups/{group_id}/audit_logs/search
    method: GET
    data_selector: data.items
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: test_results
  endpoint:
    path: /test-results
    method: GET
    data_selector: results
    params: {}
- name: cloud_scans
  endpoint:
    path: /rest/orgs/{org_id}/cloud/scans
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: list_scans
  endpoint:
    path: /rest/orgs/{org_id}/cloud/scans
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_scan
  endpoint:
    path: /rest/orgs/{org_id}/cloud/scans/{scan_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: list_resources
  endpoint:
    path: /rest/orgs/{org_id}/cloud/resources
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: create_permissions
  endpoint:
    path: /rest/orgs/{org_id}/cloud/permissions
    method: POST
    data_selector: data
    params: {}
- name: create_environment
  endpoint:
    path: /rest/orgs/{org_id}/cloud/environments
    method: POST
    data_selector: data
    params: {}
- name: list_environments
  endpoint:
    path: /rest/orgs/{org_id}/cloud/environments
    method: GET
    data_selector: data
    params: {}
- name: update_environment
  endpoint:
    path: /rest/orgs/{org_id}/cloud/environments/{environment_id}
    method: PATCH
    data_selector: data
    params: {}
- name: delete_environment
  endpoint:
    path: /rest/orgs/{org_id}/cloud/environments/{environment_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: create_collection
  endpoint:
    path: /rest/orgs/{org_id}/collections
    method: POST
- name: get_collections
  endpoint:
    path: /rest/orgs/{org_id}/collections
    method: GET
- name: edit_collection
  endpoint:
    path: /rest/orgs/{org_id}/collections/{collection_id}
    method: PATCH
- name: get_collection
  endpoint:
    path: /rest/orgs/{org_id}/collections/{collection_id}
    method: GET
- name: delete_collection
  endpoint:
    path: /rest/orgs/{org_id}/collections/{collection_id}
    method: DELETE
- name: add_projects_to_collection
  endpoint:
    path: /rest/orgs/{org_id}/collections/{collection_id}/relationships/projects
    method: POST
- name: get_projects_from_collection
  endpoint:
    path: /rest/orgs/{org_id}/collections/{collection_id}/relationships/projects
    method: GET
- name: remove_projects_from_collection
  endpoint:
    path: /orgs/{org_id}/collections/{collection_id}/relationships/projects
    method: DELETE
    data_selector: data
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: data
    params: {}
- name: container_images
  endpoint:
    path: /rest/orgs/{org_id}/container_images
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_container_image
  endpoint:
    path: /rest/orgs/{org_id}/container_images/{image_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: image_target_refs
  endpoint:
    path: /rest/orgs/{org_id}/container_images/{image_id}/relationships/image_target_refs
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: custom_base_images
  endpoint:
    path: /api/v1/custom-base-images
    method: GET
    data_selector: data
    params: {}
- name: JavaScript
  endpoint:
    path: /supported-languages/supported-languages-list/javascript
    method: GET
    data_selector: records
    params: {}
- name: .NET
  endpoint:
    path: /supported-languages/supported-languages-list/.net
    method: GET
    data_selector: records
    params: {}
- name: PHP
  endpoint:
    path: /supported-languages/supported-languages-list/php
    method: GET
    data_selector: records
    params: {}
- name: Python
  endpoint:
    path: /supported-languages/supported-languages-list/python
    method: GET
    data_selector: records
    params: {}
- name: Ruby
  endpoint:
    path: /supported-languages/supported-languages-list/ruby
    method: GET
    data_selector: records
    params: {}
- name: Rust
  endpoint:
    path: /supported-languages/supported-languages-list/rust
    method: GET
    data_selector: records
    params: {}
- name: Scala
  endpoint:
    path: /supported-languages/supported-languages-list/scala
    method: GET
    data_selector: records
    params: {}
- name: Swift and Objective-C
  endpoint:
    path: /supported-languages/supported-languages-list/swift-and-objective-c
    method: GET
    data_selector: records
    params: {}
- name: TypeScript
  endpoint:
    path: /supported-languages/supported-languages-list/typescript
    method: GET
    data_selector: records
    params: {}
- name: VB.NET
  endpoint:
    path: /supported-languages/supported-languages-list/vb.net
    method: GET
    data_selector: records
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
- name: code_test_results
  endpoint:
    path: /code/test/results
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: results
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: custom_base_image
  endpoint:
    path: /custom_base_images
    method: POST
- name: custom_base_image_collection
  endpoint:
    path: /custom_base_images
    method: GET
- name: update_custom_base_image
  endpoint:
    path: /custom_base_images/{custombaseimage_id}
    method: PATCH
- name: get_custom_base_image
  endpoint:
    path: /custom_base_images/{custombaseimage_id}
    method: GET
- name: delete_custom_base_image
  endpoint:
    path: /custom_base_images/{custombaseimage_id}
    method: DELETE
- name: custom_base_images
  endpoint:
    path: /rest/custom_base_images
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: create_custom_base_image
  endpoint:
    path: /rest/custom_base_images
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_custom_base_image
  endpoint:
    path: /rest/custom_base_images/{custombaseimage_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_custom_base_image
  endpoint:
    path: /rest/custom_base_images/{custombaseimage_id}
    method: DELETE
    data_selector: data
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: dependencies
  endpoint:
    path: /v1/org/{orgId}/dependencies
    method: POST
    data_selector: results
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: data
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: entitlements
  endpoint:
    path: /v1/org/{orgId}/entitlements
    method: GET
    data_selector: all
    params: {}
- name: entitlement_value
  endpoint:
    path: /v1/org/{orgId}/entitlement/{entitlementKey}
    method: GET
    data_selector: string
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: integrations
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: kubernetesIntegrations
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: iac
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: export_status
  endpoint:
    path: /rest/orgs/{org_id}/jobs/export/{export_id}
    method: GET
    data_selector: data.attributes
    params:
      version: '2021-06-04'
- name: start_export
  endpoint:
    path: /rest/groups/{group_id}/export
    method: POST
    data_selector: data.attributes
    params:
      version: '2021-06-04'
- name: get_export_results
  endpoint:
    path: /rest/groups/{group_id}/export/{export_id}
    method: GET
    data_selector: data.attributes
    params:
      version: '2021-06-04'
- name: export_status
  endpoint:
    path: /rest/groups/{group_id}/jobs/export/{export_id}
    method: GET
    data_selector: data.attributes
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /orgs/{orgId}/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: apps
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: list_tags
  endpoint:
    path: /v1/group/{groupId}/tags
    method: GET
    data_selector: tags
- name: delete_tag
  endpoint:
    path: /v1/group/{groupId}/tags/delete
    method: POST
    data_selector: key
- name: update_group_settings
  endpoint:
    path: /v1/group/{groupId}/settings
    method: PUT
    data_selector: sessionLength
- name: view_group_settings
  endpoint:
    path: /v1/group/{groupId}/settings
    method: GET
    data_selector: requestAccess
- name: list_roles
  endpoint:
    path: /v1/group/{groupId}/roles
    method: GET
    data_selector: ''
- name: list_organizations
  endpoint:
    path: /v1/group/{groupId}/orgs
    method: GET
    data_selector: orgs
- name: add_member
  endpoint:
    path: /v1/group/{groupId}/org/{orgId}/members
    method: POST
    data_selector: userId
- name: list_members
  endpoint:
    path: /v1/group/{groupId}/members
    method: GET
    data_selector: ''
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: group_sso_connections
  endpoint:
    path: /groups/{group_id}/sso_connections
    method: GET
- name: group_users
  endpoint:
    path: /groups/{group_id}/sso_connections/{sso_id}/users
    method: GET
- name: delete_user
  endpoint:
    path: /groups/{group_id}/sso_connections/{sso_id}/users/{user_id}
    method: DELETE
- name: org_memberships
  endpoint:
    path: /groups/{group_id}/org_memberships
    method: GET
- name: create_membership
  endpoint:
    path: /groups/{group_id}/memberships
    method: POST
- name: group_memberships
  endpoint:
    path: /groups/{group_id}/memberships
    method: GET
- name: update_role
  endpoint:
    path: /groups/{group_id}/memberships/{membership_id}
    method: PATCH
- name: delete_membership
  endpoint:
    path: /groups/{group_id}/memberships/{membership_id}
    method: DELETE
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: group_sso_connections
  endpoint:
    path: /groups/{group_id}/sso_connections
    method: GET
- name: group_users
  endpoint:
    path: /groups/{group_id}/sso_connections/{sso_id}/users
    method: GET
- name: delete_group_user
  endpoint:
    path: /groups/{group_id}/sso_connections/{sso_id}/users/{user_id}
    method: DELETE
- name: org_memberships
  endpoint:
    path: /groups/{group_id}/org_memberships
    method: GET
- name: create_group_membership
  endpoint:
    path: /groups/{group_id}/memberships
    method: POST
- name: group_memberships
  endpoint:
    path: /groups/{group_id}/memberships
    method: GET
- name: update_group_membership_role
  endpoint:
    path: /groups/{group_id}/memberships/{membership_id}
    method: PATCH
- name: delete_group_membership
  endpoint:
    path: /groups/{group_id}/memberships/{membership_id}
    method: DELETE
- name: groups
  endpoint:
    path: /rest/groups
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: sso_connections
  endpoint:
    path: /rest/groups/{group_id}/sso_connections
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: users
  endpoint:
    path: /rest/groups/{group_id}/sso_connections/{sso_id}/users
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: org_memberships
  endpoint:
    path: /rest/groups/{group_id}/org_memberships
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: group_membership
  endpoint:
    path: /rest/groups/{group_id}/memberships
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_group_membership
  endpoint:
    path: /rest/groups/{group_id}/memberships/{membership_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_group_membership
  endpoint:
    path: /rest/groups/{group_id}/memberships/{membership_id}
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: organization
  endpoint:
    path: /orgs
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: Infrastructure as Code Settings for an org
  endpoint:
    path: /orgs/org_id/settings/iac
    method: PATCH
- name: Infrastructure as Code Settings for a group
  endpoint:
    path: /groups/group_id/settings/iac
    method: PATCH
- name: iac_settings_org
  endpoint:
    path: /rest/orgs/{org_id}/settings/iac
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: iac_settings_group
  endpoint:
    path: /rest/groups/{group_id}/settings/iac
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/orgs
    method: GET
    data_selector: organizations
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: list_all_ignores
  endpoint:
    path: /org/{orgId}/project/{projectId}/ignores
    method: GET
- name: replace_ignores
  endpoint:
    path: /org/{orgId}/project/{projectId}/ignore/{issueId}
    method: PUT
- name: add_ignore
  endpoint:
    path: /org/{orgId}/project/{projectId}/ignore/{issueId}
    method: POST
- name: retrieve_ignore
  endpoint:
    path: /org/{orgId}/project/{projectId}/ignore/{issueId}
    method: GET
- name: delete_ignores
  endpoint:
    path: /org/{orgId}/project/{projectId}/ignore/{issueId}
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: list_ignores
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/ignores
    method: GET
    data_selector: issueId
- name: replace_ignore
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/ignore/{issueId}
    method: PUT
- name: add_ignore
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/ignore/{issueId}
    method: POST
- name: retrieve_ignore
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/ignore/{issueId}
    method: GET
- name: delete_ignore
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/ignore/{issueId}
    method: DELETE
- name: import_projects
  endpoint:
    path: /api/v1/projects/import
    method: POST
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: import_projects
  endpoint:
    path: /org/{orgId}/integrations/{integrationId}/import
    method: POST
- name: import_job_details
  endpoint:
    path: /org/{orgId}/integrations/{integrationId}/import/job/{jobId}
    method: GET
- name: import_targets
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}/import
    method: POST
    data_selector: target
    params: {}
- name: get_import_job_details
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}/import/{jobId}
    method: GET
    data_selector: id
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: organization
  endpoint:
    path: /api/v1/orgs
    method: GET
    data_selector: orgs
    params: {}
- name: scm_contributors_count
  endpoint:
    path: /scm-contributors-count
    method: GET
    data_selector: records
    params: {}
- name: open_source_projects
  endpoint:
    path: /open-source-projects
    method: GET
    data_selector: records
    params: {}
- name: integration
  endpoint:
    path: /orgs/{orgId}/integrations
    method: GET
    data_selector: integrations
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: integrations
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: kubernetes
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: iac
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: integration
  endpoint:
    path: /orgs/{orgId}/integrations
    method: GET
    data_selector: integrations
    params: {}
- name: add_integration
  endpoint:
    path: /v1/org/{orgId}/integrations
    method: POST
    data_selector: id
    params: {}
- name: list_integrations
  endpoint:
    path: /v1/org/{orgId}/integrations
    method: GET
    data_selector: github
    params: {}
- name: get_integration_by_type
  endpoint:
    path: /v1/org/{orgId}/integrations/{type}
    method: GET
    data_selector: id
    params: {}
- name: update_integration
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}
    method: PUT
    data_selector: id
    params: {}
- name: update_integration_settings
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}/settings
    method: PUT
    data_selector: autoDepUpgradeLimit
    params: {}
- name: clone_integration
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}/clone
    method: POST
    data_selector: newIntegrationId
    params: {}
- name: delete_credentials
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}/authentication
    method: DELETE
    data_selector: null
    params: {}
- name: switch_token
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}/authentication/switch-token
    method: POST
    data_selector: null
    params: {}
- name: provision_token
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}/authentication/provision-token
    method: POST
    data_selector: provisionalBrokerToken
    params: {}
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: invite_user
  endpoint:
    path: /rest/orgs/{org_id}/invites
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: list_pending_invitations
  endpoint:
    path: /rest/orgs/{org_id}/invites
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
      limit: 10
- name: cancel_invitation
  endpoint:
    path: /rest/orgs/{org_id}/invites/{invite_id}
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: Snyk Data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
    params: {}
- name: issues_for_package
  endpoint:
    path: /rest/orgs/{org_id}/packages/{purl}/issues
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: issues_for_packages
  endpoint:
    path: /rest/orgs/{org_id}/packages/issues
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: issues_by_org_id
  endpoint:
    path: /rest/orgs/{org_id}/issues
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_issue
  endpoint:
    path: /rest/orgs/{org_id}/issues/{issue_id}
    method: GET
- name: get_issues_by_group_id
  endpoint:
    path: /rest/groups/{group_id}/issues
    method: GET
- name: issue
  endpoint:
    path: /rest/groups/{group_id}/issues/{issue_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: issues_by_group
  endpoint:
    path: /rest/groups/{group_id}/issues
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: orgs
  endpoint:
    path: /v1/orgs
    method: GET
    data_selector: orgs
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: list_jira_issues
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/jira-issues
    method: GET
    data_selector: issueId
- name: create_jira_issue
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/issue/{issueId}/jira-issue
    method: POST
    data_selector: jiraIssue
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: learning_program
  endpoint:
    path: /tenants/{tenant_id}/learn/learning_programs
    method: GET
    data_selector: programs
    params: {}
- name: participants
  endpoint:
    path: /tenants/{tenant_id}/learn/learning_programs/{learning_program_id}/participants
    method: GET
    data_selector: participants
    params: {}
- name: learning_programs
  endpoint:
    path: /tenants/{tenant_id}/learn/learning_programs
    method: GET
    data_selector: records
- name: participants
  endpoint:
    path: /tenants/{tenant_id}/learn/learning_programs/{learning_program_id}/participants
    method: GET
    data_selector: records
- name: learning_progress
  endpoint:
    path: /orgs/{org_id}/learn/progress/users
    method: GET
    data_selector: records
- name: learning_programs
  endpoint:
    path: /tenants/{tenant_id}/learn/learning_programs
    method: GET
    data_selector: data
    params:
      version: 2024-05-13~experimental
      limit: 10
- name: learning_program_content
  endpoint:
    path: /tenants/{tenant_id}/learn/learning_programs/{learning_program_id}/contents
    method: GET
    data_selector: data
    params:
      version: 2024-05-13~experimental
      limit: 10
- name: user_learning_progress
  endpoint:
    path: /rest/orgs/{org_id}/learn/progress/users
    method: GET
    data_selector: data
    params:
      version: 2024-05-13~experimental
- name: collective_learning_progress
  endpoint:
    path: /rest/orgs/{org_id}/learn/progress/catalog
    method: GET
    data_selector: data
    params:
      version: 2024-05-13~experimental
- name: bulk_create_assignments
  endpoint:
    path: /rest/orgs/{org_id}/learn/assignments
    method: POST
    data_selector: data
    params:
      version: 2024-05-13~experimental
- name: update_due_date_assignments
  endpoint:
    path: /rest/orgs/{org_id}/learn/assignments
    method: PATCH
    data_selector: data
    params:
      version: 2024-05-13~experimental
- name: list_assignments
  endpoint:
    path: /rest/orgs/{org_id}/learn/assignments
    method: GET
    data_selector: data
    params:
      version: 2024-05-13~experimental
- name: bulk_delete_assignments
  endpoint:
    path: /rest/orgs/{org_id}/learn/assignments
    method: DELETE
    data_selector: data
    params:
      version: 2024-05-13~experimental
- name: learn_catalog
  endpoint:
    path: /rest/learn/catalog
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: licenses
  endpoint:
    path: /api/v1/licenses
    method: GET
    data_selector: records
- name: snyk-cli
  endpoint:
    path: /scan-and-maintain-projects-using-the-cli
    method: GET
    data_selector: results
    params: {}
- name: licenses
  endpoint:
    path: /v1/org/{orgId}/licenses
    method: POST
    data_selector: results
    params:
      orgId: string
- name: Snyk CLI
  endpoint:
    path: /api/v1/cli
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: dep_graph
  endpoint:
    path: /v1/monitor/dep-graph
    method: POST
    data_selector: MonitorDepGraphresponse
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: opensource_settings
  endpoint:
    path: /rest/orgs/{org_id}/settings/opensource
    method: GET
    data_selector: data.attributes
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: organizations
- name: organizations
  endpoint:
    path: /v1/orgs
    method: GET
    data_selector: orgs
- name: create_organization
  endpoint:
    path: /v1/org
    method: POST
- name: remove_organization
  endpoint:
    path: /v1/org/{orgId}
    method: DELETE
- name: update_organization_settings
  endpoint:
    path: /v1/org/{orgId}/settings
    method: PUT
- name: view_organization_settings
  endpoint:
    path: /v1/org/{orgId}/settings
    method: GET
- name: provision_user
  endpoint:
    path: /v1/org/{orgId}/provision
    method: POST
- name: list_pending_user_provisions
  endpoint:
    path: /v1/org/{orgId}/provision
    method: GET
- name: delete_pending_user_provision
  endpoint:
    path: /v1/org/{orgId}/provision
    method: DELETE
- name: set_notification_settings
  endpoint:
    path: /v1/org/{orgId}/notification-settings
    method: PUT
- name: get_organization_notification_settings
  endpoint:
    path: /v1/org/{orgId}/notification-settings
    method: GET
- name: list_members
  endpoint:
    path: /v1/org/{orgId}/members
    method: GET
- name: update_member
  endpoint:
    path: /v1/org/{orgId}/members/{userId}
    method: PUT
- name: remove_member
  endpoint:
    path: /v1/org/{orgId}/members/{userId}
    method: DELETE
- name: update_member_role
  endpoint:
    path: /v1/org/{orgId}/members/update/{userId}
    method: PUT
- name: invite_users
  endpoint:
    path: /v1/org/{orgId}/invite
    method: POST
    data_selector: no content
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: records
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: records
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /orgs
    method: GET
- name: organization
  endpoint:
    path: /orgs/{org_id}
    method: GET
- name: memberships
  endpoint:
    path: /orgs/{org_id}/memberships
    method: GET
- name: organizations
  endpoint:
    path: /rest/orgs
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_organization
  endpoint:
    path: /rest/orgs/{org_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_organization
  endpoint:
    path: /rest/orgs/{org_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: create_org_membership
  endpoint:
    path: /rest/orgs/{org_id}/memberships
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_org_memberships
  endpoint:
    path: /rest/orgs/{org_id}/memberships
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_org_membership
  endpoint:
    path: /rest/orgs/{org_id}/memberships/{membership_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_organization_membership
  endpoint:
    path: /rest/orgs/{org_id}/memberships/{membership_id}
    method: DELETE
    data_selector: '204'
- name: list_organizations_in_group
  endpoint:
    path: /rest/groups/{group_id}/orgs
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: org_level_policy
  endpoint:
    path: /rest/orgs/{org_id}/policies
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_org_level_policies
  endpoint:
    path: /rest/orgs/{org_id}/policies
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_org_level_policy
  endpoint:
    path: /rest/orgs/{org_id}/policies/{policy_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_org_level_policy
  endpoint:
    path: /rest/orgs/{org_id}/policies/{policy_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_org_level_policy
  endpoint:
    path: /rest/orgs/{org_id}/policies/{policy_id}
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: org_policy_events
  endpoint:
    path: /rest/orgs/{org_id}/policies/{policy_id}/events
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: agentic_integrations
  endpoint:
    path: /integrations/developer-guardrails-for-agentic-workflows
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: project
  endpoint:
    path: /orgs/{orgId}/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: update_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}
    method: PUT
    data_selector: response
    params: {}
- name: retrieve_single_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}
    method: GET
    data_selector: response
    params: {}
- name: delete_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}
    method: DELETE
    data_selector: response
    params: {}
- name: add_tag_to_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/tags
    method: POST
    data_selector: response
    params: {}
- name: remove_tag_from_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/tags/remove
    method: POST
    data_selector: response
    params: {}
- name: update_project_settings
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/settings
    method: PUT
    data_selector: response
    params: {}
- name: list_project_settings
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/settings
    method: GET
    data_selector: response
    params: {}
- name: delete_project_settings
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/settings
    method: DELETE
    data_selector: response
    params: {}
- name: move_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/move
    method: PUT
    data_selector: response
    params: {}
- name: project_issue_paths
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/issue/{issueId}/paths
    method: GET
    data_selector: paths
    params: {}
- name: project_dependency_graph
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/dep-graph
    method: GET
    data_selector: depGraph
    params: {}
- name: deactivate_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/deactivate
    method: POST
    data_selector: ''
    params: {}
- name: apply_attributes
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/attributes
    method: POST
    data_selector: attributes
    params: {}
- name: list_aggregated_issues
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/aggregated-issues
    method: POST
    data_selector: issues
    params: {}
- name: activate_project
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/activate
    method: POST
    data_selector: ''
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /orgs/{org_id}/projects
    method: GET
- name: projects
  endpoint:
    path: /rest/orgs/{org_id}/projects
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_project
  endpoint:
    path: /rest/orgs/{org_id}/projects/{project_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: project
  endpoint:
    path: /rest/orgs/{org_id}/projects/{project_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_project
  endpoint:
    path: /rest/orgs/{org_id}/projects/{project_id}
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: pull_request_template
  endpoint:
    path: /rest/groups/{group_id}/settings/pull_request_template
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_pull_request_template
  endpoint:
    path: /rest/groups/{group_id}/settings/pull_request_template
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_pull_request_template
  endpoint:
    path: /rest/groups/{group_id}/settings/pull_request_template
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
- name: issues
  endpoint:
    path: /v1/reporting/issues
    method: POST
    data_selector: results
    params:
      from: YYYY-MM-DD
      to: YYYY-MM-DD
- name: latest_issues
  endpoint:
    path: /v1/reporting/issues/latest
    method: POST
    data_selector: results
- name: test_counts
  endpoint:
    path: /v1/reporting/counts/tests
    method: POST
- name: project_counts
  endpoint:
    path: /v1/reporting/counts/projects
    method: POST
- name: latest_project_counts
  endpoint:
    path: /v1/reporting/counts/projects/latest
    method: POST
- name: issue_counts
  endpoint:
    path: /v1/reporting/counts/issues
    method: POST
- name: latest_issue_counts
  endpoint:
    path: /v1/reporting/counts/issues/latest
    method: POST
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: records
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: records
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: SBOM test run
  endpoint:
    path: /orgs/org_id/sbom_tests
    method: POST
- name: SBOM test run status
  endpoint:
    path: /orgs/org_id/sbom_tests/job_id
    method: GET
- name: SBOM test run result
  endpoint:
    path: /orgs/org_id/sbom_tests/job_id/results
    method: GET
- name: project SBOM document
  endpoint:
    path: /orgs/org_id/projects/project_id/sbom
    method: GET
- name: create_sbom_test_run
  endpoint:
    path: /rest/orgs/{org_id}/sbom_tests
    method: POST
    data_selector: data
    params: {}
- name: get_sbom_test_run_status
  endpoint:
    path: /rest/orgs/{org_id}/sbom_tests/{job_id}
    method: GET
    data_selector: data
    params: {}
- name: get_sbom_test_run_result
  endpoint:
    path: /rest/orgs/{org_id}/sbom_tests/{job_id}/results
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params: {}
- name: get_project_sbom_document
  endpoint:
    path: /rest/orgs/{org_id}/projects/{project_id}/sbom
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params: {}
- name: project_information
  endpoint:
    path: /snyk-platform-administration/snyk-projects/project-information
    method: GET
    data_selector: data
    params: {}
- name: import_log
  endpoint:
    path: /snyk-platform-administration/snyk-projects/import-log
    method: GET
    data_selector: data
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: sast_settings
  endpoint:
    path: /rest/orgs/{org_id}/settings/sast
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: sast_settings_retrieve
  endpoint:
    path: /rest/orgs/{org_id}/settings/sast
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: service_account
  endpoint:
    path: /orgs/{org_id}/service_accounts
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: service_account
  endpoint:
    path: /rest/orgs/{org_id}/service_accounts
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: list_service_accounts
  endpoint:
    path: /rest/orgs/{org_id}/service_accounts
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_service_account
  endpoint:
    path: /rest/orgs/{org_id}/service_accounts/{serviceaccount_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: get_service_account
  endpoint:
    path: /rest/orgs/{org_id}/service_accounts/{serviceaccount_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_service_account
  endpoint:
    path: /rest/orgs/{org_id}/service_accounts/{serviceaccount_id}
    method: DELETE
    data_selector: data
    params:
      version: '2021-06-04'
- name: manage_client_secret
  endpoint:
    path: /rest/orgs/{org_id}/service_accounts/{serviceaccount_id}/secrets
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: create_service_account
  endpoint:
    path: /rest/groups/{group_id}/service_accounts
    method: POST
- name: get_group_service_accounts
  endpoint:
    path: /rest/groups/{group_id}/service_accounts
    method: GET
- name: update_group_service_account
  endpoint:
    path: /rest/groups/{group_id}/service_accounts/{serviceaccount_id}
    method: PATCH
- name: get_group_service_account
  endpoint:
    path: /rest/groups/{group_id}/service_accounts/{serviceaccount_id}
    method: GET
- name: delete_group_service_account
  endpoint:
    path: /rest/groups/{group_id}/service_accounts/{serviceaccount_id}
    method: DELETE
- name: manage_group_service_account_client_secret
  endpoint:
    path: /rest/groups/{group_id}/service_accounts/{serviceaccount_id}/secrets
    method: POST
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: create_slack_notification_settings
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{bot_id}
    method: POST
    data_selector: data
- name: get_slack_integration_settings
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{bot_id}
    method: GET
    data_selector: data
- name: remove_slack_app_integration
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{bot_id}
    method: DELETE
- name: get_slack_notification_settings_overrides
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{bot_id}/projects
    method: GET
    data_selector: data
- name: create_slack_settings_override
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{bot_id}/projects/{project_id}
    method: POST
    data_selector: data
- name: update_slack_notification_settings
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{bot_id}/projects/{project_id}
    method: PATCH
    data_selector: data
- name: remove_slack_settings_override
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{bot_id}/projects/{project_id}
    method: DELETE
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: registries
    params: {}
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: kubernetes
    params: {}
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: iac
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: slack_channels
  endpoint:
    path: /orgs/{org_id}/slack_app/{tenant_id}/channels
    method: GET
- name: slack_channel_by_id
  endpoint:
    path: /orgs/{org_id}/slack_app/{tenant_id}/channels/{channel_id}
    method: GET
- name: slack_channels
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{tenant_id}/channels
    method: GET
    data_selector: data
    params:
      limit: 1000
      version: '2021-06-04'
- name: slack_channel_by_id
  endpoint:
    path: /rest/orgs/{org_id}/slack_app/{tenant_id}/channels/{channel_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: snapshots
  endpoint:
    path: /snapshots
    method: GET
    data_selector: snapshots
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: apps
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: project_snapshots
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/history
    method: POST
    data_selector: snapshots
    params: {}
- name: project_snapshot_issue_paths
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/history/{snapshotId}/issue/{issueId}/paths
    method: GET
    data_selector: paths
    params: {}
- name: project_snapshot_aggregated_issues
  endpoint:
    path: /v1/org/{orgId}/project/{projectId}/history/{snapshotId}/aggregated-issues
    method: POST
    data_selector: issues
    params: {}
- name: targets
  endpoint:
    path: /api/v1/targets
    method: GET
    data_selector: targets
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: results
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: targets
  endpoint:
    path: /rest/orgs/{org_id}/targets
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: target_by_id
  endpoint:
    path: /rest/orgs/{org_id}/targets/{target_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_target
  endpoint:
    path: /rest/orgs/{org_id}/targets/{target_id}
    method: DELETE
    params:
      version: '2021-06-04'
- name: tenants
  endpoint:
    path: /tenants
    method: GET
- name: tenant
  endpoint:
    path: /tenants/{tenant_id}
    method: GET
- name: tenant_memberships
  endpoint:
    path: /tenants/{tenant_id}/memberships
    method: GET
- name: update_tenant
  endpoint:
    path: /tenants/{tenant_id}
    method: PATCH
- name: update_tenant_membership
  endpoint:
    path: /tenants/{tenant_id}/memberships/{membership_id}
    method: PATCH
- name: delete_tenant_membership
  endpoint:
    path: /tenants/{tenant_id}/memberships/{membership_id}
    method: DELETE
- name: tenants
  endpoint:
    path: /tenants
    method: GET
    data_selector: tenants
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
    data_selector: records
- name: tenants
  endpoint:
    path: /rest/tenants
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: tenant_memberships
  endpoint:
    path: /rest/tenants/{tenant_id}/memberships
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: tenant
  endpoint:
    path: /rest/tenants/{tenant_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: organizations
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: test_yarn
  endpoint:
    path: /v1/test/yarn
    method: POST
    data_selector: issues
    params:
      org: string
- name: test_sbt
  endpoint:
    path: /v1/test/sbt
    method: POST
    data_selector: issues
    params:
      org: string
      repository: string
- name: sbt_test
  endpoint:
    path: /v1/test/sbt/{groupId}/{artifactId}/{version}
    method: GET
    data_selector: issues
    params: {}
- name: test_rubygems
  endpoint:
    path: /test/rubygems
    method: POST
    data_selector: response
- name: rubygems
  endpoint:
    path: /v1/test/rubygems
    method: POST
- name: test_rubygems
  endpoint:
    path: /v1/test/rubygems/{gemName}/{version}
    method: GET
    data_selector: issues
    params:
      org: 4a18d42f-0706-4ad0-b127-24078731fbed
- name: test_pip
  endpoint:
    path: /v1/test/pip
    method: POST
    data_selector: files
    params: {}
- name: pip_test
  endpoint:
    path: /v1/test/pip/{packageName}/{version}
    method: GET
    data_selector: issues
    params: {}
- name: test_npm
  endpoint:
    path: /v1/test/npm
    method: POST
    data_selector: response
    params:
      org: orgstring
- name: test_package
  endpoint:
    path: /v1/test/npm/{packageName}/{version}
    method: GET
    data_selector: response
    params: {}
- name: test_maven
  endpoint:
    path: /v1/test/maven
    method: POST
    data_selector: issues
    params: {}
- name: test_maven_by_coordinates
  endpoint:
    path: /v1/test/maven/{groupId}/{artifactId}/{version}
    method: GET
    data_selector: issues
    params: {}
- name: test_gradle
  endpoint:
    path: /v1/test/gradle
    method: POST
    data_selector: issues
    params: {}
- name: test_gradle
  endpoint:
    path: /v1/test/gradle/{group}/{name}/{version}
    method: GET
- name: test
  endpoint:
    path: /test/govendor
    method: POST
    data_selector: response
    params:
      org: string
- name: test_golangdep
  endpoint:
    path: /test/golangdep
    method: POST
    data_selector: issues
    params:
      org: orgstring
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: golangdep
  endpoint:
    path: /v1/test/golangdep
    method: POST
    data_selector: response
- name: github.com/spf13/jwalterweatherman
  endpoint:
    path: .
    method: GET
- name: github.com/spf13/pflag
  endpoint:
    path: .
    method: GET
- name: github.com/spf13/viper
  endpoint:
    path: .
    method: GET
- name: golang.org/x/crypto
  endpoint:
    path: ssh/terminal
    method: GET
- name: golang.org/x/net
  endpoint:
    path: .
    method: GET
- name: golang.org/x/sys
  endpoint:
    path: .
    method: GET
- name: golang.org/x/text
  endpoint:
    path: .
    method: GET
- name: google.golang.org/genproto
  endpoint:
    path: googleapis/rpc/status
    method: GET
- name: google.golang.org/grpc
  endpoint:
    path: .
    method: GET
- name: gopkg.in/go-playground/validator.v8
  endpoint:
    path: .
    method: GET
- name: gopkg.in/yaml.v2
  endpoint:
    path: .
    method: GET
- name: dep_graph
  endpoint:
    path: /v1/test/dep-graph
    method: POST
    data_selector: issuesData
    params:
      org: string
- name: test_composer
  endpoint:
    path: /test/composer
    method: POST
    data_selector: issues
    params:
      org: orgstring
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Broker Deployment
  endpoint:
    path: /tenants/{tenant_id}/brokers/{install_id}/deployments
    method: GET
- name: Deployment Credential
  endpoint:
    path: /tenants/{tenant_id}/brokers/{install_id}/deployments/{deployment_id}/credentials
    method: GET
- name: Broker Connection
  endpoint:
    path: /tenants/{tenant_id}/brokers/{install_id}/deployments/{deployment_id}/connections
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: broker_deployment
  endpoint:
    path: /rest/tenants/{tenant_id}/brokers/installs/{install_id}/deployments
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: deployment_credential
  endpoint:
    path: /rest/tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/credentials
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: deployment_credential
  endpoint:
    path: /rest/tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/credentials/{credential_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: deployment_context
  endpoint:
    path: /rest/tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/contexts
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: broker_connection
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: list_broker_connections
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: delete_broker_connections
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: update_broker_connection
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections/{connection_id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: broker_connection
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections/{connection_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: bulk_migration
  endpoint:
    path: /tenants/{tenant_id}/brokers/installs/{install_id}/deployments/{deployment_id}/connections/{connection_id}/bulk_migration
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: broker_context
  endpoint:
    path: /rest/tenants/{tenant_id}/brokers/installs/{install_id}/contexts/{context_id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: broker_deployment
  endpoint:
    path: /rest/tenants/{tenant_id}/brokers/deployments
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: broker_connection_integration
  endpoint:
    path: /rest/tenants/{tenant_id}/brokers/connections/{connection_id}/orgs/{org_id}/integrations/{integration_id}
    method: DELETE
    data_selector: null
    params:
      version: '2021-06-04'
- name: integration
  endpoint:
    path: /tenants/{tenant_id}/brokers/connections/{connection_id}/orgs/{org_id}/integration
    method: POST
    data_selector: data
    params:
      version: '2021-06-04'
- name: integrations
  endpoint:
    path: /tenants/{tenant_id}/brokers/connections/{connection_id}/integrations
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: broker_connections
  endpoint:
    path: /orgs/{org_id}/brokers/connections
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params: {}
- name: user_details
  endpoint:
    path: /v1/user/{userId}
    method: GET
    data_selector: object
- name: my_details
  endpoint:
    path: /v1/user/me
    method: GET
    data_selector: object
- name: organization_notification_settings
  endpoint:
    path: /v1/user/me/notification-settings/org/{orgId}
    method: GET
    data_selector: object
- name: project_notification_settings
  endpoint:
    path: /v1/user/me/notification-settings/org/{orgId}/project/{projectId}
    method: GET
    data_selector: object
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: data
    params: {}
- name: user_details
  endpoint:
    path: /rest/self
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: user_by_id
  endpoint:
    path: /rest/orgs/{org_id}/users/{id}
    method: GET
    data_selector: data
    params:
      version: '2021-06-04'
- name: update_user_role
  endpoint:
    path: /rest/groups/{group_id}/users/{id}
    method: PATCH
    data_selector: data
    params:
      version: '2021-06-04'
- name: snyk_projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: snyk_issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: container_registry_integrations
  endpoint:
    path: /scan-with-snyk/snyk-container/container-registry-integrations
    method: GET
    data_selector: records
- name: kubernetes_integration
  endpoint:
    path: /scan-with-snyk/snyk-container/kubernetes-integration
    method: GET
    data_selector: records
- name: iac
  endpoint:
    path: /scan-with-snyk/snyk-iac
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /org/{orgId}/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: webhook
  endpoint:
    path: /orgs/{orgId}/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: create_webhook
  endpoint:
    path: /v1/org/{orgId}/webhooks
    method: POST
    data_selector: object
    params: {}
- name: list_webhooks
  endpoint:
    path: /v1/org/{orgId}/webhooks
    method: GET
    data_selector: results
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /v1/org/{orgId}/webhooks/{webhookId}
    method: GET
    data_selector: object
    params: {}
- name: delete_webhook
  endpoint:
    path: /v1/org/{orgId}/webhooks/{webhookId}
    method: DELETE
    data_selector: object
    params: {}
- name: ping_webhook
  endpoint:
    path: /v1/org/{orgId}/webhooks/{webhookId}/ping
    method: POST
    data_selector: object
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /orgs/org_id/projects
    method: GET
    data_selector: projects
- name: Get targets by org ID
  endpoint:
    path: /snyk-api/reference/targets#orgs-org_id-targets
    method: GET
- name: Get target by target ID
  endpoint:
    path: /snyk-api/reference/targets#orgs-org_id-targets-target_id
    method: GET
- name: Delete target by target ID
  endpoint:
    path: /snyk-api/reference/targets#orgs-org_id-targets-target_id-1
    method: DELETE
- name: Get user details
  endpoint:
    path: /snyk-api/reference/users-v1#user-userid
    method: GET
- name: Get My Details
  endpoint:
    path: /snyk-api/reference/users-v1#user-me
    method: GET
- name: Create a webhook
  endpoint:
    path: /snyk-api/reference/webhooks-v1#org-orgid-webhooks
    method: POST
- name: List webhooks
  endpoint:
    path: /snyk-api/reference/webhooks-v1#org-orgid-webhooks-1
    method: GET
- name: iac_test_results
  endpoint:
    path: /iac/test-results
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: orgs
  endpoint:
    path: /orgs
    method: GET
    data_selector: orgs
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /snyk-api/reference/organizations-v1#org
    method: GET
- name: group_members
  endpoint:
    path: /snyk-api/reference/groups-v1#group-groupid-members
    method: GET
- name: projects
  endpoint:
    path: /snyk-api/reference/projects#orgs-org_id-projects
    method: GET
- name: issues
  endpoint:
    path: /snyk-api/reference/reporting-api-v1#reporting-issues
    method: GET
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
- name: cloud
  endpoint:
    path: /snyk-api/reference/cloud
    method: GET
- name: collection
  endpoint:
    path: /snyk-api/reference/collection
    method: GET
- name: get_group
  endpoint:
    path: /groups/-group_id-
    method: GET
- name: list_accessible_organizations
  endpoint:
    path: /orgs
    method: GET
- name: list_user_organizations
  endpoint:
    path: /organizations-v1/orgs
    method: GET
- name: list_organizations_in_group
  endpoint:
    path: /groups/group_id/orgs
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: project_issue_paths
  endpoint:
    path: /org/<orgId>/project/<projectId>/issue/<issueId>/paths
    method: GET
    data_selector: paths
- name: project_snapshot_issue_paths
  endpoint:
    path: /org/<orgId>/project/<projectId>/history/<snapshotId>/issue/<issueId>/paths
    method: GET
    data_selector: paths
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: integration
  endpoint:
    path: /v1/org/{orgId}/integrations/{integrationId}
    method: PUT
    data_selector: id
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: initiate_export
  endpoint:
    path: /groups/{group_id}/export
    method: POST
- name: validate_export_status
  endpoint:
    path: /groups/{group_id}/jobs/export/{export_id}
    method: GET
- name: fetch_export_results
  endpoint:
    path: /groups/{group_id}/export/{export_id}
    method: GET
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /rest/orgs/{org_id}/packages/{purl}/issues
    method: GET
    data_selector: issues
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: Get a project’s SBOM document
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/sbom-apis/rest-api-get-a-projects-sbom-document
    method: GET
- name: Test an SBOM document for vulnerabilities
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/sbom-apis/rest-api-endpoint-test-an-sbom-document-for-vulnerabilities
    method: POST
- name: List issues for a package
  endpoint:
    path: /snyk-api/using-specific-snyk-apis/issues-list-issues-for-a-package
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: hooks
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /snyk-api/reference/issues
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: iac_results
  endpoint:
    path: /iac/results
    method: GET
    data_selector: results
- name: code_results
  endpoint:
    path: /code/results
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /api/v1/audit_logs
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: organizations
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: iac_test_results
  endpoint:
    path: /iac/test/results
    method: GET
    data_selector: results
- name: code_test_results
  endpoint:
    path: /code/test/results
    method: GET
    data_selector: results
- name: user_management
  endpoint:
    path: /api/v1/user-management
    method: POST
    data_selector: data
- name: audit_logs
  endpoint:
    path: /api/v1/audit-logs
    method: GET
    data_selector: logs
- name: organization_access_requests
  endpoint:
    path: /api/v1/organization-access-requests
    method: POST
    data_selector: request
- name: configure_session_length
  endpoint:
    path: /api/v1/configure-session-length
    method: PATCH
    data_selector: session
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: data
- name: issues
  endpoint:
    path: /v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /orgs
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: Group settings
  endpoint:
    path: /snyk-platform-administration/groups-and-organizations/groups
    method: GET
    data_selector: settings
- name: Organization settings
  endpoint:
    path: /snyk-platform-administration/groups-and-organizations/organizations
    method: GET
    data_selector: settings
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /test
    method: POST
    data_selector: results
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: iac_test_results
  endpoint:
    path: /iac/test-results
    method: GET
    data_selector: results
- name: cli_test_results
  endpoint:
    path: /cli/test-results
    method: GET
    data_selector: results
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: apps
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: test_results
  endpoint:
    path: /test-results
    method: GET
    data_selector: results
    params: {}
- name: apps
  endpoint:
    path: /reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /reference/audit-logs
    method: GET
    data_selector: records
- name: provision_user
  endpoint:
    path: /v1/org/orgId/provision
    method: POST
    data_selector: email
    params: {}
- name: list_pending_provisions
  endpoint:
    path: /v1/org/orgId/provision
    method: GET
    data_selector: email
    params: {}
- name: delete_pending_provision
  endpoint:
    path: /v1/org/orgId/provision
    method: DELETE
    data_selector: ok
    params:
      email: string
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: roles
  endpoint:
    path: /v1/group/{groupId}/roles
    method: GET
    data_selector: roles
- name: members
  endpoint:
    path: /v1/org/{orgId}/members
    method: GET
    data_selector: members
- name: update_member_role
  endpoint:
    path: /v1/org/{orgId}/members/update/{userId}
    method: PUT
    data_selector: response
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: orgs
  endpoint:
    path: /api/v1/orgs
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: organization_members
  endpoint:
    path: /v1/org/{orgId}/members
    method: GET
    data_selector: members
- name: remove_organization_member
  endpoint:
    path: /v1/org/{orgId}/members/update/{userId}
    method: DELETE
- name: group_members
  endpoint:
    path: /v1/group/groupId/members
    method: GET
    data_selector: members
- name: remove_group_member
  endpoint:
    path: /rest/groups/{group_id}/users/{id}
    method: PATCH
- name: delete_group_member
  endpoint:
    path: /rest/groups/{group_id}/sso_connections/{sso_id}/users/{user_id}
    method: DELETE
- name: verify_member_deletion
  endpoint:
    path: /v1/user/userId
    method: GET
- name: audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: logs
    params:
      incremental: timestamp
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: events
    params: {}
- name: search_group_audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs#groups-group_id-audit_logs-search
    method: GET
    data_selector: events
    params: {}
- name: search_organization_audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs#orgs-org_id-audit_logs-search
    method: GET
    data_selector: events
    params: {}
- name: notifications
  endpoint:
    path: /manage-notifications
    method: GET
    data_selector: notifications
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: targets
  endpoint:
    path: /snyk-api/reference/targets#orgs-org_id-targets
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /snyk-api/reference/projects#orgs-org_id-projects
    method: GET
    data_selector: records
- name: broker
  endpoint:
    path: /api/v1/broker
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /snyk-api/reference/apps
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /snyk-api/reference/assets
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /snyk-api/reference/audit-logs
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /snyk-api/reference/projects
    method: GET
    data_selector: projects
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Snyk Broker requires setup of a connected app in Snyk
- Uses OAuth2 with refresh token — requires setup of connected app in Snyk
- Some API responses may include additional metadata
- API requires OAuth2 authentication setup.
- Rate limits apply to API calls.
- OAuth2 authentication is required to access Snyk APIs
- Some API responses may contain nested data structures
- Some API responses may include nested fields that can return nulls
- OAuth 2.0 authentication does not work
- Authentication using API token does not work
- Uses OAuth2 for authentication.
- Uses API key for authentication
- Free and Team plan and trial users have access only to this personal token under
  the user profile.
- Use a personal token with caution if you are authenticating for CI/CD or with the
  API, which is available for Enterprise plan users only.
- Not all features follow all these stages, and timelines for each feature vary.
- The API requires authentication for access.
- Some responses may include null fields in certain cases
- Some objects may return nulls in deeply nested fields
- API rate limits apply — manage your requests accordingly
- Requires setup of API token with appropriate permissions
- OAuth2 authentication is required.
- Requires OAuth2 setup for authentication
- Rate limits may apply depending on API usage
- Uses OAuth2 with refresh token — requires setup of connected app in Snyk API
- Assignments are available in the Snyk Learning Management add-on offering.
- Requires setup of connected app in Snyk
- Some endpoints may have rate limits
- Some endpoints may have rate limits.
- Requires valid Snyk API token.
- Snyk Learn requires users to have a Snyk Account.
- Some responses may contain paginated data
- Some features may require additional permissions.
- Rate limits apply.
- Some APIs may have rate limits.
- Ensure to configure OAuth settings correctly in Snyk
- Requires setup of a Snyk account and OAuth application.
- Uses OAuth2 for authentication
- Requires setup of OAuth2 in Snyk
- Rate limits apply to API calls
- Some API responses may have varying structures
- Some API responses may vary based on user permissions
- Snyk API token permissions users can control
- Revoke and regenerate a Snyk API token
- May have rate limits on API calls
- Uses OAuth2 with refresh token — requires setup of Snyk app
- Ensure proper OAuth setup to access the API
- Ensure to configure the necessary OAuth2 permissions for the app.
- Requires setup of Snyk API token for authentication
- API token permissions can be controlled by users.
- Ensure to handle rate limits.
- Requires setup of OAuth2 tokens
- Focus on fixing vulnerabilities by severity and issue type.
- Requires a connected app for OAuth2 setup.
- Snyk API requires OAuth2 for authentication.
- When deciding your priority for fixing issues, you may see specific packages or
  vulnerabilities that you do not currently want to fix.
- Ensure you add a detailed reason, so the ignore reason is clear to others who see
  this issue.
- Set an expiration date for the ignore rather than having a permanent ignore.
- Uses OAuth2 with refresh token.
- Trial limitations may apply
- Requires OAuth2 setup with Snyk
- Some responses may contain nulls in certain fields
- Ensure you have the correct permissions to access the API
- The API requires OAuth2 for authentication.
- Requires a valid Snyk API token
- API responses may vary based on the organization and project settings
- Requires OAuth2 for authentication
- Some CLI commands may require additional permissions
- Snyk Broker requires a valid token to interact with the API.
- Requires setup of OAuth2 credentials in Snyk
- Enable and configure Snyk on PRs
- Add and configure Snyk to your CI/CD pipeline
- Ensure proper OAuth setup for API access
- OAuth2 setup is required for access.
- Check API rate limits to avoid throttling
- It is common to use the General Settings to limit access for users to permission
  to ignore an issue and to require a reason.
- Auto-provisioning is available only for customers starting a Pilot or Enterprise
  plan.
- 'Provisioning is enabled for these three regions: United States, Europe, Australia.'
- Requires setup of connected app in api
- Some API endpoints may have rate limits
- Snyk API requires authentication
- API requires OAuth2 setup for token management.
- Service accounts are available only for Enterprise plans.
- Group viewers are not able to create service accounts, regardless of their Org role.
- Snyk Broker is available only for Enterprise plans.
- All data, both in transit and at rest, is encrypted.
- Some API calls may require additional scopes.
- Some API endpoints may have rate limits.
- Ensure the API token has the required permissions.
- OAuth2 setup is required for authentication.
- The Snyk FixPR feature is not available for C/C++.
- Integrates with various container registries
- Supports Kubernetes integration
- Snyk features are not supported for Dart and Flutter.
- Snyk API integration requires specific setup of API keys and secrets.
- Requires API token for access.
- May require user permissions for certain endpoints
- OAuth 2.0 authentication is required for API access.
- Ensure the API token has the necessary permissions.
- Snyk supports all versions of Go, including the latest stable version.
- Check the API documentation for specific endpoint behaviors.
- Requires OAuth2 authentication
- Ensure that the API key has the necessary permissions
- Requires setup of OAuth application in Snyk
- Snyk supports Java analysis for Java versions up to SE 21 and is designed to process
  code from newer Java versions where feasible.
- Ensure OAuth tokens are valid and have appropriate scopes.
- Some responses may have pagination
- Requires API token for authentication
- Requires an API token for authentication.
- Requires a valid OAuth token for authentication.
- Rate limiting may apply to API calls.
- Python packages that are operating system-specific and not supported by Linux may
  not be compatible with Snyk SCM scans, leading to errors.
- Ensure correct permissions for the API token.
- OAuth2 with refresh token requires setup of connected app in Snyk.
- Snyk API may have rate limits that affect API calls
- Ensure all authentication credentials are correctly configured
- Rate limits apply to Snyk API usage
- The Snyk Fix PR feature is not available for Swift and Objective-C.
- You cannot declare versions of dependencies in a file that is not accessible to
  Snyk using a Source Code Manager (SCM) integration.
- Requires OAuth2 setup and appropriate scopes.
- Uses OAuth2
- The Snyk Fix PR feature is not available for TypeScript.
- Advanced configuration for Snyk Broker Docker installation
- Advanced configuration for Helm Chart installation
- OAuth2 with refresh token is required.
- Ensure to handle API rate limits when making requests.
- API responses may vary based on user permissions.
- Snyk recommends always using the latest version of the CLI.
- Some projects may return nulls in deeply nested fields
- Snyk Security Scan task requires specific setup and configuration.
- Uses OAuth2 with refresh token — requires setup of Snyk API application
- Requires setup of Snyk API token with appropriate permissions
- 'Start the Snyk MCP server in sse transport mode instead of stdio: snyk mcp -t sse
  --experimental'
- The MCP server can only be run locally when using SSE transport.
- Some integrations may have specific requirements for authentication
- API calls are subject to rate limiting
- Ensure the token has required permissions for the requested resources
- Requires Snyk Enterprise plans with Snyk AppRisk.
- If the Sysdig Agent is not deployed on every node of a cluster, runtime data available
  from this integration may be incomplete.
- Various Sysdig scans run at different intervals, which may cause a delay between
  applying changes to a resource within a cluster and reporting this information through
  the integration.
- Requires an API token for authentication
- Ensure proper scopes are requested during OAuth setup.
- The Snyk Runtime Sensor reports the Loaded package risk factor only for application
  packages.
- Most packages are loaded into memory upon application startup, therefore they will
  be reported only when the Pod is initialized.
- Ensure you have a Snyk service account token ready with the right permissions.
- Only security vulnerabilities will be shown on the Jira Security tab.
- Cloud-hosted Jira implementations require a username and API token authentication.
- Self-hosted implementations can also authenticate with a username and password.
- Some projects may return incomplete data depending on the API limits
- Integration requires setup of appropriate permissions for access to container registries.
- Uses OAuth2 with refresh token — requires setup of OAuth application in Snyk
- Ensure to set up the necessary authentication credentials to access the Snyk API.
- Vulnerabilities detected on initial import of Projects are not sent to Slack. Only
  newly disclosed vulnerabilities from imported Projects are sent to Slack.
- Some integrations may have additional prerequisites.
- Requires valid API token for authentication.
- Only webhooks created with Slack Apps are supported; webhooks created with Slack
  Workflows are not supported.
- API token is required to access the Snyk API.
- Ensure proper OAuth2 scopes are requested during authentication
- EventBridge integrations create an external resource that depends on the configured
  AWS Account ID, Region, and event type
- Snyk API requires OAuth2 authentication.
- OAuth2 authentication setup is required for accessing the API.
- OAuth2 integration requires setup of Snyk app
- Some API calls may return limited data based on permissions
- For customers using Snyk with a single Snyk Organization, all audit logs are captured
  within the scope of the single Organization.
- For customers who have a Snyk Group with child Organizations, actions at the Group
  level are not typically associated with an Organization.
- Some endpoints may require specific permissions or scopes.
- Issues on existing Projects will not be sent to Security Hub unless those issues
  are updated.
- Requires setup of a Snyk account and API integration
- API calls are rate-limited.
- Ensure API token has necessary permissions.
- Ensure you have the correct permissions set for the API client.
- You must create a Service Account in a specific Project.
- You must enable the SCC API in the same Project as the Service Account.
- Ensure the OAuth2 setup is correctly configured before proceeding.
- Snyk API requires setup of connected app
- Snyk recommends using the GitHub Enterprise integration as it enables you to use
  a single GitHub service account personal access token (PAT) across your Snyk Organization
  rather than depending on a PAT for an individual user account.
- In the new app integration, every Snyk Organization can connect to only one workspace
  in Bitbucket Cloud.
- To avoid sending multiple email notifications sent to users, consider disabling
  all the notifications for that Organization.
- Requires OAuth2 setup for authentication.
- Workspaces improves reliability and accuracy of vulnerability detection.
- Repositories are cloned using HTTPS. SSH-based clones are unavailable.
- Ensure that you have the required scopes set for the OAuth token.
- Uses OAuth2 with refresh token — requires setup of a Snyk API token
- Requires setup of connected app in Snyk API
- GitHub custom roles are not supported.
- Snyk uses PRs to tell GitHub Enterprise that a merge is to occur.
- Snyk uses SCM webhooks to track the state of Snyk pull requests.
- Ensure to have the correct permissions set in your Snyk account.
- Requires setup of API token for authentication.
- OAuth2 with refresh token — requires setup of connected app in Snyk
- Setup of connected app in Snyk is required for OAuth2.
- The SCM integrations use an incremental approach to retrieve repositories.
- API requires authentication and proper setup.
- Enable the Snyk Essentials flag in your Snyk Broker deployment environment before
  running the commands.
- OAuth2 authentication required for accessing the Snyk API.
- OAuth2 with refresh token is required for authentication.
- Some responses may have rate limits
- Requires OAuth2 authentication with a connected app in Snyk.
- Requires OAuth2 authentication setup.
- Requires a valid Snyk API token for authentication.
- Requires OAuth2 setup for access.
- Some endpoints may require additional query parameters.
- OAuth2 authentication is required for accessing the API.
- Snyk API token required for authentication
- Requires user authorization setup for OAuth2
- Some responses may include rate limiting information
- Some integrations may have specific IAM role requirements
- A stable build is tested extensively over the course of eight weeks during which
  Snyk development teams use the CLI in the SDLC process
- Snyk does not offer support for the preview channel and expects known issues to
  be present in this channel
- API may have rate limiting
- Snyk CLI does not natively support WSL. It may be possible to install and use the
  CLI in a WSL environment, but compatibility is not guaranteed.
- Some API calls may have rate limits
- OAuth 2.0 tokens are not static. You cannot copy these tokens from your Snyk account
  page.
- Uses OAuth2 with refresh token — requires setup of application in Snyk
- Some API responses may include limits on data returned
- Ensure you have the correct OAuth scopes configured.
- API requires OAuth2 for authentication.
- Requires Snyk account and API token
- Requires setup of API token for access
- Ensure OAuth2 is properly configured in Snyk console.
- Uses OAuth2 with refresh token for authentication
- Some API responses may include rate limits.
- Snyk recommends always using the latest version of the Visual Studio extension.
- OAuth2 authentication requires setup in Snyk.
- Snyk Visual Studio Code extension does not support remote and containerized environments
- Requires OAuth2 setup in Snyk.
- Ensure the client is properly authenticated using the provided OAuth2 flow.
- API requires an Snyk API token for authentication
- The trust feature is enabled by default.
- Some responses may have null values
- Some objects may have nested properties that could return null
- Snyk API requires an API token for authentication.
- Requires setup of authentication tokens in Snyk
- Uses OAuth2 with refresh token – requires setup of connected app in Snyk
- OAuth2 with refresh token requires setup of a connected app in Snyk
- Requires OAuth2 authentication setup in Snyk
- API rate limits are enforced
- Some API responses may contain nulls in deeply nested fields
- Uses OAuth2 for API access.
- Ensure to set up OAuth2 app in Snyk for access.
- Snyk does not build or maintain images that contain end-of-life software by an upstream
  vendor.
- Using custom images will allow you to extend environment support to any environment
  supported by the Snyk CLI.
- Uses OAuth2 with refresh token
- Ensure to handle pagination where applicable.
- Requires setup of OAuth2 for API access
- Requires setup of Snyk account and API tokens
- Be aware of API rate limits
- The default Service role in AWS CodeBuild includes an IAM permission that allows
  the CodeBuild project to pull any secret from the AWS Secrets Manager that starts
  with `/CodeBuild/` in the name.
- Snyk API requires authentication via OAuth2.
- Check API rate limits and adjust requests accordingly.
- Consider using an environment variable to store sensitive information such as your
  Snyk CLI token.
- Snyk scan must be in the same CodeBuild action as the build process to ensure that
  Snyk has access to the full build workspace.
- Requires OAuth2 setup in Snyk
- Rate limits apply to API requests
- Snyk CLI requires authentication using OAuth2.
- Ensure that the client ID and secret are stored securely.
- Snyk API uses OAuth2 for authentication
- Ensure to set the correct permissions for the OAuth scopes.
- Snyk integrates with Bitbucket Pipelines using a Snyk pipe, seamlessly scanning
  your application dependencies and Docker images for security vulnerabilities as
  part of the continuous integration/continuous delivery (CI/CD) workflow.
- Some operations may have rate limits
- Requires setup of OAuth2 with Snyk
- Ensure your configuration (config.yml) file follows version 2.1.
- Add the required environment variables to CircleCI, including the Snyk PAT or API
  token as SNYK_TOKEN.
- Some features may require additional configuration.
- Ensure proper permissions are set for API token
- GitHub Actions will not pass on secrets set in the repository to forks being used
  in pull requests.
- Integrates with multiple container registries and cloud platforms
- Requires an active Snyk account and proper API token
- Some responses may include null values in nested fields
- For more information, see the Snyk Jenkins Plugin repository
- Use a variable for the API token instead of including it directly in pom.xml.
- Requires configuration of OAuth2 credentials
- Uses OAuth2 with refresh token — requires setup of connected app in Snyk.
- Requires setup of OAuth2 for authentication
- Requires proper OAuth setup for accessing Snyk API
- Some API responses may contain paginated data
- Requires setup of OAuth2 for accessing the API
- Ensure to set up a Snyk account for API access.
- Scans are counted when calls are made to the test endpoint.
- Ensure proper OAuth2 setup for authentication.
- This API requires OAuth2 authentication with a refresh token.
- Requires OAuth2 authentication for API access
- The .snyk file can only be used to exclude directories and files from import. It
  cannot be used to ignore vulnerabilities or for any other action, as in other Snyk
  products.
- Currently, the exclude option in the .snyk file applies only to the Snyk Web UI
  and CLI Environments. The exclude option cannot be used when working with Snyk Code
  in an IDE environment.
- In certain situations, your excluded files may not be excluded if there is an invalid
  .snyk file. In these situations, the scan continues without the .snyk file.
- When using the syntax in the .snyk YAML file, pay careful attention to new lines
  and their indentation.
- Using the wrong indentation will prevent the execution of your excluding specification.
- Do NOT use tabs for indentation. Use only spaces for indentation.
- Check for required scopes for each endpoint.
- Deactivating a Project keeps it on the Projects page along with the issues count
  from the last scan.
- Deleting the Project removes all values from the page.
- Ensure to follow the OAuth setup instructions for proper authentication.
- Some endpoints may require specific permissions.
- Some responses may vary based on project configurations
- Requires setup of OAuth in Snyk
- Some endpoints may require specific scopes.
- Requires setup of Snyk API token with proper permissions.
- Some API responses may vary based on account settings
- Snyk for Bazel is supported only for Snyk Open Source.
- The recommended approach is to test and monitor using the Dep Graph API.
- Requires authentication using OAuth2 with refresh token.
- Ensure OAuth 2.0 tokens are correctly configured in the environment.
- Ensure you have the necessary permissions for API access.
- Snyk Code only scans and tests new repositories that are imported to Snyk.
- If a repository has already been imported, Snyk Code analysis will not be applied.
- Snyk Code creates a single Project for all the imported files from a repository.
- Requires OAuth2 setup and connected app configuration.
- Requires setup of a Snyk account and API token.
- Some endpoints may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of API token in Snyk
- For cloud-hosted container registries, Snyk does not import and scan images that
  are larger than 2GB in size.
- Ensure to set the correct scopes for authentication
- Setup requires API key and OAuth2 authentication.
- Some API responses may vary based on user permissions.
- Requires OAuth2 setup in the Snyk application.
- Some API calls may return rate limits or require specific scopes
- Requires setup of connected app in Snyk for OAuth2
- Requires OAuth2 setup with Snyk account
- Requires OAuth 2.0 authentication for accessing API
- OAuth2 is required for authentication.
- Users can control Snyk API token permissions.
- You must use the Snyk CLI to scan ARM configuration files.
- Requires proper setup of OAuth2 application on Snyk
- OAuth2 authentication is required for API access.
- Check permissions for API tokens to ensure access to required resources.
- Ensure to set appropriate OAuth scopes for access.
- Ensure proper OAuth setup in Snyk for access
- Ensure that the OAuth application is properly set up in Snyk.
- API calls may be rate limited.
- Snyk API requires setup of OAuth2 for authentication.
- Ensure OAuth scopes are correctly set up.
- You should use a secondary token with a broad, complete view of the code repository.
- The first import, synchronization, can take up to 24 hours to complete.
- Requires setting up OAuth2 credentials in Snyk
- API rate limits apply
- Ensure correct permissions are set for the API token.
- Requires an API token for access
- Ensure to set up the appropriate OAuth scopes.
- API limits are enforced, be mindful of usage.
- To avoid receiving import notifications, disable notifications for emails.
- Disable fix PRs and PR checks until import is complete to avoid extra requests.
- Snyk API requires API token for authentication
- Requires authentication using OAuth2.
- Ensure you have the correct permissions set in the Snyk API.
- Requires Snyk API key setup
- Ensure to configure OAuth2 client in Snyk.
- Uses OAuth2 — requires setup of connected app in Snyk
- Some APIs may have rate limits that can affect data retrieval.
- Ensure that the required OAuth scopes are granted.
- The synchronization between Asset Class and the Insights UI can take up to 3 hours.
- OAuth 2.0 authentication is required for accessing the API.
- Integrate with various container registries.
- Ensure correct permissions are set for container registry access.
- Ensure to handle token expiration properly.
- Ensure to handle token expiration as per OAuth2 flow
- Some API responses may include null values
- Priority score is enabled for Snyk Container, Snyk Code, Snyk IaC, and Snyk Open
  Source issues.
- Risk score must first be enabled from the Snyk Preview screen.
- Requires Snyk API token for access.
- Some endpoints may require additional permissions
- Priority Scores are read-only and cannot be hidden.
- Snyk continually refines its prioritization algorithm to include new factors.
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- Risk Score is in Early Access and available for Snyk Open Source and Snyk Container,
  with Snyk Enterprise and Snyk Free plans.
- Risk Score replaces the Priority Score directly.
- Risk Score is not available in the CLI.
- Requires valid API token for authentication
- Requires authentication setup with OAuth2.
- You can ignore a vulnerability by creating a .snyk YAML file or modifying the existing
  .snyk file.
- OAuth 2.0 authentication
- Issues is nested in the main left menu and provides information about the identified
  issues.
- OAuth2 requires setup of connected app in Snyk
- Requires a valid Snyk API token for authentication
- Risk factors are available only for Snyk AppRisk.
- Risk factor settings may take up to four hours to take effect.
- Requires setup of OAuth app in Snyk
- API rate limits may apply based on usage
- Integrates with various container registries and Kubernetes.
- OAuth2 is required for accessing the API.
- The Insights page is available only for Snyk AppRisk users.
- Ensure to set up OAuth2 credentials in the Snyk dashboard.
- Requires authentication via API key.
- Ensure to configure the necessary OAuth scopes during app setup.
- Uses API key for authentication.
- Malicious packages may be publicly available for only a few minutes until identified
  and taken down.
- Malicious packages can allow attackers to run remote code on the target machine.
- API token required for authentication
- Vulnerabilities that are not exploitable are unlikely to pose a security threat
  to your application and can therefore be de-prioritized for fixing.
- Exploitability depends on the context. Examples of context include the environment,
  the settings, and how the developer uses a package.
- Snyk reachability analysis allows you to analyze risk by identifying whether your
  application is calling a code element related to the vulnerability.
- Some endpoints may require additional parameters.
- API requires authentication with OAuth2.
- API may have rate limits
- Snyk API requires authentication and proper OAuth2 setup.
- The CLI automatically uses the .snyk file if it is present.
- If you merge the .snyk file with the rest of your code, the rules in the .snyk file
  are applied on top of the database rules created in the Snyk Web UI.
- Some API calls may be subject to rate limiting
- Some API calls may return rate limit exceeded errors
- Default policies can be applied only to Organizations, not Project attributes.
- The default policy cannot be deleted; however, the default policy name, description,
  and rules can be edited.
- Requires setup of OAuth application in Snyk.
- Policies applied to Organizations are in effect when you run the `snyk test` or
  `snyk monitor` CLI commands.
- Snyk API requires OAuth2 authentication setup.
- Responses may vary based on user permissions
- Snyk API requires OAuth2 authentication for access.
- Policies can be applied across all stages of the SDLC
- The .snyk file is a policy file that Snyk uses to define certain analysis behaviors
- API supports OAuth2, requires token management.
- OAuth 2.0 authentication is required for accessing the Snyk API.
- OAuth2 with refresh token is required for API access.
- Requires setup of connected app for OAuth2
- API token is required for authentication.
- Issues Analytics is only available for customers under Enterprise plans.
- Data is refreshed in Issues Analytics daily, approximately between 13:00 and 14:00
  UTC.
- Some endpoints may have rate limits applied.
- Requires OAuth2 authentication for accessing the API.
- Some scans may return incomplete data or errors depending on the configuration.
- Snyk API requires authentication for access
- Snyk Reporting is available only with Enterprise plans.
- Deactivated Projects and their respective results will not appear in the Reports
  area.
- Ensure you have the correct OAuth scopes set for API access.
- The PCI-DSS v4.0.1 report is in Early Access and available only with Enterprise
  plans.
- Requires SCM Group integration for viewing last commit data
- Ensure to manage API tokens securely.
- Rate limits are enforced for all API calls.
- Snyk permissions are required to access container registries.
- Uses OAuth2 with refresh token — requires setup of Snyk API token
- Data is available in reporting approximately one hour after a scan occurs.
- Data refreshes hourly and should, therefore, always be updated within two hours.
- Requires setup of OAuth2 connected app in Snyk
- Snyk Container provides integrations with various container registries and Kubernetes.
- API requires proper authentication setup to access container data.
- The data share itself is provided as a read-only database and is accessible according
  to Snowflake standard role-based access control.
- Data available within the share refreshes within approximately two hours.
- Uses Snyk Broker for integration with various platforms
- Rate limits apply to all API requests
- Using OAuth2 with refresh token — requires setup of connected app in Snyk
- Ensure to authenticate for accessing the API
- Rate limits apply for API access
- Rate limits apply to API usage
- API rate limits apply — consult the documentation for details.
- Some responses may include nested objects
- Some endpoints may have rate limits that apply.
- Requires OAuth2 authentication with a refresh token.
- Requires setup of API tokens for access
- Ensure proper OAuth scopes are set for the application
- To set an API token to have read-only permissions so the user is unable to write
  to the platform, use a service account and set it to Group Viewer.
- Service accounts at the Organization level have only Organization Admin and Organization
  Collaborator permissions. Thus, to set a service account to view only, you must
  use a Group-level service account.
- The API may have breaking changes to response properties.
- Ensure to check the required fields for each endpoint.
- Some endpoints may have breaking changes reflected in the documentation.
- Required permissions for various endpoints include tenant.edit and tenant.read.
- Create a org membership for a user with role
- Returns all memberships of the org
- Access to Org level Policy APIs is currently restricted via 'snykCodeConsistentIgnores'
  feature flag and will result in a 403 Forbidden error without the flag enabled.
- Ensure correct permissions are set for API tokens
- Requires API token setup in Snyk account
- Requires Snyk account and API key for access
- Some responses may include rate limits
- Requires setup of OAuth2 application in Snyk
- Snyk API provides various integrations and functionalities.
- Requires OAuth2 with refresh token for access.
- 'Requires permissions: View Organization (org.read)'
- Ensure to have valid OAuth credentials for Snyk API access.
- Some API responses may include nested fields
- Requires setup of API token for authorization
- Requires setup for API token authorization
- Uses OAuth2 with refresh token — requires setup of connected app in API
- API rate limits may apply.
- API key is required for authentication
- Snyk Broker requires authentication for accessing data.
- Requires proper setup of OAuth2 for token management.
- API may have rate limits on requests.
- Requires OAuth2 with refresh token for authentication
- Requires setup of Snyk account for API access
- Ensure correct OAuth scopes are set up.
- This document uses the REST API.
- Snyk API documentation includes authentication information and API access details.
- OAuth2 with refresh token required.
- API might have rate limits.
- Some responses may include nulls in deeply nested fields
- Requires API key to be passed in headers.
- Rate limits can apply based on usage.
- OAuth2 authentication required
- The v1 API will eventually be deprecated, as further Snyk developments are now focused
  on the REST API.
- The rate limit is up to 150 requests per minute, per user.
- Current rate limit is up to 150 requests per minute, per user.
- Ensure proper OAuth2 token management for continuous access
- API_KEY must have access to the organization
- Requires setup of a connected app in Snyk
- Some API responses may contain null values
- Requires authentication setup for container registry integrations
- Ensure to set up the correct OAuth permissions.
- Required permissions include View Organization reports (org.report.read) and View
  reports (group.report.read)
- Requires setup of connected app in Snyk.
- Some API responses may vary based on the user's access permissions.
- Ensure proper OAuth2 configuration for API access
- Use OAuth2 with refresh token — requires setup of connected app in Snyk
- Requests to list members are limited to one per minute.
- Some endpoints may return data in different formats
- Some API responses may have rate limit restrictions
- Snyk permissions to access different container registries may require specific setup.
- Some endpoints may require additional permissions based on the user roles.
- Ensure you have set up an OAuth2 app in Snyk to obtain credentials.
- Some objects may return null values in deeply nested fields.
- Uses OAuth2 — requires setup of API token in Snyk
- Some endpoints may have rate limiting
- Ignores from .snyk files are not included here.
- Requires an active Snyk account for API access
- Requires OAuth2 setup with Snyk.
- Ensure to request necessary scopes during authentication.
- Requires setup of API keys in the Snyk dashboard.
- API token permissions can be controlled by users
- Ensure to handle OAuth token expiration properly
- API responses may vary based on user permissions
- Snyk Broker requires setup of connected app.
- Requires OAuth2 setup for API access
- Some API responses may vary based on account permissions
- Requires API key for access
- Rate limits may apply
- Some endpoints may return paginated results
- Requires a valid Snyk API token for access
- This document uses the v1 API, which will eventually be deprecated, as further Snyk
  developments are now focused on the REST API.
- The Jira integration is available to customers on the pro or enterprise plan.
- At the moment, the usage of the Jira integration via the API is not supported for
  Snyk Infrastructure as Code.
- Ensure proper OAuth setup to access resources
- Requires setup of APIToken for authentication
- Requires setup of Snyk application credentials.
- When you import or update Projects, changes will be reflected in the endpoint results
  after a one-hour delay.
- The API_KEY must have access to this organization.
- Experimental! Note these endpoints are subject to change and only available to selected
  users.
- Requires API key for authentication
- Data may not be available for all projects
- Data may be rate limited based on the account type
- Each request to Snyk has to be done in the context of a Snyk organization.
- The API token used requires Org Admin permissions.
- The API_KEY must have admin access to this organization.
- Integrates with various container registries.
- Supports Kubernetes integration.
- Org level Policy APIs are only available for use with Code Consistent Ignores.
- Requires setup of OAuth2 for accessing the API.
- Snyk API requires a valid API token for access.
- Rate limits apply to API usage.
- Requires authentication via OAuth2.
- API rate limits apply; throttle requests accordingly.
- Ensure proper permissions are set for OAuth scopes.
- Some operations may require specific permissions configured in the Snyk account.
- Some API responses may vary depending on the user permissions
- Snyk API requires an API token for authentication
- Some endpoints may require additional permissions.
- Ensure proper scopes are requested during authorization.
- The endpoints in this category support only Snyk legacy reporting, not the latest
  release.
- Rate limit is up to 70 requests per minute, per user.
- Data can take up to 9 hours to refresh
- Requires correct OAuth scopes configured for API access
- Snyk API uses OAuth2 for authentication.
- Requires setup of Snyk API token for access
- Requires setup of Snyk Apps for OAuth2 authentication.
- 'Supported SBOM formats: CycloneDX 1.4 JSON, CycloneDX 1.5 JSON, CycloneDX 1.6 JSON,
  SPDX 2.3 JSON'
- 'Supported purl types: apk, cargo, cocoapods, composer, conan, deb, gem, generic,
  golang, hex, maven, npm, nuget, pub, pypi, rpm, swift'
- Some API responses may include nulls in deeply nested fields
- API rate limits may apply
- Uses OAuth2 with refresh token - requires setup of connected app in Snyk
- Ensure to set up OAuth2 for authentication
- API has rate limits that may affect data retrieval
- Ensure to set up OAuth2 credentials properly.
- OAuth2 authentication requires setup of a Snyk API token.
- Requires setup of an OAuth2 application in Snyk
- Requires valid Snyk API token for authentication
- Requires OAuth2 setup
- Check for rate limits on API calls
- Ensure OAuth scopes are set correctly for the API calls.
- API_KEY must have access to the specified organization.
- Rate limits apply for API calls
- API access requires an API key.
- Rate limiting may apply.
- Ensure to manage API token permissions properly.
- Rate limits may apply to API usage.
- Authentication for API is required.
- API requires OAuth2 authentication.
- Rate limits are enforced on API requests.
- Be cautious of rate limits on API calls
- Set up a Snyk App using the OAuth2 API
- Some endpoints may have specific data formats or requirements
- 'Requires permissions: View Organization, Test Packages'
- Path parameters groupId, artifactId, and version are required.
- 'Required permissions: View Organization, Test Packages'
- Denial of Service (DoS) describes a family of attacks, all aimed at making a system
  inaccessible to its intended and legitimate users.
- Test for issues in npm files. You can test your npm packages for issues according
  to their manifest file & optional lockfile using this action.
- Upgrade `ms` to version 0.7.1 or higher.
- Uses application/json for request body.
- Affected versions of `zendframework/zendframework` are vulnerable to Authentication
  Bypass.
- Affected versions of `zendframework/zendframework` are vulnerable to SQL Injection.
- Upgrade `symfony/symfony` to versions 2.7.33, 2.8.26, 3.2.13, 3.3.6 or higher.
- Required permissions include View Tenant Details (tenant.read) and Edit Tenant Details
  (tenant.edit).
- Ensure to set up OAuth2 correctly to avoid authorization issues.
- Requires setup of OAuth2 for access
- Ensure to handle token expiration
- Requires setup of OAuth2 credentials
- The Webhooks API is in beta.
- While the API is in beta, Snyk may change the API and the structure of webhook payloads
  at any time, without notice.
- Requires permissions to View Organization and View Outbound Webhooks
- Ensure to comply with API rate limits.
- Uses OAuth2 with refresh token — requires app registration in Snyk
- Paging of issues and projects may need to be handled manually
- The target.owner is case-sensitive.
- The query-string parameter for types is optional. The endpoint does not enforce
  specific project types and will return `no matching projects` if you enter a string
  that does not match a requested project type.
- OAuth2 with refresh token required for API access
- Requires OAuth2 setup for API access.
- Both endpoints can take a query string allowing for pagination.
- By default, the first page of 100 results is returned. Up to 1,000 results can be
  requested per page.
- OAuth2 with token required for API access
- Requires API key for authorization
- The API allows up to 20 export requests per hour.
- Data updates approximately every two hours.
- Requires proper OAuth2 setup to access the API
- OAuth2 is required for authentication
- Ensure proper scopes are set for access
- Snyk API requires an OAuth2 token for access.
- Ensure to configure OAuth settings in Snyk.
- Requires valid OAuth2 credentials for accessing API endpoints.
- Brownouts for APIs that are part of an end-of-life cycle will occur at 12:00 UTC.
- Make sure to set up the necessary OAuth scopes in the Snyk dashboard.
- Requires OAuth2 setup for Snyk integration
- Group-level roles are available only for Enterprise plans.
- Snyk recommends structuring your Organizations so that there are no more than 2,000
  users in each Organization.
- Snyk recommends limiting each Organization to no more than 10,000 Projects, and
  does not allow more than 25,000 Projects in each Organization.
- Requires setup of OAuth2 for authentication.
- Ensure to configure your API tokens correctly to avoid authentication errors.
- API token is required for authentication
- Requires a Snyk API token for authentication
- Requires API key for authentication.
- Some projects may return incomplete data.
- Requires setup of OAuth2 authentication.
- Some integrations may require additional permissions
- Some features may require specific permissions.
- Billing and Usage dashboard provides credit consumption and usage patterns across
  all Groups and Organizations.
- Managing user roles is available only with Enterprise plans.
- Service accounts are available only with Enterprise plans.
- Group-level roles are available only with Enterprise plans.
- These templates are not provided as pre-defined roles in Snyk.
- If you create a Group level custom role that enables creation of new Organizations,
  you must include the Add Organizations and View Groups permissions.
- Some API endpoints may require specific permissions.
- API has rate limits that may affect data extraction.
- Some endpoints require specific scopes for access.
- Ensure the client ID and secret are stored securely.
- Rate limiting may apply; monitor API usage.
- OAuth2 authentication is required to access the API.
- The API does not support using service accounts as the inviting user or provisioned
  user.
- The inviting user must have the permission 'Provision Users'.
- Run updates with bounded concurrency in batches of ten concurrent requests.
- Uses OAuth2 with refresh token — requires setup of Snyk application
- Some data may have rate limits
- Rate limits may apply to the API usage.
- When a member is removed from an Organization, if the Organization is a part of
  a Group, the user continues to exist in the Group as a Group Member.
- Some requests may result in rate limiting.
- Requires authentication setup using OAuth2
- Setting a Project to inactive does not stop Snyk from sending notifications. You
  must disable notifications separately for that Project.
- Weekly notification emails are sent only to Organization users.
- Requires setup of OAuth2 in the Snyk application
- Integration with various SCMs is supported.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check token validity.'
- '403 Forbidden: Ensure sufficient permissions.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your API token and permissions'
- '403 Forbidden: Ensure you have access to the requested resource'
- Server returned HTTP response code 403 for URL
- '429 Too Many Requests: Exceeded request limit – reduce request frequency'
- '401 Unauthorized: Check API key or OAuth token expiration'
- '401 Unauthorized: Check API token validity'
- '404 Not Found: Ensure the requested resource exists'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '401 Unauthorized: Check your OAuth token and permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '403 Forbidden: Check API token permissions'
- '404 Not Found: Verify endpoint path'
- '429 Too Many Requests: Implement exponential backoff'
- '401 Unauthorized: Check API key validity'
- '401 Unauthorized: Check authentication details'
- '401 Unauthorized: Check API token validity.'
- '429 Too Many Requests: Reduce request frequency.'
- '401 Unauthorized: Check your API token.'
- '401 Unauthorized: Check the OAuth token.'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Check client credentials or token expiration'
- '401 Unauthorized: Check your credentials and token expiration.'
- '429 Too Many Requests: Reduce the frequency of calls'
- '401 Unauthorized: Check client credentials and token'
- '403 Forbidden: Check user permissions'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check API key or token'
- '403 Forbidden: Check permissions for the requested resource'
- '401 Unauthorized: Check your credentials and OAuth scopes.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Recheck API token validity'
- '403 Forbidden: Insufficient permissions for the requested resource'
- '401 Unauthorized: Check your API token or permissions.'
- '403 Forbidden: Ensure you have the necessary access rights.'
- '404 Not Found: Verify the endpoint path.'
- '404 Not Found: Endpoint does not exist.'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Recheck the API key or token'
- '404 Not Found: Ensure the endpoint is correct'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your credentials.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '403 Forbidden: Insufficient permissions to access this resource.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Check client credentials'
- '403 Forbidden: Insufficient permissions'
- '401 Unauthorized: Verify your API token and permissions'
- '401 Unauthorized: Check your token and scopes.'
- '404 Not Found: Verify the endpoint and parameters'
- '429 Too Many Requests: Reduce the frequency of your requests'
- '401 Unauthorized: Check API token or permissions'
- '400 Bad Request: Check your request parameters'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Invalid credentials or token expired.'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify endpoint and parameters'
- The business name provided is already in use.
- An account with this email already exists.
- 'RATE_LIMIT_EXCEEDED: Reduce the number of API calls'
- 'INVALID_CREDENTIALS: Verify client ID and secret'
- '403 Forbidden: Check access permissions for the API'
- '401 Unauthorized: Check your API token or client credentials.'
- '401 Unauthorized: Check your API key and permissions.'
- '401 Unauthorized: Recheck OAuth token or client credentials'
- '403 Forbidden: Check user permissions for API access'
- '404 Not Found: Verify endpoint path and resource availability'
- '403 Forbidden: Check your API key permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Check if the token is valid or has expired.'
- '403 Forbidden: Ensure you have permission to access this endpoint.'
- '401 Unauthorized: Ensure API token is valid and has correct scopes.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '403 Forbidden: Access is denied to the requested resource.'
- '401 Unauthorized: Check API token or permissions.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Retry after some time'
- '401 Unauthorized: Check your access token'
- '401 Unauthorized: Check client credentials and token validity'
- '401 Unauthorized: Check client ID and secret'
- '401 Unauthorized: Check your API token'
- '404 Not Found: Ensure the endpoint exists'
- '404 Not Found: Verify the requested resource exists.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check the API token or OAuth scopes.'
- '403 Forbidden: Ensure the API token has access to the requested resource.'
- '403 Forbidden: Check your API token permissions'
- '500 Internal Server Error: Retry the request'
- '403 Forbidden: Check API access permissions'
- '404 Not Found: Ensure the resource exists'
- '401 Unauthorized: Verify API token or OAuth settings'
- '401 Unauthorized: Check your credentials and OAuth setup.'
- '429 Too Many Requests: Rate limit exceeded. Please retry later.'
- '401 Unauthorized: Recheck API key validity'
- '403 Forbidden: Check permissions for the API key'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check your token and permissions'
- '401 Unauthorized: Check your API token or its permissions.'
- '404 Not Found: Verify the endpoint.'
- '429 Too Many Requests: Reduce the frequency of requests'
- '401 Unauthorized: Check token validity and permissions'
- '403 Forbidden: Insufficient permissions for this operation'
- Network restrictions may require port 443 to be enabled.
- Error executing binary because of corporate policy (Windows)
- '403 Forbidden: Ensure the token has the correct scopes'
- '404 Not Found: Verify the endpoint or resource exists'
- '401 Unauthorized: Check your API key or token'
- '403 Forbidden: You do not have permission for this action'
- '401 Unauthorized: Check API token and permissions.'
- '401 Unauthorized: Check your API token and permissions.'
- '429 Too Many Requests: Rate limit exceeded, please retry later'
- '401 Unauthorized: Check your authentication credentials.'
- '401 Unauthorized: Check your API key or authentication method.'
- '500 Internal Server Error: Retry the request or check the Snyk service status.'
- '401 Unauthorized: Verify client credentials and token validity'
- '429 Too Many Requests: Implement exponential backoff for retries'
- '403 Forbidden: Check API token permissions.'
- '403 Forbidden: Check permissions and access rights'
- '404 Not Found: Verify the endpoint path and resource ID'
- '429 Too Many Requests: Rate limit exceeded, please retry after some time.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- '401 Unauthorized: Check if the API token is valid.'
- '404 Not Found: Ensure the endpoint is correct.'
- '404 Not Found: Check endpoint URL and parameters'
- '401 Unauthorized: Check if your token is valid.'
- '403 Forbidden: Ensure you have the correct permissions.'
- 'LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify client credentials.'
- '401 Unauthorized: Check your API token or OAuth scopes.'
- '403 Forbidden: Ensure your token has the right permissions.'
- '401 Unauthorized: Check client credentials or token.'
- '403 Forbidden: Ensure you have the required permissions'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Check API key or token validity'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Check OAuth token validity'
- '401 Unauthorized: Check your token and OAuth scopes.'
- '400 Bad Request: Ensure your request parameters are correct.'
- '401 Unauthorized: Invalid API token or insufficient permissions.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests'
- '401 Unauthorized: Check API token and permissions'
- '429 Too Many Requests: Throttle requests to comply with rate limits'
- '401 Unauthorized: Ensure valid API token and permissions'
- '403 Forbidden: Check if the user has access to the requested resource'
- '401 Unauthorized: Ensure API token is valid.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Check credentials.'
- '404 Not Found: Check endpoint URL.'
- '401 Unauthorized: Check the validity of the OAuth token.'
- '401 Unauthorized: Invalid API token'
- '401 Unauthorized: Check if the token is valid and has necessary permissions'
- '403 Forbidden: Ensure that the authenticated user has access to the requested resources'
- OAuth 2.0 authentication does not work
- Authentication using API token does not work
- '401 Unauthorized: Check your OAuth token or scopes'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Invalid credentials'
- '401 Unauthorized: Check OAuth credentials.'
- '401 Unauthorized: Check your API token or permissions'
- '403 Forbidden: You don''t have permission to access this resource'
- '404 Not Found: Check the endpoint or resource ID'
- '401 Unauthorized: Check your token'
- '404 Not Found: Verify the endpoint'
- '403 Forbidden: Ensure you have the right permissions.'
- '404 Not Found: Verify the endpoint and parameters.'
- '401 Unauthorized: Verify OAuth token validity'
- '401 Unauthorized: Check your API token or OAuth2 credentials.'
- '404 Not Found: Ensure the endpoint is correct and accessible.'
- '400 Bad Request: Verify request parameters and payload.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '429 Too Many Requests: Reduce the rate of API calls'
- Advanced Security must be enabled for this repository to use code scanning.
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check the provided credentials'
- '401 Unauthorized: Check your API token or OAuth configuration'
- '403 Forbidden: Ensure your account has the necessary permissions'
- '401 Unauthorized: Verify the API token and permissions'
- '403 Forbidden: Check user permissions for the requested resource'
- '404 Not Found: Resource does not exist or is inaccessible'
- Missing or differing results in Snyk Code
- '401 Unauthorized: Check your access token.'
- '401 Unauthorized: Recheck API token or permissions'
- '401 Unauthorized: Verify authentication credentials.'
- '403 Forbidden: Ensure permissions are correct.'
- '401 Unauthorized: Check your OAuth token.'
- '401 Unauthorized: Verify token is valid.'
- '401 Unauthorized: Check OAuth token'
- '401 Unauthorized: Check your client_id and client_secret.'
- 'RATE_LIMIT_EXCEEDED: Reduce API call frequency'
- 'INVALID_CREDENTIALS: Check your API key or OAuth tokens'
- '403 Forbidden: Ensure correct permissions are set'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Invalid token.'
- '401 Unauthorized: Check if the token is valid or expired.'
- '403 Forbidden: Ensure you have access to the requested resource.'
- '401 Unauthorized: Recheck API token permissions or token expiration'
- '401 Unauthorized: Check token validity'
- '404 Not Found: Verify endpoint and resource availability.'
- '403 Forbidden: Check access rights for the requested resource'
- '401 Unauthorized: Check your authentication credentials'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify the resource path.'
- '500 Internal Server Error: Retry the request later.'
- '401 Unauthorized: Check the OAuth token and scopes.'
- '403 Forbidden: Verify API permissions'
- '401 Unauthorized: Check your API token or OAuth credentials'
- '403 Forbidden: Ensure you have permissions for the requested resource'
- '401 Unauthorized: Check your token and permissions.'
- '403 Forbidden: You do not have access to this resource.'
- '403 Forbidden: Ensure API access permissions'
- '404 Not Found: Verify the endpoint path and resource.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check OAuth token validity.'
- '403 Forbidden: You do not have permission to access this resource'
- '429 Too Many Requests: You have hit the rate limit. Reduce your request rate.'
- '403 Forbidden: Check your API key and permissions.'
- '429 Too Many Requests: Rate limit exceeded, retry after some time.'
- 'Error: ENFILE: file table overflow, open'
- 'Error: EMFILE, too many open files'
- 'ERROR: HttpError: request to https://github.private.com failed, reason: self signed
  certificate in certificate chain'
- '403 Forbidden: Check user permissions for this resource'
- 'PR-FAILURES-0001: Fix scenario not supported'
- 'PR-FAILURES-0002: SCM rate limit'
- 'PR-FAILURES-0003: Unauthorised access'
- 'SNYK-PACKAGES-0001: Unsupported ecosystem'
- 'SNYK-PACKAGES-0003: Metadata not found'
- 'SNYK-PACKAGES-0005: No mature versions found for package'
- 'SNYK-PACKAGES-0006: No recommended version found'
- 'SNYK-PACKAGES-0007: Package is already at latest version'
- 'SNYK-PACKAGES-0008: Version downgrade is not supported'
- 'SNYK-PACKAGES-0009: Invalid version'
- 'SNYK-PR-TEMPLATE-0001: Failed to get pull request attributes'
- 'SNYK-PR-TEMPLATE-0002: Not found'
- 'SNYK-PR-TEMPLATE-0003: Failed to compile pull request template'
- 'SNYK-PR-TEMPLATE-0004: Failed to parse pull request attributes'
- 'SNYK-PR-TEMPLATE-0005: Failed to load YAML file after substituting Snyk variables'
- 'SNYK-PR-TEMPLATE-0006: Failed to generate hash for custom PR template'
- 'SNYK-PR-TEMPLATE-0007: Unable to create pull request template'
- 'SNYK-PR-TEMPLATE-0008: Unable to get pull request template'
- 'SNYK-PR-TEMPLATE-0009: Unable to delete pull request template'
- 'SNYK-PR-TEMPLATE-0010: Invalid payload'
- 'SNYK-PR-TEMPLATE-0011: Failed to load JSON file after substituting Snyk variables'
- 'SNYK-PR-TEMPLATE-0012: Failed to render default PR template'
- 'SNYK-0001: Service temporarily throttled'
- 'SNYK-0002: Server error response'
- 'SNYK-0003: Client request cannot be processed'
- 'SNYK-0004: Server communication error'
- 'SNYK-0005: Authentication error'
- 'SNYK-0006: Test limit reached'
- 'SNYK-0007: Organization is not part of a group'
- 'SNYK-0008: Unable to fulfill the request'
- 'SNYK-0009: Unable to fulfill the request'
- 'SNYK-9999: Unable to process request'
- 'SNYK-AIBOM-0001: Unexpected error'
- 'SNYK-AIBOM-0002: Forbidden'
- 'SNYK-AIBOM-0003: No supported files'
- 'SNYK-CBI-0001: Versioning schema does not support tag'
- 'SNYK-CBI-0002: Missing required parameter'
- 'SNYK-CBI-0003: Project does not exist'
- 'SNYK-CBI-0004: Project is not a container image'
- 'SNYK-CBI-0005: Unable to retrieve group'
- 'SNYK-CBI-0006: The values in the request do not match'
- 'SNYK-CBI-0007: The request body cannot be updated'
- 'SNYK-CBI-0008: Invalid pagination cursor'
- 'SNYK-CBI-0009: Unable to sort by version'
- 'SNYK-CBI-0010: Unable to update versioning schema'
- 'SNYK-CBI-0011: Project is already linked to a custom base image'
- 'SNYK-CBI-0012: No versioning schema for repository'
- '400: Unable to apply versioning schema'
- '404: Unable to find custom base image'
- '404: Custom base image does not exist'
- '500: Unable to update custom base image'
- '500: Unable to retrieve project properties'
- '500: Unable to retrieve image collection'
- '400: Unable to create versioning schema'
- '200: Unspecified Error'
- '200: Unable to set environment'
- '200: Possible inconsistent configuration'
- '200: Empty flag option'
- '200: Invalid flag option'
- '200: Unable to get vulnerabilities from resource'
- '200: Missing AUTH token'
- '200: Incomplete command arguments'
- '422: No supported files found'
- '413: Too many vulnerable paths to Project'
- '400: CLI validation failure'
- '200: SCA failure'
- '200: IAC failure'
- '200: SAST failure'
- '200: Feature under development'
- '200: Command is experimental'
- '403: Feature not enabled'
- '504: Request to Snyk API timeout'
- '422: Analysis file count limit exceeded'
- '422: Analysis result size limit exceeded'
- '422: Analysis target size limit exceeded'
- '422: Analysis target includes a file with a name longer than 255 bytes'
- '403: Snyk Code is not enabled'
- '422: Project not supported'
- '409: Sast Rule extension already exists for the Group'
- '400: Organization relationships must be unique'
- '400: Group relationship must match the Group in the requested URL'
- '400: Organization outside of the administrating Group'
- '400: Sast Rule extension limit reached'
- '404: SCM integration not found'
- '400: Bad request'
- '403: Forbidden'
- '406: Not acceptable'
- '404: Not found'
- '405: Method not allowed'
- '413: Request entity too large'
- '401: Unauthorized'
- 'Unsupported media type: HTTP Status 415'
- 'Conflict: HTTP Status 409'
- 'Unable to parse manifest file: HTTP Status 400'
- 'Unable to parse lock file: HTTP Status 400'
- 'Unknown dependency version: HTTP Status 404'
- 'Missing required request header: HTTP Status 422'
- 'Payload missing required elements: HTTP Status 422'
- 'Files cannot be processed: HTTP Status 422'
- 'Cannot get file from source: HTTP Status 500'
- 'Missing environment variable: HTTP Status 500'
- 'Brokered connections not currently supported: HTTP Status 500'
- 'Snyk failed to clone your repository: HTTP Status 422'
- 'Unsupported manifest file type for remediation: HTTP Status 400'
- 'Target framework not supported: HTTP Status 422'
- 'Your C# code is missing a static Main function: HTTP Status 422'
- 'The dotnet CLI is unable to generate a self-contained binary: HTTP Status 422'
- 'The dotnet CLI was unable to restore from private package sources: HTTP Status
  401'
- 'Missing MSBuild Condition Construct in project file: HTTP Status 422'
- 'No target frameworks found in manifest files: HTTP Status 422'
- 'Your global.json is targeting an outdated SDK version: HTTP Status 422'
- 'The 10 GB space limit for downloaded Nuget dependencies has been exceeded: HTTP
  Status 422'
- 'The dotnet CLI is unable to download and install all the required dependencies:
  HTTP Status 422'
- 'Failed to access private module: HTTP Status 400'
- 'Go mod file not found: HTTP Status 400'
- 'OAuth re-authorization required: HTTP Status 422'
- 'Your project repository is missing required files: HTTP Status 422'
- Your project repository has inconsistent vendoring information
- Unsupported external file generation
- Unable to access private dependencies
- Unable to fetch private dependencies
- Toolchain not available
- The 10 GB space limit for downloaded Golang dependencies has been exceeded
- No secure protocol found for repository
- Connection reset by peer
- Invalid zip file
- Go version mismatch
- Invalid Go version in go.mod
- Dial TCP timeout
- Host key verification failed
- Missing module declaration in go.mod
- Go module version constraint not met
- Missing property
- Unable to resolve value for property
- Unable to resolve version for property
- Cyclic property detected in POM file
- Error parsing the XML file
- Invalid coordinates provided
- Skipping group
- Pom file not found
- Missing project from POM
- Cannot resolve the target POM from the input XML
- Cannot resolve the target POM from the repository
- Cannot get the build file repository
- Unable to create hosted git info
- No released version for versions range
- Source is not supported
- Timeout when processing the dependency tree
- Cannot reach one or more Maven repositories configured under your Snyk organisations
  language settings
- No repository found for A NPM package
- Could not parse NPM registry URL
- Could not find a broker resolved URL
- Unable to replace broker URL
- Bad NPM version
- Unknown blob encoding on Github
- No result from forked process
- Child Process Execution Error
- No valid package upgrades
- No dependency updates
- Could not parse JSON file
- Could not Base64 encode
- Could not Base64 decode
- Missing supported file
- 'Invalid configuration: The configuration parameter does not meet the expected data
  type. Please ensure the provided value is of the correct data type.'
- 'Out of Sync Error: Sometimes a project may become out of sync between the lockfile
  and the manifest file. This might happen if the package.json is modified or updated
  but the pnpm-lock.yaml is not.'
- 'Unsupported pnpm lockfile version: The lockfile version is not supported. Supported
  lockfile versions for pnpm include v5 and v6.'
- 'Yarn package not found: Snyk could not find the package in the Yarn registry.'
- 'Unable to reach package registry: Snyk could not reach the node package registry.'
- 'Lock file is outdated: The lock file is outdated. Update the lock file and try
  again.'
- 'Unable to read from remote repository: Snyk does not have sufficient permissions
  to access the repository, or the repository does not exist.'
- 'Unsupported manifest file type for remediation: The provided requirements file
  is not supported by Snyk for Python.'
- 'Received more manifests than expected: Too many manifest files were provided in
  the request body.'
- 'Failed to apply dependency updates: An error occurred while updating dependencies.'
- 'Python package not found: A package listed in the manifest file cannot be found
  in the Python Package Index(PyPI).'
- 'Syntax errors found in manifest file: The manifest file has syntax issues like
  incorrect package names or unsupported characters.'
- 'Python version not supported: At least one of the packages requires a Python version
  that doesn''t match the one used in the project scan.'
- 'Packages versions caused conflicts: Two or more packages have conflicting version
  requirements that cannot be resolved.'
- 'No matching distribution found for one or more of the packages: At least one of
  the packages requires a Python version that doesn''t match the one used in the project
  scan.'
- 'The 10 GB space limit for downloaded Python dependencies has been exceeded: The
  total size of the downloaded Python dependencies in the manifest file exceeds the
  10GB limit.'
- 'Cyclic dependency detected in lockfile: Cyclic dependency detected in lockfile.'
- 'Invalid request: The provided request payload is not valid for the selected ecosystem.'
- 'Build environment not found: The build environment for the provided context could
  not be found.'
- 'Unsupported Ecosystem: The language or package manager is not supported.'
- 'OAuth re-authorization required: Your code is cloned on an isolated environment
  using Git as it is required by Snyk to analyze its dependencies.'
- 'Project too large to be processed: The project cannot be built or processed due
  to requiring more memory than available.'
- 'No default image found in repository: Unable to find the default image.'
- 'SBOM generation export server error: An unexpected error occurred during the SBOM
  generation.'
- 'Dependency graph error: An unexpected dependency graph error occurred.'
- 'Error parsing dependency graph: The dependency graph cannot be parsed due to an
  unexpected error.'
- 'SBOM not supported due to project type: Only SBOMs for Snyk Open Source or Snyk
  Container projects are supported.'
- 'SBOM not supported: Only SBOMs for open source projects are supported.'
- 'Dependency graph request cannot be processed: The server cannot process the request
  due to incomplete data.'
- 'Maven search service unavailable: The upstream Maven search service is not available.'
- 'SHA1 not found: Unable to find the coordinates for the provided SHA1.'
- 'Your Organisation is not authorized to perform this action: You likely don’t have
  access to the features in Beta.'
- 'Authorization request failure: Unexpected error when authenticating.'
- 'Invalid purl: Make sure that the purl is valid.'
- 'Namespace not specified: You have requested a package type that requires a namespace.'
- 'Unsupported ecosystem: The package type is not supported.'
- 'Purl components required: A list of components of the purl spec is required.'
- 'Unsupported purl components: Remove the unsupported component and retry the request.'
- 'Requested package not found: The package you specified in the purl cannot be found
  in the vulnerability database.'
- 'Vulnerability service not available: This issue is unexpected, and the service
  will recover shortly.'
- 'This issue is unexpected and the service should recover quickly if not please contact
  support: An unexpected error occurred.'
- 'Request not processed due to unexpected error: This issue is unexpected, and the
  service will recover shortly.'
- 'Invalid pagination parameters: The pagination limit is > 1 and ≤ 1000, and the
  offset is ≥0.'
- 'purls exceed limit: The number of purls sent in the request exceeds the limit of
  1000 set by the service.'
- 'Number of issues exceeds limit: Reduce the number of purls sent in a single request'
- 'Expected distro to be present: The given Package URL does not have a required distro
  qualifier'
- 'Unsupported Debian distro: This Debian distro is currently not supported'
- 'Expected namespace to be present: The given Package URL does not have a required
  namespace'
- 'Unsupported vendor: The given Package URL does not contain a supported vendor'
- 'Unsupported Alpine distro: This Alpine distro is currently not supported'
- 'Invalid request: Check the body of your request and try again'
- 'Unable to return valid API response: This issue is unexpected, and the service
  will recover shortly'
- 'Failed to process data: This issue is unexpected, and the service will recover
  shortly'
- 'Failed to store issue data: Check inputs and then try again'
- 'Internal server error: This issue is unexpected, and the service will recover shortly'
- 'Unable to apply a policy with an invalid configuration: Snyk could not apply a
  policy whilst executing a test because the configuration for the policy was invalid'
- 'Error reading manifest: Snyk failed to read 1 or more manifest files'
- 'Manifest not found: Snyk uses your project manifest file to analyze your projects
  for vulnerabilities'
- 'Rate limit hit while testing project: Snyk makes requests to your SCM when testing
  a project'
- 'Out of Sync Error: Sometimes a project may become out of sync between the lockfile
  and the manifest file'
- 'Failed determining project target: An internal error occurred, whereby Snyk was
  unable to determine the correct target for a given project in your PR Check'
- 'Failed to complete the test: A "Failed to complete testing check status" appears
  in your commit checks'
- 'Failed to fetch merge commit SHA: In order for snyk test to run, we need the merge
  commit SHA from the GitHub'
- 'Merge conflict error: Merge Conflict Error is not a Snyk specific issue but rather
  some issues on your SCM environment'
- 'Failed to detect issues: Snyk is always trying to check for new issues and vulnerabilities'
- 'No valid credentials to process PR check: Snyk uses credentials configured on your
  integration to test your code'
- 'Failed to generate a commit status: Snyk is always trying to check for new issues
  and vulnerabilities'
- 'SBOM test error: An unexpected error occurred'
- 'Organization ID mismatch: The requested organization ID does not match the owner
  of the SBOM test ID'
- 'Unable to find SBOM test: Snyk was unable to find the requested SBOM test'
- 'SBOM test failed: The SBOM test failed and does not have any results'
- 'SBOM test results still pending: The SBOM test is still processing and does not
  have any results yet'
- 'Unknown SBOM format: Snyk does not recognize the SBOM file format'
- 'Unable to process SBOM input: Snyk is unable to decode the SBOM file'
- 'SBOM format not supported: Provide a supported format of the SBOM document and
  try again'
- 'SBOM analysis failed: Snyk was unable to process the provided SBOM input'
- 'No testable packages found: The SBOM document you provided does not contain any
  packages supported by Snyk vulnerability analysis'
- 'Integration type not supported: The integration you provided does not support SCM
  repository access'
- 'Revision cannot be resolved: Snyk was unable to resolve the SCM revision you provided'
- 'Integration authentication failed: Snyk was unable to authenticate with your SCM
  provider'
- 'Integration authorization failed: Snyk was unable to authorize with your SCM provider'
- 'Too many files: Snyk was unable to retrieve the repository because the overall
  file count exceeds the limit of 40000'
- 'Repository size too large: Snyk was unable to retrieve the repository because the
  size of the repository exceeds 15 GB'
- 'Target not found: Snyk was unable to resolve the imported target'
- '401 Unauthorized: Check your token validity and scopes.'
- '429 Too Many Requests: Reduce the frequency of your requests.'
- '401 Unauthorized: Check OAuth token and permissions.'
- '403 Forbidden: Ensure correct organization settings and permissions.'
- '403 Forbidden: Check access permissions.'
- '500 Internal Server Error: Try again later.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify the token and OAuth configuration'
- '403 Forbidden: Check your authentication credentials.'
- '401 Unauthorized: Check API key or token expiration'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Verify API token and permissions'
- '401 Unauthorized: Verify the client ID and secret.'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Check the endpoint'
- '401 Unauthorized: Check credentials and token validity.'
- '403 Forbidden: Ensure user has proper access rights.'
- '404 Not Found: Verify the endpoint and resource existence.'
- '401 Unauthorized: Check client credentials.'
- '403 Forbidden: Check permissions for the requested resource.'
- '401 Unauthorized: Check your API key and permissions'
- '403 Forbidden: You do not have access to this resource'
- '403 Forbidden: Ensure proper permissions are granted.'
- '404 Not Found: Resource not found'
- '401 Unauthorized: Check OAuth token.'
- 'RATE_LIMIT_EXCEEDED: Reduce the rate of API calls'
- '401 Unauthorized: Check API key or authentication token expiration'
- '403 Forbidden: Check API rate limits or user permissions'
- '401 Unauthorized: Check your API key or token expiration.'
- '404 Not Found: Check the endpoint or resource ID.'
- '403 Forbidden: Ensure proper scopes are set.'
- '401 Unauthorized: Check the authentication credentials.'
- '403 Forbidden: Check API key permissions.'
- '401 Unauthorized: Check your credentials or token expiration'
- '403 Forbidden: Check your API key or permissions.'
- '404 Not Found: Verify the endpoint or resource ID.'
- '401 Unauthorized: Check your token or client credentials.'
- '401 Unauthorized: Recheck API key or access permissions'
- '403 Forbidden: Insufficient permissions for the requested action.'
- '401 Unauthorized: Verify your credentials and permissions.'
- '429 Too Many Requests: Rate limit exceeded, please try again later.'
- '429 Too Many Requests: Throttle API requests'
- '403 Forbidden: Access denied for the requested resource.'
- '500 Internal Server Error: Retry the request after a few moments'
- '400 Bad Request: Client request did not conform to OpenAPI specification'
- '429: Too many requests'
- '429 Too Many Requests: Slow down your request rate.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify OAuth token'
- '429 Too Many Requests: Rate limiting exceeded'
- 'Rate limit exceeded: Reduce the number of API requests'
- '401 Unauthorized: Not authorised'
- '429: Rate limit exceeded'
- '404: Org was not found or you may not have the correct permissions to access the
  org.'
- '429 Too Many Requests: You have hit the rate limit.'
- '403 Forbidden: Check your account permissions.'
- '404 Not Found: Endpoint may not exist'
- '429 Too Many Requests: Throttle your requests'
- '401 Unauthorized: Check your API Token and permissions.'
- '403 Forbidden: Check API key for permissions.'
- '404 Not Found: Verify the endpoint and resource IDs.'
- '500 Internal Server Error: Retry the request after a short period.'
- '403 Forbidden: Access restricted by feature flag'
- '409 Conflict: Non-success response with status 409'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Try again later or contact support'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify the endpoint and resource'
- '400: Bad Request: A parameter provided as a part of the request was invalid.'
- '404: Not Found: The resource being operated on could not be found or you do not
  have permission to access it.'
- '500: Internal Server Error: An error was encountered while attempting to process
  the request.'
- '401 Unauthorized: Check API token permissions'
- 'INVALID_CLIENT: Check your client ID and secret'
- 'UNAUTHORIZED: Ensure your token is valid and not expired'
- '401: Unauthorized: the request requires an authentication token.'
- '403: Forbidden: the request requires an authentication token with more or different
  permissions.'
- '404: Not Found: The resource being operated on could not be found.'
- '409: Conflict: The requested operation conflicts with the current state of the
  resource in some way.'
- '400 Bad Request: A parameter provided as a part of the request was invalid.'
- '401 Unauthorized: the request requires an authentication token.'
- '403 Forbidden: the request requires an authentication token with more or different
  permissions.'
- '404 Not Found: The resource being operated on could not be found.'
- '409 Conflict: The requested operation conflicts with the current state of the resource
  in some way.'
- '500 Internal Server Error: An error was encountered while attempting to process
  the request.'
- '401 Unauthorized: The request requires an authentication token.'
- '403 Forbidden: The request requires an authentication token with more or different
  permissions.'
- '401 Unauthorized: Invalid API key'
- '401 Unauthorized: Check client credentials or token validity.'
- '403 Forbidden: Verify user permissions.'
- '429 Too Many Requests: Implement exponential backoff.'
- '401 Unauthorized: Check your OAuth token and scopes'
- '401 Unauthorized: Check API token or authentication setup'
- '401 Unauthorized: Check credentials and token expiration'
- '400 Bad Request: Check request syntax.'
- '401 Unauthorized: Verify OAuth token.'
- '429 Too Many Requests: Throttle your requests.'
- '404 Not Found: Check the endpoint URL'
- '401 Unauthorized: Recheck API token permissions'
- '403 Forbidden: Access denied for the requested resource'
- '401 Unauthorized: Check credentials and scopes.'
- '404 Not Found: Verify the resource path'
- '401 Unauthorized: Check your credentials and token expiration'
- '429 Too Many Requests: Throttle your API requests'
- '404 Not Found: Ensure the organization ID is correct.'
- '429 Too Many Requests: Limit reached for requests.'
- '401 Unauthorized: Check your API token or authentication method.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'UNAUTHORIZED: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check if the token is valid.'
- '403 Forbidden: Insufficient permissions for this action'
- '404 Not Found: The resource you are trying to access does not exist.'
- '403 Forbidden: Ensure you have permission to access this resource.'
- '401 Unauthorized: Check your OAuth credentials.'
- '403 Forbidden: Ensure your account has the necessary permissions.'
- '403 Forbidden: Ensure proper permissions for the request'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: The requested resource was not found.'
- '401 Unauthorized: Check API token and its permissions'
- '403 Forbidden: Ensure user has access to the requested resource'
- '429 Too Many Requests: Rate limit exceeded, retry later'
- '500 Internal Server Error: Retry request later'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Recheck OAuth token validity'
- '401 Unauthorized: Check API key and permissions'
- '401 Unauthorized: the request requires an authentication token or a token with
  more permissions.'
- '403 Unauthorized: the request requires an authentication token or a token with
  more permissions.'
- '401 Unauthorized: Check your API token validity'
- '403 Forbidden: Token lacks necessary permissions'
- '400: Bad Request - A parameter provided as a part of the request was invalid.'
- '401: Unauthorized - The request requires an authentication token.'
- '403: Forbidden - The request requires an authentication token with more or different
  permissions.'
- '404: Not Found - The resource being operated on could not be found.'
- '500: Internal Server Error - An error was encountered while attempting to process
  the request.'
- '401 Unauthorized: Check API key or OAuth token.'
- '422: Likely that your dep-graph is too large to monitor.'
- '401 Unauthorized: Ensure your API key is valid'
- '404 Not Found: Check if the project exists'
- '401 Unauthorized: Check your token or OAuth scopes.'
- '403 Forbidden: Check your API key permissions'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency'
- '401 Unauthorized: Authorization errors.'
- '403 Forbidden: Provided API_KEY has no user provision permission.'
- '401 Unauthorized: Verify API key or token.'
- '403 Forbidden: Access denied due to insufficient permissions.'
- '401 Unauthorized: Check credentials or token validity.'
- '403 Forbidden: Ensure API token has the required permissions.'
- '404 Not Found: Check if the resource path is correct.'
- '401 Unauthorized: Check your API key or OAuth token'
- '401 Unauthorized: Please check your API token.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Check your credentials or token expiration.'
- 429 - Too many requests
- '400 Error: Check request parameters'
- '404 Not Found: Verify endpoint or resource'
- '429 Too Many Requests: API limit exceeded'
- '403 Forbidden: Access denied, check permissions'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Recheck API token or permissions.'
- '429 Too Many Requests: Exceeded API rate limit'
- '401 Unauthorized: Check if the OAuth token is valid'
- '401 Unauthorized: Check API token permissions.'
- '404 Not Found: Resource not found.'
- '429 Too Many Requests: Slow down your requests.'
- '401 Unauthorized: Recheck API key'
- 'RATE_LIMIT_EXCEEDED: Reduce frequency of requests.'
- '401 Unauthorized: Verify credentials and token expiration.'
- '403 Forbidden: Check your permissions'
- '200: Success'
- 200 Success
- 'no-known-exploit: No known exploit for the vulnerability'
- '400: Bad Request: one or more parameters are invalid. Check the input to match
  the expected format.'
- '404: Not Found: The resource you are trying to access could not be found.'
- '500: Internal Server Error: An unexpected error was encountered.'
- '500: Internal Server Error: An unexpected error was encountered while attempting
  to process the request.'
- '400 Bad Request: one or more parameters are invalid. Check the input to match the
  expected format.'
- '404 Not Found: The resource you are trying to access could not be found. Review
  the request and try again.'
- '500 Internal Server Error: An unexpected error was encountered while attempting
  to process the request. Try again.'
- '401 Unauthorized: Check your OAuth token and scopes.'
- '401 Unauthorized: Check your credentials or token'
- '400: The provided id is not in a valid format.'
- '401: API_KEY is invalid.'
- '404: The requested user could not be found or caller does not have sufficient permissions.'
- '404 Not Found: Verify the endpoint you''re calling.'
- '404 Not Found: Verify endpoint or resource ID'
- '500 Internal Server Error: Retry the request after some time'
- '404 Not Found: Check the endpoint and parameters'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls'
- '401 Unauthorized: Check OAuth scopes'
- '403 Forbidden: Check your API key or permissions'
- '404 Not Found: Verify the endpoint or resource'
- '429 Too Many Requests: Rate limit exceeded, slow down requests'
- 'Unauthorized: Recheck API key'
- Net new issues (delta) scan troubleshooting
- 'Invalid PURL: 400'
- 'Unsupported Ecosystem: 400'
- 'Package requested without namespace: 400'
- 'Purl component not supported: 400'
- 'Your organization is not authorized to perform this action: 403'
- 'Rate limit exceeded: 429'
- 'Invalid pagination parameters: 400'
- 'Authorization request failure: 500'
- 'Internal server error: 500'
- 'Vulnerability service unavailable: 503'
- 'Vulnerability service error: 500'
- '401 Unauthorized: Check your credentials and OAuth2 setup'
- '404 Not Found: Verify the endpoint URL and parameters'
- '429 Too Many Requests: Throttle requests to avoid rate limiting'
- '429 Too Many Requests: You have exceeded your request limit.'
- '401 Unauthorized: Verify token validity and scopes.'
- '401 Unauthorized: Check your access token or its expiration.'
- '401 Unauthorized: Invalid token or insufficient scopes'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Check credentials and token validity'
- '401 Unauthorized: Check your API token or OAuth configuration.'
- '401 Unauthorized: Check API token'
- '401 Unauthorized: Check your OAuth2 configuration.'
- '429 Too Many Requests: You have exceeded your rate limit.'
- '401 Unauthorized: Check your authentication details.'
- '403 Forbidden: Check permissions for the API token.'
- '200 OK: Successful request.'
- '404 Not Found: Check endpoint or resource'
- '429 Too Many Requests: Reduce the number of API calls.'
- '200 OK: Successful request'
- '401 Unauthorized: Check your credentials and permissions'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Snyk API token
  - Snyk API token permissions users can control
  - OAuthToken
  - ApiToken
  - OAuth2
  - User
  - SnykAPIKey
  - OAuth2Token
  - SnykToken
  - Client
  - SnykAPI
  - Token
  - API Token
  - ApiKey
  - SNYK_TOKEN
  - OAuthProvider
  - OAuth
  - oauth2
  - access_token
  - SnykAPIToken
  - APIToken
  - APITokenBearerAuth
  - API_KEY
  - Service Account
  - SnykApiToken
  - AccessToken
  - Snyk API Token
  - OAuth2Client
  - API Key
client:
  base_url: https://snyk.io/api/v1
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://snyk.io/oauth/token
    client_id: '{{ dlt.secrets[''snyk_client_id''] }}'
    client_secret: '{{ dlt.secrets[''snyk_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''snyk_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
