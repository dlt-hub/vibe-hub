resources:
- name: single_use_tokens
  endpoint:
    path: /single-use-tokens
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: POST
- name: receipts_files
  endpoint:
    path: /receipts-files/{yyyy-MM-dd}
    method: GET
- name: payment_files
  endpoint:
    path: /payment-files
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: transactions
- name: search_transactions
  endpoint:
    path: /transactions/search-customer
    method: GET
    data_selector: transactions
- name: get_transaction_details
  endpoint:
    path: /transactions/{transactionId}
    method: GET
    data_selector: transaction
- name: virtual_account
  endpoint:
    path: /virtualAccount
    method: GET
    data_selector: data
    params: {}
- name: customer_paypal_account
  endpoint:
    path: /customerPayPalAccount
    method: GET
    data_selector: data
    params: {}
- name: australia_post
  endpoint:
    path: /australiaPost
    method: GET
    data_selector: data
    params: {}
- name: bpay
  endpoint:
    path: /bpay
    method: GET
    data_selector: data
    params: {}
- name: fraud_result
  endpoint:
    path: /fraudResult
    method: GET
    data_selector: data
    params: {}
- name: custom_fields
  endpoint:
    path: /customFields
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: create_customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
- name: update_customer
  endpoint:
    path: /customers/{customerNumber}
    method: PUT
    data_selector: customer
- name: get_customer_details
  endpoint:
    path: /customers/{customerNumber}
    method: GET
    data_selector: customer
- name: delete_customer
  endpoint:
    path: /customers/{customerNumber}
    method: DELETE
    data_selector: response
- name: list_customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: single_use_tokens
  endpoint:
    path: /single-use-tokens
    method: POST
    data_selector: singleUseTokenId
- name: three_d_secure_authentication
  endpoint:
    path: /single-use-tokens/{singleUseTokenId}/three-ds2-authentication
    method: POST
- name: receipts_files
  endpoint:
    path: /receipts-files
    method: GET
- name: receipts_file_download
  endpoint:
    path: /receipts-files/{yyyy-mm-dd}
    method: GET
- name: receipts_file_csv
  endpoint:
    path: /receipts-files/{yyyy-mm-dd}/csv-report
    method: GET
- name: payment_files
  endpoint:
    path: /payment-files
    method: POST
    data_selector: files
- name: merchants
  endpoint:
    path: /merchants
    method: GET
    data_selector: merchants
- name: your_bank_accounts
  endpoint:
    path: /your-bank-accounts
    method: GET
    data_selector: bankAccounts
- name: your_paypal
  endpoint:
    path: /your-paypal
    method: GET
    data_selector: paypalAccounts
- name: subaccounts
  endpoint:
    path: /subaccounts
    method: GET
    data_selector: subaccounts
- name: surcharges
  endpoint:
    path: /surcharges
    method: GET
    data_selector: surcharges
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: custom_fields
  endpoint:
    path: /custom-fields
    method: GET
    data_selector: customFields
- name: modules
  endpoint:
    path: /modules
    method: GET
    data_selector: data
- name: customers
  endpoint:
    path: /customers
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: POST
- name: refunds
  endpoint:
    path: /refunds
    method: POST
- name: Settlement Report
  endpoint:
    path: /reports/daily_settlement
    method: GET
    data_selector: transactions
- name: Trend Report
  endpoint:
    path: /reports/trend
    method: GET
    data_selector: sales
- name: User Management
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: receipts_files
  endpoint:
    path: /reports/daily_settlement
    method: GET
    data_selector: receipts
    params: {}
- name: transaction_search
  endpoint:
    path: /transactions/search
    method: GET
    data_selector: transactions
    params:
      date_range: last_365_days
- name: virtual_account
  endpoint:
    path: /docs/rest.html#open-a-virtual-account-for-new-customer
    method: POST
- name: close_virtual_account
  endpoint:
    path: /docs/rest.html#close-a-virtual-account
    method: POST
- name: payment
  endpoint:
    path: /MakePayment
    method: GET
    data_selector: payment_details
    params: {}
- name: receipts_files
  endpoint:
    path: /reports/daily-settlement
    method: GET
    data_selector: receipts
    params: {}
- name: transaction_search
  endpoint:
    path: /transactions/search
    method: GET
    data_selector: transactions
    params:
      time_frame: last_365_days
- name: customer_payment_history
  endpoint:
    path: /customers/payment-history
    method: GET
    data_selector: payment_history
    params: {}
- name: customer_reports
  endpoint:
    path: /customers/search
    method: GET
    data_selector: customer_records
    params: {}
- name: 3-D Secure 2
  endpoint:
    path: /docs/rest.html#authenticate
    method: POST
    data_selector: transStatus
    params: {}
- name: Apple Pay
  endpoint:
    path: /docs/apple-pay.html
    method: GET
- name: customer_ip_address
  endpoint:
    path: /docs/customer-ip-address
    method: POST
    data_selector: customerIpAddress
    params:
      customerIpAddress: customerIpAddress
- name: Google Pay
  endpoint:
    path: /docs/rest.html#process-token-payment
    method: POST
- name: PayTo transactions
  endpoint:
    path: /docs/user-guide/#reports
    method: GET
    data_selector: transactions
    params: {}
- name: Transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: cart_token_request
  endpoint:
    path: /RequestToken
    method: POST
    data_selector: cart_token
- name: make_payment
  endpoint:
    path: /MakePayment
    method: GET
    data_selector: payment_response
- name: payment_reference
  endpoint:
    path: /payment/reference
    method: POST
    data_selector: payment_reference
    params: {}
- name: payment_notification
  endpoint:
    path: /payment/notification
    method: POST
    data_selector: payment_notification
    params: {}
- name: PaymentResponse
  endpoint:
    path: /PaymentResponse
    method: POST
    data_selector: PaymentResponse
- name: credit_card_transaction
  endpoint:
    path: /api/credit_card
    method: POST
    data_selector: transaction_response
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: response
    params: {}
- name: customer_registration
  endpoint:
    path: /customers/register
    method: POST
- name: transaction_processing
  endpoint:
    path: /transactions/process
    method: POST
- name: refund_processing
  endpoint:
    path: /transactions/refund
    method: POST
- name: query_transaction
  endpoint:
    path: /transactions/query
    method: POST
- name: echo_order
  endpoint:
    path: /orders/echo
    method: GET
- name: reversal_transaction
  endpoint:
    path: /transactions/reversal
    method: POST
- name: payment_files
  endpoint:
    path: /docs/rest.html#payment-files
    method: POST
- name: customer_vault
  endpoint:
    path: /docs/rest.html#payway-recurring-billing-and-customer-vault
    method: POST
- name: receipts_files
  endpoint:
    path: /docs/payway-csv.html
    method: GET
- name: payment_file
  endpoint:
    path: /cardlink/payment_file
    method: POST
    data_selector: transactions
    params: {}
- name: result_file
  endpoint:
    path: /cardlink/result_file
    method: GET
    data_selector: transactions
    params: {}
- name: payment_file
  endpoint:
    path: /payment/file
    method: POST
- name: rejects_file
  endpoint:
    path: /rejects/file
    method: POST
- name: payment_file
  endpoint:
    path: /ipg/paymentfile
    method: POST
    data_selector: transactions
    params: {}
- name: report_file
  endpoint:
    path: /ipg/reportfile
    method: GET
    data_selector: transactions
    params: {}
- name: receipts_files
  endpoint:
    path: /receipts-files/{yyyy-mm-dd}/csv-report
    method: GET
- name: header_record
  endpoint:
    path: /header_record
    method: GET
- name: detail_record
  endpoint:
    path: /detail_record
    method: GET
- name: trailer_record
  endpoint:
    path: /trailer_record
    method: GET
- name: outstanding_failed_payments
  endpoint:
    path: /recurring-billing/export/outstanding-failed-payments
    method: GET
    data_selector: records
- name: customers_with_final_payment_due
  endpoint:
    path: /recurring-billing/export/customers-with-final-payment-due
    method: GET
    data_selector: records
- name: customers_with_expiring_credit_cards
  endpoint:
    path: /recurring-billing/export/customers-with-expiring-credit-cards
    method: GET
    data_selector: records
- name: new_customers
  endpoint:
    path: /recurring-billing/export/new-customers
    method: GET
    data_selector: records
- name: current_customers
  endpoint:
    path: /recurring-billing/export/current-customers
    method: GET
    data_selector: records
- name: Header Record
  endpoint:
    path: /docs/stgeorge-bpay-file-format/#header-record
    method: GET
    data_selector: records
- name: Detail Record
  endpoint:
    path: /docs/stgeorge-bpay-file-format/#detail-record
    method: GET
    data_selector: records
- name: Trailer
  endpoint:
    path: /docs/stgeorge-bpay-file-format/#trailer
    method: GET
    data_selector: records
- name: outstanding_failed_payments
  endpoint:
    path: /recurring-billing/outstanding-failed-payments
    method: GET
    data_selector: outstanding_failed_payments
    params: {}
- name: customers_with_final_payment_due
  endpoint:
    path: /recurring-billing/customers-with-final-payment-due
    method: GET
    data_selector: customers_with_final_payment_due
    params: {}
- name: customers_with_expiring_credit_cards
  endpoint:
    path: /recurring-billing/customers-with-expiring-credit-cards
    method: GET
    data_selector: customers_with_expiring_credit_cards
    params: {}
- name: new_customers
  endpoint:
    path: /recurring-billing/new-customers
    method: GET
    data_selector: new_customers
    params: {}
- name: current_customers
  endpoint:
    path: /recurring-billing/current-customers
    method: GET
    data_selector: current_customers
    params: {}
notes:
- Secret API keys expire after one year and then you must use a new key.
- Use Idempotency-Key to avoid duplicate payments
- Banking Days are Monday to Friday excluding national public holidays
- You must not host payway.js on your server.
- The PayWay REST API is automatically available to access the functionality of PayWay
  Net, PayWay Batch, PayWay Recurring Billing & Customer Vault, PayWay Connect and
  PayWay Match for no extra cost when you have that module active.
- Requires setup of connected app in PayWay
- Direct debit transactions have a 3-day clearing period
- If you want to accept American Express, Diners Club or JCB cards you will need to
  enter into separate agreements with American Express, Diners Club International
  or JCB International.
- Payments processed on non-banking days or after cutoff are settled on the next banking
  day.
- Requires setup of connected app for PCI-DSS compliance
- You must undertake the most difficult PCI-DSS compliance process.
- Receipts files contain a list of payments collected.
- PayWay can create receipts files suitable for upload into various accounting packages.
- PayWay Match allows for more than one settlement account.
- Uses PCI-DSS SAQ A compliance level.
- PayWay Phone allows customers to make credit card payments using a 1300 number.
- Payments are settled to your bank account and you receive a report of payments from
  the PayWay website.
- PayWay is a PCI-DSS level 1 compliant solution.
- PayWay allows processing payments via multiple card types including Mastercard,
  Visa, Unionpay, American Express, Diners Club and JCB.
- PayWay only allows refunds back to the original credit card used.
- 3-D Secure 2 for Visa and MasterCard are supported. We are striving to make 3-D
  Secure 2 for American Express available as soon as possible.
- There are no response codes specific to card verification number mismatches.
- If you are using the PayWay REST API or PayWay Classic API and your payment website
  is generally available on the Internet you must send the customer IP address to
  PayWay
- Fraud Guard detects unusual payments using the payment amount, number of payments,
  location of the customer, bank which issued the credit card, and countries in which
  you do business.
- If your systems store or process credit card data, you must be compliant with 'Self
  Assessment Questionnaire D' (SAQ-D).
- PayWay can calculate and collect payment surcharges on your behalf.
- You must ensure your customers are aware of any surcharge before they enter into
  the transaction.
- PayTo is available on PayWay modules.
- Automatic calculation of surcharges by PayWay is not supported for PayTo.
- Outsourcing storage, processing and transmission of cardholder data reduces compliance
  burden.
- This solution has been replaced by the PayWay Trusted Frame solution.
- Tokens are only accepted for a list of IP addresses that you must configure on the
  Security Information page in the Setup Hosted Payment Page wizard.
- Ensure you do not format the amount or quantity with commas as this will result
  in incorrect interpretation of the field by PayWay.
- Requires setup of browser return and redirect parameters through the PayWay Setup
  Net Wizard.
- Parameters are sent as POST parameters.
- Transactions after 6pm Sydney time are settled on the following day.
- All communications must be sent over HTTPS.
- Username and password must be included in every request.
- Uses standard ASCII characters in parameter values.
- Do not use special characters like & and % in parameter values.
- All files are plain text using the US-ASCII character encoding.
- Records are separated by the CR LF end-of-line marker.
- All files are plain text using the US-ASCII character encoding. Records are separated
  by the CR LF end-of-line marker.
- Files are plain text using US-ASCII character encoding.
- Records are separated by CR LF end-of-line marker. Fields within each record are
  separated by commas.
- Email is not secure. Emails may be modified or read by malicious parties on the
  Internet during transmission.
- If an email is received by PayWay that is not encrypted, it will be immediately
  deleted from our computer systems and will not actioned.
- As additional features are added to PayWay, new columns may be added. You should
  consider this if you are building software to import this data.
- Refer to the authorization tab in Postman for setup details
errors:
- '429 Too Many Requests: Wait 20 seconds and resend with the same Idempotency-Key'
- '503 Service Unavailable: Wait 20 seconds and resend with the same Idempotency-Key'
- '422 Unprocessable Entity: Display error message to user and allow correction'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '500 Internal Server Error: Contact Technical Support'
- '401 Unauthorised: The server can not authenticate the details in the Authorization
  header.'
- '403 Forbidden: A valid API key was provided, but it does not have access to the
  requested resource.'
- '404 Not found: The server has not found anything matching the Request-URI.'
- '429 Too many requests: You have sent too many requests in a given amount of time.'
- '500 Internal server error: The server encountered an unexpected condition which
  prevented it from fulfilling the request.'
- 'TRANSACTION_DECLINED: Refer to transaction status for details'
- 'INVALID_PAYMENT_METHOD: Ensure the payment method is accepted'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'PDNG: The transaction has not yet been accepted for processing.'
- 'PATC: The transaction has been accepted for further processing.'
- 'ACSC: This indicates that the transaction has been authorised.'
- 'RJCT: The transaction has been rejected before a payment was attempted.'
- 'BLCK: The transaction has been blocked before a payment was attempted.'
- 'AB01: The transaction was attempted, but was not completed.'
- 'AB02: The transaction was attempted, but was not completed.'
- 'AB03: The transaction was attempted, but was not completed.'
- 'AB04: The transaction was attempted, but was not completed.'
- 'AC02: Invalid payer account.'
- 'AC05: Payers account is closed.'
- 'AC06: Payers account has been blocked.'
- 'AG07: The transaction was attempted, but was not completed.'
- 'AM04: There are insufficient funds.'
- 'FF10: The transaction was attempted, but was not completed.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'INVALID_CREDENTIALS: Check username and password.'
- 'TRANSACTION_FAILED: Ensure sufficient funds are available.'
- '0: Approved'
- '1: Declined'
- '2: Erred'
- '3: Rejected'
- '0: Transaction Approved'
- '1: Transaction Declined'
- '2: Transaction Erred'
- '3: Transaction Rejected'
- 'INVALID_CARD: Card number is invalid'
- 'EXPIRED_CARD: Card has expired'
- 'DECLINED: Transaction was declined'
- 'INVALID_MERCHANT_ID: Ensure the merchant ID is correct.'
- 'TRANSACTION_DECLINED: Check for reasons specified in the report file.'
- 'Email not encrypted: Ensure spreadsheet is encrypted before sending.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://www.payway.com.au
  auth:
    type: oauth2
source_metadata: null
