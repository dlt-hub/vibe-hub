resources:
- name: BleCommands
  endpoint:
    path: /open_gopro/api/ble_commands
    method: GET
    data_selector: commands
    params: {}
- name: BleSettings
  endpoint:
    path: /open_gopro/api/ble_settings
    method: GET
    data_selector: settings
    params: {}
- name: BleStatuses
  endpoint:
    path: /open_gopro/api/ble_statuses
    method: GET
    data_selector: statuses
    params: {}
- name: camera_capabilities
  endpoint:
    path: /camera/capabilities
    method: GET
    data_selector: capabilities
- name: camera_settings
  endpoint:
    path: /camera/settings
    method: GET
    data_selector: settings
- name: get_wifi_password
  endpoint:
    path: /get_wifi_password
    method: GET
    data_selector: command status and password
- name: get_wifi_ssid
  endpoint:
    path: /get_wifi_ssid
    method: GET
    data_selector: command status and SSID
- name: load_preset
  endpoint:
    path: /load_preset
    method: GET
    data_selector: command status
    params:
      preset: int
- name: register_livestream_status
  endpoint:
    path: /register_livestream_status
    method: GET
    data_selector: current livestream status
    params:
      register: list
      unregister: list
- name: power_down
  endpoint:
    path: /power_down
    method: GET
    data_selector: status of command
- name: reboot
  endpoint:
    path: /reboot
    method: GET
    data_selector: Empty response
- name: release_network
  endpoint:
    path: /release_network
    method: GET
    data_selector: status of release request
- name: request_wifi_connect
  endpoint:
    path: /request_wifi_connect
    method: GET
    data_selector: Command status of request
    params:
      ssid: str
- name: request_wifi_connect_new
  endpoint:
    path: /request_wifi_connect_new
    method: GET
    data_selector: Command status of request
    params:
      ssid: str
      password: str
- name: scan_wifi_networks
  endpoint:
    path: /scan_wifi_networks
    method: GET
    data_selector: Command status of request
- name: set_camera_control
  endpoint:
    path: /set_camera_control
    method: GET
    data_selector: command status of request
    params:
      camera_control_status: int
- name: set_date_time
  endpoint:
    path: /set_date_time
    method: GET
    data_selector: command status
    params:
      date_time: datetime
- name: set_date_time_tz_dst
  endpoint:
    path: /set_date_time_tz_dst
    method: GET
    data_selector: command status
    params:
      date_time: datetime
      tz_offset: int
      is_dst: bool
- name: set_livestream_mode
  endpoint:
    path: /set_livestream_mode
    method: GET
    data_selector: command status of request
    params:
      url: str
      minimum_bitrate: int
      maximum_bitrate: int
      starting_bitrate: int
      encode: bool
      window_size: int
      lens: int
      certs: list
- name: set_pairing_complete
  endpoint:
    path: /set_pairing_complete
    method: GET
    data_selector: command status of request
- name: set_shutter
  endpoint:
    path: /set_shutter
    method: GET
    data_selector: status of command
    params:
      shutter: Toggle
- name: set_third_party_client_info
  endpoint:
    path: /set_third_party_client_info
    method: GET
    data_selector: command status
- name: set_turbo_mode
  endpoint:
    path: /set_turbo_mode
    method: GET
    data_selector: command status of request
    params:
      mode: Toggle
- name: sleep
  endpoint:
    path: /sleep
    method: GET
    data_selector: status of command
- name: camera_info
  endpoint:
    path: /camera/info
    method: GET
    data_selector: status
- name: camera_state
  endpoint:
    path: /camera/state
    method: GET
    data_selector: status
- name: last_captured_media
  endpoint:
    path: /media/last_captured
    method: GET
    data_selector: path
- name: media_list
  endpoint:
    path: /get_media_list
    method: GET
    data_selector: MediaList
- name: media_metadata
  endpoint:
    path: /get_media_metadata
    method: GET
    data_selector: MediaMetadata
- name: preset_status
  endpoint:
    path: /get_preset_status
    method: GET
    data_selector: preset
- name: screennail
  endpoint:
    path: /get_screennail
    method: GET
    data_selector: Path
- name: telemetry
  endpoint:
    path: /get_telemetry
    method: GET
    data_selector: Path
- name: thumbnail
  endpoint:
    path: /get_thumbnail
    method: GET
    data_selector: Path
- name: webcam_version
  endpoint:
    path: /get_webcam_version
    method: GET
    data_selector: version
- name: load_preset
  endpoint:
    path: /load_preset
    method: POST
    data_selector: command status
- name: load_preset_group
  endpoint:
    path: /load_preset_group
    method: POST
    data_selector: command status
- name: reboot
  endpoint:
    path: /reboot
    method: POST
    data_selector: command status
- name: remove_file_hilight
  endpoint:
    path: /remove_file_hilight
    method: POST
    data_selector: command status
- name: set_camera_control
  endpoint:
    path: /set_camera_control
    method: POST
    data_selector: command status
- name: set_date_time
  endpoint:
    path: /set_date_time
    method: POST
    data_selector: command status
- name: set_digital_zoom
  endpoint:
    path: /set_digital_zoom
    method: POST
    data_selector: command status
- name: set_keep_alive
  endpoint:
    path: /set_keep_alive
    method: POST
    data_selector: command status
- name: set_preview_stream
  endpoint:
    path: /set_preview_stream
    method: POST
    data_selector: command status
- name: set_shutter
  endpoint:
    path: /set_shutter
    method: POST
    data_selector: command status
- name: set_third_party_client_info
  endpoint:
    path: /set_third_party_client_info
    method: POST
    data_selector: command status
- name: set_turbo_mode
  endpoint:
    path: /set_turbo_mode
    method: POST
    data_selector: command status
- name: update_custom_preset
  endpoint:
    path: /update_custom_preset
    method: POST
    data_selector: command status
- name: photo_lens
  endpoint:
    path: /photo_lens
    method: GET
    data_selector: settings
- name: photo_mode
  endpoint:
    path: /photo_mode
    method: GET
    data_selector: settings
- name: photo_output
  endpoint:
    path: /photo_output
    method: GET
    data_selector: settings
- name: photo_single_interval
  endpoint:
    path: /photo_single_interval
    method: GET
    data_selector: settings
- name: photo_timelapse_rate
  endpoint:
    path: /photo_timelapse_rate
    method: GET
    data_selector: settings
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: settings
- name: scheduled_capture
  endpoint:
    path: /scheduled_capture
    method: GET
    data_selector: settings
- name: setup_language
  endpoint:
    path: /setup_language
    method: GET
    data_selector: settings
- name: setup_screen_saver
  endpoint:
    path: /setup_screen_saver
    method: GET
    data_selector: settings
- name: star_trails_length
  endpoint:
    path: /star_trails_length
    method: GET
    data_selector: settings
- name: system_video_mode
  endpoint:
    path: /system_video_mode
    method: GET
    data_selector: settings
- name: time_lapse_digital_lenses
  endpoint:
    path: /time_lapse_digital_lenses
    method: GET
    data_selector: settings
- name: video_aspect_ratio
  endpoint:
    path: /video_aspect_ratio
    method: GET
    data_selector: settings
- name: video_bit_rate
  endpoint:
    path: /video_bit_rate
    method: GET
    data_selector: settings
- name: video_duration
  endpoint:
    path: /video_duration
    method: GET
    data_selector: settings
- name: video_easy_mode
  endpoint:
    path: /video_easy_mode
    method: GET
    data_selector: settings
- name: video_framing
  endpoint:
    path: /video_framing
    method: GET
    data_selector: settings
- name: video_horizon_leveling
  endpoint:
    path: /video_horizon_leveling
    method: GET
    data_selector: settings
- name: video_lens
  endpoint:
    path: /video_lens
    method: GET
    data_selector: settings
- name: video_performance_mode
  endpoint:
    path: /video_performance_mode
    method: GET
    data_selector: settings
- name: video_resolution
  endpoint:
    path: /video_resolution
    method: GET
    data_selector: settings
- name: video_timelapse_rate
  endpoint:
    path: /video_timelapse_rate
    method: GET
    data_selector: settings
- name: webcam_digital_lenses
  endpoint:
    path: /webcam_digital_lenses
    method: GET
    data_selector: settings
- name: wireless_band
  endpoint:
    path: /wireless_band
    method: GET
    data_selector: settings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: BLEController
  endpoint:
    path: /open_gopro/network/ble/controller
    method: GET
    data_selector: records
    params: {}
- name: BleClient
  endpoint:
    path: /open_gopro/network/ble/client
    method: GET
    data_selector: records
    params: {}
- name: BleCommands
  endpoint:
    path: /api/ble_commands
    method: GET
    data_selector: commands
    params: {}
- name: BleSettings
  endpoint:
    path: /api/ble_settings
    method: GET
    data_selector: settings
    params: {}
- name: BleStatuses
  endpoint:
    path: /api/ble_statuses
    method: GET
    data_selector: statuses
    params: {}
- name: photo_demo
  endpoint:
    path: /gopro-photo
    method: GET
    data_selector: records
    params: {}
- name: video_demo
  endpoint:
    path: /gopro-video
    method: GET
    data_selector: records
    params: {}
- name: wifi_demo
  endpoint:
    path: /gopro-wifi
    method: GET
    data_selector: records
    params: {}
- name: battery_demo
  endpoint:
    path: /gopro-log-battery
    method: GET
    data_selector: records
    params: {}
- name: webcam_demo
  endpoint:
    path: /gopro-webcam
    method: GET
    data_selector: records
    params: {}
- name: livestream_demo
  endpoint:
    path: /gopro-livestream
    method: GET
    data_selector: records
    params: {}
- name: WiredGoPro
  endpoint:
    path: /api/wired
    method: POST
    data_selector: response
    params: {}
- name: WirelessGoPro
  endpoint:
    path: /api/wireless
    method: POST
    data_selector: response
    params: {}
- name: hardware_info
  endpoint:
    path: /ble_command/get_hardware_info
    method: GET
    data_selector: data
- name: camera_control
  endpoint:
    path: /camera/control
    method: GET
    data_selector: state
    params: {}
- name: media_management
  endpoint:
    path: /media
    method: POST
    data_selector: media_files
    params: {}
- name: metadata_extraction
  endpoint:
    path: /metadata
    method: GET
    data_selector: metadata
    params: {}
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: '{}'
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
    params: {}
- name: delete_all_files
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
    params: {}
- name: delete_grouped_media_item
  endpoint:
    path: /gopro/media/grouped/delete
    method: DELETE
    data_selector: object
    params:
      p: string
- name: delete_single_media_file
  endpoint:
    path: /gopro/media/delete
    method: DELETE
    data_selector: object
    params:
      path: string
- name: download_media_file
  endpoint:
    path: /gopro/media/download/{directory}/{filename}
    method: GET
    data_selector: object
    params:
      directory: string
      filename: string
- name: get_last_captured_media
  endpoint:
    path: /gopro/media/last
    method: GET
    data_selector: object
- name: get_media_file_gpmf
  endpoint:
    path: /gopro/media/gpmf
    method: GET
    data_selector: object
    params:
      path: string
- name: get_media_file_info
  endpoint:
    path: /gopro/media/info
    method: GET
    data_selector: object
    params:
      path: string
- name: get_media_file_screennail
  endpoint:
    path: /gopro/media/screennail
    method: GET
    data_selector: object
    params:
      path: string
- name: get_media_file_telemetry
  endpoint:
    path: /gopro/media/telemetry
    method: GET
    data_selector: object
    params:
      path: string
- name: get_media_file_thumbnail
  endpoint:
    path: /gopro/media/thumbnail
    method: GET
    data_selector: object
    params:
      path: string
- name: get_media_list
  endpoint:
    path: /gopro/media/list
    method: GET
    data_selector: object
- name: MediaList
  endpoint:
    path: /media/list
    method: GET
    data_selector: media
    params: {}
- name: PhotoMetadata
  endpoint:
    path: /photo/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: PresetSetting
  endpoint:
    path: /preset/setting
    method: GET
    data_selector: settings
    params: {}
- name: SettingCapabilities
  endpoint:
    path: /setting/capabilities
    method: GET
    data_selector: capabilities
    params: {}
- name: SingleMediaListItem
  endpoint:
    path: /media/list/item
    method: GET
    data_selector: mediaItems
    params: {}
- name: ota_update
  endpoint:
    path: /ota/update
    method: POST
    data_selector: response
    params: {}
- name: get_preset_status
  endpoint:
    path: /presets/status
    method: GET
    data_selector: response
    params: {}
- name: load_preset
  endpoint:
    path: /presets/load
    method: GET
    data_selector: response
    params:
      id: preset_id
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
    params: {}
- name: preview_stream
  endpoint:
    path: /gopro/webcam/start
    method: GET
    data_selector: object
    params:
      port: '8556'
- name: stop_webcam
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
- name: get_camera_state
  endpoint:
    path: /gopro/webcam/state
    method: GET
    data_selector: object
- name: get_date_time
  endpoint:
    path: /gopro/webcam/date_time
    method: GET
    data_selector: object
- name: get_hardware_info
  endpoint:
    path: /gopro/webcam/hardware_info
    method: GET
    data_selector: object
- name: get_last_captured_media
  endpoint:
    path: /gopro/media/last_captured
    method: GET
    data_selector: object
- name: get_open_gopro_version
  endpoint:
    path: /gopro/version
    method: GET
    data_selector: object
- name: get_camera_name
  endpoint:
    path: /gopro/name
    method: GET
    data_selector: object
- name: anti_flicker
  endpoint:
    path: /gopro/settings/anti_flicker
    method: GET
    data_selector: object
- name: auto_power_down
  endpoint:
    path: /gopro/settings/auto_power_down
    method: GET
    data_selector: object
- name: bit_depth
  endpoint:
    path: /gopro/settings/bit_depth
    method: GET
    data_selector: object
- name: camera_volume
  endpoint:
    path: /gopro/settings/camera_volume
    method: GET
    data_selector: object
- name: control_mode
  endpoint:
    path: /gopro/settings/control_mode
    method: GET
    data_selector: object
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
- name: easy_night_photo
  endpoint:
    path: /gopro/easy_night_photo
    method: GET
    data_selector: object
- name: enable_night_photo
  endpoint:
    path: /gopro/enable_night_photo
    method: GET
    data_selector: object
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
    params: {}
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
- name: webcam_stop
  endpoint:
    path: /gopro/webcam/stop
    method: GET
    data_selector: object
- name: stop_webcam
  endpoint:
    path: /stop
    method: GET
    data_selector: '{}'
- name: get_webcam_status
  endpoint:
    path: /status
    method: GET
    data_selector: '{}'
- name: get_webcam_version
  endpoint:
    path: /version
    method: GET
    data_selector: '{}'
- name: start_webcam
  endpoint:
    path: /start
    method: GET
    data_selector: '{}'
- name: Webcam
  endpoint:
    path: /OpenGoPro/http#tag/Webcam
    method: GET
    data_selector: Webcam endpoints
    params: {}
- name: Media
  endpoint:
    path: /OpenGoPro/http#tag/Media
    method: GET
    data_selector: Media Info File Size
    params: {}
- name: webcam
  endpoint:
    path: /webcam
    method: GET
    data_selector: records
- name: camera_info
  endpoint:
    path: /camera/info
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in GoPro API
- Ensure OAuth2 is correctly set up for integration
- BLE Write Timeout in seconds. Not configurable.
- If a serial number is not passed when instantiating, the mDNS server will be queried
  to find a connected GoPro.
- This is a bit-masked value with the following bitwise definitions, numbered from
  least significant bit, with the example showing parsed fields from a sample of 0x00000c8b.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in api
- The close method will handle gracefully disconnecting BLE and Wifi.
- If the resource is not closed correctly, it is possible that your OS will maintain
  the BLE connection after the program exits.
- Make BLE interface controller-agnostic
- Fix line endings that were causing PyPi failures
- Fix install error by adding protobuf requirement
- Merge BLE and WiFi classes into one GoPro class
- Automatically periodically send keep alive
- Run pydocstyle on docstrings
- Add support to wait for encoding and system ready statuses in BLE
- Add protobuf framework (not being sent yet)
- Fix Wi-Fi SSID corner cases
- Handle case where BLE parameter has length 0
- Doc updates
- Add automatic VLC opening
- Wrote documentation and did some refactoring
- first usable Beta package.
- Should work on Windows and Mac
- open_gopro created. Incremental updates until the package could actually install
- No authentication is necessary for USB connections.
- WiFi connections require connecting with the correct SSID and password.
- Best practice to prevent the camera from inadvertently going to sleep is to start
  sending Keep Alive messages every 3.0 seconds after a connection is established.
- Not supported on Hero 11 Black Mini Hero 11 Black Hero 10 Black Hero 9 Black
- Request was successfully received by the camera
- Webcam feature enables broadcasting camera's video preview.
- Webcam stream is transferred as AVC/h264.
- Webcam does not enter idle mode once plugged in
- Intermittent failure to connect to the cameras Wifi Access Point
- Spurious Protobuf Notifications sent once camera is connected in Station mode
- The documentation assumes that the GoPro is always updated to the most recent version.
- The camera will reject requests to change settings while encoding; for example,
  if Hindsight feature is active, the user can not change settings.
- Querying the value for a setting that is not associated with the current preset/core
  mode results in an undefined value.
- The documentation assumes that the GoPro is always updated to the most recent version.
  This is relevant in cases where functionality changes between versions.
- The camera will reject requests to change settings while encoding.
- Some API responses may vary based on camera status
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_PARAM: Check the parameters in the request'
- 'ERROR: General error occurred, check the response for details'
- 'ValueError: Invalid combination of arguments.'
- 'InterfaceConfigFailure: In order to communicate via Wifi, there must be an available
  Wifi Interface.'
- A BLE connection failed to establish
- A connection that was previously established has terminated
- The scan failed without finding a device
- A command was attempted without waiting for the GoPro instance to open
- An error has occurred while setting up the communication interface
- Something was attempted that is not possible for the current configuration
- Attempt to access an invalid Open GoPro API version
- Error when parsing received data
- A response has timed out
- '200: Request was successfully received by the camera'
- 500 error status from Webcam endpoints
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - WirelessGoPro
  - WiredGoPro
  - BleCommands
  - BleSettings
  - BleStatuses
client:
  base_url: http://10.5.5.9:8080
  headers:
    Accept: application/json
source_metadata: null
