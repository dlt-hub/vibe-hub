resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: small_backpack
  endpoint:
    path: /small_backpack
    method: GET
    data_selector: records
- name: medium_bag
  endpoint:
    path: /medium_bag
    method: GET
    data_selector: records
- name: large_backpack
  endpoint:
    path: /large_backpack
    method: GET
    data_selector: records
- name: weapon_case
  endpoint:
    path: /weapon_case
    method: GET
    data_selector: records
- name: storage_case
  endpoint:
    path: /storage_case
    method: GET
    data_selector: records
- name: stash
  endpoint:
    path: /stash
    method: GET
    data_selector: records
- name: small_storage
  endpoint:
    path: /small_storage
    method: GET
    data_selector: records
- name: big_storage
  endpoint:
    path: /big_storage
    method: GET
    data_selector: records
- name: weapon_storage
  endpoint:
    path: /weapon_storage
    method: GET
    data_selector: records
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: records
- name: primary
  endpoint:
    path: /primary
    method: GET
    data_selector: records
- name: secondry
  endpoint:
    path: /secondry
    method: GET
    data_selector: records
- name: mask
  endpoint:
    path: /mask
    method: GET
    data_selector: records
- name: hat
  endpoint:
    path: /hat
    method: GET
    data_selector: records
- name: tshirt
  endpoint:
    path: /tshirt
    method: GET
    data_selector: records
- name: vest
  endpoint:
    path: /vest
    method: GET
    data_selector: records
- name: decals
  endpoint:
    path: /decals
    method: GET
    data_selector: records
- name: accessory
  endpoint:
    path: /accessory
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: core_inventory
  endpoint:
    path: /core_inventory
    method: GET
    data_selector: inventory_data
- name: core_inventory
  endpoint:
    path: /core_inventory
    method: GET
    data_selector: items
    params: {}
- name: inventory
  endpoint:
    path: /inventory
    method: GET
    data_selector: items
- name: clothing
  endpoint:
    path: /clothing
    method: GET
    data_selector: clothes
- name: inventory
  endpoint:
    path: /core_inventory/getInventory
    method: GET
    data_selector: inventory
- name: getItem
  endpoint:
    path: /core_inventory/getItem
    method: GET
    data_selector: item
    params: {}
- name: getItems
  endpoint:
    path: /core_inventory/getItems
    method: GET
    data_selector: items
    params: {}
- name: getItemBySlot
  endpoint:
    path: /core_inventory/getItemBySlot
    method: GET
    data_selector: item
    params: {}
- name: getItemCount
  endpoint:
    path: /core_inventory/getItemCount
    method: GET
    data_selector: count
    params: {}
- name: getSlotByItem
  endpoint:
    path: /core_inventory/getSlotByItem
    method: GET
    data_selector: slots
    params: {}
- name: getFirstSlotByItem
  endpoint:
    path: /core_inventory/getFirstSlotByItem
    method: GET
    data_selector: slot
    params: {}
- name: getItemsList
  endpoint:
    path: /core_inventory/getItemsList
    method: GET
    data_selector: itemsList
    params: {}
- name: getInventory
  endpoint:
    path: /core_inventory/getInventory
    method: GET
    data_selector: inventory
    params: {}
- name: addItem
  endpoint:
    path: /core_inventory/addItem
    method: POST
    data_selector: addItemResponse
    params: {}
- name: removeItem
  endpoint:
    path: /core_inventory/removeItem
    method: DELETE
    data_selector: removeItemResponse
    params: {}
- name: removeItemExact
  endpoint:
    path: /core_inventory/removeItemExact
    method: DELETE
    data_selector: removeItemExactResponse
    params: {}
- name: setItem
  endpoint:
    path: /core_inventory/setItem
    method: PUT
    data_selector: setItemResponse
    params: {}
- name: loadPlayerInventory
  endpoint:
    path: /core_inventory/loadPlayerInventory
    method: POST
    data_selector: loadPlayerInventoryResponse
    params: {}
- name: getItem
  endpoint:
    path: /core_inventory/getItem
    method: GET
- name: getItems
  endpoint:
    path: /core_inventory/getItems
    method: GET
- name: getItemBySlot
  endpoint:
    path: /core_inventory/getItemBySlot
    method: GET
- name: getItemCount
  endpoint:
    path: /core_inventory/getItemCount
    method: GET
- name: getSlotsByItem
  endpoint:
    path: /core_inventory/getSlotsByItem
    method: GET
- name: getFirstSlotByItem
  endpoint:
    path: /core_inventory/getFirstSlotByItem
    method: GET
- name: getItemsList
  endpoint:
    path: /core_inventory/getItemsList
    method: GET
- name: getInventory
  endpoint:
    path: /core_inventory/getInventory
    method: GET
- name: addItem
  endpoint:
    path: /core_inventory/addItem
    method: POST
- name: removeItem
  endpoint:
    path: /core_inventory/removeItem
    method: POST
- name: removeItemExact
  endpoint:
    path: /core_inventory/removeItemExact
    method: POST
- name: setItem
  endpoint:
    path: /core_inventory/setItem
    method: POST
- name: loadPlayerInventory
  endpoint:
    path: /core_inventory/loadPlayerInventory
    method: GET
- name: openInventory
  endpoint:
    path: /openInventory
    method: GET
- name: openHolder
  endpoint:
    path: /openHolder
    method: GET
- name: canCarry
  endpoint:
    path: /canCarry
    method: GET
- name: hasItem
  endpoint:
    path: /hasItem
    method: GET
- name: clearInventory
  endpoint:
    path: /clearInventory
    method: GET
- name: clearAllInventory
  endpoint:
    path: /clearAllInventory
    method: GET
- name: openLoot
  endpoint:
    path: /openLoot
    method: GET
- name: openLootAdvanced
  endpoint:
    path: /openLootAdvanced
    method: GET
- name: setDurability
  endpoint:
    path: /setDurability
    method: GET
- name: removeDurability
  endpoint:
    path: /removeDurability
    method: GET
- name: setMetadata
  endpoint:
    path: /setMetadata
    method: GET
- name: updateMetadata
  endpoint:
    path: /updateMetadata
    method: GET
- name: updateInventorySize
  endpoint:
    path: /updateInventorySize
    method: GET
- name: confiscatePlayerInventory
  endpoint:
    path: /confiscatePlayerInventory
    method: GET
- name: confiscateInventory
  endpoint:
    path: /confiscateInventory
    method: GET
- name: returnPlayerInventory
  endpoint:
    path: /returnPlayerInventory
    method: GET
- name: returnInventory
  endpoint:
    path: /returnInventory
    method: GET
- name: registerDynamicItem
  endpoint:
    path: /registerDynamicItem
    method: GET
- name: openInventory
  endpoint:
    path: /core_inventory/openInventory
    method: GET
- name: openHolder
  endpoint:
    path: /core_inventory/openHolder
    method: GET
- name: canCarry
  endpoint:
    path: /core_inventory/canCarry
    method: GET
- name: hasItem
  endpoint:
    path: /core_inventory/hasItem
    method: GET
- name: clearInventory
  endpoint:
    path: /core_inventory/clearInventory
    method: GET
- name: clearAllInventory
  endpoint:
    path: /core_inventory/clearAllInventory
    method: GET
- name: openLoot
  endpoint:
    path: /core_inventory/openLoot
    method: GET
- name: openLootAdvanced
  endpoint:
    path: /core_inventory/openLootAdvanced
    method: GET
- name: setDurability
  endpoint:
    path: /core_inventory/setDurability
    method: GET
- name: removeDurability
  endpoint:
    path: /core_inventory/removeDurability
    method: GET
- name: setMetadata
  endpoint:
    path: /core_inventory/setMetadata
    method: GET
- name: updateMetadata
  endpoint:
    path: /core_inventory/updateMetadata
    method: GET
- name: updateInventorySize
  endpoint:
    path: /core_inventory/updateInventorySize
    method: GET
- name: confiscatePlayerInventory
  endpoint:
    path: /core_inventory/confiscatePlayerInventory
    method: GET
- name: confiscateInventory
  endpoint:
    path: /core_inventory/confiscateInventory
    method: GET
- name: returnPlayerInventory
  endpoint:
    path: /core_inventory/returnPlayerInventory
    method: GET
- name: returnInventory
  endpoint:
    path: /core_inventory/returnInventory
    method: GET
- name: registerDynamicItem
  endpoint:
    path: /core_inventory/registerDynamicItem
    method: GET
- name: stores
  endpoint:
    path: /core/clothing/stores
    method: GET
    data_selector: stores
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: WEED HARVEST
  endpoint:
    Type: generation
    Time: 60000
- name: COCAINE PROCESSING
  endpoint:
    Type: processing
    Time: 60000
- name: COCAINE SALES
  endpoint:
    Type: sales
    Time: 60000
- Title: WEED HARVEST
  Type: generation
  Time: 60000
  GenerationItems:
  - itemName: weed_skunk
    itemAmount: 1
  - itemName: weed_purplehaze
    itemAmount: 1
- Title: COCAINE PROCESSING
  Type: processing
  Time: 60000
  ProcessingItems:
  - ProcessingFromItem: coca_leaf
    ProcessingFromItemAmount: 10
    ProcessingToItem: cokebaggy
    ProcessingToItemAmount: 1
  - ProcessingFromItem: cokebaggy
    ProcessingFromItemAmount: 10
    ProcessingToItem: coke_small_brick
    ProcessingToItemAmount: 1
- Title: COCAINE SALES
  Type: sales
  Time: 60000
  SalesItems:
  - SaleItem: cokebaggy
    SaleAmount: 10
    SalePriceForAmount: 100
  - SaleItem: coke_small_brick
    SaleAmount: 1
    SalePriceForAmount: 100
- name: StashCanCarryItem
  endpoint:
    path: /inventory/server/StashCanCarryItem
    method: POST
    data_selector: success
- name: AddItemIntoStash
  endpoint:
    path: /inventory/server/AddItemIntoStash
    method: POST
    data_selector: success
- name: RemoveItemIntoStash
  endpoint:
    path: /inventory/server/RemoveItemIntoStash
    method: POST
    data_selector: success
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: isOrganizationZone
  endpoint:
    path: /core_gangs/isOrganizationZone
    method: GET
- name: isPlayerOrganizationZone
  endpoint:
    path: /core_gangs/isPlayerOrganizationZone
    method: GET
- name: setPlayerToOrg
  endpoint:
    path: /core_gangs/setPlayerToOrg
    method: POST
- name: setPlayerAsOrgOwner
  endpoint:
    path: /core_gangs/setPlayerAsOrgOwner
    method: POST
- name: setZoneToOrg
  endpoint:
    path: /core_gangs/setZoneToOrg
    method: POST
- name: startWar
  endpoint:
    path: /core_gangs/startWar
    method: POST
- name: isWarInProgress
  endpoint:
    path: /core_gangs/isWarInProgress
    method: GET
- name: removePlayerFromOrganization
  endpoint:
    path: /core_gangs/removePlayerFromOrganization
    method: POST
- name: removeZoneOwner
  endpoint:
    path: /core_gangs/removeZoneOwner
    method: POST
- name: getOrganization
  endpoint:
    path: /core_gangs/getOrganization
    method: GET
- name: createOrganization
  endpoint:
    path: /core_gangs/createOrganization
    method: POST
- name: deleteOrganization
  endpoint:
    path: /core_gangs/deleteOrganization
    method: DELETE
- name: getZoneOrganization
  endpoint:
    path: /core_gangs/getZoneOrganization
    method: GET
- name: getOrganizationZones
  endpoint:
    path: /core_gangs/getOrganizationZones
    method: GET
- name: refreshOrganizationOnAllClient
  endpoint:
    path: /core_gangs/refreshOrganizationOnAllClient
    method: POST
- name: refreshZoneOnAllClient
  endpoint:
    path: /core_gangs/refreshZoneOnAllClient
    method: POST
- name: refreshCriminalOnAllClient
  endpoint:
    path: /core_gangs/refreshCriminalOnAllClient
    method: POST
- name: refreshBountyOnAllClient
  endpoint:
    path: /core_gangs/refreshBountyOnAllClient
    method: POST
- name: organization
  endpoint:
    path: /core_gangs/organization
    method: GET
- name: zone
  endpoint:
    path: /core_gangs/zone
    method: GET
- name: CreateOrg
  endpoint:
    path: /createorg
    method: POST
    data_selector: null
    params: {}
- name: SetZone
  endpoint:
    path: /setzone
    method: POST
    data_selector: null
    params: {}
- name: SetOrg
  endpoint:
    path: /setorg
    method: POST
    data_selector: null
    params: {}
- name: SetOrgOwner
  endpoint:
    path: /setorgowner
    method: POST
    data_selector: null
    params: {}
- name: ResetZone
  endpoint:
    path: /resetzone
    method: POST
    data_selector: null
    params: {}
- name: DeleteOrg
  endpoint:
    path: /deleteorg
    method: POST
    data_selector: null
    params: {}
- name: CreateOrg
  endpoint:
    path: /createorg
    method: POST
    data_selector: response
    params: {}
- name: SetZone
  endpoint:
    path: /setzone
    method: POST
    data_selector: response
    params: {}
- name: SetOrg
  endpoint:
    path: /setorg
    method: POST
    data_selector: response
    params: {}
- name: SetOrgOwner
  endpoint:
    path: /setorgowner
    method: POST
    data_selector: response
    params: {}
- name: ResetZone
  endpoint:
    path: /resetzone
    method: POST
    data_selector: response
    params: {}
- name: DeleteOrg
  endpoint:
    path: /deleteorg
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mechanic_points_system
  endpoint:
    path: /services/data/vXX.X/sobjects/MechanicPoints
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: vehicle_customization_prices
  endpoint:
    path: /services/data/vXX.X/sobjects/VehicleCustomization
    method: GET
    data_selector: records
    params: {}
- name: stock_tires
  endpoint:
    path: /stock_tires
    method: GET
    data_selector: label
    params: {}
- name: michelin_pilot
  endpoint:
    path: /michelin_pilot
    method: GET
    data_selector: label
    params: {}
- name: toyo_proxes
  endpoint:
    path: /toyo_proxes
    method: GET
    data_selector: label
    params: {}
- name: drift_tires
  endpoint:
    path: /drift_tires
    method: GET
    data_selector: label
    params: {}
- name: turbo_lvl_1
  endpoint:
    path: /turbo_lvl_1
    method: GET
    data_selector: label
    params: {}
- name: turbo_lvl_2
  endpoint:
    path: /turbo_lvl_2
    method: GET
    data_selector: label
    params: {}
- name: stock_brakes
  endpoint:
    path: /stock_brakes
    method: GET
    data_selector: label
    params: {}
- name: race_brakes
  endpoint:
    path: /race_brakes
    method: GET
    data_selector: label
    params: {}
- name: carbon_brakes
  endpoint:
    path: /carbon_brakes
    method: GET
    data_selector: label
    params: {}
- name: ceramic_brakes
  endpoint:
    path: /ceramic_brakes
    method: GET
    data_selector: label
    params: {}
- name: stock_sparkplugs
  endpoint:
    path: /stock_sparkplugs
    method: GET
    data_selector: label
    params: {}
- name: ngk_sparkplugs
  endpoint:
    path: /ngk_sparkplugs
    method: GET
    data_selector: label
    params: {}
- name: iridium_sparkplugs
  endpoint:
    path: /iridium_sparkplugs
    method: GET
    data_selector: label
    params: {}
- name: stock_tires
  endpoint:
    path: /stock_tires
    method: GET
    data_selector: label
    params: {}
- name: michelin_pilot
  endpoint:
    path: /michelin_pilot
    method: GET
    data_selector: label
    params: {}
- name: toyo_proxes
  endpoint:
    path: /toyo_proxes
    method: GET
    data_selector: label
    params: {}
- name: drift_tires
  endpoint:
    path: /drift_tires
    method: GET
    data_selector: label
    params: {}
- name: turbo_lvl_1
  endpoint:
    path: /turbo_lvl_1
    method: GET
    data_selector: label
    params: {}
- name: turbo_lvl_2
  endpoint:
    path: /turbo_lvl_2
    method: GET
    data_selector: label
    params: {}
- name: stock_brakes
  endpoint:
    path: /stock_brakes
    method: GET
    data_selector: label
    params: {}
- name: race_brakes
  endpoint:
    path: /race_brakes
    method: GET
    data_selector: label
    params: {}
- name: carbon_brakes
  endpoint:
    path: /carbon_brakes
    method: GET
    data_selector: label
    params: {}
- name: ceramic_brakes
  endpoint:
    path: /ceramic_brakes
    method: GET
    data_selector: label
    params: {}
- name: stock_sparkplugs
  endpoint:
    path: /stock_sparkplugs
    method: GET
    data_selector: label
    params: {}
- name: ngk_sparkplugs
  endpoint:
    path: /ngk_sparkplugs
    method: GET
    data_selector: label
    params: {}
- name: iridium_sparkplugs
  endpoint:
    path: /iridium_sparkplugs
    method: GET
    data_selector: label
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Fix
  endpoint:
    path: /fix
    method: POST
- name: MechanicAdmin
  endpoint:
    path: /mechanicadmin
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Fix
  endpoint:
    path: /fix
    method: GET
    data_selector: records
- name: MechanicAdmin
  endpoint:
    path: /mechanicadmin
    method: GET
    data_selector: records
- name: FLEECA BANK
  endpoint:
    path: /augmented_locations/flee_bank
    method: GET
    data_selector: coords
    params: {}
- name: SUPERMARKET
  endpoint:
    path: /augmented_locations/supermarket
    method: GET
    data_selector: coords
    params: {}
- name: GAS STATION
  endpoint:
    path: /augmented_locations/gas_station
    method: GET
    data_selector: coords
    params: {}
- name: SANDY EMERGENCY SERVICES
  endpoint:
    path: /augmented_locations/sandy_emergency_services
    method: GET
    data_selector: coords
    params: {}
- name: FLEECA BANK
  endpoint:
    path: AugmentedLocations/FLEECA BANK
    method: GET
    data_selector: coords
    params: {}
- name: SUPERMARKET
  endpoint:
    path: AugmentedLocations/SUPERMARKET
    method: GET
    data_selector: coords
    params: {}
- name: GAS STATION
  endpoint:
    path: AugmentedLocations/GAS STATION
    method: GET
    data_selector: coords
    params: {}
- name: SANDY EMERGENCY SERVICES
  endpoint:
    path: AugmentedLocations/SANDY EMERGENCY SERVICES
    method: GET
    data_selector: coords
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: AddAugmentedWindowCoords
  endpoint:
    path: /AddAugmentedWindowCoords
    method: POST
    data_selector: result
    params: {}
- name: AddAugmentedWindowEntity
  endpoint:
    path: /AddAugmentedWindowEntity
    method: POST
    data_selector: result
    params: {}
- name: RemoveAugmentedWindow
  endpoint:
    path: /RemoveAugmentedWindow
    method: POST
    data_selector: result
    params: {}
- name: UpdateAugmentedWindow
  endpoint:
    path: /UpdateAugmentedWindow
    method: POST
    data_selector: result
    params: {}
- name: AddAugmentedLocation
  endpoint:
    path: /AddAugmentedLocation
    method: POST
    data_selector: result
    params: {}
- name: RemoveAugmentedLocation
  endpoint:
    path: /RemoveAugmentedLocation
    method: POST
    data_selector: result
    params: {}
- name: UpdateAugmentedLocation
  endpoint:
    path: /UpdateAugmentedLocation
    method: POST
    data_selector: result
    params: {}
- name: AddAugmentedWindowCoords
  endpoint:
    path: /AddAugmentedWindowCoords
    method: POST
    data_selector: ''
    params: {}
- name: AddAugmentedWindowEntity
  endpoint:
    path: /AddAugmentedWindowEntity
    method: POST
    data_selector: ''
    params: {}
- name: RemoveAugmentedWindow
  endpoint:
    path: /RemoveAugmentedWindow
    method: POST
    data_selector: ''
    params: {}
- name: UpdateAugmentedWindow
  endpoint:
    path: /UpdateAugmentedWindow
    method: POST
    data_selector: ''
    params: {}
- name: AddAugmentedLocation
  endpoint:
    path: /AddAugmentedLocation
    method: POST
    data_selector: response
    params: {}
- name: RemoveAugmentedLocation
  endpoint:
    path: /RemoveAugmentedLocation
    method: POST
    data_selector: response
    params: {}
- name: UpdateAugmentedLocation
  endpoint:
    path: /UpdateAugmentedLocation
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: JobOne
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: JobTwo
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: JobThree
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Shop
  endpoint:
    path: /shop
    method: GET
    data_selector: items
- name: Tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: CaseOpeningItems
  endpoint:
    path: /case-opening-items
    method: GET
    data_selector: caseItems
- name: JobOne
  endpoint:
    path: /JobOne
    method: GET
    data_selector: records
    params: {}
- name: JobTwo
  endpoint:
    path: /JobTwo
    method: GET
    data_selector: records
    params: {}
- name: JobThree
  endpoint:
    path: /JobThree
    method: GET
    data_selector: records
    params: {}
- name: Shop
  endpoint:
    path: /shop
    method: GET
    data_selector: items
- name: Tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Make sure to have the primary key constraint set on your name column in coreinventories
  SQL table.
- Run this code if it's not the case `ALTER TABLE `coreinventories` ADD CONSTRAINT
  name_pk PRIMARY KEY (`name`);`
- Inventory doesn't have built-in store script.
- You will need a store script to sell/buy the item at those locations.
- Always try clearing server cache and restarting the server to see if issue disappears
- Make sure to have the primary key constraint set on your name column in coreinventories
  SQL table
- When you right click an item and then click info and the store name, a waypoint
  is set on the map. Nothing more. You will need a store script to sell/buy the item
  at those locations.
- Add the image of your items in core_inventory/html/img folder.
- Only .png image are included in the FXManifest.
- Ensure mysql-async and framework are started before core_inventory
- Inventory actions may require player identification.
- Clothing actions may vary based on player state.
- Inventory can be locked or unlocked by the player.
- Check common issues to prevent contacting support
- If you use mysql-async replace it with oxmysql (Just try it)
- Uses core_inventory for clothing management
- Make sure you have oxmysql (if using mysql-async replace that with oxmysql)
- Upload the SQL file to your database
- ensure core_clothing in the server.cfg
- if you use ilennium-appearance, you need to import oxLib in the FxManifest, in the
  shared_script section
- If you use mysql-async replace it with oxmysql
- This script uses stashes for Value Zones for that funcionality to work you need
  to check inventory compatability
- If you use QB-INVENTORY / LJ-INVENTORY / PS-INVENTORY or any fork of QB-INVENTORY,
  please add all the code behind in `qb-inventory(lj-inventory / ps-inventory etc.)
  / server / main.lua` at the total end of the file
- Put core_gangs in your resources folder
- Upload the sql file on your database to create the required table / column on your
  database
- Check that all the item set in the config file (GenerationItem / ProcessingFrom
  / ProcessingTo / SaleItem) exist change it.
- Add the items in your items.lua (QBCore / ox_inventory / qs-inventory) OR in your
  item database (ESX).
- Read the config file to parameter your framework / inventory script / zone etc.
- Make sure you have qb-target or ox_target script
- Ensure the resource in your server.cfg
- Uses Event-based architecture for inventory management
- Uses OAuth2 with refresh token — requires setup of connected app in qb-core
- Some objects may return nulls in deeply nested fields
- Put core_mechanic in your resources folder
- Add the items to either items.lua on QBCore or items in database on ESX
- Read the config file and choose your framework and target script
- Remove qb-vehiclefailure or any other script that would affect vehicle damage
- This happens when you have another script modifying vehicle damage which clashes
  with core_mechanic damage systems. Please disable those scripts (qb-vehiclefailure,
  RealisticVehicleFailure)
- Currenly some customers are experiencing issue with framework not being found even
  when the config is setup correctly. This is a problem with C8RE TOOLS part of the
  script.
- This happens when you have another script modifying vehicle damage which clashes
  with core_mechanic damage systems. Please disable those scripts (qb-vehiclefailure,
  RealisticVehicleFailure).
- Currently some customers are experiencing issue with framework not being found even
  when the config is setup correctly. This is a problem with C8RE TOOLS part of the
  script. And currently we haven't found out why this happens to some customers.
- Alerts when player shoot in shooting zones or nearby npcs
- Installation is considered Drag & Drop
- To avoid duplicate calls make sure trigger/export is not in a loop (for, while).
  If it's not then make sure you send from server-side.
- EnableShootingAlerts is true
- EnableCarJackingAlert is true
- EnableCarTheftAlert is true
- The lowest bet amount is 50.
- Shooting alerts triggered when player shoots in shooting zones or nearby NPCs
- Carjacking alerts triggered when a player gets a car from someone on the road
- Offduty needs to be setup in config to toggle duty status from any duty script
- To avoid duplicate calls make sure trigger/export is not in a loop (for, while).
  If its not then make sure you send from server-side.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'not_enough_credits: Not enough credits'
- 'wrong_usage: Wrong usage'
- Cannot remove call with active units
- Cant accept call because it was removed
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: core.tebex.io
  headers:
    Accept: application/json
source_metadata: null
