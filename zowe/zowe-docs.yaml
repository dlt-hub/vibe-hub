resources:
- name: Zowe server-side components
  endpoint:
    path: /stable/user-guide/install-zos
    method: GET
- name: Zowe client-side components
  endpoint:
    path: /stable/user-guide/install-zowe-client-side-components
    method: GET
- name: API Mediation Layer
  endpoint:
    path: /api/mediation/layer
    method: GET
- name: Zowe Application Framework
  endpoint:
    path: /api/application/framework
    method: GET
- name: report_bugs
  endpoint:
    path: /create-bug-report
    method: POST
    data_selector: report
    params: {}
- name: report_enhancements
  endpoint:
    path: /create-enhancement-request
    method: POST
    data_selector: request
    params: {}
- name: API Gateway
  endpoint:
    path: /
    method: GET
- name: API Catalog
  endpoint:
    path: /apicatalog/ui/v1
    method: GET
- name: API Discovery Service
  endpoint:
    path: /api/v1
    method: GET
- name: Caching Service
  endpoint:
    path: /cachingservice/api/v1
    method: GET
- name: API Gateway
  endpoint:
    path: /
    method: GET
- name: API Catalog
  endpoint:
    path: /apicatalog/ui/v1
    method: GET
- name: API Discovery
  endpoint:
    path: /api/v1
    method: GET
- name: Caching service
  endpoint:
    path: /cachingservice/api/v1
    method: GET
- name: API Gateway
  endpoint:
    path: /
    method: GET
- name: API Catalog
  endpoint:
    path: /apicatalog/ui/v1
    method: GET
- name: API Discovery
  endpoint:
    path: /api/discovery
    method: GET
- name: Caching service
  endpoint:
    path: /cachingservice/api/v1
    method: GET
- name: API Gateway
  endpoint:
    path: /
    method: GET
- name: API Catalog
  endpoint:
    path: /apicatalog/ui/v1
    method: GET
- name: API Discovery
  endpoint:
    path: /
    method: GET
- name: Caching Service
  endpoint:
    path: /cachingservice/api/v1
    method: GET
- name: API Gateway
  endpoint:
    path: /
    method: GET
- name: API Catalog
  endpoint:
    path: /apicatalog/ui/v1
    method: GET
- name: API Discovery
  endpoint:
    path: /api/discovery
    method: GET
- name: API Gateway
  endpoint:
    path: /
    method: GET
- name: API Catalog
  endpoint:
    path: /apicatalog/ui/v1
    method: GET
- name: API Discovery
  endpoint:
    path: /api/discovery
    method: GET
- name: Caching service
  endpoint:
    path: /cachingservice/api/v1
    method: GET
- name: API Gateway
  endpoint:
    path: /
    method: GET
- name: API Catalog
  endpoint:
    path: /apicatalog/ui/v1
    method: GET
- name: API Discovery
  endpoint:
    path: /api/discovery
    method: GET
- name: Caching service
  endpoint:
    path: /cachingservice/api/v1
    method: GET
- name: Zowe System Services (ZSS)
  endpoint:
    path: /zss/api/v1
    method: GET
- name: auth
  endpoint:
    path: /auth
    method: POST
- name: config
  endpoint:
    path: /config
    method: POST
- name: daemon
  endpoint:
    path: /daemon
    method: POST
- name: plugins
  endpoint:
    path: /plugins
    method: POST
- name: provisioning
  endpoint:
    path: /provisioning
    method: POST
- name: zos-console
  endpoint:
    path: /zos-console
    method: POST
- name: zos-files
  endpoint:
    path: /zos-files
    method: POST
- name: zos-jobs
  endpoint:
    path: /zos-jobs
    method: POST
- name: zos-logs
  endpoint:
    path: /zos-logs
    method: POST
- name: zos-ssh
  endpoint:
    path: /zos-ssh
    method: POST
- name: zos-tso
  endpoint:
    path: /zos-tso
    method: POST
- name: zos-workflows
  endpoint:
    path: /zos-workflows
    method: POST
- name: zosmf
  endpoint:
    path: /zosmf
    method: GET
- name: data_set
  endpoint:
    path: /zos-files/list/data-set
    method: GET
    data_selector: data sets
    params:
      host: host123
      port: port123
      user: ibmuser
      password: pass123
- name: .zosattributes
  endpoint:
    path: /stable/user-guide/using-a-zos-attributes-file
    method: GET
    data_selector: instructions
    params: {}
- name: IBM CICS Plug-in
  endpoint:
    path: /stable/user-guide/cli-cicsplugin
    method: GET
- name: IBM Db2 Plug-in
  endpoint:
    path: /stable/user-guide/cli-db2plugin
    method: GET
- name: IBM z/OS FTP Plug-in
  endpoint:
    path: /stable/user-guide/cli-ftpplugin
    method: GET
- name: IBM MQ Plug-in
  endpoint:
    path: /stable/user-guide/cli-mqplugin
    method: GET
- name: Third-party Zowe Conformant Plug-ins
  endpoint:
    path: https://openmainframeproject.org/our-projects/zowe-conformance-program/
    method: GET
- name: Zowe Client Java SDK
  endpoint:
    path: https://mvnrepository.com/artifact/org.zowe.client.java.sdk/zowe-client-java-sdk
    method: GET
    data_selector: ''
    params: {}
- name: Zowe Client Kotlin SDK
  endpoint:
    path: https://zowe.github.io/zowe-client-kotlin-sdk/
    method: GET
    data_selector: ''
    params: {}
- name: Zowe Client Node.js SDK
  endpoint:
    path: https://www.npmjs.com/package/@zowe/zos-files-for-zowe-sdk
    method: GET
    data_selector: ''
    params: {}
- name: Zowe Client Python SDK
  endpoint:
    path: https://zowe-client-python-sdk.readthedocs.io/en/latest/
    method: GET
    data_selector: ''
    params: {}
- name: Zowe Application Framework
  endpoint:
    path: /zowe/application/framework
    method: GET
- name: Zowe API Mediation Layer
  endpoint:
    path: /zowe/api/mediation/layer
    method: GET
- name: Z System Services Server
  endpoint:
    path: /zowe/system/services
    method: GET
- name: Zowe Cross Memory Server
  endpoint:
    path: /zowe/cross/memory/server
    method: GET
- name: Zowe Application Framework
  endpoint:
    path: /zowe/application/framework
    method: GET
    data_selector: applications
- name: Zowe API Mediation Layer
  endpoint:
    path: /zowe/api/mediation/layer
    method: GET
    data_selector: apis
- name: Z System Services Server
  endpoint:
    path: /zowe/system/services
    method: GET
    data_selector: services
- name: Zowe Cross Memory Server
  endpoint:
    path: /zowe/cross/memory/server
    method: GET
    data_selector: crossMemoryServices
- name: Zowe Application Framework
  endpoint:
    path: /zowe/application/framework
    method: GET
- name: Zowe API Mediation Layer
  endpoint:
    path: /zowe/api/mediation/layer
    method: GET
- name: Z System Services Server
  endpoint:
    path: /zowe/system/services
    method: GET
- name: Zowe Cross Memory Server
  endpoint:
    path: /zowe/cross/memory/server
    method: GET
- name: ZWESISTC
  endpoint:
    path: /services/data/v3.2.x/ZWESISTC
    method: GET
- name: ZWESASTC
  endpoint:
    path: /services/data/v3.2.x/ZWESASTC
    method: GET
- name: ZWESLSTC
  endpoint:
    path: /services/data/v3.2.x/ZWESLSTC
    method: GET
- name: API Mediation Layer
  endpoint:
    path: /apicatalog/api/v1/application/health
    method: GET
- name: z/OS Services
  endpoint:
    path: /<service>/api/v1/version
    method: GET
- name: Zowe Explorer profiles
  endpoint:
    path: /stable/user-guide/ze-profiles
    method: GET
    data_selector: profiles
    params: {}
- name: Zowe Explorer installation
  endpoint:
    path: /stable/user-guide/ze-install
    method: GET
    data_selector: installation
    params: {}
- name: Zowe Explorer FAQs
  endpoint:
    path: /stable/getting-started/zowe_faq#zowe-explorer-faq
    method: GET
    data_selector: faqs
    params: {}
- name: Java SDK
  endpoint:
    path: https://mvnrepository.com/artifact/org.zowe.client.java.sdk/zowe-client-java-sdk
    method: GET
- name: Kotlin SDK
  endpoint:
    path: https://zowe.github.io/zowe-client-kotlin-sdk/
    method: GET
- name: Node.js SDK
  endpoint:
    path: https://docs.zowe.org/stable/typedoc/index.html
    method: GET
- name: Python SDK
  endpoint:
    path: https://zowe-client-python-sdk.readthedocs.io/en/latest/
    method: GET
- name: MVS data sets
  endpoint:
    path: /install/MVS
    method: POST
    data_selector: datasets
    params:
      incremental: dataset.prefix
- name: Zowe SMP/E
  endpoint:
    path: /stable/user-guide/install-zowe-smpe-overview
    method: GET
    data_selector: program materials
    params: {}
- name: mandatory_operational_requisites
  endpoint:
    path: /installation/requirements/operational_requisites
    method: GET
    data_selector: products
    params: {}
- name: storage_requirements
  endpoint:
    path: /installation/requirements/storage
    method: GET
    data_selector: storage_requirements
    params: {}
- name: mvs
  endpoint:
    path: /config/mvs
    method: POST
- name: security
  endpoint:
    path: /config/security
    method: POST
- name: apfauth
  endpoint:
    path: /config/apfauth
    method: POST
- name: certificate
  endpoint:
    path: /config/certificate
    method: POST
- name: stc
  endpoint:
    path: /config/stc
    method: POST
- name: vsam
  endpoint:
    path: /config/vsam
    method: POST
- name: Full Zowe server-side configuration
  endpoint:
    path: /stable/user-guide/configure-zowe-zosmf-workflow
    method: GET
    data_selector: workflow
    params: {}
- name: zowe
  endpoint:
    path: /stable/appendix/zowe-yaml-configuration
    method: GET
- name: custom_data_sets
  endpoint:
    path: /zwe/init/mvs
    method: POST
    data_selector: datasets
    params:
      dataset_prefix: IBMUSER.ZWE
      parmlib: IBMUSER.ZWE.CUST.PARMLIB
      jcllib: IBMUSER.ZWE.CUST.JCLLIB
      authLoadlib: IBMUSER.ZWEV3.SZWEAUTH
      authPluginLib: IBMUSER.ZWE.CUST.ZWESAPL
- name: authLoadLib
  endpoint:
    path: zowe.setup.dataset.authLoadLib
    method: POST
- name: authPluginLib
  endpoint:
    path: zowe.setup.dataset.authPluginLib
    method: POST
- name: caching-service
  endpoint:
    path: /services/data/v3.2.x/initialize-vsam-dataset
    method: POST
    data_selector: records
- name: api-catalog
  endpoint:
    path: /components/api-catalog
    method: GET
    data_selector: records
- name: discovery
  endpoint:
    path: /components/discovery
    method: GET
    data_selector: records
- name: gateway
  endpoint:
    path: /components/gateway
    method: GET
    data_selector: records
- name: caching-service
  endpoint:
    path: /components/caching-service
    method: GET
    data_selector: records
- name: zaas
  endpoint:
    path: /components/zaas
    method: GET
    data_selector: records
- name: app-server
  endpoint:
    path: /components/app-server
    method: GET
    data_selector: records
- name: zss
  endpoint:
    path: /components/zss
    method: GET
    data_selector: records
- name: cloud_provisioning_services
  endpoint:
    path: /zosmf/provisioning/
    method: GET
- name: tso_address_space_services
  endpoint:
    path: /zosmf/tsoApp
    method: GET
- name: zos_console_services
  endpoint:
    path: /zosmf/restconsoles/
    method: GET
- name: zos_data_set_and_file_interface
  endpoint:
    path: /zosmf/restfiles/
    method: GET
- name: zos_jobs_interface
  endpoint:
    path: /zosmf/restjobs/
    method: GET
- name: zosmf_workflow_services
  endpoint:
    path: /zosmf/workflow/
    method: GET
- name: cloud_provisioning_services
  endpoint:
    path: /zosmf/provisioning/
    method: GET
- name: tso_address_space_services
  endpoint:
    path: /zosmf/tsoApp
    method: GET
- name: zos_console_services
  endpoint:
    path: /zosmf/restconsoles/
    method: GET
- name: zos_data_set_and_file_interface
  endpoint:
    path: /zosmf/restfiles/
    method: GET
- name: zos_jobs_interface
  endpoint:
    path: /zosmf/restjobs/
    method: GET
- name: zosmf_workflow_services
  endpoint:
    path: /zosmf/workflow/
    method: GET
- name: cloud_provisioning_services
  endpoint:
    path: /zosmf/provisioning/
    method: GET
- name: tso_address_space_services
  endpoint:
    path: /zosmf/tsoApp
    method: GET
- name: zos_console_services
  endpoint:
    path: /zosmf/restconsoles/
    method: GET
- name: zos_data_set_and_file_rest_interface
  endpoint:
    path: /zosmf/restfiles/
    method: GET
- name: zos_jobs_rest_interface
  endpoint:
    path: /zosmf/restjobs/
    method: GET
- name: zosmf_workflow_services
  endpoint:
    path: /zosmf/workflow/
    method: GET
- name: cloud_provisioning_services
  endpoint:
    path: /zosmf/provisioning/
    method: GET
    data_selector: services
- name: tsoe_address_space_services
  endpoint:
    path: /zosmf/tsoApp
    method: GET
    data_selector: services
- name: zos_console_services
  endpoint:
    path: /zosmf/restconsoles/
    method: GET
    data_selector: services
- name: zos_data_set_and_file_interface
  endpoint:
    path: /zosmf/restfiles/
    method: GET
    data_selector: services
- name: zos_jobs_interface
  endpoint:
    path: /zosmf/restjobs/
    method: GET
    data_selector: services
- name: zosmf_workflow_services
  endpoint:
    path: /zosmf/workflow/
    method: GET
    data_selector: services
- name: cloud_provisioning_services
  endpoint:
    path: /zosmf/provisioning/
    method: GET
- name: tso_address_space_services
  endpoint:
    path: /zosmf/tsoApp
    method: GET
- name: zos_console_services
  endpoint:
    path: /zosmf/restconsoles/
    method: GET
- name: zos_data_set_file_interface
  endpoint:
    path: /zosmf/restfiles/
    method: GET
- name: zos_jobs_interface
  endpoint:
    path: /zosmf/restjobs/
    method: GET
- name: zosmf_workflow_services
  endpoint:
    path: /zosmf/workflow/
    method: GET
- name: cloud_provisioning_services
  endpoint:
    path: /zosmf/provisioning/
    method: GET
- name: tso_address_space_services
  endpoint:
    path: /zosmf/tsoApp
    method: GET
- name: zos_console_services
  endpoint:
    path: /zosmf/restconsoles/
    method: GET
- name: zos_data_set_file_interface
  endpoint:
    path: /zosmf/restfiles/
    method: GET
- name: zos_jobs_interface
  endpoint:
    path: /zosmf/restjobs/
    method: GET
- name: zosmf_workflow_services
  endpoint:
    path: /zosmf/workflow/
    method: GET
- name: cloud_provisioning_services
  endpoint:
    path: /zosmf/provisioning/
    method: GET
- name: tso_address_space_services
  endpoint:
    path: /zosmf/tsoApp
    method: GET
- name: zos_console_services
  endpoint:
    path: /zosmf/restconsoles/
    method: GET
- name: zos_data_set_file_interface
  endpoint:
    path: /zosmf/restfiles/
    method: GET
- name: zos_jobs_interface
  endpoint:
    path: /zosmf/restjobs/
    method: GET
- name: zosmf_workflow_services
  endpoint:
    path: /zosmf/workflow/
    method: GET
- name: Zowe Installation
  endpoint:
    path: /stable/user-guide/install-zowe-server-install-wizard
    method: GET
- name: Installation
  endpoint:
    path: /zowe/setup/dataset/parmlib
    method: ALLOCATE
    data_selector: datasets
- name: APF Auth
  endpoint:
    path: /zowe/setup/dataset/authLoadlib
    method: APF_AUTHORIZE
    data_selector: datasets
- name: Security
  endpoint:
    path: /zowe/setup/security
    method: SET_PERMISSIONS
    data_selector: permissions
- name: Certificates Option 1
  endpoint:
    path: /zowe/certificates/generate
    method: CREATE
    data_selector: certificates
- name: STC
  endpoint:
    path: /zowe/stc
    method: COPY
    data_selector: jobs
- name: SMP/E Internet Service Retrieval
  endpoint:
    path: /configure-smpe-internet-service-retrieval
    method: GET
- name: jobs
  endpoint:
    path: /zosmf/restjobs/jobs
    method: GET
    data_selector: jobs
- name: Zowe CLI
  endpoint:
    path: /install-zowe-cli
    method: GET
- name: Zowe CLI installation checklist
  endpoint:
    path: /stable/user-guide/cli-install-cli-checklist
    method: GET
    data_selector: checklist
    params: {}
- name: Installing Zowe CLI and Zowe CLI plug-ins
  endpoint:
    path: /stable/user-guide/cli-installcli
    method: GET
    data_selector: installation
    params: {}
- name: Configuring Zowe CLI
  endpoint:
    path: /stable/user-guide/cli-configuringcli
    method: GET
    data_selector: configuration
    params: {}
- name: team configuration
  endpoint:
    path: /stable/user-guide/appendix/zowe-glossary#team-configuration
    method: GET
- name: stopping automatic storage of prompted values
  endpoint:
    path: /stable/user-guide/cli-configure-cli-on-os-where-scs-unavailable
    method: GET
- name: IBM CICS Plug-in for Zowe CLI
  endpoint:
    path: /stable/user-guide/cli-cicsplugin
    method: GET
    data_selector: requirements
    params: {}
- name: IBM Db2 Database Plug-in for Zowe CLI
  endpoint:
    path: /stable/user-guide/cli-db2plugin
    method: GET
    data_selector: requirements
    params: {}
- name: IBM z/OS FTP Plug-in for Zowe CLI
  endpoint:
    path: /stable/user-guide/cli-ftpplugin
    method: GET
    data_selector: requirements
    params: {}
- name: IBM MQ Plug-in for Zowe CLI
  endpoint:
    path: /stable/user-guide/cli-mqplugin
    method: GET
    data_selector: requirements
    params: {}
- name: Visual Studio Code Extension for Zowe
  endpoint:
    path: /stable/user-guide/ze-install
    method: GET
    data_selector: requirements
    params: {}
- name: sample_installation_jobs
  endpoint:
    path: /installation/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: SMP/E options subentry values
  endpoint:
    path: /stable/user-guide/install-zowe-smpe-options
    method: GET
    data_selector: subentry_values
    params: {}
- name: Installation steps
  endpoint:
    path: /stable/user-guide/install-zowe-smpe-steps
    method: GET
    data_selector: installation_steps
    params: {}
- name: Zowe SMP/E package
  endpoint:
    path: /download/zowe-smpe-package-3.0.0.zip
    method: GET
    data_selector: files
    params: {}
- name: SMP/E considerations
  endpoint:
    path: /user-guide/install-zowe-smpe
    method: GET
    data_selector: installation_steps
    params: {}
- name: Installation steps
  endpoint:
    path: /user-guide/install-zowe-smpe
    method: GET
    data_selector: overview
    params: {}
- name: ZWE1SMPE
  endpoint:
    path: /sample/jobs/ZWE1SMPE
    method: SMP/E
    data_selector: jobs
    params: {}
- name: ZWE2RCVE
  endpoint:
    path: /sample/jobs/ZWE2RCVE
    method: RECEIVE
    data_selector: jobs
    params: {}
- name: ZWE3ALOC
  endpoint:
    path: /sample/jobs/ZWE3ALOC
    method: ALLOCATE
    data_selector: jobs
    params: {}
- name: ZWE4ZFS
  endpoint:
    path: /sample/jobs/ZWE4ZFS
    method: ALLOMZFS
    data_selector: jobs
    params: {}
- name: ZWE5MKD
  endpoint:
    path: /sample/jobs/ZWE5MKD
    method: MKDIR
    data_selector: jobs
    params: {}
- name: ZWE6DDEF
  endpoint:
    path: /sample/jobs/ZWE6DDEF
    method: DDDEF
    data_selector: jobs
    params: {}
- name: ZWE7APLY
  endpoint:
    path: /sample/jobs/ZWE7APLY
    method: APPLY
    data_selector: jobs
    params: {}
- name: ZWE8ACPT
  endpoint:
    path: /sample/jobs/ZWE8ACPT
    method: ACCEPT
    data_selector: jobs
    params: {}
- name: SMP/E Considerations
  endpoint:
    path: /user-guide/install-zowe-smpe
    method: GET
    data_selector: installation_steps
    params: {}
- name: SMP/E Options Subentry Values
  endpoint:
    path: /user-guide/install-zowe-smpe
    method: GET
    data_selector: smp_e_options
    params: {}
- name: Installation Steps Overview
  endpoint:
    path: /user-guide/install-zowe-smpe
    method: GET
    data_selector: installation_overview
    params: {}
- name: ZWE1SMPE
  endpoint:
    path: /ZWE1SMPE
    method: EXEC
    data_selector: job
    params: {}
- name: ZWE2RCVE
  endpoint:
    path: /ZWE2RCVE
    method: RECEIVE
    data_selector: job
    params: {}
- name: ZWE3ALOC
  endpoint:
    path: /ZWE3ALOC
    method: ALLOCATE
    data_selector: job
    params: {}
- name: ZWE4ZFS
  endpoint:
    path: /ZWE4ZFS
    method: ALLOMZFS
    data_selector: job
    params: {}
- name: ZWE5MKD
  endpoint:
    path: /ZWE5MKD
    method: MKDIR
    data_selector: job
    params: {}
- name: ZWE6DDEF
  endpoint:
    path: /ZWE6DDEF
    method: DDDEF
    data_selector: job
    params: {}
- name: ZWE7APLY
  endpoint:
    path: /ZWE7APLY
    method: APPLY
    data_selector: job
    params: {}
- name: ZWE8ACPT
  endpoint:
    path: /ZWE8ACPT
    method: ACCEPT
    data_selector: job
    params: {}
- name: SMP/E commands
  endpoint:
    path: /v2.18.x/user-guide/install-zowe-smpe
    method: GET
    data_selector: instructions
    params: {}
- name: ZWE1SMPE
  endpoint:
    path: /ZWE1SMPE
    method: EXEC
    data_selector: records
    params: {}
- name: ZWE2RCVE
  endpoint:
    path: /ZWE2RCVE
    method: EXEC
    data_selector: records
    params: {}
- name: ZWE3ALOC
  endpoint:
    path: /ZWE3ALOC
    method: EXEC
    data_selector: records
    params: {}
- name: ZWE4ZFS
  endpoint:
    path: /ZWE4ZFS
    method: EXEC
    data_selector: records
    params: {}
- name: ZWE5MKD
  endpoint:
    path: /ZWE5MKD
    method: EXEC
    data_selector: records
    params: {}
- name: ZWE6DDEF
  endpoint:
    path: /ZWE6DDEF
    method: EXEC
    data_selector: records
    params: {}
- name: ZWE7APLY
  endpoint:
    path: /ZWE7APLY
    method: EXEC
    data_selector: records
    params: {}
- name: ZWE8ACPT
  endpoint:
    path: /ZWE8ACPT
    method: EXEC
    data_selector: records
    params: {}
- name: SMP/E commands
  endpoint:
    path: /install-zowe-smpe
    method: GET
    data_selector: installation_steps
    params: {}
- name: Zowe SMP/E package
  endpoint:
    path: /download-zowe-smpe-package
    method: GET
    data_selector: download_package
    params: {}
- name: upload_package
  endpoint:
    path: /upload
    method: POST
    data_selector: upload_status
- name: extract_package
  endpoint:
    path: /extract
    method: POST
    data_selector: extract_status
- name: SMP/E installation steps
  endpoint:
    path: /v2.16.x/user-guide/install-zowe-smpe
    method: GET
    data_selector: installation_steps
- name: Download Zowe SMP/E package
  endpoint:
    path: https://www.zowe.org/download.html
    method: GET
    data_selector: download_package
- name: allocate_smp_e_target_and_distributions_libraries
  endpoint:
    path: /allocate/smp/e/target/distributions/libraries
    method: POST
    data_selector: results
- name: allocate_create_and_mount_zsf_files
  endpoint:
    path: /allocate/create/mount/zsf/files
    method: POST
    data_selector: results
- name: allocate_z_os_unix_paths
  endpoint:
    path: /allocate/z/os/unix/paths
    method: POST
    data_selector: results
- name: create_dddef_entries
  endpoint:
    path: /create/dddef/entries
    method: POST
    data_selector: results
- name: perform_smp_e_apply
  endpoint:
    path: /perform/smp/e/apply
    method: POST
    data_selector: results
- name: perform_smp_e_accept
  endpoint:
    path: /perform/smp/e/accept
    method: POST
    data_selector: results
- name: run_report_crosszone
  endpoint:
    path: /run/report/crosszone
    method: POST
    data_selector: results
- name: ZWE1SMPE
  endpoint:
    path: /services/data/ZWE1SMPE
    method: GET
    data_selector: records
    params: {}
- name: ZWE2RCVE
  endpoint:
    path: /services/data/ZWE2RCVE
    method: GET
    data_selector: records
    params: {}
- name: ZWE3ALOC
  endpoint:
    path: /services/data/ZWE3ALOC
    method: GET
    data_selector: records
    params: {}
- name: ZWE4ZFS
  endpoint:
    path: /services/data/ZWE4ZFS
    method: GET
    data_selector: records
    params: {}
- name: ZWE5MKD
  endpoint:
    path: /services/data/ZWE5MKD
    method: GET
    data_selector: records
    params: {}
- name: ZWE6DDEF
  endpoint:
    path: /services/data/ZWE6DDEF
    method: GET
    data_selector: records
    params: {}
- name: ZWE7APLY
  endpoint:
    path: /services/data/ZWE7APLY
    method: GET
    data_selector: records
    params: {}
- name: ZWE8ACPT
  endpoint:
    path: /services/data/ZWE8ACPT
    method: GET
    data_selector: records
    params: {}
- name: SMP/E considerations for installing Zowe
  endpoint:
    path: /user-guide/install-zowe-smpe
    method: GET
- name: Download and unzip the Zowe SMP/E package
  endpoint:
    path: /user-guide/install-zowe-smpe-package
    method: GET
- name: FILESYS
  endpoint:
    path: /allocate/filesystem
    method: CREATE
    data_selector: job_parameters
    params: {}
- name: FTP_UPLOAD
  endpoint:
    path: /upload
    method: POST
    data_selector: upload_parameters
    params: {}
- name: EXTRACT
  endpoint:
    path: /extract
    method: EXEC
    data_selector: extract_parameters
    params: {}
- name: CUSTOMIZE_JOBS
  endpoint:
    path: /customize/jobs
    method: COPY
    data_selector: customization_parameters
    params: {}
- name: component_package
  endpoint:
    path: /stable/extend/packaging-zos-extensions
    method: GET
    data_selector: components
    params: {}
- name: Zowe server-side components
  endpoint:
    path: /v2.18.x/user-guide/install-zos
    method: GET
- name: Zowe client-side components
  endpoint:
    path: /v2.18.x/user-guide/user-roadmap-zowe-cli
    method: GET
- name: Zowe server-side components
  endpoint:
    path: /v2.17.x/user-guide/install-zos
    method: GET
- name: Zowe client-side components
  endpoint:
    path: /v2.17.x/user-guide/user-roadmap-zowe-cli
    method: GET
- name: Zowe server-side components
  endpoint:
    path: /v2.16.x/user-guide/install-zos
    method: GET
- name: Zowe client-side components
  endpoint:
    path: /v2.16.x/user-guide/user-roadmap-zowe-cli
    method: GET
- name: Zowe server-side components
  endpoint:
    path: /v2.15.x/user-guide/install-zos
    method: GET
    data_selector: components
    params: {}
- name: Zowe client-side components
  endpoint:
    path: /v2.15.x/user-guide/user-roadmap-zowe-cli
    method: GET
    data_selector: components
    params: {}
- name: Zowe Runtime
  endpoint:
    path: /v3.0.x/user-guide/install-overview
    method: GET
    data_selector: runtime_directory
- name: workspace_directory
  endpoint:
    path: zowe.workspaceDirectory
- name: log_directory
  endpoint:
    path: zowe.logDirectory
- name: keystore_directory
  endpoint:
    path: zowe.setup.certificate
- name: extension_directory
  endpoint:
    path: zowe.extensionDirectory
- name: ZWESISTC
  endpoint:
    path: /services/data/v3.0.x/ZWESISTC
    method: GET
    data_selector: ZWESISTC
    params: {}
- name: ZWESASTC
  endpoint:
    path: /services/data/v3.0.x/ZWESASTC
    method: GET
    data_selector: ZWESASTC
    params: {}
- name: ZWESLSTC
  endpoint:
    path: /services/data/v3.0.x/ZWESLSTC
    method: GET
    data_selector: ZWESLSTC
    params: {}
- name: API Catalog
  endpoint:
    path: /apicatalog/api/v1/application/health
    method: GET
- name: z/OS Services
  endpoint:
    path: /serviceId/api/v1/version
    method: GET
- name: Cloud Portal
  endpoint:
    path: /services/cloud-portal
    method: GET
- name: Configuration Assistant
  endpoint:
    path: /services/configuration-assistant
    method: GET
- name: ISPF
  endpoint:
    path: /services/ispf
    method: GET
- name: Workload Management
  endpoint:
    path: /services/workload-management
    method: GET
- name: Zowe Client Java SDK
  endpoint:
    path: https://github.com/Zowe-Java-SDK
    method: GET
- name: Zowe Client Kotlin SDK
  endpoint:
    path: https://zowe.github.io/zowe-client-kotlin-sdk/
    method: GET
- name: Zowe Client Node.js SDK
  endpoint:
    path: https://docs.zowe.org/stable/typedoc/index.html
    method: GET
- name: Zowe Client Python SDK
  endpoint:
    path: https://zowe-client-python-sdk.readthedocs.io/en/latest/
    method: GET
- name: component_manifest
  endpoint:
    path: /stable/appendix/server-component-manifest
    method: GET
    data_selector: records
- name: lifecycle_scripts
  endpoint:
    path: /stable/user-guide/zowe-getting-started-tutorial
    method: GET
    data_selector: records
- name: environment_variables
  endpoint:
    path: /stable/getting-started/zowe-v2-overview
    method: GET
    data_selector: records
- name: packaging
  endpoint:
    path: /stable/extend/migrate-extensions
    method: GET
    data_selector: records
- name: general_code_guidelines
  endpoint:
    path: /v3.1.x/contribute/guidelines-code/categories
    method: GET
- name: ui_guidelines
  endpoint:
    path: /v3.1.x/contribute/guidelines-ui/ui
    method: GET
- name: zowe_learning_resources
  endpoint:
    path: /v3.1.x/getting-started/zowe-resources
    method: GET
- name: data_set
  endpoint:
    path: /zos-files/list
    method: GET
    data_selector: datasets
    params: {}
- name: partitioned_data_set
  endpoint:
    path: /zos-files/download
    method: GET
    data_selector: members
    params: {}
- name: Zowe Explorer
  endpoint:
    path: /v3.1.x/user-guide/ze-install
    method: GET
    data_selector: records
- name: auth
  endpoint:
    path: /auth
    method: POST
- name: config
  endpoint:
    path: /config
    method: POST
- name: daemon
  endpoint:
    path: /daemon
    method: POST
- name: plugins
  endpoint:
    path: /plugins
    method: POST
- name: provisioning
  endpoint:
    path: /provisioning
    method: POST
- name: zos-console
  endpoint:
    path: /zos-console
    method: POST
- name: zos-files
  endpoint:
    path: /zos-files
    method: POST
- name: zos-jobs
  endpoint:
    path: /zos-jobs
    method: POST
- name: zos-logs
  endpoint:
    path: /zos-logs
    method: POST
- name: zos-ssh
  endpoint:
    path: /zos-ssh
    method: POST
- name: zos-tso
  endpoint:
    path: /zos-tso
    method: POST
- name: zos-workflows
  endpoint:
    path: /zos-workflows
    method: POST
- name: zosmf
  endpoint:
    path: /zosmf
    method: POST
- name: zos-files
  endpoint:
    path: /zos-files
    method: GET
    data_selector: datasets
    params: {}
- name: certificate
  endpoint:
    path: /zowe/setup/certificate
    method: POST
    data_selector: certificate
    params:
      type: JCERACFKS
      keyring:
        name: ZoweKeyring
        import:
          dsName: PRODUCT.X.CERT.P12
          password: password
- name: PKCS12
  endpoint:
    path: /generate/pkcs12
    method: POST
    data_selector: keystore
    params:
      directory: /var/zowe/keystore
      lock: true
      name: localhost
      caAlias: local_ca
- name: JCERACFKS
  endpoint:
    path: /generate/jceracfks
    method: POST
    data_selector: keyring
    params:
      name: ZoweKeyring
- name: Zowe Explorer
  endpoint:
    path: /extensions/ZoweExplorer
    method: GET
- name: Zowe Explorer
  endpoint:
    path: /installing-zowe-explorer
    method: GET
    data_selector: extension
    params: {}
- name: Zowe Explorer extensions
  endpoint:
    path: /installing-zowe-explorer-extensions
    method: GET
    data_selector: extension
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: zos-files
  endpoint:
    path: /zos-files
    method: GET
- name: zos-jobs
  endpoint:
    path: /zos-jobs
    method: GET
- name: zos-console
  endpoint:
    path: /zos-console
    method: GET
- name: zos-ssh
  endpoint:
    path: /zos-ssh
    method: GET
- name: zos-workflows
  endpoint:
    path: /zos-workflows
    method: GET
- name: zos-tso
  endpoint:
    path: /zos-tso
    method: GET
- name: zosmf
  endpoint:
    path: /zosmf
    method: GET
- name: auth
  endpoint:
    path: /auth
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: daemon
  endpoint:
    path: /daemon
    method: GET
- name: plugins
  endpoint:
    path: /plugins
    method: GET
- name: profiles
  endpoint:
    path: /profiles
    method: GET
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
- name: zos-console
  endpoint:
    path: /zos-console
    method: GET
- name: zos-files
  endpoint:
    path: /zos-files
    method: GET
- name: zos-jobs
  endpoint:
    path: /zos-jobs
    method: GET
- name: zos-ssh
  endpoint:
    path: /zos-ssh
    method: GET
- name: zos-workflows
  endpoint:
    path: /zos-workflows
    method: GET
- name: zos-tso
  endpoint:
    path: /zos-tso
    method: GET
- name: zosmf
  endpoint:
    path: /zosmf
    method: GET
- name: auth
  endpoint:
    path: /auth
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: daemon
  endpoint:
    path: /daemon
    method: GET
- name: plugins
  endpoint:
    path: /plugins
    method: GET
- name: profiles
  endpoint:
    path: /profiles
    method: GET
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
- name: zos-console
  endpoint:
    path: /zos-console
    method: GET
- name: zos-files
  endpoint:
    path: /zos-files
    method: GET
- name: zos-jobs
  endpoint:
    path: /zos-jobs
    method: GET
- name: zos-ssh
  endpoint:
    path: /zos-ssh
    method: GET
- name: zos-workflows
  endpoint:
    path: /zos-workflows
    method: GET
- name: zos-tso
  endpoint:
    path: /zos-tso
    method: GET
- name: zosmf
  endpoint:
    path: /zosmf
    method: GET
- name: auth
  endpoint:
    path: /auth
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: daemon
  endpoint:
    path: /daemon
    method: GET
- name: plugins
  endpoint:
    path: /plugins
    method: GET
- name: profiles
  endpoint:
    path: /profiles
    method: GET
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
- name: zos-console
  endpoint:
    path: /zos-console
    method: GET
- name: zos-files
  endpoint:
    path: /zos-files
    method: GET
- name: zos-jobs
  endpoint:
    path: /zos-jobs
    method: GET
- name: zos-ssh
  endpoint:
    path: /zos-ssh
    method: GET
- name: zos-workflows
  endpoint:
    path: /zos-workflows
    method: GET
- name: zos-tso
  endpoint:
    path: /zos-tso
    method: GET
- name: zosmf
  endpoint:
    path: /zosmf
    method: GET
- name: Zowe Desktop
  endpoint:
    path: /zlux/ui/v1/
    method: GET
- name: VT Terminal
  endpoint:
    path: /vt-terminal
    method: GET
- name: API Catalog
  endpoint:
    path: /api-catalog
    method: GET
- name: Editor
  endpoint:
    path: /editor
    method: GET
- name: JES Explorer
  endpoint:
    path: /jes-explorer
    method: GET
- name: IP Explorer
  endpoint:
    path: /ip-explorer
    method: GET
- name: MVS Explorer
  endpoint:
    path: /mvs-explorer
    method: GET
- name: USS Explorer
  endpoint:
    path: /uss-explorer
    method: GET
- name: spool_files
  endpoint:
    path: /zos-jobs/list/spool-files-by-jobid
    method: GET
    data_selector: spool_ids
    params:
      id: $jobid
- name: IBM CICS Plug-in for Zowe CLI
  endpoint:
    path: /v3.0.x/user-guide/cli-cicsplugin
    method: GET
    data_selector: requirements
    params: {}
- name: IBM Db2 Database Plug-in for Zowe CLI
  endpoint:
    path: /v3.0.x/user-guide/cli-db2plugin
    method: GET
    data_selector: requirements
    params: {}
- name: IBM z/OS FTP Plug-in for Zowe CLI
  endpoint:
    path: /v3.0.x/user-guide/cli-ftpplugin
    method: GET
    data_selector: requirements
    params: {}
- name: IBM MQ Plug-in for Zowe CLI
  endpoint:
    path: /v3.0.x/user-guide/cli-mqplugin
    method: GET
    data_selector: requirements
    params: {}
- name: Visual Studio Code Extension for Zowe
  endpoint:
    path: /v3.0.x/user-guide/ze-install
    method: GET
    data_selector: requirements
    params: {}
- name: z/OSMF
  endpoint:
    path: /zosmf
    method: GET
    data_selector: status
    params: {}
- name: Connections
  endpoint:
    path: /connections
    method: GET
- name: JES Working Sets
  endpoint:
    path: /jes-working-sets
    method: GET
- name: Files Working Sets
  endpoint:
    path: /files-working-sets
    method: GET
- name: TSO Sessions
  endpoint:
    path: /tso-sessions
    method: GET
- name: Settings
  endpoint:
    path: /settings
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: auto_sync
  endpoint:
    path: /services/data/v1/auto-sync
    method: GET
    data_selector: records
    params: {}
- name: dataset_allocation
  endpoint:
    path: /allocate/dataset
    method: POST
    data_selector: allocation_result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: resource_name
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: TSO Session
  endpoint:
    path: /v3.0.x/user-guide/intellij-tso-cli
    method: GET
    data_selector: TSO Sessions
    params: {}
- name: Zowe z/OS Components
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_pax_sbom.zip
    method: GET
    data_selector: SBOM
    params: {}
- name: Zowe CLI Standalone Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_sbom.zip
    method: GET
    data_selector: SBOM
    params: {}
- name: Zowe CLI Standalone Plugins Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_plugins_sbom.zip
    method: GET
    data_selector: SBOM
    params: {}
- name: Zowe Client NodeJS SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_node_sdk_sbom.zip
    method: GET
    data_selector: SBOM
    params: {}
- name: Zowe Client Python SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_python_sdk_sbom.zip
    method: GET
    data_selector: SBOM
    params: {}
- name: All Zowe's Source Repositories
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_sources_sbom.zip
    method: GET
    data_selector: SBOM
    params: {}
- name: Zowe z/OS Components (PAX, SMP/E, PSWI)
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_pax_sbom.zip
    method: GET
    data_selector: SBOM Link
    params: {}
- name: Zowe CLI Standalone Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_sbom.zip
    method: GET
    data_selector: SBOM Link
    params: {}
- name: Zowe CLI Standalone Plugins Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_plugins_sbom.zip
    method: GET
    data_selector: SBOM Link
    params: {}
- name: Zowe Client NodeJS SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_node_sdk_sbom.zip
    method: GET
    data_selector: SBOM Link
    params: {}
- name: Zowe Client Python SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_python_sdk_sbom.zip
    method: GET
    data_selector: SBOM Link
    params: {}
- name: All Zowe's Source Repositories used in final artifacts
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_sources_sbom.zip
    method: GET
    data_selector: SBOM Link
    params: {}
- name: Zowe z/OS Components (PAX, SMP/E, PSWI)
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_pax_sbom.zip
    method: GET
- name: Zowe CLI Standalone Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_sbom.zip
    method: GET
- name: Zowe CLI Standalone Plugins Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_plugins_sbom.zip
    method: GET
- name: Zowe Client NodeJS SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_node_sdk_sbom.zip
    method: GET
- name: Zowe Client Python SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_python_sdk_sbom.zip
    method: GET
- name: All Zowe's Source Repositories used in final artifacts
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_sources_sbom.zip
    method: GET
- name: Zowe z/OS Components
  endpoint:
    path: /zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_pax_sbom.zip
    method: GET
- name: Zowe CLI Standalone Package
  endpoint:
    path: /zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_sbom.zip
    method: GET
- name: Zowe CLI Standalone Plugins Package
  endpoint:
    path: /zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_plugins_sbom.zip
    method: GET
- name: Zowe Client NodeJS SDK
  endpoint:
    path: /zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_node_sdk_sbom.zip
    method: GET
- name: Zowe Client Python SDK
  endpoint:
    path: /zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_python_sdk_sbom.zip
    method: GET
- name: Zowe's Source Repositories
  endpoint:
    path: /zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_sources_sbom.zip
    method: GET
- name: Zowe z/OS Components (PAX, SMP/E, PSWI)
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_pax_sbom.zip
    method: GET
- name: Zowe CLI Standalone Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_sbom.zip
    method: GET
- name: Zowe CLI Standalone Plugins Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_plugins_sbom.zip
    method: GET
- name: Zowe Client NodeJS SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_node_sdk_sbom.zip
    method: GET
- name: Zowe Client Python SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_python_sdk_sbom.zip
    method: GET
- name: All Zowe's Source Repositories used in final artifacts
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_sources_sbom.zip
    method: GET
- name: Zowe z/OS Components (PAX, SMP/E, PSWI)
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_pax_sbom.zip
    method: GET
- name: Zowe CLI Standalone Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_sbom.zip
    method: GET
- name: Zowe CLI Standalone Plugins Package
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_cli_standalone_plugins_sbom.zip
    method: GET
- name: Zowe Client NodeJS SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_node_sdk_sbom.zip
    method: GET
- name: Zowe Client Python SDK
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_client_python_sdk_sbom.zip
    method: GET
- name: All Zowe's Source Repositories used in final artifacts
  endpoint:
    path: https://zowe.jfrog.io/zowe/list/libs-release-local/org/zowe/sbom/2.0.0/zowe_sources_sbom.zip
    method: GET
- name: component
  endpoint:
    path: /appendix/server-component-manifest
    method: GET
    data_selector: components
- name: manifest
  endpoint:
    path: /appendix/server-component-manifest
    method: GET
    data_selector: components
    params: {}
- name: API Gateway service
  endpoint:
    path: /api/gateway
    method: GET
- name: ZLUX Plug-in
  endpoint:
    path: /api/zlux-plugin
    method: GET
notes:
- Zowe offers modern interfaces to interact with z/OS and allows users to interact
  with the mainframe system in a way that is similar to what they experience on cloud
  platforms today.
- Some CLI plug-ins require the installation of components on z/OS.
- If you use the Docker technical preview to run the Linux parts of Zowe in a container,
  you only need to configure the Zowe z/OS component to start the ZSS server.
- Contribute a blog about Zowe. Read the Zowe blog guidelines to get started.
- Present Zowe on conferences and social channels
- Authentication endpoints will not support the route `/api/v1/gateway`, and instead
  will support only `/gateway/api/v1`
- Java 17 will be required for the API Mediation Layer to run
- PassTickets are deprecated in Zowe V3, and are no longer recommended due to the
  inefficiency of configuration wherein users must configure a PassTicket for every
  service that uses them.
- Static onboarding will continue to be available.
- Zowe is an open source software which provides both an extensible framework, and
  a set of tools that allow mainframe development and operation teams to securely
  manage, develop, and automate resources and services on z/OS family mainframes.
- Contributions can be made in many forms.
- All feedback is welcome.
- Zowe functionality includes exposing Z-based components, such as z/OSMF, as REST
  APIs.
- Zowe has a high availability feature built in.
- Zowe architecture exposes Z-based components as REST APIs.
- Zowe provides a collection of components that expose Z-based functionality as REST
  APIs.
- Components can run on z/OS or Linux via Docker.
- Zowe API ML implements a Single-Sign-On feature which allows users to authenticate
  once.
- API ML uses multiple authentication methods - Basic Auth, OIDC/OAuth2, Client certificates
  and Personal Access Tokens.
- Zowe uses the Caching Service to centralize the state data persistent in high availability
  (HA) mode.
- Zowe is an open source project within the Open Mainframe Project that provides modern
  software interfaces on IBM z/OS.
- The Secure Credential Store Plug-in is no longer required for Zowe Explorer.
- Secure credential storage functionality is now contained in the Zowe CLI core application,
  which stores credentials securely by default.
- Zowe V2 is now in maintenance state. Only patch releases are planned until the Zowe
  V2 End of Service scheduled for early 2027.
- The content from this page has been removed while Zowe Docs gathers feedback from
  the Zowe community.
- With the introduction of team profiles, the Secure Credential Store (SCS) Plug-in
  is deprecated.
- You can continue using Zowe CLI V1 profiles with Zowe CLI V2.
- Using team profiles in configuration files helps to improve the initial setup of
  Zowe CLI by making service connection details easier to share and easier to store
  within projects.
- Commands in the zowe config command group now let you manage security for any option
  value.
- Zowe CLI V2 prompts you to enter the username and password securely by default.
- z/OSMF is the required authentication provider for JES Explorer.
- z/OSMF is the required authentication provider for MVS Explorer.
- z/OSMF is the required authentication provider for USS Explorer.
- The Zowe Desktop requires the app-server Component of Zowe to be enabled.
- This is set by default, but can be controlled by the Zowe YAML property components.app-server.enabled
  which should be set to true.
- Using Zowe CLI on z/OS Unix Systems Services is not supported at this time.
- Tokens expire after a period of time defined by your security administrator.
- If you omit connection details from a service profile, the CLI uses the information
  from your base profile.
- MFA codes are different from SSO tokens.
- Team configuration can make the initial setup of Zowe CLI more efficient by making
  service connection details easier to share and maintain within your organization.
- For a team leader, or Dev-Ops advocate, sharing global team configurations managed
  from one location, such as a software change management system.
- Secure credential encryption is included with the Zowe CLI core application.
- When a command using a profile with missing user and password information is issued,
  Zowe CLI prompts you to enter the username and password.
- The default value of the autoStore property is true.
- A value of false prompts for missing values on all commands that you issue.
- If you omit connection details from a service profile, such as zosmf profile, the
  CLI uses the information from your base profile.
- Ensure that you do not provide username, password, host, or port directly on the
  service commands or profiles.
- Understand the security implications of accepting self-signed certificates at your
  site before you use this command.
- Secure credentials in an automation server or container
- Hide passwords and other sensitive information from plaintext in logs.
- Run this script from a bash terminal.
- You can combine multiple Zowe CLI commands in bash or shell scripts to automate
  actions on z/OS.
- The type of script that you write depends on the programming languages that you
  use and the environment where the script is executed.
- As of Zowe Version 2.11, Zowe Explorer and the Zowe Explorer API no longer use `node-keytar`,
  which was used to manage mainframe credentials. This change might cause issues for
  some users when trying to interact with remote environments.
- Consider other options. Use the Kubernetes Secrets plug-in for Zowe CLI and Zowe
  Explorer as an option for storing credentials in a Kubernetes containerized environment,
  or create your own Custom Credential Managers in Zowe Explorer and Zowe CLI.
- z/OS version is in active support, such as Version 2.5, and 3.1
- zFS volume has at least 1200 MB of free space for Zowe server components, the corresponding
  keystore, instance configuration files and logs, and third-party plug-ins.
- Zowe CLI requires approximately 100 MB of free disk space.
- Zowe is not an HTTP server, and ZIS has a trust relationship with ZSS.
- Support for Zowe Version 1 ended on Sept. 30, 2024.
- For testing purposes, it is not necessary to set up certificates when configuring
  the API Mediation Layer.
- Zowe runtime consists of multiple components and requires specific configurations.
- 'For testing purposes, it is not necessary to set up certificates when configuring
  the API Mediation Layer. You can configure Zowe without certificate setup and run
  Zowe with verifyCertificates: DISABLED.'
- For production environments, certificates are required. Ensure that certificates
  for each of the following services are issued by the Certificate Authority (CA)
  and that all keyrings contain the public part of the certificate for the relevant
  CA.
- Ensure that the software requirements described in Preparing for installation are
  met.
- Zowe requires configuration of security settings to operate in production.
- Use the `zwe` utility for managing Zowe installations.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The workspace directory should be defined in your Zowe configuration file as zowe.workspaceDirectory.
- The log directory should be defined in your Zowe configuration file as zowe.logDirectory.
- The extension directory should be created by system administrator and defined in
  your Zowe configuration file as zowe.extensionDirectory.
- Zowe runs in USS and makes heavy use of shell scripts and TCP/IP sockets.
- Multiple instances of Zowe can be started from the same Zowe z/OS runtime.
- Successful completion of steps 2, 3, and 4 may require elevated security permissions.
  We recommend you consult with your security administrator to assist with performing
  these steps.
- Granting users permissions requires elevated permissions. We recommend you consult
  with your security administrator to grant these user permissions.
- Starting and stopping of the ZWESLSTC main server is independent of the ZWESISTC
  cross memory server.
- If using SDSF to start or stop the cross memory server, enter '/' before the command.
- Not all components may have been started. Which components have been started depends
  on your setting of the component enabled status in Zowe configuration file (usually
  zowe.yaml).
- The path serviceId/api/v1/version depends on a specific service.
- 'Required roles: systems programmer, security administrator, storage administrator'
- To prepare for an installation or upgrade, your installation team should review
  the configuration requirements for both z/OSMF and the particular component to be
  installed.
- If you are connecting to the mainframe with methods other than a z/OSMF profile,
  you do not need to configure z/OSMF.
- Zowe client-side components were designed and tested to integrate with z/OSMF running
  on IBM version 2.5 z/OS mainframe systems.
- Zowe Explorer modernizes interaction with z/OS mainframes
- Profiles enable connection to services running on a mainframe
- Setting a MEMLIMIT is not recommended as doing so prevents issues caused by insufficient
  memory.
- Each Jobname has a default prefix of ZWE1, but that can be customized via the zowe.job.prefix
  value in the Zowe YAML file.
- MVS data sets are specified in the zowe.yaml configuration file under zowe.setup.dataset.prefix.
- Ensure that you update the zowe.setup.dataset.prefix value to match your system.
- Zowe consists of the FMID AZWE003.
- Basic Machine-Readable Materials are supplied under the base license.
- Zowe has no mandatory installation requisites.
- Zowe has no conditional installation requisites.
- Zowe has no conditional operational requisites.
- Zowe has no toleration/coexistence requisites.
- Zowe has no negative requisites.
- To successfully run 'zwe init security', 'zwe init apfauth', and 'zwe init certificate',
  elevated permissions are likely required.
- Zowe configuration tasks can be simplified with z/OSMF workflows.
- The workflow can run the zwe init command to initialize Zowe z/OS runtime.
- A valid zowe.yaml file is required to execute the Zowe installation step.
- Some objects like Contact may return nulls in deeply nested fields
- Uses YAML configuration for server installation and runtime.
- Ensure the value of node.home in the zowe.yaml is visible to the Zowe STC users,
  and contains bin/node.
- Zowe supports TLS versions 1.2 and 1.3.
- This procedure requires elevated permissions.
- 'Required role: security administrator.'
- Zowe uses digital certificates for secure, encrypted network communication over
  SSL/TLS and HTTPS protocols.
- Zowe supports using either file-based (PKCS12) or z/OS key ring-based keystores
  and truststores.
- The Caching service uses Infinispan by default, no longer requiring the VSAM setup
  action.
- Configuration Manager will not let Zowe servers start unless the configuration passes
  validation when checking it against the Zowe configuration schema.
- Zowe YAML content can be stored in PARMLIB as well.
- Components must follow Zowe server component package format standard.
- The base element z/OSMF is started by default at system initial program load (IPL).
- If your implementation uses an external security manager other than RACF, provide
  equivalent commands for your environment.
- Applications that depend on access to the operator console such as Zowe CLI's RestConsoles
  API require Version 2.3 or newer.
- To disable the cache in z/OSMF, update the server_override.xml file with the parameter
  allowBasicAuthLookup set to false.
- In z/OS V2.3, the base element z/OSMF is started by default at system initial program
  load (IPL).
- Update z/OSMF configuration with allowBasicAuthLookup="false" to generate a new
  JWT.
- Applications that depend on access to the operator console such as Zowe™ CLI's RestConsoles
  API require Version 2.3.
- Update z/OSMF configuration with allowBasicAuthLookup="false".
- In z/OS V2.3, z/OSMF is started by default at system initial program load (IPL).
- If using an external security manager other than RACF, provide equivalent commands.
- Update z/OSMF configuration with allowBasicAuthLookup="false" to resolve JWT issues.
- If your implementation uses an external security manager other than RACF, you provide
  equivalent commands for your environment.
- To use Zowe v2.18 and later versions, ensure that you use the latest version of
  the Zowe Server Install Wizard.
- The Zowe Server Install Wizard is currently available only as a technical preview.
- z/OS uses AXR (System REXX) component to perform Incident Log tasks.
- The CEA server, which is a co-requisite of the Common Information Model (CIM) server,
  enables the ability for z/OSMF to deliver z/OS events to C-language clients.
- z/OSMF uses the CIM server to perform capacity-provisioning and workload-management
  tasks.
- The CONSOLE and CONSPROF commands must exist in the authorized command table.
- IBM® 64-bit SDK for z/OS®, Java Technology Edition V8 or later is required.
- To prevent exceeds maximum region size errors, verify that the TSO maximum region
  size is a minimum of 65536 KB for the z/OS system.
- User IDs require a TSO segment (access) and an OMVS segment.
- To prevent SSL handshake failures when importing product information into z/OSMF,
  make sure that you have added the Digicert Intermediate CA certificate to the z/OSMF
  keyring.
- Write access is also required to the USS directories that are used for the installation
  process.
- Ensure the JOB REST services are enabled.
- Ensure the TSO REST services are enabled.
- Ensure the dataset and file REST services are enabled.
- z/OSMF Lite can be used in a non-production environment such as development, proof-of-concept,
  demo and so on.
- It takes 2-3 hours to set up z/OSMF Lite.
- The z/OSMF angel (IZUANG1) must be started before the z/OSMF server (IZUSVR1).
- Ensure that the message queue size is set to a large enough value. It is recommended
  that you specify an IPCMSGQBYTES value of at least 20971520 (20M) in BPXPRMxx.
- As you install Zowe CLI, you might encounter error messages that relate to cpu-features
  and ssh. You can safely ignore error messages of this type; the installation completes
  successfully. This behavior can occur when you install CLI from npm and also from
  a local package.
- Linux users might need to prepend sudo to npm commands.
- As you are installing Zowe CLI, you might encounter error messages that relate to
  `cpu-features` and `ssh`. You can safely ignore error messages of this type; the
  installation completes successfully.
- As you are installing Zowe CLI, you might encounter error messages that relate to
  cpu-features and ssh. You can safely ignore error messages of this type; the installation
  completes successfully.
- As you are installing Zowe CLI, you might encounter error messages that relate to
  `cpu-features` and `ssh`. You can safely ignore error messages of this type; the
  installation completes successfully. This behavior can occur when you install CLI
  from npm and from a local package.
- 'Required role: systems administrator'
- If your site functions behind a proxy server and blocks access to public registries,
  complete the following steps before you install Zowe CLI core and Zowe CLI plug-ins
  from your desired online registry.
- For CI/CD pipelines, we recommend using the credential management provided by the
  CI/CD tool (for example, Jenkins credentials or GitHub secrets) to store credentials
  and load them into environment variables in the pipeline.
- By default, Zowe CLI attempts to store sensitive information and credentials in
  the operating system’s credential storage.
- If Zowe CLI cannot find the value for a user ID or password, it prompts the user
  for that information and then stores the information securely when secure storage
  is available.
- In cases where secure storage is not possible, and the autoStore property is set
  to true, the credentials are saved as text in the applicable configuration file.
- You must update Zowe CLI using the method that you used to install Zowe CLI.
- Use commands to validate connection to z/OSMF, not user credentials.
- For the most secure environment, system administrators configure a server keyring
  with a server certificate signed by a CA.
- The uninstall process does not delete the profiles and credentials that you created
  when using the product from your computer.
- Deleting the directory does not harm your computer.
- You will receive a return code of 0 if this job runs correctly.
- Ensure you download the pax file in a different file system than where you put Zowe
  runtime.
- If you are unable to connect with ftp and only able to use sftp, use sftp at the
  command prompt instead of ftp.
- To install Zowe into its own SMP/E environment, consult the SMP/E manuals for instructions
  on creating and initializing the SMPCSI and SMP/E control data sets.
- You can use the sample jobs that are provided to perform part or all of the installation
  tasks. The SMP/E jobs assume that all DDDEF entries that are required for SMP/E
  execution have been defined in appropriate zones.
- You can use the SMP/E dialogs instead of the sample jobs to accomplish the SMP/E
  installation steps.
- You can now perform Zowe installation via the Zowe Server Install Wizard. Using
  the wizard streamlines the installation process and is an alternative to performing
  manual Zowe server-side component installation.
- 'If the oshell command gets a RC=256 and message "pax: checksum error on tape (got
  ee2e, expected 0)", then the archive file was not uploaded to the host in binary
  format.'
- When Zowe is downloaded from the web, the RELFILE data set name is prefixed by your
  chosen high-level qualifier.
- The recommended mountpoint is '/usr/lpp/zowe'.
- Using the wizard streamlines the installation process and is an alternative to performing
  manual Zowe server-side component installation.
- The recommended mountpoint is /usr/lpp/zowe.
- Expected results will be a return code of 0 if the job runs correctly.
- You will receive a return code of `0` if this job runs correctly.
- The recommended z/OS UNIX file system type is zFS.
- The AZWE002.pax.Z file must be uploaded to the z/OS driving system in binary format.
- If you are unable to connect with ftp and only able to use sftp, use *sftp* at the
  command prompt instead of *ftp*.
- If you create a new file system for this product, consider updating the BPXPRMxx
  PARMLIB member to mount the new file system at IPL time.
- Before running the sample job to create the paths in the file system, ensure that
  OMVS is active on the driving system.
- To receive the full benefit of the SMP/E Causer SYSMOD Summary Report, do not bypass
  the PRE, ID, REQ, and IFREQ on the APPLY CHECK.
- You can ignore unresolved external references messages during the ACCEPT phase.
- Your userid MUST be defined as a SUPERUSER to successfully run the job.
- Zowe CLI requires the NPM version bundled with the active LTS versions of NodeJS
  and Cargo version 1.72.0 (or newer) to build from source.
- Depending on how you configured npm on Linux or Mac, you might need to prefix the
  npm install -g command or the npm uninstall -g command with sudo to let npm have
  write access to the installation directory.
- On Windows, the npm install -g command might fail several times due to an EPERM
  error. This appears to be a bug that npm documented in their GitHub issues.
- Zowe Chat makes use of z/OS SAF calls and supports the three main security management
  products on z/OS (RACF, Top Secret, ACF2).
- You can log in to the chat client via enterprise standards, including two factor
  authentication if required.
- Support for Zowe Version 1 ended on Sept. 30, 2024. Follow the migration guide to
  upgrade to Zowe Version 2.
- If you plan to use Zowe CLI on PC only, you may not need to install the Zowe server
  components.
- Zowe runtime user, usually referred as ZWESVUSR, must have read permission to zowe.yaml
- If running Zowe in Sysplex, all high availability instances must share the same
  configuration file
- Zowe configuration file may contain sensitive configuration information, so it should
  be protected
- The Zowe cross memory server is designed to be a long-lived address space.
- Do not start the ZWESASTC task manually.
- Starting and stopping of the ZWESLSTC started task is independent of the ZWESISTC.
- Configurations that use containerization may only have ZSS started.
- HTTPS protocol can be enabled during API ML configuration and is highly recommended.
- User identity is authenticated through modern authentication methods such as OIDC/Oauth2,
  JWT, or Personal Access Token (PAT). Potentially with added Multi-Factor Authentication
  (MFA).
- User access is authorized by System Authorization Facility (SAF) / External Security
  Manager (ESM).
- When an environment does not support Secure Credential Storage, it is possible to
  disable it.
- z/OS is still required when using the Docker image.
- Security is central to a wide range of functionalities in Zowe and includes numerous
  terms and concepts specific to security.
- If you use the endpoints directly, change the URLs to start with /gateway/api/v1.
- Zowe V2 is now in maintenance state.
- Only patch releases are planned until the Zowe V2 End of Service scheduled for early
  2027.
- The port defaults to 443 if you omit the --port option.
- Supports multi-factor authentication or client-side x509 certificates
- Allows app to app communication
- Currently, API ML can provide SSO only in a single security domain.
- Zowe Explorer is a subcomponent of Zowe.
- Zowe uses a YAML format configuration.
- Zowe runtime user must have read permission to the configuration file.
- If running in Sysplex, all instances must share the same configuration file.
- The configuration file may contain sensitive information and should be protected.
- Zowe runs in USS and makes heavy use of shell scripts and TCP/IP sockets, which
  creates temporary files and ENQUEUES within the /tmp directory.
- If the increased volume of temporary files and ENQUEUES impacts your system, update
  the TMPDIR, TEMP_DIR, and CATALINA_TMPDIR properties in the zowe.yaml.
- Plug-ins can gain control of Zowe CLI legitimately during the execution of every
  command. Install third-party plug-ins at your own risk.
- Zowe CLI can be installed on an IBM z/OS environment and run under Unix System Services
  (USS). However, the IBM Db2 plug-in and the Zowe Secrets SDK cannot run on z/OS
  due to native code requirements.
- This plugin provides the ability to work with a mainframe through z/OSMF REST API.
- User identity is authenticated through modern authentication methods such as OIDC/Oauth2,
  JWT, or Personal Access Token (PAT).
- Zowe implements comprehensive measures to secure mainframe services and data resources
  in transition and in rest.
- User identity is authenticated through modern authentication methods.
- Digital certificates are used to secure electronic communication and data exchange.
- For testing purposes of Zowe, it is acceptable to use certificates issued and signed
  either by the company's local CA, or even self-signed certificates issued by Zowe
  security tools specific for the target technology platform.
- Use of self-signed certificates, however, is not recommended for production environments.
- Uses digital certificates for securing communication and identity validation.
- Multi-factor authentication is provided by third-party products which Zowe is compatible
  with.
- To add a dynamic element to the authentication, you can configure the Advanced Authentication
  Mainframe to enable multi-factor authentication.
- Zowe components use typical z/OS System authorization facility (SAF) calls for security.
- If you use the endpoints directly, change the URLs to start with `/gateway/api/v1`.
- Zowe's certificates are stored in its keystore.
- Verification of these certificates is done using certificates of certificate authorities
  (CAs) within Zowe's truststore.
- Ensure that all alias values for all scenarios use only lower-case.
- A bug in Java SDK 8.0.8.10 has been discovered that makes configuration scenario
  1 non-operational.
- Zowe servers require both a keystore to store the certificates and a truststore
  to validate certificates.
- Automated generation of certificates is an option, but is not required.
- Due to the limitation of the RACDCERT command, the importCertificateAuthorities
  field can contain a maximum of two entries.
- Ensure that you meet the following prerequisites before you use the extension.
- The extension demonstrates the potential for plug-ins powered by Zowe.
- Uses OAuth2 with refresh token — requires setup of connected app in Zowe
- For development, install Node.js v14.0 or later.
- Only Mac operating system versions supported by Apple.
- Secure credentials are not supported in Red Hat CodeReady Workspaces as the keyring
  is not unlocked by default.
- Ensure that you can obtain remote access to a z/OS FTP service before using the
  extension.
- Some functionality within the FTP extension requires the FTP server on the mainframe
  to be configured with the JESINTERFACELevel parameter set to 2.
- 'Required roles: Systems administrator'
- When multiple profiles with the same name are available in Zowe Explorer, project
  configuration takes precedence over global configuration.
- 'Required role: Developer'
- When environment conditions do not support the Zowe CLI built-in credential manager,
  change the 'Secure Credentials Enabled' setting.
- Verify that Zowe Explorer has been installed successfully by searching data sets
  to test your connection to z/OSMF.
- 'Required roles: systems administrator, DevOps architect'
- Important! Using daemon mode contains various limitations and configuration requirements,
  depending on the operating system where the daemon is running.
- Zoom is highly variable and depends on your display size, resolution, and many other
  variables so the recommended zoom may not be ideal for you
- When this server is running, it will print the message ZWED0031I when fully ready.
- Typically, users rely on team configuration to connect to the mainframe and issue
  commands.
- Tokens allow you to access services through API ML without reauthenticating every
  time you issue a command.
- Store credentials securely in CI/CD pipelines using environment variables.
- Daemon mode does not function on z/OS UNIX System Services (USS) systems.
- We do not recommend using daemon mode in an environment where multiple users use
  the same system.
- When you are running Zowe on a Windows operating system in a virtual environment,
  you might receive an error message that indicates that a library named `VCRUNTIME140.dll`
  is missing.
- Zowe CLI can be installed on an IBM z/OS environment and run under Unix System Services
  (USS). However, the IBM Db2 plug-in cannot run on z/OS due to native code requirements.
  As such, Zowe CLI is not supported on z/OS and is currently experimental.
- Node.js V22.0 is not yet supported.
- Contact your site administrator and obtain the IP address and port number to your
  proxy server.
- If your proxy server requires login credentials, specify the username and password
  in the NPM configuration.
- If your proxy server does not require login credentials, use http://proxy.[proxy_name].com:[port_number]
  for HTTPS and HTTP protocols.
- If your proxy server requires login credentials, use https://[username]:[password]@proxy.[proxy_name].com:[port_number]
  for HTTPS and http://[username]:[password]@proxy.[proxy_name].com:[port_number]
  for HTTP.
- Use these commands to validate connection to z/OSMF, not user credentials.
- To confirm credentials, issue any fully qualified command.
- If you are installing the Linux packages on a z/Linux system, the system where you
  are configuring secure credential storage might require Internet access.
- Batch amount to show per fetch is editable and accepts integer numbers.
- Enable auto-sync with mainframe option saves the content of edited data sets and
  USS files automatically if selected.
- Batch amount to show per fetch is editable and accepts integer numbers
- Enable auto-sync with mainframe option saves content of edited data sets and USS
  files automatically if selected
- It is possible to synchronize the file or data set you are editing either manually
  or automatically.
- The method of synchronizing is controlled by the Enable auto-sync with mainframe
  option.
- When it is marked, you don't need to manually synchronize the file / data set whilst
  editing it.
- The synchronization process starts either by the button in the editor or by pressing
  simultaneously Ctrl + Shift + S (Cmd + Shift + S for MacOS).
- If the manual synchronization is turned on, and you try to close the file in the
  editor, the plug-in will ask what to do with the content.
- Uses OAuth2 with refresh token — requires setup of connected app in mainframe
- Some objects may return nulls in deeply nested fields
- There are 5 preset options available for dataset allocation
- In the File Properties dialog window, select the Permissions tab
- 'You will have three options to change when needed: Owner permissions, Group permissions,
  and Permissions for all users'
- Make sure the parameters of the target data set allow you to paste a new member.
- Sometimes there is an error occurs during paste operation to the data set due to
  the directory blocks value being not enough to fit the member.
- Make sure the parameters of the target data set allow you to paste a new member.
  Sometimes there is an error occures during paste operation to the data set due to
  the directory blocks value being not enough to fit the member.
- A dialog about the move operation appears. It is also possible to cancel the operation
  until it is finished
- After the operation is completed, the path will be automatically refreshed and the
  file will appear in the refreshed list. Also the file will disappear from the source
  path
- The contents of the source files and data sets will stay the same, until you try
  to copy/move a file from USS to a z/OS partitioned data set. If the file lines are
  longer than the specified for the PDS / PDS/E logical record length, the plug-in
  will cut the rest of the line, exceeding the LRECL, for each of the exceeding lines.
- Reopen Session will reopen the current TSO Console session with the same parameters
- Cancel Command (PA1) will send the PA1 command to the TSO console to issue a cancellation
  of the previous command
- Requires setup of connected app in TSO Console
- To disable a component which is defined enabled in defaults.yaml, ensure that you
  have a definition of that component in your config.
errors:
- 'INSTALLATION_FAILED: Check installation requirements and logs.'
- 'CONFIGURATION_ERROR: Review configuration files for errors.'
- Insufficient user permissions may cause failure in some subcommands.
- 'Error: Validation of FILE(/home/user/my-zowe.yaml) against schema https://zowe.org/schemas/v2/server-base
  found invalid JSON Schema data'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401: Invalid JWT for API calls'
- '401 Unauthorized: Recheck user credentials or token validity'
- '401 Unauthorized: A JWT issued is not valid for API calls.'
- '401: JWT not valid for API calls.'
- 'Job fails with an authorization error: Your user ID lacks superuser authority.'
- 'Job fails with an authorization error: Job statement errors.'
- '401 Unauthorized: The user ID is not connected to IZUADMIN or IZUUSER.'
- 'HTTP/1.1 500 Internal Server Error: Connection to CIM cannot be established.'
- 'EACCESS: See Resolving EACCESS permissions errors when installing packages globally
  in npm Docs.'
- Check status failure
- Zowe CLI installation failure
- 'ENOENT: You might receive an ENOENT error when issuing the uninstall command if
  you installed Zowe CLI from a local package (.tgz) and the package was moved from
  its original location.'
- 'RC=256: pax: checksum error on tape (got ee2e, expected 0)'
- 'IEC032I E37-04: Required volumes and/or devicetypes have been omitted'
- GIMUNZIP - UNABLE TO ALLOCATE 1 UNIT(S)  577 AT LEAST 1 OFFLINE UNIT(S) NEEDED.
- FILE SYSUT1 NOT ALLOCATED, REQUEST CANCELED
- IEF244I ZWE0GUNZ GIMUNZIP - UNABLE TO ALLOCATE 1 UNIT(S)  577
- IEF877E ZWE0GUNZ NEEDS 1 UNIT(S)  578 FOR GIMUNZIP SYSUT1
- Using values lower than the recommended values can result in failures in the installation.
- You will receive a return code of 0 if this job runs correctly.
- 'E37-04: Add space and directory allocations to the SMPCNTL statement.'
- 'RC=12: Add a TEMPDS control statement to the existing SYSIN.'
- IEC032I E37-04,IGC0005E,ZWE2RCVE,RECEIVE,SMPTLIB,0AC0,USER10,ZOWE.SMPE.AZWE002.F4
- IEF244I ZWE0GUNZ GIMUNZIP - UNABLE TO ALLOCATE 1 UNIT(S)  577 AT LEAST 1 OFFLINE
  UNIT(S) NEEDED.
- 'RC=12: Add a TEMPDS control statement for GIMUNZIP allocation errors.'
- Adjust Zowe CLI scripts that parse error messages to handle the new error format
- 'Implement a team configuration or use Zowe CLI''s built-in V1 profile conversion
  command: zowe config convert'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- You may be running mismatched versions of Zowe executable and Zowe daemon.
- Success or failure message returned from commands.
auth_info:
  mentioned_objects:
  - SAF
  - ESM
  - OauthToken
  - AuthProvider
  - NamedCredential
  - System Authorization Facility (SAF)
  - External Security Manager (ESM)
  - System Authorization Facility
  - External Security Manager
  - JWT
  - Personal Access Token
  - Advanced Authentication Mainframe
client:
  base_url: https://www.zowe.org
  headers:
    Accept: application/json
source_metadata: null
