resources:
- name: StandardScaler
  endpoint:
    path: /generated/dask_ml.preprocessing.StandardScaler
    method: GET
- name: RobustScaler
  endpoint:
    path: /generated/dask_ml.preprocessing.RobustScaler
    method: GET
- name: MinMaxScaler
  endpoint:
    path: /generated/dask_ml.preprocessing.MinMaxScaler
    method: GET
- name: QuantileTransformer
  endpoint:
    path: /generated/dask_ml.preprocessing.QuantileTransformer
    method: GET
- name: Categorizer
  endpoint:
    path: /generated/dask_ml.preprocessing.Categorizer
    method: GET
- name: DummyEncoder
  endpoint:
    path: /generated/dask_ml.preprocessing.DummyEncoder
    method: GET
- name: OrdinalEncoder
  endpoint:
    path: /generated/dask_ml.preprocessing.OrdinalEncoder
    method: GET
- name: LabelEncoder
  endpoint:
    path: /generated/dask_ml.preprocessing.LabelEncoder
    method: GET
- name: PolynomialFeatures
  endpoint:
    path: /generated/dask_ml.preprocessing.PolynomialFeatures
    method: GET
- name: BlockTransformer
  endpoint:
    path: /generated/dask_ml.preprocessing.BlockTransformer
    method: GET
- name: CountVectorizer
  endpoint:
    path: /generated/dask_ml.feature_extraction.text.CountVectorizer
    method: GET
- name: HashingVectorizer
  endpoint:
    path: /generated/dask_ml.feature_extraction.text.HashingVectorizer
    method: GET
- name: FeatureHasher
  endpoint:
    path: /generated/dask_ml.feature_extraction.text.FeatureHasher
    method: GET
- name: ColumnTransformer
  endpoint:
    path: /generated/dask_ml.compose.ColumnTransformer
    method: GET
- name: make_column_transformer
  endpoint:
    path: /generated/dask_ml.compose.make_column_transformer
    method: GET
- name: SimpleImputer
  endpoint:
    path: /generated/dask_ml.impute.SimpleImputer
    method: GET
- name: mean_absolute_error
  endpoint:
    path: /generated/dask_ml.metrics.mean_absolute_error
    method: GET
- name: mean_absolute_percentage_error
  endpoint:
    path: /generated/dask_ml.metrics.mean_absolute_percentage_error
    method: GET
- name: mean_squared_error
  endpoint:
    path: /generated/dask_ml.metrics.mean_squared_error
    method: GET
- name: mean_squared_log_error
  endpoint:
    path: /generated/dask_ml.metrics.mean_squared_log_error
    method: GET
- name: r2_score
  endpoint:
    path: /generated/dask_ml.metrics.r2_score
    method: GET
- name: accuracy_score
  endpoint:
    path: /generated/dask_ml.metrics.accuracy_score
    method: GET
- name: log_loss
  endpoint:
    path: /generated/dask_ml.metrics.log_loss
    method: GET
- name: XGBClassifier
  endpoint:
    path: /generated/dask_ml.xgboost.XGBClassifier
    method: GET
- name: XGBRegressor
  endpoint:
    path: /generated/dask_ml.xgboost.XGBRegressor
    method: GET
- name: train
  endpoint:
    path: /generated/dask_ml.xgboost.train
    method: GET
- name: predict
  endpoint:
    path: /generated/dask_ml.xgboost.predict
    method: GET
- name: make_counts
  endpoint:
    path: /generated/dask_ml.datasets.make_counts
    method: GET
- name: make_blobs
  endpoint:
    path: /generated/dask_ml.datasets.make_blobs
    method: GET
- name: make_regression
  endpoint:
    path: /generated/dask_ml.datasets.make_regression
    method: GET
- name: make_classification
  endpoint:
    path: /generated/dask_ml.datasets.make_classification
    method: GET
- name: make_classification_df
  endpoint:
    path: /generated/dask_ml.datasets.make_classification_df
    method: GET
- name: GridSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.GridSearchCV.html
    method: GET
    data_selector: ''
    params: {}
- name: RandomizedSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.RandomizedSearchCV.html
    method: GET
    data_selector: ''
    params: {}
- name: IncrementalSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.IncrementalSearchCV.html
    method: GET
    data_selector: ''
    params: {}
- name: HyperbandSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.HyperbandSearchCV.html
    method: GET
    data_selector: ''
    params: {}
- name: SuccessiveHalvingSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.SuccessiveHalvingSearchCV.html
    method: GET
    data_selector: ''
    params: {}
- name: InverseDecaySearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.InverseDecaySearchCV.html
    method: GET
    data_selector: ''
    params: {}
- name: HyperbandSearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/HyperbandSearchCV
    method: GET
    data_selector: records
    params: {}
- name: SuccessiveHalvingSearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/SuccessiveHalvingSearchCV
    method: GET
    data_selector: records
    params: {}
- name: InverseDecaySearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/InverseDecaySearchCV
    method: GET
    data_selector: records
    params: {}
- name: GridSearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/GridSearchCV
    method: GET
    data_selector: records
    params: {}
- name: RandomizedSearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/RandomizedSearchCV
    method: GET
    data_selector: records
    params: {}
- name: IncrementalSearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/IncrementalSearchCV
    method: GET
    data_selector: records
    params: {}
- name: GridSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.GridSearchCV
    method: GET
- name: RandomizedSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.RandomizedSearchCV
    method: GET
- name: IncrementalSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.IncrementalSearchCV
    method: GET
- name: HyperbandSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.HyperbandSearchCV
    method: GET
- name: SuccessiveHalvingSearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.SuccessiveHalvingSearchCV
    method: GET
- name: InverseDecaySearchCV
  endpoint:
    path: /modules/generated/dask_ml.model_selection.InverseDecaySearchCV
    method: GET
- name: HyperbandSearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/HyperbandSearchCV
    method: GET
    data_selector: records
    params: {}
- name: SuccessiveHalvingSearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/SuccessiveHalvingSearchCV
    method: GET
    data_selector: records
    params: {}
- name: InverseDecaySearchCV
  endpoint:
    path: /modules/generated/dask_ml/model_selection/InverseDecaySearchCV
    method: GET
    data_selector: records
    params: {}
- name: IncrementalSearchCV
  endpoint:
    path: /dask_ml/model_selection/IncrementalSearchCV
    method: GET
    data_selector: records
- name: HyperbandSearchCV
  endpoint:
    path: /dask_ml/model_selection/HyperbandSearchCV
    method: GET
    data_selector: records
- name: SuccessiveHalvingSearchCV
  endpoint:
    path: /dask_ml/model_selection/SuccessiveHalvingSearchCV
    method: GET
    data_selector: records
- name: InverseDecaySearchCV
  endpoint:
    path: /dask_ml/model_selection/InverseDecaySearchCV
    method: GET
    data_selector: records
- name: LinearRegression
  endpoint:
    path: /modules/generated/dask_ml.linear_model.LinearRegression.html
    method: GET
    data_selector: ''
    params: {}
- name: LogisticRegression
  endpoint:
    path: /modules/generated/dask_ml.linear_model.LogisticRegression.html
    method: GET
    data_selector: ''
    params: {}
- name: PoissonRegression
  endpoint:
    path: /modules/generated/dask_ml.linear_model.PoissonRegression.html
    method: GET
    data_selector: ''
    params: {}
- name: KMeans
  endpoint:
    path: /dask_ml/cluster/KMeans
    method: GET
- name: SpectralClustering
  endpoint:
    path: /dask_ml/cluster/SpectralClustering
    method: GET
- name: train_test_split
  endpoint:
    path: /dask_ml/model_selection/train_test_split
    method: GET
    data_selector: parameters
    params:
      test_size: 0.1
      blockwise: true
      convert_mixed_types: false
- name: KFold
  endpoint:
    path: /dask_ml/model_selection/KFold
    method: GET
    data_selector: parameters
    params:
      n_splits: 5
      shuffle: false
      random_state: null
- name: GridSearchCV
  endpoint:
    path: /api/dask_ml/model_selection/GridSearchCV
    method: GET
    data_selector: parameters
- name: PoissonRegression
  endpoint:
    path: /dask_ml/linear_model/PoissonRegression
    method: GET
- name: GaussianNB
  endpoint:
    path: /dask_ml/naive_bayes/GaussianNB
    method: GET
    data_selector: metadata
    params: {}
- name: PCA
  endpoint:
    path: /dask_ml/decomposition/PCA
    method: GET
    data_selector: parameters
- name: HashingVectorizer
  endpoint:
    path: /dask_ml/feature_extraction/text/HashingVectorizer
    method: GET
    data_selector: records
    params: {}
- name: FeatureHasher
  endpoint:
    path: /dask_ml/feature_extraction/text/FeatureHasher
    method: GET
    data_selector: parameters
    params: {}
- name: SimpleImputer
  endpoint:
    path: /dask_ml/impute/SimpleImputer
    method: GET
- name: mean_absolute_percentage_error
  endpoint:
    path: /dask_ml/metrics/mean_absolute_percentage_error
    method: GET
    data_selector: parameters
    params: {}
- name: predict
  endpoint:
    path: /dask_ml/xgboost/predict
    method: GET
    data_selector: predictions
- name: make_counts
  endpoint:
    path: /datasets/make_counts
    method: GET
    data_selector: X
    params: {}
- name: regression_problem
  endpoint:
    path: /datasets/make_regression
    method: GET
    data_selector: X, y
    params: {}
- name: make_classification_df
  endpoint:
    path: /datasets/make_classification_df
    method: GET
    data_selector: data
    params:
      n_samples: 10000
      response_rate: 0.5
      predictability: 0.1
      random_state: null
      chunks: null
      dates: null
- name: XGBRegressor
  endpoint:
    path: /modules/generated/dask_ml.xgboost.XGBRegressor.html
    method: GET
- name: train
  endpoint:
    path: /modules/generated/dask_ml.xgboost.train.html
    method: GET
- name: predict
  endpoint:
    path: /modules/generated/dask_ml.xgboost.predict.html
    method: GET
notes:
- Not everyone needs scalable machine learning. Tools like sampling can be effective.
- Dask-ML implements drop-in replacements for GridSearchCV and RandomizedSearchCV.
- Dask-ML can use any of the dask schedulers. By default the threaded scheduler is
  used.
- Estimators require that the model implement partial_fit.
- These classes can stop training any models if their score stops increasing.
- Typically, spectral clustering algorithms do not scale well.
- In dask-ml, we use the Nyström method to approximate the large affinity matrix.
- Hyperband will find close to the best possible parameters with the given computational
  budget.
- Hyperband does not require a trade-off between 'evaluate many parameters for a short
  time' and 'train a few parameters for a long time'.
- The testing dataset should fit in memory on a single machine.
- Estimator for poisson regression.
- This meta-estimator is not appropriate for hyperparameter optimization on larger-than-memory
  datasets.
- This transformer only applies to dask.DataFrame and pandas.DataFrame.
- This estimator is stateless and does not need to be fitted.
- We recommend to call fit_transform() instead of transform(), as parameter validation
  is only performed in fit().
- This is a shorthand for the ColumnTransformer constructor; it does not require,
  and does not permit, naming the transformers.
- Some inconsistencies with the Dask version may exist.
- This docstring was copied from sklearn.metrics.mean_squared_log_error.
- This is not a symmetric function.
- Unlike most other scores, R2 score may be negative (it need not actually be the
  square of a quantity R).
- This metric is not well-defined for single samples and will return a NaN value if
  n_samples is less than two.
- The logarithm used is the natural logarithm (base-e).
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://dask-ml.api
  headers:
    Accept: application/json
source_metadata: null
