resources:
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: scans
- name: risks
  endpoint:
    path: /risks/{risk_id}
    method: GET
    data_selector: risks
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: reports
  endpoint:
    path: /reports
    method: POST
    data_selector: reports
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: records
- name: risks
  endpoint:
    path: /risks/{risk_id}
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /reports
    method: POST
    data_selector: records
- name: risks
  endpoint:
    path: /risks
    method: GET
    data_selector: results
    params:
      filters: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
    params:
      page_token: ''
- name: upload_scan_result
  endpoint:
    path: /upload_scan_result
    method: POST
    data_selector: results
    params: {}
- name: create_target
  endpoint:
    path: /create_target
    method: POST
    data_selector: results
    params: {}
- name: get_target
  endpoint:
    path: /targets/{id}
    method: GET
    data_selector: results
    params: {}
- name: update_target
  endpoint:
    path: /targets/{id}
    method: PUT
    data_selector: results
    params: {}
- name: delete_target
  endpoint:
    path: /targets/{id}
    method: DELETE
    data_selector: results
    params: {}
- name: list_risks
  endpoint:
    path: /list_risks
    method: GET
    data_selector: results
    params:
      page_token: string
      filters: object
- name: get_risk_by_id
  endpoint:
    path: /get_risk/{id}
    method: GET
    data_selector: data
    params: {}
- name: upload_scan_result
  endpoint:
    path: /upload_scan_result
    method: POST
    data_selector: data
    params: {}
- name: list_targets
  endpoint:
    path: /list_targets
    method: GET
    data_selector: results
    params:
      page_token: string
      filters: object
- name: get_target_by_id
  endpoint:
    path: /get_target/{id}
    method: GET
    data_selector: data
    params: {}
- name: create_target
  endpoint:
    path: /create_target
    method: POST
    data_selector: data
    params: {}
- name: update_target
  endpoint:
    path: /update_target/{id}
    method: PUT
    data_selector: data
    params: {}
- name: delete_target
  endpoint:
    path: /delete_target/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: target
  endpoint:
    path: /v1/targets
    method: POST
    data_selector: data
- name: upload_openapi_file
  endpoint:
    path: /v1/targets
    method: POST
    data_selector: data
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: POST
    data_selector: data
    params: {}
- name: risks
  endpoint:
    path: /risks
    method: GET
    data_selector: data
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: POST
    data_selector: data
- name: list_scans
  endpoint:
    path: /scans
    method: GET
    data_selector: data
- name: get_scan_by_id
  endpoint:
    path: /scans/{id}
    method: GET
    data_selector: data
- name: get_results_by_id
  endpoint:
    path: /results/{id}
    method: GET
    data_selector: data
- name: list_risks
  endpoint:
    path: /risks
    method: GET
    data_selector: data
- name: risks
  endpoint:
    path: /v1/risks/{id}
    method: GET
    data_selector: data
    params: {}
- name: targets
  endpoint:
    path: /v1/targets
    method: GET
    data_selector: data
    params: {}
- name: create_target
  endpoint:
    path: /v1/targets
    method: POST
    data_selector: data
    params: {}
- name: update_target
  endpoint:
    path: /v1/targets/{id}
    method: PUT
    data_selector: data
    params: {}
- name: delete_target
  endpoint:
    path: /v1/targets/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: upload_openapi
  endpoint:
    path: /v1/targets/{id}/openapi
    method: POST
    data_selector: data
    params: {}
- name: risks
  endpoint:
    path: /v1/risks/{id}
    method: GET
    data_selector: data
    params: {}
- name: targets
  endpoint:
    path: /v1/targets
    method: GET
    data_selector: data
    params: {}
- name: reports
  endpoint:
    path: /v1/reports
    method: POST
    data_selector: data
    params: {}
- name: sources
  endpoint:
    path: /v1/sources
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /v1/results
    method: POST
    data_selector: data
    params: {}
- name: reports
  endpoint:
    path: /v1/reports
    method: POST
    data_selector: data
    params: {}
- name: sources
  endpoint:
    path: /v1/sources
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /v1/results
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: results
    params: {}
- name: risks
  endpoint:
    path: /risks/{risk_id}
    method: GET
    data_selector: risks
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: POST
    data_selector: targets
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: scans
    params: {}
- name: risks
  endpoint:
    path: /risks/{risk_id}
    method: GET
    data_selector: risks
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: POST
    data_selector: report
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
    params: {}
- name: List Risks
  endpoint:
    path: /risks
    method: GET
    data_selector: data
    params:
      page_token: string
      filters: object
- name: Get a Risk by id
  endpoint:
    path: /risks/{id}
    method: GET
    data_selector: data
- name: Upload a Scan Result
  endpoint:
    path: /scan-results
    method: POST
    data_selector: data
    params: {}
- name: List Targets
  endpoint:
    path: /targets
    method: GET
    data_selector: data
    params:
      page_token: string
      filters: object
- name: Get a Target by id
  endpoint:
    path: /targets/{id}
    method: GET
    data_selector: data
- name: Create a new Target
  endpoint:
    path: /targets
    method: POST
    data_selector: data
- name: Update a Target
  endpoint:
    path: /targets/{id}
    method: PUT
    data_selector: data
- name: Delete a Target
  endpoint:
    path: /targets/{id}
    method: DELETE
    data_selector: data
- name: upload_openapi_file
  endpoint:
    path: /v1/targets
    method: POST
    data_selector: data
    params: {}
- name: list_risks
  endpoint:
    path: /list_risks
    method: GET
    data_selector: results
    params:
      page_token: string
      filters: object
- name: upload_scan_result
  endpoint:
    path: /upload_scan_result
    method: POST
    data_selector: result
    params:
      source_id: string
      scan_type: string
      target: string
- name: get_risk_by_id
  endpoint:
    path: /get_risk/{id}
    method: GET
    data_selector: result
    params:
      id: string
- name: list_targets
  endpoint:
    path: /list_targets
    method: GET
    data_selector: results
    params:
      page_token: string
      filters: object
- name: create_target
  endpoint:
    path: /create_target
    method: POST
    data_selector: result
    params:
      target: string
      label: string
      tags: array
      scanner_settings: object
- name: update_target
  endpoint:
    path: /update_target/{id}
    method: PUT
    data_selector: result
    params:
      id: string
      label: string
      tags: array
      scanner_settings: object
- name: delete_target
  endpoint:
    path: /delete_target/{id}
    method: DELETE
    data_selector: result
    params:
      id: string
- name: scans
  endpoint:
    path: /scans
    method: POST
    data_selector: data
    params: {}
- name: list_scans
  endpoint:
    path: /scans
    method: GET
    data_selector: data
    params: {}
- name: get_scan_by_id
  endpoint:
    path: /scans/{id}
    method: GET
    data_selector: data
    params: {}
- name: list_risks
  endpoint:
    path: /risks
    method: GET
    data_selector: data
    params: {}
- name: upload_openapi_file
  endpoint:
    path: /v1/targets
    method: POST
    data_selector: data
    params:
      id: string
- name: scans
  endpoint:
    path: /scans
    method: POST
    data_selector: data
    params: {}
- name: risks
  endpoint:
    path: /risks
    method: GET
    data_selector: data
    params: {}
- name: scan_result_file
  endpoint:
    path: /results/{id}
    method: GET
    data_selector: data
    params: {}
- name: risks
  endpoint:
    path: /v1/risks/{id}
    method: GET
    data_selector: data
    params: {}
- name: targets
  endpoint:
    path: /v1/targets
    method: GET
    data_selector: data
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: post
    data_selector: data
- name: sources
  endpoint:
    path: /sources
    method: post
    data_selector: data
- name: results
  endpoint:
    path: /results
    method: post
    data_selector: data
- name: risks
  endpoint:
    path: /v1/risks/{id}
    method: GET
    data_selector: data
- name: targets
  endpoint:
    path: /v1/targets
    method: GET
    data_selector: data
- name: reports
  endpoint:
    path: /v1/reports
    method: post
    data_selector: data
    params: {}
- name: sources
  endpoint:
    path: /v1/sources
    method: post
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /v1/results
    method: post
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session_cookie
  endpoint:
    path: /authenticated-scanning/session-cookie
    method: GET
- name: credentials
  endpoint:
    path: /hostedscan-agent/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: scans
  endpoint:
    path: /hostedscan-agent/scans
    method: POST
    data_selector: scan_results
    params: {}
- name: sources
  endpoint:
    path: /v1/sources
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /v1/results
    method: POST
    data_selector: null
    params: {}
- name: sources
  endpoint:
    path: /v1/sources
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /v1/results
    method: POST
    data_selector: data
    params: {}
- name: Service Provider Metadata
  endpoint:
    path: /auth/saml/{organization_id}/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: Assertion Consumer Service
  endpoint:
    path: /auth/saml/{organization_id}/callback
    method: POST
    data_selector: response
    params: {}
- name: Service Provider Metadata
  endpoint:
    path: /auth/saml/{organization_id}/metadata
    method: GET
notes:
- Authenticate by setting the X-HOSTEDSCAN-API-KEY request header as your API key.
- The file must contain valid OpenAPI specification with `openapi` (or `swagger`)
  and `info` fields.
- Maximum size for the file is 5MB.
- Deleting a target will also delete any risks associated with that target.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Your webhook endpoint must use HTTPS with a signed certificate, such as one from
  https://letsencrypt.org/. HostedScan will not send to endpoints using self-signed
  certificates.
- Any 2xx response code from your endpoint is treated as a successful delivery.
- HostedScan will attempt to deliver messages to your endpoint for up to 12 hours,
  with exponential backoff.
- The signature can be validated using the signing secret to verify that an event
  was sent by HostedScan.
- Any non-2xx status code (or a timeout) is treated as a failure and will be retried.
- When you register an endpoint, HostedScan creates a signing secret for that endpoint.
- Each webhook message request includes an http header `X-HOSTEDSCAN-SIGNATURE`.
- The `X-HOSTEDSCAN-SIGNATURE` is a hash-based message authentication code (HMAC)
  generated with SHA-256.
- To validate this signature an application will first recreate the signature using
  the signing secret for that endpoint.
- To create an API key, visit the API & Webhooks section of your account settings.
- Use the api key 'test-data-key' for testing with sample data.
- Maximum size for OpenAPI file is 5MB
- Maximum size of the file is 5MB.
- Requires ApiKey for authorization
- HostedScan creates a signing secret for that endpoint.
- HostedScan makes it easy to run authenticated ZAP scans with a flexible set of authentication
  methods.
- Always use a test user account. Some scans will click buttons and submit forms as
  part of testing, which could cause changes to the account.
- For recurring scheduled scans, it is recommended to use the recorded login instead
  of a fixed cookie value as it will expire after some time.
- For recurring scheduled scans we recommend using the recorded login because a fixed
  cookie value will expire after some time.
- Internal scanning requires a Premium or MSP account.
- Ensure that you copy the HostedScan agent registration key before closing the modal.
- Authenticated scanning provides significantly more detailed results by accessing
  internal system configuration, installed software, and security settings that are
  not visible from network-level scans alone.
- Authenticated scanning requires a Premium or MSP account.
- The first launch of OpenVAS may take an hour or longer before it is ready.
- HostedScan uses Sources to group related targets and vulnerability scan results.
- Not all risks are threatening, in fact, some risks are acceptable.
- Port 80 and port 443 are frequently open by design for any webserver.
- SAML SSO is available on the Premium plan
- All SAML assertions and requests must be digitally signed
errors:
- 400 Bad Request - Invalid request parameters or missing required parameters.
- 401 Unauthorized - Invalid API key.
- 404 Not Found - No resource at the requested path.
- 500 Internal Server Error - Something went wrong on our server.
- '400: Bad Request - Invalid request parameters or missing required parameters.'
- '401: Unauthorized - Invalid API key.'
- '404: Not Found - No resource at the requested path.'
- '500: Internal Server Error - Something went wrong on our server.'
- '400: Bad Request - Invalid file format or missing required fields'
- '404: Target not found'
- '413: Payload Too Large - File size exceeds 5MB limit'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '200: Successfully received the scan created event'
- '401 Unauthorized: Check API key validity'
- 400 Bad Request - Invalid file format or missing required fields
- 404 Target not found
- 413 Payload Too Large - File size exceeds 5MB limit
- 'Authentication Fails: Users cannot log in via SAML'
- 'Certificate Errors: SAML authentication fails with certificate errors'
- Authentication fails if IdP metadata is incorrectly configured
- Certificate errors if the IdP certificate is expired or improperly configured
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.hostedscan.com
  auth:
    type: apikey
  headers:
    Content-Type: application/json
    X-HOSTEDSCAN-API-KEY: test-data-key
source_metadata: null
