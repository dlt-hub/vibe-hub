resources:
- name: getUser
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getUser
- name: getTeam
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getTeam
- name: getOutsideTeam
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getOutsideTeam
- name: calls
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: calls
- name: getSingleContact
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getSingleContact
- name: getCalendar
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getCalendar
- name: getContactsCount
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getContactsCount
- name: getContacts
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getContacts
- name: getClientAddresses
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getClientAddresses
- name: getAllCategoriesWithCount
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getAllCategoriesWithCount
- name: getCategoryClientCount
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getCategoryClientCount
- name: getVendors
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getVendors
- name: getProperty
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: returns
    params:
      requestType: getProperty
- name: getUser
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: records
    params:
      requestType: getUser
- name: getTeam
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: records
    params:
      requestType: getTeam
- name: getOutsideTeam
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: records
    params:
      requestType: getOutsideTeam
- name: calls
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: Data
    params:
      requestType: calls
- name: getSingleContact
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: records
    params:
      requestType: getSingleContact
- name: getCalendar
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: records
    params:
      requestType: getCalendar
- name: getContactsCount
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: count
    params:
      requestType: getContactsCount
- name: getContacts
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: records
    params:
      requestType: getContacts
- name: getVendors
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: records
    params:
      requestType: getVendors
- name: getProperties
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: properties
    params:
      requestType: getProperties
      showArchived: 'false'
      page: 1
      page_size: 50
- name: getPropertySearchCriteria
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: propertySearchCriteria
    params:
      requestType: getPropertySearchCriteria
- name: getContactNotes
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: notes
    params:
      requestType: getContactNotes
      ClientID: clientID
      NoteID: uniqueNoteID
- name: getPrograms
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: programs
    params:
      requestType: getPrograms
- name: getTransactionNames
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: transactions
    params:
      requestType: getTransactionNames
- name: getSources
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: sources
    params:
      requestType: getSources
- name: tasks
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: tasks
    params:
      requestType: tasks
      page: 1
      page_size: 100
- name: ContentCategories
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: categories
    params:
      requestType: ContentCategories
- name: webhooks
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: webhooks
    params:
      requestType: webhooks
- name: getProperties
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: properties
    params:
      requestType: getProperties
      showArchived: 'false'
      page: 1
      page_size: 50
- name: getPropertySearchCriteria
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: propertySearchCriteria
    params:
      requestType: getPropertySearchCriteria
      SearchID: '1234'
- name: getContactNotes
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: notes
    params:
      requestType: getContactNotes
- name: getPrograms
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: programs
    params:
      requestType: getPrograms
- name: tasks
  endpoint:
    path: /http/webconnect.asp
    method: GET
    data_selector: tasks
    params:
      requestType: tasks
- name: addClientAddress
  endpoint:
    path: /addClientAddress
    method: POST
    data_selector: success
    params: {}
- name: addClientsToCategory
  endpoint:
    path: /addClientsToCategory
    method: POST
    data_selector: success
    params: {}
- name: addClientsToMarketingProgram
  endpoint:
    path: /addClientsToMarketingProgram
    method: POST
    data_selector: success
    params: {}
- name: removeClientsFromCategory
  endpoint:
    path: /removeClientsFromCategory
    method: POST
    data_selector: success
    params: {}
- name: addPropertySearchCriteria
  endpoint:
    path: /addPropertySearchCriteria
    method: POST
    data_selector: success
    params: {}
- name: addPlannerEvent
  endpoint:
    path: /addPlannerEvent
    method: POST
    data_selector: success
    params: {}
- name: addProperty
  endpoint:
    path: /addProperty
    method: POST
    data_selector: status
    params: {}
- name: addPropertyPhoto
  endpoint:
    path: /addPropertyPhoto
    method: POST
    data_selector: status
    params: {}
- name: addPropertyConnection
  endpoint:
    path: /addPropertyConnection
    method: POST
    data_selector: status
    params: {}
- name: attachFile
  endpoint:
    path: /attachFile
    method: POST
    data_selector: status
    params: {}
- name: addClientCustom
  endpoint:
    path: /addClientCustom
    method: POST
    data_selector: success
    params: {}
- name: addCategories
  endpoint:
    path: /addCategories
    method: POST
    data_selector: success
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: success
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: POST
    data_selector: success
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: success
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: success
    params: {}
- name: addVisitedWebsite
  endpoint:
    path: /addVisitedWebsite
    method: PUT
    data_selector: 200 OK
    params: {}
- name: updateContactNote
  endpoint:
    path: /updateContactNote
    method: PUT
    data_selector: success
    params: {}
- name: updateContactNoteCategories
  endpoint:
    path: /updateContactNoteCategories
    method: PUT
    data_selector: success
    params: {}
- name: editClientCustomData
  endpoint:
    path: /editClientCustomData
    method: DELETE
    data_selector: success
    params: {}
- name: updateProperty
  endpoint:
    path: /updateProperty
    method: PUT
    data_selector: status
    params: {}
- name: addClientAddress
  endpoint:
    path: /addClientAddress
    method: POST
    data_selector: success
    params: {}
- name: addClientsToCategory
  endpoint:
    path: /addClientsToCategory
    method: POST
    data_selector: success
    params: {}
- name: addClientsToMarketingProgram
  endpoint:
    path: /addClientsToMarketingProgram
    method: POST
    data_selector: success
    params: {}
- name: removeClientsFromCategory
  endpoint:
    path: /removeClientsFromCategory
    method: POST
    data_selector: success
    params: {}
- name: addPropertySearchCriteria
  endpoint:
    path: /addPropertySearchCriteria
    method: POST
    data_selector: success
    params: {}
- name: addPlannerEvent
  endpoint:
    path: /addPlannerEvent
    method: POST
    data_selector: success
    params: {}
- name: addProperty
  endpoint:
    path: /addProperty
    method: POST
    data_selector: status
    params: {}
- name: addPropertyPhoto
  endpoint:
    path: /addPropertyPhoto
    method: POST
    data_selector: status
    params: {}
- name: addPropertyConnection
  endpoint:
    path: /addPropertyConnection
    method: POST
    data_selector: status
    params: {}
- name: attachFile
  endpoint:
    path: /attachFile
    method: POST
    data_selector: status
    params: {}
- name: addClientCustom
  endpoint:
    path: /addClientCustom
    method: POST
    data_selector: success
    params: {}
- name: addCategories
  endpoint:
    path: /addCategories
    method: POST
    data_selector: success
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: success
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: POST
    data_selector: success
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: success
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: success
    params: {}
- name: addVisitedWebsite
  endpoint:
    path: /ClientVisitedDomain.aspx
    method: PUT
    data_selector: status
    params: {}
- name: updateContactNote
  endpoint:
    path: /updateContactNote
    method: PUT
    data_selector: success
    params: {}
- name: updateContactNoteCategories
  endpoint:
    path: /updateContactNoteCategories
    method: PUT
    data_selector: success
    params: {}
- name: editClientCustomData
  endpoint:
    path: /editClientCustomData
    method: DELETE
    data_selector: success
    params: {}
- name: updateProperty
  endpoint:
    path: /updateProperty
    method: PUT
    data_selector: success
    params: {}
- name: updateProperty
  endpoint:
    path: /updateProperty
    method: PUT
    data_selector: status
    params: {}
- name: updatePropertySearchCriteria
  endpoint:
    path: /updatePropertySearchCriteria
    method: PUT
    data_selector: success
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: PUT
    data_selector: success
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: PUT
    data_selector: success
    params: {}
- name: removeContactNote
  endpoint:
    path: /removeContactNote
    method: DELETE
    data_selector: success
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: DELETE
    data_selector: success
    params: {}
- name: deleteProperty
  endpoint:
    path: /deleteProperty
    method: DELETE
    data_selector: success
    params: {}
- name: gmail_conversations
  endpoint:
    path: /gmail/conversations
    method: GET
    data_selector: emails
- name: contact
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: classes
  endpoint:
    path: /classes
    method: GET
    data_selector: records
    params: {}
- name: updateProperty
  endpoint:
    path: /updateProperty
    method: PUT
    params:
      propertyID: Numeric ID of a property
      Archive: true or false
      AddressNum: address number
      Address: address street name
      AddressSuit: suite number
      BldgFloor: building floor
      City: name of the city
      State: name of the state
      Zip: zip code
      Country: country name
      County: county name
      Subdivision: subdivision name
      LotNum: lot number
      PoBox: PO Box number
      MLS: MLS identifier
      mlsarea: MLS Area
      mapgrid: map grid
      TourUrl: public URL for property
      Notes: notes on property
      ClientId: ClientId of a user's contact
      ClientRelation: type of relationship client has with property
      ListingPrice: Current listing price
      LastSalePrice: Last sale price
      YearBuilt: Year the property was built
      TaxesAnnual: Annual Taxes Amount
      HOAAnnual: Annual HOA Taxes Amount
      NumBedrooms: Number of bedrooms
      NumBathrooms: Number of bathrooms
      SquareFt: Living Area in Square feet
      LotSize: Lot Size
      DateListed: Date this property was listed
      PropertyType: Type of property
      ListingStatus: Listing Status
      SchoolDistrict: Name of the school district
      NumHalfBathrooms: half bathrooms
      DiningRooms: dining rooms
      DiningRoomDesc: description of dining room
      LivingRooms: living rooms
      LivingRoomDesc: description of living room
      InteriorFeaturesDesc: description of interior features
      ExteriorFeaturesDesc: description of exterior features
      StyleDesc: description of style
      DesignDesc: description of design
      Fireplaces: number of fireplaces
      Stories: number of stories
      Garage: garage description
      AgentName: agent name
      AgentPhone: agent phone number
      AgentEmail: agent email address
      AgentID: agent identifier
      BrokerName: broker name
      BrokerEmail: broker email address
      BrokerPhone: broker phone number
      OfficeName: office name
      OfficeEmail: office email address
      OfficePhone: office phone number
      OfficeID: office identifier
      FranchiseName: franchise name
      FranchiseEmail: franchise email address
      FranchisePhone: franchise phone number
      Description: property description
      Township: township name
      BuyerAgent_Commission: buyer agent commission
      BuyerAgent_Concession: buyer agent concession
      SellerAgent_Commission: seller agent commission
      SellerAgent_Concession: seller agent concession
- name: updatePropertySearchCriteria
  endpoint:
    path: /updatePropertySearchCriteria
    method: PUT
    params:
      searchID: previously retrieved searchID
      propInfo: '1'
      propCity: city
      propZip: zip code
      propType: residential, commercial, etc.
      propArea: land area
      propNotes: extra notes
      minPrice: minimum price
      maxPrice: maximum price
      propBath: number of bathrooms
      propBed: number of bedrooms
      propRentOwn: rent or own
      propMoving: timespan in months
      propSqft: building square footage
- name: calls
  endpoint:
    path: /calls
    method: PUT
    params:
      CallId: unique identifier
      NextContactDate: YYYY-MM-DD hh:mm
      CallType: string
      Completed: boolean
      DateCompleted: date time
      FlagImportant: boolean
      InsideTeamId: integer
      AssignedTo: Team Member Name
      Reason: string
- name: tasks
  endpoint:
    path: /tasks
    method: PUT
    params:
      TaskID: '123'
      Description: task description
      TaskDue: MM/DD/YYYY
      Priority: integer 0-3
      InsideTeamId: retrieve team
      EstimatedTime: integer 0-4
      ContactID: '234'
      Completed: yes or no
- name: removeContactNote
  endpoint:
    path: /removeContactNote
    method: DELETE
    params:
      noteID: The NoteID of the note
      vendor: boolean
- name: webhooks
  endpoint:
    path: /webhooks
    method: DELETE
    params:
      CallId: integer
      TaskID: '123'
      WebhookID: '123'
- name: deleteProperty
  endpoint:
    path: /deleteProperty
    method: DELETE
    params:
      propertyID: '123'
- name: meetings
  endpoint:
    path: /api/v1/meetings
    method: GET
    data_selector: data
    params: {}
- name: schedule_meeting
  endpoint:
    path: /schedule
    method: GET
- name: email_conversations
  endpoint:
    path: /api/v1/email_conversations
    method: GET
    data_selector: records
    params: {}
- name: text_messages
  endpoint:
    path: /api/v1/text_messages
    method: GET
    data_selector: records
    params: {}
- name: drip_campaigns
  endpoint:
    path: /api/v1/drip_campaigns
    method: GET
    data_selector: records
    params: {}
- name: call_list
  endpoint:
    path: /api/v1/call_list
    method: GET
    data_selector: records
    params: {}
- name: ai_bot
  endpoint:
    path: /api/v1/ai_bot
    method: GET
    data_selector: records
    params: {}
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: records
- name: leads
  endpoint:
    path: /leads
    method: GET
    data_selector: records
- name: leads
  endpoint:
    path: /leads
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /api/contact
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /api/properties
    method: GET
    data_selector: records
- name: lead_generation
  endpoint:
    path: /features/lead-automation
    method: GET
- name: contact_management
  endpoint:
    path: /features/contact-management
    method: GET
- name: team_features
  endpoint:
    path: /features/team-features
    method: GET
- name: conversations
  endpoint:
    path: /features/conversations
    method: GET
- name: reporting_tools
  endpoint:
    path: /features/software-tools
    method: GET
- name: leads
  endpoint:
    path: /api/v1/leads
    method: GET
    data_selector: records
- name: podcast_episodes
  endpoint:
    path: /api/v1/podcast/episodes
    method: GET
    data_selector: episodes
- name: leads
  endpoint:
    path: /api/v1/leads
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: classes
  endpoint:
    path: /api/classes
    method: GET
    data_selector: records
    params: {}
- name: Schedule Meeting
  endpoint:
    path: /schedule
    method: GET
- name: schedule_meeting
  endpoint:
    path: /schedule
    method: GET
- name: contact
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: testimonials
  endpoint:
    path: /api/testimonials
    method: GET
    data_selector: records
- name: Lead Generation
  endpoint:
    path: /api/lead_generation
    method: GET
    data_selector: leads
- name: IDX
  endpoint:
    path: /api/idx
    method: GET
    data_selector: properties
- name: MLS
  endpoint:
    path: /api/mls
    method: GET
    data_selector: listings
- name: Transaction
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: transactions
- name: Marketing
  endpoint:
    path: /api/marketing
    method: GET
    data_selector: marketing_materials
- name: West Alabama MLS
  endpoint:
    path: /
    method: GET
- name: Wichita Falls Association of Realtors®
  endpoint:
    path: /
    method: GET
- name: IDX Broker
  endpoint:
    path: /
    method: GET
- name: Real Geeks
  endpoint:
    path: /
    method: GET
- name: Easy Agent Pro
  endpoint:
    path: /
    method: GET
- name: Home Junction
  endpoint:
    path: /
    method: GET
- name: iFoundagent
  endpoint:
    path: /
    method: GET
- name: YourMLSSearch
  endpoint:
    path: /
    method: GET
- name: Ylopo
  endpoint:
    path: /
    method: GET
- name: Zenlist
  endpoint:
    path: /
    method: GET
- name: Lending Tree
  endpoint:
    path: /
    method: GET
- name: lead_generation
  endpoint:
    path: /partners
    method: GET
    data_selector: partners
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Required OAuth scopes vary by endpoint.
- Some API methods require specific OAuth scopes.
- Only supplied fields will be updated
- API may have rate limits that need to be monitored.
- We provide fast and friendly 24/7 customer support.
- Wise Agent offers free 24/7 support with a goal to respond within 10 minutes or
  less
- Check back later for updates on classes.
- Setup requires API key and OAuth2 configuration.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Integration allows syncing of email conversations from Gmail into Wise Agent CRM.
- Wise Agent's technology enables me to share my exclusive marketing content.
- Customer Service is the best I've ever dealt with!
- Ensure the application is set up correctly in Wise Agent
- API may limit the number of requests per minute
- Wise Agent allows integration with various lead sources.
- This API does not require authentication.
- Ensure correct OAuth scopes are set for access.
- API provides access to training class schedules and details.
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Wise Agent
- Customer support team works 24/7.
- Requires setup of connected app in Wise Agent
- We do not sell Personal Information as defined by the CCPA.
- We do share Personal Information as defined by the CCPA.
- Some objects like Contact may return nulls in deeply nested fields
- Requires user account for access
- Wise Agent complies with all Anti-SPAM laws, including CAN-SPAM ACT the CASL-Canada
  and GDPR, and A2P 10 DLC (Application-to-Person 10 Digit Long Code) compliance.
- Some responses may include nulls in nested fields
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- propertyID was not found
- SearchID not found
- Property not found
- user not found
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '403 Forbidden: Check if the access token is valid'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Retry the request after some time'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Check your credentials and token.'
- '404 Not Found: Verify the endpoint URI.'
- '401 Unauthorized: Check client ID and secret'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Invalid credentials or token expired'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - OAuth scopes
  - contacts
  - properties
  - marketing
  - planner
  - profile
  - team
  - NamedCredential
client:
  base_url: https://wiseagent.com
  auth:
    type: oauth2
    flow: refresh_token
  headers:
    Accept: application/json
source_metadata: null
