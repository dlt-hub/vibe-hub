resources:
- name: pools
  endpoint:
    path: /:uid/pools
    method: GET
    data_selector: pools
- name: logs
  endpoint:
    path: /:uid/pools/:poolId/logs
    method: GET
    data_selector: logs
- name: reminders
  endpoint:
    path: /:uid/pools/:poolId/reminders
    method: GET
    data_selector: reminders
- name: organization_pool_logs
  endpoint:
    path: /:orgId/pools/:poolId/logs
    method: GET
    data_selector: logs
    params: {}
- name: specific_organization_log
  endpoint:
    path: /:orgId/pools/:poolId/logs/:logId
    method: GET
    data_selector: log
    params: {}
- name: create_organization_pool_log
  endpoint:
    path: /:orgId/pools/:poolId/logs
    method: POST
    data_selector: log
    params:
      type: required
- name: delete_organization_pool_log
  endpoint:
    path: /:orgId/pools/:poolId/logs/:logId
    method: DELETE
    data_selector: log
    params: {}
- name: service_calls
  endpoint:
    path: /services/api/v1/service_calls
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /services/api/v1/customers
    method: GET
    data_selector: records
- name: pools
  endpoint:
    path: /:uid/pools
    method: POST
    data_selector: pool
    params: {}
- name: logs
  endpoint:
    path: /:uid/pools/:poolId/logs
    method: GET
    data_selector: logs
    params: {}
- name: reminders
  endpoint:
    path: /:uid/pools/:poolId/reminders
    method: GET
    data_selector: reminders
    params: {}
- name: pools
  endpoint:
    path: /:uid/pools
    method: GET
    data_selector: pools
    params: {}
- name: logs
  endpoint:
    path: /:uid/pools/:poolId/logs
    method: GET
    data_selector: logs
    params: {}
- name: reminders
  endpoint:
    path: /:uid/pools/:poolId/reminders
    method: GET
    data_selector: reminders
    params: {}
- name: organization_pool_logs
  endpoint:
    path: /:orgId/pools/:poolId/logs
    method: GET
    params: {}
- name: specific_organization_log
  endpoint:
    path: /:orgId/pools/:poolId/logs/:logId
    method: GET
    params: {}
- name: create_organization_pool_log
  endpoint:
    path: /:orgId/pools/:poolId/logs
    method: POST
    params:
      type: required
- name: delete_organization_pool_log
  endpoint:
    path: /:orgId/pools/:poolId/logs/:logId
    method: DELETE
    params: {}
- name: organization_pool_logs
  endpoint:
    path: /:orgId/pools/:poolId/logs
    method: GET
    params: {}
- name: specific_organization_log
  endpoint:
    path: /:orgId/pools/:poolId/logs/:logId
    method: GET
    params: {}
- name: create_organization_pool_log
  endpoint:
    path: /:orgId/pools/:poolId/logs
    method: POST
    params:
      type: required
- name: delete_organization_pool_log
  endpoint:
    path: /:orgId/pools/:poolId/logs/:logId
    method: DELETE
    params: {}
- name: savings_calculator
  endpoint:
    path: /api/v1/savings
    method: GET
    data_selector: results
- name: service_request
  endpoint:
    path: /api/v1/service_requests
    method: GET
    data_selector: requests
- name: payment
  endpoint:
    path: /api/v1/payments
    method: POST
    data_selector: payment_info
- name: annual_savings
  endpoint:
    path: /api/v1/savings
    method: GET
    data_selector: records
notes:
- This is a beta version of the Pooli API and may be subject to changes and updates.
- Rate limiting is applied on a per-user basis.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- This is a beta feature
- Setup can be completed in 10 minutes
- Requires at least one payment processing per month to maintain access
- API is in beta version and may be subject to changes.
- Organization endpoints require that the API key holder is either Organization Owner
  or Active Technician.
- Improved our intelligent eco-friendly targeting system based on your supplemental
  sanitizers (mineral systems, UV, ozone, and more) - let Pooli guide you toward greener,
  more sustainable pool care while maintaining crystal clear water
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in Pooli
- Some responses may contain null values.
- Integration supports OAuth2 with refresh token
- Ensure compliance with data protection regulations
- Uses OAuth2 with refresh token — requires setup of connected app in Pooli
- Some calculations may yield zero values based on input
errors:
- '403 Access denied: Not authorized for this organization'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify OAuth token or permissions'
- '429 Too Many Requests: Throttle your API requests'
- 60 requests per hour for non-club members.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_CREDENTIALS: Verify client ID and secret'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- '403 FORBIDDEN: Check user permissions'
- 'INVALID_INPUT: Check the values provided for pool size or sanitizer'
- 'UNAUTHORIZED: Ensure API token is valid'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.pooli.app
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
