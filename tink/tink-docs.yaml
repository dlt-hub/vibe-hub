resources:
- name: DeleteTransactionPartResponse
  endpoint:
    path: /DeleteTransactionPart
    method: DELETE
    data_selector: transaction
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: balances
    params: {}
- name: update_account
  endpoint:
    path: /api-data-v1/account/update-an-account
    method: POST
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PATCH
- name: mark_notification_read
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-read
    method: POST
- name: mark_notification_received
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-received
    method: POST
- name: query_notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: archive_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/archive-savings-goal
    method: POST
- name: complete_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/complete-savings-goal
    method: POST
- name: create_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/create-savings-goal
    method: POST
- name: deposit_to_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/deposit-to-savings-goal
    method: POST
- name: get_account
  endpoint:
    path: /api-finance-management/savings-goals/get-account
    method: GET
- name: get_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/get-savings-goal
    method: GET
- name: list_allocations
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations
    method: GET
- name: list_allocations_by_account
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations-by-account
    method: GET
- name: list_categories
  endpoint:
    path: /api-finance-management/savings-goals/list-categories
    method: GET
- name: list_periods_progress
  endpoint:
    path: /api-finance-management/savings-goals/list-periods-progress
    method: GET
- name: list_savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: reallocate_amount
  endpoint:
    path: /api-finance-management/savings-goals/reallocate-amount
    method: POST
- name: update_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/update-savings-goal
    method: PATCH
- name: withdraw_from_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/withdraw-from-savings-goal
    method: POST
- name: query_statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: list_subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: update_account
  endpoint:
    path: /api-data-v1/account/update-an-account
    method: POST
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notification
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts/list
    method: GET
    data_selector: accounts
- name: account_balances
  endpoint:
    path: /api/v1/accounts/{id}/balances
    method: GET
    data_selector: balances
- name: update_account
  endpoint:
    path: /api/v1/accounts/{id}
    method: PUT
- name: account_verification_report
  endpoint:
    path: /account-verification-reports/{id}/pdf
    method: GET
    data_selector: userDataByProvider
    params:
      id: required
- name: identities
  endpoint:
    path: /identities
    method: GET
    data_selector: identities
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notification
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants/list-merchants
    method: GET
- name: bulk_payment
  endpoint:
    path: /api-payment/bulk-payment/create-bulk-payment
    method: POST
- name: cancellation
  endpoint:
    path: /api-payment/cancellation/begin-cancellation
    method: POST
- name: mandate_payment
  endpoint:
    path: /api-payment/mandate-payment/create-mandate-payment
    method: POST
- name: payment_request
  endpoint:
    path: /api-payment/payment-request/create-payment-request
    method: POST
- name: settlement_accounts
  endpoint:
    path: /api-payment/settlement-accounts/list-accounts
    method: GET
- name: expense_check
  endpoint:
    path: /api-risk/expense-check/list-expense-checks
    method: GET
- name: income_check
  endpoint:
    path: /api-risk/income-check/list-income-checks
    method: GET
- name: risk_insights
  endpoint:
    path: /api-risk/risk-insights/create-risk-insights
    method: POST
- name: identity_data
  endpoint:
    path: /api-data-v1/identity/list-identity-data
    method: GET
    data_selector: records
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts/list
    method: GET
    data_selector: accounts
    params: {}
- name: account_balances
  endpoint:
    path: /api/v1/accounts/{id}/balances
    method: GET
    data_selector: balances
    params: {}
- name: account_verification_report
  endpoint:
    path: /account-verification-reports/{id}
    method: GET
- name: business_account_verification_report
  endpoint:
    path: /business-account-verification-reports/{id}
    method: GET
- name: identities
  endpoint:
    path: /identities
    method: GET
- name: portfolios
  endpoint:
    path: /api/v1/portfolios
    method: GET
    data_selector: portfolios
    params:
      portfolioType: type
- name: List investments
  endpoint:
    path: /api-data-v1/investment/list-investments
    method: GET
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: investment
  endpoint:
    path: /api-data-v1/investment/list-investments
    method: GET
    data_selector: records
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts/list
    method: GET
    data_selector: accounts
- name: balances
  endpoint:
    path: /api/v1/accounts/{id}/balances
    method: GET
    data_selector: balances
- name: account_verification_report
  endpoint:
    path: /api/v1/account-verification-reports/{id}
    method: GET
    data_selector: userDataByProvider
    params:
      id: required
- name: account_verification_report_pdf
  endpoint:
    path: /api/v1/account-verification-reports/{id}/pdf
    method: GET
    data_selector: userDataByProvider
    params:
      id: required
      template: required
- name: business_account_verification_report
  endpoint:
    path: /data/v1/business-account-verification-reports/{id}
    method: GET
    data_selector: userDataByProvider
    params:
      id: required
- name: identities
  endpoint:
    path: /api/v1/identities
    method: GET
    data_selector: identities
- name: investments
  endpoint:
    path: /api/v1/investments
    method: GET
    data_selector: portfolios
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: loans
- name: deleteTransactionPart
  endpoint:
    path: /transactions/part
    method: DELETE
    data_selector: transaction
    params:
      id: required
      partId: required
- name: searchTransactions
  endpoint:
    path: /transactions/search
    method: GET
    data_selector: results
    params:
      limit: 20
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: mark_notification_read
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-read
    method: POST
- name: mark_notification_received
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-received
    method: POST
- name: query_notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: archive_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/archive-savings-goal
    method: POST
- name: complete_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/complete-savings-goal
    method: POST
- name: create_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/create-savings-goal
    method: POST
- name: deposit_to_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/deposit-to-savings-goal
    method: POST
- name: get_account
  endpoint:
    path: /api-finance-management/savings-goals/get-account
    method: GET
- name: get_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/get-savings-goal
    method: GET
- name: list_allocations
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations
    method: GET
- name: list_allocations_by_account
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations-by-account
    method: GET
- name: list_categories
  endpoint:
    path: /api-finance-management/savings-goals/list-categories
    method: GET
- name: list_periods_progress
  endpoint:
    path: /api-finance-management/savings-goals/list-periods-progress
    method: GET
- name: list_savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: reallocate_amount
  endpoint:
    path: /api-finance-management/savings-goals/reallocate-amount
    method: POST
- name: update_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/update-savings-goal
    method: PUT
- name: withdraw_from_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/withdraw-from-savings-goal
    method: POST
- name: query_statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: list_subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PATCH
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts/list
    method: GET
    data_selector: accounts
- name: balances
  endpoint:
    path: /api/v1/accounts/{id}/balances
    method: GET
    data_selector: balances
- name: account_verification_report
  endpoint:
    path: /api/v1/account-verification-reports/{id}
    method: GET
- name: business_account_verification_report
  endpoint:
    path: /data/v1/business-account-verification-reports/{id}
    method: GET
- name: identities
  endpoint:
    path: /api/v1/identities
    method: GET
- name: investments
  endpoint:
    path: /api/v1/investments
    method: GET
- name: loans
  endpoint:
    path: /api/v1/loans
    method: GET
- name: transactions
  endpoint:
    path: /api/v1/search
    method: POST
    data_selector: results
    params: {}
- name: categorize_multiple_transactions
  endpoint:
    path: /categorize-multiple
    method: PUT
    data_selector: categorizationList
    params:
      id: required
      partId: required
- name: delete_transaction_part
  endpoint:
    path: /{id}/part/{partId}
    method: DELETE
    data_selector: transaction
    params:
      id: required
      partId: required
- name: suggest_counterpart
  endpoint:
    path: /{id}/link/suggest
    method: GET
    data_selector: suggestedCounterpartTransactions
    params:
      id: required
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: transactions
    params:
      id: required
- name: update_transaction
  endpoint:
    path: /api/v1/transactions/{id}
    method: PUT
    data_selector: transaction
    params:
      id: required
- name: UpdateTransaction
  endpoint:
    path: /api/v1/transactions/{id}/part/{partId}
    method: PUT
    data_selector: transaction
    params:
      id: required
      partId: required
- name: update_transaction_link
  endpoint:
    path: /updateTransactionLink
    method: POST
    data_selector: counterpartTransaction
    params: {}
- name: Payments
  endpoint:
    path: /resources/payments
    method: GET
- name: Account Check
  endpoint:
    path: /resources/account-check
    method: GET
- name: Business Account Check
  endpoint:
    path: /resources/business-account-check
    method: GET
- name: Investments
  endpoint:
    path: /resources/investments
    method: GET
- name: Loans
  endpoint:
    path: /resources/loans
    method: GET
- name: Transactions
  endpoint:
    path: /resources/transactions
    method: GET
- name: Business Transactions
  endpoint:
    path: /resources/business-transactions
    method: GET
- name: Data Enrichment
  endpoint:
    path: /resources/data-enrichment
    method: GET
- name: Income Check
  endpoint:
    path: /resources/income-check
    method: GET
- name: Expense Check
  endpoint:
    path: /resources/expense-check
    method: GET
- name: Risk Insights
  endpoint:
    path: /resources/risk-insights
    method: GET
- name: Money Manager
  endpoint:
    path: /resources/money-manager
    method: GET
- name: one-time payments
  endpoint:
    path: /resources/payments/one-time-payments/initiate-your-first-one-time-payment
    method: GET
- name: bulk payments
  endpoint:
    path: /resources/payments/one-time-payments/initiate-your-first-bulk-payment
    method: GET
- name: settlement accounts
  endpoint:
    path: /resources/payments/one-time-payments/set-up-settlement-accounts-one-time-payments
    method: GET
- name: risk signals
  endpoint:
    path: /resources/payments/one-time-payments/risk-signals
    method: GET
- name: error codes
  endpoint:
    path: /resources/payments/one-time-payments/handle-one-time-payments-sdk-error-codes
    method: GET
- name: sessions
  endpoint:
    path: /resources/payments/one-time-payments/one-time-payments-sdk-sessions
    method: GET
- name: notifications and webhooks
  endpoint:
    path: /resources/payments/one-time-payments/one-time-payments-notifications-and-webhooks
    method: GET
- name: Payments
  endpoint:
    path: /resources/payments
    method: GET
- name: Account Check
  endpoint:
    path: /resources/account-check
    method: GET
- name: Business Account Check
  endpoint:
    path: /resources/business-account-check
    method: GET
- name: Investments
  endpoint:
    path: /resources/investments
    method: GET
- name: Loans
  endpoint:
    path: /resources/loans
    method: GET
- name: Transactions
  endpoint:
    path: /resources/transactions
    method: GET
- name: Business Transactions
  endpoint:
    path: /resources/business-transactions
    method: GET
- name: Data Enrichment
  endpoint:
    path: /resources/data-enrichment
    method: GET
- name: Income Check
  endpoint:
    path: /resources/income-check
    method: GET
- name: Expense Check
  endpoint:
    path: /resources/expense-check
    method: GET
- name: Risk Insights
  endpoint:
    path: /resources/risk-insights
    method: GET
- name: Money Manager
  endpoint:
    path: /resources/money-manager
    method: GET
- name: account_verification_reports
  endpoint:
    path: /account-verification-reports/
    method: GET
- name: account_verification_report
  endpoint:
    path: /api/v1/account-verification-reports/
    method: GET
    data_selector: reports
- name: transaction_report
  endpoint:
    path: /data/v2/transaction-reports/
    method: GET
    data_selector: reports
- name: account_check
  endpoint:
    path: /1.0/account-check/create-report
    method: GET
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: account_check_report
  endpoint:
    path: /1.0/account-check/create-report
    method: GET
    data_selector: report
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: session
  endpoint:
    path: /link/v1/session
    method: POST
    data_selector: null
    params: {}
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants
    method: POST
- name: list_merchants
  endpoint:
    path: /api-partner-integration/merchants/list-merchants
    method: GET
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: enabledEvents
- name: session
  endpoint:
    path: /link/v1/session
    method: POST
    data_selector: sessionId
- name: account_verification_reports
  endpoint:
    path: /api/v1/account-verification-reports/
    method: GET
    data_selector: ''
- name: account_check_report
  endpoint:
    path: /account-check
    method: GET
- name: business_account_verification_report
  endpoint:
    path: /data/v1/business-account-verification-reports/
    method: GET
    data_selector: report
    params: {}
- name: business_account_check
  endpoint:
    path: /create-report
    method: GET
    data_selector: report
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: business_account_check
  endpoint:
    path: /1.0/business-account-check/create-report
    method: GET
    data_selector: query
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: business_account_check_report
  endpoint:
    path: /1.0/business-account-check/create-report
    method: GET
    data_selector: report
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: https://myapp.com/callback
- name: session
  endpoint:
    path: /link/v1/session
    method: POST
    data_selector: ''
    params: {}
- name: business_account_check
  endpoint:
    path: /1.0/business-account-check/create-report
    method: GET
- name: BusinessAccountCheck
  endpoint:
    path: /business-account-check
    method: POST
- name: investment_accounts
  endpoint:
    path: /data/v2/investment-accounts
    method: GET
    data_selector: investmentAccounts
    params: {}
- name: holdings
  endpoint:
    path: /data/v2/investment-accounts//holdings
    method: GET
    data_selector: holdings
    params: {}
- name: investment_accounts
  endpoint:
    path: /v1/investment/accounts
    method: GET
    data_selector: accounts
- name: holdings
  endpoint:
    path: /v1/investment/holdings
    method: GET
    data_selector: holdings
- name: investment_accounts
  endpoint:
    path: /data/v2/investment-accounts
    method: GET
    data_selector: investmentAccounts
- name: holdings
  endpoint:
    path: /data/v2/investment-accounts//holdings
    method: GET
    data_selector: holdings
- name: provider_consents
  endpoint:
    path: /api/v1/provider-consents
    method: GET
    data_selector: providerConsents
- name: delete_user
  endpoint:
    path: /api/v1/user/delete
    method: POST
- name: delete_consent
  endpoint:
    path: /api/v1/credentials/{credentialsId}
    method: DELETE
- name: investment_accounts
  endpoint:
    path: /data/v2/investment-accounts
    method: GET
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
    data_selector: records
- name: investment-accounts
  endpoint:
    path: /data/v2/investment-accounts
    method: GET
    data_selector: records
- name: loan-accounts
  endpoint:
    path: /data/v2/loan-accounts
    method: GET
    data_selector: records
- name: connect_accounts
  endpoint:
    path: /1.0/products/connect-accounts
    method: GET
    data_selector: products
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
- name: investment-accounts
  endpoint:
    path: /data/v2/investment-accounts
    method: GET
- name: loan-accounts
  endpoint:
    path: /data/v2/loan-accounts
    method: GET
- name: loans
  endpoint:
    path: /resources/loans
    method: GET
    data_selector: loan_data
- name: loan_accounts
  endpoint:
    path: /data/v2/loan-accounts
    method: GET
    data_selector: loanAccounts
- name: create_user
  endpoint:
    path: /api/v1/user/create
    method: POST
    data_selector: ''
    params:
      market: GB
      locale: en_US
- name: authorization_grant
  endpoint:
    path: /api/v1/oauth/authorization-grant
    method: POST
    data_selector: ''
    params:
      scope: authorization:read,authorization:grant,credentials:refresh,credentials:read,credentials:write,providers:read,user:read
- name: loan_accounts
  endpoint:
    path: /data/v2/loan-accounts
    method: GET
- name: provider_consents
  endpoint:
    path: /api/v1/provider-consents
    method: GET
    data_selector: providerConsents
- name: refresh_credential
  endpoint:
    path: /api/v1/credentials/{credentialsId}/refresh
    method: POST
- name: connect_accounts
  endpoint:
    path: /1.0/products/connect-accounts
    method: GET
    data_selector: credentials_id
    params:
      client_id: ''
      products: LOANS,TRANSACTIONS
      redirect_uri: http://localhost:3000/callback
      market: GB
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
- name: investment-accounts
  endpoint:
    path: /data/v2/investment-accounts
    method: GET
- name: loan-accounts
  endpoint:
    path: /data/v2/loan-accounts
    method: GET
- name: list_accounts_and_balances
  endpoint:
    path: /resources/transactions/list-accounts-and-balances
    method: GET
- name: list_transactions
  endpoint:
    path: /resources/transactions/list-transactions
    method: GET
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
    data_selector: transactions
    params:
      accountIdIn: '{your_account_id}'
      statusIn: '{transaction_status}'
      pageSize: '{number}'
      pageToken: '{next_page_token}'
      bookedDateGte: '{date}'
      bookedDateLte: '{date}'
- name: accounts
  endpoint:
    path: /data/v2/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: user_create
  endpoint:
    path: /api/v1/user/create
    method: POST
    data_selector: ''
    params: {}
- name: authorization_grant
  endpoint:
    path: /api/v1/oauth/authorization-grant
    method: POST
    data_selector: ''
    params: {}
- name: provider_consents
  endpoint:
    path: /provider-consents
    method: GET
    data_selector: providerConsents
- name: delete_user
  endpoint:
    path: /user/delete
    method: POST
- name: accounts
  endpoint:
    path: /data/v2/accounts
    method: GET
    data_selector: accounts
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transactions
  endpoint:
    path: /1.0/transactions/connect-accounts
    method: GET
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: transactions
  endpoint:
    path: /1.0/transactions/connect-accounts
    method: GET
    data_selector: transactions
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: true
- name: session
  endpoint:
    path: /link/v1/session
    method: POST
    data_selector: ''
    params:
      scope: link-session:write
- name: connect_accounts
  endpoint:
    path: /1.0/transactions/connect-accounts
    method: GET
    data_selector: parameters
- name: update_consent
  endpoint:
    path: /1.0/transactions/update-consent
    method: GET
    data_selector: parameters
- name: webhook_endpoints
  endpoint:
    path: /events/v2/webhook-endpoints
    method: POST
    data_selector: enabledEvents
    params:
      scope: authorization:grant,user:create
- name: account_transactions_deleted
  endpoint:
    path: /resources/transactions/webhooks-for-transactions/account-transactions:deleted
    method: POST
    data_selector: content
    params: {}
- name: one-time access
  endpoint:
    path: /transactions/one-time-access
    method: GET
- name: continuous access
  endpoint:
    path: /transactions/continuous-access
    method: GET
- name: account check and transactions with continuous access
  endpoint:
    path: /transactions/account-check-and-continuous-access
    method: GET
- name: list_accounts
  endpoint:
    path: /resources/business-transactions/business-list-accounts-and-balances
    method: GET
- name: list_transactions
  endpoint:
    path: /resources/business-transactions/list-business-transactions
    method: GET
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
- name: accounts
  endpoint:
    path: /data/v2/accounts
    method: GET
- name: user_create
  endpoint:
    path: /api/v1/user/create
    method: POST
    data_selector: external_user_id
- name: authorization_grant
  endpoint:
    path: /api/v1/oauth/authorization-grant
    method: POST
    data_selector: code
- name: provider_consents
  endpoint:
    path: /api/v1/provider-consents
    method: GET
    data_selector: providerConsents
- name: refresh_credential
  endpoint:
    path: /api/v1/credentials/{credentialsId}/refresh
    method: POST
- name: provider_consents
  endpoint:
    path: /api/v1/provider-consents
    method: GET
    data_selector: providerConsents
- name: delete_user
  endpoint:
    path: /api/v1/user/delete
    method: POST
- name: update_consent
  endpoint:
    path: /1.0/business-transactions/update-consent
    method: GET
- name: delete_consent
  endpoint:
    path: /api/v1/credentials/{credentialsId}
    method: DELETE
- name: accounts
  endpoint:
    path: /data/v2/accounts
    method: GET
    data_selector: accounts
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: business_transactions
  endpoint:
    path: /1.0/business-transactions/connect-accounts
    method: GET
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: business_transactions
  endpoint:
    path: /1.0/business-transactions/connect-accounts
    method: GET
    data_selector: results
- name: connect_accounts
  endpoint:
    path: /connect-accounts
    method: GET
    data_selector: credentials_id
    params:
      client_id: ''
      redirect_uri: http://localhost:3000/callback
      market: GB
- name: update_consent
  endpoint:
    path: /update-consent
    method: GET
    data_selector: credentials_id
    params:
      client_id: ''
      redirect_uri: http://localhost:3000/callback
      credentials_id: 6915ab99857fec1e6f2f6c078
      authorization_code: d473ea2bea8f484c9d7889b0a
- name: webhook-endpoints
  endpoint:
    path: /events/v2/webhook-endpoints
    method: POST
    data_selector: enabledEvents
    params: {}
- name: account-transactions-deleted
  endpoint:
    path: /webhooks/account-transactions/deleted
    method: POST
    data_selector: content
    params: {}
- name: Account transactions deleted
  endpoint:
    path: /resources/business-transactions/webhooks-for-business-transactions#event-account-transactions-deleted
- name: business_transactions
  endpoint:
    path: /resources/business-transactions
    method: GET
- name: business_transactions
  endpoint:
    path: /1.0/business-transactions/connect-accounts
    method: GET
    data_selector: response
    params: {}
- name: business_transaction
  endpoint:
    path: /business-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: create_user
  endpoint:
    path: /api/v1/user/create
    method: POST
    data_selector: external_user_id
    params: {}
- name: create_delegated_client_code
  endpoint:
    path: /api/v1/oauth/authorization-grant/delegate
    method: POST
    data_selector: code
    params: {}
- name: create_tink_link_url
  endpoint:
    path: /1.0/transactions/connect-accounts
    method: GET
    data_selector: redirect_url
    params: {}
- name: user_create
  endpoint:
    path: /api/v1/user/create
    method: POST
    data_selector: ''
    params: {}
- name: accounts_ingest
  endpoint:
    path: /connector/users/{externalUserId}/accounts
    method: POST
    data_selector: ''
    params: {}
- name: transactions_ingest
  endpoint:
    path: /connector/users/{externalUserId}/transactions
    method: POST
    data_selector: ''
    params: {}
- name: transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: GET
    data_selector: transactions
- name: categories
  endpoint:
    path: /enrichment/v1/categories
    method: GET
- name: transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: PATCH
- name: similar_transactions
  endpoint:
    path: /enrichment/v1/transactions/:find-similar
    method: GET
    data_selector: transactions
- name: enriched_transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: GET
    data_selector: transactions
    params:
      categoryIdIn: ''
- name: recurring_transactions
  endpoint:
    path: /enrichment/v1/recurring-transactions
    method: GET
    data_selector: recurringTransactions
- name: recurring_transactions_groups
  endpoint:
    path: /enrichment/v1/recurring-transactions-groups
    method: GET
- name: categories
  endpoint:
    path: /api/v1/categories
    method: GET
    data_selector: categories
- name: predicted_recurring_transactions
  endpoint:
    path: /enrichment/v1/predicted-recurring-transactions
    method: GET
    data_selector: predictedRecurringTransactions
- name: predicted_recurring_transactions
  endpoint:
    path: /enrichment/v1/predicted-recurring-transactions
    method: GET
    data_selector: predictedRecurringTransactions
- name: recurring_transactions_groups
  endpoint:
    path: /enrichment/v1/recurring-transactions-groups
    method: GET
    data_selector: recurringTransactionsGroups
- name: categories
  endpoint:
    path: /enrichment/v1/categories
    method: GET
    params:
      localeEq: en_US
    data_selector: categories
- name: predicted_recurring_transactions
  endpoint:
    path: /enrichment/v1/predicted-recurring-transactions
    method: GET
    data_selector: predictedRecurringTransactions
    params:
      predictionSpanDays: '60'
- name: transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: GET
    data_selector: transactions
- name: sustainability_insights
  endpoint:
    path: /enrichment/v1/sustainability/insights
    method: GET
    data_selector: insights
- name: account_insights
  endpoint:
    path: /enrichment/v1/sustainability/accounts/{ACCOUNT_ID}/insights
    method: GET
- name: account_profiling_questions
  endpoint:
    path: /enrichment/v1/sustainability/accounts/{accountId}/profiling
    method: GET
- name: account_profiling
  endpoint:
    path: /enrichment/v1/sustainability/accounts/profiling
    method: POST
- name: transaction_refinement_questions
  endpoint:
    path: /enrichment/v1/sustainability/transactions/{transactionId}/refinement
    method: GET
- name: refinement
  endpoint:
    path: /enrichment/v1/sustainability/transactions/refinement
    method: POST
- name: emission_comparables
  endpoint:
    path: /enrichment/v1/sustainability/transactions/{transactionId}/comparables
    method: GET
    data_selector: comparables
- name: market_average
  endpoint:
    path: /enrichment/v1/sustainability/market-average
    method: GET
    data_selector: averageCo2FootprintInGrams
    params:
      market: '{MARKET_CODE}'
- name: enrichment-completed
  endpoint:
    path: /resources/data-enrichment/webhook-for-enrichment-completed
    method: POST
    data_selector: webhook
- name: income_check
  endpoint:
    path: /v2/income-checks/
    method: GET
    data_selector: accounts
- name: income_check
  endpoint:
    path: /v2/income-checks/{income_check_id}
    method: GET
    data_selector: accounts
- name: reports_generation_jobs
  endpoint:
    path: /api/v1/reports-generation-jobs
    method: GET
    data_selector: reports
    params: {}
- name: income_checks
  endpoint:
    path: /v2/income-checks
    method: GET
    data_selector: reports
    params: {}
- name: risk_insights
  endpoint:
    path: /risk/v1/risk-insights
    method: GET
    data_selector: reports
    params: {}
- name: expense_checks
  endpoint:
    path: /risk/v1/expense-checks
    method: GET
    data_selector: reports
    params: {}
- name: income_check_report
  endpoint:
    path: /1.0/income-check/create-report
    method: GET
    data_selector: report
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: income_check_report
  endpoint:
    path: /1.0/income-check/create-report
    method: GET
    data_selector: query
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: create_report
  endpoint:
    path: /1.0/income-check/create-report
    method: GET
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: https%3A%2F%myapp.com%2Fcallback
- name: session
  endpoint:
    path: /link/v1/session
    method: POST
    data_selector: ''
    params: {}
- name: create_report
  endpoint:
    path: /create-report
    method: GET
    data_selector: response
    params:
      client_id: '{YOUR_CLIENT_ID}'
      redirect_uri: https://console.tink.com/callback
      market: GB
- name: expense_check
  endpoint:
    path: /risk/v1/expense-checks/{expense-check-id}
    method: GET
    data_selector: expenses
- name: expense_check
  endpoint:
    path: /risk/v1/expense-checks/{expense_check_id}
    method: GET
    data_selector: records
- name: reports_generation_jobs
  endpoint:
    path: /api/v1/reports-generation-jobs
    method: GET
    data_selector: reports
    params: {}
- name: income_checks
  endpoint:
    path: /v2/income-checks
    method: GET
    data_selector: reports
    params: {}
- name: risk_insights
  endpoint:
    path: /risk/v1/risk-insights
    method: GET
    data_selector: reports
    params: {}
- name: expense_checks
  endpoint:
    path: /risk/v1/expense-checks
    method: GET
    data_selector: reports
    params: {}
- name: expense_check_report
  endpoint:
    path: /1.0/expense-check/create-report
    method: GET
    data_selector: ''
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: Expense Check
  endpoint:
    path: /expense-check/create-report
    method: GET
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: create_report
  endpoint:
    path: /create-report
    method: GET
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: https://myapp.com/callback
- name: session
  endpoint:
    path: /link/v1/session
    method: POST
    data_selector: ''
    params:
      scope: link-session:write
- name: create_report
  endpoint:
    path: /create-report
    method: GET
    data_selector: expense_check_id
- name: Risk Insights
  endpoint:
    path: /risk/v1/risk-insights/{id}
    method: GET
    data_selector: risk_insight_id
- name: risk_insights_report
  endpoint:
    path: /risk/v1/risk-insights/{id}
    method: GET
    data_selector: accountActivity, accountOverview, atmWithdrawals
- name: reports_generation_jobs
  endpoint:
    path: /api/v1/reports-generation-jobs
    method: GET
    data_selector: reports
    params: {}
- name: income_checks
  endpoint:
    path: /v2/income-checks/
    method: GET
    data_selector: reports
    params: {}
- name: risk_insights
  endpoint:
    path: /risk/v1/risk-insights/
    method: GET
    data_selector: reports
    params: {}
- name: expense_checks
  endpoint:
    path: /risk/v1/expense-checks/
    method: GET
    data_selector: reports
    params: {}
- name: risk_insights_report
  endpoint:
    path: /1.0/risk-insights/create-report
    method: GET
    data_selector: response
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: create_report
  endpoint:
    path: /1.0/risk-insights/create-report
    method: GET
    data_selector: query
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: example://callback
      app_uri: example://open
      auto_redirect_mobile: 'true'
- name: risk_insights_report
  endpoint:
    path: /1.0/risk-insights/create-report
    method: GET
    data_selector: risk_insights_id
    params:
      client_id: '{YOUR_CLIENT_ID}'
      market: SE
      locale: en_US
      redirect_uri: https://myapp.com/callback
- name: session
  endpoint:
    path: /link/v1/session
    method: POST
    data_selector: ''
    params: {}
- name: risk_insights
  endpoint:
    path: /1.0/risk-insights/create-report
    method: GET
- name: risk_insights_create_report
  endpoint:
    path: /1.0/risk-insights/create-report
    method: GET
    data_selector: response
    params: {}
- name: RiskInsightsCreateReport
  endpoint:
    path: /risk-insights/create-report
    method: POST
- name: categorised_transactions
  endpoint:
    path: /resources/money-manager/money-manager-api/list-categorised-transactions
    method: GET
- name: recategorise_transactions
  endpoint:
    path: /resources/money-manager/money-manager-api/recategorise-transactions
    method: GET
- name: similar_transactions
  endpoint:
    path: /resources/money-manager/money-manager-api/similar-transactions
    method: GET
- name: link_transactions
  endpoint:
    path: /resources/money-manager/money-manager-api/link-transactions
    method: GET
- name: income_over_time
  endpoint:
    path: /resources/money-manager/money-manager-api/income-over-time
    method: GET
- name: visualise_spending
  endpoint:
    path: /resources/money-manager/money-manager-api/visualise-spending-by-child-category
    method: GET
- name: visualise_balances
  endpoint:
    path: /resources/money-manager/money-manager-api/visualise-balances-by-account
    method: GET
- name: visualise_carbon_footprint
  endpoint:
    path: /resources/money-manager/money-manager-api/visualise-carbon-footprint
    method: GET
- name: visualise_transfers
  endpoint:
    path: /resources/money-manager/money-manager-api/visualise-incoming-and-outgoing-transfers-by-category
    method: GET
- name: visualise_expenses
  endpoint:
    path: /resources/money-manager/money-manager-api/visualise-expenses
    method: GET
- name: visualise_incomes
  endpoint:
    path: /resources/money-manager/money-manager-api/visualise-incomes
    method: GET
- name: visualise_overall_incomes_expenses
  endpoint:
    path: /resources/money-manager/money-manager-api/visualise-overall-incomes-and-expenses
    method: GET
- name: check_remaining_left_to_spend
  endpoint:
    path: /resources/money-manager/money-manager-api/check-your-remaining-left-to-spend
    method: GET
- name: fetch_account_balance_trends
  endpoint:
    path: /resources/money-manager/money-manager-api/fetch-account-balance-trends
    method: GET
- name: first_actionable_insight
  endpoint:
    path: /resources/money-manager/money-manager-api/present-your-first-actionable-insight
    method: GET
- name: list_of_available_insights
  endpoint:
    path: /resources/money-manager/money-manager-api/list-of-available-insights
    method: GET
- name: configure_actionable_insights
  endpoint:
    path: /resources/money-manager/money-manager-api/configure-actionable-insights
    method: GET
- name: webhooks_for_actionable_insights
  endpoint:
    path: /resources/money-manager/money-manager-api/webhooks-for-actionable-insights
    method: GET
- name: create_savings_goal
  endpoint:
    path: /resources/money-manager/money-manager-api/create-savings-goal
    method: GET
- name: add_funds_to_savings_goal
  endpoint:
    path: /resources/money-manager/money-manager-api/add-funds-to-savings-goal
    method: GET
- name: check_progress_of_savings_goals
  endpoint:
    path: /resources/money-manager/money-manager-api/check-progress-of-savings-goals
    method: GET
- name: reallocate_funds_between_savings_goals
  endpoint:
    path: /resources/money-manager/money-manager-api/reallocate-funds-between-savings-goals
    method: GET
- name: get_subscriptions
  endpoint:
    path: /resources/money-manager/money-manager-api/get-subscriptions
    method: GET
- name: list_subscription_transactions
  endpoint:
    path: /resources/money-manager/money-manager-api/get-subscription-transactions
    method: GET
- name: introduction_to_budgets
  endpoint:
    path: /resources/money-manager/money-manager-api/introduction-to-budgets
    method: GET
- name: create_one_off_budget
  endpoint:
    path: /resources/money-manager/money-manager-api/create-one-off-budget
    method: GET
- name: create_recurring_budget
  endpoint:
    path: /resources/money-manager/money-manager-api/create-a-recurring-budget
    method: GET
- name: recommend_budgets
  endpoint:
    path: /resources/money-manager/money-manager-api/recommend-budgets
    method: GET
- name: check_progress_of_budget
  endpoint:
    path: /resources/money-manager/money-manager-api/progress-of-budget
    method: GET
- name: create_budget_for_project
  endpoint:
    path: /resources/money-manager/money-manager-api/create-a-budget-project
    method: GET
- name: archive_budget
  endpoint:
    path: /resources/money-manager/money-manager-api/archive-budget
    method: GET
- name: get_cost_of_living
  endpoint:
    path: /resources/money-manager/money-manager-api/get-cost-of-living
    method: GET
- name: get_cost_of_living_transactions
  endpoint:
    path: /resources/money-manager/money-manager-api/get-cost-of-living-transactions
    method: GET
- name: demo_banks_money_manager
  endpoint:
    path: /resources/money-manager/money-manager-api/demo-banks-money-manager
    method: GET
- name: access_token_money_manager
  endpoint:
    path: /resources/money-manager/money-manager-api/access-token-money-manager
    method: GET
- name: ingest_accounts_and_transactions
  endpoint:
    path: /resources/money-manager/money-manager-api/ingest-accounts-and-transactions
    method: GET
- name: calendar_periods
  endpoint:
    path: /api/v1/calendar/periods/{period}
    method: GET
- name: categories
  endpoint:
    path: /api/v1/categories
    method: GET
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
- name: user_profile
  endpoint:
    path: /api/v1/user/profile
    method: GET
- name: authorization_grant
  endpoint:
    path: /api/v1/oauth/authorization-grant
    method: GET
- name: revoke_all_tokens
  endpoint:
    path: /api/v1/oauth/revoke-all
    method: GET
- name: link_session
  endpoint:
    path: /link/v1/session
    method: POST
- name: create_user
  endpoint:
    path: /api/v1/user/create
    method: POST
- name: delete_user
  endpoint:
    path: /api/v1/user/delete
    method: DELETE
- name: update_user
  endpoint:
    path: /api/v1/user
    method: PUT
- name: balance_refresh
  endpoint:
    path: /api/v1/balance-refresh
    method: POST
- name: financial-calendar
  endpoint:
    path: /finance-management/v1/financial-calendar-events
    method: GET
    data_selector: records
    params: {}
- name: savings-goals
  endpoint:
    path: /api/v1/savings-goals
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /api/v1/statistics/query
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: merchants
  endpoint:
    path: /partner-integration/v1/merchants
    method: GET
    data_selector: records
    params: {}
- name: bulk-payment
  endpoint:
    path: /payment/v1/bulk-payments
    method: GET
    data_selector: records
    params: {}
- name: mandate-payments
  endpoint:
    path: /payment/v1/mandate-payments
    method: GET
    data_selector: records
    params: {}
- name: settlement-accounts
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts
    method: GET
    data_selector: records
    params: {}
- name: expense-checks
  endpoint:
    path: /risk/v1/expense-checks
    method: GET
    data_selector: records
    params: {}
- name: income-checks
  endpoint:
    path: /v2/income-checks
    method: GET
    data_selector: records
    params: {}
- name: risk-insights
  endpoint:
    path: /risk/v1/risk-insights
    method: GET
    data_selector: records
    params: {}
- name: calendar_periods
  endpoint:
    path: /api/v1/calendar/periods/{period}
    method: GET
- name: categories
  endpoint:
    path: /api/v1/categories
    method: GET
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
- name: user_profile
  endpoint:
    path: /api/v1/user/profile
    method: GET
- name: authorization_grant
  endpoint:
    path: /api/v1/oauth/authorization-grant
    method: POST
- name: authorization_grant_delegate
  endpoint:
    path: /api/v1/oauth/authorization-grant/delegate
    method: POST
- name: revoke_all_tokens
  endpoint:
    path: /api/v1/oauth/revoke-all
    method: POST
- name: link_session
  endpoint:
    path: /link/v1/session
    method: POST
- name: create_user
  endpoint:
    path: /api/v1/user/create
    method: POST
- name: delete_user
  endpoint:
    path: /api/v1/user/delete
    method: DELETE
- name: update_user
  endpoint:
    path: /api/v1/user
    method: PUT
- name: balance_refresh_status
  endpoint:
    path: /api/v1/balance-refresh/{refreshId}
    method: GET
- name: balance_refresh
  endpoint:
    path: /api/v1/balance-refresh
    method: POST
- name: refresh_credentials
  endpoint:
    path: /api/v1/credentials/{id}/refresh
    method: POST
- name: create_credentials
  endpoint:
    path: /api/v1/credentials
    method: POST
- name: get_credentials
  endpoint:
    path: /api/v1/credentials/{id}
    method: GET
- name: list_providers
  endpoint:
    path: /api/v1/providers
    method: GET
- name: get_payment_conditions
  endpoint:
    path: /api/v1/payments/providers/{name}/payment-conditions
    method: GET
- name: bulk_payments
  endpoint:
    path: /payment/v1/bulk-payments
    method: POST
- name: get_bulk_payment
  endpoint:
    path: /payment/v1/bulk-payments/{id}
    method: GET
- name: get_cancellation_data
  endpoint:
    path: /api/v1/payments/{paymentId}/cancellation
    method: GET
- name: financial_calendar
  endpoint:
    path: /finance-management/v1/financial-calendar-events
    method: GET
- name: savings_goals_write
  endpoint:
    path: /api/v1/savings-goals
    method: POST
- name: savings_goals_read
  endpoint:
    path: /api/v1/savings-goals
    method: GET
- name: statistics_read
  endpoint:
    path: /api/v1/statistics/query
    method: GET
- name: subscriptions_read
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
- name: merchants
  endpoint:
    path: /partner-integration/v1/merchants
    method: POST
- name: bulk_payment_write
  endpoint:
    path: /payment/v1/bulk-payments
    method: POST
- name: payment_write
  endpoint:
    path: /api/v1/payments/requests
    method: POST
- name: mandate_payments
  endpoint:
    path: /payment/v1/mandate-payments
    method: POST
- name: settlement_accounts
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts
    method: POST
- name: expense_checks_create
  endpoint:
    path: /risk/v1/expense-checks
    method: POST
- name: income_checks_create
  endpoint:
    path: /v2/income-checks
    method: POST
- name: risk_insights_create
  endpoint:
    path: /risk/v1/risk-insights
    method: POST
- name: User
  endpoint:
    path: /user
    method: POST
    data_selector: user
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PATCH
- name: mark_notification_as_read
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-read
    method: POST
- name: mark_notification_as_received
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-received
    method: POST
- name: query_notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: archive_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/archive-savings-goal
    method: DELETE
- name: complete_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/complete-savings-goal
    method: POST
- name: create_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/create-savings-goal
    method: POST
- name: deposit_to_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/deposit-to-savings-goal
    method: POST
- name: get_account
  endpoint:
    path: /api-finance-management/savings-goals/get-account
    method: GET
- name: get_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/get-savings-goal
    method: GET
- name: list_allocations
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations
    method: GET
- name: list_allocations_by_account
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations-by-account
    method: GET
- name: list_categories
  endpoint:
    path: /api-finance-management/savings-goals/list-categories
    method: GET
- name: list_periods_progress
  endpoint:
    path: /api-finance-management/savings-goals/list-periods-progress
    method: GET
- name: list_savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: reallocate_amount
  endpoint:
    path: /api-finance-management/savings-goals/reallocate-amount
    method: POST
- name: update_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/update-savings-goal
    method: PATCH
- name: withdraw_from_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/withdraw-from-savings-goal
    method: POST
- name: query_statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: list_subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: Calendar
  endpoint:
    path: /api/v1/calendar
    method: GET
    data_selector: data
    params: {}
- name: Create a session
  endpoint:
    path: /link/v1/session
    method: POST
- name: Create authorization
  endpoint:
    path: /api/v1/oauth/authorization-grant
    method: POST
- name: create_user
  endpoint:
    path: /user/create
    method: POST
    data_selector: external_user_id
    params:
      locale: en_US
      market: SE
- name: delete_user
  endpoint:
    path: /user/delete
    method: POST
    data_selector: locale
    params: {}
- name: get_user
  endpoint:
    path: /user
    method: GET
    data_selector: records
    params: {}
- name: update_user_profile
  endpoint:
    path: /user/profile
    method: PUT
    data_selector: locale
    params: {}
- name: UserProfile
  endpoint:
    path: /user/profile
    method: UPDATE
    data_selector: userProfile
- name: User
  endpoint:
    path: /user
    method: GET
    data_selector: user
- name: balance_refresh_status
  endpoint:
    path: /balance-refresh/{refreshId}
    method: GET
- name: request_balance_refresh
  endpoint:
    path: /balance-refresh
    method: POST
    data_selector: accountId
- name: Get Balance Refresh Status
  endpoint:
    path: /api-connectivity-v1/balance-refresh/get-balance-refresh-status
    method: GET
- name: Request Balance Refresh
  endpoint:
    path: /api-connectivity-v1/balance-refresh/request-balance-refresh
    method: POST
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notification
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants/list-merchants
    method: GET
- name: bulk_payment
  endpoint:
    path: /api-payment/bulk-payment/get-bulk-payment
    method: GET
- name: cancellation
  endpoint:
    path: /api-payment/cancellation/get-cancellation-data
    method: GET
- name: mandate_payment
  endpoint:
    path: /api-payment/mandate-payment/get-mandate-payment
    method: GET
- name: payment_request
  endpoint:
    path: /api-payment/payment-request/get-payment-request
    method: GET
- name: settlement_accounts
  endpoint:
    path: /api-payment/settlement-accounts/list-accounts
    method: GET
- name: expense_check
  endpoint:
    path: /api-risk/expense-check/list-expense-checks
    method: GET
- name: income_check
  endpoint:
    path: /api-risk/income-check/list-income-checks
    method: GET
- name: risk_insights
  endpoint:
    path: /api-risk/risk-insights/get-a-risk-insights
    method: GET
- name: Get Balance Refresh Status
  endpoint:
    path: /api-connectivity-v1/balance-refresh/get-balance-refresh-status
    method: GET
- name: Request Balance Refresh
  endpoint:
    path: /api-connectivity-v1/balance-refresh/request-balance-refresh
    method: POST
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notification
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants/list-merchants
    method: GET
- name: bulk_payment
  endpoint:
    path: /api-payment/bulk-payment/get-bulk-payment
    method: GET
- name: settlement_accounts
  endpoint:
    path: /api-payment/settlement-accounts/list-accounts
    method: GET
- name: expense_checks
  endpoint:
    path: /api-risk/expense-check/list-expense-checks
    method: GET
- name: income_checks
  endpoint:
    path: /api-risk/income-check/list-income-checks
    method: GET
- name: balance_refresh_status
  endpoint:
    path: /api/v1/balance-refresh/{refreshId}
    method: GET
    data_selector: status
    params:
      refreshId: required
- name: request_balance_refresh
  endpoint:
    path: /api/v1/balance-refresh
    method: POST
    data_selector: balanceRefreshId
    params:
      accountId: required
- name: credentials
  endpoint:
    path: /api/v1/credentials
    method: GET
    data_selector: credentials
- name: provider_consents
  endpoint:
    path: /api/v1/provider-consents
    method: GET
    data_selector: providers
- name: credentials
  endpoint:
    path: /connectivity/v1/credentials
    method: GET
    data_selector: records
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: balance_refresh_status
  endpoint:
    path: /api/v1/balance-refresh/{refreshId}
    method: GET
    data_selector: status
- name: request_balance_refresh
  endpoint:
    path: /api/v1/balance-refresh
    method: POST
    data_selector: balanceRefreshId
- name: create_credentials
  endpoint:
    path: /api/v1/credentials
    method: POST
    data_selector: id
- name: get_credentials
  endpoint:
    path: /api/v1/credentials/{id}
    method: GET
    data_selector: fields
- name: list_credentials
  endpoint:
    path: /api/v1/credentials/list
    method: GET
    data_selector: credentials
- name: third_party_callback
  endpoint:
    path: /api/v1/credentials/third-party/callback/relayed
    method: POST
    data_selector: parameters
- name: providers
  endpoint:
    path: /providers
    method: GET
    data_selector: providers
- name: payment_conditions
  endpoint:
    path: /payments/providers/{name}/payment-conditions
    method: GET
    data_selector: conditions
- name: provider_identifiers
  endpoint:
    path: /provider-identifiers
    method: GET
    data_selector: providerIdentifiers
- name: provider_list
  endpoint:
    path: /api/v1/providers
    method: GET
    data_selector: providers
- name: provider_consents
  endpoint:
    path: /api/v1/provider-consents
    method: GET
    data_selector: providerConsents
- name: extend_provider_consent
  endpoint:
    path: /api/v1/provider-consents:extend
    method: POST
- name: providers
  endpoint:
    path: /api-connectivity-v1/provider/list-providers
    method: GET
    data_selector: providers
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants/list-merchants
    method: GET
- name: bulk_payment
  endpoint:
    path: /api-payment/bulk-payment/get-bulk-payment
    method: GET
- name: providers
  endpoint:
    path: /api-connectivity-v1/provider/list-providers
    method: GET
    data_selector: providers
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: balance_refresh_status
  endpoint:
    path: /api/v1/balance-refresh/{refreshId}
    method: GET
    data_selector: status
    params:
      refreshId: required
- name: request_balance_refresh
  endpoint:
    path: /api/v1/balance-refresh
    method: POST
    data_selector: balanceRefreshId
    params:
      accountId: required
- name: create_credentials
  endpoint:
    path: /api/v1/credentials
    method: POST
    data_selector: id
    params:
      items: optional
- name: get_credentials
  endpoint:
    path: /api/v1/credentials/{id}
    method: GET
    data_selector: fields
    params:
      id: required
- name: list_credentials
  endpoint:
    path: /api/v1/credentials/list
    method: GET
    data_selector: credentials
- name: third_party_callback
  endpoint:
    path: /api/v1/credentials/third-party/callback/relayed
    method: POST
    data_selector: parameters
- name: payment_conditions
  endpoint:
    path: /api/v1/payments/providers/{name}/payment-conditions
    method: GET
    data_selector: conditions
- name: authentication_options
  endpoint:
    path: /api/v1/provider-authentication-options/{providerName}
    method: GET
    data_selector: authenticationOptionsGroups
- name: list_markets
  endpoint:
    path: /api/v1/providers/markets
    method: GET
    data_selector: markets
- name: provider_identifiers
  endpoint:
    path: /api/v1/provider-identifiers
    method: GET
    data_selector: providerIdentifiers
    params:
      pageSize: 50
- name: providers
  endpoint:
    path: /api/v1/providers
    method: GET
    data_selector: providers
    params: {}
- name: providers_for_market
  endpoint:
    path: /api/v1/providers/{market}
    method: GET
    data_selector: providers
    params:
      marketrequired: SE
- name: provider_consents
  endpoint:
    path: /api/v1/provider-consents
    method: GET
    data_selector: providerConsents
    params:
      credentialsId: ''
- name: extend_provider_consent
  endpoint:
    path: /api/v1/provider-consents:extend
    method: POST
    data_selector: ''
    params:
      credentialsId: ''
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: GET
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: GET
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: GET
- name: GetConsentFinancialServiceParametersTemplatesResponse
  endpoint:
    path: /api/financial-service-templates
    method: GET
    data_selector: templates
- name: consent_template
  endpoint:
    path: /connectivity/v2/consent-templates/{providerId}
    method: GET
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: mark_notification_read
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-read
    method: POST
- name: mark_notification_received
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-received
    method: POST
- name: query_notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: archive_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/archive-savings-goal
    method: POST
- name: complete_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/complete-savings-goal
    method: POST
- name: create_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/create-savings-goal
    method: POST
- name: deposit_to_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/deposit-to-savings-goal
    method: POST
- name: get_account
  endpoint:
    path: /api-finance-management/savings-goals/get-account
    method: GET
- name: get_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/get-savings-goal
    method: GET
- name: list_allocations
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations
    method: GET
- name: list_allocations_by_account
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations-by-account
    method: GET
- name: list_categories
  endpoint:
    path: /api-finance-management/savings-goals/list-categories
    method: GET
- name: list_periods_progress
  endpoint:
    path: /api-finance-management/savings-goals/list-periods-progress
    method: GET
- name: list_savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: reallocate_amount
  endpoint:
    path: /api-finance-management/savings-goals/reallocate-amount
    method: POST
- name: update_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/update-savings-goal
    method: PUT
- name: withdraw_from_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/withdraw-from-savings-goal
    method: POST
- name: query_statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: list_subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_events
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PATCH
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: authorizations
  endpoint:
    path: /connectivity/v2/consents/{consentId}/authorizations
    method: GET
    data_selector: authorizations
    params:
      consentId: required
- name: read_authorization
  endpoint:
    path: /connectivity/v2/consents/{consentId}/authorizations/{authorizationId}
    method: GET
    data_selector: authorization
    params:
      consentId: required
      authorizationId: required
- name: start_authorization
  endpoint:
    path: /connectivity/v2/consents/{consentId}/authorizations
    method: POST
    data_selector: authorization
    params:
      consentId: required
- name: relay_callback
  endpoint:
    path: /connectivity/v2/authorizations:relay-callback
    method: POST
    data_selector: none
    params: {}
- name: create_consent
  endpoint:
    path: /connectivity/v2/consents
    method: POST
    data_selector: consent
- name: get_consent_template
  endpoint:
    path: /connectivity/v2/consent-templates/{providerId}
    method: GET
    data_selector: templates
- name: get_consents
  endpoint:
    path: /connectivity/v2/consents
    method: GET
    data_selector: consents
- name: consent_financial_service_parameters_templates
  endpoint:
    path: /consents/financial_service_parameters/templates
    method: GET
    data_selector: templates
- name: get_consent
  endpoint:
    path: /consents/{consentId}
    method: GET
    data_selector: consent
    params:
      consentId: required
- name: GetConsentFinancialServiceParametersTemplates
  endpoint:
    path: /connectivity/v2/consent-templates/{providerId}
    method: GET
    data_selector: templates
    params:
      providerId: required
      type: MANDATE_PAYMENTS
      subType: VRP_SWEEPING
- name: account
  endpoint:
    path: /connector/users/{externalUserId}/accounts/{externalAccountId}
    method: DELETE
    data_selector: transactionAccounts
    params:
      externalUserId: required
      externalTransactionId: required
- name: transaction_accounts
  endpoint:
    path: /connector/users/{externalUserId}/accounts/{externalAccountId}
    method: PUT
    data_selector: transactionAccounts
    params: {}
- name: delete_transactions
  endpoint:
    path: /connector/users/{externalUserId}/transactions/delete
    method: POST
    data_selector: transactionAccounts
    params: {}
- name: transactions
  endpoint:
    path: /connector/users/{externalUserId}/transactions
    method: POST
    data_selector: transactionAccounts
    params:
      externalUserId: required
      externalTransactionId: required
- name: update_transaction
  endpoint:
    path: /connector/users/{externalUserId}/transactions/{externalTransactionId}
    method: PUT
    data_selector: transactionAccounts
- name: UpdateTransactionAccountContainer
  endpoint:
    path: /updateTransactionAccount
    method: POST
    data_selector: transactionAccounts
    params: {}
- name: account
  endpoint:
    path: /data/v2/accounts/{id}
    method: GET
    data_selector: accounts
    params:
      id: required
- name: account_balances
  endpoint:
    path: /data/v2/accounts/{id}/balances
    method: GET
    data_selector: accounts
    params:
      id: required
- name: accounts
  endpoint:
    path: /data/v2/accounts/{id}/parties
    method: GET
    data_selector: accounts
- name: accounts
  endpoint:
    path: /data/v2/accounts
    method: GET
    data_selector: accounts
    params:
      id: required
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: investment_account
  endpoint:
    path: /data/v2/investment-accounts/{id}
    method: GET
    data_selector: accounts
    params:
      idrequired: Tink unique identifier for the report.
- name: holdings
  endpoint:
    path: /data/v2/investment-accounts/{id}/holdings
    method: GET
    data_selector: holdings
    params: {}
- name: accounts
  endpoint:
    path: /data/v2/investment-accounts
    method: GET
    data_selector: accounts
    params:
      id: required
- name: loan_account
  endpoint:
    path: /loan-accounts/{id}
    method: GET
    data_selector: accounts
    params:
      idrequired: ''
- name: list_loan_accounts
  endpoint:
    path: /loan-accounts
    method: GET
    data_selector: accounts
    params: {}
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
- name: transaction_report
  endpoint:
    path: /data/v2/transaction-reports/{id}
    method: GET
- name: transaction_report
  endpoint:
    path: /get_transaction_report
    method: GET
    data_selector: transactions
    params:
      id: required
- name: enrich_transactions
  endpoint:
    path: /enrichment/v1/transactions/on-demand
    method: POST
    data_selector: output
- name: list_categories
  endpoint:
    path: /enrichment/v1/categories
    method: GET
    data_selector: questions
- name: get_similar_transactions
  endpoint:
    path: /enrichment/v1/transactions/{transactionId}:find-similar
    method: GET
    data_selector: transactions
- name: List Enriched Transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: GET
- name: List Enriched Transactions by IDs
  endpoint:
    path: /enrichment/v1/transactions-by-ids
    method: POST
- name: ListProfilingQuestions
  endpoint:
    path: /enrichment/v1/brand-identification/merchants/{id}
    method: GET
- name: Get Brand By ID
  endpoint:
    path: /enrichment/v1/brand-identification/brands/{id}
    method: GET
- name: Get Merchant By ID
  endpoint:
    path: /enrichment/v1/brand-identification/merchants/{id}
    method: GET
- name: ListProfilingQuestions
  endpoint:
    path: /enrichment/v1/recurring-transactions-groups/{groupId}
    method: GET
- name: TransactionSustainabilityInfo
  endpoint:
    path: /enrichment/v1/predicted-recurring-transactions
    method: GET
- name: recurring_transactions
  endpoint:
    path: /enrichment/v1/recurring-transactions
    method: GET
- name: recurring_transactions_groups
  endpoint:
    path: /enrichment/v1/recurring-transactions-groups
    method: GET
- name: Recurring Transactions
  endpoint:
    path: /enrichment/v1/recurring-transactions-groups/{groupId}
    method: PATCH
- name: Transaction Sustainability Info
  endpoint:
    path: /sustainability/transaction
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: GET
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: GET
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notification_read
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-read
    method: POST
- name: notification_received
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-received
    method: POST
- name: query_notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: archive_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/archive-savings-goal
    method: POST
- name: complete_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/complete-savings-goal
    method: POST
- name: create_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/create-savings-goal
    method: POST
- name: deposit_to_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/deposit-to-savings-goal
    method: POST
- name: get_account
  endpoint:
    path: /api-finance-management/savings-goals/get-account
    method: GET
- name: get_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/get-savings-goal
    method: GET
- name: list_allocations
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations
    method: GET
- name: list_allocations_by_account
  endpoint:
    path: /api-finance-management/savings-goals/list-allocations-by-account
    method: GET
- name: list_categories
  endpoint:
    path: /api-finance-management/savings-goals/list-categories
    method: GET
- name: list_periods_progress
  endpoint:
    path: /api-finance-management/savings-goals/list-periods-progress
    method: GET
- name: list_savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: reallocate_amount
  endpoint:
    path: /api-finance-management/savings-goals/reallocate-amount
    method: POST
- name: update_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/update-savings-goal
    method: PUT
- name: withdraw_from_savings_goal
  endpoint:
    path: /api-finance-management/savings-goals/withdraw-from-savings-goal
    method: POST
- name: query_statistics
  endpoint:
    path: /api-finance-management/statistic/query-statistics
    method: GET
- name: list_subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: enrich_transactions
  endpoint:
    path: /enrichment/v1/transactions/on-demand
    method: POST
    data_selector: output
- name: list_categories
  endpoint:
    path: /enrichment/v1/categories
    method: GET
    data_selector: categories
- name: get_similar_transactions
  endpoint:
    path: /enrichment/v1/transactions/{transactionId}:find-similar
    method: GET
    data_selector: transactions
- name: list_enriched_transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: GET
    data_selector: transactions
- name: enriched_transactions
  endpoint:
    path: /enrichment/v1/transactions-by-ids
    method: POST
    data_selector: transactions
- name: update_enriched_transactions
  endpoint:
    path: /enrichment/v1/transactions
    method: PATCH
    data_selector: enrichedData
    params: {}
- name: get_brand_by_id
  endpoint:
    path: /enrichment/v1/brand-identification/brands/{id}
    method: GET
    data_selector: brand
    params: {}
- name: get_merchant_by_id
  endpoint:
    path: /enrichment/v1/brand-identification/merchants/{id}
    method: GET
    data_selector: merchant
    params: {}
- name: get_recurring_transactions_group
  endpoint:
    path: /enrichment/v1/recurring-transactions-groups/{groupId}
    method: GET
    data_selector: recurringTransactionsGroup
    params: {}
- name: list_predicted_recurring_transactions
  endpoint:
    path: /enrichment/v1/predicted-recurring-transactions
    method: GET
    data_selector: predictedRecurringTransactions
    params:
      pageSize: 10
- name: list_recurring_transactions
  endpoint:
    path: /enrichment/v1/recurring-transactions
    method: GET
    data_selector: recurringTransactions
    params:
      pageSize: 10
- name: recurring_transactions
  endpoint:
    path: /enrichment/v1/recurring-transactions
    method: GET
    data_selector: recurringTransactions
    params: {}
- name: recurring_transactions_groups
  endpoint:
    path: /enrichment/v1/recurring-transactions-groups
    method: GET
    data_selector: recurringTransactionsGroups
    params:
      pageSize: '10'
      status: UNDEFINED
- name: Retrieve market average footprints
  endpoint:
    path: /enrichment/v1/sustainability/market-average
    method: GET
    params:
      market: required
- name: refinement_questions
  endpoint:
    path: /enrichment/v1/sustainability/transactions/{transactionId}/refinement
    method: GET
- name: refinement_answers
  endpoint:
    path: /enrichment/v1/sustainability/transactions/refinement
    method: POST
- name: ListProfilingQuestions
  endpoint:
    path: /response/ListProfilingQuestions
    method: GET
    data_selector: questions
- name: TransactionSustainabilityInfo
  endpoint:
    path: /response/TransactionSustainabilityInfo
    method: GET
    data_selector: insight
- name: profiling_questions
  endpoint:
    path: /enrichment/v1/sustainability/users/profiling/questions
    method: GET
    data_selector: questions
    params:
      language: en
- name: answer_profiling_questions
  endpoint:
    path: /enrichment/v1/sustainability/users/profiling
    method: POST
    data_selector: results
- name: Profiling Questions
  endpoint:
    path: /ListProfilingQuestions
    method: GET
    data_selector: questions
- name: webhook
  endpoint:
    path: /api/v1/authorization/hooks
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants/list-merchants
    method: GET
- name: bulk_payment
  endpoint:
    path: /api-payment/bulk-payment/get-bulk-payment
    method: GET
- name: cancellation_data
  endpoint:
    path: /api-payment/cancellation/get-cancellation-data
    method: GET
- name: mandate_payment
  endpoint:
    path: /api-payment/mandate-payment/get-mandate-payment
    method: GET
- name: payment_request
  endpoint:
    path: /api-payment/payment-request/get-payment-request
    method: GET
- name: settlement_accounts
  endpoint:
    path: /api-payment/settlement-accounts/list-accounts
    method: GET
- name: expense_check
  endpoint:
    path: /api-risk/expense-check/list-expense-checks
    method: GET
- name: income_check
  endpoint:
    path: /api-risk/income-check/list-income-checks
    method: GET
- name: risk_insights
  endpoint:
    path: /api-risk/risk-insights/get-a-risk-insights
    method: GET
- name: create_webhook
  endpoint:
    path: /api/v1/authorization/hooks
    method: POST
    data_selector: webHooks
    params: {}
- name: list_webhooks
  endpoint:
    path: /api/v1/authorization/hooks
    method: GET
    data_selector: webHooks
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/v1/authorization/hooks/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: webhook_endpoint
  endpoint:
    path: /events/v2/webhook-endpoints
    method: POST
    data_selector: webhookEndpoint
- name: delete_webhook_endpoint
  endpoint:
    path: /events/v2/webhook-endpoints/{id}
    method: DELETE
- name: update_webhook_endpoint
  endpoint:
    path: /events/v2/webhook-endpoints/{webhookEndpoint.id}
    method: PATCH
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notification_mark_read
  endpoint:
    path: /api-finance-management/notification/mark-a-notification-as-read
    method: POST
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions/list-user-subscriptions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: recurring_event
  endpoint:
    path: /api-finance-management/financial-calendar/make-an-event-recurring
    method: POST
- name: reconcile_event
  endpoint:
    path: /api-finance-management/financial-calendar/reconcile-link-event-with-a-transaction
    method: POST
- name: update_event
  endpoint:
    path: /api-finance-management/financial-calendar/update-event-by-id
    method: PUT
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: Budgets
  endpoint:
    path: /budgets
    method: GET
- name: Savings Goals
  endpoint:
    path: /savings-goals
    method: GET
- name: Statistics
  endpoint:
    path: /statistics
    method: GET
- name: Insights
  endpoint:
    path: /insights
    method: GET
- name: user_subscriptions
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
- name: statistics_query
  endpoint:
    path: /api/v1/statistics/query
    method: POST
- name: ListSubscriptions
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: ArchiveBudget
  endpoint:
    path: /api/v1/budgets/{id}/archive
    method: PUT
    data_selector: ''
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: CreateOneOffBudget
  endpoint:
    path: /api/v1/budgets
    method: POST
    data_selector: budgetSpecification
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: budget_details
  endpoint:
    path: /api/v1/budgets/{id}/details
    method: GET
    data_selector: budgetDetails
    params:
      id: required
- name: query_statistics
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: statistics
    params:
      start: required
      end: required
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: statistics
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: transactions
- name: allocations
  endpoint:
    path: /api/v1/allocations
    method: POST
    data_selector: allocations
- name: ListBudgetSpecifications
  endpoint:
    path: /api/v1/budgets
    method: GET
    data_selector: budgetSpecifications
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: Allocation
  endpoint:
    path: /api/v1/allocations
    method: POST
    data_selector: allocation
- name: ListRecommendedBudget
  endpoint:
    path: /api/v1/recommendedBudgets
    method: GET
    data_selector: recommendedBudgets
- name: ListSubscriptions
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: subscriptions
- name: business_budget
  endpoint:
    path: /finance-management/v1/business-budgets
    method: POST
    data_selector: allocationFilters
    params: {}
- name: ListSubscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: ListSubscriptions
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: subscriptions
- name: Allocation
  endpoint:
    path: /api/v1/allocations
    method: POST
    data_selector: allocation
- name: BusinessBudget
  endpoint:
    path: /api/v1/business-budgets
    method: POST
    data_selector: businessBudget
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: QueryStatistics
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: budgets
- name: Allocation
  endpoint:
    path: /api/v1/allocations
    method: POST
    data_selector: allocation
- name: budgets
  endpoint:
    path: /budgets
    method: GET
    data_selector: budgets
    params:
      pageSize: max
      pageToken: string
      accountIdIn: ''
      periodRangeGte: yyyy-mm-dd
      periodRangeLte: yyyy-mm-dd
      recurrenceGroupId: UUID
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      nextPageToken: string
- name: allocation
  endpoint:
    path: /allocation
    method: POST
    data_selector: allocation
    params:
      budgetId: UUID
- name: subscriptions
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: cost_of_living_transactions
  endpoint:
    path: /finance-management/v1/cost-of-living/{costOfLivingId}/transactions
    method: GET
    data_selector: transactions
- name: CostOfLivingTransactions
  endpoint:
    path: /api/v1/costOfLivingTransactions
    method: GET
    data_selector: transactions
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: ListCostOfLiving
  endpoint:
    path: /api/v1/costOfLiving
    method: GET
    data_selector: costOfLiving
- name: Allocation
  endpoint:
    path: /api/v1/allocation
    method: POST
    data_selector: allocation
- name: CalendarEventAttachment
  endpoint:
    path: /api/v1/calendarEventAttachment
    method: POST
    data_selector: attachment
- name: subscriptions
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: subscriptions
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: Allocation
  endpoint:
    path: /finance-management/v1/allocations
    method: POST
    data_selector: allocation
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: Get event by id
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}
    method: GET
    data_selector: event
- name: ListSubscriptions
  endpoint:
    path: /finance-management/v1/financial-calendar-summaries/{resolution}
    method: GET
    data_selector: subscriptions
- name: Query statistics
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: summaries
- name: ListCalendarSummaries
  endpoint:
    path: /api/v1/calendar/summaries
    method: GET
    data_selector: summaries
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: ListCalendarEvents
  endpoint:
    path: /api/v1/calendar/events
    method: GET
    data_selector: events
    params:
      pageToken: nextPageToken
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: Allocation
  endpoint:
    path: /api/v1/allocations
    method: POST
    data_selector: id
- name: CalendarEventRecurringGroup
  endpoint:
    path: /api/v1/calendar/recurring-groups
    method: POST
    data_selector: id
- name: QueryStatistics
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: ''
- name: Reconciliation
  endpoint:
    path: /api/v1/reconciliations
    method: POST
    data_selector: transactionId
- name: ListSubscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscriptions
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
- name: notifications
  endpoint:
    path: /api/v1/notifications/query
    method: POST
    data_selector: notifications
- name: statistics
  endpoint:
    path: /api/v1/statistics/query
    method: POST
- name: savings-goals
  endpoint:
    path: /api/v1/savings-goals/{id}
    method: POST
- name: ListSubscriptions
  endpoint:
    path: /api/v1/savings-goals/subscriptions
    method: GET
    data_selector: subscriptions
- name: Allocation
  endpoint:
    path: /api/v1/savings-goals/allocations
    method: POST
    data_selector: amount
- name: Get Account
  endpoint:
    path: /api/v1/savings-goals/accounts/{id}
    method: GET
    data_selector: ''
- name: ListSubscriptions
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: subscriptions
- name: savings_goals
  endpoint:
    path: /api/v1/savings-goals
    method: GET
    data_selector: subscriptions
- name: allocation
  endpoint:
    path: /api/v1/allocations
    method: POST
    data_selector: allocation
- name: ListAllocations
  endpoint:
    path: /api/v1/savings-goals/accounts/{id}/allocations
    method: GET
    data_selector: allocations
- name: ListSubscriptions
  endpoint:
    path: /api/v1/savings-goals/subscriptions
    method: GET
    data_selector: subscriptions
- name: ListSubscriptions
  endpoint:
    path: /api/v1/savings-goals/subscriptions
    method: GET
    data_selector: subscriptions
- name: ListPeriodProgressResponse
  endpoint:
    path: /api/v1/savings-goals/period-progress
    method: GET
    data_selector: periodProgresses
- name: ReAllocate amount
  endpoint:
    path: /api/v1/savings-goals/allocations/fund:reallocate
    method: POST
- name: ListSubscriptions
  endpoint:
    path: /api/v1/savings-goals/{id}/allocations/fund:withdraw
    method: POST
- name: Update Savings Goal
  endpoint:
    path: /api/v1/savings-goals/{id}
    method: PATCH
- name: ListSubscriptions
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: subscriptions
- name: Balance Refresh
  endpoint:
    path: /api-connectivity-v1/balance-refresh
    method: GET
    data_selector: records
    params: {}
- name: Credentials
  endpoint:
    path: /api-connectivity-v1/credentials
    method: GET
    data_selector: records
    params: {}
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification
    method: GET
- name: events
  endpoint:
    path: /api-finance-management/financial-calendar
    method: GET
- name: subscriptions
  endpoint:
    path: /api-finance-management/subscriptions
    method: GET
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants
    method: GET
- name: bulk_payment
  endpoint:
    path: /api-payment/bulk-payment
    method: GET
- name: cancellation
  endpoint:
    path: /api-payment/cancellation
    method: GET
- name: mandate_payment
  endpoint:
    path: /api-payment/mandate-payment
    method: GET
- name: payment_request
  endpoint:
    path: /api-payment/payment-request
    method: GET
- name: settlement_accounts
  endpoint:
    path: /api-payment/settlement-accounts
    method: GET
- name: expense_check
  endpoint:
    path: /api-risk/expense-check
    method: GET
- name: income_check
  endpoint:
    path: /api-risk/income-check
    method: GET
- name: risk_insights
  endpoint:
    path: /api-risk/risk-insights
    method: GET
- name: insights
  endpoint:
    path: /api/v1/insights
    method: GET
- name: archived_insights
  endpoint:
    path: /api/v1/insights/archived
    method: GET
- name: archive_insight
  endpoint:
    path: /api/v1/insights/{id}/archive
    method: PUT
- name: create_one_off_budget
  endpoint:
    path: /api/v1/budgets/one-off
    method: POST
- name: create_recurring_budget
  endpoint:
    path: /api/v1/budgets/recurring
    method: POST
- name: delete_budget
  endpoint:
    path: /api/v1/budgets/{id}
    method: DELETE
- name: get_budget_details
  endpoint:
    path: /api/v1/budgets/{id}/details
    method: GET
- name: get_budget_details
  endpoint:
    path: /api/v1/budgets/{id}
    method: GET
    data_selector: budgetSpecification
- name: list_budget_transactions
  endpoint:
    path: /api/v1/budgets/{id}/transactions
    method: GET
    data_selector: transactions
- name: list_budgets
  endpoint:
    path: /api/v1/budgets
    method: GET
    data_selector: budgetSpecifications
- name: create_business_budget
  endpoint:
    path: /finance-management/v1/business-budgets
    method: POST
    data_selector: budgetSpecification
- name: business_budget
  endpoint:
    path: /finance-management/v1/business-budgets/{budgetId}
    method: GET
- name: delete_business_budget
  endpoint:
    path: /finance-management/v1/business-budgets/{budgetId}
    method: DELETE
- name: business_budget_history
  endpoint:
    path: /finance-management/v1/business-budgets/{budgetId}/history
    method: GET
    data_selector: budgets
    params:
      budgetId: string
- name: business_budgets
  endpoint:
    path: /finance-management/v1/business-budgets
    method: GET
    data_selector: budgets
    params:
      periodRangeGte: '2022-01-10'
      periodRangeLte: '2022-01-10'
- name: update_business_budget
  endpoint:
    path: /finance-management/v1/business-budgets/{budgetId}
    method: PATCH
    data_selector: ''
    params:
      budgetId: required
- name: cash_flow_summaries
  endpoint:
    path: /finance-management/v1/cash-flow-summaries/{resolution}
    method: GET
    params:
      resolution: RESOLUTION_UNSPECIFIED
- name: cost_of_living_transactions
  endpoint:
    path: /finance-management/v1/cost-of-living/{costOfLivingId}/transactions
    method: GET
- name: list_cost_of_living
  endpoint:
    path: /finance-management/v1/cost-of-living
    method: GET
- name: calendar_event
  endpoint:
    path: /finance-management/v1/financial-calendar-events
    method: GET
    data_selector: records
    params: {}
- name: list_event_summaries
  endpoint:
    path: /finance-management/v1/financial-calendar-summaries/{resolution}
    method: GET
    data_selector: summaries
    params: {}
- name: get_event_by_id
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}
    method: GET
    data_selector: event
    params: {}
- name: get_suggested_transactions
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}/reconciliations/suggestions
    method: GET
    data_selector: reconciliationSuggestions
    params: {}
- name: delete_event_by_id
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}
    method: DELETE
    data_selector: response
    params: {}
- name: delete_attachment
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}/attachments/{attachmentId}
    method: DELETE
    data_selector: response
    params: {}
- name: delete_reconciliation
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}/reconciliations/{transactionId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_reconciliation_details
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}/reconciliations/details
    method: GET
    data_selector: reconciliationDetails
    params: {}
- name: savings_goal
  endpoint:
    path: /api/v1/savings-goals/{id}:archive
    method: POST
    data_selector: account
    params: {}
- name: notification
  endpoint:
    path: /api/v1/notifications/query
    method: POST
    data_selector: notifications
    params: {}
- name: savings_goal
  endpoint:
    path: /api/v1/savings-goals
    method: POST
    data_selector: savingsGoal
    params: {}
- name: account
  endpoint:
    path: /api/v1/savings-goals/accounts/{id}
    method: GET
    data_selector: account
    params: {}
- name: savings_goal
  endpoint:
    path: /savings-goals/{id}
    method: GET
    data_selector: savingsGoal
    params:
      idrequired: ''
- name: list_savings_goals
  endpoint:
    path: /savings-goals
    method: GET
    data_selector: savingsGoals
    params: {}
- name: list_allocations
  endpoint:
    path: /savings-goals/{id}/allocations
    method: GET
    data_selector: allocations
    params:
      idrequired: ''
- name: list_categories
  endpoint:
    path: /savings-goals/categories
    method: GET
    data_selector: categories
    params: {}
- name: list_period_progress
  endpoint:
    path: /savings-goals/{id}/period_progress
    method: GET
    data_selector: periodProgresses
    params:
      idrequired: ''
- name: reallocate_amount
  endpoint:
    path: /savings-goals/allocations/fund:reallocate
    method: POST
    data_selector: ''
    params: {}
- name: allocation
  endpoint:
    path: /api/v1/savings-goals/{id}/allocations/fund:withdraw
    method: POST
    data_selector: amount
- name: update_savings_goal
  endpoint:
    path: /api/v1/savings-goals/{id}
    method: PATCH
    data_selector: request body
- name: subscriptions
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
- name: statistics_query
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: statistics
    params: {}
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: events_summaries
  endpoint:
    path: /api-finance-management/financial-calendar/list-events-summaries-for-the-given-period
    method: GET
- name: calendar_events
  endpoint:
    path: /api-finance-management/financial-calendar/lists-calendar-events-within-given-timeframe
    method: GET
- name: notifications
  endpoint:
    path: /api-finance-management/notification/query-notifications
    method: GET
- name: savings_goals
  endpoint:
    path: /api-finance-management/savings-goals/list-savings-goals
    method: GET
- name: subscription_transactions
  endpoint:
    path: /api-finance-management/subscriptions/list-subscription-transactions
    method: GET
- name: merchants
  endpoint:
    path: /api-partner-integration/merchants/list-merchants
    method: GET
- name: bulk_payment
  endpoint:
    path: /api-payment/bulk-payment/get-bulk-payment
    method: GET
- name: cancellation
  endpoint:
    path: /api-payment/cancellation/get-cancellation-data
    method: GET
- name: mandate_payment
  endpoint:
    path: /api-payment/mandate-payment/get-mandate-payment
    method: GET
- name: payment_request
  endpoint:
    path: /api-payment/payment-request/get-payment-request
    method: GET
- name: settlement_accounts
  endpoint:
    path: /api-payment/settlement-accounts/list-accounts
    method: GET
- name: expense_check
  endpoint:
    path: /api-risk/expense-check/list-expense-checks
    method: GET
- name: income_check
  endpoint:
    path: /api-risk/income-check/list-income-checks
    method: GET
- name: risk_insights
  endpoint:
    path: /api-risk/risk-insights/get-a-risk-insights
    method: GET
- name: insights
  endpoint:
    path: /api/v1/insights
    method: GET
    data_selector: insights
    params: {}
- name: archived_insights
  endpoint:
    path: /api/v1/insights/archived
    method: GET
    data_selector: archivedInsights
    params: {}
- name: create_one_off_budget
  endpoint:
    path: /api/v1/budgets/one-off
    method: POST
    data_selector: budgetSpecification
    params: {}
- name: create_recurring_budget
  endpoint:
    path: /api/v1/budgets/recurring
    method: POST
    data_selector: budgetSpecification
    params: {}
- name: budget
  endpoint:
    path: /api/v1/budgets
    method: GET
    data_selector: budgetSpecifications
- name: budget_transactions
  endpoint:
    path: /api/v1/budgets/{id}/transactions
    method: GET
    data_selector: transactions
- name: budget_recommendations
  endpoint:
    path: /api/v1/budgets/recommended
    method: GET
    data_selector: recommendedBudgets
- name: business_budget
  endpoint:
    path: /finance-management/v1/business-budgets/{budgetId}
    method: GET
    data_selector: business_budget
    params: {}
- name: delete_business_budget
  endpoint:
    path: /finance-management/v1/business-budgets/{budgetId}
    method: DELETE
    data_selector: delete_business_budget
    params: {}
- name: business_budget
  endpoint:
    path: /finance-management/v1/business-budgets/{budgetId}/history
    method: GET
    data_selector: budgets
    params:
      budgetId: 5a724ea2-4eca-419e-a049-d12c127e00e3
- name: business_budgets
  endpoint:
    path: /finance-management/v1/business-budgets
    method: GET
    data_selector: budgets
    params:
      periodRangeGte: '2022-01-10'
      periodRangeLte: '2022-01-10'
- name: cash_flow_summaries
  endpoint:
    path: /finance-management/v1/cash-flow-summaries/{resolution}
    method: GET
    data_selector: aggregatedTransactions
    params:
      resolution: RESOLUTION_UNSPECIFIED
- name: cost_of_living_transactions
  endpoint:
    path: /finance-management/v1/cost-of-living/{costOfLivingId}/transactions
    method: GET
- name: list_cost_of_living
  endpoint:
    path: /finance-management/v1/cost-of-living
    method: GET
- name: add_attachment
  endpoint:
    path: /finance-management/v1/financial-calendar-events/{calendarEventId}/attachments
    method: POST
- name: create_calendar_event
  endpoint:
    path: /finance-management/v1/financial-calendar-events
    method: POST
- name: calendar_event
  endpoint:
    path: /finance-management/v1/financial-calendar-events
    method: GET
    data_selector: events
    params:
      due_date_gte: required
      due_date_lte: required
- name: calendar_event_summary
  endpoint:
    path: /finance-management/v1/financial-calendar-summaries/{resolution}
    method: GET
    data_selector: summaries
    params:
      resolution: required
      periodGte: required
      periodLte: required
      accountIdIn: ''
- name: calendar_events
  endpoint:
    path: /finance-management/v1/financial-calendar-events
    method: GET
    data_selector: events
    params:
      dueDateGte: null
      dueDateLte: null
      pageSize: null
      pageToken: null
      accountIdIn: null
- name: notifications
  endpoint:
    path: /api/v1/notifications/query
    method: POST
    data_selector: notifications
    params:
      limit: null
      offset: null
      statuses: null
- name: savings_goals
  endpoint:
    path: /api/v1/savings-goals/{id}:archive
    method: POST
    data_selector: null
    params:
      id: null
- name: savings_goal
  endpoint:
    path: /api/v1/savings-goals
    method: POST
    data_selector: savingsGoal
    params: {}
- name: complete_savings_goal
  endpoint:
    path: /api/v1/savings-goals/{id}:complete
    method: POST
    data_selector: savingsGoal
    params: {}
- name: deposit_to_savings_goal
  endpoint:
    path: /api/v1/savings-goals/{id}/allocations/fund:deposit
    method: POST
    data_selector: allocation
    params: {}
- name: get_account
  endpoint:
    path: /api/v1/savings-goals/accounts/{id}
    method: GET
    data_selector: account
    params: {}
- name: Get Savings Goal
  endpoint:
    path: /savings-goals/{id}
    method: GET
    data_selector: savingsGoal
    params:
      idrequired: The Savings Goal ID
- name: List Savings Goals
  endpoint:
    path: /savings-goals
    method: GET
    data_selector: savingsGoals
    params:
      page_size: (Optional) Size of the page to fetch.
      page_token: (Optional) The first token is presented on the response of the first
        call if there are multiple pages.
- name: List allocations
  endpoint:
    path: /savings-goals/{id}/allocations
    method: GET
    data_selector: allocations
    params:
      idrequired: The Savings Goal ID
      page_size: (Optional) Size of the page to fetch.
      page_token: (Optional) The first token is presented on the response of the first
        call if there are multiple pages.
- name: List categories
  endpoint:
    path: /savings-goals/categories
    method: GET
    data_selector: categories
    params: {}
- name: List periods progress
  endpoint:
    path: /savings-goals/{id}/period_progress
    method: GET
    data_selector: periodProgresses
    params:
      idrequired: The Savings Goal ID
      page_size: (Optional) Size of the page to fetch.
      page_token: (Optional) The first token is presented on the response of the first
        call if there are multiple pages.
- name: ReAllocate amount
  endpoint:
    path: /savings-goals/allocations/fund:reallocate
    method: POST
    data_selector: reallocation
    params: {}
- name: savings_goal
  endpoint:
    path: /api/v1/savings-goals/{id}
    method: PATCH
    data_selector: savingsGoal
    params: {}
- name: withdraw_from_savings_goal
  endpoint:
    path: /api/v1/savings-goals/{id}/allocations/fund:withdraw
    method: POST
    data_selector: allocation
    params: {}
- name: statistics_query
  endpoint:
    path: /api/v1/statistics/query
    method: POST
    data_selector: statistics
    params: {}
- name: StatisticQuery
  endpoint:
    path: /statistics
    method: POST
    data_selector: payload
- name: list_subscriptions
  endpoint:
    path: /finance-management/v1/subscriptions
    method: GET
- name: list_subscription_transactions
  endpoint:
    path: /finance-management/v1/subscriptions/{subscriptionId}/transactions
    method: GET
- name: ListSubscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: Allocation
  endpoint:
    path: /allocations
    method: POST
    data_selector: allocation
- name: create_merchant
  endpoint:
    path: /partner-integration/v1/merchants
    method: POST
    data_selector: merchants
- name: list_merchants
  endpoint:
    path: /partner-integration/v1/merchants
    method: GET
    data_selector: merchants
- name: bulk_payment
  endpoint:
    path: /payment/v1/bulk-payments
    method: POST
    data_selector: bulkPaymentRequest
    params: {}
- name: mandate_payment
  endpoint:
    path: /payment/v1/mandate-payments
    method: POST
    data_selector: mandatePaymentRequest
    params: {}
- name: create_payment_request
  endpoint:
    path: /api/v1/payments/requests
    method: POST
    data_selector: id
    params: {}
- name: get_transfers_for_payment_request
  endpoint:
    path: /api/v1/payments/requests/{id}/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: create_account
  endpoint:
    path: /merchants/{merchantId}/accounts
    method: POST
    data_selector: account
    params:
      account.merchantId: required
      account.id: required
- name: get_transfers
  endpoint:
    path: /payments/requests/{id}/transfers
    method: GET
    data_selector: transfers
    params:
      account.merchantId: required
      account.id: required
- name: settlement_account
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/refunds
    method: POST
    data_selector: SettlementAccount
    params:
      account.merchantId: required
      account.id: required
- name: refund
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/refunds/{refundId}
    method: GET
    data_selector: SettlementAccountPaymentRequest
    params: {}
- name: SettlementAccountRefund
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: SettlementAccountWithdrawal
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/withdrawals
    method: GET
    data_selector: withdrawals
    params: {}
- name: ListAccounts
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: GetTransaction
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/transactions/{transactionId}
    method: GET
    data_selector: transaction
    params: {}
- name: accounts
  endpoint:
    path: /merchants/{merchantId}/accounts
    method: GET
    data_selector: withdrawals
    params:
      account.merchantId: required
      account.id: required
- name: transactions
  endpoint:
    path: /merchants/{merchantId}/accounts/{accountId}/transactions/{transactionId}
    method: GET
    data_selector: transactions
    params:
      account.merchantId: required
      account.id: required
- name: withdrawals
  endpoint:
    path: /merchants/{merchantId}/accounts/{accountId}/withdrawals/{withdrawalId}
    method: GET
    data_selector: withdrawals
    params:
      account.merchantId: required
      account.id: required
- name: SettlementAccount
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}
    method: POST
    data_selector: account
    params: {}
- name: ListSettlementAccountWithdrawals
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/withdrawals
    method: GET
    data_selector: withdrawals
    params: {}
- name: ListTransactions
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: withdrawals
  endpoint:
    path: /merchants/{merchantId}/accounts/{accountId}/withdrawals
    method: GET
    data_selector: withdrawals
    params:
      account.merchantId: required
      account.id: required
- name: update_account
  endpoint:
    path: /merchants/{account.merchantId}/accounts/{account.id}
    method: PATCH
    data_selector: account
    params:
      account.merchantId: required
      account.id: required
- name: SettlementAccount
  endpoint:
    path: /payment/v1/merchants/{merchantId}/accounts/{accountId}/refunds/{refundId}
    method: GET
- name: expense_check
  endpoint:
    path: /risk/v1/expense-checks
    method: POST
    data_selector: accountActivity
    params:
      idrequired: identifier
- name: expense_check
  endpoint:
    path: /risk/v1/expense-checks
    method: GET
    data_selector: expenseChecks
- name: expense_check
  endpoint:
    path: /delete/expense/check
    method: DELETE
    data_selector: response
    params:
      id: required
- name: accountActivity
  endpoint:
    path: /accountActivity
    method: GET
    data_selector: records
- name: accountOverview
  endpoint:
    path: /accountOverview
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: atmWithdrawals
  endpoint:
    path: /atmWithdrawals
    method: GET
    data_selector: records
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: records
- name: cashFlow
  endpoint:
    path: /cashFlow
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: gamblingVsIncome
  endpoint:
    path: /gamblingVsIncome
    method: GET
    data_selector: records
- name: identity
  endpoint:
    path: /identity
    method: GET
    data_selector: records
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: records
- name: cookie_consent
  endpoint:
    path: /cookie_consent
    method: GET
    data_selector: cookies
    params: {}
- name: performance_cookies
  endpoint:
    path: /performance_cookies
    method: GET
    data_selector: cookies
    params: {}
- name: marketing_cookies
  endpoint:
    path: /marketing_cookies
    method: GET
    data_selector: cookies
    params: {}
- name: expense_check
  endpoint:
    path: /expense-checks
    method: GET
    params:
      id: required
- name: accountActivity
  endpoint:
    path: /accountActivity
    method: GET
    data_selector: accountActivity
- name: accountOverview
  endpoint:
    path: /accountOverview
    method: GET
    data_selector: accountOverview
- name: atmWithdrawals
  endpoint:
    path: /atmWithdrawals
    method: GET
    data_selector: atmWithdrawals
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: balances
- name: cashFlow
  endpoint:
    path: /cashFlow
    method: GET
    data_selector: cashFlow
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: gamblingVsIncome
  endpoint:
    path: /gamblingVsIncome
    method: GET
    data_selector: gamblingVsIncome
- name: identity
  endpoint:
    path: /identity
    method: GET
    data_selector: identity
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: loans
- name: income_checks
  endpoint:
    path: /v2/income-checks
    method: POST
    data_selector: incomeChecks
- name: income_check
  endpoint:
    path: /create_income_check
    method: POST
    data_selector: accountActivity
    params:
      id: required
- name: income_checks
  endpoint:
    path: /v2/income-checks
    method: GET
- name: accountActivity
  endpoint:
    path: /income/check/accountActivity
    method: GET
    data_selector: accountActivity
    params:
      id: required
- name: accountOverview
  endpoint:
    path: /income/check/accountOverview
    method: GET
    data_selector: accountOverview
    params:
      id: required
- name: atmWithdrawals
  endpoint:
    path: /income/check/atmWithdrawals
    method: GET
    data_selector: atmWithdrawals
    params:
      id: required
- name: balances
  endpoint:
    path: /income/check/balances
    method: GET
    data_selector: balances
    params:
      id: required
- name: cashFlow
  endpoint:
    path: /income/check/cashFlow
    method: GET
    data_selector: cashFlow
    params:
      id: required
- name: collections
  endpoint:
    path: /income/check/collections
    method: GET
    data_selector: collections
    params:
      id: required
- name: highBalances
  endpoint:
    path: /income/check/highBalances
    method: GET
    data_selector: highBalances
    params:
      id: required
- name: identity
  endpoint:
    path: /income/check/identity
    method: GET
    data_selector: identity
    params:
      id: required
- name: loans
  endpoint:
    path: /income/check/loans
    method: GET
    data_selector: loans
    params:
      id: required
- name: lowBalances
  endpoint:
    path: /income/check/lowBalances
    method: GET
    data_selector: lowBalances
    params:
      id: required
- name: overdrafts
  endpoint:
    path: /income/check/overdrafts
    method: GET
    data_selector: overdrafts
    params:
      id: required
- name: transactionStats
  endpoint:
    path: /income/check/transactionStats
    method: GET
    data_selector: transactionStats
    params:
      id: required
- name: accountActivity
  endpoint:
    path: /accountActivity
    method: GET
    data_selector: records
- name: accountOverview
  endpoint:
    path: /accountOverview
    method: GET
    data_selector: records
- name: atmWithdrawals
  endpoint:
    path: /atmWithdrawals
    method: GET
    data_selector: records
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: records
- name: cashFlow
  endpoint:
    path: /cashFlow
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: gamblingVsIncome
  endpoint:
    path: /gamblingVsIncome
    method: GET
    data_selector: records
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: records
- name: income_check
  endpoint:
    path: /income-checks
    method: GET
    params:
      id: required
- name: accountActivity
  endpoint:
    path: /accountActivity
    method: GET
    data_selector: records
- name: accountOverview
  endpoint:
    path: /accountOverview
    method: GET
    data_selector: records
- name: atmWithdrawals
  endpoint:
    path: /atmWithdrawals
    method: GET
    data_selector: records
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: records
- name: cashFlow
  endpoint:
    path: /cashFlow
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: identity
  endpoint:
    path: /identity
    method: GET
    data_selector: records
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: records
- name: gamblingVsIncome
  endpoint:
    path: /gamblingVsIncome
    method: GET
    data_selector: records
- name: income_check
  endpoint:
    path: /income-checks
    method: GET
    data_selector: accountActivity
    params:
      idrequired: identifier_of_risk_insights_report
- name: accountActivity
  endpoint:
    path: /accountActivity
    method: GET
    data_selector: records
    params: {}
- name: accountOverview
  endpoint:
    path: /accountOverview
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: atmWithdrawals
  endpoint:
    path: /atmWithdrawals
    method: GET
    data_selector: records
    params: {}
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: records
    params: {}
- name: cashFlow
  endpoint:
    path: /cashFlow
    method: GET
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
    params: {}
- name: gamblingVsIncome
  endpoint:
    path: /gamblingVsIncome
    method: GET
    data_selector: records
    params: {}
- name: identity
  endpoint:
    path: /identity
    method: GET
    data_selector: records
    params: {}
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: records
    params: {}
- name: income_check
  endpoint:
    path: /income/check
    method: GET
    data_selector: data
    params: {}
- name: income_checks
  endpoint:
    path: /v2/income-checks
    method: GET
    data_selector: incomeChecks
    params:
      idrequired: required
- name: risk_insights
  endpoint:
    path: /risk/v1/risk-insights
    method: POST
    data_selector: risk insights report id
- name: CreateRiskInsightResponse
  endpoint:
    path: /risk-insights
    method: POST
    data_selector: id
    params: {}
- name: DeleteRiskInsight
  endpoint:
    path: /risk-insights/{id}
    method: DELETE
    data_selector: id
    params: {}
- name: risk_insights
  endpoint:
    path: /riskInsights
    method: DELETE
    data_selector: accountActivity
    params:
      id: required
- name: account_activity
  endpoint:
    path: /risk_insights/account_activity
    method: GET
    data_selector: accountActivity
- name: account_overview
  endpoint:
    path: /risk_insights/account_overview
    method: GET
    data_selector: accountOverview
- name: accounts
  endpoint:
    path: /risk_insights/accounts
    method: GET
    data_selector: accounts
- name: atm_withdrawals
  endpoint:
    path: /risk_insights/atm_withdrawals
    method: GET
    data_selector: atmWithdrawals
- name: balances
  endpoint:
    path: /risk_insights/balances
    method: GET
    data_selector: balances
- name: cash_flow
  endpoint:
    path: /risk_insights/cash_flow
    method: GET
    data_selector: cashFlow
- name: collections
  endpoint:
    path: /risk_insights/collections
    method: GET
    data_selector: collections
- name: created_time
  endpoint:
    path: /risk_insights/created_time
    method: GET
    data_selector: createdTime
- name: currency_code
  endpoint:
    path: /risk_insights/currency_code
    method: GET
    data_selector: currencyCode
- name: data_availability
  endpoint:
    path: /risk_insights/data_availability
    method: GET
    data_selector: dataAvailability
- name: gambling_vs_income
  endpoint:
    path: /risk_insights/gambling_vs_income
    method: GET
    data_selector: gamblingVsIncome
- name: identity
  endpoint:
    path: /risk_insights/identity
    method: GET
    data_selector: identity
- name: loans
  endpoint:
    path: /risk_insights/loans
    method: GET
    data_selector: loans
- name: overdrafts
  endpoint:
    path: /risk_insights/overdrafts
    method: GET
    data_selector: overdrafts
- name: transaction_stats
  endpoint:
    path: /risk_insights/transaction_stats
    method: GET
    data_selector: transactionStats
- name: risk_insights_report
  endpoint:
    params:
      idrequired: ''
- name: accountActivity
  endpoint:
    path: /riskinsights/accountActivity
    method: GET
    data_selector: AccountActivity
    params: {}
- name: accountOverview
  endpoint:
    path: /riskinsights/accountOverview
    method: GET
    data_selector: AccountOverview
    params: {}
- name: atmWithdrawals
  endpoint:
    path: /riskinsights/atmWithdrawals
    method: GET
    data_selector: AtmWithdrawals
    params: {}
- name: balances
  endpoint:
    path: /riskinsights/balances
    method: GET
    data_selector: BalanceStats
    params: {}
- name: cashFlow
  endpoint:
    path: /riskinsights/cashFlow
    method: GET
    data_selector: CashFlowStats
    params: {}
- name: collections
  endpoint:
    path: /riskinsights/collections
    method: GET
    data_selector: Collections
    params: {}
- name: gamblingVsIncome
  endpoint:
    path: /riskinsights/gamblingVsIncome
    method: GET
    data_selector: GamblingVsIncome
    params: {}
- name: identity
  endpoint:
    path: /riskinsights/identity
    method: GET
    data_selector: Identity
    params: {}
- name: loans
  endpoint:
    path: /riskinsights/loans
    method: GET
    data_selector: Loans
    params: {}
- name: repayments
  endpoint:
    path: /repayments
    method: GET
    data_selector: records
    params: {}
- name: overdrafts
  endpoint:
    path: /overdrafts
    method: GET
    data_selector: records
    params: {}
- name: transaction_stats
  endpoint:
    path: /transaction_stats
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/user/create
    method: POST
    data_selector: user_id
- name: oauth_token
  endpoint:
    path: /api/v1/oauth/token
    method: POST
    data_selector: access_token
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: data
    params: {}
- name: ais_connections
  endpoint:
    path: /ais/connections
    method: GET
    data_selector: connections
    params: {}
- name: transactions
  endpoint:
    path: /data/v2/transactions
    method: GET
    data_selector: transactions
    params:
      statusIn: completed
- name: transaction
  endpoint:
    path: /data/v2/transaction
    method: GET
    data_selector: data
- name: provider_consent
  endpoint:
    path: /connectivity/provider-consent
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
- name: webhook-endpoints
  endpoint:
    path: /events/v2/webhook-endpoints
    method: POST
    data_selector: id
- name: payments
  endpoint:
    path: /resources/payments/one-time-payments/one-time-payments-notifications-and-webhooks
    method: GET
- name: SAML identity provider
  endpoint:
    path: /resources/console/single-sign-on-via-saml
    method: GET
    data_selector: settings
    params: {}
- name: payment_requests
  endpoint:
    path: /api/v1/payments/requests
    method: POST
    data_selector: id
    params: {}
- name: payment_status
  endpoint:
    path: /api/v1/payments/requests/{id}/transfers
    method: GET
    data_selector: paymentRequestCreatedTransfers
    params: {}
- name: QWAC
  endpoint:
    path: /resources/open-banking/glossary/QWAC
    method: GET
- name: QSealC
  endpoint:
    path: /resources/open-banking/glossary/QSealC
    method: GET
- name: NCAs for larger markets
  endpoint:
    path: /resources/open-banking/ncas
    method: GET
- name: Operating in other EU markets
  endpoint:
    path: /resources/open-banking/eu-markets
    method: GET
- name: Open Banking Europe passporting guide
  endpoint:
    path: /resources/open-banking/passporting-guide
    method: GET
- name: Certificate renewal
  endpoint:
    path: /resources/open-banking/certificate-renewal
    method: GET
- name: EU certificates
  endpoint:
    path: /resources/open-banking/eu-certificates
    method: GET
- name: UK certificates
  endpoint:
    path: /resources/open-banking/uk-certificates
    method: GET
- name: Certificate renewal with Tink
  endpoint:
    path: /resources/open-banking/certificate-renewal-with-tink
    method: GET
- name: enrollment_information
  endpoint:
    path: /enrollment/get-enrollment-information
    method: GET
    data_selector: enrollmentInputsSchema
- name: sign
  endpoint:
    path: /ess/v1/sign
    method: POST
    data_selector: ''
    params: {}
- name: csr
  endpoint:
    path: /certificates/generate-csr
    method: POST
- name: upload_certificate
  endpoint:
    path: /certificates/replace-csr
    method: POST
- name: accounts
  endpoint:
    path: /api/v1/accounts/list
    method: GET
- name: providers
  endpoint:
    path: /api/v1/providers/{market_code}
    method: GET
    headers:
      X-Tink-OAuth-Client-ID: '{YOUR_CLIENT_ID}'
- name: categories
  endpoint:
    path: /api/v1/categories
    method: GET
- name: providers
  endpoint:
    path: /api/v1/providers/ES
    method: GET
- name: credentials
  endpoint:
    path: /api/v1/credentials
    method: POST
- name: get_credentials
  endpoint:
    path: /api/v1/credentials/
    method: GET
- name: test_providers
  endpoint:
    path: /api/v1/providers/ES?excludeNonTestProviders=true&includeTestProviders=true
    method: GET
- name: create_test_credentials
  endpoint:
    path: /api/v1/credentials
    method: POST
- name: credentials
  endpoint:
    path: /api/v1/credentials
    method: POST
    data_selector: providerName
    params: {}
- name: credentials_status
  endpoint:
    path: /api/v1/credentials/{id}
    method: GET
    data_selector: status
    params: {}
- name: supplemental_information
  endpoint:
    path: /api/v1/credentials/{id}/supplemental-information
    method: POST
    data_selector: information
    params: {}
- name: qr_code
  endpoint:
    path: /api/v1/credentials/{id}/qr
    method: GET
    data_selector: qrCode
    params: {}
- name: credentials
  endpoint:
    path: /api/v1/credentials
    method: POST
- name: credentials_status
  endpoint:
    path: /api/v1/credentials/{id}
    method: GET
- name: balances
  endpoint:
    path: /api/v1/accounts/{{account_id}}/balances
    method: GET
- name: authorize
  endpoint:
    path: /1.0/authorize
    method: GET
    data_selector: ''
    params: {}
- name: add_credentials
  endpoint:
    path: /1.0/credentials/add
    method: POST
    data_selector: ''
    params: {}
- name: refresh_credentials
  endpoint:
    path: /1.0/credentials/refresh
    method: POST
    data_selector: ''
    params: {}
- name: authenticate_credentials
  endpoint:
    path: /1.0/credentials/authenticate
    method: POST
    data_selector: ''
    params: {}
- name: extend_consent
  endpoint:
    path: /credentials/extend-consent
    method: POST
    data_selector: response
- name: user_create
  endpoint:
    path: /api/v1/user/create
    method: POST
    data_selector: ''
    params: {}
- name: authorization_grant
  endpoint:
    path: /api/v1/oauth/authorization-grant
    method: POST
    data_selector: ''
    params: {}
- name: oauth_token
  endpoint:
    path: /api/v1/oauth/token
    method: POST
    data_selector: ''
    params: {}
- name: Payments
  endpoint:
    path: /resources/payments
    method: GET
- name: Account Check
  endpoint:
    path: /resources/account-check
    method: GET
- name: Business Account Check
  endpoint:
    path: /resources/business-account-check
    method: GET
- name: Investments
  endpoint:
    path: /resources/investments
    method: GET
- name: Loans
  endpoint:
    path: /resources/loans
    method: GET
- name: Transactions
  endpoint:
    path: /resources/transactions
    method: GET
- name: Business Transactions
  endpoint:
    path: /resources/business-transactions
    method: GET
- name: Data Enrichment
  endpoint:
    path: /resources/data-enrichment
    method: GET
- name: Income Check
  endpoint:
    path: /resources/income-check
    method: GET
- name: Expense Check
  endpoint:
    path: /resources/expense-check
    method: GET
- name: Risk Insights
  endpoint:
    path: /resources/risk-insights
    method: GET
- name: Money Manager
  endpoint:
    path: /resources/money-manager
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- User token required for accounts:read scope.
- User token required for accounts:write scope.
- The report is a temporary resource that will be available for retrieval for 1h after
  creation.
- Requires setup of connected app in api
- Requires user token for authentication.
- Account types may vary based on the financial institution.
- 'Required scopes: investments:read'
- Some endpoints may have specific requirements or limitations.
- Account identifiers vary by market local conventions and account types.
- The credentialsId field is deprecated and will soon be removed.
- An account usually contains multiple transactions, except for certain types of accounts
  where Tink can't access the underlying transactions.
- 'Requires scope: transactions:write'
- Test different payment scenarios using demo credentials.
- Requires setup of connected app in Tink
- Access tokens expire and must be renewed, typically in 30 minutes.
- Test your integration without using real bank credentials.
- You are billed for each product that you use simultaneously.
- The app_uri and redirect_uri must be valid URIs.
- Automatic redirect behavior can be enabled.
- Make sure to replace {YOUR_CLIENT_ID} in the URL with your client_id value from
  Console.
- When contacting Tink about an error, include the tracking_id value to help streamline
  troubleshooting.
- Your client must have the link-session:write scope enabled.
- You must have your Tink Console account set-up.
- The scope 'webhook-endpoints' is enabled for your app
- The response is encoded as query parameters appended to the redirect_uri.
- Business Account Check error codes and formats, described and explained.
- Uses OAuth2 for authentication
- Make sure to replace `{YOUR_CLIENT_ID}` in the URL with your `client_id` value from
  Console.
- The end user may be taken out of your app to complete the authentication.
- Tink’s Investment product enables you to fetch investment and holding data from
  financial institutions in Spain and Sweden through a single API in real time
- The product can be integrated seamlessly within your customer journey through an
  SDK that can be customized to match your user interface
- Client access token is valid for 30 minutes and must be regenerated.
- User access token must be obtained after the user flow is completed.
- Requires user authorization for access
- Data is automatically deleted after 24hrs
- Need to fetch investment data over a period of time and/or perform background refreshes
- Most non-open-banking authentications require user interaction.
- To list provider consents, you must generate a user access token with the scope
  provider-consents:read.
- To delete a user, all consents and related account information are permanently deleted.
- Requires single authentication to fetch multiple data points from a bank account.
- You can choose between one-time and continuous access to the data.
- If a market isn't provided, Tink defaults to SE.
- If a locale isn't provided, Tink defaults to en_US.
- Postman is a third-party company that makes an API platform for building and using
  APIs.
- Test your integration by using demo credentials.
- Fetch real time loans data from loan accounts in Sweden and Spain
- Continuous access requires app setup and specific scopes enabled.
- Continuous access to Loans accounts
- One-time access to loan accounts results in data being automatically deleted after
  24hrs.
- Most consents can be refreshed without user interactions, but not all.
- Default market is SE if not provided.
- Transactions is dependent on data availability.
- One-time access provides a one-time snapshot of the end user's transactions.
- Data is deleted 24 hours after fetching.
- Continuous access provides a continuous flow of end-user transaction data for 90
  days.
- Refresh request may end in statuses requiring user interaction.
- Use Tink for the UK market; the feature is only available in the UK market.
- '`sessionExtendable` must be `true`.'
- Must have a user access token with balances:read and accounts:read scopes.
- The app_uri and redirect_uri must be valid URIs, such as App Links or a custom URL
  scheme including a host fragment.
- Use universal links to avoid prompts in Mobile Safari
- The SDK user interface has its own navigation bar.
- Tests always show that the best–performing integrations are ones where the transition
  between an app and Tink feels smooth, secure, and coherent.
- Customers that follow our optimization advice tend to increase both conversion rates
  and customer satisfaction.
- 'Your client must have two scopes enabled: link-session:write and link-session:read.'
- Tink defaults to market 'SE' if not provided.
- The token expires after 30 mins, no refresh token provided.
- This event is triggered if an account has deleted transactions.
- Receive webhook events using Mutual TLS authentication
- Early redirect must be enabled for your application.
- Make sure that continuous access is enabled for your app.
- The end user may be taken out of your app to complete the authentication (for example,
  into their banking app or system browser).
- Using the FullScreen launch mode displays the product flow in full screen mode.
- Business Transactions is an Enterprise-only product with limited market availability.
- Continuous access provides uninterrupted flow of end-user transaction data for 90
  days.
- User intervention is required for certain statuses.
- Multiple consents that give access to the same account can exist in parallel.
- Requires user access token with balances:read and accounts:read scope
- You need a client access token with the transactions:read scope.
- Uses OAuth2 for authorization
- Must use universal links or custom URL schemes
- Prepare your users before they enter Tink
- Focus messaging on the job to be done, not around Tink and how it works.
- Communicate your relationship with Tink (if you're using our license).
- Make sure the user understands that the next flow step is to interact with their
  bank.
- Take advantage of the design and theming options
- Make the transition from your app to Tink seamless in Console.
- Keep in mind that the average user has a stronger relationship with your brand than
  with Tink.
- Consider making more optimizations
- Preselect and pre-fill information to shorten repeat flows.
- Decide how you want to handle the success screen.
- Defaults to market SE if not provided.
- The app must have the scope `webhook-endpoints`.
- Each event is triggered once per account.
- The SDK can be integrated with all apps, regardless of UI architecture.
- Access to Tink’s API is divided into scopes that grant access to different API endpoints.
- You must be approved to use permanent users.
- Permanent users are required for Data Enrichment.
- The access token is valid for 30 minutes.
- Only the data connected to the end-user referenced while creating the authorization
  grant code can be fetched using this user token.
- Data Enrichment must be enabled for the app.
- User Access Token must have the enrichment.transactions:readonly scope.
- The response results are paginated and by default ten transactions are returned.
  However, you are able to fetch up to 100 transactions per request.
- Data Enrichment must be enabled for your app.
- Data Enrichment must be enabled with enrichment.transactions:readonly scope.
- Data Enrichment is enabled for your app and requires the scope enrichment.transactions:readonly.
- Response results are paginated.
- Results are paginated
- Uses OAuth2 with refresh token — requires setup of connected app in Tink
- Optional parameter 'locale' can be supplied to get translations of categories in
  other languages.
- If the next recurring transaction is predicted to a weekend, the prediction is shifted
  to the next workday.
- Generate a User Access Token with the required scope.
- The default for the prediction endpoint is to look thirty days ahead into the future.
- Results are paginated – a maximum of 10 transactions are by default included in
  the response, with a maximum of 100 items.
- Ensure that Data Enrichment is enabled for your app.
- Generate a User Access Token with the enrichment.sustainability, transactions:read
  scope.
- Ensure that the Sustainability package is purchased.
- The default language of the response will be English, however if another language
  is preferred it can be changed by sending an optional parameter.
- The default language of the response will be English (en).
- Default language of the response is English (en).
- Default language of the response is English (en) but can be changed with an optional
  parameter.
- Income Check is dependent on data quality. Because income is usually stable and
  recurring, we need adequate transaction data to be able to provide you with accurate
  and qualitative reports.
- access tokens expire and must be renewed, typically in 30 minutes
- The report will contain data from only one provider, which is the bank that has
  been selected by the end user.
- The app_uri and redirect_uri must be valid URIs, such as universal links or a custom
  URL scheme.
- Your client has the link-session:write scope enabled.
- Using the FullScreen launch mode displays the product flow in full screen mode.
  Only the status bar is visible and the action bar is hidden.
- You must authenticate only once to fetch multiple data points from a bank account.
- Use universal links to avoid prompts during redirects.
- Tink defaults to SE market if not provided.
- Tink defaults to en_US locale if not provided.
- Ensure to replace `{YOUR_CLIENT_ID}` in the URL with your `client_id` value from
  Console.
- You must authenticate only once to fetch data from multiple products.
- The `app_uri` and `redirect_uri` must be valid URIs, such as universal links or
  a custom URL scheme including a host fragment.
- Your client has the `link-session:write` scope enabled.
- Default locale is en_US
- Default market is SE
- The response is encoded as query parameters appended to the `redirect_uri`.
- The end user may be taken out of your app to complete the authentication
- The Tink API will only serve traffic over HTTPS
- Rate limit error status code is 429
- Access to Tink is divided into scopes that grant access to different API endpoints.
- Tink's API will only serve traffic over HTTPS
- Idempotency can be used to safely retry requests without accidentally performing
  the same operation twice
- API data is periodized into pre-computed and date-based buckets.
- A session is one-time use only and has a lifetime of 10 minutes.
- Uses User token with specific scopes for balance refresh operations.
- Requires user token for operations
- Requires setup of connected app in API
- Uses OAuth2 with user token — requires user consent for access.
- Users must provide valid credentials for authentication.
- User token is required for authorization.
- User token is required for various operations.
- Defaults for pageSize is 50, maximum is 1000.
- The session can be renewed before or after the sessionExpiryDate.
- Start authorization for a consent
- Works with User token and Client token for required scopes.
- Only REAL_TIME is supported for reflecting the most recent updates on a user's account.
- Requires setup of token types and scopes.
- 'Requires scopes: accounts:read, accounts.parties:readonly'
- User token required with scope 'investment-accounts:readonly'.
- Requires `loan-accounts:readonly` scope.
- Reports are available for retrieval up to 1h after generation and permanently deleted
  after 24h.
- Creating a new webhook will remove the existing one.
- Requires scope insights:write for archiving insights
- Requires scope insights:read for retrieving insights
- Request requires 'budgets-bfm' scope.
- Monthly statistics will be calculated only with the resolution that the user has
  in the user settings (MONTHLY, MONTHLY_ADJUSTED), and not for both.
- YEARLY resolution is aggregated based on the resolution that the user has in the
  user settings.
- Some objects may return nulls in deeply nested fields
- User token required for actions related to insights and budgets.
- Business Budget Target amount is counted only for matching currency transactions.
- Requires user token with 'savings-goals:write' scope.
- Requires user token with scopes insights:read and budgets:write
- Uses User token with specific scopes for actions
- Some features are not enabled by default. Speak to your account manager for more
  information.
- Requires setup of appropriate scopes for access.
- Client token required with scope 'settlement-accounts'
- 'Client token required with scopes: settlement-accounts:readonly, settlement-accounts'
- Requires setup of OAuth scopes — `expense-checks:create`
- Stores your cookie consent session for our site. It contains no information other
  than whether you have opted in or out for each cookie level.
- A feature to help prevent Cross-Site Request Forgery (CSRF) attacks.
- Embedded design collaboration platform
- Used by Elastic Load Balancing from Amazon Web Services to effectively balance load
  on the servers.
- Used for analytics and uptime monitoring.
- Marketing and analytics tools.
- Requires user authorization for access.
- These technologies are used to support your experience and include user-selected
  options and site navigation aids.
- We do not use any cookies in this category.
- These technologies are used in the management of a site or app, including to record
  visitor numbers and identify issues users are experiencing.
- These technologies gather information about your browsing. We also work with advertising
  partners to serve you personalized ads online.
- Access tokens expire after 30 mins; use the same endpoint to get a new token.
- Common errors include invalid client secret and authorization code not valid.
- Available to Enterprise customers only.
- test keys and verification available at https://jwt.io/
- Decommissioned OAuth Refresh Tokens
- Uses OAuth2 for authentication.
- Some identity data may not be available from financial institutions.
- Payments capabilities are available for various banks across different countries.
- The refresh_token OAuth grant type is deprecated and refresh tokens will no longer
  be emitted on March 1st, 2023.
- The Transactions API now exposes a new transactionDateTime field.
- Transaction timestamp support has been added in beta for UK providers.
- Tink signs every message delivered via the Events V2 webhook with a signature header
  added to the outgoing HTTP request.
- In addition to comparing the signatures, the timestamp can be used to discard messages
  older than a set threshold.
- Console doesn't support IdP-initiated logins. Users must use Login URL to authenticate
  with Console.
- 'Default role for new users: If you enable SSO and assign a value to the SAML mapping
  role, Console users will be assigned to that role when they log in for the first
  time.'
- You can configure several aspects of your payments flow and customize branding,
  all from Tink Console.
- You need to enable JavaScript to run this app.
- The Tink Link URL launches the interface for payment initiation.
- Be a registered TPP under PSD2
- Make sure you are an enterprise customer
- After successfully uploading TPP Credentials you will be able to see the configured
  banks and parameters
- Your company must be a registered Account Information Service Provider (AISP) and/or
  Payment Initiation Service Provider (PISP) in the markets in which you wish to operate.
- We use cookies and similar technologies where essential to provide our website.
- Data is updated once per hour.
- Yes you can! Once you accept an invite you’ll be part of that organisation.
- Administrator users can change the role of other users in the organisation.
- Yes, contact support.
- Yes, administrator users can remove any user in the organisation - regardless of
  their role.
- No limitation (at the time of writing)
- Yes, a session is valid for 3 hours.
- An invite is expired after 15 days.
- Demo Bank is a simulated bank that allows you to test Tink products without using
  real bank credentials.
- The process of obtaining a license varies greatly between NCAs.
- Passporting a license from the EU to the UK is no longer allowed.
- Certificates can't be edited. To change certificate information, such as a name
  or role, you need to revoke the old certificate and issue a new one. If only adding
  information, you may retain the old certificate as it remains accurate, though incomplete.
- A certificate’s validity can be revoked unexpectedly with less than 24 hours' notice,
  which can cause service downtime.
- Ensure the information provided to the QTSP is accurate and up to date.
- If your organisation's name includes special characters, ensure they are properly
  escaped and decoded according to industry standards.
- Be a registered Third-Party Provider (TPP) and licensed to operate in the UK
- Be listed in the Open Banking Implementation Entity Directory (OBIE Directory)
- Only QWAC and QSealC certificates are accepted and considered compliant within the
  EU.
- Operations performed using the Python script are highly sensitive and may affect
  your Tink production applications.
- A small number of ASPSPs validate the redirect URI against the domain in the Common
  Name (CN) of the eIDAS certificate. Choosing the Tink redirect URI will not work
  for these ASPSPs.
- Tink does not support multiple redirect URIs for Payments products.
- A TPP must register with every ASPSP from which it intends to access PSD2 data and
  services.
- Successful registration can be confirmed by completing a data refresh operation
  or a payment.
- Dynamic enrollment is possible for supported ASPSPs.
- Provider IDs can share the same TPP credentials.
- TPP credentials are also returned in the successful response to the enroll command.
- To use Tink’s AIS & PIS products you must have your own QWAC and QSealC certificates.
- The access token expires after 30 mins and must be kept a secret.
- Opt-in feature requires user input to select accounts.
- Both tokens' lifetimes can be specified by the bank when they are issued. If the
  bank doesn’t specify the lifetime of the session (refresh token), the session lifetime
  is assumed to be 90 days.
- A credential's status can tell how far the credential has progressed in its aggregation
  journey.
- The aggregation journey can last from a few seconds to a few minutes, depending
  on the user, the bank and the amount of data fetched.
- If the bank’s authentication process requires the user to enter supplemental information,
  the credential can go from AUTHENTICATING to AWAITING_MOBILE_BANKID_AUTHENTICATION,
  AWAITING_THIRD_PARTY_APP_AUTHENTICATION or AWAITING_SUPPLEMENTAL_INFORMATION depending
  on the type of supplemental information needed.
- In some cases, it is possible that a credential does not require additional input
  from the user and goes directly from AUTHENTICATING to UPDATING if the authentication
  is successful.
- In case the credential is in any of the AWAITING_X states, it is important that
  the user input is provided before the timeout of this state. The timeout is 2 minutes
  for AWAITING_SUPPLEMENTAL_INFORMATION and 9 minutes for AWAITING_MOBILE_BANKID_AUTHENTICATION
  and AWAITING_THIRD_PARTY_APP_AUTHENTICATION.
- If a credential has the status UPDATED, then that credential’s last refresh was
  successful.
- Opt-In feature should be enabled for your client_id
- Opt-In is currently not supported in Tink Link
- Balances object is populated after the first aggregation journey has ended successfully.
- 'The following client scopes must be enabled for your app: authorization:read, authorization:grant,
  authorization:revoke, user:create, user:read, providers:read, credentials:read,
  credentials:write, credentials:refresh.'
- Early redirect must be enabled for your application. Please contact Tink Support
  to have this feature enabled.
- Once the credentials are in an UPDATED state, you can proceed with aggregating the
  user's financial data.
- Tokens expire after 30 mins, no refresh token provided.
- If you are using an iframe-based integration today, see our guide on migrating to
  a redirect-based integration instead.
- When embedding Tink Link in an iframe it's important to register a handler to act
  on the messages that Tink Link sends.
- To support automatic redirection back to your app after authenticating in a third-party
  app, append the app_uri query parameter to your authentication link.
- This needs to be a valid URI such as example://open and can't be just a bare scheme.
- Follows the strictest security standards (OAuth 2.0, mTLS)
errors:
- '400: The transaction id was invalid.'
- '404: The transaction or the transaction part was not found.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404: The account does not exist, or no balances available.'
- '400: The payload does not pass validation.'
- '400: Incorrect request parameters.'
- '404: Could not find the report.'
- '404: The account does not exist.'
- '400: Incorrect request parameters or user data missing.'
- '404: Could not find the report. Possible reasons, report was not successfully created,
  report has expired.'
- '404: Transaction not found.'
- '200: Successful operation.'
- The end user cancelled their flow
- The end user didn't successfully authenticate with their bank
- The end user didn't have any accounts available with the selected bank
- 'ALREADY_EXISTS: Triggered for Idempotency issues with trying to generate multiple
  reports for the same user and account at the same time.'
- 'INVALID_ARGUMENT: Faulty input data when generating the report.'
- 'UNAVAILABLE: Report generation services are unreachable.'
- 'FAILED_PRECONDITION: Some precondition to generate a report is not reached.'
- 'INTERNAL: Internal server error.'
- 'USER_CANCELLED: The end user cancelled the journey.'
- 'BAD_REQUEST: The URL is invalid, usually due to an incorrect or missing URL parameter.'
- 'AUTHENTICATION_ERROR: Something went wrong during the bank’s authentication process.'
- 'TEMPORARY_ERROR: A temporary error in Tink''s platform. To resolve, try again later.'
- 'INTERNAL_ERROR: An unexpected error in Tink''s platform.'
- '400 Bad Request: Ensure the request body contains at least one valid field.'
- 'BAD_REQUEST: Invalid parameter client_id'
- User cancelled Tink flow
- User didn't successfully authenticate with their bank
- User didn't have any accounts available with the selected bank
- 'USER_CANCELLED: The user cancelled the journey.'
- '401 Unauthorized: Recheck client ID, client secret or token expiration'
- '401 Unauthorized: Check your access token'
- '404 Not Found: Resource does not exist'
- '204: Rate limited request'
- 'TINK_SIDE_ERROR: UNKNOWN_ERROR'
- 'TINK_SIDE_ERROR: TINK_INTERNAL_SERVER_ERROR'
- 'TINK_SIDE_ERROR: AUTHENTICATION_METHOD_NOT_SUPPORTED'
- 'PROVIDER_ERROR: PROVIDER_UNAVAILABLE'
- 'PROVIDER_ERROR: LICENSED_PARTY_REJECTED'
- 'USER_LOGIN_ERROR: THIRD_PARTY_AUTHENTICATION_UNAVAILABLE'
- 'USER_LOGIN_ERROR: STATIC_CREDENTIALS_INCORRECT'
- 'USER_LOGIN_ERROR: DYNAMIC_CREDENTIALS_INCORRECT'
- 'USER_LOGIN_ERROR: DYNAMIC_CREDENTIALS_FLOW_CANCELLED'
- 'USER_LOGIN_ERROR: DYNAMIC_CREDENTIALS_FLOW_TIMEOUT'
- 'USER_LOGIN_ERROR: USER_NOT_A_CUSTOMER'
- 'USER_LOGIN_ERROR: USER_BLOCKED'
- 'USER_LOGIN_ERROR: USER_CONCURRENT_LOGINS'
- 'AUTHORIZATION_ERROR: ACTION_NOT_PERMITTED'
- 'AUTHORIZATION_ERROR: SESSION_EXPIRED'
- 'AUTHORIZATION_ERROR: USER_ACTION_REQUIRED'
- 'ACCOUNT_INFORMATION_ERROR: NO_ACCOUNTS'
- error=BAD_REQUEST
- error_reason=INVALID_PARAMETER_CLIENT_ID
- message=We%E2%80%99re%20sorry%2C%20but%20an%20error%20has%20occurred.
- tracking_id=83526f84-226a-43cc-ae2d-2747f394d71b
- '401 Unauthorized: Check client_id, client_secret, and scopes.'
- '204: Request is rate limited'
- 'USER_LOGIN_ERROR: The bank rejected the login credentials that you entered.'
- 'STATIC_CREDENTIALS_INCORRECT: The bank rejected the login credentials that you
  entered.'
- 'HTTP 204: Deletion request successful'
- 'BAD_REQUEST: Invalid parameter client_id.'
- 'AUTHENTICATION_ERROR: Check provider consent errors.'
- User did not successfully authenticate with their bank
- User did not have any accounts available with the selected bank
- '429 Too Many Requests: Rate limited — reduce request frequency.'
- 'USER_LOGIN_ERROR: Bank rejected the login credentials.'
- 'PROVIDER_ERROR: UNKNOWN_PROVIDER_ERROR'
- '401 Unauthorized: Check client credentials or token expiration.'
- '204: Request rate limited'
- 'USER_LOGIN_ERROR: The bank rejected the login credentials.'
- 'USER_CANCELLED: User canceled the operation'
- 'USER_CANCELLED: The user cancelled the journey. This status shouldn''t be considered
  as an error.'
- '401 Unauthorized: Check client access token or scope.'
- 'AUTHENTICATION_ERROR: Issues with provider consent'
- '400 Bad Request: Check query parameters and ensure they are valid.'
- 'BAD_REQUEST: Input should be a STRING with MIN_LENGTH 10.'
- 'BAD_REQUEST: Input should be an INTEGER GREATER than 0.'
- The user canceled their flow
- The user did not successfully authenticate with their bank
- 'USER_CANCELLED: The user cancelled the Tink Link flow.'
- User canceled their flow
- '401: Possible reasons include a missing Authorization: Bearer {access token} HTTP
  header and an expired access token.'
- '403: The access token is missing a required scope.'
- '429: Request rate limit is exceeded'
- '401: Possible reasons include a missing Authorization: Bearer {access token} HTTP
  header and an expired access token'
- '403: The access token is missing a required scope'
- '400: Request is not following the specification.'
- '401: Client either doesn''t exist, doesn''t have access to the user or isn''t allowed
  to use the scope.'
- '404: User doesn''t exist.'
- '400: The input market and/or locale was invalid.'
- '409: User with the same external id already exists.'
- '400: The provided user profile contains invalid data. Make sure the data formats
  are valid.'
- '403: Invalid credentials.'
- '429: quota exceeded'
- '400: empty or invalid mandatory parameter (accountId)'
- '404: The credentials could not be found.'
- '204: The credentials refresh was successfully initiated.'
- '200: The callback request was successful.'
- '401: Authorization token is missing, or not valid'
- '403: You are not allowed to access the requested resource'
- '400: empty or invalid mandatory parameter'
- '200: The list of conditions for the given provider is returned.'
- '400: The provider-consent was not eligible for extension.'
- '401: The user could not be authenticated.'
- '403: You do not have the permission to access this.'
- 'UNKNOWN_ERROR: Unknown unexpected error on Tink side'
- 'TINK_SIDE_ERROR: Explicit unexpected error on Tink side'
- 'AUTHENTICATION_METHOD_NOT_SUPPORTED: The authentication method that the user picked
  was not supported by Tink.'
- 'PROVIDER_UNAVAILABLE: Financial Service (provider/bank/ASPSP) is technically unavailable
  or doesn''t respond when Tink is sending requests'
- 'LICENSED_PARTY_REJECTED: Financial Service rejects the licensed party (TPP/OB registrate)
  or eIDAS certificate. This happens if Tink''s license is rejected'
- 'UNKNOWN_PROVIDER_ERROR: Financial Service returns an unknown or unexpected response'
- 'THIRD_PARTY_AUTHENTICATION_UNAVAILABLE: Mobile BankID or any other required third-party
  is technically unavailable'
- 'STATIC_CREDENTIALS_INCORRECT: Values of provided fields are rejected by the provider.'
- 'DYNAMIC_CREDENTIALS_INCORRECT: OTPs/card-reader codes/third-party app codes are
  rejected by Provider.'
- 'DYNAMIC_CREDENTIALS_FLOW_CANCELLED: Deliberate cancellation of dynamic authentication
  flow.'
- 'DYNAMIC_CREDENTIALS_FLOW_TIMEOUT: Financial Service has indicated that the dynamic
  flow has timed out.'
- 'USER_NOT_A_CUSTOMER: Financial Service responds that the identity used to authenticate
  is not a customer at the current provider.'
- 'USER_BLOCKED: Financial Service responds that the identity used to authenticate
  is blocked.'
- 'USER_CONCURRENT_LOGINS: When Financial Service or third party app doesn’t allow
  to have parallel sessions'
- 'ACTION_NOT_PERMITTED: Financial Service responds that the identity used to authenticate
  does not have permission to perform the operation'
- 'SESSION_EXPIRED: Access/Refresh-token combo is expired, requires re-authentication.'
- 'USER_ACTION_REQUIRED: User has successfully authenticated but there is a step where
  they are required to take some manual action.'
- 'NO_ACCOUNTS: User authentication was successful, but no data was available to be
  stored.'
- '400: Invalid input.'
- '401: Unauthorized request.'
- '403: Permission denied.'
- '404: Provider not found.'
- '500: Internal server error.'
- '404: Consent not found.'
- '204: Transaction updated.'
- '400: The payload does not pass validation, or the specified account does not exist.'
- '401: Unauthorized.'
- 204 Transaction updated.
- 400 The payload does not pass validation, or the specified account does not exist.
- 401 Unauthorized.
- 404 Transaction not found.
- '404: The report was not found.'
- '200: A successful response.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
- '400 Bad Request: If the payload does not pass validation.'
- '401 Unauthorized: If the user is not authorized.'
- '403 Forbidden: If the user is not permitted.'
- '404 Not Found: If the entity is not present.'
- '500 Internal Server Error: If there is an unexpected server error.'
- '400: Returns `400 Bad Request` if the payload does not pass validation.'
- '401: Returns `401 Unauthorized` if the user is not authorized.'
- '403: Returns `403 Forbidden` if the user is not permitted.'
- '404: Returns `404 Not Found` if the entity is not present.'
- '500: Returns `500 Internal Server Error` if there is an unexpected server error.'
- '200: Returns 200 Ok for successful operation.'
- '400: Returns 400 Bad Request if the payload does not pass validation.'
- '401: Returns 401 Unauthorized if the user is not authorized.'
- '403: Returns 403 Forbidden if the user is not permitted.'
- '404: Returns 404 Not Found if the entity is not present.'
- '500: Returns 500 Internal Server Error if there is an unexpected server error.'
- '400 Bad Request: if the payload does not pass validation.'
- '401 Unauthorized: if the user is not authorized.'
- '403 Forbidden: if the user is not permitted.'
- '404 Not Found: if the entity is not present.'
- '500 Internal Server Error: if there is an unexpected server error.'
- '200: Returns `200 Ok` for successful operation.'
- '600: More specific error codes that can be found as `detailCode` in the error response.'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 500 Internal Server Error
- 404 Not Found
- '409: A webhook subscribed to one or more of the same events and url already exists'
- '204 No Content: Successful operation'
- '400 Bad Request: Incorrect or missing parameters'
- '404 Not Found: Provided id does not correspond to an active insight'
- '500 Internal Server Error: Unexpected error when archiving or fetching insights'
- '401: If the user is not authorized.'
- '403: If the App is not authorized.'
- '500: For any unspecified error'
- '500: Internal server error'
- '404: If the provided costOfLivingId is not found.'
- '400: invalid arguments for pagination'
- '200: List of user subscriptions.'
- '404: Savings Goal not found.'
- '400: Request is not following the specification. See body for details.'
- '404: Budget not found'
- 'default: An unexpected error response.'
- '200: List of cost of living transactions.'
- '404: No event found'
- '200: The successfully created Savings Goal.'
- 404 Savings Goal not found.
- 404 Budget not found
- 500 For any unspecified error
- 401 If the user is not authorized.
- '400: The request does not pass validation.'
- '401: The scopes associated with the access token is not allowed the resource.'
- '403: The application used does not belong to subject associated with the access
  token.'
- '400: The request does not pass validation. Check the error message or the documentation
  of each field for more information.'
- '403: The resource does not belong to subject associated with the access token.'
- '404: At least one of given Payment Request IDs does not exist.'
- '409: Conflict - one of the Payments is in invalid state.'
- '400: One or more request parameters are incorrect or missing.'
- '401: Unauthorized, possibly because of missing ''Authorization: Bearer {access
  token}'' HTTP header or expired access token.'
- '404: The merchant or account specified could not be found.'
- '400: The request does not pass validation. Please check the error message for more
  information.'
- '404: The merchant, account or transaction specified could not be found.'
- '400: The request does not pass validation or there is not enough data to perform
  calculations on. Check the error message or the documentation for more information.'
- '401: Wrong scopes associated with the access token.'
- '400: The request does not pass validation. This could for example be a malformed
  authorization header. Check the error message or the documentation of each field
  for more information.'
- '401: Authorization token is missing or invalid.'
- '404: Not found.'
- '400: The request does not pass validation. This could for example be a malformed
  authorization header.'
- HTTP 400 Authorization code not valid
- HTTP 401 Could not find the OAuth client
- HTTP 401 Invalid client secret
- '401 Unauthorized: Check OAuth token'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Endpoint does not exist'
- PROVIDER_ERROR.UNKNOWN_PROVIDER_ERROR
- '409 Conflict: Credentials cannot be modified due to another ongoing process.'
- '200 OK: Operation failed silently.'
- '401 Unauthorized: Check client credentials or token expiration'
- 'USER_CANCELLED: The end user canceled the journey. This status should not be considered
  as an error.'
- 'BAD_REQUEST: The error is most likely a result of an incorrect or missing URL parameter.'
- 'AUTHENTICATION_ERROR: The error occurred during the authentication process with
  the bank.'
- 'TEMPORARY_ERROR: A temporary error in Tink''s platform. To resolve this, try again
  later.'
- 'INTERNAL_ERROR: An unexpected internal error in Tink''s platform.'
- USER_CANCELLED
- BAD_REQUEST
- AUTHENTICATION_ERROR
- TEMPORARY_ERROR
- INTERNAL_ERROR
- '403: Login via IdP initiation isn''t allowed.'
- '403: Your SAML attribute mappings are incorrect. Double-check that your fields
  are not misspelled and that your values aren''t incorrectly formatted.'
- '401 Unauthorized: Check if the client ID and secret are correct.'
- 'Payment request validation failed: Ensure all required fields are provided.'
- Contact the bank's technical support for PSD2 APIs
- If you encounter an error while using Tink's Python script tink_secret_utils.py
  or receive errors during testing, please contact Support
- 'Only one certificate is found in the certificate chain: Ensure that the .pem file
  you are uploading includes the complete certificate chain.'
- 'Unable to load Private Key: Ensure that the private key is created with RSA algorithm.'
- Contact the bank's technical support for PSD2 APIs for issues with registration.
- Dynamic enrollment not supported for some ASPSPs.
- '401 Unauthorized: Check client_id and client_secret.'
- HTTP 409 Identical credentials already exist
- HTTP 403 - access forbidden
- 'AUTHENTICATION_ERROR: Requires user input to refresh again.'
- 'SESSION_EXPIRED: Manually authenticate again to create a new session.'
- 'PERMANENT_ERROR: Credential cannot be used anymore; remove and add a new one.'
- 'SESSION_EXPIRED: User interaction required to re-authenticate'
- 'AWAITING_THIRD_PARTY_APP_AUTHENTICATION: Session invalidated at bank side'
- 'AUTHENTICATION_ERROR: Third party app authentication timeout'
- 'PERMANENT_ERROR: Credential cannot be used anymore.'
- 'AUTHENTICATION_ERROR: Authentication has failed.'
- 'TEMPORARY_ERROR: Problem with credential / provider.'
- 'BAD_REQUEST: The Tink Link URL was incorrectly configured.'
- 'USER_CANCELLED: The end user cancelled the flow.'
- 'AUTHENTICATION_ERROR: The end user did not successfully authenticate towards the
  financial institution.'
- 'INTERNAL_ERROR: An internal error within the Tink service.'
- 'TEMPORARY_ERROR: A temporary error with the Tink services.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - User token
  - transactions:write
  - identity:read
  - UserToken
  - Account
  - BalancesDetails
  - transactions:read
  - client access token
  - user access token
  - provider-consents
  - Authorization
  - ConnectivityError
  - AuthorizationSupplementalInformation
  - Client token
client:
  base_url: https://api.tink.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.tink.com/oauth/token
    client_id: '{{ dlt.secrets[''tink_client_id''] }}'
    client_secret: '{{ dlt.secrets[''tink_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''tink_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
  paginator:
    type: cursor
source_metadata: null
