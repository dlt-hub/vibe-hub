resources:
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: appeals
  endpoint:
    path: /appeals
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: constituents
  endpoint:
    path: /constituents
    method: GET
- name: funds
  endpoint:
    path: /funds
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: households
  endpoint:
    path: /households
    method: GET
- name: interactions
  endpoint:
    path: /interactions
    method: GET
- name: notes
  endpoint:
    path: /notes
    method: GET
- name: phones
  endpoint:
    path: /phones
    method: GET
- name: pledges
  endpoint:
    path: /pledges
    method: GET
- name: refunds
  endpoint:
    path: /refunds
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: tributes
  endpoint:
    path: /tributes
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: wallet_items
  endpoint:
    path: /walletitems
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: donor
  endpoint:
    path: /services/data/vXX.X/sobjects/Donor
    method: GET
    data_selector: records
- name: volunteers
  endpoint:
    path: /api/volunteers
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /services/data/vXX.X/sobjects/Event
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: membership
  endpoint:
    path: /services/data/vXX.X/sobjects/Membership
    method: GET
    data_selector: records
    params: {}
- name: donor
  endpoint:
    path: /api/donors
    method: GET
    data_selector: records
- name: fundraising_event
  endpoint:
    path: /api/events
    method: GET
    data_selector: records
- name: customer_stories
  endpoint:
    path: /api/v1/customer_stories
    method: GET
    data_selector: stories
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: fundraising
  endpoint:
    path: /services/data/vXX.X/sobjects/Fundraising
    method: GET
    data_selector: records
    params: {}
- name: crm
  endpoint:
    path: /services/data/vXX.X/sobjects/CRM
    method: GET
    data_selector: records
    params: {}
- name: volunteer
  endpoint:
    path: /services/data/vXX.X/sobjects/Volunteer
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: donor_retention
  endpoint:
    path: /template/donor-retention-calculator
    method: GET
    data_selector: records
- name: roi_calculator
  endpoint:
    path: /services/data/vXX.X/roiCalculator
    method: GET
    data_selector: records
- name: fundraising_thermometer
  endpoint:
    path: /template/fundraising-thermometer-generator/
    method: GET
    data_selector: data
    params: {}
- name: donation
  endpoint:
    path: /donations
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: donors
  endpoint:
    path: /api/v1/donors
    method: GET
    data_selector: records
- name: donations
  endpoint:
    path: /api/v1/donations
    method: GET
    data_selector: records
- name: donor
  endpoint:
    path: /api/v1/donors
    method: GET
    data_selector: records
- name: donation
  endpoint:
    path: /api/v1/donations
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /module-41--main__single--intro-3-2
    method: GET
    data_selector: records
- name: donation
  endpoint:
    path: /module-41--main__single--intro-3-3
    method: GET
    data_selector: records
- name: recurring_donation
  endpoint:
    path: /module-41--main__single--intro-3-4
    method: GET
    data_selector: records
- name: interaction
  endpoint:
    path: /module-41--main__single--intro-3-9
    method: GET
    data_selector: records
- name: Account
  endpoint:
    path: /api/bloomerang-js/#account
    method: POST
    data_selector: account
- name: Donation
  endpoint:
    path: /api/bloomerang-js/#donation
    method: POST
    data_selector: donation
- name: donation
  endpoint:
    path: /api/donation
    method: POST
    data_selector: donationDetails
- name: recurringDonation
  endpoint:
    path: /api/recurringDonation
    method: POST
    data_selector: recurringDonationDetails
- name: interaction
  endpoint:
    path: /api/interaction
    method: POST
    data_selector: interactionDetails
- name: financial_submission
  endpoint:
    path: /financial_submission
    method: POST
    data_selector: response
    params: {}
- name: interaction
  endpoint:
    path: /interactions
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/v1/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/v1/sobjects/Contact
    method: GET
    data_selector: records
- name: constituent
  endpoint:
    path: /v1/Constituent
    method: GET
    data_selector: Results
    params:
      q: Bob Smith
      skip: 0
      take: 50
- name: constituent
  endpoint:
    path: /Constituent/
    method: POST
    data_selector: records
- name: custom_fields
  endpoint:
    path: /CustomField/Constituent
    method: GET
    data_selector: records
- name: address
  endpoint:
    path: /Address/{address-id}
    method: GET
    data_selector: records
- name: address
  endpoint:
    path: /Address/
    method: POST
    data_selector: records
- name: custom_fields
  endpoint:
    path: /CustomField/{area}
    method: GET
    data_selector: records
- name: email
  endpoint:
    path: /Email
    method: POST
    data_selector: records
- name: phone
  endpoint:
    path: /Phone
    method: POST
    data_selector: records
- name: donation
  endpoint:
    path: /Donation
    method: POST
    data_selector: records
- name: refund
  endpoint:
    path: /Refund
    method: POST
    data_selector: records
- name: recurring_donation
  endpoint:
    path: /v1/RecurringDonation
    method: POST
    data_selector: ''
- name: recurring_donation_payment
  endpoint:
    path: /v1/RecurringDonationPayment
    method: POST
    data_selector: ''
- name: refund
  endpoint:
    path: /v1/Refund
    method: POST
    data_selector: ''
- name: pledge
  endpoint:
    path: /v1/Pledge
    method: POST
    data_selector: ''
- name: Pledge
  endpoint:
    path: /v1/Pledge/{pledge-id}
    method: POST
    data_selector: records
- name: PledgePayment
  endpoint:
    path: /v1/PledgePayment
    method: POST
    data_selector: records
- name: Refund
  endpoint:
    path: /v1/Refund
    method: POST
    data_selector: records
- name: CustomField
  endpoint:
    path: /v1/CustomField/{area}
    method: GET
    data_selector: records
- name: CustomField
  endpoint:
    path: /v1/CustomField/{area}
    method: GET
    data_selector: records
- name: Note
  endpoint:
    path: /v1/Note/{note-id}
    method: POST
    data_selector: records
- name: Interaction
  endpoint:
    path: /v1/Interaction/{interaction-id}
    method: POST
    data_selector: records
- name: Fund
  endpoint:
    path: /v1/Fund/{fund-id}
    method: GET
    data_selector: records
- name: Campaign
  endpoint:
    path: /v1/Campaign/{campaign-id}
    method: GET
    data_selector: records
- name: custom_field
  endpoint:
    path: /CustomField/{area}
    method: GET
    data_selector: results
    params:
      isActive: 'true'
- name: appeal
  endpoint:
    path: /Appeal/{appeal-id}
    method: GET
    data_selector: results
    params: {}
- name: user
  endpoint:
    path: /User
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: donors
  endpoint:
    path: /api/v1/donors
    method: GET
    data_selector: data
    params: {}
- name: donations
  endpoint:
    path: /api/v1/donations
    method: GET
    data_selector: data
    params: {}
- name: support
  endpoint:
    path: /support
    method: GET
    data_selector: data
    params: {}
- name: donation
  endpoint:
    path: /services/data/vXX.X/sobjects/Donation
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: donor
  endpoint:
    path: /services/data/vXX.X/sobjects/Donor
    method: GET
    data_selector: records
    params: {}
- name: donor
  endpoint:
    path: /services/data/vXX.X/sobjects/Donor
    method: GET
    data_selector: records
- name: volunteers
  endpoint:
    path: /services/data/vXX.X/sobjects/Volunteer
    method: GET
    data_selector: records
    params: {}
- name: donor
  endpoint:
    path: /api/v1/donors
    method: GET
    data_selector: data
    params: {}
- name: engagement
  endpoint:
    path: /api/v1/engagements
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: records
- name: donor
  endpoint:
    path: /api/v1/donors
    method: GET
    data_selector: records
- name: auction_events
  endpoint:
    path: /services/data/vXX.X/sobjects/AuctionEvent
    method: GET
    data_selector: records
- name: supporter
  endpoint:
    path: /api/v1/supporters
    method: GET
    data_selector: records
- name: membership_management
  endpoint:
    path: /services/data/vXX.X/sobjects/MembershipManagement
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: donor
  endpoint:
    path: /services/data/vXX.X/sobjects/Donor
    method: GET
    data_selector: records
    params: {}
- name: donation
  endpoint:
    path: /services/data/vXX.X/sobjects/Donation
    method: GET
    data_selector: records
    params: {}
- name: donors
  endpoint:
    path: /v1/donors
    method: GET
    data_selector: records
- name: fundraising_campaigns
  endpoint:
    path: /v1/fundraising_campaigns
    method: GET
    data_selector: records
- name: pricing_plans
  endpoint:
    path: /pricing
    method: GET
    data_selector: pricing
    params: {}
- name: donor
  endpoint:
    path: /donors
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: donor
  endpoint:
    path: /api/v1/donors
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: records
- name: donor
  endpoint:
    path: /v1/donors
    method: GET
    data_selector: records
- name: donation
  endpoint:
    path: /v1/donations
    method: GET
    data_selector: records
- name: ROI Calculator
  endpoint:
    path: /template/roi-calculator/
    method: GET
- name: Fundraising Thermometer
  endpoint:
    path: /template/fundraising-thermometer-generator/
    method: GET
    data_selector: thermometer_data
- name: donation
  endpoint:
    path: /services/data/vXX.X/sobjects/Donation
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: volunteer
  endpoint:
    path: /services/data/vXX.X/sobjects/Volunteer
    method: GET
    data_selector: records
    params: {}
- name: shifts
  endpoint:
    path: /services/data/vXX.X/sobjects/Shifts
    method: GET
    data_selector: records
- name: volunteers
  endpoint:
    path: /services/data/vXX.X/sobjects/Volunteers
    method: GET
    data_selector: records
- name: volunteer_engagement
  endpoint:
    path: /volunteers/engagement
    method: GET
    data_selector: records
- name: donation_history
  endpoint:
    path: /donors/history
    method: GET
    data_selector: records
- name: constituents
  endpoint:
    path: /api/v1/constituents
    method: GET
    data_selector: records
    params: {}
- name: donor
  endpoint:
    path: /api/v1/donors
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: donation
  endpoint:
    path: /api/v1/donations
    method: GET
    data_selector: records
    params: {}
- name: donors
  endpoint:
    path: /v1/donors
    method: GET
    data_selector: data
- name: donations
  endpoint:
    path: /v1/donations
    method: GET
    data_selector: data
notes:
- The private key allows anyone to change any information they want, so you must keep
  this key secret.
- Online transaction forms would expose the private key, so you cannot use the REST
  API with them.
- Uses OAuth2 with refresh token — requires setup of connected app in Bloomerang
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Bloomerang API
- Some data may be subject to API rate limits
- Requires setup of connected app in Bloomerang
- Some endpoints may return incomplete data
- Uses OAuth2 with refresh token — requires setup of connected app in Bloomerang.
- Pricing is predictable and based on constituents.
- You cannot use the REST API with online transaction forms.
- The results presented by this calculator are estimates based on average performance
  metrics. Your actual results may vary.
- A fundraising thermometer is a visual representation of nonprofit campaign progress
  designed to motivate donors and increase giving.
- Requires OAuth2 setup with a connected app in Bloomerang.
- Central Schedule views show only current and future dates.
- This release includes bug fixes and performance improvements.
- SOC 2 Type 2 certified
- PCI DSS compliant
- Some objects may return nulls in nested fields
- API supports access to donor and donation data.
- Ensure proper authentication setup to avoid access issues.
- Bloomerang.js uses a public key API.
- Only constituent records can be updated, such as with a new address.
- Uses API key for access.
- This version of the REST API is now deprecated.
- The private key allows anyone to change any information.
- For Individual records, the FirstName and LastName fields are required.
- For Organization records, the FullName field is required.
- You may not currently use this endpoint to create a recurring donation that will
  be autoprocessed by Bloomerang.
- You can create the record, but all payments must be handled manually or created
  through the RecurringDonationPayment endpoint.
- If a payment method is not specified, it defaults to the payment method on the schedule.
- The first four attributes are required to make a pledge payment.
- Integration requires valid OAuth2 credentials.
- Rate limits apply to API calls.
- Nonprofits using Bloomerang recruit 8% more volunteers monthly
- AI-assisted scheduling and a volunteer mobile app available
- API requires OAuth2 authentication.
- Rate limits are in place, be sure to handle them gracefully.
- Some endpoints may have rate limits
- Empower and motivate your advocates to raise funds on your behalf and share your
  mission with custom fundraising pages, gamification features, powerful marketing
  tools, and more!
- Break through fundraising limits. Ignite friendly competition, sell goods through
  your online store, and watch real-time thermometers inspire giving—all designed
  to drive massive results for your cause.
- Some objects like Donor may return nulls in deeply nested fields
- You must keep the private key secret.
- The Bloomerang REST API only accepts final data.
- Some endpoints may have rate limits.
- Central Schedule views show only current and future dates. For example, data about
  schedule shortages is not available for December 2024.
- Some objects like Volunteers may return nulls in deeply nested fields
- Integration with Constant Contact for email interactions.
- Volunteer management features enhanced for better engagement tracking.
- Uses OAuth2 with refresh token — requires setup of connected app in bloomerang
- API rate limits apply.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your OAuth token validity.'
- '429 Too Many Requests: Rate limit exceeded.'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Verify the endpoint and resource.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '401 Unauthorized: Recheck API key'
- '404 Not Found: Ensure the endpoint exists.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check the access token and permissions.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Recheck OAuth token'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '403 Forbidden: Check permissions for the requested resource.'
- '404 Not Found: Verify the endpoint path is correct.'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Ensure valid authentication details.'
- 'NOT_FOUND: Endpoint does not exist.'
- InternalServerError
- InvalidJsonInRequestBody
- InvalidQueryString
- DatabaseUnderMaintenance
- UsernameHasSpace
- UserLockedOut
- InvalidCredentials
- SupportUsername
- InvalidPassword
- WrongUserType
- DeviceAlreadyAssociatedWithAnotherUser
- NoSupportUser
- Unauthorized
- MissingAuthorizationHeader
- InvalidOrInsufficientInformation
- ErrorHandlingRequest
- UnknownErrorWhileProcessingRequest
- UserInactive
- IdMissing
- InvalidId
- CannotSetIdOnCreate
- DoNotMatch
- MissingRequiredField
- InvalidValueForEnum
- InvalidOrderBy
- ValueWrongType
- InvalidValueForContext
- ValueCannotBeNegative
- ValueTooLarge
- FieldInactive
- ValueCannotBeEdited
- MalformedValue
- ValueTooLong
- ValueBelongsInHeader
- InvalidYear
- HouseholdInConstituentEndpoint
- CannotSetFullNameForIndividuals
- CustomEmailInterestsWithoutCustomType
- CannotDeleteWithTransactions
- CannotDeleteWithSoftCredits
- WebsiteFormattingNotCorrect
- InvalidTwitterId
- CannotChangeAccountOnUpdate
- TwitterCommunicationError
- CannotSetIsPrimaryToFalse
- CannotSetIsPrimaryToTrue
- CannotHaveSecondaryWithoutPrimary
- AccountIsNotHousehold
- CannotHaveRelationships
- CannotHaveObjectType
- AccountAlreadyInHousehold
- HouseholdsCannotBeInHouseholds
- IncorrectHeadCount
- CannotSetRelationshipWithSelf
- InvalidNoteLength
- CannotAssignToHousehold – Obsolete
- CannotSetAddressFields
- CannotSetStateField
- CannotDeleteTransaction
- CannotUpdateTransaction
- CannotAddAttachmentNonSplitPaymentCreation
- OneDesignationRequired
- TwentyDesignationMax
- OnePaymentPerPledgePerTransaction
- OnePaymentPerRecurringDonationPerTransaction
- MethodMismatch
- CannotDeleteWalletItem
- NoEFTForStripe
- NotEnabled
- MissingHtmlContent
- CannotDelete
- TransactionAlreadyRefunded
- AlreadyCompleted
- CannotComplete
- MissingConstituent
- BenevonMustBeInteraction
- InvalidETagForAttachment
- IsNotStripe
- IsNotStripeConnect
- NonDeductibleGreaterThanAmount
- AmountDoesNotMatchParentRecurring
- CannotAddAckToNonAckedDesignation
- PledgeAlreadyWrittenOff
- AmountDoesNotMatchParentPledge
- PledgeAlreadyFulfilledOrOverpaid
- Deactivated
- Suspended
- PaymentProcessingFailed
- RequestedFieldsExceeded
- GroupNameExists
- NonUserGroup
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://bloomerang.com/api
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://bloomerang.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
