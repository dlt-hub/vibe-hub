resources:
- name: quotes
  endpoint:
    path: /api/v1/quotes
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: POST
    data_selector: data
    params: {}
- name: tokens
  endpoint:
    path: /v1/tokens
    method: GET
    data_selector: tokens
- name: chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
- name: tokens
  endpoint:
    path: /v1/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
    params: {}
- name: widget_customization
  endpoint:
    path: /compass-api/widget-customization
    method: GET
    data_selector: configuration
- name: defaultChains
  endpoint:
    path: /api/v1/defaultChains
    method: POST
    data_selector: chains
- name: defaultTokens
  endpoint:
    path: /api/v1/defaultTokens
    method: POST
    data_selector: tokens
- name: Widget Studio
  endpoint:
    path: /compass-api/api-reference
    method: GET
- name: configuration
  endpoint:
    path: /compass-api/api-reference
    method: GET
    data_selector: configuration
- name: widget
  endpoint:
    path: /embedwidget
    method: GET
    data_selector: widget_data
    params:
      integratorId: YOUR_INTEGRATOR_ID
- name: widget
  endpoint:
    path: /embedwidget
    method: GET
    data_selector: widget
    params:
      integratorId: YOUR_INTEGRATOR_ID
- name: TransactionStarted
  endpoint:
    path: /widget/events/transaction-started
    method: POST
    data_selector: data
    params: {}
- name: TransactionSteps
  endpoint:
    path: /widget/events/transaction-steps
    method: POST
    data_selector: data
    params: {}
- name: TransactionData
  endpoint:
    path: /widget/events/transaction-data
    method: POST
    data_selector: data
    params: {}
- name: TransactionStatus
  endpoint:
    path: /widget/events/transaction-status
    method: POST
    data_selector: data
    params: {}
- name: SubmitSignedTxn
  endpoint:
    path: /widget/events/submit-signed-txn
    method: POST
    data_selector: data
    params: {}
- name: TransactionStarted
  endpoint:
    path: /transaction/started
    method: GET
- name: TransactionSteps
  endpoint:
    path: /transaction/steps
    method: GET
- name: TransactionData
  endpoint:
    path: /transaction/data
    method: GET
- name: TransactionStatus
  endpoint:
    path: /transaction/status
    method: GET
- name: SubmitSignedTxn
  endpoint:
    path: /transaction/submit
    method: POST
- name: chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: data
- name: tokens
  endpoint:
    path: /tokens
    method: GET
- name: chains
  endpoint:
    path: /chains
    method: GET
- name: tokens
  endpoint:
    path: /tokens
    method: GET
- name: chains
  endpoint:
    path: /chains
    method: GET
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: response
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: data.quotes
    params: {}
- name: create_transaction
  endpoint:
    path: /v1/createTx
    method: GET
    data_selector: steps
    params: {}
- name: quotes
  endpoint:
    path: /v1/quotes
    method: GET
    data_selector: data.quotes
    params:
      fromChainId: '1'
      toChainId: sol
- name: next_tx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: data
    params: {}
- name: create_transaction
  endpoint:
    path: /v1/createTx
    method: GET
    data_selector: steps
    params: {}
- name: transaction_status
  endpoint:
    path: /status
    method: GET
    data_selector: data
    params: {}
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: data
    params: {}
- name: quick_swap
  endpoint:
    path: /quick-swap
    method: GET
    data_selector: data
    params: {}
- name: transaction_status
  endpoint:
    path: /status
    method: GET
    data_selector: data
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: data.quotes
- name: createTx
  endpoint:
    path: /createTx
    method: POST
    data_selector: data
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: data
- name: submit
  endpoint:
    path: /submit
    method: POST
    data_selector: data
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: data
- name: quick_swap
  endpoint:
    path: /quick-swap
    method: GET
    data_selector: data
    params: {}
- name: tokens
  endpoint:
    path: /v1/tokens
    method: GET
- name: chains
  endpoint:
    path: /v1/chains
    method: GET
- name: quotes
  endpoint:
    path: /api/quotes
    method: GET
    data_selector: data.quotes
- name: transaction
  endpoint:
    path: /api/transaction
    method: POST
    data_selector: data.transaction
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: data.status
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: data.quotes
- name: createTx
  endpoint:
    path: /createTx
    method: POST
    data_selector: data
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: data
- name: submit
  endpoint:
    path: /submit
    method: POST
    data_selector: data
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: data
- name: configuration
  endpoint:
    path: /configuration
    method: POST
    data_selector: config
- name: QuoteRequest
  endpoint:
    path: /api/quote-request
    method: POST
    data_selector: quotes
- name: CreateTransaction
  endpoint:
    path: /api/create-transaction
    method: POST
    data_selector: routeId
- name: CheckTransactionStatus
  endpoint:
    path: /api/check-status
    method: GET
    data_selector: status
- name: gasless_transactions
  endpoint:
    path: /compass-api/sdk/gasless-transactions
    method: GET
    data_selector: data.quotes
    params: {}
- name: create_transaction
  endpoint:
    path: /compass-api/sdk/create-transaction
    method: POST
    data_selector: data
    params: {}
- name: tokens
  endpoint:
    path: /v1/tokens
    method: GET
    data_selector: tokens
- name: chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
- name: tokens
  endpoint:
    path: /api/tokens
    method: GET
    data_selector: data
    params: {}
- name: chains
  endpoint:
    path: /api/chains
    method: GET
    data_selector: data
    params: {}
- name: supported_chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
- name: quotes
  endpoint:
    path: /api/v1/quotes
    method: GET
    data_selector: data.quotes
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: POST
    data_selector: data.transaction
- name: status
  endpoint:
    path: /api/v1/status
    method: GET
    data_selector: data.status
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params:
      fromChainId: '137'
      toChainId: '137'
      fromAssetAddress: '0xb7b31a6bc18e48888545ce79e83e06003be70930'
      toAssetAddress: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'
      inputAmountDisplay: '0.449594453'
      userWalletAddress: 0x..
      recipient: 0x..
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: steps
    params:
      routeId: a1b2c3d4-e5f6-g7h8-i9j0
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: txnData
    params:
      routeId: a1b2c3d4-e5f6-g7h8-i9j0
      stepId: step_12345
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params:
      routeId: a1b2c3d4-e5f6-g7h8-i9j0
      stepId: step_12345
      txnHash: 0x1234...abcd
- name: gasless_transactions
  endpoint:
    path: /compass-api/sdk/gasless-transactions
    method: GET
    data_selector: data.quotes
    params: {}
- name: create_transaction
  endpoint:
    path: /compass-api/sdk/create-transaction
    method: GET
    data_selector: data.routeId
    params: {}
- name: quotes
  endpoint:
    path: quotes
    method: GET
    data_selector: data.quotes
    params:
      fromChainId: '137'
      toChainId: '137'
      fromAssetAddress: '0xb7b31a6bc18e48888545ce79e83e06003be70930'
      toAssetAddress: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'
      inputAmountDisplay: '0.449594453'
      userWalletAddress: 0x1..
      recipient: 0x1..
- name: createTx
  endpoint:
    path: createTx
    method: GET
    data_selector: data.steps
    params: {}
- name: nextTx
  endpoint:
    path: nextTx
    method: GET
    data_selector: data.txnData.txnEvm
    params: {}
- name: status
  endpoint:
    path: status
    method: GET
    data_selector: data.status
    params: {}
- name: tokens
  endpoint:
    path: /compass-api/tokens
    method: GET
    data_selector: data
- name: chains
  endpoint:
    path: /compass-api/chains
    method: GET
    data_selector: data
- name: supported_chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: steps
    params: {}
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: transaction data
    params: {}
- name: transaction_status
  endpoint:
    path: /status
    method: GET
    data_selector: data
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: steps
    params: {}
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: txnData
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params: {}
- name: quotes
  endpoint:
    path: quotes
    method: GET
    params:
      fromChainId: '137'
      toChainId: '137'
      fromAssetAddress: '0xb7b31a6bc18e48888545ce79e83e06003be70930'
      toAssetAddress: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'
      inputAmountDisplay: '0.449594453'
      userWalletAddress: 0x...
      recipient: 4s...
- name: createTx
  endpoint:
    path: createTx
    method: POST
- name: nextTx
  endpoint:
    path: nextTx
    method: GET
- name: status
  endpoint:
    path: status
    method: GET
- name: quotes
  endpoint:
    path: quotes
    method: GET
    data_selector: data.quotes
    params:
      fromChainId: '137'
      toChainId: '137'
      fromAssetAddress: '0xb7b31a6bc18e48888545ce79e83e06003be70930'
      toAssetAddress: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'
      inputAmountDisplay: '0.449594453'
      userWalletAddress: 0x1..
      recipient: 0x1..
- name: createTx
  endpoint:
    path: createTx
    method: POST
    data_selector: data.steps
    params: {}
- name: nextTx
  endpoint:
    path: nextTx
    method: GET
    data_selector: data.txnData.txnEvm
    params: {}
- name: status
  endpoint:
    path: status
    method: GET
    data_selector: data.status
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: steps
    params: {}
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: transactionData
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params:
      fromChainId: sol
      toChainId: sol
      fromAssetAddress: So11111111111111111111111111111111111111112
      toAssetAddress: Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB
      inputAmountDisplay: '0.01'
      userWalletAddress: 4sd..
      recipient: 4sd..
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: steps
    params: {}
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: txnData
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params: {}
- name: transaction_status
  endpoint:
    path: /status
    method: GET
    data_selector: data
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: data.quotes
    params: {}
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: data.steps
    params: {}
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: data.txnData
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: data
    params: {}
- name: quotes
  endpoint:
    path: quotes
    method: GET
    data_selector: data.quotes
    params:
      fromChainId: '137'
      toChainId: '137'
      fromAssetAddress: '0xb7b31a6bc18e48888545ce79e83e06003be70930'
      toAssetAddress: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'
      inputAmountDisplay: '0.449594453'
      userWalletAddress: 0x...
      recipient: 4s...
- name: createTx
  endpoint:
    path: createTx
    method: POST
    data_selector: data.steps
- name: status
  endpoint:
    path: status
    method: GET
    data_selector: data
    params: {}
- name: quotes
  endpoint:
    path: /v1/quotes
    method: GET
    params: {}
- name: create_transaction
  endpoint:
    path: /v1/createTx
    method: POST
    params: {}
- name: next_transaction
  endpoint:
    path: /v1/nextTx
    method: GET
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/status
    method: GET
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params:
      fromChainId: sol
      toChainId: sol
      fromAssetAddress: So11111111111111111111111111111111111111112
      toAssetAddress: Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB
      inputAmountDisplay: '0.01'
      userWalletAddress: 4sd..
      recipient: 4sd..
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: steps
    params: {}
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: txnData
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: data
    params: {}
- name: Fetching Quotes
  endpoint:
    path: /compass-api/api-reference/fetching-quotes
    method: GET
- name: Create Transaction
  endpoint:
    path: /compass-api/api-reference/create-transaction
    method: GET
- name: Check Transaction Status
  endpoint:
    path: /compass-api/api-reference/check-transaction-status
    method: GET
- name: fetching_quotes
  endpoint:
    path: /compass-api/api-reference/fetching-quotes
    method: GET
    data_selector: quotes
    params: {}
- name: create_transaction
  endpoint:
    path: /compass-api/api-reference/create-transaction
    method: POST
    data_selector: transaction
    params: {}
- name: check_transaction_status
  endpoint:
    path: /compass-api/api-reference/check-transaction-status
    method: GET
    data_selector: status
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
- name: createTx
  endpoint:
    path: /createTx
    method: GET
    data_selector: steps
- name: nextTx
  endpoint:
    path: /nextTx
    method: GET
    data_selector: txnData
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: data
- name: quotes
  endpoint:
    path: /v1/quotes
    method: GET
    data_selector: data.quotes
- name: createTx
  endpoint:
    path: /v1/createTx
    method: POST
    data_selector: data
    params: {}
- name: nextTx
  endpoint:
    path: /v1/nextTx
    method: GET
    data_selector: data.txnData.txnSol.data
- name: status
  endpoint:
    path: /v1/status
    method: GET
    data_selector: data.status
- name: SVGs
  endpoint:
    path: /resources/brand-assets/svg
    method: GET
- name: PNGs
  endpoint:
    path: /resources/brand-assets/png
    method: GET
notes:
- 'Infrastructure-Light Design: Eliminates the need for smart contracts on source
  and destination chains and cross-chain messaging layers.'
- 'Building for the future: Intents based protocols are the next evolution in liquidity
  movement.'
- Requires setup of connected app in Blockend
- Some endpoints may have rate limits
- Pathfinder is currently in beta and being rolled out to our early integrators in
  phases, bringing us closer to realizing our vision of Any Token, Any Chain.
- LEX streamlines the core components of escrow, fulfillment, validation, and settlement
  by implementing three key changes.
- Users now make basic token transfers directly to solver addresses.
- LEX eliminates the need for smart contracts on every supported chain and reduces
  dependency on legacy infrastructure.
- All dependencies are required for full functionality of the widget across different
  blockchain networks and wallet types.
- 'Note: token address for native tokens is set to 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'
- Use the Widget Studio to generate your widget configuration.
- URL parameters provide initial configuration for the widget.
- PostMessage API enables dynamic configuration and communication.
- Always clean up event listeners to prevent memory leaks.
- Always check for error properties in event data and handle them appropriately.
- Zero Configuration — works out of the box with Wagmi and @dynamic-labs(Solana) based
  libraries
- 'Always Clean Up Event Listeners: Make sure to remove event listeners in the cleanup
  function to prevent memory leaks.'
- 'Handle Error Cases: Always check for error properties in event data and handle
  them appropriately.'
- 'Use Event Constants: Always use blockendEventsConstants instead of hardcoded strings
  to avoid typos.'
- WidgetLite is currently under active development and is expected to launch in a
  few weeks, bringing this streamlined solution to life.
- Widget automatically detects and reuses external wallet providers
- Supports EVM and Solana
- 'Rate limits with authentication: 200 requests per minute'
- Flow of a transaction starts with fetching quotes for it.
- User wallet address and recipient address are required in the request.
- You can ignore status check and skip to next step of the txn if skipTxn field is
  set to true in the response.
- 'The Quick Swap endpoint is designed for simple swaps only and has the following
  restrictions: Only supports single-step swaps (no complex multi-hop routes), Automatically
  uses recommended providers only, Routes with more than 2 steps (approval + swap)
  will be rejected, Cross-chain swaps are supported but must be single-step.'
- To enable gasless transactions, add the 'gasless=true' flag to the quotes request.
- The response from '/nextTx' and '/createTx' will contain a 'gasless' field.
- API Key must be obtained through the Blockend platform.
- Integrator ID is required for analytics and tracking.
- Requires API key for authentication.
- Must obtain API key through the Blockend platform
- Integrator ID is required for analytics and tracking
- 'Transaction status codes include: in-progress, success, partial-success, and failed.'
- Handles multiple transaction steps for EVM swaps
- This guide demonstrates how to execute a token bridge from EVM-compatible chains
  to Solana using the Compass API.
- This guide demonstrates how to execute a token swap on solana network using the
  Compass API.
- The example covers the complete workflow from connecting a wallet to monitoring
  transaction status.
- Uses EVM wallet connection for transactions.
- Error handling is implemented for transaction failures.
- Transaction status codes include in-progress, success, partial-success, and failed.
- If you encounter the above error, add this code to your package.json file
- for more details please refer https://docs.dynamic.xyz/troubleshooting/react/cannot-resolve-rpc-websockets
- 'For browser implementation: Make sure Phantom wallet extension is installed'
- Replace 'your-integrator-id' with your actual integrator ID
- Ensure you have the required environment variables (SOLANA_PRIVATE_KEY, RPC_URL)
- If you encounter the error 'Class extends value /static/media/client.98866d6736d9f36d61b8.cjs
  is not a constructor or null', add 'resolutions' to your package.json.
- This page addresses the possible errors while setting up the widget in Next js applications
- Self is not defined or HTMLElement not defined
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid integratorId: Ensure the correct integrator ID is used.'
- 'Events Not Firing: Ensure you''re importing the hook correctly.'
- 'Memory Leaks: Always clean up event listeners in useEffect cleanup functions.'
- 'TypeScript Errors: Make sure you have the latest version of the widget package.'
- 'Rate limit exceeded: Throttle API calls or reduce frequency'
- No routes found
- Route too complex
- Failed to compute transaction data
- 'No routes found: When no suitable swap routes are available'
- 'Route too complex: When the optimal route requires multiple steps'
- 'Failed to compute transaction data: When transaction data cannot be generated'
- 'Transaction not found: Check if the routeId and stepId are correct.'
- 'Quote not found: Ensure that the quote request parameters are valid.'
- 'CONFIGURATION_ERROR: Check your configuration parameters.'
- 'NETWORK_ERROR: Verify network connectivity.'
- 'VALIDATION_ERROR: Ensure required fields are provided.'
- '400 Bad Request: Check input parameters for validity.'
- '401 Unauthorized: Ensure API key is correct and has necessary permissions.'
- '404 Not Found: Check the endpoint URL.'
- 'CONFIGURATION_ERROR: Check your configuration parameters'
- 'NETWORK_ERROR: Verify network connectivity'
- 'VALIDATION_ERROR: Ensure provided data meets validation requirements'
- 'Transaction failed: Handle error appropriately.'
auth_info:
  mentioned_objects:
  - OauthToken
client:
  base_url: https://api2.blockend.com/v1/
source_metadata: null
