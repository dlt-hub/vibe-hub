resources:
- name: shipping_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: application/json
    params: {}
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: application/json
    params: {}
- name: shipping_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: application/json
    params: {}
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: application/json
    params: {}
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: application/json
    params: {}
- name: shipment_tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    data_selector: application/json
    params: {}
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: application/json
- name: tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    data_selector: application/json
- name: getTracking
  endpoint:
    path: /shipping/v2/trackings
    method: GET
    data_selector: trackingId
    params:
      trackingId: string
      carrierId: string
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
    data_selector: shipmentId
    params:
      shipmentId: string
      packageClientReferenceId: string
      format: string
      dpi: number
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
    data_selector: ''
    params:
      shipmentId: string
- name: getTracking
  endpoint:
    path: /shipping/v2/trackings
    method: GET
    data_selector: trackingData
    params:
      trackingId: carrier-generated tracking identifier
      carrierId: carrier identifier
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
    data_selector: packageDocumentDetail
    params:
      shipmentId: shipment identifier
      packageClientReferenceId: package client reference identifier
      format: file format
      dpi: resolution
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
    data_selector: emptyResponse
- name: cancelShipment
  endpoint:
    path: /shipping/v2/cancelShipment
    method: POST
    params:
      shipmentId: string
- name: accessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: accessPoints
- name: Access Points
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: accessPoints
    params:
      accessPointTypes: required
      countryCode: required
      postalCode: required
- name: Non-Delivery Report Feedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
    data_selector: ndrFeedback
    params:
      x-amz-access-token: required
      x-amzn-shipping-business-id: optional
- name: getAccessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: accessPoints
    params:
      accessPointTypes: required
      countryCode: required
      postalCode: required
      x-amz-access-token: required
      x-amzn-shipping-business-id: optional
- name: submitNdrFeedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
    data_selector: feedback
    params:
      x-amz-access-token: required
      x-amzn-shipping-business-id: optional
- name: getAdditionalInputs
  endpoint:
    path: /getAdditionalInputs
    method: GET
    data_selector: payload
    params:
      requestToken: The request token returned in the response to the getRates operation.
      rateId: The rate identifier for the shipping offering (rate) returned in the
        response to the getRates operation.
- name: Geocode
  endpoint:
    path: /geocode
    method: GET
- name: DocumentFormat
  endpoint:
    path: /documentFormat
    method: GET
- name: DocumentType
  endpoint:
    path: /documentType
    method: GET
- name: ValueAddedService
  endpoint:
    path: /valueAddedService
    method: GET
- name: DangerousGoodsDetails
  endpoint:
    path: /dangerousGoodsDetails
    method: GET
- name: EventCode
  endpoint:
    path: /eventCode
    method: GET
- name: Geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: location
- name: DocumentFormat
  endpoint:
    path: /documentFormat
    method: GET
    data_selector: formats
- name: DocumentType
  endpoint:
    path: /documentType
    method: GET
    data_selector: types
- name: GetRates
  endpoint:
    path: /GetRates
    method: POST
    data_selector: rates
    params:
      channelDetails: required
      packages: required
      shipFrom: required
- name: GetTracking
  endpoint:
    path: /GetTracking
    method: POST
    data_selector: trackingId
    params:
      trackingId: required
- name: PurchaseShipment
  endpoint:
    path: /PurchaseShipment
    method: POST
    data_selector: requestToken
    params:
      rateId: required
      requestToken: required
      requestedDocumentSpecification: required
- name: GetTracking
  endpoint:
    path: /getTracking
    method: POST
    data_selector: payload
- name: GetRates
  endpoint:
    path: /getRates
    method: POST
    data_selector: payload
- name: CancelShipment
  endpoint:
    path: /cancelShipment
    method: POST
    data_selector: payload
- name: GetShipmentDocuments
  endpoint:
    path: /getShipmentDocuments
    method: POST
    data_selector: payload
- name: purchaseShipment
  endpoint:
    path: /purchaseShipment
    method: POST
    data_selector: payload
    params: {}
- name: oneClickShipment
  endpoint:
    path: /oneClickShipment
    method: POST
    data_selector: payload
    params: {}
- name: getAccessPoints
  endpoint:
    path: /getAccessPoints
    method: GET
    data_selector: payload
    params: {}
- name: getAdditionalInputs
  endpoint:
    path: /getAdditionalInputs
    method: GET
    data_selector: payload
    params: {}
- name: PurchaseShipment
  endpoint:
    path: /purchaseShipment
    method: POST
    data_selector: payload
    params: {}
- name: OneClickShipment
  endpoint:
    path: /oneClickShipment
    method: POST
    data_selector: payload
    params: {}
- name: GetAccessPoints
  endpoint:
    path: /getAccessPoints
    method: GET
    data_selector: payload
    params: {}
- name: shipping_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: application/json
    params: {}
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: application/json
    params: {}
- name: rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: rates
    params: {}
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: shipmentId
    params: {}
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: cancelShipment
  endpoint:
    path: /shipping/v2/cancelShipment
    method: POST
    data_selector: response
    params:
      shipmentId: The shipment identifier originally returned by the purchaseShipment
        operation.
- name: getAccessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: response
    params:
      accessPointTypes: Access point types
      countryCode: Country code for access point
      postalCode: postal code for access point
- name: cancelShipment
  endpoint:
    path: /shipping/v2/cancelShipment
    method: POST
    data_selector: responses
    params:
      shipmentId: The shipment identifier originally returned by the purchaseShipment
        operation.
- name: getAccessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: responses
    params:
      accessPointTypes: Access point types
      countryCode: Country code for access point
      postalCode: postal code for access point
- name: ndrFeedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: ndrFeedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
- name: additionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: GetRatesRequest
  endpoint:
    path: /getRates
    method: POST
    data_selector: payload
    params: {}
- name: GetTrackingResult
  endpoint:
    path: /getTracking
    method: POST
    data_selector: payload
    params: {}
- name: PurchaseShipmentRequest
  endpoint:
    path: /purchaseShipment
    method: POST
    data_selector: payload
    params: {}
- name: CancelShipmentResponse
  endpoint:
    path: /cancelShipment
    method: POST
    data_selector: payload
    params: {}
- name: GetRates
  endpoint:
    path: /getRates
    method: POST
    data_selector: payload
- name: PurchaseShipment
  endpoint:
    path: /purchaseShipment
    method: POST
    data_selector: payload
- name: CancelShipment
  endpoint:
    path: /cancelShipment
    method: POST
    data_selector: payload
- name: GetTracking
  endpoint:
    path: /getTracking
    method: POST
    data_selector: payload
- name: GetAccessPoints
  endpoint:
    path: /getAccessPoints
    method: GET
    data_selector: payload
- name: Shipping Rate
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: Label Purchase Via Purchase Shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: Label Purchase Via Smart Purchase
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: Shipment Tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: Regenerate Shipping Label
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: Cancel Shipment Label
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: Obtain Delivery Counter Location
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
- name: Submit Non-Delivery Report
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
- name: Provide Additional Input
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: shipping_rate
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: label_purchase_via_purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: label_purchase_via_smart_purchase
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: shipment_tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: regenerate_shipping_label
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: cancel_shipment_label
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: obtain_delivery_counter_location
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
- name: submit_non_delivery_report
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
- name: provide_additional_input
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: GetRatesResponse
    params: {}
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: PurchaseShipmentResponse
    params: {}
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: rateOfferings
    params: {}
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: purchaseDetails
    params: {}
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: getTracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: purchase-related details and documents
    params: {}
- name: getTracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    data_selector: tracking information
    params: {}
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
    data_selector: shipping documents
    params: {}
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
    data_selector: empty object
    params: {}
- name: getAccessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: response
    params: {}
- name: submitNdrFeedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
    data_selector: response
    params: {}
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
    data_selector: response
    params: {}
- name: access_points
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: accessPoints
    params:
      accessPointTypes: required
      countryCode: required
      postalCode: required
- name: ndr_feedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
    data_selector: ndrFeedback
    params:
      body: required
- name: additional_inputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
    data_selector: additionalInputs
    params:
      requestToken: required
      rateId: required
- name: shipments_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: shipments
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: shipment_documents
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: cancel_shipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: accessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
- name: ndrFeedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
- name: additionalInputs_schema
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: TaxDetail
  endpoint:
    path: /taxDetail
    method: GET
    data_selector: taxDetail
    params: {}
- name: MerchantId
  endpoint:
    path: /merchantId
    method: GET
    data_selector: merchantId
    params: {}
- name: ShipperNumber
  endpoint:
    path: /shipperNumber
    method: GET
    data_selector: shipperNumber
    params: {}
- name: GoodsOwner
  endpoint:
    path: /goodsOwner
    method: GET
    data_selector: goodsOwner
    params: {}
- name: Event
  endpoint:
    path: /event
    method: GET
    data_selector: event
    params: {}
- name: TrackingSummary
  endpoint:
    path: /trackingSummary
    method: GET
    data_selector: trackingSummary
    params: {}
- name: AmazonOrderDetails
  endpoint:
    path: /amazonOrderDetails
    method: GET
    data_selector: amazonOrderDetails
    params: {}
- name: AmazonShipmentDetails
  endpoint:
    path: /amazonShipmentDetails
    method: GET
    data_selector: amazonShipmentDetails
    params: {}
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs
    method: GET
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: smartPurchaseShipment
  endpoint:
    path: /shipping/v2/shipments/oneClickShipment
    method: POST
- name: getTracking
  endpoint:
    path: /shipping/v2/track
    method: GET
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: OneClickShipment
  endpoint:
    path: /oneClickShipment
    method: POST
    data_selector: payload
    params: {}
- name: GetAccessPoints
  endpoint:
    path: /getAccessPoints
    method: GET
    data_selector: payload
    params: {}
- name: shipments_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: shipments
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: shipment_documents
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: cancel_shipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: accessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
- name: ndrFeedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
- name: additionalInputs_schema
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: payload
- name: shipment_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: payload.rates
    params: {}
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: rates
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputsSchema
    method: GET
    data_selector: additionalInputs
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: shipment
- name: smartPurchaseShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: shipment
- name: getTracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    data_selector: tracking
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
    data_selector: documents
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
    data_selector: cancelled
- name: rates
  endpoint:
    path: /rates
    method: GET
    data_selector: rates
    params: {}
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs
    method: GET
    params:
      requestToken: string
      rateId: string
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: payload
    params:
      requestToken: string
      rateId: string
      requestedDocumentSpecification: object
      requestedValueAddedServices: array
      additionalInputs: object
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: shipmentId
    params: {}
- name: rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: payload
    params: {}
- name: shipment_rates
  endpoint:
    path: /v1/rates
    method: GET
    data_selector: rates
    params: {}
- name: getShipmentDocuments
  endpoint:
    path: /shipping/sandbox/v2/shipments/{shipmentID}/documents
    method: GET
    data_selector: payload
    params:
      packageClientReferenceId: packageClientReferenceID
      format: format
      dpi: dpi
- name: shipment_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: get_additional_inputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs
    method: GET
- name: tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    data_selector: payload
    params:
      carrierID: string
      trackingID: string
- name: cancel_shipment
  endpoint:
    path: /v2/shipments/{shipmentId}/cancel
    method: PUT
    data_selector: payload
    params: {}
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: payload
    params: {}
- name: dangerous_goods_shipment
  endpoint:
    path: /purchase-limited-quantity-dangerous-goods-shipment
    method: POST
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: shipmentId
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: payload.rates
    params:
      channelDetails:
        channelType: AMAZON
- name: shipment_documents
  endpoint:
    path: /shipping/sandbox/v2/shipments/{shipmentID}/documents
    method: GET
    data_selector: payload
    params:
      packageClientReferenceID: abcd
      format: PNG
      dpi: 300
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: payload.rates
    params:
      channelDetails: required
      shipFrom: required
      packages: required
- name: tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    data_selector: payload
    params:
      carrierId: AMZN_UK
      trackingId: UK0123456789
- name: ndr_feedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
    data_selector: Empty Object Body
    params: {}
- name: cancel_shipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
    data_selector: payload
- name: getOrder
  endpoint:
    path: /sp-api/reference/orders-v0/getorder
    method: GET
- name: getOrderItems
  endpoint:
    path: /sp-api/docs/orders-api-v0-reference/getorderitems
    method: GET
- name: getRates
  endpoint:
    path: /sp-api/docs/shipping-api-v2-reference/getRates
    method: GET
- name: purchaseShipment
  endpoint:
    path: /sp-api/docs/shipping-api-v2-reference/purchaseShipment
    method: POST
- name: getEligibleShippingServices
  endpoint:
    path: /sp-api/docs/merchant-fulfillment-api-v0-reference/geteligibleShipmentServices
    method: GET
- name: createShipment
  endpoint:
    path: /sp-api/docs/merchant-fulfillment-api-v0-reference/createShipment
    method: POST
- name: listTransactions
  endpoint:
    path: /sp-api/docs/finances-api-v0-reference/listTransactions
    method: GET
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: payload.rates
    params:
      channelDetails: required
      shipFrom: required
      packages: required
- name: dangerous_goods_shipment
  endpoint:
    path: /purchase-dangerous-goods-shipment
    method: POST
    data_selector: shipment_data
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: payload.rates
- name: ndr_feedback
  endpoint:
    path: /shipping/v2/ndrFeedback
    method: POST
    data_selector: Empty Object Body
    params: {}
- name: getOrder
  endpoint:
    path: /orders/v0/getOrder
    method: GET
- name: getOrderItems
  endpoint:
    path: /orders/v0/getOrderItems
    method: GET
- name: getRates
  endpoint:
    path: /shipping/v2/getRates
    method: POST
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/purchaseShipment
    method: POST
- name: getEligibleShippingServices
  endpoint:
    path: /merchant-fulfillment/v0/getEligibleShippingServices
    method: POST
- name: createShipment
  endpoint:
    path: /merchant-fulfillment/v0/createShipment
    method: POST
- name: listTransactions
  endpoint:
    path: /finances/v0/listTransactions
    method: GET
- name: shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipmentData
    params: {}
- name: sellers
  endpoint:
    path: /sellers
    method: GET
- name: shipments
  endpoint:
    path: /fba/inbound/v0/shipments/{shipmentId}/preorder/confirm
    method: PUT
    data_selector: ''
    params:
      marketplace: ATVPDKIKX0DER
      NeedByDate: '2020-10-10'
- name: createDestination
  endpoint:
    path: /notifications/v1/destinations
    method: POST
- name: deleteDestination
  endpoint:
    path: /notifications/v1/destinations/{destinationId}
    method: DELETE
- name: deleteSubscriptionById
  endpoint:
    path: /notifications/v2/subscriptions/{notificationType}/{subscriptionId}
    method: DELETE
- name: getDestination
  endpoint:
    path: /notifications/v1/destinations/{destinationId}
    method: GET
- name: getDestinations
  endpoint:
    path: /notifications/v1/destinations
    method: GET
- name: getSubscriptionById
  endpoint:
    path: /notifications/v1/subscriptions/{notificationType}/{subscriptionId}
    method: GET
- name: getAuthorizationCode
  endpoint:
    path: /authorization/v1/authorizationCode
    method: GET
- name: North America
  endpoint:
    path: /sellercentral/urls/north-america
    method: GET
    data_selector: urls
    params: {}
- name: Europe
  endpoint:
    path: /sellercentral/urls/europe
    method: GET
    data_selector: urls
    params: {}
- name: Far East
  endpoint:
    path: /sellercentral/urls/far-east
    method: GET
    data_selector: urls
    params: {}
- name: Direct-to-Consumer Shipping
  endpoint:
    path: /apis/docs/direct-to-consumer-shipping-restricted-role
- name: Brand Analytics
  endpoint:
    path: /sp-api/docs/brand-analytics-role
- name: Product Listing
  endpoint:
    path: /sp-api/docs/product-listing-role
- name: Pricing
  endpoint:
    path: /sp-api/docs/pricing-role
- name: Amazon Fulfillment
  endpoint:
    path: /sp-api/docs/amazon-fulfillment-role
- name: Buyer Communication
  endpoint:
    path: /sp-api/docs/buyer-communication-role
- name: Buyer Solicitation
  endpoint:
    path: /sp-api/docs/buyer-solicitation-role
- name: Selling Partner Insights
  endpoint:
    path: /sp-api/docs/selling-partner-insights-role
- name: Finance and Accounting
  endpoint:
    path: /sp-api/docs/finance-and-accounting-role
- name: Inventory and Order Tracking
  endpoint:
    path: /sp-api/docs/inventory-and-order-tracking-role
- name: Tax Invoicing
  endpoint:
    path: /sp-api/docs/tax-invoicing-restricted-role
- name: Tax Remittance
  endpoint:
    path: /sp-api/docs/tax-remittance-restricted-role
- name: shipments
  endpoint:
    path: /fba/inbound/v0/shipments/{shipmentId}/preorder/confirm
    method: PUT
    data_selector: response
    params: {}
- name: cancelFeed
  endpoint:
    path: /feeds/2020-09-04/feeds/{feedId}
    method: DELETE
- name: cancelReport
  endpoint:
    path: /reports/2020-09-04/reports/{reportId}
    method: DELETE
- name: cancelReportSchedule
  endpoint:
    path: /reports/2020-09-04/schedules/{reportScheduleId}
    method: DELETE
- name: cancelShipment
  endpoint:
    path: /mfn/v0/shipments/{shipmentId}
    method: DELETE
- name: createDestination
  endpoint:
    path: /notifications/v1/destinations
    method: POST
- name: getAccount
  endpoint:
    path: /shipping/v1/account
    method: GET
- name: getCustomerInvoices
  endpoint:
    path: /vendor/directFulfillment/shipping/v1/customerInvoices
    method: GET
- name: getOrders
  endpoint:
    path: /orders/v0/orders
    method: GET
- name: createDestination
  endpoint:
    path: /notifications/v1/destinations
    method: POST
- name: deleteDestination
  endpoint:
    path: /notifications/v1/destinations/{destinationId}
    method: DELETE
- name: deleteSubscriptionById
  endpoint:
    path: /notifications/v2/subscriptions/{notificationType}/{subscriptionId}
    method: DELETE
- name: getDestination
  endpoint:
    path: /notifications/v1/destinations/{destinationId}
    method: GET
- name: getDestinations
  endpoint:
    path: /notifications/v1/destinations
    method: GET
- name: getSubscriptionById
  endpoint:
    path: /notifications/v1/subscriptions/{notificationType}/{subscriptionId}
    method: GET
- name: getAuthorizationCode
  endpoint:
    path: /authorization/v1/authorizationCode
    method: GET
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: directPurchaseShipment
  endpoint:
    path: /shipping/v2/shipments/directPurchase
    method: POST
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: getTracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: North America Seller Central URLs
  endpoint:
    path: /sellercentral/urls/north-america
    method: GET
    data_selector: seller_urls
    params: {}
- name: Europe Seller Central URLs
  endpoint:
    path: /sellercentral/urls/europe
    method: GET
    data_selector: seller_urls
    params: {}
- name: Far East Seller Central URLs
  endpoint:
    path: /sellercentral/urls/far-east
    method: GET
    data_selector: seller_urls
    params: {}
- name: Get Access Token
  endpoint:
    path: /auth/o2/token
    method: POST
    data_selector: ''
    params: {}
- name: Get Shipping Rates - OFF-Amazon
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: ''
    params: {}
- name: Get Shipping Rates - ON-Amazon
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: ''
    params: {}
- name: Purchase Shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: ''
    params: {}
- name: Access Points API
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: ''
    params: {}
- name: Shipping API
  endpoint:
    path: /shipping/v2
    method: GET
    data_selector: records
- name: Access Points API
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    params:
      accessPointTypes: HELIX
      countryCode: GB
      postalCode: DESTINATIONPOSTCODEHERE
- name: Smart Purchase Shipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: body
    params: {}
- name: Get Shipment Tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    data_selector: body
    params:
      carrierId: CARRIERIDHERE
      trackingId: TRACKINGIDHERE
- name: Get Shipment Documents
  endpoint:
    path: /shipping/v2/shipments/SHIPMENTID/documents
    method: GET
    data_selector: body
    params:
      packageClientReferenceId: CLIENTREFID
      format: DOCFORMAT
- name: Cancel Shipment
  endpoint:
    path: /shipping/v2/shipments/SHIPMENTIDHERE/cancel
    method: PUT
    data_selector: body
    params: {}
- name: cancelFeed
  endpoint:
    path: /feeds/2020-09-04/feeds/{feedId}
    method: DELETE
- name: cancelReport
  endpoint:
    path: /reports/2020-09-04/reports/{reportId}
    method: DELETE
- name: cancelShipment
  endpoint:
    path: /mfn/v0/shipments/{shipmentId}
    method: DELETE
- name: createShipment
  endpoint:
    path: /mfn/v0/shipments
    method: POST
- name: getAccount
  endpoint:
    path: /shipping/v1/account
    method: GET
- name: getOrders
  endpoint:
    path: /orders/v0/orders
    method: GET
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: directPurchaseShipment
  endpoint:
    path: /shipping/v2/shipments/directPurchase
    method: POST
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: getTracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: shipping_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: rates
    params: {}
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
    data_selector: requestBody
- name: cancel_shipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
    data_selector: requestBody
- name: oneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
    data_selector: requestBody
- name: shipping_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: requestBody
- name: Get Access Token
  endpoint:
    method: POST
    path: /auth/o2/token
- name: Get Shipping Rates - OFF-Amazon
  endpoint:
    method: POST
    path: /shipping/v2/shipments/rates
- name: Get Shipping Rates - ON-Amazon
  endpoint:
    method: POST
    path: /shipping/v2/shipments/rates
- name: Purchase Shipment
  endpoint:
    method: POST
    path: /shipping/v2/shipments
- name: Access Points API
  endpoint:
    method: GET
    path: /shipping/v2/accessPoints
- name: Get Shipping Rates - OFF-Amazon With AccessPointId
  endpoint:
    method: POST
    path: /shipping/v2/shipments/rates
- name: shipments
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: documents
  endpoint:
    path: /shipping/v2/shipments/<ShipmentID>/documents
    method: GET
- name: tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: accessPoints
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
- name: Get Access Token
  endpoint:
    path: /auth/o2/token
    method: POST
    data_selector: ''
    params: {}
- name: Access Points API
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
    data_selector: ''
    params:
      accessPointTypes: HELIX
      countryCode: GB
      postalCode: DESTINATIONPOSTCODEHERE
- name: Smart Purchase Shipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: Get Shipment Tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
    params:
      carrierId: CARRIERIDHERE
      trackingId: TRACKINGIDHERE
- name: Get Shipment Documents
  endpoint:
    path: /shipping/v2/shipments/SHIPMENTID/documents
    method: GET
    params:
      packageClientReferenceId: CLIENTREFID
      format: DOCFORMAT
- name: Cancel Shipment
  endpoint:
    path: /shipping/v2/shipments/SHIPMENTIDHERE/cancel
    method: PUT
- name: Shipping API
  endpoint:
    path: /shipping-api/v2
    method: POST
    data_selector: records
- name: GetRatesV2
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: PurchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: OneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: GetTrackingV2
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: GetShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: CancelShipmentV2
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: shipping_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
    data_selector: rates
    params: {}
- name: getRatesV2
  endpoint:
    path: /getRatesV2
    method: POST
    data_selector: payload
- name: purchase_shipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: cancel_shipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: one_click_shipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: retrieve_shipping_rates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: shipments
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: shipment_documents
  endpoint:
    path: /shipping/v2/shipments/<ShipmentID>/documents
    method: GET
- name: tracking
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: access_points
  endpoint:
    path: /shipping/v2/accessPoints
    method: GET
- name: getRates
  endpoint:
    path: /getRates
    method: POST
    data_selector: rates
    params: {}
- name: OneClickShipment
  endpoint:
    path: /OneClickShipment
    method: POST
    data_selector: shipment
    params: {}
- name: GetRatesV2
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: PurchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: OneClickShipment
  endpoint:
    path: /shipping/v2/oneClickShipment
    method: POST
- name: GetTrackingV2
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: GetShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: CancelShipmentV2
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: getAdditionalInputs
  endpoint:
    path: /shipping/v2/shipments/additionalInputs/schema
    method: GET
- name: getRates
  endpoint:
    path: /shipping/v2/shipments/rates
    method: POST
- name: purchaseShipment
  endpoint:
    path: /shipping/v2/shipments
    method: POST
- name: cancelShipment
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/cancel
    method: PUT
- name: getShipmentDocuments
  endpoint:
    path: /shipping/v2/shipments/{shipmentId}/documents
    method: GET
- name: getTrackingV2
  endpoint:
    path: /shipping/v2/tracking
    method: GET
- name: getRatesV2
  endpoint:
    path: /getRatesV2
    method: POST
    data_selector: payload
    params: {}
- name: getRates
  endpoint:
    path: /getRates
    method: POST
    data_selector: rates
    params: {}
- name: OneClickShipment
  endpoint:
    path: /OneClickShipment
    method: POST
    data_selector: shipment
    params: {}
notes:
- Integration with the Amazon Shipping API requires proper authorization setup.
- 'Default Quota: 5 Requests Per Second'
- Default quota is 5 requests per second
- The API supports various document formats and types.
- The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits
  that were applied to the requested operation.
- You must complete the purchase within **10 minutes** of rate creation by the shipping
  service provider.
- The request schema for the purchaseShipment operation requires rateId and requestToken.
- If you sell on Amazon, contact your account manager for guidance on the appropriate
  procedure.
- This document is applicable to US, EU and India shippers who are not selling on
  the Amazon Marketplace.
- Ensure to follow the naming convention - AmazonShipping_{ShipperName} e.g. AmazonShipping_FeestCarter
- Developers using getShipment API would need to use RDT
- Direct-to-Consumer Shipping is a restricted role. Restricted roles allow access
  to Personally Identifiable Information (PII) about Amazon Buyers (which is accessible
  via the Shipping APIs) so you will be required to provide additional information
  about your data use and security controls.
- You are not required to create an Amazon Seller Account to call the Shipping APIs.
- Amazon does not allow for API credentials to be externalized and then used in third-party
  applications.
- Ensure to follow the naming convention - AmazonShipping_{ShipperName}
- Developers using getShipment API would need to use RDT for restricted data
- OAuth authorization model based on Login with Amazon
- Direct-to-Consumer Shipping is a restricted role. Restricted roles allow access
  to Personally Identifiable Information (PII) about Amazon Buyers.
- An LWA authorization code expires after five minutes. Be sure to exchange it for
  an LWA refresh token before it expires.
- After an access token is issued it is valid for one hour.
- Amazon Shipping labels generated for Amazon marketplace orders (On-Amazon) using
  the SmartPurchase API do not include Amazon Buy Shipping protections.
- 'It is recommended to use the Tutorial: Purchase a Shipment From a Rate instead.'
- Amazon Shipping labels generated for Amazon marketplace orders do not include Amazon
  Buy Shipping protections.
- The shipTo field is required when the channelType is not Amazon.
- The valueAddedServicesDetails field is deprecated.
- HTTPS is a mandatory requirement for webhook URLs used with the Push Notification
  Tracking feature.
- Push notifications are enabled via webhook URL.
- It takes 7-10 business days to enable the push notifications post receiving the
  details.
- Each shipment is limited to a single package.
- Requires x-amzn-shipping-business-id header for requests
- Requires setup of connected app in API
- You must complete the purchase within 10 minutes of the creation of the rate by
  the shipping service provider.
- Requires x-amzn-shipping-business-id in request headers
- Inputs such as serviceId and currency would differ based on marketplace.
- Requires setup of API credentials in the dashboard
- Rate calculations may vary based on additional parameters
- This operation is not unavailable for Direct Fulfillment shipments.
- Use the requestToken from getRates response to call getAdditionalInputs.
- This operation only returns a response for packages shipped with Amazon, and is
  unavailable for Direct Fulfillment shipments.
- You can retrieve tracking details for up to 45 days after the shipment creation
  date.
- Carrier cancellation windows vary.
- The cancelShipment operation is not available for Direct Fulfillment shipments.
- If the request is made after 10 minutes of rate creation, the error code TOKEN_EXPIRED
  will be returned.
- Enrollment in an eligible program is required.
- A selling partner account is required if you are an Amazon seller or are working
  with an Amazon seller to create and manage shipments.
- Authorization from the selling partner for whom you are making calls is needed.
- Each dangerous goods shipment is limited to a single package.
- Packages are always input, stored, and output in list form.
- If you have multiple warehouse enabled in your account please make sure that your
  shipFrom address is updated properly.
- Before proceeding with Dangerous Goods shipping, we highly recommend that you thoroughly
  review our Frequently Asked Questions (FAQs) section.
- Always remember to collect the UNID and HTRC for all DG items (Limited Quantity
  and Battery)
- isHazmat parameter is mandatory for both Battery and LQ UNIDs
- This operation is not available for Direct Fulfillment shipments.
- Can retrieve tracking details for up to 45 days after the shipment creation date.
- This feature will only be available for India (IN) market now.
- Always remember to collect the UNID and HTRC for all DG items ( Limited Quantity
  and Battery)
- isHazmat parameter is mandatory for both Battery and LQ UNIDs.
- Make Amazon Buy Shipping the default shipping service
- Show FBM Ship+ indicators prominently on FBM Ship+ orders
- Updated 23 days ago
- Before proceeding with Dangerous Goods shipping, we highly recommend that you thoroughly
  review our Frequently Asked Questions (FAQs) section. This resource contains crucial
  information about eligibility, requirements, and best practices for shipping permissible
  dangerous goods with Amazon Shipping.
- This guide is for developers who want to create applications for selling partners.
- The way you check the status of your request varies slightly depending on the type
  of the application.
- An LWA authorization code expires after five minutes.
- An access token is valid for one hour.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Your application must be in published status for the Webstore authorization workflow
  to work.
- If you include the version=beta parameter, the workflow authorizes an application
  in Draft state.
- Requires OAuth2 setup for application access
- If you are creating a public application to be authorized by selling partners, go
  to Authorizing Selling Partner API applications.
- These instructions show you how to generate a Java SDK for the Sellers API using
  Swagger Code Generator.
- A generated client library does not contain code for LWA token exchange and authentication.
- An LWA access token must be included in calls to all operations except restricted
  operations, which return Personally Identifiable Information (PII).
- Authorization model based on Login with Amazon, which is an implementation of OAuth
  2.0.
- The mws_auth_token parameter is only passed when the selling partner is authorizing
  a hybrid Selling Partner API (SP-API) application.
- Include a User-Agent header in all requests
- Sandbox environments are for testing functionality, not scalability testing.
- 'Calls to sandbox endpoints are subject to throttling limits: rate = five requests
  per second; burst = 15.'
- An access token obtained through this token exchange must be included with calls
  to all Selling Partner API operations except restricted operations and grantless
  operations.
- The API operations and types permitted by the Direct to Consumer Shipping (Restricted)
  role.
- An LWA access token expires one hour after it is issued.
- For restricted operations, include a Restricted Access Token instead of an LWA access
  token.
- Application registration is an irreversible process that changes the authorization
  model.
- Make sure that you have implemented OAuth authorization before registering your
  application.
- API reliability depends on sizing your capacity and resources to meet the changing
  needs of applications over time.
- Requests are rate limited using the token bucket algorithm.
- If your application is consistently throttled, it might mean that your call patterns
  could be further optimized.
- Roles protect access to personally identifiable information (PII) and other sensitive
  data.
- There is a folder under this collection using Deliver to Counter APIs, which is
  only available for OFF-Amazon volume and ready to use in AmazonShipping_UK market
  for now.
- Valid API credentials (either Sandbox or Production application) required.
- 'Required access permissions: ‘Amazon Logistics’ role for OFF-Amazon usage or ‘Direct
  To Consumer’ role for Hybrid.'
- Ensure labels are printed accurately to avoid issues with label scanning.
- Valid API credentials (either Sandbox or Production application) are required.
- Required access permissions include ‘Amazon Logistics’ role for OFF-Amazon usage
  or ‘Direct To Consumer’ role for Hybrid scenarios.
- The Amazon Shipping system requires scheduled pickups for your shipper account before
  allowing label generation.
- Works only with UK Market for now
- Works only with GB Market for now
- Access Token expires 1 hour after generation.
- Refresh Token does not expire.
- Ensure to have the header ['x-amzn-shipping-business-id'] in the getRates and purchaseShipment
  requests to get the marketplace specific response.
- ShipDate in the request must be in the future.
- Providing a past date or timestamp will result in an error response.
- Valid API credentials required (either Sandbox or Production application).
- DRAF should be filled out by your IT/Technical team after thoroughly going through
  Amazon’s policies.
- The feature is only available via Amazon Shipping APIs.
- Seller name can be displayed only for OFF amazon label creation.
- Supports both ON and OFF Amazon Shipping needs
- Dynamic sandbox available with V2 API provides developers the ability to build and
  test the application prior to production deployment
- Access Token expires 1 hour after it is generated.
- Refresh Token doesn't expire.
- Our Sandbox environment is undergoing updates, Service Ids in sandbox environment
  may be different e.g. SWA-UK-PRIME-PREM and SWA-UK-ECON.
- The shipDate parameter is optional; if not passed, the system calculates the pick-up/delivery
  windows based on the timestamp of the API request.
- If passing the shipDate parameter, it is mandatory it should be a future date and
  timestamp.
- Channel Type = AMAZON for ON AMAZON label request
- DPI is required in the purchaseShipment request.
- For PNG DPI, the DPI tag should be omitted from the purchaseShipment request.
- The sellerDisplayName field is optional in the GetRates and OneClickShipment API
  request.
- 1P customers must perform Self-Authorization to exchange data with Amazon.
- 3P customers must build an Authorization flow to exchange data between Amazon and
  the shipper.
errors:
- '400: Request has missing or invalid parameters and cannot be parsed.'
- '401: The request''s Authorization header is not formatted correctly or does not
  contain a valid token.'
- '403: Indicates that access to the resource is forbidden.'
- '404: The resource specified does not exist.'
- '413: The request size exceeded the maximum accepted size.'
- '415: The request payload is in an unsupported format.'
- '429: The frequency of requests was greater than allowed.'
- '500: An unexpected condition occurred that prevented the server from fulfilling
  the request.'
- '503: Temporary overloading or maintenance of the server.'
- '403: Indicates that access to the resource is forbidden. Possible reasons include
  Access Denied, Unauthorized, Expired Token, or Invalid Signature.'
- 'InvalidRequest: Request has missing or invalid parameters and cannot be parsed.'
- 'Unauthorized: The request''s Authorization header is not formatted correctly or
  does not contain a valid token.'
- 'Forbidden: Indicates that access to the resource is forbidden. Possible reasons
  include Access Denied, Unauthorized, Expired Token, or Invalid Signature.'
- 'NotFound: The resource specified does not exist.'
- 'TooManyRequests: The frequency of requests was greater than allowed.'
- 'InternalError: An unexpected condition occurred that prevented the server from
  fulfilling the request.'
- 'InvalidRequest: Request is missing or has invalid parameters'
- 'Unauthorized: You don''t have access to the requested response or the credentials
  are invalid.'
- 'NotFound: The requested resource is invalid or doesn''t exist'
- 'TooManyRequests: The total number of requests exceeded your allowed limit.'
- 'InternalError: Something went wrong while processing the request.'
- 'ServiceUnavailable: Service temporarily unavailable or down for maintenance.'
- 'ServiceUnavailable: Service temporarily unavailable or down for maintenance. Please
  try again after sometime.'
- 'InvalidRequest: The request payload size is greater than maximum accepted size.'
- 'InvalidRequest: The request payload format is not supported.'
- 'Unauthorized: You don''t have access to the requested resource or the credentials
  are invalid.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: The request''s Authorization header is not formatted correctly
  or does not contain a valid token.'
- 'INVALID_REQUEST: Ensure all required fields are present'
- 'NOT_AUTHORIZED: Check your authentication credentials'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check access token validity'
- '429 Too Many Requests: Rate limit exceeded'
- In the event of a system outage, shippers can request previous notifications through
  two methods.
- 'TOKEN_EXPIRED: You must get the rates for the shipment again.'
- '401 Unauthorized: Check token validity.'
- '401 Unauthorized: Check x-amz-access-token validity'
- '401 Unauthorized: Check API credentials and token validity'
- '400 Bad Request: Ensure all required parameters are included'
- '500 Internal Server Error: Retry the request after some time'
- 'InvalidInput: Cancellation failed as shipment is in ineligible state.'
- 'TOKEN_EXPIRED: Request must be made within 10 minutes of rate creation.'
- '400 Bad Request: Validate the request parameters and structure.'
- '401 Unauthorized: Check the access token and permissions.'
- '403 Forbidden: Ensure that the API access is granted for the account.'
- '200: Empty Object Body'
- Access Denied with an x-amzn-errortype of AccessDeniedException.
- '{"error_description": "Client authentication failed", "error": "invalid_client"}'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '403 Forbidden: Check permissions or credentials'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Retry the request'
- '{ "error_description": "Client authentication failed", "error": "invalid_client"
  }'
- 'Unauthorized: Access to requested resource is denied.'
- 'InvalidAuthorizationCode: Ensure the authorization code is valid and has not expired.'
- 'AccessDenied: Check the permissions granted by the selling partner.'
- 'Unauthorized: Access token is missing in the request header.'
- '429: Throttled request, retry after backoff.'
- 'HTTP Status Code: 200 OK: Response contains a list of available shipping rates
  with service IDs and charges with unique rate ID.'
- '429: Too Many Requests - retry after backoff'
- Throttle API calls or reduce frequency
- 'S-503: We cannot ship the order because there are no upcoming pickup slots available.'
- 'TOKEN_EXPIRED: The provided token is expired.'
- Incorrect itemIdentifier was detected in the item list.
- Access to requested resource is denied
- Unauthorized
- MissingAuthenticationToken
- 'HTTP Status Code: 200 OK expected for successful requests.'
- 'INVALID_REQUEST: ShipDate in the request XXXX-XX-XXTxx:xx:xxZ is in the past. Please
  pass a ship date in the future'
- 'HTTP Status Code: 200 OK'
- Response contains Shipment ID, Tracking ID and Package Document Details with label
  details in base64 format.
- '429 Too Many Requests: The API should return a 429 error when the limit is exceeded.'
- Incorrect itemIdentifier was detected in the item list
- 'errorCode: INVALID_REQUEST, errorMessage: ShipDate in the request XXXX-XX-XXTxx:xx:xxZ
  is in the past. Please pass a ship date in the future'
- Access to requested resource is denied.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - OAuthToken
  - x-amzn-shipping-business-id
  - x-amz-access-token
  - AmazonShipping_UK
  - Login with Amazon
  - LWA
  - OAuth Redirect URI
  - Selling Partner API
  - refresh token
  - access token
  - LWAAuthorizationCredentials
  - SellersApi
  - LWA access token
  - Restricted Access Token
  - Access Token
  - Refresh Token
  - Direct-to-Consumer Shipping role
  - Amazon Logistics role
client:
  base_url: https://shipping.amazon.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
