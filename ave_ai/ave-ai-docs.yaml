resources:
- name: tokens
  endpoint:
    path: /v2/tokens
    method: GET
    data_selector: data
    params:
      keyword: keyword
      chain: chain
      limit: '100'
- name: token_prices
  endpoint:
    path: /v2/tokens/price
    method: POST
    data_selector: data
    params:
      token_ids: list of token ids
      tvl_min: '1000'
      tx_24h_volume_min: '0'
- name: ranks_topics
  endpoint:
    path: /v2/ranks/topics
    method: GET
    data_selector: data
    params: {}
- name: rank_token_list
  endpoint:
    path: /v2/ranks
    method: GET
    data_selector: data
    params:
      topic: topic
      limit: '200'
- name: search_token
  endpoint:
    path: /v2/tokens
    method: GET
    params:
      keyword: ''
      chain: ''
      limit: 100
- name: get_token_prices
  endpoint:
    path: /v2/tokens/price
    method: POST
    params:
      token_ids: []
      tvl_min: 1000
      tx_24h_volume_min: 0
- name: get_token_rank_topics
  endpoint:
    path: /v2/ranks/topics
    method: GET
- name: get_rank_token_list_by_topic
  endpoint:
    path: /v2/ranks
    method: GET
    params:
      topic: ''
      limit: 200
- name: get_token_detail
  endpoint:
    path: /v2/tokens/{token-id}
    method: GET
    data_selector: data.token
    params: {}
- name: get_kine_data_by_pair
  endpoint:
    path: /v2/klines/pair/{pair-id}
    method: GET
    data_selector: data.points
    params:
      interval: 1
- name: token_detail
  endpoint:
    path: /v2/tokens/{token-id}
    method: GET
    data_selector: data.token
    params:
      token_id: '{token}-{chain}'
- name: kine_data
  endpoint:
    path: /v2/klines/pair/{pair-id}
    method: GET
    data_selector: data.points
    params:
      pair_id: '{pair}-{chain}'
      interval: '1'
      size: '5'
- name: kine_data_by_token
  endpoint:
    path: /klines/token/{token-id}
    method: GET
    data_selector: data.points
    params:
      interval: '1'
      size: '5'
- name: token_top100_holders
  endpoint:
    path: /tokens/top100/{token-id}
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: swap_transactions_by_pair
  endpoint:
    path: /txs/{pair-id}
    method: GET
    data_selector: data.txs
    params:
      limit: '2'
- name: supported_chains
  endpoint:
    path: /supported_chains
    method: GET
    data_selector: data
- name: kine_data_by_token
  endpoint:
    path: /klines/token/{token-id}
    method: GET
    params:
      interval: '{interval}'
      size: '{size}'
- name: token_top100_holders
  endpoint:
    path: /tokens/top100/{token-id}
    method: GET
    params:
      limit: 100
- name: swap_transactions_by_pair
  endpoint:
    path: /txs/{pair-id}
    method: GET
    params:
      limit: '{limit}'
      size: '{size}'
      to_time: '{to_time}'
- name: supported_chains
  endpoint:
    path: /supported_chains
    method: GET
- name: main_tokens
  endpoint:
    path: /tokens/main
    method: GET
    data_selector: data
    params:
      chain: '{chain_name}'
- name: trending_list
  endpoint:
    path: /tokens/trending
    method: GET
    data_selector: data.tokens
    params:
      chain: '{chain_name}'
      current_page: 0
      page_size: 50
- name: contract_risk_detection_report
  endpoint:
    path: /contracts/{token-id}
    method: GET
    data_selector: data
    params: {}
- name: chain_main_tokens
  endpoint:
    path: /tokens/main
    method: GET
    data_selector: data
    params:
      chain: '{chain_name}'
- name: chain_trending_list
  endpoint:
    path: /tokens/trending
    method: GET
    data_selector: data.tokens
    params:
      chain: '{chain_name}'
      current_page: 0
      page_size: 50
- name: contract_risk_detection_report
  endpoint:
    path: /v2/contracts/{token-id}
    method: GET
    data_selector: data
    params:
      token_id: '{token}-{chain}'
- name: tokens
  endpoint:
    path: /tokens/{token}-{chain}
    method: GET
- name: search_tokens
  endpoint:
    path: /tokens
    method: GET
- name: pairs
  endpoint:
    path: /tokens/{token}/pairs
    method: GET
- name: kline
  endpoint:
    path: /pairs/{pair}/kline
    method: GET
- name: tokens
  endpoint:
    path: /tokens/{token}-{chain}
    method: GET
    data_selector: data
    params: {}
- name: search_tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: data
    params: {}
- name: pairs
  endpoint:
    path: /tokens/{token}/pairs
    method: GET
    data_selector: data
    params: {}
- name: kline
  endpoint:
    path: /pairs/{pair}/kline
    method: GET
    data_selector: data
    params: {}
- name: pair_transactions
  endpoint:
    path: /api/v1/pairs/{pair}/tx
    method: GET
    params:
      size: Int
- name: pair_liquidity
  endpoint:
    path: /api/v1/pairs/{pair}/liq
    method: GET
    params:
      size: Int
- name: amm_pair_list
  endpoint:
    path: /api/v1/amm/{amm}-{chain}
    method: GET
    params:
      limit: Int
- name: contract_check
  endpoint:
    path: /api/v1/contract_check/{chain}/{contract}
    method: GET
    data_selector: data
    params: {}
- name: pair_transactions
  endpoint:
    path: /api/v1/pairs/{pair}/tx
    method: GET
    data_selector: data
    params:
      size: '200'
- name: pair_liquidity
  endpoint:
    path: /api/v1/pairs/{pair}/liq
    method: GET
    data_selector: data
    params:
      size: '200'
- name: amm_pair_list
  endpoint:
    path: /api/v1/amm/{amm}-{chain}
    method: GET
    data_selector: data.list
    params:
      limit: '200'
- name: contract_check
  endpoint:
    path: /api/v1/contract_check/{chain}/{contract}
    method: GET
    params: {}
notes:
- Uses OAuth2 with refresh token â€” requires setup of connected app in Ave.ai
- Requires setup of connected app in ave.ai
- Last updated 3 months ago
- Can only set one token in each telegram group
- We offer competitive rewards and clear advancement paths, providing you with a great
  opportunity to grow in the crypto space.
- Any request that doesn't include an API key will return an error.
- Query parameter token_id is required in the format {token}-{chain}.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request The parameters may be invalid'
- '401: Unauthorized Ave-auth does not exist or is not correct'
- '404: Not Found Such token is not found'
- '403: Forbidden The limit of this API has been reached'
- '404: Not Found Such pair does not exist'
- '500: Internal Server Error Some unknown error occurred'
- '404: Not Found The contract check does not exist'
auth_info:
  mentioned_objects: []
client:
  base_url: https://openapi.avedata.org
  auth:
    type: apikey
    location: header
    header_name: Ave-Auth
source_metadata: null
