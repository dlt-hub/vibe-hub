resources:
- name: list_entries
  endpoint:
    path: /api/projects/:projectId/entries
    method: GET
    data_selector: entries
- name: retrieve_entry
  endpoint:
    path: /api/projects/:projectId/entries/:entryId
    method: GET
    data_selector: entry
- name: create_entry
  endpoint:
    path: /api/projects/:projectId/entries
    method: POST
    data_selector: entry
- name: update_entry
  endpoint:
    path: /api/projects/:projectId/entries/:entryId
    method: PUT
    data_selector: entry
- name: delete_entry
  endpoint:
    path: /api/projects/:projectId/entries/:entryId
    method: DELETE
    data_selector: entry
- name: content
  endpoint:
    path: /api/projects/:projectId/content
    method: POST
    data_selector: entries
- name: content
  endpoint:
    path: /api/projects/:projectId/content
    method: POST
    data_selector: entries
- name: content
  endpoint:
    path: /api/projects/:projectId/content
    method: post
- name: content_search
  endpoint:
    path: /api/projects/:projectId/content/search
    method: GET
    params:
      query: john+wick
- name: entries_by_id
  endpoint:
    path: /api/projects/:projectId/content
    method: POST
    data_selector: entries
    params:
      projectId: Your project ID
- name: entries_by_template
  endpoint:
    path: /api/projects/:projectId/content
    method: POST
    data_selector: entries
    params:
      projectId: Your project ID
- name: entries_by_nested_value
  endpoint:
    path: /api/projects/:projectId/content
    method: POST
    data_selector: entries
    params:
      projectId: Your project ID
- name: entries_with_multiple_conditions
  endpoint:
    path: /api/projects/:projectId/content
    method: POST
    data_selector: entries
    params:
      projectId: Your project ID
- name: search_entries
  endpoint:
    path: /api/projects/:projectId/content/search
    method: POST
    data_selector: entries
    params:
      projectId: string
      query: string
- name: search_entries
  endpoint:
    path: /api/projects/:projectId/content/search
    method: POST
    data_selector: entries
    params:
      projectId: your project ID
      query: the query parameter to set in the URL
- name: logs
  endpoint:
    path: /api/projects/:projectId/logs
    method: GET
    data_selector: response
    params:
      projectId: string
- name: logs
  endpoint:
    path: /api/projects/:projectId/logs
    method: GET
    data_selector: logs
    params:
      projectId: string
- name: list_templates
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: GET
- name: retrieve_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: GET
- name: create_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: POST
- name: update_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: PUT
- name: delete_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: DELETE
- name: clone_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: POST
- name: list_templates
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: DELETE
- name: retrieve_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: DELETE
- name: create_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: DELETE
- name: update_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: DELETE
- name: delete_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: DELETE
- name: clone_template
  endpoint:
    path: /api/projects/:projectId/types/:templateId/clone
    method: DELETE
- name: components
  endpoint:
    path: /api/projects/:projectId/types/:componentId/clone
    method: GET
    data_selector: message
    params: {}
- name: clone_component
  endpoint:
    path: /api/projects/:projectId/types/:componentId/clone
    method: GET
    data_selector: message
    params: {}
- name: languages
  endpoint:
    path: /api/projects/:projectId/languages/:languageId
    method: DELETE
    data_selector: message
    params: {}
- name: languages
  endpoint:
    path: /api/projects/:projectId/languages/:languageId
    method: DELETE
    data_selector: message
    params: {}
- name: releases
  endpoint:
    path: /api/projects/:projectId/releases/:releaseId/deploy
    method: DELETE
    data_selector: message
    params: {}
- name: releases
  endpoint:
    path: /api/projects/:projectId/releases/:releaseId/deploy
    method: DELETE
    data_selector: message
    params: {}
- name: environments
  endpoint:
    path: /api/projects/:projectId/environments/:environmentId
    method: DELETE
    data_selector: message
    params: {}
- name: environments
  endpoint:
    path: /api/projects/:projectId/environments/:environmentId
    method: DELETE
- name: webhooks
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: webhook_endpoints
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: api_keys
  endpoint:
    path: /api/projects/:projectId/api-keys/:apiKeyId
    method: DELETE
    data_selector: null
    params: {}
- name: list_api_keys
  endpoint:
    path: /api/projects/:projectId/api-keys
    method: GET
    data_selector: null
    params: {}
- name: retrieve_api_key
  endpoint:
    path: /api/projects/:projectId/api-keys/:apiKeyId
    method: GET
    data_selector: null
    params: {}
- name: create_api_key
  endpoint:
    path: /api/projects/:projectId/api-keys
    method: POST
    data_selector: null
    params: {}
- name: update_api_key
  endpoint:
    path: /api/projects/:projectId/api-keys/:apiKeyId
    method: PUT
    data_selector: null
    params: {}
- name: project_tokens
  endpoint:
    path: /api/projects/:projectId/tokens/:tokenId
    method: DELETE
    data_selector: message
    params: {}
- name: workflows
  endpoint:
    path: /api/projects/:projectId/workflows/:workflowId
    method: DELETE
    data_selector: message
    params: {}
- name: list_webhooks
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: create_webhook
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: update_webhook
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: list_webhook_endpoints
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: retrieve_webhook_endpoint
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: create_webhook_endpoint
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: update_webhook_endpoint
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: delete_webhook_endpoint
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: attach_endpoint_to_webhook
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: detach_endpoint_from_webhook
  endpoint:
    path: /api/projects/:projectId/webhooks/:webhookId
    method: PATCH
    data_selector: message
    params: {}
- name: project_users
  endpoint:
    path: /api/projects/:projectId/users/:projectUserId
    method: DELETE
    data_selector: message
    params: {}
- name: api_key
  endpoint:
    path: /api/projects/:projectId/api-keys/:apiKeyId
    method: DELETE
    data_selector: message
    params: {}
- name: remove_group_member
  endpoint:
    path: /api/projects/:projectId/roles/:roleId/members/:projectUserId
    method: DELETE
    data_selector: message
    params: {}
- name: project_tokens
  endpoint:
    path: /api/projects/:projectId/tokens/:tokenId
    method: DELETE
    data_selector: message
    params: {}
- name: project_logs
  endpoint:
    path: /api/projects/:projectId/logs/:logId
    method: GET
    data_selector: logs
    params: {}
- name: workflows
  endpoint:
    path: /api/projects/:projectId/workflows/:workflowId
    method: DELETE
    data_selector: message
    params: {}
- name: project
  endpoint:
    path: /api/projects/:projectId
    method: DELETE
    data_selector: message
    params: {}
notes:
- The API allows developers to build search into their applications without the need
  of using a 3rd-party service.
- This API is read-only and authorization is granted via project tokens that are attached
  to environments.
- The Search API is read-only and authorization is granted via project tokens that
  are attached to environments.
- Authenticate with the Admin API by providing your API key ID and API key secret
  in the Authorization header.
- Deleting a template will also delete all entries associated with the template.
- Deleting a component will also remove it from all associated entries.
- Uses API key for authentication
- Releases in Type CMS enable bulk content publishing and unpublishing via a single
  interface or API.
- Webhook updated successfully
- API keys cannot be used to fetch or query content.
- Deleting a group will not remove the group members from your project.
- Project tokens are read-only and used to fetch published content.
- Tokens can be associated with environments and can be restricted by IP address,
  custom headers, or a secret.
- Deletes a workflow. This will also cancel any workflows currently in progress for
  associated entries.
- This action cannot be undone. Only project owners can delete a project.
errors:
- 'Unauthorized: Check API key and secret'
- Successfully deleted content token
- '401 Unauthorized: Only project owners can delete a project.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.typecms.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
