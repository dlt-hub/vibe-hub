resources:
- name: project_list
  endpoint:
    path: /json/project/list
    method: GET
    data_selector: result
- name: project_list_and_count
  endpoint:
    path: /json/project/listAndCount
    method: GET
    data_selector: result.response
    params: {}
- name: project_get_one
  endpoint:
    path: /json/project/getProject/:id
    method: GET
    data_selector: result
    params: {}
- name: project_defaults
  endpoint:
    path: /json/project/defaults
    method: GET
    data_selector: result
    params: {}
- name: project_create
  endpoint:
    path: /json/project/create
    method: POST
    data_selector: result._id
    params: {}
- name: project_duplicate
  endpoint:
    path: /json/project/duplicate/:id
    method: GET
    data_selector: result._id
    params: {}
- name: project_create_from_own
  endpoint:
    path: /json/project/createFromOwn
    method: POST
    data_selector: result
    params: {}
- name: project_create_from_defaults
  endpoint:
    path: /json/project/createFromDefaults
    method: POST
    data_selector: result
    params: {}
- name: project_update_info
  endpoint:
    path: /json/project/updateInfo
    method: POST
    data_selector: result
    params: {}
- name: project_remove
  endpoint:
    path: /json/project/remove/:id
    method: DELETE
    data_selector: result
    params: {}
- name: project_generate_html
  endpoint:
    path: /json/project/generate/:id
    method: GET
    data_selector: result
    params: {}
- name: user_getOne
  endpoint:
    path: /json/user/getOne/:id
    method: GET
    data_selector: user object
- name: user_delete
  endpoint:
    path: /json/user/delete/:id
    method: DELETE
    data_selector: user object
- name: listAndCountProjects
  endpoint:
    path: /json/project/listAndCount
    method: GET
- name: getProject
  endpoint:
    path: /json/project/getProject/:id
    method: GET
- name: getDefaultTemplates
  endpoint:
    path: /json/project/defaults
    method: GET
- name: createProject
  endpoint:
    path: /json/project/create
    method: POST
- name: duplicateProject
  endpoint:
    path: /json/project/duplicate/:id
    method: GET
- name: createFromOwn
  endpoint:
    path: /json/project/createFromOwn
    method: POST
- name: createFromDefaults
  endpoint:
    path: /json/project/createFromDefaults
    method: POST
- name: updateProjectInfo
  endpoint:
    path: /json/project/updateInfo
    method: POST
- name: removeProject
  endpoint:
    path: /json/project/remove/:id
    method: DELETE
- name: generateProject
  endpoint:
    path: /json/project/generate/:id
    method: GET
- name: openProject
  endpoint:
    path: /json/project/open/:id
    method: GET
- name: listUsers
  endpoint:
    path: /json/user/list
    method: GET
- name: createUser
  endpoint:
    path: /json/user/create
    method: POST
- name: user_getOne
  endpoint:
    path: /json/user/getOne/:id
    method: GET
- name: user_update
  endpoint:
    path: /json/user/update/:id
    method: GET
- name: user_delete
  endpoint:
    path: /json/user/delete/:id
    method: DELETE
- name: listProjects
  endpoint:
    path: /json/project/list
    method: GET
    data_selector: result
    params: {}
- name: listAndCountProjects
  endpoint:
    path: /json/project/listAndCount
    method: GET
    data_selector: result
    params: {}
- name: project_list
  endpoint:
    path: /json/project/list
    method: GET
    data_selector: result
    params:
      id: userId
- name: listAndCountProjects
  endpoint:
    path: /json/project/listAndCount
    method: GET
    data_selector: response
    params: {}
- name: getProject
  endpoint:
    path: /json/project/getProject/:id
    method: GET
    data_selector: result
    params: {}
- name: getDefaultTemplates
  endpoint:
    path: /json/project/defaults
    method: GET
    data_selector: result
    params: {}
- name: createProject
  endpoint:
    path: /json/project/create
    method: POST
    data_selector: result
    params: {}
- name: duplicateProject
  endpoint:
    path: /json/project/duplicate/:id
    method: GET
    data_selector: result
    params: {}
- name: createFromOwn
  endpoint:
    path: /json/project/createFromOwn
    method: POST
    data_selector: result
    params: {}
- name: createFromDefaults
  endpoint:
    path: /json/project/createFromDefaults
    method: POST
    data_selector: result
    params: {}
- name: updateProjectInfo
  endpoint:
    path: /json/project/updateInfo
    method: POST
    data_selector: result
    params: {}
- name: removeProject
  endpoint:
    path: /json/project/remove/:id
    method: DELETE
    data_selector: result
    params: {}
- name: generateProject
  endpoint:
    path: /json/project/generate/:id
    method: GET
    data_selector: result
    params: {}
- name: openProject
  endpoint:
    path: /json/project/open/:id
    method: GET
    data_selector: result
    params: {}
- name: listUsers
  endpoint:
    path: /json/user/list
    method: GET
    data_selector: result
    params: {}
- name: createUser
  endpoint:
    path: /json/user/create
    method: POST
    data_selector: result
    params: {}
- name: user_getOne
  endpoint:
    path: /json/user/getOne/:id
    method: GET
- name: user_update
  endpoint:
    path: /json/user/update/:id
    method: GET
- name: user_delete
  endpoint:
    path: /json/user/delete/:id
    method: DELETE
- name: project_list_and_count
  endpoint:
    path: /json/project/listAndCount
    method: GET
    data_selector: result.response
    params:
      :id: user_id
- name: project_get_one
  endpoint:
    path: /json/project/getProject/:id
    method: GET
    data_selector: result
    params:
      :id: user_id
- name: project_defaults
  endpoint:
    path: /json/project/defaults
    method: GET
    data_selector: result
    params:
      :id: user_id
- name: project_create
  endpoint:
    path: /json/project/create
    method: POST
    data_selector: result._id
    params:
      :id: user_id
- name: project_duplicate
  endpoint:
    path: /json/project/duplicate/:id
    method: GET
    data_selector: result._id
    params:
      :id: project_id
- name: project_create_from_own
  endpoint:
    path: /json/project/createFromOwn
    method: POST
    data_selector: result
    params:
      :id: user_id
- name: project_create_from_defaults
  endpoint:
    path: /json/project/createFromDefaults
    method: POST
    data_selector: result
    params:
      :id: user_id
- name: project_update_info
  endpoint:
    path: /json/project/updateInfo
    method: POST
    data_selector: result
    params:
      :id: user_id
- name: project_remove
  endpoint:
    path: /json/project/remove/:id
    method: DELETE
    data_selector: result
    params:
      :id: project_id
- name: project_generate_html
  endpoint:
    path: /json/project/generate/:id
    method: GET
    data_selector: result
    params:
      :id: project_id
- name: project_generate_without_sanitizing
  endpoint:
    path: /json/project/generateWithoutSanitizing
    method: GET
    data_selector: result
    params:
      :id: project_id
- name: project_open
  endpoint:
    path: /json/project/open/:id
    method: GET
    data_selector: result.iframe
    params:
      :id: project_id
- name: user_list
  endpoint:
    path: /json/user/list
    method: GET
    data_selector: result
    params:
      :id: user_id
- name: user_create
  endpoint:
    path: /json/user/create
    method: POST
    data_selector: resultUser.id
    params:
      :id: user_id
- name: user_get_one
  endpoint:
    path: /json/user/getOne/:id
    method: GET
    data_selector: resultUser
    params:
      :id: user_id
- name: token
  endpoint:
    path: /api/token
    method: POST
    data_selector: token
- name: user_getOne
  endpoint:
    path: /json/user/getOne/:id
    method: GET
- name: user_delete
  endpoint:
    path: /json/user/delete/:id
    method: DELETE
- name: create_user
  endpoint:
    path: /json/user/create
    method: POST
    data_selector: result
    params:
      user: admin
- name: project_list
  endpoint:
    path: /json/project/list
    method: GET
    data_selector: projects
- name: project_list_and_count
  endpoint:
    path: /json/project/listAndCount
    method: GET
    data_selector: projects
- name: upload_hook
  endpoint:
    path: /upload
    method: POST
    data_selector: url
- name: delete_hook
  endpoint:
    path: /delete
    method: POST
    data_selector: success
- name: listAndCountProjects
  endpoint:
    path: /json/project/listAndCount
    method: GET
- name: getProject
  endpoint:
    path: /json/project/getProject/:id
    method: GET
- name: getDefaultTemplates
  endpoint:
    path: /json/project/defaults
    method: GET
- name: createProject
  endpoint:
    path: /json/project/create
    method: POST
- name: duplicateProject
  endpoint:
    path: /json/project/duplicate/:id
    method: GET
- name: createFromOwn
  endpoint:
    path: /json/project/createFromOwn
    method: POST
- name: createFromDefaults
  endpoint:
    path: /json/project/createFromDefaults
    method: POST
- name: updateProjectInfo
  endpoint:
    path: /json/project/updateInfo
    method: POST
- name: removeProject
  endpoint:
    path: /json/project/remove/:id
    method: DELETE
- name: generateProject
  endpoint:
    path: /json/project/generate/:id
    method: GET
- name: openProject
  endpoint:
    path: /json/project/open/:id
    method: GET
- name: listUsers
  endpoint:
    path: /json/user/list
    method: GET
- name: createUser
  endpoint:
    path: /json/user/create
    method: POST
- name: addCustomStrings
  endpoint:
    path: /json/customStrings/add
    method: POST
    data_selector: customStrings
    params: {}
- name: addCustomStringsToUsers
  endpoint:
    path: /json/customStrings/addToUsers
    method: POST
    data_selector: customStrings
    params: {}
- name: addCustomStringsToGroup
  endpoint:
    path: /json/customStrings/addToGroup
    method: POST
    data_selector: customStrings
    params: {}
- name: getCustomStringsOfApiInstance
  endpoint:
    path: /json/customStrings/getCustomStringsOfApiInstance
    method: GET
    data_selector: customStrings
    params: {}
- name: getCustomStringsOfUser
  endpoint:
    path: /json/customStrings/getCustomStringsOfUser
    method: GET
    data_selector: customStrings
    params: {}
- name: getCustomStringsOfGroup
  endpoint:
    path: /json/customStrings/getCustomStringsOfGroup
    method: GET
    data_selector: customStrings
    params: {}
- name: removeCustomStringsById
  endpoint:
    path: /json/customStrings/:id
    method: DELETE
    data_selector: deletedCustomStrings
    params: {}
- name: removeCustomStringsFromUser
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:user
    method: DELETE
    data_selector: removedCustomStrings
    params: {}
- name: removeCustomStringsFromGroup
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:group
    method: DELETE
    data_selector: removedCustomStrings
    params: {}
- name: listGroups
  endpoint:
    path: /json/groups/list
    method: GET
    data_selector: groups
    params: {}
- name: createGroup
  endpoint:
    path: /json/groups/create
    method: POST
    data_selector: createdGroup
    params: {}
- name: getGroup
  endpoint:
    path: /json/groups/read/:id
    method: GET
    data_selector: group
    params: {}
- name: updateGroup
  endpoint:
    path: /json/groups/update
    method: POST
    data_selector: updatedGroup
    params: {}
- name: user_getOne
  endpoint:
    path: /json/user/getOne/:id
    method: GET
    data_selector: user
    params: {}
- name: user_update
  endpoint:
    path: /json/user/update/:id
    method: GET
    data_selector: user
    params: {}
- name: user_delete
  endpoint:
    path: /json/user/delete/:id
    method: DELETE
    data_selector: user
    params: {}
- name: projects
  endpoint:
    path: /json/project/list
    method: GET
    data_selector: result
- name: custom_strings_add
  endpoint:
    path: /json/customStrings/add
    method: POST
    params: {}
- name: custom_strings_add_to_users
  endpoint:
    path: /json/customStrings/addToUsers
    method: POST
    params: {}
- name: custom_strings_add_to_group
  endpoint:
    path: /json/customStrings/addToGroup
    method: POST
    params: {}
- name: custom_strings_get_all
  endpoint:
    path: /json/customStrings/getCustomStringsOfApiInstance
    method: GET
    params: {}
- name: custom_strings_get_user
  endpoint:
    path: /json/customStrings/getCustomStringsOfUser
    method: GET
    params: {}
- name: custom_strings_get_group
  endpoint:
    path: /json/customStrings/getCustomStringsOfGroup
    method: GET
    params: {}
- name: custom_strings_remove
  endpoint:
    path: /json/customStrings/:id
    method: DELETE
    params: {}
- name: custom_strings_remove_from_user
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:user
    method: DELETE
    params: {}
- name: custom_strings_remove_from_group
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:group
    method: DELETE
    params: {}
- name: group_list
  endpoint:
    path: /json/groups/list
    method: GET
    params: {}
- name: group_create
  endpoint:
    path: /json/groups/create
    method: POST
    params: {}
- name: group_read
  endpoint:
    path: /json/groups/read/:id
    method: GET
    params: {}
- name: group_update
  endpoint:
    path: /json/groups/update
    method: POST
    params: {}
- name: listAndCountProjects
  endpoint:
    path: /json/project/listAndCount
    method: GET
    data_selector: response
- name: getProject
  endpoint:
    path: /json/project/getProject/:id
    method: GET
    data_selector: project
- name: getDefaultTemplates
  endpoint:
    path: /json/project/defaults
    method: GET
    data_selector: result
- name: createProject
  endpoint:
    path: /json/project/create
    method: POST
    data_selector: _id
- name: duplicateProject
  endpoint:
    path: /json/project/duplicate/:id
    method: GET
    data_selector: project
- name: createFromOwn
  endpoint:
    path: /json/project/createFromOwn
    method: POST
    data_selector: newProject
- name: createFromDefaults
  endpoint:
    path: /json/project/createFromDefaults
    method: POST
    data_selector: project
- name: updateProjectInfo
  endpoint:
    path: /json/project/updateInfo
    method: POST
    data_selector: result
- name: removeProject
  endpoint:
    path: /json/project/remove/:id
    method: DELETE
    data_selector: success
- name: generateProject
  endpoint:
    path: /json/project/generate/:id
    method: GET
    data_selector: html
- name: openProject
  endpoint:
    path: /json/project/open/:id
    method: GET
    data_selector: iframe
- name: listUsers
  endpoint:
    path: /json/user/list
    method: GET
    data_selector: result
- name: createUser
  endpoint:
    path: /json/user/create
    method: POST
    data_selector: resultUser
- name: user
  endpoint:
    path: /json/user/getOne/:id
    method: GET
    data_selector: user
    params:
      :id: String
- name: user_update
  endpoint:
    path: /json/user/update/:id
    method: GET
    data_selector: user
    params:
      :id: String
      data: User
- name: user_delete
  endpoint:
    path: /json/user/delete/:id
    method: DELETE
    data_selector: user
    params:
      :id: String
- name: upload_complex_elems_to_group
  endpoint:
    path: /json/complexElem/addComplexElemToGroup
    method: POST
    params:
      groupId: String
      items: Array
- name: upload_complex_elems_to_users
  endpoint:
    path: /json/complexElem/addComplexElemToUsers
    method: POST
    params:
      userIds: Array
      items: Array
- name: upload_complex_elems_to_all_users
  endpoint:
    path: /json/complexElem/addComplexElems
    method: POST
    params:
      userIds: Array
      items: Array
- name: create_project
  endpoint:
    path: /json/project/createTo
    method: POST
    params:
      userId: String
      title: String
      description: String
      document: Object
      customData: Object
- name: create_project_from_template
  endpoint:
    path: /json/project/createFromTo
    method: POST
    params:
      userId: String
      _id: String
      title: String
      description: String
      document: Object
      customData: Object
- name: get_project
  endpoint:
    path: /json/project/getProject/:id
    method: GET
    params:
      id: String
- name: set_project
  endpoint:
    path: /json/project/setProject
    method: POST
    params:
      userId: String
      projectId: String
      documentRoot: Object
- name: download_project_as_zip
  endpoint:
    path: /json_v1.0.0/apiKey/:apiKey/user/:user/project/:project/downloadAsZip
    method: GET
    params:
      apiKey: String
      user: String
      project: String
- name: add_custom_data_to_yourself
  endpoint:
    path: /json/general/saveCustomData
    method: POST
    params:
      customData: Object
      override: Boolean
- name: get_my_custom_data
  endpoint:
    path: /json/general/getMyCustomData
    method: GET
- name: api_key_list
  endpoint:
    path: /json/apiKey
    method: GET
    params:
      time: String/Number
      email: String
      hash: String
      findObject: Object
- name: api_key_create
  endpoint:
    path: /json/apiKey
    method: POST
    params:
      time: String/Number
      email: String
      hash: String
      items: Array
- name: api_key_update
  endpoint:
    path: /json/apiKey/:apiKeyId/skin
    method: POST
    params:
      time: String/Number
      email: String
      hash: String
- name: token
  endpoint:
    path: /api/token
    method: POST
    data_selector: token
- name: create_user
  endpoint:
    path: /json/user/create
    method: POST
    data_selector: result
    params:
      user: admin
      token: YOUR_ADMIN_TOKEN
- name: Box
  endpoint:
    path: /containers/box
    method: GET
    data_selector: elements
    params: {}
- name: Multicolumn
  endpoint:
    path: /containers/multicolumn
    method: GET
    data_selector: elements
    params: {}
- name: Root
  endpoint:
    path: /containers/root
    method: GET
    data_selector: elements
    params: {}
- name: Full width container
  endpoint:
    path: /containers/fullwidth
    method: GET
    data_selector: elements
    params: {}
- name: Text
  endpoint:
    path: /leaf/text
    method: GET
    data_selector: elements
    params: {}
- name: Title
  endpoint:
    path: /leaf/title
    method: GET
    data_selector: elements
    params: {}
- name: Image
  endpoint:
    path: /leaf/image
    method: GET
    data_selector: elements
    params: {}
- name: Button
  endpoint:
    path: /leaf/button
    method: GET
    data_selector: elements
    params: {}
- name: upload_hook
  endpoint:
    path: /upload
    method: POST
    data_selector: url
- name: delete_hook
  endpoint:
    path: /delete
    method: POST
    data_selector: success
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: POST
- name: copy
  endpoint:
    path: /copy
    method: POST
- name: configure
  endpoint:
    path: /config
    method: POST
- name: get_configuration
  endpoint:
    path: /config
    method: GET
- name: list_images
  endpoint:
    path: /list/:id
    method: GET
- name: add_images
  endpoint:
    path: /add
    method: POST
- name: delete_images
  endpoint:
    path: /delete
    method: DELETE
- name: token
  endpoint:
    path: /api/token
    method: POST
    data_selector: result
- name: custom_strings_add
  endpoint:
    path: /json/customStrings/add
    method: POST
    data_selector: customStrings
    params: {}
- name: custom_strings_addToUsers
  endpoint:
    path: /json/customStrings/addToUsers
    method: POST
    data_selector: customStrings
    params: {}
- name: custom_strings_addToGroup
  endpoint:
    path: /json/customStrings/addToGroup
    method: POST
    data_selector: customStrings
    params: {}
- name: custom_strings_getCustomStringsOfApiInstance
  endpoint:
    path: /json/customStrings/getCustomStringsOfApiInstance
    method: GET
    data_selector: customStrings
    params: {}
- name: custom_strings_getCustomStringsOfUser
  endpoint:
    path: /json/customStrings/getCustomStringsOfUser
    method: GET
    data_selector: customStrings
    params: {}
- name: custom_strings_getCustomStringsOfGroup
  endpoint:
    path: /json/customStrings/getCustomStringsOfGroup
    method: GET
    data_selector: customStrings
    params: {}
- name: custom_strings_remove
  endpoint:
    path: /json/customStrings/:id
    method: DELETE
    data_selector: customStrings
    params: {}
- name: custom_strings_removeFromUser
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:user
    method: DELETE
    data_selector: customStrings
    params: {}
- name: custom_strings_removeFromGroup
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:group
    method: DELETE
    data_selector: customStrings
    params: {}
- name: groups_list
  endpoint:
    path: /json/groups/list
    method: GET
    data_selector: groups
    params: {}
- name: groups_create
  endpoint:
    path: /json/groups/create
    method: POST
    data_selector: group
    params: {}
- name: groups_get
  endpoint:
    path: /json/groups/read/:id
    method: GET
    data_selector: group
    params: {}
- name: groups_update
  endpoint:
    path: /json/groups/update
    method: POST
    data_selector: group
    params: {}
- name: add_custom_strings
  endpoint:
    path: /json/customStrings/add
    method: POST
- name: add_custom_strings_to_users
  endpoint:
    path: /json/customStrings/addToUsers
    method: POST
- name: add_custom_strings_to_group
  endpoint:
    path: /json/customStrings/addToGroup
    method: POST
- name: get_custom_strings_of_api_instance
  endpoint:
    path: /json/customStrings/getCustomStringsOfApiInstance
    method: GET
- name: get_custom_strings_of_user
  endpoint:
    path: /json/customStrings/getCustomStringsOfUser
    method: GET
- name: get_custom_strings_of_group
  endpoint:
    path: /json/customStrings/getCustomStringsOfGroup
    method: GET
- name: remove_custom_strings
  endpoint:
    path: /json/customStrings/:id
    method: DELETE
- name: remove_custom_strings_from_user
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:user
    method: DELETE
- name: remove_custom_strings_from_group
  endpoint:
    path: /json/customStrings/:id/removeFromUser/:group
    method: DELETE
- name: list_groups
  endpoint:
    path: /json/groups/list
    method: GET
- name: create_group
  endpoint:
    path: /json/groups/create
    method: POST
- name: get_group
  endpoint:
    path: /json/groups/read/:id
    method: GET
- name: update_group
  endpoint:
    path: /json/groups/update
    method: POST
- name: upload_complex_elems_to_group
  endpoint:
    path: /json/complexElem/addComplexElemToGroup
    method: POST
    data_selector: result
    params:
      groupId: required
      items: required
- name: upload_complex_elems_to_users
  endpoint:
    path: /json/complexElem/addComplexElemToUsers
    method: POST
    data_selector: error
    params:
      userIds: required
      items: required
- name: upload_complex_elems_to_all_users
  endpoint:
    path: /json/complexElem/addComplexElems
    method: POST
    data_selector: result
    params:
      userIds: required
      items: required
- name: create_project
  endpoint:
    path: /json/project/createTo
    method: POST
    data_selector: _id
    params:
      userId: required
      title: optional
      description: optional
      document: optional
      customData: optional
- name: get_project
  endpoint:
    path: /json/project/getProject/:id
    method: GET
    data_selector: _id
    params:
      id: required
- name: set_project
  endpoint:
    path: /json/project/setProject
    method: POST
    data_selector: success
    params:
      userId: required
      projectId: required
      documentRoot: required
- name: download_as_zip
  endpoint:
    path: /json_v1.0.0/apiKey/:apiKey/user/:user/project/:project/downloadAsZip
    method: GET
    data_selector: null
    params:
      apiKey: required
      user: required
      project: required
- name: add_custom_data_to_yourself
  endpoint:
    path: /json/general/saveCustomData
    method: POST
    data_selector: null
    params:
      customData: required
      override: optional
- name: get_my_custom_data
  endpoint:
    path: /json/general/getMyCustomData
    method: GET
    data_selector: customData
    params: {}
- name: list_api_keys
  endpoint:
    path: /json/apiKey
    method: GET
    data_selector: null
    params:
      time: required
      email: required
      hash: required
      findObject: optional
- name: upload_route
  endpoint:
    path: /upload
    method: POST
- name: delete_route
  endpoint:
    path: /delete
    method: POST
- name: copy_route
  endpoint:
    path: /copy
    method: POST
- name: configure_gallery
  endpoint:
    path: /config
    method: POST
- name: get_configuration
  endpoint:
    path: /config
    method: GET
- name: list_images
  endpoint:
    path: /list/:id
    method: GET
- name: add_images
  endpoint:
    path: /add
    method: POST
- name: delete_images
  endpoint:
    path: /delete
    method: DELETE
- name: token
  endpoint:
    path: /api/token
    method: POST
    data_selector: ''
    params: {}
notes:
- Token is valid for one day
- Build-in failover mechanism is recommended for token generation
- User id is required for all project-related endpoints.
- Tokens are valid for one day.
- Build a failover mechanism for token generation.
- Limitations of the JSONP technique
- The user can only create the new project from one of his/her own projects.
- User functions require admin level access token.
- You need to write an email to support ~AT~ edmdesigner.com to create an API user.
- The magic word is required for token generation.
- Only administrators can create admin tokens.
- Use the JS API with admin level access token only on administrative interfaces.
- You have to set the content type to application/json for both hooks.
- The response has to be a valid JSON.
- There are limitations of the JSONP technique regarding HTTP error status codes.
- Advanced topics are in-progress.
- If using built-in gallery, images are uploaded to the server first, which may reduce
  speed.
- 'If the language you want to use is not available yet then please contact us with
  the following email address: info@edmdesigner.com'
- The API requires an API key and a magic word for token generation.
- Use the templater user for initial API calls.
- Use the JS API with admin level access token only on administrative interfaces
- Ensure that only administrators can create admin tokens
- Implement security checks to ensure requests are legitimate.
- Ensure to implement routes for upload, delete, and copy on your server.
- Implement failover mechanism between api-a.edmdesigner.com, api-b.edmdesigner.com,
  and api-c.edmdesigner.com
- You have to generate an admin token!
- YOU SHOULD IMPLEMENT FAILOVER MECHANISM BETWEEN THE NEW ENDPOINTS IN PRODUCTION!
errors:
- '403: Invalid token or userId'
- '429: Too many requests'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: Check if the project/user exists'
- '400 Bad Request: Check request parameters'
- '403: Unauthorized access.'
- '429: Too many requests.'
- '403: Access token is invalid or missing'
- '429: Too many requests, slow down'
- '403: Invalid token'
- err Description of the error {String} or an error code {Number}.
- '403 Forbidden: Check your API key and magic word.'
- '403: Access denied, token invalid'
- '429: Too many requests, rate limit exceeded'
- err Description of the error {String} or an error code {Number}
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure you have valid credentials.'
- '404 Not Found: Verify the endpoint path.'
- 'err: Description of the error or error code.'
- '403: Access Denied'
- '429: Too Many Requests'
- File input is needed.
- Security error.
- File size is too large.
- 'Upload error, error code: [error code]'
- File already exists.
- Could not delete resource. 0
- Could not delete resource. 1
- Null [json data]
- 404 Not Found
- '200: Successful operation'
- '400: Bad request'
- '401: Unauthorized'
- '404: Not found'
- '500: Internal server error'
auth_info:
  mentioned_objects:
  - admin level access token
  - token.php
client:
  base_url: https://api-static.edmdesigner.com
  headers:
    Accept: application/json
source_metadata: null
