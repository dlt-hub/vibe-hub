resources:
- name: notifications
  endpoint:
    path: /content/notifications
    method: GET
- name: notifications_push
  endpoint:
    path: /content/notifications-push
    method: GET
- name: content_item
  endpoint:
    path: /content/{itemId}
    method: GET
- name: enriched_content_item
  endpoint:
    path: /enrichedcontent/{itemId}
    method: GET
- name: search_content
  endpoint:
    path: /content/search/v1
    method: POST
- name: notifications
  endpoint:
    path: /content/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: content
  endpoint:
    path: /content/{itemId}
    method: GET
    data_selector: content
    params: {}
- name: enriched_content
  endpoint:
    path: /enrichedcontent/{itemId}
    method: GET
    data_selector: enrichedContent
    params: {}
- name: notifications
  endpoint:
    path: /content/notifications
    method: GET
    data_selector: notifications
    params:
      since: datetime
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
- name: links
  endpoint:
    path: /links
    method: GET
    data_selector: links
- name: content
  endpoint:
    path: /content/{itemId}
    method: GET
    data_selector: content
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: data
    params: {}
- name: enriched_content
  endpoint:
    path: /enrichedcontent/{itemId}
    method: GET
    data_selector: content
    params:
      itemId: string
- name: enriched_content
  endpoint:
    path: /content
    method: GET
    data_selector: items
- name: notifications_push
  endpoint:
    path: /content/notifications-push
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /content/notifications
    method: GET
    data_selector: notifications
- name: search_content
  endpoint:
    path: /content/search/v1
    method: POST
- name: search
  endpoint:
    path: /content/search/v1
    method: POST
    data_selector: results
- name: content_items
  endpoint:
    path: /content/items/v1/{itemId}
    method: GET
- name: content_search
  endpoint:
    path: /content/search/v1
    method: POST
- name: content_notifications
  endpoint:
    path: /content/notifications/v1/items
    method: GET
- name: pages
  endpoint:
    path: /site/v1/pages
    method: GET
- name: page_details
  endpoint:
    path: /site/v1/pages/{pageId}
    method: GET
- name: main_content
  endpoint:
    path: /site/v1/pages/{pageId}/main-content
    method: GET
- name: skyline_content
  endpoint:
    path: /site/v1/pages/{pageId}/skyline-content
    method: GET
- name: curations
  endpoint:
    path: /content/search/curations/v1
    method: GET
    data_selector: response
    params: {}
- name: aspects
  endpoint:
    path: /v1
    method: GET
    data_selector: aspects
    params: {}
- name: sortable_fields
  endpoint:
    path: /content/search/field/sortable/v1
    method: GET
    data_selector: response
    params: {}
- name: facets
  endpoint:
    path: /facets/v1
    method: GET
    data_selector: response
    params: {}
- name: available_aspects
  endpoint:
    path: /content/search/aspects/v1
    method: GET
    data_selector: aspects
- name: available_curations
  endpoint:
    path: /content/search/curations/v1
    method: GET
    data_selector: curations
- name: available_facets
  endpoint:
    path: /content/search/facets/v1
    method: GET
    data_selector: facets
- name: searchable_fields
  endpoint:
    path: /content/search/field/searchable/v1
    method: GET
    data_selector: fields
- name: sortable_fields
  endpoint:
    path: /content/search/field/sortable/v1
    method: GET
    data_selector: fields
- name: content_item
  endpoint:
    path: /content/items/v1/{itemId}
    method: GET
    data_selector: item
    params:
      itemId: string
- name: article
  endpoint:
    path: /content/items/v1/{itemId}
    method: GET
    data_selector: item
- name: slideshow
  endpoint:
    path: /content/items/v1/{itemId}
    method: GET
    data_selector: item
- name: blogPost
  endpoint:
    path: /content/items/v1/{itemId}
    method: GET
    data_selector: item
- name: item
  endpoint:
    path: /65ad05e6-f33b-31d6-b466-2d71bf228f17
    method: GET
    data_selector: item
    params: {}
- name: pages
  endpoint:
    path: /site/v1/pages
    method: GET
    data_selector: pages
    params: {}
- name: pages_list
  endpoint:
    path: /site/v1/pages
    method: GET
    data_selector: page
    params: {}
- name: page_by_id
  endpoint:
    path: /site/v1/pages/{pageId}
    method: GET
    data_selector: page
    params: {}
- name: pages
  endpoint:
    path: /site/v1/pages/{pageId}
    method: GET
    data_selector: page
    params: {}
- name: main_content
  endpoint:
    path: /site/v1/pages/{pageId}/main-content
    method: GET
    data_selector: pageItems
    params:
      pageId: string
      feature.blogposts: on or off
- name: main-content
  endpoint:
    path: /site/v1/pages/{pageId}/main-content
    method: GET
- name: skyline-content
  endpoint:
    path: /site/v1/pages/{pageId}/skyline-content
    method: GET
notes:
- Each service requires you to enter a licence agreement with the FT, which sets out
  how you may use the service, the rights available and the basis for any fees payable
  to the FT.
- Failure to add the campaign parameter may result in your API key being revoked.
- The date and time must be in RFC3339 date time format, for UTC timezone.
- You should not assume that there are no more results because there are fewer than
  200 resources.
- The body is supplied as HTML-compatible XML.
- Clients may be notified about changes to non-article content types.
- Do not supply a request body with this method.
- The app features 'mesh networking' technology that uses Bluetooth to send messages
  from smartphone to smartphone.
- 404 Not Found - The resource could not be found, but may be available in the future
- The body of the content is supplied as HTML-compatible XML.
- The API uses a long lived HTTP connection to stream events.
- Requests are rate limited to 2-3 requests per second.
- A Pull Request subscription is a mandatory pre-requisite for Push Notifications.
- If the Pull Request polling interval is too short (request frequency too high) you
  will receive 429 - Too Many Requests notifications.
- An API endpoint to discover a list of facets that can be specified in search API
  queries.
- Some objects may return nulls in deeply nested fields
- The “links” property is not returned as part of the pages collection
- Pages are alphabetically ordered by title
errors:
- '400 Bad Request: The request could not be understood by the server due to malformed
  syntax'
- '401 Unauthorised: The request requires user authentication. The client does not
  have the necessary credentials'
- '403 Forbidden: The request was valid, but the content won’t be returned. This could
  be because the content is restricted or not supported, or for key over quota'
- '404 Not Found: The resource could not be found, but may be available in the future'
- '429 Too Many Requests: The client has sent too many requests in a given amount
  of time'
- '500 Internal Server Error: The server encountered an unexpected condition'
- '504 Gateway Timeout: The server did not receive a timely response from the upstream
  server'
- '401 Unauthorized: Recheck API Key or permissions'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429: Requests are throttled if the rate exceeds 2-3 requests per second.'
- '429 - Too Many Requests: Throttle API calls or reduce frequency'
- '400 - Bad Request: The request could not be understood by the server due to malformed
  syntax.'
- '415 - Method not Supported: The request was in a HTTP method not supported.'
- '422 - Unprocessable Entity: The request was well-formed but was unable to be followed
  due to semantic errors.'
- '500 - Internal Server Error: The server encountered an unexpected condition which
  prevented it from fulfilling the request.'
- '501 - Not Implemented: The server does not support the functionality required to
  fulfill the request.'
- '429 Too Many Requests: The request has been throttled before being processed'
- '403 Forbidden: Content item exists, but access is restricted.'
- '404 Not Found: Content item does not exist.'
- '410 Gone: Content item no longer exists.'
- '410 Gone: The resource no longer exists'
- '404 Not Found: Page does not exist'
- '410 Gone: Page no longer exists'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.ft.com
  headers:
    X-Api-Key: yourApiKey
source_metadata: null
