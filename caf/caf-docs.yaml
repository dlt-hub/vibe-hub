resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company_verification
  endpoint:
    path: /api/company_verification
    method: GET
    data_selector: records
- name: ultimate_beneficial_ownership
  endpoint:
    path: /api/ultimate_beneficial_ownership
    method: GET
    data_selector: records
- name: kyc_idv_workflow
  endpoint:
    path: /api/kyc_idv_workflow
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: onboarding_template
  endpoint:
    path: /services/data/vXX.X/sobjects/OnboardingTemplate
    method: GET
    data_selector: records
    params: {}
- name: query_template
  endpoint:
    path: /services/data/vXX.X/sobjects/QueryTemplate
    method: GET
    data_selector: records
    params: {}
- name: workflow
  endpoint:
    path: /services/data/vXX.X/sobjects/Workflow
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: services
  endpoint:
    path: /api/core-api/services
    method: GET
    data_selector: results
- name: orchestrations
  endpoint:
    path: /api/core-api/orchestrations
    method: POST
    data_selector: id
- name: Onboarding List
  endpoint:
    path: /path/to/onboarding/list
    method: GET
    data_selector: records
- name: New Query
  endpoint:
    path: /path/to/new/query
    method: POST
    data_selector: records
- name: Executions
  endpoint:
    path: /path/to/executions
    method: GET
    data_selector: records
- name: Company
  endpoint:
    path: /path/to/company
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session_token
  endpoint:
    path: /bff/session-tokens
    method: GET
    data_selector: JWT generated with session details
- name: session_token
  endpoint:
    path: /bff/session-tokens
    method: GET
    data_selector: sessionToken
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Face Liveness
  endpoint:
    path: /v1/faces/
    method: GET
    data_selector: records
- name: Document Detector
  endpoint:
    path: /document-detector
    method: GET
    data_selector: records
- name: Face Liveness
  endpoint:
    path: /v1/faces/
    method: GET
- name: Document Detector
  endpoint:
    path: /document-detector
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: face_liveness
  endpoint:
    path: /path/to/face_liveness
    method: POST
    data_selector: signedResponse
- name: document_detector
  endpoint:
    path: /path/to/document_detector
    method: POST
    data_selector: result
- name: Face Liveness
  endpoint:
    path: /ws/
    method: GET
    data_selector: moduleName
    params: {}
- name: Document Detector
  endpoint:
    path: /v1/faces/
    method: GET
    data_selector: moduleName
    params: {}
- name: CafDocumentDetectorConfig
  endpoint:
    path: /services/data/vXX.X/sobjects/CafDocumentDetectorConfig
    method: GET
    data_selector: records
    params: {}
- name: Face Liveness
  endpoint:
    path: /caf-sdk/react-native/getting-started-with-the-sdk#cafdocumentdetectorflow
    method: GET
    data_selector: module
- name: Document Detector
  endpoint:
    path: /caf-sdk/react-native/getting-started-with-the-sdk#cafdocumentdetectorflow
    method: GET
    data_selector: module
- name: Face Liveness
  endpoint:
    path: /face-liveness
    method: POST
- name: Document Detector
  endpoint:
    path: /document-detector
    method: POST
- name: face_liveness
  endpoint:
    path: /v1/faces/
    method: POST
- name: document_detector
  endpoint:
    path: /document/detect/
    method: POST
- name: face_liveness
  endpoint:
    path: /faces/
    method: POST
    data_selector: response
    params: {}
- name: document_detector
  endpoint:
    path: /documents/
    method: POST
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /caf-api/caf-connect/webhook
    method: POST
- name: transaction
  endpoint:
    path: /caf-api/caf-connect/available-resources/transaction
- name: onboarding
  endpoint:
    path: /caf-api/caf-connect/available-resources/onboarding
- name: transaction
  endpoint:
    path: /caf-api/caf-connect/available-resources/transaction
- name: onboarding
  endpoint:
    path: /caf-api/caf-connect/available-resources/onboarding
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: POST
    data_selector: records
    params:
      Reference token: mobile_token
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: onboardings
  endpoint:
    path: /onboardings
    method: GET
- name: profiles
  endpoint:
    path: /people
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: face_authentication
  endpoint:
    path: /face_authentication
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: onboardings
  endpoint:
    path: /onboardings
    method: GET
- name: profiles
  endpoint:
    path: /profiles
    method: GET
- name: face_authentication
  endpoint:
    path: /face_authentication
    method: GET
- name: transaction
  endpoint:
    path: /core-api/transaction-details
    method: GET
    data_selector: records
    params: {}
- name: Transaction
  endpoint:
    path: /caf-api/core-api/webhooks/transaction
- name: Profile
  endpoint:
    path: /caf-api/core-api/webhooks/profile
- name: Face Authentication
  endpoint:
    path: /caf-api/core-api/webhooks/face-authentication
- name: face_liveness
  endpoint:
    path: /available-resources/face-liveness
    method: GET
- name: face_registration
  endpoint:
    path: /available-resources/face-registration
    method: GET
- name: face_authentication
  endpoint:
    path: /available-resources/face-authentication
    method: GET
- name: face_liveness
  endpoint:
    path: /faces/liveness
    method: POST
- name: face_liveness
  endpoint:
    path: /caf-api/mobile-api/available-resources/face-liveness
    method: GET
- name: face_registration
  endpoint:
    path: /caf-api/mobile-api/available-resources/face-registration
    method: GET
- name: face_authentication
  endpoint:
    path: /caf-api/mobile-api/available-resources/face-authentication
    method: GET
- name: face_liveness
  endpoint:
    path: /faces/liveness
    method: POST
    data_selector: payload
    params:
      shouldSignResponse: 'true'
- name: authentications
  endpoint:
    path: /authentications
- name: create_identity
  endpoint:
    path: /identity
- name: authentications
  endpoint:
    path: /authentications
    method: GET
    data_selector: authentication_attempt_register
- name: create_identity
  endpoint:
    path: /identity
    method: POST
    data_selector: identity_creation
- name: suspected_fraud_creation
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-creation
    method: GET
- name: suspected_fraud_query
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-query
    method: GET
- name: suspected_fraud_update
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-update
    method: GET
- name: suspected_fraud_deletion
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-deletion
    method: GET
- name: suspected_fraud_creation
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-creation
    method: POST
- name: suspected_fraud_query
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-query
    method: GET
- name: suspected_fraud_update
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-update
    method: PUT
- name: suspected_fraud_deletion
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-deletion
    method: DELETE
- name: suspected_fraud_creation
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-creation
    method: POST
    data_selector: fraudToken
- name: suspected_fraud_query
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-query
    method: GET
    data_selector: fraudEntries
    params:
      page: optional
- name: suspected_fraud_update
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-update
    method: PUT
    data_selector: updatedFraudToken
- name: suspected_fraud_deletion
  endpoint:
    path: /caf-api/joint-resolution-6-api/available-resources/suspected-fraud-deletion
    method: DELETE
    data_selector: deletionStatus
notes:
- API keys are a secret that only the client and CAF know.
- Use HTTPS for all communications.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Implement integrations exclusively via backend/server-side
- Exposing credentials on the client-side is a security risk
- It is mandatory to implement integrations with Caf APIs exclusively via backend/server-side.
- Client-side integrations expose authentication keys to the risk of leakage and malicious
  use.
- Caf. Onboarding aims to ensure the best possible user experience while maintaining
  security.
- We will make clear here the differences and how to perform each one.
- 'Flexible workflows: meet your unique business needs with a simple, drag-and-drop,
  no-code, visual design environment.'
- 'Maximize conversions: improve approval rates without compromising security to grow
  the business.'
- 'Improve user experience: eliminate unnecessary friction, reduce false positives
  and create happy and loyal customers.'
- Real-time detection using advanced technology for agile detection and immediate
  action to mitigate fraud risks.
- Risk-based authentication with the ability to create custom authentication rules
  based on access context and risk level.
- Continuous monitoring to ensure security throughout the customer journey.
- Only for global clients
- The SDK works as a form of multi-factor authentication for registered identities.
- Last updated 6 months ago
- Not all identifiers will always be available.
- You must wait for the transaction to be processed before the data is fully available.
- This policy establishes guidelines for the depreciation and discontinuation of resources.
- Client must have created a Query Template/Workflow and linked an Onboarding Template.
- Recursos depreciados continuarão funcionando durante o período de transição, porém
  não receberão novas funcionalidades ou melhorias.
- Uses JWT for authentication
- Always issue JWTs from your trusted backend system to avoid exposing signing keys.
- Use our secure /session-tokens endpoint to obtain short-lived session tokens.
- Minimize the window for token misuse in case of interception. Tokens should typically
  expire within a few minutes.
- Always verify responses server-side to ensure integrity and authenticity.
- Prevent man-in-the-middle attacks and ensure encryption in transit.
- Generate and sign tokens on the server
- Exchange JWTs using /session-tokens before SDK initialization
- Use short expiration times for JWTs
- Ensure the minimum Android SDK API version is 26.
- Gradle version 8.4 is required.
- 'CafSDK integrates multiple modules: Face Liveness, Document Detector.'
- Ensure required permissions are declared in AndroidManifest.xml.
- Configure your project's Info.plist with the necessary permissions for camera and
  network access.
- Use wss:// for Face Liveness requests through a reverse proxy.
- Use https:// for authentication requests through a reverse proxy.
- Protocol must use wss:// for Face Liveness and https:// for authentication.
- Uses unified configuration for integrating modules.
- This configuration allows the project to download all necessary dependencies from
  different sources, ensuring compatibility and updated versions.
- Ensure that all required permissions are declared in AndroidManifest.xml and Info.plist.
- Use HTTPS for authentication and WSS for Face Liveness via reverse proxy.
- Uses OAuth2 for authentication.
- Ensure correct proxy settings for both Face Liveness and Document Detector.
- For enhanced security, Caf Connect supports mutual TLS (mTLS) authentication.
- When you exceed your rate limit, you receive a HTTP 429 (Too Many Requests) response.
- Rate limiting defines the maximum number of requests an application can make to
  the API within a specified time period.
- When you exceed the rate limit, you receive a HTTP 429 (Too Many Requests) response.
- Webhooks provide a mechanism for Caf to notify your systems when events happen,
  rather than requiring your application to poll for changes.
- All webhook requests are signed using a signature in the headers, allowing you to
  verify that the request originated from Caf.
- All endpoints require a valid OAuth2 access token.
- Linkage is done by sending the Mobile Token (Session Token) at the time of transaction
  creation.
- Response signing is optional, but recommended for requests not made from controlled
  devices.
- Minimize the window for token misuse in case of interception.
- Response signing is optional and recommended for requests from untrusted devices.
- Use HTTPS for all communications
- Monitor token usage and behavior
- Never share your API credentials with anyone, even Caf Support
- Always treat tokens and secrets as sensitive data and follow the principle of least
  privilege.
- Clients must possess a certificate signed by the Caf for mutual authentication.
- Adopts the approach of paginating responses, when dealing with a large number of
  fraud entries in the response.
- API keys are a secret that only the client and CAF know. Like Basic authentication,
  API key-based authentication is only considered secure if used together with other
  security mechanisms such as HTTPS/SSL.
errors:
- '401 Unauthorized: Recheck API key validity.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '4xx: validation error types with the information provided or mapped failures'
- '5xx: error with the servers or some other unforeseen failure'
- 401 Invalid or missing token
- 500 Internal server error
- 'GENERIC_ERROR: A generic error occurs'
- 'CAMERA_PERMISSION: Camera access denied'
- 'NETWORK_EXCEPTION: Network connectivity issues'
- 'TOKEN_EXCEPTION: Invalid/expired token'
- 'UNSUPPORTED_DEVICE: Unsupported device specs'
- 'SERVER_EXCEPTION: Backend processing failure'
- 'CAPTURE_ALREADY_ACTIVE_EXCEPTION: Concurrent capture session'
- 'UNEXPECTED_ERROR_EXCEPTION: Critical unrecoverable error'
- 'USER_TIMEOUT_EXCEPTION: Capture timeout exceeded'
- 'IMAGE_NOT_FOUND_EXCEPTION: Missing image data'
- 'TOO_MANY_REQUESTS_EXCEPTION: API rate limit exceeded'
- 'UNKNOWN_EXCEPTION: Unclassified error'
- 'LIBRARY_EXCEPTION: Low-level framework error'
- 'PERMISSION_EXCEPTION: Missing system permissions'
- 'INVALID_EXCEPTION: Invalid response received'
- 'SEQUENCE_INVALID: Invalid operation sequence'
- 'LIVENESS_EXCEPTION: Face liveness specific error'
- 'FINGERPRINT_EXCEPTION: Fingerprint related error'
- 'STORAGE_EXCEPTION: Storage access error'
- 'PROXY_EXCEPTION: Proxy configuration error'
- 'SECURITY_EXCEPTION: Security validation error'
- 'HTTP 429: Too Many Requests'
- '401 Unauthorized: Check your clientId and clientSecret.'
- '401 Unauthorized: Calls with a missing or invalid access token will return code
  401'
- '401 Unauthorized: Calls with a missing or invalid access token will return code
  401 ''Unauthorized''.'
- '403 Forbidden: Use some token that do not have the required permissions to access
  a resource will end up in a 403 ''Forbidden'' response.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Client ID
  - Client Secret
  - clientId
  - clientSecret
client:
  base_url: https://api.mobile.combateafraude.com
source_metadata: null
