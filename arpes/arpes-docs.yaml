resources:
- name: ALG_main
  endpoint:
    path: endstations.plugin.ALG_main.ALGMainChamber
    method: GET
- name: ALG_spin_ToF
  endpoint:
    path: endstations.plugin.ALG_spin_ToF.SpinToFEndstation
    method: GET
- name: ANTARES
  endpoint:
    path: endstations.plugin.ANTARES.ANTARESEndstation
    method: GET
- name: Elettra_spectromicroscopy
  endpoint:
    path: endstations.plugin.Elettra_spectromicroscopy.SpectromicroscopyElettraEndstation
    method: GET
- name: example_data
  endpoint:
    path: endstations.plugin.example_data.ExampleDataEndstation
    method: GET
- name: fallback
  endpoint:
    path: endstations.plugin.fallback.FallbackEndstation
    method: GET
- name: HERS
  endpoint:
    path: endstations.plugin.HERS.HERSEndstation
    method: GET
- name: igor_export
  endpoint:
    path: endstations.plugin.igor_export.IgorExportEndstation
    method: GET
- name: igor_plugin
  endpoint:
    path: endstations.plugin.igor_plugin.IgorEndstation
    method: GET
- name: kaindl
  endpoint:
    path: endstations.plugin.kaindl.KaindlEndstation
    method: GET
- name: MAESTRO_micro
  endpoint:
    path: endstations.plugin.MAESTRO.MAESTROMicroARPESEndstation
    method: GET
- name: MAESTRO_nano
  endpoint:
    path: endstations.plugin.MAESTRO.MAESTRONanoARPESEndstation
    method: GET
- name: MBS
  endpoint:
    path: endstations.plugin.MBS.MBSEndstation
    method: GET
- name: merlin
  endpoint:
    path: endstations.plugin.merlin.BL403ARPESEndstation
    method: GET
- name: SToF_DLD
  endpoint:
    path: endstations.plugin.SToF_DLD.SToFDLDEndstation
    method: GET
- name: data
  endpoint:
    path: /load_data
    method: GET
    data_selector: records
- name: CSVDataEndstation
  endpoint:
    path: csv
    method: POST
    data_selector: spectrum
    params: {}
notes:
- You can leave the location kwarg unspecified in the call to load_data.
- No in-tool transposing
- Color normalization does not persist across scrolling
- Data loading plugins provide a number of features making it simpler to write data
  loading code for ARPES.
- One of the overarching design goals of PyARPES is to provide a completely uniform,
  pragmatic, and understandable approach to loading and performing common analyses
  of ARPES data.
- Data is normalized to a single data type (NetCDF) which is well supported by xarray.
- Igor Proâ€™s wave abstraction proved to be incredibly useful in the analysis of physics
  data.
- PyARPES offers limited support for loading a subset of Igor data, notably binary
  waves and packed experiment files.
- PyARPES attempts to address problems by maintaining a record of actions performed
  on data including functions, software version, and parameters.
- PyARPES configures Jupyter and IPython to log all of your Jupyter sessions.
- PyARPES is an open-source data analysis library for angle-resolved photoemission
  spectroscopic (ARPES) research and tool development.
- By default, PyARPES supports a variety of data formats from synchrotron and laser-ARPES
  sources including ARPES at the Advanced Light Source (ALS).
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://gitlab.com/lanzara-group/python-arpes
  headers:
    Accept: application/json
source_metadata: null
