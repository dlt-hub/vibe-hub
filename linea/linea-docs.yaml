resources:
- name: eth_sendRawTransaction
  endpoint:
    path: /api/reference/eth-sendrawtransaction
    method: POST
    data_selector: result
    params: {}
- name: staking_contract
  endpoint:
    path: /deploy
    method: POST
- name: staking
  endpoint:
    path: /staking
    method: POST
    data_selector: data
    params: {}
- name: staking_contract
  endpoint:
    path: /contracts
    method: POST
    data_selector: contractAddress
    params: {}
- name: staking
  endpoint:
    path: /services/data/vXX.X/sobjects/Staking
    method: GET
    data_selector: records
- name: bridgeToken
  endpoint:
    path: /bridgeToken
    method: POST
    data_selector: result
- name: bridgeTokenWithPermit
  endpoint:
    path: /bridgeTokenWithPermit
    method: POST
    data_selector: result
- name: completeBridging
  endpoint:
    path: /completeBridging
    method: POST
    data_selector: result
- name: confirmDeployment
  endpoint:
    path: /confirmDeployment
    method: POST
    data_selector: result
- name: initialize
  endpoint:
    path: /initialize
    method: POST
    data_selector: result
- name: setCustomContract
  endpoint:
    path: /setCustomContract
    method: POST
    data_selector: result
- name: setMessageService
  endpoint:
    path: /setMessageService
    method: POST
    data_selector: result
- name: setRemoteTokenBridge
  endpoint:
    path: /setRemoteTokenBridge
    method: POST
    data_selector: result
- name: setReserved
  endpoint:
    path: /setReserved
    method: POST
    data_selector: result
- name: transferOwnership
  endpoint:
    path: /transferOwnership
    method: POST
    data_selector: result
- name: mainnet
  endpoint:
    path: /
    method: GET
    data_selector: status
    params: {}
- name: sepolia
  endpoint:
    path: /
    method: GET
    data_selector: status
    params: {}
- name: contracts
  endpoint:
    path: /contracts
    method: GET
    data_selector: contracts
    params: {}
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: tokens
    params: {}
- name: Mainnet
  endpoint:
    path: /
    method: GET
- name: Linea Sepolia
  endpoint:
    path: /
    method: GET
- name: lineascan
  endpoint:
    path: /api
    method: GET
- name: lineaplorer
  endpoint:
    path: /api
    method: GET
- name: blockscout
  endpoint:
    path: /api
    method: GET
- name: oklink
  endpoint:
    path: /docs/en/#welcome-to-oklink-api
    method: GET
- name: chainlens
  endpoint:
    path: /api
    method: GET
- name: deployed_contracts
  endpoint:
    path: /deployed-contracts
    method: GET
    data_selector: contracts
    params: {}
- name: token_contract_addresses
  endpoint:
    path: /token-contract-addresses
    method: GET
    data_selector: tokens
    params: {}
- name: important_contracts
  endpoint:
    path: /important-contracts
    method: GET
    data_selector: contracts
    params: {}
- name: MetaMask faucet
  endpoint:
    path: https://docs.metamask.io/developer-tools/faucet/
    method: GET
    data_selector: null
    params: {}
- name: Infura faucet
  endpoint:
    path: https://infura.io/faucet/linea
    method: GET
    data_selector: null
    params: {}
- name: GetBlock faucet
  endpoint:
    path: https://getblock.io/faucet/linea-sepolia/
    method: GET
    data_selector: null
    params: {}
- name: HackQuest faucet
  endpoint:
    path: https://hackquest.io/en/faucets/59141
    method: GET
    data_selector: null
    params: {}
- name: OKX faucet
  endpoint:
    path: https://okx.com/xlayer/faucet/sepoliafaucet
    method: GET
    data_selector: null
    params: {}
- name: Lineascan
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: Lineaplorer
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: Blockscout
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: OKLink
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: Chainlens
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: Linea for Humans
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: 0xPPL
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: Arkham
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: testnet_eth
  endpoint:
    path: /get-started/how-to/get-testnet-eth
    method: GET
    data_selector: faucets
    params: {}
- name: testnet_erc20_tokens
  endpoint:
    path: /get-started/how-to/get-testnet-erc-20-tokens
    method: GET
    data_selector: tokens
    params: {}
- name: ConnectButton
  endpoint:
    path: /api/connect/button
    method: POST
    data_selector: data
    params: {}
- name: linea_estimateGas
  endpoint:
    path: /api/reference/linea-estimategas
    method: POST
    data_selector: result
    params: {}
- name: bridge_aggregator
  endpoint:
    path: /hub/bridge
    method: GET
    data_selector: bridges
    params: {}
- name: native_bridge
  endpoint:
    path: /native/bridge
    method: GET
    data_selector: bridges
    params: {}
- name: buy
  endpoint:
    path: /buy
    method: GET
    data_selector: onramper
    params: {}
- name: estimate_gas
  endpoint:
    path: /api/reference/linea-estimategas
    method: POST
    data_selector: result
- name: bridge
  endpoint:
    path: /hub/bridge
    method: GET
    data_selector: bridge_options
- name: contracts
  endpoint:
    path: /get-started/how-to/linea-safe
    method: GET
    data_selector: contracts
    params: {}
- name: CompatibilityFallbackHandler
  endpoint:
    path: /contracts/0xf48f2B2d2a534e402487b3ee7C18c33Aec0Fe5e4
    method: GET
    data_selector: address
    params: {}
- name: CreateCall
  endpoint:
    path: /contracts/0x7cbB62EaA69F79e6873cD1ecB2392971036cFAa4
    method: GET
    data_selector: address
    params: {}
- name: DefaultCallbackHandler
  endpoint:
    path: /contracts/0x1AC114C2099aFAf5261731655Dc6c306bFcd4Dbd
    method: GET
    data_selector: address
    params: {}
- name: GnosisSafe
  endpoint:
    path: /contracts/0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552
    method: GET
    data_selector: address
    params: {}
- name: GnosisSafeL2
  endpoint:
    path: /contracts/0x3E5c63644E683549055b9Be8653de26E0B4CD36E
    method: GET
    data_selector: address
    params: {}
- name: GnosisSafeProxyFactory
  endpoint:
    path: /contracts/0xa6B71E26C5e0845f74c812102Ca7114b6a896AB2
    method: GET
    data_selector: address
    params: {}
- name: MultiSend
  endpoint:
    path: /contracts/0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761
    method: GET
    data_selector: address
    params: {}
- name: MultiSendCallOnly
  endpoint:
    path: /contracts/0x40A2aCCbd92BCA938b02010E17A5b8929b49130D
    method: GET
    data_selector: address
    params: {}
- name: SignMessageLib
  endpoint:
    path: /contracts/0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2
    method: GET
    data_selector: address
    params: {}
- name: SimulateTxAccessor
  endpoint:
    path: /contracts/0x59AD6735bCd8152B84860Cb256dD9e96b85F69Da
    method: GET
    data_selector: address
    params: {}
- name: subdomain_management
  endpoint:
    path: /get-started/how-to/deploy-subdomain
    method: GET
    data_selector: steps
    params: {}
- name: subdomain_management
  endpoint:
    path: /get-started/how-to/deploy-subdomain
    method: GET
    data_selector: steps
    params: {}
- name: finalized_l2_blocks
  endpoint:
    path: /
    method: POST
    data_selector: null
    params:
      jsonrpc: '2.0'
      method: eth_getBlockByNumber
      params:
      - finalized
      - false
      id: 1
- name: finalized_l2_block
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      method: eth_getBlockByNumber
      params:
      - finalized
      - false
      id: 1
- name: linea_methods
  endpoint:
    path: /api/reference
    method: GET
    data_selector: methods
    params: {}
- name: finalized_block
  endpoint:
    path: /get-started/how-to/finalized-block
    method: GET
    data_selector: block
    params: {}
- name: bootnodes
  endpoint:
    path: /get-started/how-to/run-a-node/bootnodes
    method: GET
- name: finalized_blocks
  endpoint:
    path: /get-started/how-to/finalized-block
    method: GET
- name: beta_migration_guide
  endpoint:
    path: /get-started/how-to/run-a-node/beta-v4-migration
    method: GET
- name: poh_status
  endpoint:
    path: /poh/{address}
    method: GET
    data_selector: poh
    params: {}
- name: poh
  endpoint:
    path: /poh/{address}
    method: GET
    data_selector: poh
- name: state_recovery
  endpoint:
    path: /recover/state
    method: POST
    data_selector: state
- name: state_recovery
  endpoint:
    path: /get-started/how-to/state-recovery
    method: GET
    data_selector: state
- name: Public RPC
  endpoint:
    path: /
    method: GET
- name: Private RPC
  endpoint:
    path: /
    method: GET
- name: eth_blockNumber
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: eth_blockNumber
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: eth_sendBundle
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: eth_sendBundle
  endpoint:
    path: /api/reference/eth-sendbundle
    method: POST
    data_selector: result
    params: {}
- name: linea_estimateGas
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: linea_estimateGas
  endpoint:
    path: /api/reference/linea-estimategas
    method: POST
    data_selector: result
    params: {}
- name: transaction_exclusion_status
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      txHash: string
- name: transaction_exclusion_status
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      txHash: required
- name: linea_getProof
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: getProof
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: L1ClaimingService
  endpoint:
    path: /api/linea-smart-contracts/L1ClaimingService
    method: GET
    data_selector: records
- name: L2MessageServiceClient
  endpoint:
    path: /api/linea-smart-contracts/L2MessageServiceClient
    method: GET
    data_selector: records
- name: L1ClaimingService
  endpoint:
    path: /api/linea-smart-contracts/l1claimingservice
    method: GET
    data_selector: records
- name: L2Contract
  endpoint:
    path: /api/linea-smart-contracts/l2contract
    method: GET
    data_selector: records
- name: linea-monorepo
  endpoint:
    path: /linea-monorepo
    method: GET
    data_selector: repositories
    params: {}
- name: linea-specification
  endpoint:
    path: /linea-specification
    method: GET
    data_selector: repositories
    params: {}
- name: linea-constraints
  endpoint:
    path: /linea-constraints
    method: GET
    data_selector: repositories
    params: {}
- name: linea-tracer
  endpoint:
    path: /linea-tracer
    method: GET
    data_selector: repositories
    params: {}
- name: linea-besu
  endpoint:
    path: /linea-besu
    method: GET
    data_selector: repositories
    params: {}
- name: linea-sequencer
  endpoint:
    path: /linea-sequencer
    method: GET
    data_selector: repositories
    params: {}
- name: gnark
  endpoint:
    path: /gnark
    method: GET
    data_selector: repositories
    params: {}
- name: shomei
  endpoint:
    path: /shomei
    method: GET
    data_selector: repositories
    params: {}
- name: transaction
  endpoint:
    path: /technology/transaction-lifecycle
    method: GET
    data_selector: transactions
    params: {}
- name: linea-monorepo
  endpoint:
    path: https://github.com/Consensys/linea-monorepo
    method: GET
    data_selector: description
    params: {}
- name: linea-specification
  endpoint:
    path: https://github.com/Consensys/linea-specification
    method: GET
    data_selector: description
    params: {}
- name: linea-constraints
  endpoint:
    path: https://github.com/Consensys/linea-constraints
    method: GET
    data_selector: description
    params: {}
- name: linea-tracer
  endpoint:
    path: https://github.com/Consensys/linea-tracer
    method: GET
    data_selector: description
    params: {}
- name: linea-besu
  endpoint:
    path: https://github.com/Consensys/linea-besu
    method: GET
    data_selector: description
    params: {}
- name: linea-sequencer
  endpoint:
    path: https://github.com/Consensys/linea-sequencer
    method: GET
    data_selector: description
    params: {}
- name: gnark
  endpoint:
    path: https://github.com/Consensys/gnark
    method: GET
    data_selector: description
    params: {}
- name: shomei
  endpoint:
    path: https://github.com/Consensys/shomei
    method: GET
    data_selector: description
    params: {}
- name: BridgingFinalized
  endpoint:
    path: /BridgingFinalized
    method: event
- name: BridgingInitiated
  endpoint:
    path: /BridgingInitiated
    method: event
- name: CustomContractSet
  endpoint:
    path: /CustomContractSet
    method: event
- name: DeploymentConfirmed
  endpoint:
    path: /DeploymentConfirmed
    method: event
- name: Initialized
  endpoint:
    path: /Initialized
    method: event
- name: MessageServiceUpdated
  endpoint:
    path: /MessageServiceUpdated
    method: event
- name: NewToken
  endpoint:
    path: /NewToken
    method: event
- name: NewTokenDeployed
  endpoint:
    path: /NewTokenDeployed
    method: event
- name: OwnershipTransferStarted
  endpoint:
    path: /OwnershipTransferStarted
    method: event
- name: OwnershipTransferred
  endpoint:
    path: /OwnershipTransferred
    method: event
- name: Paused
  endpoint:
    path: /Paused
    method: event
- name: RemoteTokenBridgeSet
  endpoint:
    path: /RemoteTokenBridgeSet
    method: event
- name: TokenDeployed
  endpoint:
    path: /TokenDeployed
    method: event
- name: TokenReserved
  endpoint:
    path: /TokenReserved
    method: event
- name: Unpaused
  endpoint:
    path: /Unpaused
    method: event
- name: BridgingFinalized
  endpoint:
    path: /BridgingFinalized
    method: event
    data_selector: inputs
- name: BridgingInitiated
  endpoint:
    path: /BridgingInitiated
    method: event
    data_selector: inputs
- name: CustomContractSet
  endpoint:
    path: /CustomContractSet
    method: event
    data_selector: inputs
- name: DeploymentConfirmed
  endpoint:
    path: /DeploymentConfirmed
    method: event
    data_selector: inputs
- name: Initialized
  endpoint:
    path: /Initialized
    method: event
    data_selector: inputs
- name: MessageServiceUpdated
  endpoint:
    path: /MessageServiceUpdated
    method: event
    data_selector: inputs
- name: NewToken
  endpoint:
    path: /NewToken
    method: event
    data_selector: inputs
- name: NewTokenDeployed
  endpoint:
    path: /NewTokenDeployed
    method: event
    data_selector: inputs
- name: OwnershipTransferStarted
  endpoint:
    path: /OwnershipTransferStarted
    method: event
    data_selector: inputs
- name: OwnershipTransferred
  endpoint:
    path: /OwnershipTransferred
    method: event
    data_selector: inputs
- name: Paused
  endpoint:
    path: /Paused
    method: event
    data_selector: inputs
- name: RemoteTokenBridgeSet
  endpoint:
    path: /RemoteTokenBridgeSet
    method: event
    data_selector: inputs
- name: TokenDeployed
  endpoint:
    path: /TokenDeployed
    method: event
    data_selector: inputs
- name: TokenReserved
  endpoint:
    path: /TokenReserved
    method: event
    data_selector: inputs
- name: Unpaused
  endpoint:
    path: /Unpaused
    method: event
    data_selector: inputs
- name: renounceOwnership
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setCustomContract
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setDeployed
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setMessageService
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setRemoteTokenBridge
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setReserved
  endpoint:
    method: function
    stateMutability: nonpayable
- name: sourceChainId
  endpoint:
    method: function
    stateMutability: view
- name: targetChainId
  endpoint:
    method: function
    stateMutability: view
- name: tokenBeacon
  endpoint:
    method: function
    stateMutability: view
- name: transferOwnership
  endpoint:
    method: function
    stateMutability: nonpayable
- name: unpause
  endpoint:
    method: function
    stateMutability: nonpayable
- name: renounceOwnership
  endpoint:
    method: nonpayable
- name: setCustomContract
  endpoint:
    method: nonpayable
- name: setDeployed
  endpoint:
    method: nonpayable
- name: setMessageService
  endpoint:
    method: nonpayable
- name: setRemoteTokenBridge
  endpoint:
    method: nonpayable
- name: setReserved
  endpoint:
    method: nonpayable
- name: sourceChainId
  endpoint:
    method: view
- name: targetChainId
  endpoint:
    method: view
- name: tokenBeacon
  endpoint:
    method: view
- name: transferOwnership
  endpoint:
    method: nonpayable
- name: unpause
  endpoint:
    method: nonpayable
- name: renounceOwnership
  endpoint:
    method: nonpayable
- name: setCustomContract
  endpoint:
    method: nonpayable
- name: setDeployed
  endpoint:
    method: nonpayable
- name: setMessageService
  endpoint:
    method: nonpayable
- name: setRemoteTokenBridge
  endpoint:
    method: nonpayable
- name: setReserved
  endpoint:
    method: nonpayable
- name: sourceChainId
  endpoint:
    method: view
- name: targetChainId
  endpoint:
    method: view
- name: tokenBeacon
  endpoint:
    method: view
- name: transferOwnership
  endpoint:
    method: nonpayable
- name: unpause
  endpoint:
    method: nonpayable
- name: BridgingFinalized
  endpoint:
    path: /BridgingFinalized
    method: event
- name: BridgingInitiated
  endpoint:
    path: /BridgingInitiated
    method: event
- name: CustomContractSet
  endpoint:
    path: /CustomContractSet
    method: event
- name: DeploymentConfirmed
  endpoint:
    path: /DeploymentConfirmed
    method: event
- name: Initialized
  endpoint:
    path: /Initialized
    method: event
- name: MessageServiceUpdated
  endpoint:
    path: /MessageServiceUpdated
    method: event
- name: NewToken
  endpoint:
    path: /NewToken
    method: event
- name: NewTokenDeployed
  endpoint:
    path: /NewTokenDeployed
    method: event
- name: OwnershipTransferStarted
  endpoint:
    path: /OwnershipTransferStarted
    method: event
- name: OwnershipTransferred
  endpoint:
    path: /OwnershipTransferred
    method: event
- name: Paused
  endpoint:
    path: /Paused
    method: event
- name: RemoteTokenBridgeSet
  endpoint:
    path: /RemoteTokenBridgeSet
    method: event
- name: TokenDeployed
  endpoint:
    path: /TokenDeployed
    method: event
- name: TokenReserved
  endpoint:
    path: /TokenReserved
    method: event
- name: Unpaused
  endpoint:
    path: /Unpaused
    method: event
- name: renounceOwnership
  endpoint:
    path: /renounceOwnership
    method: POST
    data_selector: ''
    params: {}
- name: setCustomContract
  endpoint:
    path: /setCustomContract
    method: POST
    data_selector: ''
    params: {}
- name: setDeployed
  endpoint:
    path: /setDeployed
    method: POST
    data_selector: ''
    params: {}
- name: setMessageService
  endpoint:
    path: /setMessageService
    method: POST
    data_selector: ''
    params: {}
- name: setRemoteTokenBridge
  endpoint:
    path: /setRemoteTokenBridge
    method: POST
    data_selector: ''
    params: {}
- name: setReserved
  endpoint:
    path: /setReserved
    method: POST
    data_selector: ''
    params: {}
- name: sourceChainId
  endpoint:
    path: /sourceChainId
    method: GET
    data_selector: ''
    params: {}
- name: targetChainId
  endpoint:
    path: /targetChainId
    method: GET
    data_selector: ''
    params: {}
- name: tokenBeacon
  endpoint:
    path: /tokenBeacon
    method: GET
    data_selector: ''
    params: {}
- name: transferOwnership
  endpoint:
    path: /transferOwnership
    method: POST
    data_selector: ''
    params: {}
- name: unpause
  endpoint:
    path: /unpause
    method: POST
    data_selector: ''
    params: {}
- name: TokenBridge
  endpoint:
    path: /address/0x353012dc4a9a6cf55c941badc267f82004a8ceb9
    method: GET
- name: BridgingFinalized
  endpoint:
    path: /events/BridgingFinalized
    method: POST
    data_selector: events
    params: {}
- name: BridgingInitiated
  endpoint:
    path: /events/BridgingInitiated
    method: POST
    data_selector: events
    params: {}
- name: CustomContractSet
  endpoint:
    path: /events/CustomContractSet
    method: POST
    data_selector: events
    params: {}
- name: DeploymentConfirmed
  endpoint:
    path: /events/DeploymentConfirmed
    method: POST
    data_selector: events
    params: {}
- name: Initialized
  endpoint:
    path: /events/Initialized
    method: POST
    data_selector: events
    params: {}
- name: MessageServiceUpdated
  endpoint:
    path: /events/MessageServiceUpdated
    method: POST
    data_selector: events
    params: {}
- name: NewToken
  endpoint:
    path: /events/NewToken
    method: POST
    data_selector: events
    params: {}
- name: OwnershipTransferStarted
  endpoint:
    path: /events/OwnershipTransferStarted
    method: POST
    data_selector: events
    params: {}
- name: OwnershipTransferred
  endpoint:
    path: /events/OwnershipTransferred
    method: POST
    data_selector: events
    params: {}
- name: Paused
  endpoint:
    path: /events/Paused
    method: POST
    data_selector: events
    params: {}
- name: RemoteTokenBridgeSet
  endpoint:
    path: /events/RemoteTokenBridgeSet
    method: POST
    data_selector: events
    params: {}
- name: TokenDeployed
  endpoint:
    path: /events/TokenDeployed
    method: POST
    data_selector: events
    params: {}
- name: TokenReserved
  endpoint:
    path: /events/TokenReserved
    method: POST
    data_selector: events
    params: {}
- name: Unpaused
  endpoint:
    path: /events/Unpaused
    method: POST
    data_selector: events
    params: {}
- name: renounceOwnership
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setCustomContract
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setDeployed
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setMessageService
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setRemoteTokenBridge
  endpoint:
    method: function
    stateMutability: nonpayable
- name: setReserved
  endpoint:
    method: function
    stateMutability: nonpayable
- name: sourceChainId
  endpoint:
    method: function
    stateMutability: view
- name: targetChainId
  endpoint:
    method: function
    stateMutability: view
- name: tokenBeacon
  endpoint:
    method: function
    stateMutability: view
- name: transferOwnership
  endpoint:
    method: function
    stateMutability: nonpayable
- name: unpause
  endpoint:
    method: function
    stateMutability: nonpayable
- name: renounceOwnership
  endpoint:
    path: renounceOwnership
    method: function
    data_selector: ''
- name: setCustomContract
  endpoint:
    path: setCustomContract
    method: function
    data_selector: ''
- name: setDeployed
  endpoint:
    path: setDeployed
    method: function
    data_selector: ''
- name: setMessageService
  endpoint:
    path: setMessageService
    method: function
    data_selector: ''
- name: setRemoteTokenBridge
  endpoint:
    path: setRemoteTokenBridge
    method: function
    data_selector: ''
- name: setReserved
  endpoint:
    path: setReserved
    method: function
    data_selector: ''
- name: sourceChainId
  endpoint:
    path: sourceChainId
    method: function
    data_selector: ''
- name: targetChainId
  endpoint:
    path: targetChainId
    method: function
    data_selector: ''
- name: tokenBeacon
  endpoint:
    path: tokenBeacon
    method: function
    data_selector: ''
- name: transferOwnership
  endpoint:
    path: transferOwnership
    method: function
    data_selector: ''
- name: unpause
  endpoint:
    path: unpause
    method: function
    data_selector: ''
- name: TokenBridge
  endpoint:
    path: /address/0x5A0a48389BB0f12E5e017116c1105da97E129142
    method: GET
- name: TokenBridge.abi
  endpoint:
    path: /address/0x5A0a48389BB0f12E5e017116c1105da97E129142
    method: GET
- name: BridgingFinalized
  endpoint:
    path: /bridging/finalized
    method: EVENT
    data_selector: inputs
- name: BridgingInitiated
  endpoint:
    path: /bridging/initiated
    method: EVENT
    data_selector: inputs
- name: CustomContractSet
  endpoint:
    path: /custom/contract/set
    method: EVENT
    data_selector: inputs
- name: DeploymentConfirmed
  endpoint:
    path: /deployment/confirmed
    method: EVENT
    data_selector: inputs
- name: Initialized
  endpoint:
    path: /initialized
    method: EVENT
    data_selector: inputs
- name: MessageServiceUpdated
  endpoint:
    path: /message/service/updated
    method: EVENT
    data_selector: inputs
- name: NewToken
  endpoint:
    path: /new/token
    method: EVENT
    data_selector: inputs
- name: OwnershipTransferStarted
  endpoint:
    path: /ownership/transfer/started
    method: EVENT
    data_selector: inputs
- name: OwnershipTransferred
  endpoint:
    path: /ownership/transferred
    method: EVENT
    data_selector: inputs
- name: Paused
  endpoint:
    path: /paused
    method: EVENT
    data_selector: inputs
- name: TokenDeployed
  endpoint:
    path: /token/deployed
    method: EVENT
    data_selector: inputs
- name: renounceOwnership
  endpoint:
    path: /renounceOwnership
    method: POST
    data_selector: outputs
    params: {}
- name: setCustomContract
  endpoint:
    path: /setCustomContract
    method: POST
    data_selector: outputs
    params: {}
- name: setDeployed
  endpoint:
    path: /setDeployed
    method: POST
    data_selector: outputs
    params: {}
- name: setMessageService
  endpoint:
    path: /setMessageService
    method: POST
    data_selector: outputs
    params: {}
- name: setRemoteTokenBridge
  endpoint:
    path: /setRemoteTokenBridge
    method: POST
    data_selector: outputs
    params: {}
- name: setReserved
  endpoint:
    path: /setReserved
    method: POST
    data_selector: outputs
    params: {}
- name: sourceChainId
  endpoint:
    path: /sourceChainId
    method: GET
    data_selector: outputs
    params: {}
- name: targetChainId
  endpoint:
    path: /targetChainId
    method: GET
    data_selector: outputs
    params: {}
- name: tokenBeacon
  endpoint:
    path: /tokenBeacon
    method: GET
    data_selector: outputs
    params: {}
- name: transferOwnership
  endpoint:
    path: /transferOwnership
    method: POST
    data_selector: outputs
    params: {}
- name: unpause
  endpoint:
    path: /unpause
    method: POST
    data_selector: outputs
    params: {}
- name: renounceOwnership
  endpoint:
    path: /renounceOwnership
    method: POST
- name: setCustomContract
  endpoint:
    path: /setCustomContract
    method: POST
- name: setDeployed
  endpoint:
    path: /setDeployed
    method: POST
- name: setMessageService
  endpoint:
    path: /setMessageService
    method: POST
- name: setRemoteTokenBridge
  endpoint:
    path: /setRemoteTokenBridge
    method: POST
- name: setReserved
  endpoint:
    path: /setReserved
    method: POST
- name: sourceChainId
  endpoint:
    path: /sourceChainId
    method: GET
- name: targetChainId
  endpoint:
    path: /targetChainId
    method: GET
- name: tokenBeacon
  endpoint:
    path: /tokenBeacon
    method: GET
- name: transferOwnership
  endpoint:
    path: /transferOwnership
    method: POST
- name: unpause
  endpoint:
    path: /unpause
    method: POST
- name: sendMessage
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: message
    params: {}
- name: claimMessage
  endpoint:
    path: /claimMessage
    method: POST
    data_selector: claim
    params: {}
- name: messages
  endpoint:
    path: /technology/message-service
    method: GET
    data_selector: messages
    params: {}
notes:
- Linea Beta v4 implements the Pectra upgrade
- Uses MetaMask as the injected provider for deployment
- Uses MetaMask as an injected provider for deployment.
- Internal function to calculate Y for public input generation.
- Each chunk of 32 bytes must start with a 0 byte.
- The dataEvaluationPoint value is modulo-ed down during the computation and scalar
  field checking is not needed.
- There is a hard constraint in the circuit to enforce the polynomial degree limit
  (4096), which will also be enforced with EIP-4844.
- Verify that the chainId is 59141 in the debug information corner.
- Users are now redirected to MetaMask Mobile when attempting to access the bridge
  on a mobile browser
- Default token list now refreshes on every load rather than being stored locally;
  only the user's custom tokens are stored
- Contracts audit is in progress. This doesn't reflect final versions.
- Last updated on Oct 2, 2025 by Joel Willmore
- Bridging partners need to retrieve the service protection fee before sending messages
  and include it in the value sent.
- Linea uses the London version of the Ethereum Virtual Machine (EVM).
- Linea's sequencer limits the size of call data, so that transactions can fit into
  the corresponding blob. The current limit is 60000 bytes.
- 'Transparent Proxy: 0xB191E3d98074f92584E5205B99c3F17fB2068927'
- 'Implementation: 0x6081C1392793e22dA39871D4362c1e7045A5bace'
- Refer to the MetaMask Support site for instructions on how to add RPC endpoints.
- Connecting to Linea via public endpoints may encounter rate limiting.
- The LINEA token address is 0x1789e0043623282D5DCc7F213d703C6D8BAfBB04.
- Recommended connecting to Linea via private RPCs
- Linea operates on a performance-based model.
- We won't provide financial support at this stage but we'll still cheer you on and
  help however we can through community resources.
- Not all RPC providers support Linea-specific JSON-RPC API methods such as linea_estimateGas.
- Login methods must be configured for external wallets in Privy dashboard.
- Returns gasLimit, baseFeePerGas, and priorityFeePerGas.
- Not all RPC providers support Linea-specific JSON-RPC API methods such as `linea_estimateGas`.
- Testnet bridging is only possible on the native bridge.
- The appearance configuration is optional.
- Uses Ethereum EIP-1559 gas price model.
- The base fee effectively stabilizes at 7 wei.
- Manual claiming is required for any transfers from Linea to Ethereum.
- USDC transfers require manual claiming.
- Safe is a multi-signature smart contract wallet, which means it requires a minimum
  number of signatures to approve a transaction before it can occur.
- Use the finalized tag in API calls to specify a block that has been confirmed by
  the L1 network.
- Linea supports multiple clients but only Linea Besu allows access to Linea-specific
  features.
- API is rate-limited to 5 requests per second.
- Exceeding the limit will result in a 429 error.
- The API is rate-limited to 5 requests per second.
- Exceeding this limit will result in a 429 error.
- Only enable state recovery if you intend the node to be used specifically for state
  recovery.
- Default behavior will ensure that state recovery will replace standard P2P syncing.
- Public endpoints are rate limited, and not meant for production systems.
- Social login authentication that combines web2 familiarity with web3 functionality
- Social login authentication with embedded wallets and flexible OAuth configuration
  options
- The Linea Mainnet will be upgraded on a continuous basis.
- Given the Alpha status of the Mainnet, there may be occasional periods where Linea's
  performance slows down or becomes temporarily unavailable without advance warning.
- During the initial launch of the Mainnet Beta, users won't be able to force transactions
  on Layer 1 and withdrawal limits are placed on the bridge to minimize the impact
  of any potential malicious actors.
- Security is a top priority and we will seek to improve the guarantees that users
  have when using the system.
- The Mainnet Alpha will integrate some centralized components like the Sequencer,
  Prover and Security Council.
- Public endpoints are free to use but are rate limited and not suitable for production
  environments.
- Access to this endpoint is permissioned via Infura.
- This method is in private beta and not publicly available for use.
- Access to this endpoint is permissioned via Infura. Currently, only Infura nodes
  are able to forward the requests to the sequencer.
- You can only check for transaction rejection within seven days of the transaction
  attempt.
- A finalized block is a block on an L2 blockchain (Linea) that has been confirmed
  and validated by the L1 blockchain (Ethereum).
- 'This API has strict rate limits per IP: Two requests per second, 60 requests per
  minute.'
- 'This API has strict rate limits per IP: Two requests per second, 60 requests per
  minute'
- The SDK does not currently support sending messages.
- The SDK does not currently support sending messages. This feature will be added
  in a future release.
- The LINEA token is designed to grow and support Ethereum and Linea.
- There is no token allocation for insiders, investors, or team members.
- High-complexity transactions that repeatedly use a large volume of operations may
  generate too many lines of data and exceed a module's limit.
- Transactions rejected for exceeding module limits can be identified through methods
  like linea_estimateGas and eth_sendRawTransaction.
- ETH is the gas token
- LINEA does not come with any governance rights
- There is no token allocation for insiders, investors, or team members
- Uses blob-carrying transactions made possible by EIP-4844.
- The postman fee for automatic claiming is only sponsored for transactions using
  less than 250,000 gas.
- User should first allow the bridge to transfer tokens on their behalf
- This is done by calling `allowance()` on the TokenBridge.
- The state manager updates the state of the network globally and the state of every
  account individually.
- Linea uses sparse Merkle trees to minimize computation and contribute to blockchain
  efficiency.
errors:
- Gas price too low
- Transaction line count above limit
- 'AlreadyBridgedToken: Token has already been bridged.'
- 'InvalidPermitData: Permit data is invalid.'
- 'NotFromRemoteTokenBridge: Transaction is not from the remote token bridge.'
- 'NotMessagingService: Transaction is not from the messaging service.'
- 'NotReserved: Token is not reserved.'
- 'PermitNotAllowingBridge: Permit does not allow bridging.'
- 'PermitNotFromSender: Permit is not from the sender.'
- 'RemoteTokenBridgeAlreadySet: The remote token bridge is already set.'
- 'ReservedToken: The token is reserved.'
- 'TokenNotDeployed: The token has not been deployed.'
- 'ZeroAddressNotAllowed: Zero address is not allowed.'
- 'ZeroAmountNotAllowed: Zero amount is not allowed.'
- 'Rate limiting: You may encounter rate limiting when using public endpoints.'
- '401 Unauthorized: Check your App ID and permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '429: Too Many Requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Invalid configuration: Ensure your node has been running normally.'
- State recovery plugin requires specific configurations.
- Check HTTP status codes
- Implement retry with exponential backoff
- Transactions rejected for exceeding module limits can be identified through the
  methods that return an error.
- 'AlreadyBridgedToken: Token has already been bridged'
- 'AlreadyBrigedToNativeTokenSet: Token already bridged to native token set'
- 'CallerIsNotMessageService: The caller is not the message service'
- 'InvalidPermitData: Permit data provided is invalid'
- 'NotReserved: Token is not reserved'
- 'PermitNotAllowingBridge: Permit does not allow bridging'
- 'PermitNotFromSender: Permit not from the sender'
- 'RemoteTokenBridgeAlreadySet: Remote token bridge is already set'
- 'ReservedToken: Token is reserved'
- 'SenderNotAuthorized: Sender is not authorized'
- 'StatusAddressNotAllowed: Status address is not allowed'
- 'TokenNativeOnOtherLayer: Token is native on another layer'
- 'TokenNotDeployed: Token is not deployed'
- 'ZeroAddressNotAllowed: Zero address is not allowed'
- 'ZeroAmountNotAllowed: Zero amount is not allowed'
- 'FeeTooLow: Thrown when fees are lower than the minimum fee.'
- 'ValueShouldBeGreaterThanFee: Thrown when fees are lower than value.'
- 'ReservedToken: Reserved token error'
- 'RemoteTokenBridgeAlreadySet: Remote token bridge already set error'
- 'AlreadyBridgedToken: Already bridged token error'
- 'ValueSentTooLow: Thrown when the value sent is less than the fee.'
auth_info:
  mentioned_objects:
  - PrivyProvider
client:
  base_url: https://linea.build
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
