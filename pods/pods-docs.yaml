resources:
- name: custom_post_type
  endpoint:
    path: /custom_post_type
    method: GET
    data_selector: data
    params: {}
- name: custom_taxonomy
  endpoint:
    path: /custom_taxonomy
    method: GET
    data_selector: data
    params: {}
- name: custom_post_types
  endpoint:
    path: /api/custom_post_types
    method: GET
    data_selector: data
    params: {}
- name: mypod
  endpoint:
    path: /pods/
    method: GET
    data_selector: records
    params: {}
- name: fruits
  endpoint:
    path: /pods/fruits
    method: GET
    data_selector: records
    params: {}
- name: pods
  endpoint:
    path: /pods
    method: GET
    data_selector: pods
    params: {}
- name: pods_api_post_save_item
  endpoint:
    path: /code/action-reference/pods_api_post_save_item
    method: GET
- name: pods_api_post_save_pod_item_{podname}
  endpoint:
    path: /code/action-reference/pods_api_post_save_pod_item_podname
    method: GET
- name: pods_api_save_pod_default_pod
  endpoint:
    path: /code/action-reference/pods_api_save_pod_default_pod
    method: GET
- name: book_author
  endpoint:
    path: /pods/book_author
    method: POST
    data_selector: pods
    params: {}
- name: book
  endpoint:
    path: /pods/book
    method: POST
    data_selector: pods
    params: {}
- name: chapter
  endpoint:
    path: /pods/chapter
    method: POST
    data_selector: pods
    params: {}
- name: book_author
  endpoint:
    path: /pods/book_author
    method: POST
    data_selector: data
    params: {}
- name: book
  endpoint:
    path: /pods/book
    method: POST
    data_selector: data
    params: {}
- name: chapter
  endpoint:
    path: /pods/chapter
    method: POST
    data_selector: data
    params: {}
- name: custom_block
  endpoint:
    path: /code/blocks-api/
    method: POST
    data_selector: block
    params: {}
- name: custom_block_collection
  endpoint:
    path: /code/blocks-api/
    method: POST
    data_selector: collection
    params: {}
- name: my-custom-block2
  endpoint:
    path: /pods_blocks_api_init/register_my_custom_block_type2
    method: POST
    data_selector: block
    params: {}
- name: my-custom-collection2
  endpoint:
    path: /pods_blocks_api_init/register_my_custom_block_collection2
    method: POST
    data_selector: collection
    params: {}
- name: field_configs
  endpoint:
    path: /get_list_of_field_configurations
    method: GET
    data_selector: fieldConfigurations
    params: {}
- name: field_values
  endpoint:
    path: /get_list_of_field_values
    method: GET
    data_selector: fieldValues
    params: {}
- name: field_value
  endpoint:
    path: /get_field_value
    method: GET
    data_selector: fieldValue
    params: {}
- name: field_value_with_configs
  endpoint:
    path: /get_list_of_field_values_with_field_configurations
    method: GET
    data_selector: fieldValuesWithConfigs
    params: {}
- name: set_field_value
  endpoint:
    path: /set_field_value
    method: POST
    data_selector: void
    params: {}
- name: pods
  endpoint:
    path: /pods/v1/pods
    method: GET
- name: groups
  endpoint:
    path: /pods/v1/groups
    method: GET
- name: fields
  endpoint:
    path: /pods/v1/fields
    method: GET
- name: wp_pods
  endpoint:
    path: /pods/wp
    method: GET
    data_selector: data
    params: {}
- name: wp_pods_field
  endpoint:
    path: /pods/wp/field
    method: GET
    data_selector: data
    params: {}
- name: wp_pods_group
  endpoint:
    path: /pods/wp/group
    method: GET
    data_selector: data
    params: {}
- name: wp_pods_pod
  endpoint:
    path: /pods/wp/pod
    method: GET
    data_selector: data
    params: {}
- name: wp_pods_api
  endpoint:
    path: /pods/wp-api
    method: GET
    data_selector: data
    params: {}
- name: Post Types
  endpoint:
    path: /pods/post-types
    method: GET
- name: Taxonomies
  endpoint:
    path: /pods/taxonomies
    method: GET
- name: Users
  endpoint:
    path: /pods/users
    method: GET
- name: Media
  endpoint:
    path: /pods/media
    method: GET
- name: Comment
  endpoint:
    path: /pods/comments
    method: GET
- name: custom_post_type
  endpoint:
    path: /api/v1/custom_post_type
    method: GET
    data_selector: data
    params: {}
- name: custom_taxonomy
  endpoint:
    path: /api/v1/custom_taxonomy
    method: GET
    data_selector: data
    params: {}
- name: pods
  endpoint:
    path: /pods-api/
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /videos/
    method: GET
    data_selector: records
    params: {}
- name: Custom Post Types
  endpoint:
    path: /pods/custom-post-types
    method: GET
    data_selector: records
- name: Custom Fields
  endpoint:
    path: /pods/custom-fields
    method: GET
    data_selector: fields
    params: {}
- name: Create New Content Type
  endpoint:
    path: /pods-api/create-new
    method: POST
    data_selector: data
    params: {}
- name: Extend Existing
  endpoint:
    path: /pods-api/extend-existing
    method: POST
    data_selector: data
    params: {}
- name: Pods Templates
  endpoint:
    path: /pods/templates
    method: GET
    data_selector: templates
    params: {}
- name: Connecting or Inserting Field Connections
  endpoint:
    path: /wp-json/pods/v1/field-connections
    method: GET
    data_selector: field_connections
    params: {}
- name: URL Field
  endpoint:
    path: /wp-json/pods/v1/url-field
    method: GET
    data_selector: url_fields
    params: {}
- name: User or Settings Field
  endpoint:
    path: /wp-json/pods/v1/user-settings-field
    method: GET
    data_selector: user_settings_fields
    params: {}
- name: Pods REST API Endpoints
  endpoint:
    path: /code/rest-api-endpoints/
    method: GET
- name: custom_post_types
  endpoint:
    path: /pods/custom_post_types
    method: GET
    data_selector: data
    params: {}
- name: custom_taxonomies
  endpoint:
    path: /pods/custom_taxonomies
    method: GET
    data_selector: data
    params: {}
- name: CustomFields
  endpoint:
    path: /pods/custom-fields
    method: GET
    data_selector: fields
    params: {}
- name: Post Types
  endpoint:
    path: /pods/post-types
    method: GET
    data_selector: data
    params: {}
- name: Taxonomies
  endpoint:
    path: /pods/taxonomies
    method: GET
    data_selector: data
    params: {}
- name: Media
  endpoint:
    path: /pods/media
    method: GET
    data_selector: data
    params: {}
- name: Users
  endpoint:
    path: /pods/users
    method: GET
    data_selector: data
    params: {}
- name: Comments
  endpoint:
    path: /pods/comments
    method: GET
    data_selector: data
    params: {}
- name: custom_taxonomy
  endpoint:
    path: /pods/v1/taxonomies
    method: POST
    data_selector: taxonomy
    params: {}
- name: extended_post_types
  endpoint:
    path: /pods/extend
    method: GET
    data_selector: data
- name: pods
  endpoint:
    path: /wp-json/pods/v1/
    method: GET
    data_selector: pods
    params: {}
- name: pods_templates
  endpoint:
    path: /pods/templates
    method: GET
    data_selector: templates
    params: {}
- name: custom_fields
  endpoint:
    path: /pods/custom_fields
    method: GET
    data_selector: fields
    params: {}
- name: pods
  endpoint:
    path: /pods
    method: GET
    data_selector: records
    params: {}
- name: access_rights
  endpoint:
    path: /pods/access-rights
    method: GET
    data_selector: access_rights
    params: {}
- name: taxonomy_term_meta
  endpoint:
    path: /wp-json/pods/v1/taxonomy_term_meta
    method: GET
    data_selector: data
- name: custom_settings
  endpoint:
    path: /pods/custom_settings
    method: GET
    data_selector: settings
    params: {}
- name: image_fields
  endpoint:
    path: /image-fields
    method: GET
    data_selector: fields
- name: media_fields
  endpoint:
    path: /media-fields
    method: GET
    data_selector: fields
- name: Pod Templates
  endpoint:
    path: /pods/templates
    method: GET
- name: posts
  endpoint:
    path: /wp/v2/posts
    method: GET
    data_selector: posts
- name: user_fields
  endpoint:
    path: /user_fields
    method: GET
    data_selector: fields
- name: user_meta
  endpoint:
    path: /user_meta
    method: GET
    data_selector: meta
- name: Pods Gravity Forms Add-on
  endpoint:
    path: /pods-gravity-forms/
    method: GET
    data_selector: forms
    params: {}
- name: form_shortcode
  endpoint:
    path: /pods/form/shortcode
    method: GET
    data_selector: forms
    params: {}
- name: PODS Simple Relationship
  endpoint:
    path: /pods/simple_relationship
    method: POST
    data_selector: data
    params:
      type: import
- name: pods_cache_set
  endpoint:
    path: /pods_cache_set
    method: POST
    data_selector: cache_set
    params: {}
- name: pods_cache_get
  endpoint:
    path: /pods_cache_get
    method: GET
    data_selector: cache_get
    params: {}
- name: pods_cache_clear
  endpoint:
    path: /pods_cache_clear
    method: DELETE
    data_selector: cache_clear
    params: {}
- name: pods_transient_set
  endpoint:
    path: /pods_transient_set
    method: POST
    data_selector: transient_set
    params: {}
- name: pods_transient_get
  endpoint:
    path: /pods_transient_get
    method: GET
    data_selector: transient_get
    params: {}
- name: pods_transient_clear
  endpoint:
    path: /pods_transient_clear
    method: DELETE
    data_selector: transient_clear
    params: {}
- name: custom_post_types
  endpoint:
    path: /translate/custom_post_types
    method: GET
    data_selector: data
    params: {}
- name: meta_fields
  endpoint:
    path: /translate/meta_fields
    method: GET
    data_selector: data
    params: {}
- name: pods_templates
  endpoint:
    path: /translate/pods_templates
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /wp-json/tribe/events/v1/events
    method: GET
    data_selector: events
    params: {}
- name: Pods object methods
  endpoint:
    path: /code/pods/
    method: GET
    data_selector: pods_methods
    params: {}
- name: PodsAPI object methods
  endpoint:
    path: /code/pods-api/
    method: GET
    data_selector: pods_api_methods
    params: {}
- name: Global Functions
  endpoint:
    path: /code/general-functions/
    method: GET
    data_selector: global_functions
    params: {}
- name: Roles & Capabilities
  endpoint:
    path: /advanced-topics/rest-api/
    method: GET
    data_selector: capabilities
- name: recipe
  endpoint:
    path: /pods/recipe
    method: GET
    data_selector: records
- name: ingredient
  endpoint:
    path: /pods/ingredient
    method: GET
    data_selector: records
- name: ingredient_amount
  endpoint:
    path: /pods/ingredient_amount
    method: GET
    data_selector: records
- name: random_post
  endpoint:
    path: /pods/v1/posts
    method: GET
    data_selector: posts
    params:
      orderby: RAND()
      limit: 1
- name: custom_post_types
  endpoint:
    path: /pods/custom_post_types
    method: GET
    data_selector: records
    params: {}
- name: post_author
  endpoint:
    path: /pods/post_author
    method: GET
    data_selector: records
- name: last_modified_author
  endpoint:
    path: /pods/last_modified_author
    method: GET
    data_selector: records
notes:
- Custom post types and taxonomies do not have routes by default and must be enabled.
- Requires setup of connected app in Pods
- Some endpoints may have rate limits
- Fields that are conditionally hidden and submitted through forms will not be saved.
- When turning Conditional Logic off, the field will become visible in all cases.
- Table-based Pods are not currently supported. In the future, support for table-based
  storage will allow Repeatable fields to work for Advanced Content Types and any
  other table-based pod that you set up.
- Handles multiple post types including Pages, Posts, and Custom Post Types.
- This API allows you to register your own blocks.
- Pods 2.8 introduces a new API for creating blocks with PHP.
- Uses PHP for rendering the block output.
- Requires WPGraphQL 1.1.3+ in order to show any of the WPGraphQL settings for Pods,
  Fields, or the Pods Settings page.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Pods
- Some objects may return nulls in deeply nested fields
- Fetch the total row count.
- Learn about the powerful relationship List View format that allows you to easily
  add and edit the related record without leaving the post you’re working on.
- Pods is a Content Development Framework for WordPress.
- Custom Post Types are created in addition to those bundled with WordPress core.
- Taxonomies are used to Group and Filter content across multiple content types.
- Custom Taxonomies are custom ways of organising your content.
- Custom Content Types can be created using Pods functionality.
- Allows creation of custom content types or extension of existing ones.
- You can put anything you’d like in your Pods Templates as long as you recognize
  that whatever is in that template will be included multiple times when Listing Items
  or in Archive views.
- 'This tutorial is external to Pods Framework, you can access it at the following
  URL: https://www.ostraining.com/class/pods/'
- Custom Taxonomies are ways to organize and classify your content.
- Most common configurations are done through the WordPress Admin Screens.
- Magic Tags can be used to display custom fields, taxonomies, relationships, and
  more in Pods Templates.
- Widgets have officially been deprecated within WordPress itself and replaced with
  the new Block-based widget editor screens in WordPress 5.8.
- Pods 3.1 introduces new Access Rights checks and comprehensive functionality to
  assist you in limiting how your content types can be used by other users.
- Uses get_term_meta function to retrieve custom fields
- Uses Pods API functions to display Custom Settings information.
- Pod Templates can be automatically loaded from the theme when the template code
  is left empty.
- 'The template name must only contain allowed characters: alphanumeric, dashes, and
  forward slashes (/).'
- By default, Pods is hooked into get_post_meta with the filter pods_meta_handler_get;
  this routes the results of the function through Pods Display, or Pods Field for
  Relationship fields.
- Standard fields available within the wp_posts table.
- Allows mapping fields from your Form directly to Pods fields
- Automatic population of taxonomy drop-downs to taxonomy fields
- Automatic population of relationship field drop-downs to relationship fields
- Used to put our Back-End Admin on the Front-end using the Pods Shortcode.
- Most plugins that are designed to work natively with Custom Post Types and Custom
  Taxonomy and Custom Meta fields should work just fine with Pods, but the areas they
  might have issues with are specifically our Relationship fields.
- In cases like these, we typically need to work with the plugin developers to help
  them build access or integration with Pods.
- Allows editing the permalinks of any custom post type or taxonomy.
- MapPress adds beautiful, interactive Google or Leaflet maps to WordPress.
- One of the most useful free plugin for Managing Roles & Capabilities in WordPress.
  Provides helpful ways of restricting content both on the back-end and using shortcodes
  or PHP.
- 'To disable the Pods Alternative Cache (default: true): define(''PODS_ALT_CACHE'',
  false);'
- 'To use the database for the storage instead of the filesystem (default: file):
  define(''PODS_ALT_CACHE_TYPE'', ''db'');'
- 'To use a different filesystem location to store the cache (default: wp-content/podscache):
  define(''PODS_ALT_FILE_CACHE_DIR'', ''path/to/podscache'');'
- In order to let Polylang see your custom post types and taxonomies these need to
  be public.
- Translation of meta fields can only be done manually.
- This plugin works perfectly with Pods Custom Post Types, you just have to make sure
  you don’t have the Posts set as Hierarchical in Advanced Options.
- The Events Calendar plugin provides a REST API for accessing event data.
- Beware All Who Enter Here
- Enter at Your Own Risk
- Pods 2.x is backwards compatible with Pods 1.x code in most cases
- The ability to create automatic custom capabilities or make your post type mirror
  the capabilities of post or page.
- Link tables can be used to manage multi-field relationships.
- When you receive 404 errors, this usually has to do with rewrite rules or permalinks.
- Upgrades are our top priority when it comes to support.
- Add these parameters to the end of your URL to add some additional troubleshooting
  to your issue.
- Custom post types need to be added to the array in functions.php for categories
  and tags to work.
- Different ways to display post_author information in Pods Templates
- Enabling REST API will make the Custom Post Type available to the Block Editor and
  will allow your Custom Taxonomies to also show up in the Block Editor.
- Enabling REST API can allow your Custom Post Types & Taxonomies to be visible to
  the Block Editor.
errors:
- 'INVALID_CLIENT: Check client ID and secret'
- 'UNAUTHORIZED: Check OAuth token'
- 'RATE_LIMIT_EXCEEDED: Throttle API requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404: Not Found'
auth_info:
  mentioned_objects:
  - OAuthToken
  - AuthProvider
client:
  base_url: https://pods.io/
  headers:
    Accept: application/json
source_metadata: null
