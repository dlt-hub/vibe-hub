resources:
- name: screenshot
  endpoint:
    path: /
    method: GET
    data_selector: screenshot
    params:
      screenshot: 'true'
- name: screenshot_full_page
  endpoint:
    path: /
    method: GET
    data_selector: screenshot_full_page
    params:
      screenshot_full_page: 'true'
- name: screenshot_selector
  endpoint:
    path: /
    method: GET
    data_selector: screenshot_selector
    params:
      screenshot_selector: footer
- name: data_extraction
  endpoint:
    path: https://www.scrapingbee.com/documentation/data-extraction/
    method: GET
    params:
      extract_rules:
        title: h1
        subtitle: span.text-20
- name: infinite_scroll
  endpoint:
    path: /
    method: GET
    data_selector: content
    params:
      url: https://demo.scrapingbee.com/infinite_scroll.html
      js_scenario: '{"instructions":[{"scroll_y":1080},{"wait":500},{"scroll_y":1080},{"wait":500}]}'
- name: AI Response
  endpoint:
    path: /
    method: GET
    data_selector: AI Response
    params: {}
- name: product_data
  endpoint:
    path: /sitemap_category.xml
    method: GET
    data_selector: products
- name: scraper
  endpoint:
    path: ''
    method: GET
    params:
      api_key: YOUR-API-KEY
      url: YOUR-URL
- name: data_extraction
  endpoint:
    path: ''
    method: GET
    data_selector: output
    params:
      api_key: YOUR-API-KEY
      url: https://scrapingbee.com/documentation/data-extraction
      extract_rules: '{''title'': ''h1'', ''subtitle'': ''span.text-20''}'
- name: search_results
  endpoint:
    path: /google
    method: GET
    data_selector: body.local_results
    params: {}
- name: table_json
  endpoint:
    path: /
    method: GET
    data_selector: table_json
    params:
      api_key: YOUR-API-KEY
      url: https://demo.scrapingbee.com/table_content.html
      extract_rules: '{"table_json":{"selector":".table","output":"table_json"},"table_array":{"selector":".table","output":"table_array"}}'
- name: product
  endpoint:
    path: /
    method: GET
    data_selector: product name
    params: {}
- name: scrape_page
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: YOUR-API-KEY
      url: https://scrapingbee.com/blog
- name: infinite_scroll
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: YOUR-API-KEY
      url: https://demo.scrapingbee.com/infinite_scroll.html
      js_scenario: '[{"instructions":[{"scroll_y":1080},{"wait":500},{"scroll_y":1080},{"wait":500}]}]'
- name: screenshot
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      screenshot: true
      url: https://scrapingbee.com/blog
      api_key: YOUR-API-KEY
- name: screenshot_full_page
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      screenshot_full_page: true
      url: https://scrapingbee.com/blog
      api_key: YOUR-API-KEY
- name: screenshot_selector
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      screenshot_selector: footer
      url: https://scrapingbee.com/blog
      api_key: YOUR-API-KEY
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: records
    params:
      api_key: YOUR-API-KEY
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: data
    params:
      api_key: YOUR-API-KEY
- name: scrape
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: YOUR-API-KEY
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
- name: scraped_page
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
      url: YOUR-URL
- name: return_page_source
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      return_page_source: 'True'
- name: usage
  endpoint:
    path: /usage
    method: GET
    params:
      api_key: YOUR-API-KEY
- name: scrape_page
  endpoint:
    path: ''
    method: GET
    params:
      api_key: YOUR-API-KEY
      url: YOUR-URL
- name: fetch_blog_post
  endpoint:
    path: ''
    method: GET
    data_selector: data
    params:
      api_key: YOUR-API-KEY
      url: YOUR-URL
      extract_rules: '{"title": "title of the blog post", "summary": "a 5 sentences
        summary of the blog post"}'
- name: scrape
  endpoint:
    path: ''
    method: GET
    data_selector: body
    params: {}
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
- name: scrape
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
      url: YOUR-URL
- name: scrape
  endpoint:
    path: ''
    method: GET
    data_selector: response
    params: {}
- name: usage
  endpoint:
    path: /usage
    method: GET
    params:
      api_key: YOUR-API-KEY
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: ''
    params: {}
- name: scraping
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params:
      scraping_config: Configuration-Name
- name: scrape
  endpoint:
    path: /
    method: GET
    data_selector: body
- name: usage
  endpoint:
    path: usage
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
- name: scrape
  endpoint:
    path: ''
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
      transparent_status_code: 'True'
- name: products
  endpoint:
    path: /search
    method: GET
    data_selector: products
    params:
      start: 0
- name: products
  endpoint:
    path: /search
    method: GET
    params:
      custom_google: 'true'
      wait_browser: networkidle2
      premium_proxy: 'true'
      extract_rules: set_1
      country_code: us
- name: nasdaq_top_100
  endpoint:
    path: https://www.cnbc.com/nasdaq-100/
    method: GET
    data_selector: table_json
    params:
      extract_rules:
        table_json:
          selector: .table
          output: table_json
        table_array:
          selector: .table
          output: table_array
- name: scraping_request
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
      url: https://scrapingbee.com/blog
- name: product_details
  endpoint:
    path: /apple-watch-ultra-2-gps--cellular.product.4000222321.html
    method: GET
    data_selector: response.text
    params:
      stealth_proxy: true
      country_code: us
      js_scenario:
        instructions:
        - evaluate: window.location.reload();
        - wait: 5000
      extract_rules:
        name: h1[itemprop=name]
        sku: span[data-sku]
        model: span[data-model-number]
        average_rating: .bv_avgRating_component_container
        total_ratings: .bv_numReviews_text
        price: '#pull-right-price > span'
        features:
          selector: .product-info-specs > .row > div:not(.spec-name)
          type: list
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: screenshot
    params: {}
- name: infinite_scroll
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: app_data
  endpoint:
    path: /apps/details
    method: GET
    data_selector: response
    params:
      app_id: app_id
- name: infinite_scroll
  endpoint:
    path: /infinite_scroll.html
    method: GET
    params:
      js_scenario:
        instructions:
        - scroll_y: 1080
        - wait: 500
        - scroll_y: 1080
        - wait: 500
- name: infinite_scroll
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: YOUR-API-KEY
      url: https://demo.scrapingbee.com/infinite_scroll.html
      js_scenario: '{''instructions'': [{''scroll_y'': 1080}, {''wait'': 500}, {''scroll_y'':
        1080}, {''wait'': 500}]}'
- name: product
  endpoint:
    path: /s/{search_query}
    method: GET
    data_selector: products
    params:
      sort_order: asc
      sort_by: bestmatch
- name: data_extraction
  endpoint:
    path: /documentation/data-extraction/
    method: GET
    data_selector: response.data
    params:
      extract_rules:
        title: h1
        subtitle: span.text-20
- name: screenshot
  endpoint:
    path: /blog
    method: GET
    data_selector: response
    params: {}
- name: screenshot
  endpoint:
    path: /api/v1
    method: GET
    data_selector: null
    params: {}
- name: product_search
  endpoint:
    path: /s
    method: GET
    data_selector: products
    params:
      search_query: school bags
      page: 1
      sort_by: avg_customer_review
      zip: '98101'
      domain: com
- name: personal_data
  endpoint:
    path: /personal_data
    method: GET
    data_selector: data
    params: {}
- name: hotel_data
  endpoint:
    path: /Hotel-Search
    method: GET
    data_selector: properties
    params:
      country_code: us
- name: extract_rules
  endpoint:
    path: /
    method: GET
    data_selector: body
    params:
      extract_rules:
        title: h1
        subtitle: span.text-20
- name: screenshot
  endpoint:
    path: URL_TO_SCRAPE
    method: GET
    data_selector: response
    params:
      screenshot: true
- name: blog
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
      url: YOUR-URL
- name: data_extraction
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      extract_rules: '{"title": "h1", "subtitle": "span.text-20"}'
- name: screenshot
  endpoint:
    path: /api/v1/
    method: GET
    data_selector: response
    params: {}
- name: table_json
  endpoint:
    path: https://demo.scrapingbee.com/table_content.html
    method: GET
    data_selector: table_json
    params:
      extract_rules:
        table_json:
          selector: .table
          output: table_json
        table_array:
          selector: .table
          output: table_array
- name: data_extraction
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      api_key: YOUR-API-KEY
      url: https://www.scrapingbee.com/documentation/data-extraction
      extract_rules: '{"title":"h1","subtitle":"span.text-20"}'
- name: jobs
  endpoint:
    path: /search
    method: GET
    data_selector: jobs
    params:
      custom_google: 'true'
      stealth_proxy: 'true'
      country_code: us
- name: google_search
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: YOUR-API-KEY
      search: YOUR-SEARCH
- name: Subprocessors
  endpoint:
    path: /subprocessors
    method: GET
    data_selector: subprocessors
    params: {}
- name: scraping_request
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: scraping
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: YOUR-API-KEY
      url: ''
- name: name
  endpoint:
    type: string
- name: categories
  endpoint:
    type: list
- name: price
  endpoint:
    type: number
- name: in_stock
  endpoint:
    type: boolean
- name: shipping_info
  endpoint:
    type: item
    output:
      delivery_time: estimated delivery in days
      shipping_cost: shipping cost in dollars
- name: size
  endpoint:
    type: list
    enum:
    - XS
    - S
    - M
    - L
    - XL
- name: supported_countries
  endpoint:
    path: /supported_countries
    method: GET
    data_selector: countries
notes:
- For failed requests, the API will return a 500 status code and won’t charge you
  for the request.
- Setting the maximum number of retries if we have failed requests to 5.
- Max retries for requests is set to 5.
- Only pay for successful requests
- No-limit bandwidth
- Extract AI-generated content with our ready-to-use code.
- Scrape data from Walmart with ScrapingBee to extract valuable catalog information
  with just a click of a button.
- Easily scrape millions of pages.
- Bypass rate limits and anti-bot measures with advanced anti-bot measures, stealth/premium
  proxies and cutting-edge headless browser technology.
- Extract valuable data from every corner of the web with our specialized scrapers.
- Data can be scraped from tables without post-processing of the HTML response.
- Minimum payout $50
- Payout are pending for 30 days to take into account refunds (up to 60 days)
- Payment are made through Paypal, so you need an account in order to receive your
  commission.
- Self referral is forbidden and will result in your account getting banned.
- Commissions are limited to $62.25/mo per customers.
- To prevent abuse, you must refer at least 2 customers before receiving payouts.
- API key is required for authentication
- Check API usage limits to avoid throttling
- Requires API key to access endpoints.
- Uses transparent_status_code=true to get same body and status code as the requested
  URL
- Every requests made will be considered successful and will cost some amount of credits.
- All requests are authenticated using your private API key.
- JavaScript rendering is the default behavior.
- Screenshots are only available when using render_js=True.
- The API will transparently download images, PDF or anything that is not HTML.
- The API has a maximum 30-second timeout for requests.
- To scrape successfully from hard-to-scrape websites, consider using premium or stealth
  proxies.
- The transparent_status_code parameter allows getting the same body and status code
  as the requested URL.
- The API will return a 500 status code for failed requests and won’t charge for them.
- Max retries set to 5.
- API allows multiple concurrent scraping operations
- To make it easier, check the `next_start` value in the response of the first/previous
  response
- JavaScript scenarios are JSON formatted and need to be stringified for GET requests
- It is strongly advised to use JS scenario with json_response set to true for debugging
- 'Get your free API KEY and 1000 free scraping credits by signing up to our platform
  here: https://app.scrapingbee.com/account/register'
- Request cost, return code and default parameters will be the same as a standard
  no-proxy request.
- We recommend disabling Javascript rendering in proxy mode, which is enabled by default.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some requests may return a 500 status code but will not charge for the request.
- The more concurrent requests limit you have the more calls you can have active in
  parallel.
- Provider cannot guarantee that the Services will work without any interruption,
  will be error or virus free.
- User is solely responsible that web scraping operations performed using a configuration
  created or provided as part of the Services are duly authorized by the applicable
  terms and conditions of the targeted databases, websites, or other sources.
- Sort order can be either asc or desc.
- Sorting criteria includes bestmatch, topsellers, price, toprated.
- Cookies are installed during Your first visit to the Website, but only subject to
  Your prior consent through the cookies banner which allows You to select the cookies
  you accept (except the cookies that are technically necessary to access the Website
  or the Services).
- The website cannot function properly without mandatory cookies.
- Uses API key for authentication.
- You can exclude zip parameter, however, the location will be random
- We do not knowingly collect or process Personal Data from Data Subjects under 18
  years old.
- To remove specific HTML elements, use a JavaScript Scenario with an evaluate instruction.
- 'Date format: YYYY-MM-DD'
- Use data from Expedia to build comprehensive databases of accommodation options
  for any destination or market analysis.
- Uses API key for authentication
- Becoming a customer of our service implies acceptance of our Data Processing Agreement
- Requires API key for authentication
- 'You can find more about this feature in our documentation: Data Extraction.'
- More about CSS selectors in W3Schools - CSS Selectors page.
- Extract data from any website.
- Bypass rate limits and anti-bot measures with advanced anti-bot measures.
- Every successful API call will cost you 15 api credits.
- Every search that failed will be tried as many times as possible for 30 seconds.
- User must inform Contacts of their rights and how to exercise them.
- Extraction rules are JSON formatted and need to be stringified for API calls.
- 'Geolocation is only available when premium proxies are enabled: premium_proxy=true'
- Limitless bandwidth
- Get access to all the features, no matter the price you pay
errors:
- 'Request failed - Status Code: 404'
- 'Request failed - Status Code: 200'
- 'Error: "..." - Code: ...'
- '401 Unauthorized: Invalid or missing API key'
- '429 Too Many Requests: Rate limit exceeded'
- 'HTTP Request failed: Check your API key.'
- 'Error: "<error_message>" - Code: <error_code>'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or token expiration'
- '403 Forbidden: Check your API key or usage limits.'
- '429 Too Many Requests: You are being rate-limited. Try again later.'
- '500 Internal Server Error: There was a problem with the server.'
- '401 Unauthorized: Check your API key.'
- '429 Too Many Requests: Rate limit exceeded.'
- '200: Successful Call'
- '400: Bad request - Incorrect parameters or parameters type.'
- '401: No more credit available - Please upgrade your plan.'
- '404: Requested URL not found - Provide a valid URL.'
- '410: Requested URL gone - Provide a valid URL.'
- '413: File too large - Request a smaller file.'
- '429: Too many concurrent requests - Please upgrade your plan.'
- '500: Misc error - Please retry.'
- 'HTTP Request failed: Check your API key and parameters'
- 'Invalid api key: Ensure you have added your API KEY or you are using an incorrect
  key.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '500: Error request response with status code 500'
- Provider's liability is limited to direct damages.
- Provider shall not be liable for the manner of use of the website, API, or Services.
- By disabling analytical cookies, we will not be able to analyze the site traffic.
- 'Invalid api key: Check if API key is correctly added or if it is valid.'
- HTTP Request failed
- 'Invalid api key: Check if an API key is provided or correct.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.scrapingbee.com
  auth:
    type: apikey
    location: query
    header_name: Authorization
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    username: YOUR-API-KEY
    password: PARAMETERS
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  headers:
    Accept: application/json
    api_key: YOUR-API-KEY
    Authorization: YOUR-API-KEY
  paginator:
    type: retries
    default_page_size: 20
    default_retries: 5
  resources:
  - name: screenshot
    endpoint:
      path: /
      method: GET
      data_selector: screenshot
      params:
        screenshot: 'true'
        screenshot_full_page: 'true'
        screenshot_selector: footer
source_metadata: null
