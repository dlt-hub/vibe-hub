resources:
- name: person
  endpoint:
    path: /api/v1/person
    method: GET
    data_selector: object
    params: {}
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: null
    params: {}
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    params:
      pretty: 'false'
      min_likelihood: 2
      include_if_matched: 'false'
      titlecase: 'false'
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
- name: company_search
  endpoint:
    path: /company/search
    method: GET
    data_selector: records
    params: {}
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: records
    params: {}
- name: person
  endpoint:
    path: /api/persons
    method: GET
    data_selector: object
    params: {}
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: data
    params: {}
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
    data_selector: records
    params: {}
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
- name: person_search
  endpoint:
    path: /v5/person/search
    method: POST
- name: person
  endpoint:
    path: /200/person
    method: GET
    data_selector: object
    params: {}
- name: person_search
  endpoint:
    path: /v5/person/search
    method: POST
- name: person_search
  endpoint:
    path: /v5/person/search
    method: POST
    data_selector: results
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: object
- name: company_clean
  endpoint:
    path: /v5/company/clean
    method: GET
- name: company
  endpoint:
    path: /v1/companies
    method: GET
    data_selector: data
- name: school_clean
  endpoint:
    path: /school/clean
    method: GET
    data_selector: object
    params: {}
- name: school
  endpoint:
    path: /school/clean
    method: POST
    data_selector: object
    params: {}
- name: location_clean
  endpoint:
    path: /v5/location/clean
    method: GET
    data_selector: object
    params:
      location: string
      pretty: boolean
- name: location_clean
  endpoint:
    path: /v5/location/clean
    method: POST
    data_selector: object
    params: {}
- name: company
  endpoint:
    path: /200/company
    method: GET
    data_selector: object
- name: company_enrich
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: records
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params: {}
- name: company_search
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: records
    params:
      size: 1
- name: company_search
  endpoint:
    path: /company/search
    method: GET
    data_selector: records
- name: company_enrich
  endpoint:
    path: /company/enrich
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: autocomplete
  endpoint:
    path: /v5/autocomplete
    method: GET
    data_selector: ''
    params:
      field: company
      size: 10
      titlecase: false
      pretty: false
- name: autocomplete
  endpoint:
    path: /v5/autocomplete
    method: POST
    data_selector: results
    params:
      size: 10
      titlecase: false
      pretty: false
- name: ip_enrichment
  endpoint:
    path: /ip/enrich
    method: GET
    data_selector: data
- name: job_title_enrich
  endpoint:
    path: /v5/job_title/enrich
    method: POST
    data_selector: object
- name: person
  endpoint:
    path: /person/enrich
    method: POST
    data_selector: data
- name: industry
  endpoint:
    data_selector: industry
- name: inferred_years_experience
  endpoint:
    data_selector: inferred_years_experience
- name: interests
  endpoint:
    data_selector: interests
- name: job_history
  endpoint:
    data_selector: job_history
- name: skills
  endpoint:
    data_selector: skills
- name: summary
  endpoint:
    data_selector: summary
- name: possible_location_names
  endpoint:
    path: /possible_location_names
    method: GET
    data_selector: locations
- name: possible_phones
  endpoint:
    path: /possible_phones
    method: GET
    data_selector: phones
- name: possible_profiles
  endpoint:
    path: /possible_profiles
    method: GET
    data_selector: profiles
- name: possible_street_addresses
  endpoint:
    path: /possible_street_addresses
    method: GET
    data_selector: street_addresses
- name: facebook_friends
  endpoint:
    path: /facebook_friends
    method: GET
    data_selector: friends
- name: facebook_id
  endpoint:
    path: /facebook_id
    method: GET
    data_selector: id
- name: facebook_url
  endpoint:
    path: /facebook_url
    method: GET
    data_selector: url
- name: facebook_username
  endpoint:
    path: /facebook_username
    method: GET
    data_selector: username
- name: github_url
  endpoint:
    path: /github_url
    method: GET
    data_selector: url
- name: github_username
  endpoint:
    path: /github_username
    method: GET
    data_selector: username
- name: linkedin_connections
  endpoint:
    path: /linkedin_connections
    method: GET
    data_selector: connections
- name: linkedin_id
  endpoint:
    path: /linkedin_id
    method: GET
    data_selector: id
- name: linkedin_url
  endpoint:
    path: /linkedin_url
    method: GET
    data_selector: url
- name: linkedin_username
  endpoint:
    path: /linkedin_username
    method: GET
    data_selector: username
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: profiles
- name: twitter_url
  endpoint:
    path: /twitter_url
    method: GET
    data_selector: url
- name: twitter_username
  endpoint:
    path: /twitter_username
    method: GET
    data_selector: username
- name: certifications
  endpoint:
    path: /certifications
    method: GET
    data_selector: certifications
- name: experience
  endpoint:
    path: /experience
    method: GET
    data_selector: experience
- name: headline
  endpoint:
    path: /headline
    method: GET
    data_selector: headline
- name: person
  endpoint:
    path: /api/person
    method: GET
    data_selector: data
    params: {}
- name: job_history
  endpoint:
    data_selector: job_history
- name: skills
  endpoint:
    data_selector: skills
- name: summary
  endpoint:
    data_selector: summary
- name: dataset_version
  endpoint:
    path: /docs/person-enrichment-api
    method: GET
    data_selector: dataset_version
- name: first_seen
  endpoint:
    path: /docs/person-enrichment-api
    method: GET
    data_selector: first_seen
- name: num_records
  endpoint:
    path: /docs/person-enrichment-api
    method: GET
    data_selector: num_records
- name: num_sources
  endpoint:
    path: /docs/person-enrichment-api
    method: GET
    data_selector: num_sources
- name: operation_id
  endpoint:
    path: /docs/data-license
    method: GET
    data_selector: operation_id
- name: name_aliases
  endpoint:
    path: /name_aliases
    method: GET
    data_selector: name_aliases
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: emails
- name: mobile_phone
  endpoint:
    path: /mobile_phone
    method: GET
    data_selector: mobile_phone
- name: personal_emails
  endpoint:
    path: /personal_emails
    method: GET
    data_selector: personal_emails
- name: phone_numbers
  endpoint:
    path: /phone_numbers
    method: GET
    data_selector: phone_numbers
- name: phones
  endpoint:
    path: /phones
    method: GET
    data_selector: phones
- name: recommended_personal_email
  endpoint:
    path: /recommended_personal_email
    method: GET
    data_selector: recommended_personal_email
- name: work_email
  endpoint:
    path: /work_email
    method: GET
    data_selector: work_email
- name: job_company_12mo_employee_growth_rate
  endpoint:
    path: /job_company_12mo_employee_growth_rate
    method: GET
    data_selector: job_company_12mo_employee_growth_rate
- name: job_company_facebook_url
  endpoint:
    path: /job_company_facebook_url
    method: GET
    data_selector: job_company_facebook_url
- name: job_company_founded
  endpoint:
    path: /job_company_founded
    method: GET
    data_selector: job_company_founded
- name: job_company_employee_count
  endpoint:
    path: /job_company_employee_count
    method: GET
    data_selector: job_company_employee_count
- name: job_company_id
  endpoint:
    path: /job_company_id
    method: GET
    data_selector: job_company_id
- name: job_company_industry
  endpoint:
    path: /job_company_industry
    method: GET
    data_selector: job_company_industry
- name: job_company_inferred_revenue
  endpoint:
    path: /job_company_inferred_revenue
    method: GET
    data_selector: job_company_inferred_revenue
- name: job_company_linkedin_id
  endpoint:
    path: /job_company_linkedin_id
    method: GET
    data_selector: job_company_linkedin_id
- name: job_company_linkedin_url
  endpoint:
    path: /job_company_linkedin_url
    method: GET
    data_selector: job_company_linkedin_url
- name: job_company_location_address_line_2
  endpoint:
    path: /job_company_location_address_line_2
    method: GET
    data_selector: job_company_location_address_line_2
- name: job_company_location_continent
  endpoint:
    path: /job_company_location_continent
    method: GET
    data_selector: job_company_location_continent
- name: job_company_location_country
  endpoint:
    path: /job_company_location_country
    method: GET
    data_selector: job_company_location_country
- name: job_company_location_geo
  endpoint:
    path: /job_company_location_geo
    method: GET
    data_selector: job_company_location_geo
- name: job_company_location_locality
  endpoint:
    path: /job_company_location_locality
    method: GET
    data_selector: job_company_location_locality
- name: job_company_location_metro
  endpoint:
    path: /job_company_location_metro
    method: GET
    data_selector: job_company_location_metro
- name: job_company_location_name
  endpoint:
    path: /job_company_location_name
    method: GET
    data_selector: job_company_location_name
- name: job_company_location_postal_code
  endpoint:
    path: /job_company_location_postal_code
    method: GET
    data_selector: job_company_location_postal_code
- name: job_company_location_region
  endpoint:
    path: /job_company_location_region
    method: GET
    data_selector: job_company_location_region
- name: job_company_location_street_address
  endpoint:
    path: /job_company_location_street_address
    method: GET
    data_selector: job_company_location_street_address
- name: job_company_name
  endpoint:
    path: /job_company_name
    method: GET
    data_selector: job_company_name
- name: job_company_size
  endpoint:
    path: /job_company_size
    method: GET
    data_selector: job_company_size
- name: job_company_ticker
  endpoint:
    path: /job_company_ticker
    method: GET
    data_selector: job_company_ticker
- name: job_company_total_funding_raised
  endpoint:
    path: /job_company_total_funding_raised
    method: GET
    data_selector: job_company_total_funding_raised
- name: job_company_twitter_url
  endpoint:
    path: /job_company_twitter_url
    method: GET
    data_selector: job_company_twitter_url
- name: job_company_type
  endpoint:
    path: /job_company_type
    method: GET
    data_selector: job_company_type
- name: job_company_website
  endpoint:
    path: /job_company_website
    method: GET
    data_selector: job_company_website
- name: inferred_salary
  endpoint:
    path: /inferred_salary
    method: GET
    data_selector: inferred_salary
- name: job_last_changed
  endpoint:
    path: /job_last_changed
    method: GET
    data_selector: job_last_changed
- name: job_last_verified
  endpoint:
    path: /job_last_verified
    method: GET
    data_selector: job_last_verified
- name: job_onet_broad_occupation
  endpoint:
    path: /job_onet_broad_occupation
    method: GET
    data_selector: job_onet_broad_occupation
- name: job_onet_code
  endpoint:
    path: /job_onet_code
    method: GET
    data_selector: job_onet_code
- name: job_onet_major_group
  endpoint:
    path: /job_onet_major_group
    method: GET
    data_selector: job_onet_major_group
- name: job_onet_minor_group
  endpoint:
    path: /job_onet_minor_group
    method: GET
    data_selector: job_onet_minor_group
- name: job_onet_specific_occupation
  endpoint:
    path: /job_onet_specific_occupation
    method: GET
    data_selector: job_onet_specific_occupation
- name: job_onet_specific_occupation_detail
  endpoint:
    path: /job_onet_specific_occupation_detail
    method: GET
    data_selector: job_onet_specific_occupation_detail
- name: job_start_date
  endpoint:
    path: /job_start_date
    method: GET
    data_selector: job_start_date
- name: job_summary
  endpoint:
    path: /job_summary
    method: GET
    data_selector: job_summary
- name: job_title
  endpoint:
    path: /job_title
    method: GET
    data_selector: job_title
- name: job_title_class
  endpoint:
    path: /job_title_class
    method: GET
    data_selector: job_title_class
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: emails
- name: mobile_phone
  endpoint:
    path: /mobile_phone
    method: GET
    data_selector: mobile_phone
- name: personal_emails
  endpoint:
    path: /personal_emails
    method: GET
    data_selector: personal_emails
- name: phone_numbers
  endpoint:
    path: /phone_numbers
    method: GET
    data_selector: phone_numbers
- name: phones
  endpoint:
    path: /phones
    method: GET
    data_selector: phones
- name: recommended_personal_email
  endpoint:
    path: /recommended_personal_email
    method: GET
    data_selector: recommended_personal_email
- name: work_email
  endpoint:
    path: /work_email
    method: GET
    data_selector: work_email
- name: job_company_12mo_employee_growth_rate
  endpoint:
    path: /job_company_12mo_employee_growth_rate
    method: GET
    data_selector: job_company_12mo_employee_growth_rate
- name: job_company_facebook_url
  endpoint:
    path: /job_company_facebook_url
    method: GET
    data_selector: job_company_facebook_url
- name: job_company_founded
  endpoint:
    path: /job_company_founded
    method: GET
    data_selector: job_company_founded
- name: job_company_employee_count
  endpoint:
    path: /job_company_employee_count
    method: GET
    data_selector: job_company_employee_count
- name: job_company_id
  endpoint:
    path: /job_company_id
    method: GET
    data_selector: job_company_id
- name: job_company_industry
  endpoint:
    path: /job_company_industry
    method: GET
    data_selector: job_company_industry
- name: job_company_inferred_revenue
  endpoint:
    path: /job_company_inferred_revenue
    method: GET
    data_selector: job_company_inferred_revenue
- name: job_company_linkedin_id
  endpoint:
    path: /job_company_linkedin_id
    method: GET
    data_selector: job_company_linkedin_id
- name: job_company_linkedin_url
  endpoint:
    path: /job_company_linkedin_url
    method: GET
    data_selector: job_company_linkedin_url
- name: job_company_location_address_line_2
  endpoint:
    path: /job_company_location_address_line_2
    method: GET
    data_selector: job_company_location_address_line_2
- name: job_company_location_continent
  endpoint:
    path: /job_company_location_continent
    method: GET
    data_selector: job_company_location_continent
- name: job_company_location_country
  endpoint:
    path: /job_company_location_country
    method: GET
    data_selector: job_company_location_country
- name: job_company_location_geo
  endpoint:
    path: /job_company_location_geo
    method: GET
    data_selector: job_company_location_geo
- name: job_company_location_locality
  endpoint:
    path: /job_company_location_locality
    method: GET
    data_selector: job_company_location_locality
- name: job_company_location_metro
  endpoint:
    path: /job_company_location_metro
    method: GET
    data_selector: job_company_location_metro
- name: job_company_location_name
  endpoint:
    path: /job_company_location_name
    method: GET
    data_selector: job_company_location_name
- name: job_company_location_postal_code
  endpoint:
    path: /job_company_location_postal_code
    method: GET
    data_selector: job_company_location_postal_code
- name: job_company_location_region
  endpoint:
    path: /job_company_location_region
    method: GET
    data_selector: job_company_location_region
- name: job_company_location_street_address
  endpoint:
    path: /job_company_location_street_address
    method: GET
    data_selector: job_company_location_street_address
- name: job_company_name
  endpoint:
    path: /job_company_name
    method: GET
    data_selector: job_company_name
- name: job_company_size
  endpoint:
    path: /job_company_size
    method: GET
    data_selector: job_company_size
- name: job_company_ticker
  endpoint:
    path: /job_company_ticker
    method: GET
    data_selector: job_company_ticker
- name: job_company_total_funding_raised
  endpoint:
    path: /job_company_total_funding_raised
    method: GET
    data_selector: job_company_total_funding_raised
- name: job_company_twitter_url
  endpoint:
    path: /job_company_twitter_url
    method: GET
    data_selector: job_company_twitter_url
- name: job_company_type
  endpoint:
    path: /job_company_type
    method: GET
    data_selector: job_company_type
- name: job_company_website
  endpoint:
    path: /job_company_website
    method: GET
    data_selector: job_company_website
- name: inferred_salary
  endpoint:
    path: /inferred_salary
    method: GET
    data_selector: inferred_salary
- name: job_last_changed
  endpoint:
    path: /job_last_changed
    method: GET
    data_selector: job_last_changed
- name: job_last_verified
  endpoint:
    path: /job_last_verified
    method: GET
    data_selector: job_last_verified
- name: job_onet_broad_occupation
  endpoint:
    path: /job_onet_broad_occupation
    method: GET
    data_selector: job_onet_broad_occupation
- name: job_onet_code
  endpoint:
    path: /job_onet_code
    method: GET
    data_selector: job_onet_code
- name: job_onet_major_group
  endpoint:
    path: /job_onet_major_group
    method: GET
    data_selector: job_onet_major_group
- name: job_onet_minor_group
  endpoint:
    path: /job_onet_minor_group
    method: GET
    data_selector: job_onet_minor_group
- name: job_onet_specific_occupation
  endpoint:
    path: /job_onet_specific_occupation
    method: GET
    data_selector: job_onet_specific_occupation
- name: job_onet_specific_occupation_detail
  endpoint:
    path: /job_onet_specific_occupation_detail
    method: GET
    data_selector: job_onet_specific_occupation_detail
- name: job_start_date
  endpoint:
    path: /job_start_date
    method: GET
    data_selector: job_start_date
- name: job_summary
  endpoint:
    path: /job_summary
    method: GET
    data_selector: job_summary
- name: job_title
  endpoint:
    path: /job_title
    method: GET
    data_selector: job_title
- name: job_title_class
  endpoint:
    path: /job_title_class
    method: GET
    data_selector: job_title_class
- name: job_title_levels
  endpoint:
    path: /job_title_levels
    method: GET
    data_selector: job_title_levels
- name: job_title_role
  endpoint:
    path: /job_title_role
    method: GET
    data_selector: job_title_role
- name: person
  endpoint:
    path: /api/persons
    method: GET
    data_selector: object
    params: {}
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: records
    params: {}
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    params:
      min_likelihood: 2
      include_if_matched: false
      titlecase: false
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
- name: company_clean
  endpoint:
    path: /v5/company/clean
    method: GET
    data_selector: responses
    params: {}
- name: company
  endpoint:
    path: /api/v1/company
    method: GET
    data_selector: data
    params: {}
- name: company_enrich
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: data
    params: {}
- name: company
  endpoint:
    path: /v1/companies
    method: GET
    data_selector: data
    params: {}
- name: autocomplete
  endpoint:
    path: /v5/autocomplete
    method: GET
    data_selector: results
    params:
      field: company
      size: 10
      titlecase: false
      pretty: false
- name: ip_enrich
  endpoint:
    path: /ip/enrich
    method: GET
    data_selector: data
    params:
      ip: required
      return_ip_location: 'false'
      return_ip_metadata: 'false'
      return_person: 'false'
      return_if_unmatched: 'false'
      titlecase: 'false'
      pretty: 'false'
- name: job_title_enrich
  endpoint:
    path: /v5/job_title/enrich
    method: GET
    data_selector: object
    params:
      job_title: string
      titlecase: boolean
      pretty: boolean
- name: person_enrichment
  endpoint:
    path: /api/person/enrich
    method: POST
    data_selector: data
    params: {}
- name: company_enrichment
  endpoint:
    path: /api/company/enrich
    method: POST
    data_selector: data
    params: {}
- name: person_profile
  endpoint:
    path: /v5/person/enrich
    method: GET
    params:
      api_key: XXXX
      profile: YYYY
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: profile
    params:
      api_key: XXXX
      pretty: 'True'
- name: company_profile
  endpoint:
    path: /v5/company/enrich
    method: GET
    params:
      api_key: XXXX
      profile: YYYY
- name: company_enrich
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: records
    params: {}
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: json_response
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: json_response
    params: {}
- name: identities
  endpoint:
    path: /v5/person/identify
    method: GET
    data_selector: matches
    params:
      first_name: sean
      last_name: thorne
      company: people data labs
      pretty: true
      api_key: YOUR API KEY
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: json_response
    params: {}
- name: bulk_person_enrichment
  endpoint:
    path: /v5/person/bulk_enrich
    method: POST
    data_selector: json_response
    params: {}
- name: bulk_person_enrichment
  endpoint:
    path: /bulk
    method: POST
    data_selector: data
- name: person_search
  endpoint:
    path: /search
    method: GET
    data_selector: data
- name: person_identify
  endpoint:
    path: /identify
    method: GET
    data_selector: matches
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE website='google.com';
      size: 10
      pretty: true
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      size: 10
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: POST
    data_selector: data
- name: bulk_company_enrichment
  endpoint:
    path: /v5/company/enrich/bulk
    method: POST
    data_selector: data
- name: ip_enrichment
  endpoint:
    path: /ip/enrichment
    method: GET
    data_selector: data
    params: {}
- name: location_cleaner
  endpoint:
    path: /v5/location/clean
    method: GET
    data_selector: response
    params:
      skill: ai
- name: company_cleaner
  endpoint:
    path: /company/clean
    method: GET
    data_selector: response
    params: {}
- name: school_cleaner
  endpoint:
    path: /school/clean
    method: GET
    data_selector: response
    params: {}
- name: autocomplete
  endpoint:
    path: /v5/autocomplete
    method: GET
    data_selector: results
- name: company_cleaner
  endpoint:
    path: /v5/cleaner/company
    method: GET
    data_selector: results
- name: job_title_enrichment
  endpoint:
    path: /v5/job_title/enrich
    method: GET
    data_selector: response
    params: {}
- name: skill
  endpoint:
    path: /skill/enrich
    method: GET
    data_selector: response
    params:
      skill: ai
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: response
    params:
      api_key: YOUR API KEY
      company:
      - Hallspot
      - People Data Labs
      email:
      - sean.thorne@talentiq.co
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /api/v1/person
    method: GET
    data_selector: records
    params: {}
- name: person
  endpoint:
    path: /api/v1/person
    method: GET
    data_selector: records
- name: personal_emails
  endpoint:
    path: /docs/fields#personal_emails
    method: GET
    data_selector: Array [String]
    params: {}
- name: phone_numbers
  endpoint:
    path: /docs/fields#phone_numbers
    method: GET
    data_selector: Array [String (Phone)]
    params: {}
- name: phones
  endpoint:
    path: /docs/fields#phones
    method: GET
    data_selector: Array [Object]
    params: {}
- name: possible_birth_dates
  endpoint:
    path: /docs/fields#possible_birth_dates
    method: GET
    data_selector: Array [String (Date)]
    params: {}
- name: possible_emails
  endpoint:
    path: /docs/fields#possible_emails
    method: GET
    data_selector: Array [Object]
    params: {}
- name: possible_location_names
  endpoint:
    path: /docs/fields#possible_location_names
    method: GET
    data_selector: Array [String]
    params: {}
- name: possible_phones
  endpoint:
    path: /docs/fields#possible_phones
    method: GET
    data_selector: Array [Object]
    params: {}
- name: possible_profiles
  endpoint:
    path: /docs/fields#possible_profiles
    method: GET
    data_selector: Array [Object]
    params: {}
- name: possible_street_addresses
  endpoint:
    path: /docs/fields#possible_street_addresses
    method: GET
    data_selector: Array [Object]
    params: {}
- name: profiles
  endpoint:
    path: /docs/fields#profiles
    method: GET
    data_selector: Array [Object]
    params: {}
- name: street_addresses
  endpoint:
    path: /docs/fields#street_addresses
    method: GET
    data_selector: Array [Object]
    params: {}
- name: O*Net Fields
  endpoint:
    path: /docs/fields#job_onet_broad_occupation
    method: GET
    data_selector: records
    params: {}
- name: Premium Company Attributes
  endpoint:
    path: /docs/fields#job_company_12mo_employee_growth_rate
    method: GET
    data_selector: records
    params: {}
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
    params: {}
- name: job_history
  endpoint:
    path: /job_history
    method: GET
    data_selector: properties
- name: education
  endpoint:
    path: /education
    method: GET
    data_selector: properties
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: properties
- name: possible_profiles
  endpoint:
    path: /possible_profiles
    method: GET
    data_selector: properties
- name: certifications
  endpoint:
    path: /certifications
    method: GET
    data_selector: properties
- name: languages
  endpoint:
    path: /languages
    method: GET
    data_selector: properties
- name: All Dataset
  endpoint:
    path: /datasets/all
    method: GET
    data_selector: profiles
    params: {}
- name: Consumer Social Dataset
  endpoint:
    path: /datasets/consumer_social
    method: GET
    data_selector: profiles
    params: {}
- name: Developer Dataset
  endpoint:
    path: /datasets/developer
    method: GET
    data_selector: profiles
    params: {}
- name: Email Dataset
  endpoint:
    path: /datasets/email
    method: GET
    data_selector: profiles
    params: {}
- name: Mobile Phone Dataset
  endpoint:
    path: /datasets/mobile_phone
    method: GET
    data_selector: profiles
    params: {}
- name: Phone Dataset
  endpoint:
    path: /datasets/phone
    method: GET
    data_selector: profiles
    params: {}
- name: Resume Dataset
  endpoint:
    path: /datasets/resume
    method: GET
    data_selector: profiles
    params: {}
- name: dataset_stats
  endpoint:
    path: /dataset/stats
    method: GET
    data_selector: records
    params: {}
- name: consumer_social_stats
  endpoint:
    path: /consumer/social/stats
    method: GET
    data_selector: records
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
    params: {}
- name: possible_emails
  endpoint:
    path: /possible_emails
    method: GET
    data_selector: records
    params: {}
- name: possible_phones
  endpoint:
    path: /possible_phones
    method: GET
    data_selector: records
    params: {}
- name: possible_street_addresses
  endpoint:
    path: /possible_street_addresses
    method: GET
    data_selector: records
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: records
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: records
    params: {}
- name: work_email
  endpoint:
    path: /work_email
    method: GET
    data_selector: records
    params: {}
- name: developer_stats
  endpoint:
    path: /developer/stats
    method: GET
    data_selector: records
- name: possible_profiles
  endpoint:
    path: /possible_profiles
    method: GET
    data_selector: records
    params: {}
- name: possible_street_addresses
  endpoint:
    path: /possible_street_addresses
    method: GET
    data_selector: records
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: records
    params: {}
- name: sex
  endpoint:
    path: /sex
    method: GET
    data_selector: records
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: records
    params: {}
- name: street_addresses
  endpoint:
    path: /street_addresses
    method: GET
    data_selector: records
    params: {}
- name: summary
  endpoint:
    path: /summary
    method: GET
    data_selector: records
    params: {}
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: records
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: records
    params: {}
- name: experience
  endpoint:
    path: /experience
    method: GET
    data_selector: records
    params: {}
- name: education
  endpoint:
    path: /education
    method: GET
    data_selector: records
    params: {}
- name: mobile_phone_stats
  endpoint:
    path: /mobile_phone_stats
    method: GET
    data_selector: records
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
- name: possible_emails
  endpoint:
    path: /possible_emails
    method: GET
    data_selector: records
- name: possible_phones
  endpoint:
    path: /possible_phones
    method: GET
    data_selector: records
- name: possible_profiles
  endpoint:
    path: /possible_profiles
    method: GET
    data_selector: records
- name: possible_street_addresses
  endpoint:
    path: /possible_street_addresses
    method: GET
    data_selector: records
- name: street_addresses
  endpoint:
    path: /street_addresses
    method: GET
    data_selector: records
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: records
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: records
- name: phones
  endpoint:
    path: /phones
    method: GET
    data_selector: records
    params: {}
- name: possible_birth_dates
  endpoint:
    path: /possible_birth_dates
    method: GET
    data_selector: records
- name: possible_emails
  endpoint:
    path: /possible_emails
    method: GET
    data_selector: records
- name: possible_location_names
  endpoint:
    path: /possible_location_names
    method: GET
    data_selector: records
- name: possible_phones
  endpoint:
    path: /possible_phones
    method: GET
    data_selector: records
- name: possible_profiles
  endpoint:
    path: /possible_profiles
    method: GET
    data_selector: records
- name: possible_street_addresses
  endpoint:
    path: /possible_street_addresses
    method: GET
    data_selector: records
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: records
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: records
- name: street_addresses
  endpoint:
    path: /street_addresses
    method: GET
    data_selector: records
- name: resume_stats
  endpoint:
    path: /resume/stats
    method: GET
    data_selector: records
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
    params: {}
- name: phones
  endpoint:
    path: /phones
    method: GET
    data_selector: records
    params: {}
- name: possible_emails
  endpoint:
    path: /possible_emails
    method: GET
    data_selector: records
    params: {}
- name: possible_street_addresses
  endpoint:
    path: /possible_street_addresses
    method: GET
    data_selector: records
    params: {}
- name: recommended_personal_email
  endpoint:
    path: /recommended_personal_email
    method: GET
    data_selector: records
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: records
    params: {}
- name: work_email
  endpoint:
    path: /work_email
    method: GET
    data_selector: records
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: records
    params: {}
- name: street_addresses
  endpoint:
    path: /street_addresses
    method: GET
    data_selector: records
    params: {}
- name: possible_emails
  endpoint:
    path: /possible_emails
    method: GET
    data_selector: records
    params: {}
- name: possible_phones
  endpoint:
    path: /possible_phones
    method: GET
    data_selector: records
    params: {}
- name: possible_profiles
  endpoint:
    path: /possible_profiles
    method: GET
    data_selector: records
    params: {}
- name: possible_street_addresses
  endpoint:
    path: /possible_street_addresses
    method: GET
    data_selector: records
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
    params: {}
- name: recommended_personal_email
  endpoint:
    path: /recommended_personal_email
    method: GET
    data_selector: records
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: records
    params: {}
- name: sex
  endpoint:
    path: /sex
    method: GET
    data_selector: records
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: records
    params: {}
- name: street_addresses
  endpoint:
    path: /street_addresses
    method: GET
    data_selector: records
    params: {}
- name: summary
  endpoint:
    path: /summary
    method: GET
    data_selector: records
    params: {}
- name: twitter_url
  endpoint:
    path: /twitter_url
    method: GET
    data_selector: records
    params: {}
- name: twitter_username
  endpoint:
    path: /twitter_username
    method: GET
    data_selector: records
    params: {}
- name: work_email
  endpoint:
    path: /work_email
    method: GET
    data_selector: records
    params: {}
- name: aggregations_by_country
  endpoint:
    path: /docs/countries
    method: GET
    data_selector: aggregations
    params: {}
- name: person_record
  endpoint:
    path: /api/person
    method: GET
    data_selector: records
    params: {}
- name: person
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: data
    params:
      api_key: YOUR API KEY
      profile:
      - linkedin.com/in/seanthorne
- name: person
  endpoint:
    path: /v5/enrich
    method: GET
    data_selector: data
    params: {}
- name: person_enrichment
  endpoint:
    path: /v1/person/enrich
    method: GET
    data_selector: data
    params: {}
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: GET
    params:
      required: emails
- name: person_enrichment
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: YOUR API KEY
      name:
      - Sean Thorne
      profile:
      - www.twitter.com/seanthorne5
      - linkedin.com/in/seanthorne
      required: emails
- name: person_enrichment
  endpoint:
    path: /api/person/enrich
    method: POST
    data_selector: data
    params: {}
- name: enrich_person
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: data
    params:
      api_key: YOUR API KEY
      name:
      - Sean Thorne
      profile:
      - www.twitter.com/seanthorne5
      - linkedin.com/in/seanthorne
      required: emails
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: data
    params:
      required: emails
- name: titlecase
  endpoint:
    path: /docs/reference-person-enrichment-api
    method: GET
    data_selector: titlecase
    params: {}
- name: matched
  endpoint:
    path: /matched
    method: GET
    data_selector: matched
    params:
      include_if_matched: 'true'
- name: person_enrichment
  endpoint:
    path: /person/enrichment
    method: GET
    data_selector: data
    params:
      min_likelihood: '1'
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: POST
    data_selector: data
    params: {}
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: POST
    data_selector: data
    params: {}
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: POST
    data_selector: data
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: POST
    data_selector: data
    params: {}
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: POST
    data_selector: data
    params:
      api_key: YOUR API KEY
      name:
      - Sean Thorne
      profile:
      - www.twitter.com/seanthorne5
      - linkedin.com/in/seanthorne
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: POST
    data_selector: data
    params: {}
- name: person_enrich
  endpoint:
    path: /person/enrich
    method: POST
    data_selector: json_response
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: POST
    data_selector: data
    params: {}
- name: bulk_enrichment
  endpoint:
    path: /v5/person/bulk
    method: POST
- name: bulk_person_enrichment
  endpoint:
    path: /v5/person/bulk
    method: POST
    data_selector: data
    params:
      required: emails AND profiles
- name: person_enrichment_preview
  endpoint:
    path: /v5/person/enrich/preview
    method: GET
    data_selector: data
    params: {}
- name: identify
  endpoint:
    path: /person/identify
    method: GET
    data_selector: matches
    params: {}
- name: output_response
  endpoint:
    path: /output-response-person-identify-api
    method: GET
    data_selector: matches
- name: person_identify
  endpoint:
    path: /person/identify
    method: GET
    data_selector: profiles
- name: person_identify
  endpoint:
    path: /person/identify
    method: POST
    data_selector: data
    params: {}
- name: birth_date
  endpoint:
    path: /api/person/identify
    method: GET
    data_selector: records
    params: {}
- name: pretty
  endpoint:
    path: /api/person/identify
    method: GET
    data_selector: records
    params:
      default: 'false'
- name: titlecase
  endpoint:
    path: /api/person/identify
    method: GET
    data_selector: records
    params:
      default: 'false'
- name: data_include
  endpoint:
    path: /api/person/identify
    method: GET
    data_selector: records
    params: {}
- name: include_if_matched
  endpoint:
    path: /api/person/identify
    method: GET
    data_selector: records
    params:
      default: 'false'
- name: response
  endpoint:
    path: /person/identify
    method: POST
    data_selector: matches
- name: person_identify
  endpoint:
    path: /person/identify
    method: GET
    data_selector: matches
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
    data_selector: matches
    params:
      profile: linkedin.com/in/seanthorne
      pretty: true
      api_key: YOUR API KEY
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
    data_selector: matches
    params:
      profile: linkedin.com/in/seanthorne
      pretty: true
- name: person
  endpoint:
    path: /person/search
    method: POST
    data_selector: data
    params:
      size: 10
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
      pretty: true
- name: person
  endpoint:
    path: /person
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM person WHERE location_country='mexico' AND job_title_role='health'
        AND phone_numbers IS NOT NULL
      size: 10
      pretty: true
- name: person
  endpoint:
    path: /person/search
    method: POST
    data_selector: data
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
      pretty: true
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params:
      size: 10
- name: person
  endpoint:
    path: /person/search
    method: POST
    data_selector: data
- name: person
  endpoint:
    path: /person
    method: POST
    data_selector: data
    params:
      SQL_QUERY: SELECT * FROM person WHERE location_country='mexico' AND job_title_role='health'
        AND phone_numbers IS NOT NULL
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
      pretty: true
- name: person
  endpoint:
    path: /person/search
    method: POST
    data_selector: data
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
      pretty: true
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
      pretty: true
- name: person
  endpoint:
    path: /person/search
    method: POST
    data_selector: data
- name: person
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM person WHERE location_country='mexico' AND job_title_role='health'
        AND phone_numbers IS NOT NULL;
      size: 10
      pretty: true
- name: person
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
- name: person
  endpoint:
    path: /person/search
    method: POST
    data_selector: data
- name: person
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
- name: person
  endpoint:
    path: /search/person
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: '1'
      from: '0'
- name: person
  endpoint:
    params:
      size: 1
      from: 0
      dataset: resume
      titlecase: false
      data_include: ''
      pretty: false
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params: {}
- name: person_search
  endpoint:
    path: ''
    method: POST
    data_selector: data
    params:
      dataset: all
      size: 10
- name: person
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM person WHERE job_company_id = '{enriched_company['id']}'
      size: PAGE_SIZE
      dataset: all
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params:
      size: 10
      dataset: all
- name: person
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      dataset: all
- name: person_search_elastic
  endpoint:
    path: /person/search/elastic
    method: GET
    data_selector: data
    params:
      size: 100
- name: person_search_sql
  endpoint:
    path: /person/search/sql
    method: GET
    data_selector: data
    params:
      size: 100
- name: person
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params:
      size: 100
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params:
      size: '100'
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params:
      dataset: all
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: data
    params: {}
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 100
- name: company_enrichment
  endpoint:
    path: /company/enrich
    method: GET
    data_selector: data
    params:
      website: company_website
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params:
      sql: sql_query
      size: MAX_NUM_PEOPLE
- name: person_search
  endpoint:
    path: /preview/search
    method: GET
    data_selector: data
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      size: 10
- name: company
  endpoint:
    path: /docs/company-schema
    method: GET
    data_selector: records
- name: affiliated_profiles
  endpoint:
    path: /docs/company-schema#affiliated_profiles
    method: GET
    data_selector: records
- name: all_subsidiaries
  endpoint:
    path: /docs/company-schema#all_subsidiaries
    method: GET
    data_selector: records
- name: alternative_domains
  endpoint:
    path: /docs/company-schema#alternative_domains
    method: GET
    data_selector: records
- name: alternative_names
  endpoint:
    path: /docs/company-schema#alternative_names
    method: GET
    data_selector: records
- name: average_employee_tenure
  endpoint:
    path: /docs/company-schema#average_employee_tenure
    method: GET
    data_selector: records
- name: average_tenure_by_level
  endpoint:
    path: /docs/company-schema#average_tenure_by_level
    method: GET
    data_selector: records
- name: average_tenure_by_role
  endpoint:
    path: /docs/company-schema#average_tenure_by_role
    method: GET
    data_selector: records
- name: dataset_version
  endpoint:
    path: /docs/company-schema#dataset_version
    method: GET
    data_selector: records
- name: direct_subsidiaries
  endpoint:
    path: /docs/company-schema#direct_subsidiaries
    method: GET
    data_selector: records
- name: display_name
  endpoint:
    path: /docs/company-schema#display_name
    method: GET
    data_selector: records
- name: employee_count
  endpoint:
    path: /docs/company-schema#employee_count
    method: GET
    data_selector: records
- name: employee_count_by_country
  endpoint:
    path: /docs/company-schema#employee_count_by_country
    method: GET
    data_selector: records
- name: founded
  endpoint:
    path: /docs/company-schema#founded
    method: GET
    data_selector: records
- name: industry
  endpoint:
    path: /docs/company-schema#industry
    method: GET
    data_selector: records
- name: linkedin_follower_count
  endpoint:
    path: /docs/company-schema#linkedin_follower_count
    method: GET
    data_selector: records
- name: location
  endpoint:
    path: /docs/company-schema#location
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /docs/company-schema
    method: GET
    data_selector: records
    params: {}
- name: premium_fields
  endpoint:
    path: /docs/company-schema#premium_fields
    method: GET
    data_selector: fields
    params: {}
- name: comprehensive_fields
  endpoint:
    path: /docs/company-schema#comprehensive_fields
    method: GET
    data_selector: fields
    params: {}
- name: funding_details
  endpoint:
    path: /docs/company-schema#funding_details
    method: GET
    data_selector: fields
    params: {}
- name: location_details
  endpoint:
    path: /docs/company-schema#location_details
    method: GET
    data_selector: fields
    params: {}
- name: job_posting_details
  endpoint:
    path: /docs/company-schema#job_posting_details
    method: GET
    data_selector: fields
    params: {}
- name: Base Company Fields
  endpoint:
    path: /company/fields
    method: GET
    data_selector: fields
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: data
    params: {}
- name: gross_departures_by_month
  endpoint:
    path: /gross_departures_by_month
    method: GET
    data_selector: profiles
- name: inferred_revenue
  endpoint:
    path: /inferred_revenue
    method: GET
    data_selector: revenue
- name: recent_exec_departures
  endpoint:
    path: /recent_exec_departures
    method: GET
    data_selector: executives
- name: recent_exec_hires
  endpoint:
    path: /recent_exec_hires
    method: GET
    data_selector: executives
- name: top_next_employers
  endpoint:
    path: /top_next_employers
    method: GET
    data_selector: employers
- name: top_next_employers_12_month
  endpoint:
    path: /top_next_employers_12_month
    method: GET
    data_selector: employers
- name: top_previous_employers
  endpoint:
    path: /top_previous_employers
    method: GET
    data_selector: employers
- name: top_previous_employers_12_month
  endpoint:
    path: /top_previous_employers_12_month
    method: GET
    data_selector: employers
- name: top_us_employee_metros
  endpoint:
    path: /top_us_employee_metros
    method: GET
    data_selector: metros
- name: linkedin_follower_count
  endpoint:
    path: /linkedin_follower_count
    method: GET
    data_selector: follower_count
- name: average_tenure_by_role
  endpoint:
    path: /average_tenure_by_role
    method: GET
    data_selector: average_tenure_by_role
- name: employee_count_by_month
  endpoint:
    path: /employee_count_by_month
    method: GET
    data_selector: employee_count_by_month
- name: employee_count_by_month_by_level
  endpoint:
    path: /employee_count_by_month_by_level
    method: GET
    data_selector: employee_count_by_month_by_level
- name: employee_count_by_month_by_role
  endpoint:
    path: /employee_count_by_month_by_role
    method: GET
    data_selector: employee_count_by_month_by_role
- name: employee_count_by_class
  endpoint:
    path: /employee_count_by_class
    method: GET
    data_selector: employee_count_by_class
- name: employee_count_by_role
  endpoint:
    path: /employee_count_by_role
    method: GET
    data_selector: employee_count_by_role
- name: employee_count_by_sub_role
  endpoint:
    path: /employee_count_by_sub_role
    method: GET
    data_selector: employee_count_by_sub_role
- name: employee_churn_rate
  endpoint:
    path: /employee_churn_rate
    method: GET
    data_selector: employee_churn_rate
- name: employee_growth_rate
  endpoint:
    path: /employee_growth_rate
    method: GET
    data_selector: employee_growth_rate
- name: employee_growth_rate_12_month_by_class
  endpoint:
    path: /employee_growth_rate_12_month_by_class
    method: GET
    data_selector: employee_growth_rate_12_month_by_class
- name: employee_growth_rate_12_month_by_role
  endpoint:
    path: /employee_growth_rate_12_month_by_role
    method: GET
    data_selector: employee_growth_rate_12_month_by_role
- name: employee_growth_rate_12_month_by_sub_role
  endpoint:
    path: /employee_growth_rate_12_month_by_sub_role
    method: GET
    data_selector: employee_growth_rate_12_month_by_sub_role
- name: gross_additions_by_month
  endpoint:
    path: /gross_additions_by_month
    method: GET
    data_selector: gross_additions_by_month
- name: funding_details
  endpoint:
    path: /funding_details
    method: GET
    data_selector: funding_details
- name: all_subsidiaries
  endpoint:
    path: /all_subsidiaries
    method: GET
    data_selector: all_subsidiaries
- name: direct_subsidiaries
  endpoint:
    path: /direct_subsidiaries
    method: GET
    data_selector: direct_subsidiaries
- name: immediate_parent
  endpoint:
    path: /immediate_parent
    method: GET
    data_selector: immediate_parent
- name: ultimate_parent
  endpoint:
    path: /ultimate_parent
    method: GET
    data_selector: ultimate_parent
- name: ultimate_parent_ticker
  endpoint:
    path: /ultimate_parent_ticker
    method: GET
    data_selector: ultimate_parent_ticker
- name: ultimate_parent_mic_exchange
  endpoint:
    path: /ultimate_parent_mic_exchange
    method: GET
    data_selector: ultimate_parent_mic_exchange
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
- name: num_active_locations
  endpoint:
    path: /num_active_locations
    method: GET
    data_selector: num_active_locations
- name: num_total_locations
  endpoint:
    path: /num_total_locations
    method: GET
    data_selector: num_total_locations
- name: active_job_postings
  endpoint:
    path: /active_job_postings
    method: GET
    data_selector: active_job_postings
- name: deactivated_job_postings
  endpoint:
    path: /deactivated_job_postings
    method: GET
    data_selector: deactivated_job_postings
- name: active_job_postings_by_role
  endpoint:
    path: /active_job_postings_by_role
    method: GET
    data_selector: active_job_postings_by_role
- name: deactivated_job_postings_by_role
  endpoint:
    path: /deactivated_job_postings_by_role
    method: GET
    data_selector: deactivated_job_postings_by_role
- name: active_job_postings_by_class
  endpoint:
    path: /active_job_postings_by_class
    method: GET
    data_selector: active_job_postings_by_class
- name: deactivated_job_postings_by_class
  endpoint:
    path: /deactivated_job_postings_by_class
    method: GET
    data_selector: deactivated_job_postings_by_class
- name: active_job_postings_by_sub_role
  endpoint:
    path: /active_job_postings_by_sub_role
    method: GET
    data_selector: active_job_postings_by_sub_role
- name: deactivated_job_postings_by_sub_role
  endpoint:
    path: /deactivated_job_postings_by_sub_role
    method: GET
    data_selector: deactivated_job_postings_by_sub_role
- name: active_job_postings_by_country
  endpoint:
    path: /active_job_postings_by_country
    method: GET
    data_selector: active_job_postings_by_country
- name: active_job_postings_by_metro
  endpoint:
    path: /active_job_postings_by_metro
    method: GET
    data_selector: active_job_postings_by_metro
- name: active_job_postings_by_month
  endpoint:
    path: /active_job_postings_by_month
    method: GET
    data_selector: active_job_postings_by_month
- name: deactivated_job_postings_by_month
  endpoint:
    path: /deactivated_job_postings_by_month
    method: GET
    data_selector: deactivated_job_postings_by_month
- name: field_availability
  endpoint:
    path: /docs/company-stats
    method: GET
    data_selector: Total
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /person
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: records
    params:
      website: google.com
- name: company_enrichment
  endpoint:
    path: /company/enrichment
    method: GET
    data_selector: data
    params:
      api_key: '{{ dlt.secrets[''api_key''] }}'
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: POST
    data_selector: data
- name: company_enrichment
  endpoint:
    path: /company/enrichment
    method: GET
    data_selector: data
    params:
      api_key: '{{ dlt.secrets[''api_key''] }}'
      pdl_id: ''
      name: ''
      profile: ''
      ticker: ''
      website: ''
      location: ''
      street_address: ''
      locality: ''
      region: ''
      country: ''
      postal_code: ''
      data_include: ''
      pretty: 'false'
      titlecase: 'false'
- name: enrich_company
  endpoint:
    path: /v5/company/enrich
    method: POST
    data_selector: data
    params:
      required: size
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
    params:
      website: google.com
- name: company_enrichment
  endpoint:
    path: /company/enrich
    method: POST
    data_selector: data
    params:
      required: size
- name: company_enrichment
  endpoint:
    path: /enrich/company
    method: GET
    data_selector: data
    params:
      api_key: '{{ dlt.secrets[''api_key''] }}'
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
    params:
      website: google.com
- name: size
  endpoint:
    params:
      size: '2'
- name: required
  endpoint:
    params:
      required: location AND (website OR linkedin_url)
- name: response
  endpoint:
    path: /output-response-company-enrichment-api
    method: GET
    data_selector: '*'
- name: matched
  endpoint:
    path: /docs/input-parameters-company-enrichment-api
    method: GET
    data_selector: Array (String)
    params:
      include_if_matched: 'true'
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: response
    params:
      profile: linkedin.com/company/google
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: response
    params:
      profile: linkedin.com/company/google
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: response
    params:
      profile: linkedin.com/company/google
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
    data_selector: response
    params:
      profile: linkedin.com/company/google
- name: bulk_enrich
  endpoint:
    path: /v5/company/enrich/bulk
    method: POST
    data_selector: responses
    params: {}
- name: company
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      size: 10
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE website='peopledatalabs.com';
      size: 10
      pretty: true
- name: company_search
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      size: '1'
      from: '0'
- name: company_search
  endpoint:
    path: /company/search
    method: GET
    data_selector: results
    params: {}
- name: company_search
  endpoint:
    path: /company/search
    method: GET
    data_selector: data
    params: {}
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE affiliated_profiles = 'hWBI7x4FvSurVNWDXD4uFgQt5ges';
      size: 100
- name: company_search
  endpoint:
    path: /company/search
    method: POST
    data_selector: data
    params:
      size: 100
- name: company
  endpoint:
    path: /v5/company/search
    method: POST
    data_selector: data
    params:
      size: 100
- name: company_search
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE affiliated_profiles = 'hWBI7x4FvSurVNWDXD4uFgQt5ges';
      size: 100
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      size: 100
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE affiliated_profiles = 'hWBI7x4FvSurVNWDXD4uFgQt5ges';
      size: 100
- name: company_search
  endpoint:
    path: /company/search
    method: GET
    data_selector: data
    params:
      size: 100
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE affiliated_profiles = 'hWBI7x4FvSurVNWDXD4uFgQt5ges';
      size: 100
- name: company
  endpoint:
    path: /company/search
    method: GET
    data_selector: data
    params:
      size: 100
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE affiliated_profiles = 'hWBI7x4FvSurVNWDXD4uFgQt5ges';
      size: 100
- name: company
  endpoint:
    path: /v5/company/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM company WHERE affiliated_profiles = 'hWBI7x4FvSurVNWDXD4uFgQt5ges';
      size: 100
- name: ip
  endpoint:
    path: /docs/ip-fields
    method: GET
    data_selector: fields
    params: {}
- name: company
  endpoint:
    path: /docs/company-schema
    method: GET
    data_selector: fields
    params: {}
- name: person
  endpoint:
    path: /docs/person
    method: GET
    data_selector: fields
    params: {}
- name: person
  endpoint:
    path: /person
    method: GET
    data_selector: job_title_class
- name: metadata
  endpoint:
    path: /ip/metadata
    method: GET
    data_selector: data
    params: {}
- name: ip
  endpoint:
    path: /ip
    method: GET
    data_selector: ip
    params: {}
- name: ip_locations
  endpoint:
    path: /docs/ip-locations-by-country
    method: GET
    data_selector: data
    params: {}
- name: cidr_locations
  endpoint:
    path: /cidr-locations
    method: GET
    data_selector: records
    params: {}
- name: ip_record
  endpoint:
    path: /api/v1/ip
    method: GET
    data_selector: ip
    params: {}
- name: ip_enrichment
  endpoint:
    path: /ip-enrichment
    method: GET
    data_selector: data
    params: {}
- name: ip_record
  endpoint:
    path: /ip/{ip}
    method: GET
    data_selector: data
- name: ip_enrichment
  endpoint:
    path: /ip/enrichment
    method: GET
    data_selector: records
- name: ip_record
  endpoint:
    path: /v5/ip/enrich
    method: GET
    data_selector: data.ip
    params:
      ip: 72.212.42.169
- name: output_response
  endpoint:
    path: /output-response-ip-enrichment-api
    method: GET
    data_selector: data
    params: {}
- name: ip_enrichment
  endpoint:
    path: /v5/ip/enrich
    method: GET
    data_selector: ip_record
- name: ip_enrichment
  endpoint:
    path: /ip
    method: GET
    data_selector: data
    params:
      api_key: Your API Key
      ip: 72.212.42.169
- name: ip
  endpoint:
    path: /ip
    method: GET
    data_selector: data
- name: ip_metadata
  endpoint:
    path: /data/ip/metadata
    method: GET
    data_selector: metadata
- name: ip_location
  endpoint:
    path: /data/ip/location
    method: GET
    data_selector: location
- name: company
  endpoint:
    path: /data/company
    method: GET
    data_selector: company
- name: person
  endpoint:
    path: /data/person
    method: GET
    data_selector: person
- name: ip_enrichment
  endpoint:
    path: /ip
    method: GET
    data_selector: data
- name: company_enrichment
  endpoint:
    path: /company/enrichment
    method: GET
    data_selector: data
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
- name: job_posting
  endpoint:
    path: /docs/job-posting-fields
    method: GET
    data_selector: fields
    params: {}
- name: posting_url
  endpoint:
    path: /job-posting
    method: GET
    data_selector: posting_url
- name: job_posting
  endpoint:
    path: /job_postings
    method: GET
    data_selector: records
    params: {}
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
- name: description_raw
  endpoint:
    path: /description_raw
    method: GET
    data_selector: description_raw
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
- name: job_posting
  endpoint:
    path: /docs/jp-stats
    method: GET
    data_selector: records
- name: job_posting_locations
  endpoint:
    path: /job_posting_locations
    method: GET
    data_selector: records
- name: job_posting
  endpoint:
    path: /peopledatalabs/jobs/5532580004
    method: GET
    data_selector: records
    params: {}
- name: job_posting
  endpoint:
    path: /v1/job_postings
    method: GET
    data_selector: data
    params: {}
- name: education_schools
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: autocomplete
  endpoint:
    path: /v5/autocomplete
    method: GET
    data_selector: data
    params:
      api_key: YOUR API KEY
      field: school
      text: harv
      size: 10
      titlecase: true
      pretty: true
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: results
    params:
      field: school
      text: harv
      size: 10
      titlecase: true
      pretty: true
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: data
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: data
    params:
      field: company
      pretty: true
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params: {}
- name: autocomplete_suggestions
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: data
    params: {}
- name: Response
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: data
    params: {}
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: POST
    data_selector: response
    params: {}
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: results
    params: {}
- name: company_cleaner
  endpoint:
    path: /v5/company/clean
    method: GET
    data_selector: response
    params:
      website: peopledatalabs.com
- name: school
  endpoint:
    path: /school/clean
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /company/clean
    method: POST
    data_selector: data
- name: location
  endpoint:
    path: /location/clean
    method: POST
    data_selector: data
- name: school
  endpoint:
    path: /school/clean
    method: POST
    data_selector: data
- name: company_clean
  endpoint:
    path: /company/clean
    method: GET
    data_selector: results
    params: {}
- name: School Cleaner API
  endpoint:
    path: /school/clean
    method: GET
    data_selector: records
    params: {}
- name: Location Cleaner API
  endpoint:
    path: /location/clean
    method: GET
    data_selector: records
    params: {}
- name: Company Cleaner API
  endpoint:
    path: /company/clean
    method: GET
    data_selector: records
    params: {}
- name: school
  endpoint:
    path: /school
    method: GET
    data_selector: school
    params: {}
- name: company_cleaner
  endpoint:
    path: /company/cleaner
    method: GET
    data_selector: company
    params: {}
- name: location_cleaner
  endpoint:
    path: /location/cleaner
    method: GET
    data_selector: location
    params: {}
- name: company_cleaner
  endpoint:
    path: /v5/company/clean
    method: POST
    data_selector: response
- name: location_cleaner
  endpoint:
    path: /v5/location/clean
    method: POST
    data_selector: response
- name: company_cleaner
  endpoint:
    path: /company/clean
    method: POST
    data_selector: data
- name: location_cleaner
  endpoint:
    path: /location/clean
    method: GET
    data_selector: data
- name: school_cleaner
  endpoint:
    path: /school/clean
    method: GET
    data_selector: data
- name: company_cleaner
  endpoint:
    path: /v5/company/clean
    method: GET
    data_selector: data
    params:
      website: peopledatalabs.com
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      sql: SELECT * FROM person WHERE job_company_id = '{cleaned_company['id']}'
      size: 100
- name: job_title_enrichment
  endpoint:
    path: /job-title-enrichment
    method: GET
    data_selector: records
    params: {}
- name: job_title_enrichment
  endpoint:
    path: /v5/job_title/enrich
    method: GET
    data_selector: response
    params:
      job_title: supply manager
- name: job_title_enrich
  endpoint:
    path: /v5/job_title/enrich
    method: GET
    data_selector: response
    params: {}
- name: job_title_enrichment
  endpoint:
    path: /job_title/enrich
    method: GET
    data_selector: ''
    params:
      job_title: ''
      api_key: ''
      pretty: 'false'
      titlecase: 'false'
- name: job_title_enrichment
  endpoint:
    path: /job-title-enrichment
    method: GET
    data_selector: records
    params:
      job_title: pastry chef
- name: relevant_skills
  endpoint:
    path: /docs/output-response-job-title-enrichment-api
    method: GET
    data_selector: Array [String]
    params: {}
- name: job_title_enrichment
  endpoint:
    path: /job-title-enrichment
    method: POST
    data_selector: cleaned_job_title
- name: job_title_enrich
  endpoint:
    path: /v5/job_title/enrich
    method: POST
    data_selector: data
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
- name: job_title_enrichment
  endpoint:
    path: /v5/job_title/enrich
    method: POST
    data_selector: response
- name: job_title_enrichment
  endpoint:
    path: /job_title/enrich
    method: GET
    data_selector: data
    params:
      job_title: supply manager
- name: person_search
  endpoint:
    path: /person/search
    method: GET
    data_selector: data
    params:
      size: 100
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
- name: company_enrich
  endpoint:
    path: /v5/company/enrich
    method: GET
- name: company_search
  endpoint:
    path: /v5/company/search
    method: GET
- name: person_enrichment
  endpoint:
    path: /v5/person/enrich
    method: GET
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
- name: bulk_person_enrichment
  endpoint:
    path: /v5/bulk/person
    method: POST
- name: company_enrichment
  endpoint:
    path: /v5/company/enrich
    method: GET
- name: company_search
  endpoint:
    path: /v5/company/search
    method: GET
- name: person_search
  endpoint:
    path: /v5/person/search
    method: GET
    data_selector: data
    params:
      company: walmart
      pretty: true
      api_key: YOUR API KEY
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
    data_selector: matches
    params:
      company: walmart
      pretty: true
      api_key: YOUR API KEY
- name: skill
  endpoint:
    path: /v5/skill/enrich
    method: GET
    data_selector: response
    params:
      skill: ai
- name: skill_enrichment
  endpoint:
    path: /v5/skill/enrich
    method: GET
    data_selector: response
    params:
      skill: required
- name: titlecase
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: skill_enrichment
  endpoint:
    path: /enrich/skill
    method: GET
    data_selector: records
    params:
      api_key: '{{ dlt.secrets[''api_key''] }}'
      skill: pyspark
- name: relevant_job_titles
  endpoint:
    path: /docs/output-response-skill-enrichment-api
    method: GET
    data_selector: Array [String]
    params: {}
- name: person_changelog
  endpoint:
    path: /v5/person/changelog
    method: POST
    data_selector: data
    params:
      api_key: YOUR API KEY
- name: person_changelog
  endpoint:
    path: /person/changelog
    method: POST
    data_selector: records
    params:
      api_key: YOUR API KEY
- name: input_parameters
  endpoint:
    path: /docs/input-parameters-person-changelog-api
    method: POST
    data_selector: parameters
    params: {}
- name: updated
  endpoint:
    path: /data
    method: GET
    data_selector: updated
- name: person_changelog
  endpoint:
    path: /docs/output-response-person-changelog-api
    method: GET
    data_selector: records
- name: updated
  endpoint:
    path: /data
    method: GET
    data_selector: updated
    params: {}
- name: person_changelog
  endpoint:
    path: /person/changelog
    method: POST
    data_selector: response
    params:
      api_key: YOUR API KEY
- name: data
  endpoint:
    path: /docs/id-changelog
    method: GET
    data_selector: records
    params: {}
- name: person_changelog
  endpoint:
    path: /v5/person/changelog
    method: POST
    data_selector: data.updated
    params:
      api_key: YOUR API KEY
      origin_version: '28.0'
      current_version: '28.1'
      type: updated
- name: person_changelog
  endpoint:
    path: /person/changelog
    method: POST
    data_selector: records
    params: {}
- name: subject_requests
  endpoint:
    path: /v5/person/subjectrequest
    method: GET
    data_selector: ''
- name: canonical_values
  endpoint:
    path: /company_sizes
    method: GET
    data_selector: canonical_values
    params: {}
- name: education_school_types
  endpoint:
    path: /education/school/types
    method: GET
    data_selector: canonical_values
    params: {}
- name: canonical_values
  endpoint:
    path: /emails/type
    method: GET
    data_selector: canonical_values
    params: {}
- name: canonical_values
  endpoint:
    path: /sex
    method: GET
    data_selector: canonical_values
    params: {}
- name: canonical_values
  endpoint:
    path: /job_company_inferred_revenue
    method: GET
    data_selector: canonical_values
    params: {}
- name: canonical_job_title_levels
  endpoint:
    path: /enums/job_title_levels
    method: GET
    data_selector: canonical_values
- name: job_title_class
  endpoint:
    path: /job-title-class
    method: GET
    data_selector: canonical_values
    params:
      updated_title_roles: 'true'
- name: canonical_values
  endpoint:
    path: /job_title_roles
    method: GET
    data_selector: canonical_values
    params: {}
- name: job_title_roles
  endpoint:
    path: /legacy/job_title_roles
    method: GET
    data_selector: roles
- name: job_title_subroles
  endpoint:
    path: /job_title_subroles
    method: GET
    data_selector: sub_roles
- name: job_title_subroles
  endpoint:
    path: /job_title_subroles
    method: GET
    data_selector: canonical_values
    params: {}
- name: languages
  endpoint:
    path: /languages
    method: GET
    data_selector: languages
    params: {}
- name: canonical_values
  endpoint:
    path: /location/continents
    method: GET
    data_selector: locations
    params: {}
- name: canonical_values
  endpoint:
    path: /location/countries
    method: GET
    data_selector: countries
    params: {}
- name: job_title_class
  endpoint:
    path: /docs/fields#job_title_class
    method: GET
    data_selector: records
    params: {}
- name: experience_title_class
  endpoint:
    path: /docs/fields#experiencetitle
    method: GET
    data_selector: records
    params: {}
- name: canonical_values
  endpoint:
    path: /docs/mic-codes
    method: GET
    data_selector: Canonical Values for MIC Codes
    params: {}
- name: naics_industry_group
  endpoint:
    path: /naics/industry_groups
    method: GET
    data_selector: canonical_values
    params: {}
- name: naics_sector
  endpoint:
    path: /naics_sectors
    method: GET
    data_selector: canonical_values
- name: naics_subsectors
  endpoint:
    path: /naics_subsectors
    method: GET
    data_selector: canonical_values
    params: {}
- name: canonical_values
  endpoint:
    path: /remote-work-policies
    method: GET
    data_selector: policies
    params: {}
- name: sic_industry_groups
  endpoint:
    path: /sic-industry-groups
    method: GET
    data_selector: data
- name: fresh_fruits_and_vegetables
  endpoint:
    path: /fresh/fruits/vegetables
    method: GET
    data_selector: records
- name: frozen_bakery_products_except_bread
  endpoint:
    path: /frozen/bakery/products
    method: GET
    data_selector: records
- name: frozen_fruits_fruit_juices_and_vegetables
  endpoint:
    path: /frozen/fruits/juices/vegetables
    method: GET
    data_selector: records
- name: frozen_specialties_not_elsewhere_classified
  endpoint:
    path: /frozen/specialties
    method: GET
    data_selector: records
- name: fruit_and_vegetable_markets
  endpoint:
    path: /fruit/vegetable/markets
    method: GET
    data_selector: records
- name: fruits_and_tree_nuts_not_elsewhere_classified
  endpoint:
    path: /fruits/tree/nuts
    method: GET
    data_selector: records
- name: sic_major_groups
  endpoint:
    path: /sic/major_groups
    method: GET
    data_selector: groups
    params: {}
- name: location
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
- name: company
  endpoint:
    path: /company-dataset
    method: GET
    data_selector: records
- name: person_enrichment
  endpoint:
    path: /person/enrichment
    method: POST
    data_selector: data
- name: person_enrichment
  endpoint:
    path: /enrichment/person
    method: GET
    data_selector: data
- name: company_enrichment
  endpoint:
    path: /enrichment/company
    method: GET
    data_selector: data
- name: ip_enrichment
  endpoint:
    path: /enrichment/ip
    method: GET
    data_selector: data
- name: Person Enrichment
  endpoint:
    path: /person/enrich
    method: POST
    data_selector: data
- name: Company Enrichment
  endpoint:
    path: /company/enrich
    method: POST
    data_selector: data
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: suggestions
    params: {}
- name: Lead
  endpoint:
    path: /services/data/vXX.X/sobjects/Lead
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
    params: {}
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: enrich_person
  endpoint:
    path: /enrich_person
    method: POST
- name: webhook_filters
  endpoint:
    path: /webhooks/filters
    method: GET
    data_selector: filters
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /person
    method: GET
    data_selector: data
    params: {}
- name: PDL-deliveries
  endpoint:
    path: /storage/buckets
    method: POST
    data_selector: permissions
    params: {}
- name: monthly_changelog
  endpoint:
    path: /version_number/monthly/
    method: GET
    data_selector: records
- name: quarterly_changelog
  endpoint:
    path: /version_number/quarterly/
    method: GET
    data_selector: records
- name: monthly_changelog
  endpoint:
    path: /company_monthly/
    method: GET
    data_selector: records
    params: {}
- name: quarterly_changelog
  endpoint:
    path: /company_quarterly/
    method: GET
    data_selector: records
    params: {}
- name: person
  endpoint:
    path: /api/v1/persons
    method: GET
    data_selector: object
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    data_selector: data
- name: person_enrich
  endpoint:
    path: /v5/person/enrich
    method: GET
    params:
      pretty: 'false'
      min_likelihood: 2
      include_if_matched: 'false'
      titlecase: 'false'
- name: person_identify
  endpoint:
    path: /v5/person/identify
    method: GET
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The API Explorer Tool has been deprecated
- Data quality is ensured through filtering.
- Some fields may be null.
- The request must have enough data points to find a clear match.
- 'A valid request must include at least one of: pdl_id OR name OR ticker OR website
  OR profile.'
- Free plans do not have access to contact fields like emails, phone numbers, and
  street addresses.
- Major Update as of v29.1 (February 29.1) made significant improvements to role and
  sub_role categorizations.
- Not all fields are available in all bundles.
- Ensure to handle possible null values in response.
- Some company profiles may not have complete information
- Uses OAuth2 with refresh token — requires setup of connected app in People Data
  Labs
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in People Data Labs.
- Some responses may vary based on the API usage limits.
- Replace XXXX after api_key with your API key
- This will consume 1 API credit of your free 100 monthly credits for the Person Enrichment
  API.
- Replace 'XXXX' after 'api_key' with your API key
- This will consume 1 API credit of your free 100 monthly credits for the Company
  Enrichment API
- Requires setup of connected app in People Data Labs
- Calls made over standard HTTP will fail. API requests without proper Authentication
  (a valid API key) will also fail.
- 'There are three ways to authenticate requests: In URL, In Header, In SDKs.'
- Ensure to replace 'YOUR API KEY' with your actual API key.
- 'NOTE: The carrier pigeons lost motivation in flight. See error and try again.'
- Recommended for high-volume usage for enriching multiple companies in a single request.
- Enrich data on an IP by performing a one-to-one match with the dataset.
- The Autocomplete API and Cleaner APIs are included at no additional charge for all
  plan types.
- Requires an API key for authentication
- Pass parameters as a JSON object for precedence over URL parameters.
- There is a 1MB size limit on all API responses.
- 'Add the Accept-Encoding: gzip header to your request headers to reduce response
  size.'
- Rate limits for all of our API endpoints are separate.
- To check your rate limit and credit usage for a particular endpoint via code, check
  the headers of the API response.
- Mobile phones can only be associated with 1 person in the PDL data.
- Data includes various fields related to emails and user experiences.
- Not all fields shown in the example record below are available by default.
- You must have an active API key to use the Person Enrichment API.
- Adding more data points to a request increases the probability of a 200 response
  and will further increase the accuracy of the response's Likelihood Score.
- When the API finds a matching person, it returns this person along with an HTTP
  response code of 200.
- When it doesn't find a matching person, it returns an HTTP response code of 404.
- We charge per match.
- The response must contain fields specified in the required parameter.
- Requests made with only a few less-specific data points will return lower scores.
- Adding more data points to your requests will increase the probability of a successful
  match.
- Your API Key must be included in either the request header or the api_key parameter.
- All text in API responses returns as lowercase by default. Setting titlecase to
  true will titlecase response data instead.
- Any fields in the profile record that do not contain any data will have a null value.
- Uses API key for authentication.
- Enrichment unsuccessful if response status is not 200
- Enrichment unsuccessful may return errors in the response
- Enrichment unsuccessful. See error and try again.
- Enrichment unsuccessful if status is not 200
- API requires an API key for authentication.
- You can enrich up to 100 persons in a single request.
- The Preview Enrichment API will only return the fields shown in the example response
  above.
- If the request encounters an error, it will instead return an Error Response in
  the format described in Errors.
- The Preview Enrichment API is a wrapper on the Person Enrichment API.
- The Person Identify API allows you to use broad search inputs to retrieve multiple
  records from our person dataset.
- A key use case for this endpoint is building comprehensive profiles for specific
  individuals.
- The API only returns profiles with a match_score greater than 5 (out of 100).
- Each call that you make to the Person Identify API will consume one credit, regardless
  of the number of profiles that the API returns.
- The Person Identify API is currently available only to enterprise customers.
- Create a client, specifying your API key
- Person Search API calls cost the number of total search results returned.
- If you are making a search that could have a large number of results, make sure
  to use the `size` parameter to set the maximum number of results and cap your credit
  usage.
- The returned API response includes a status and a data array containing records.
- Use the scroll_token for pagination.
- You must have an active API key to use the Person Search API.
- The returned API response includes a status, data array of matching records, and
  a total count.
- Elasticsearch and SQL queries can be used for searching.
- Check for successful response with status 200.
- The returned API response is a list of the records in our dataset that match the
  request query.
- Each person record in the data array of the response counts as a single credit against
  your total package.
- Any profile field that we do not have data for will have a null value.
- The dataset parameter should be set to 'all' for backward compatibility.
- High Credit Usage — retrieving large amounts of records may expend a lot of credits.
- Credit usage based on total search results returned.
- Limit the number of records to pull to prevent exceeding credits.
- Use scroll_token for pagination.
- Limit the number of records to pull (to prevent accidentally using more credits
  than expected when testing this code).
- Use the scroll token for pagination.
- Requests are limited to 6 seconds between batches.
- Set the maximum people to search at each company to 100.
- Maximum number of people to search at each company is 100.
- You can technically exclude up to 1,000 PDL IDs in a single search query.
- There is a hard limit of 20 wildcards per query.
- Average employee tenure is calculated using experience.start_date and experience.end_date.
- API requires authentication via OAuth2.
- Rate limits apply to API calls.
- Some objects like Contact may return nulls in deeply nested fields
- In order to use the Company Enrichment API, you must have an active API key.
- If we do not find a match or cannot resolve the query to a unique company based
  on a name, we will return a 404 HTTP response code.
- Standard rate limit is 10 per minute for free customers and 1,000 per minute for
  paying customers.
- 'Enterprise-Only Parameter: The size parameter is only available for Enterprise
  customers.'
- 'Enterprise-Only Parameter: The `size` parameter is only available for Enterprise
  customers.'
- The minimum likelihood score must be between 1-10.
- The size parameter is only available for Enterprise customers.
- The profile fields for the Company Enrichment API are NOT contained in a top-level
  'data' object.
- When specifying query parameters within a URL, you should separate them with an
  ampersand (`&`).
- When specifying query parameters within a JSON object, you should use lists for
  the request parameters.
- API key is required for authentication.
- You can enrich up to 100 companies in a single request.
- The Company Search API gives you access to every record in our full Company Dataset,
  which you can filter and segment using a search query.
- Company Search API calls cost the number of total search results returned.
- We charge per record retrieved. Each company record in the data array in the response
  counts as one credit against your total package.
- The current default rate limit is 10 requests per minute.
- The `from` parameter is a legacy field and is not expected to be supported long
  term. Use the `scroll_token` field instead.
- You cannot use `from` and `scroll_token` in the same request.
- If you are making a search that could have a large number of results, make sure
  to use the size parameter to set the maximum number of results and cap your credit
  usage.
- Ensure to replace 'YOUR API KEY' with a valid API key.
- High Credit Usage Code Below
- Ensure to set MAX_NUM_RECORDS_LIMIT accordingly when testing
- Set to false to pull all available records.
- MAX_NUM_RECORDS_LIMIT is set to 150.
- USE_MAX_NUM_RECORDS_LIMIT is set to True.
- Not all fields are available in all packages.
- The response contains various metadata fields related to the IP address.
- Requires setup of connected app in api
- Field availability may vary based on the endpoint.
- Enrich data on an IP by performing a one-to-one match of this IP with the nearly
  2 Billion IPs hosted in our dataset.
- When the IP Enrichment API finds a matching IP address, it returns the IP record
  along with an HTTP response code of 200.
- When it doesn't find a matching IP, it returns an HTTP response code of 404.
- Job Posting Data is currently in Beta
- Schema and field definitions may continue to evolve over the coming months.
- The US base salary range for this role is $77,800—$150,700 USD.
- This role is fully remote for candidates who reside outside the 50 mile radius of
  our San Ramon office.
- Stats shown are accurate as of data version 31.1
- Ensure to authenticate using OAuth2 with a refresh token.
- The API response includes fields related to educational institutions.
- Uses API key for authentication, requires setup in API dashboard
- Requires API key for access.
- The Cleaner APIs are public and available by default to all customers.
- Standard rate limit is 10 per minute, and total limit is 10,000 per month.
- If the API does not find a matching company, a 404 returns.
- If the API cannot parse the location, a 404 returns.
- Requires API key for authentication.
- In order to use the Job Title Enrichment API, you must have an enterprise account.
- The HTTP response code will be 200 when the API returns a matching job title and
  404 when the API neither finds nor returns a matching job title.
- Uses API key for authentication
- Set your API key as 'YOUR API KEY'.
- All Sandbox API endpoints return only artificial data in their responses.
- The Sandbox APIs are free endpoints and do not consume credits.
- The Skill Enrichment API is now fully removed
- This endpoint was removed in our April 2025 (v30.0) Release and is no longer available
- The Skill Enrichment API is now fully removed as of April 2025.
- Only returned if status == 200
- Maximum size of added, deleted, merged, opted_out, updated arrays is limited to
  1000 records
- By default, all active API keys have free access to the Person Changelog API.
- Each call to the Person Changelog API counts against the daily rate limit.
- A scroll_token returns in every response from the Person Changelog API and serves
  as a placeholder or bookmark for the last record received.
- Scroll token is used for pagination.
- Consumers have the right to make Subject Data Requests (SDR).
- Controllers are required to promptly make information available to those they sell
  or share data with.
- Support for the previous (legacy) taxonomy has now fully ended.
- Deprecated as of v29.1 (Feb 2025)
- The set of roles on this page are no longer supported in our datasets.
- The set of sub roles on this page are no longer supported in our datasets.
- Deprecated as of v29.1 (Feb 2025) - the Role / Sub Role Taxonomy on this page is
  no longer supported in our datasets.
- 'Contents of this table were sourced from the following file on our public S3 bucket:
  naics_sub_sector.txt'
- This dataset is updated on a quarterly basis.
- To download the Free Company Dataset data, go to http://www.peopledatalabs.com/company-dataset.
- Make sure that you sign up for a free PDL API key if you don't already have one.
- Make sure to sign up for a free PDL API key if you don't already have one.
- You should use this library as an internal tool or as a proof of concept, as it
  fires off requests to the Autocomplete API from the client.
- Batch Processing toggles pooling of new entries for 15 minutes before performing
  enrichment to avoid rate limiting.
- Minimum Likelihood Score recommended default is six.
- Clicking won't sever the connection to your SFDC instance and won't overwrite your
  SFDC Settings box user credentials.
- Pause Enrichment toggle will pause all enrichment activity. The toggle is set to
  ‘paused’ by default.
- Make sure pop up blockers and ad blockers are disabled when attempting to authorize.
- Make sure the user is not already logged into a Salesforce instance.
- Confirm that the username provided matches the one in the Salesforce instance the
  customer is trying to connect to.
- Verify the user is logging into the correct URL.
- Confirm that the user has an active Salesforce license and is not locked or deactivated.
- Ensure that the license type allows API access which is required for integration.
- Check the user’s profile for any restrictions that might affect API access.
- Confirm there are no session settings that might inadvertently restrict API connections.
- Double-check that the network access settings include the correct IP ranges for
  your application servers.
- 'IP’s to whitelist: 54.218.192.166, 52.35.178.148, 34.223.158.171.'
- Review and possibly adjust the IP relaxation policy on the Connected App.
- Webhooks are only available for subscribing enterprise API and Data License customers.
- To enable a webhook, you need to work with your PDL team to register the webhook
  endpoint.
- Payloads are sent in batches of 1,000 ids
- In the event of a failure, we will not automatically resend. Please reach out to
  your PDL Team to resend the current batch.
- Data delivery methods include S3, Snowflake, Azure, GCP, and Direct Download.
- When you click Save on the Bucket Policy page, AWS may not provide a 'Saved' notification
  message and may also display an error message. This is a standard AWS message.
- You must use the ACCOUNTADMIN role or another role with the CREATE DATABASE and
  IMPORT SHARE privileges to access a listing.
- Request PDL's delivery server IP address from security.team@peopledatalabs.com.
- Add PDL's IP address to the allowed IP ranges.
- Use the email 'pdl.delivery@peopledatalabs.com'
- Assign it the 'PDL-deliveries' role
- Each part of the changelog is capped to a file size of approximately 100MB.
- Contains metadata of ids that were added, updated, merged or deleted between quarterly
  and monthly releases.
- Each changelog file is divided into multiple parts, each capped to a file size of
  approximately 100MB.
- Delta Files are currently only available for Person Data Licenses and are not yet
  available for delivery through Snowflake.
errors:
- '400: Request contained either missing or invalid parameters'
- '401: Request contained a missing or invalid key'
- '402: You have reached your account maximum (all matches used)'
- '404: No records were found matching your request'
- '405: Request method is not allowed on the requested resource'
- '429: An error occurred due to requests hitting the API too quickly'
- '401: Request contained either missing or invalid key'
- '404: Request didn''t return any records.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- '401: Request contained a missing or invalid api key'
- '402: You have reached your account maximum (all searches used)'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: Check the company ID provided'
- '401 Unauthorized: Verify OAuth token validity'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '200: Successful request'
- '401: Unauthorized access - check the API key'
- 'error: no matching record could be found'
- '401: Invalid API Key'
- '401 Unauthorized: Check if the API key is correct.'
- '401 Unauthorized: Check your API key.'
- '400: invalid_request_error: The request contained either missing or invalid parameters.'
- '401: authentication_error: The request contained a missing or invalid key.'
- '402: payment_required: You have reached your account maximum (all matches have
  been used).'
- '405: invalid_request_error: You cannot use the request method on the requested
  resource.'
- '429: rate_limit_error: An error occurred due to requests hitting the API too quick.'
- '5xx: api_error: The server encountered an unexpected condition that prevented it
  from fulfilling the request.'
- If you don't get this response, check out our [Errors](/docs/errors) page for more
  information.
- '404 Not Found: No matching person found.'
- '200: Successful response with matched data.'
- '404: Not Found - when a matching person is not found.'
- '401 Unauthorized: Recheck API key validity'
- Enrichment unsuccessful. See error and try again.
- 'status: 200 indicates success or failure of enrichment'
- '401 Unauthorized: Recheck API key'
- '400: Request object must contain `requests` field'
- Enrichment preview unsuccessful. See error and try again.
- 'Rate limit exceeded: Default rate limit for all customers is 10 calls per minute.'
- '200: Successful response'
- 'Identify unsuccessful: See error and try again'
- Credit usage may increase with large result sets.
- '401: Unauthorized - Check API key'
- '400: Bad Request - Check query syntax'
- 'Error: The carrier pigeons lost motivation in flight.'
- 'NOTE: The carrier pigeons lost motivation in flight. See error and try again.'
- 'Error: See error and try again.'
- 'Non-200: Check error messages and retry'
- '401 Unauthorized: Ensure your API key is valid.'
- '404 Not Found: The endpoint you are trying to access does not exist.'
- 'non-200: Check the response for error details'
- Other error handling notes are not provided.
- 'Other errors: Check response for error details'
- '400 Bad Request: Check SQL query syntax or parameters.'
- '401 Unauthorized: Ensure API key is valid.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '401 Unauthorized: Recheck API key validity.'
- '401 Unauthorized: Recheck API key or token expiration.'
- 1MB limit on the API requests and the response body.
- '401 Unauthorized: Check your credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- Check out our [Errors](/docs/errors) page for more information.
- '404 Not Found: No match found for the queried company name.'
- '404: Not Found - when a matching company is not found.'
- '403 Forbidden: Check your API key or permissions.'
- '200: Successful enrichment'
- 'Other status codes: Refer to detailed error documentation'
- '401: Unauthorized'
- 'NOTE: The carrier pigeons lost motivation in flight.'
- '200: Valid request but no records found.'
- '401: Unauthorized - Check your API key'
- '400: Bad Request - Check your request parameters'
- 'Error: See error response for details.'
- Error retrieving some records
- 'Error retrieving some records: [status - error_type] error_message'
- '400 Bad Request: Invalid input parameters.'
- '401 Unauthorized: Authentication credentials are invalid.'
- '404 Not Found: The requested resource does not exist.'
- '400: Cannot Enrich IP - IP is a Hosting Provider, Proxy, Tor, Relay, or Service'
- '404 Not Found: IP address not found.'
- '400: Bad Request - Check your request parameters.'
- '401: Unauthorized - Verify your authentication credentials.'
- '429: Too Many Requests - Rate limit exceeded.'
- '400 Bad Request: Check your input parameters'
- '401 Unauthorized: Verify your API key'
- '401 Unauthorized: Recheck API key or account status.'
- '404: Not Found'
- 'Company Cleaner API Error: Check the API key or website'
- 'Person Search Error: Check the API key or cleaned company ID'
- '404 Not Found: No matching job title found.'
- 'RATE_LIMIT_EXCEEDED: Exceeded the allowed limit of five calls per minute.'
- '404: No matching job title found'
- '200: Matching job title found'
- 'status != 200: Returns error message with details'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'status != 200: Error information for unsuccessful requests'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Check API key.'
- '404 Not Found: Endpoint does not exist.'
- '404 Not Found: The requested resource is no longer available.'
- 'Status: 401; Reason: Unauthorized; Message: Invalid API key.'
- '401 Unauthorized: Invalid API Key'
auth_info:
  mentioned_objects:
  - API_KEY
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.peopledatalabs.com/v5
  auth:
    type: apikey
    location: header
    header_name: X-api-key
  headers:
    Content-Type: application/json
source_metadata: null
