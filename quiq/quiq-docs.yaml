resources:
- name: get_a_conversation
  endpoint:
    path: /v1/messaging/conversations/{conversationId}
    method: GET
    data_selector: data
    params: {}
- name: check_deliverability
  endpoint:
    path: /v1/messaging/deliverability
    method: POST
    data_selector: data
    params: {}
- name: Get Agent Availability
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      contactPoint: string (ContactPointReference) <= 64 characters
      platform: 'string Enum: "SMS" "Facebook" "Kik" "Chat" "Twitter" "AppleMessages"
        "GoogleRBM" "GoogleMessages" "WeChat" "WhatsApp" "Instagram" "Voice"'
- name: Get Most Recent Conversation
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      platform: 'string (MessagePlatform) Enum: "SMS" "Quiq" "Facebook" "Kik" "Chat"
        "Imported" "Twitter" "AppleMessages" "GoogleRBM" "None" "GoogleMessages" "WeChat"
        "WhatsApp" "Instagram" "Voice"'
      customerHandle: string <= 255 characters
      contactPoint: string <= 64 characters
      outgoingHandle: string or null <= 64 characters
- name: start_conversation
  endpoint:
    path: /start_conversation
    method: POST
    data_selector: data
    params: {}
- name: close_conversation
  endpoint:
    path: /close_conversation
    method: POST
    data_selector: data
    params: {}
- name: getGet a conversation
  endpoint:
    path: /api/v1/messaging/conversations/{conversationId}
    method: GET
    data_selector: data
    params:
      conversationId: string
- name: Check deliverability
  endpoint:
    path: /api/v1/messaging/deliverability
    method: POST
    data_selector: data
    params:
      platform: string
      ids: array[string]
- name: mark_conversation_inactive
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: send_message
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: send_message_map
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: send_multiple_messages
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: update_fields_on_conversation
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: register_call
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: fetch_call
  endpoint:
    path: /api/v1/voice/fetch-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: Get Agent Availability
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      contactPoint: ContactPointReference
      platform: string
- name: Get Agent Availability Across Platforms
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      contactPoint: ContactPointReference
      platforms: string
- name: Get least loaded handle
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      contactPoint: ContactPointReference
      platform: SMS
- name: Get Most Recent Conversation
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      platform: string
      customerHandle: string
      contactPoint: string
      outgoingHandle: string
- name: Get queue info
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      queue: string
- name: Gets the custom interaction message
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
- name: Send notification
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      platform: SMS
      allowMultipleSegments: boolean or null
- name: Send notifications
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      platform: SMS
      allowMultipleSegments: boolean or null
- name: Start a conversation
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
    params:
      contactPoint: ContactPointReference
      searchInfo: object
      precedence: Array
      messageMaps: Array
      fields: Array
      requestedOwner: string or null
- name: register_call
  endpoint:
    path: /api/v1/voice/register-call
    method: POST
    data_selector: callReferenceId
- name: accept_conversation
  endpoint:
    path: /api/v1/voice/accept-conversation
    method: POST
    data_selector: callReferenceId
- name: close_conversation
  endpoint:
    path: /api/v1/voice/close-conversation
    method: POST
    data_selector: callReferenceId
- name: mark_conversation_inactive
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: reject_conversation
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: send_conversation_to_queue
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: send_conversation_to_user
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: send_message
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: send_message_map
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: send_message_maps
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: send_multiple_messages
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: update_fields_on_conversation
  endpoint:
    path: /post/api/v1/voice/register-call
    method: POST
- name: register_call
  endpoint:
    path: /register-call
    method: POST
    data_selector: callReferenceId
    params: {}
- name: fetch_call
  endpoint:
    path: /fetch-call
    method: POST
    data_selector: callReferenceId
    params: {}
notes:
- Basic authentication should only be used in secure server-side environments.
- This API should only be used by server-side integrations.
- Basic authentication should only be used for server-side integrations.
- Access tokens are necessary for client-side integrations including APIs with restricted
  access.
- Authorization should contain the identity and secret of a valid app token generated
  through the Quiq admin interface.
errors:
- '401 Unauthorized: Invalid app token'
- '400 Bad Request: Invalid request payload'
- '404 Not Found: Conversation ID does not exist'
- '400: Invalid request'
- '401: Unauthorized - check your authentication credentials'
- '404: Not found'
- '401 Unauthorized: Invalid app token.'
- '401 Unauthorized: Should contain the identity and secret of a valid app token generated
  through the Quiq admin interface'
auth_info:
  mentioned_objects:
  - Authorization
  - App Token
client:
  base_url: https://developers.quiq.com/api
  auth:
    type: basic
    location: header
    header_name: Authorization
  headers:
    X-Quiq-Client-Id: string
    X-Quiq-Client-Version: string
source_metadata: null
