resources:
- name: attribute_options
  endpoint:
    path: /attribute_options
    method: GET
    data_selector: records
- name: calendar_events
  endpoint:
    path: /calendar_events
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: booking_details
  endpoint:
    path: /booking_details
    method: GET
    data_selector: details
    params: {}
- name: booking_updates
  endpoint:
    path: /booking_updates
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: bookings
  endpoint:
    path: /bookings
    method: GET
    data_selector: records
    params: {}
- name: calendar_event_notes
  endpoint:
    path: /calendar_event_notes
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: calendar_event_updates
  endpoint:
    path: /calendar_event_updates
    method: GET
- name: calendar_events
  endpoint:
    path: /calendar_events
    method: GET
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: capacities
  endpoint:
    path: /capacities
    method: GET
    data_selector: capacities
    params: {}
- name: capacity_group_dependencies
  endpoint:
    path: /capacity_group_dependencies
    method: GET
    data_selector: records
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: contact_bookings
  endpoint:
    path: /contact_bookings
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: coupon_products
  endpoint:
    path: /coupon_products
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: coupon_services
  endpoint:
    path: /coupon_services
    method: GET
    data_selector: coupon_services
    params: {}
- name: coupon_uses
  endpoint:
    path: /coupon_uses
    method: GET
    data_selector: coupon_uses
    params: {}
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: email_events
  endpoint:
    path: /email_events
    method: GET
    data_selector: email_events
    params: {}
- name: email_templates
  endpoint:
    path: /email_templates
    method: GET
    data_selector: email_templates
    params: {}
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: emails
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: external_calendars
  endpoint:
    path: /external_calendars
    method: GET
    data_selector: external_calendars
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
    params: {}
- name: bookings
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: line_item_taxes
  endpoint:
    path: /line_item_taxes
    method: GET
    data_selector: line_item_taxes
    params: {}
- name: line_items
  endpoint:
    path: /line_items
    method: GET
    data_selector: line_items
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: members
  endpoint:
    path: /members
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: create_payments
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: delete_payments
  endpoint:
    path: /permissions
    method: DELETE
    data_selector: reference
    params: {}
- name: update_payments
  endpoint:
    path: /permissions
    method: PATCH
    data_selector: reference
    params: {}
- name: list_permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: reference
    params: {}
- name: create_permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: reference
    params: {}
- name: delete_permissions
  endpoint:
    path: /permissions
    method: DELETE
    data_selector: reference
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: product_attribute_options
  endpoint:
    path: /product_attribute_options
    method: GET
    data_selector: options
    params: {}
- name: product_calendar_logs
  endpoint:
    path: /product_calendar_logs
    method: GET
    data_selector: logs
- name: product_configurations
  endpoint:
    path: /product_configurations
    method: GET
    data_selector: configurations
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: booking_info
- name: product_email_templates
  endpoint:
    path: /product_email_templates
    method: GET
    data_selector: templates
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: product_reply_to_addresses
  endpoint:
    path: /product_reply_to_addresses
    method: GET
    data_selector: addresses
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: product_tasks
  endpoint:
    path: /product_tasks
    method: GET
    data_selector: tasks
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: reply_to_addresses
  endpoint:
    path: /reply_to_addresses
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: service_deposit_moments
  endpoint:
    path: /service_deposit_moments
    method: GET
    data_selector: records
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: ''
    params: {}
- name: service_deposit_taxes
  endpoint:
    path: /service_deposit_taxes
    method: GET
    data_selector: response
    params: {}
- name: create_service_deposit_taxes
  endpoint:
    path: /service_deposit_taxes
    method: POST
    data_selector: response
    params: {}
- name: delete_service_deposit_taxes
  endpoint:
    path: /service_deposit_taxes
    method: DELETE
    data_selector: response
    params: {}
- name: update_service_deposit_taxes
  endpoint:
    path: /service_deposit_taxes
    method: PATCH
    data_selector: response
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: service_discounts
  endpoint:
    path: /service_discounts
    method: GET
    data_selector: discounts
    params: {}
- name: service_payment_moments
  endpoint:
    path: /service_payment_moments
    method: GET
    data_selector: records
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
- name: service_taxes
  endpoint:
    path: /service_taxes
    method: GET
    data_selector: records
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: site_listings
  endpoint:
    path: /site_listings
    method: GET
    data_selector: id
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: ''
    params: {}
- name: site_nav_items
  endpoint:
    path: /site_nav_items
    method: GET
    data_selector: ''
    params: {}
- name: booking
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: site_pages
  endpoint:
    path: /site_pages
    method: GET
    data_selector: site_pages
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: records
- name: taxes
  endpoint:
    path: /taxes
    method: GET
    data_selector: records
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: null
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: null
    params: {}
- name: webhook_notifications
  endpoint:
    path: /webhook_notifications
    method: GET
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: null
    params: {}
- name: widget_listings
  endpoint:
    path: /widget_listings
    method: GET
    data_selector: records
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
- name: widget_views
  endpoint:
    path: /widget_views
    method: GET
    data_selector: records
    params: {}
- name: widgets
  endpoint:
    path: /widgets
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: reference
    params: {}
- name: book
  endpoint:
    path: /v1/book
    method: POST
    data_selector: reference
    params: {}
- name: booking
  endpoint:
    path: /api/bookings
    method: GET
    data_selector: records
    params: {}
notes:
- The API will return at most 1000 results per request.
- Uses API key for authorization
- Redirect the user to payment URL if set after booking.
- If a payment URL is set, the user should be redirected to that URL to complete the
  booking.
- Requires API key for authorization
- Authorization requires an API key.
- Uses API key for authentication
- Requires API key for authentication
- Uses API key for authentication.
- Requires API key to authenticate requests.
- The API requires an API key in the Authorization header.
- Payment URL is returned if set, user should be redirected to complete booking.
- Uses OAuth2 for authentication.
- Requires API key for authentication.
- The API requires an API key for authentication.
- Some objects may return nulls in deeply nested fields
- Free trial - no credit card required
- We comply with the principles of the General Data Protection Regulation (GDPR) when
  dealing with all data received from customers or visitors to our website
- We only hold personal data for as long as a customer is active, in order to keep
  our Service running
- Bookingmood uses HTTPS to send webhook events to your app as a JSON payload.
- Bookingmood doesn’t guarantee delivery of events in the order in which they’re generated.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Recheck API key or token expiration'
- '201: Information identifying the booking.'
- '400: Bad Request. Ensure the request body is correctly formatted.'
- '201: Information identifying the booking'
- '401: Unauthorized'
- '401 Unauthorized: Recheck API key.'
- '401 Unauthorized: Check your API key'
- '201: Successful booking'
- '400: Bad request'
- '401: Unauthorized access'
- '404: Not found'
- '400: Bad request, check your input values'
- '400 Bad Request: Check the request body for required fields.'
- '401 Unauthorized: Ensure the API key is valid.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Recheck API key validity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key or its permissions.'
- '400: Bad Request, check the request body'
- '401: Unauthorized, check API key'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '201: Booking created successfully'
- '401 Unauthorized: Invalid API key'
- '401 Unauthorized: Invalid signature'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.bookingmood.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
