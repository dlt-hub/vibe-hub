resources:
- name: action
  endpoint:
    path: /api/v1/action
    method: POST
    data_selector: results
    params: {}
- name: custom_rules
  endpoint:
    path: /client/v4/zones/$ZONE_ID/rulesets/$RULESET_ID/rules
    method: POST
    data_selector: rules
    params: {}
- name: page_shield_reports
  endpoint:
    path: /client/v4/graphql
    method: POST
    data_selector: data.viewer.zones.pageShieldReportsAdaptiveGroups
    params: {}
- name: full_report
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/full_report
    method: GET
    data_selector: result
- name: day_report
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/day_report
    method: GET
    data_selector: result
- name: threat_events
  endpoint:
    path: /client/v4/accounts/<ACCOUNT_ID>/intel/threat-events
    method: GET
    data_selector: result
    params: {}
- name: request_for_information
  endpoint:
    path: /client/v4/accounts/<ACCOUNT_ID>/intel/requests
    method: POST
    data_selector: result
    params: {}
- name: Botnet Threat Feed
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/full_report
    method: GET
    data_selector: result
- name: Day Report
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/day_report
    method: GET
    data_selector: result
- name: HTTP DDoS Attack Protection
  endpoint:
    path: /ddos-protection/managed-rulesets/http/
    method: GET
    data_selector: rules
    params: {}
- name: Network-layer DDoS Attack Protection
  endpoint:
    path: /ddos-protection/managed-rulesets/network/
    method: GET
    data_selector: rules
    params: {}
- name: email_security_records
  endpoint:
    path: /email/security_records
    method: POST
    data_selector: records
- name: dmarc_statistics
  endpoint:
    path: /email/dmarc/statistics
    method: GET
    data_selector: records
- name: domain_history
  endpoint:
    path: /accounts/{account_id}/intel/domain-history
    method: GET
    data_selector: result
    params: {}
- name: passive_dns
  endpoint:
    path: /accounts/{account_id}/intel/dns
    method: GET
    data_selector: result
    params: {}
- name: Blocked Content
  endpoint:
    path: /security-center/blocked-content/
    method: GET
    data_selector: blocked_content_records
- name: Brand Protection
  endpoint:
    path: /security-center/brand-protection/
    method: GET
    data_selector: brand_protection_records
- name: Cloudforce One
  endpoint:
    path: /security-center/cloudforce-one/
    method: GET
    data_selector: cloudforce_one_records
- name: indicator_feeds
  endpoint:
    path: /accounts/<ACCOUNT_ID>/intel/indicator-feeds
    method: GET
    data_selector: result
- name: asn_intelligence
  endpoint:
    path: /accounts/{account_id}/intel/asn/{asn}
    method: GET
    data_selector: result
- name: domain_intelligence
  endpoint:
    path: /accounts/<ACCOUNT_ID>/intel/domains
    method: GET
    data_selector: result
- name: email_security_records
  endpoint:
    path: /dmarc_management/security_records
    method: GET
    data_selector: records
    params: {}
- name: dmarc_statistics
  endpoint:
    path: /dmarc_management/statistics
    method: GET
    data_selector: records
    params: {}
- name: botnet_feed_full_report
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/full_report
    method: GET
- name: botnet_feed_day_report
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/day_report
    method: GET
- name: Brand Protection
  endpoint:
    path: /api/resources/brand_protection/
    method: GET
- name: Threat Intelligence
  endpoint:
    path: /api/resources/cloudforce_one/subresources/threat_events/
    method: GET
- name: miscategorization
  endpoint:
    path: /accounts/{account_id}/intel/miscategorization
    method: POST
    data_selector: result
    params: {}
- name: siteverify
  endpoint:
    path: /siteverify
    method: POST
    data_selector: response
    params: {}
- name: ASN Intelligence
  endpoint:
    path: /accounts/{account_id}/intel/asn/{asn}
    method: GET
    data_selector: result
- name: Custom Indicator Feed Download
  endpoint:
    path: /accounts/{account_id}/intel/indicator-feeds/{feed_id}/download
    method: GET
    data_selector: result
- name: Domain Intelligence
  endpoint:
    path: /accounts/{account_id}/intel/domain
    method: GET
    data_selector: result
- name: Domain History
  endpoint:
    path: /accounts/{account_id}/intel/domain-history
    method: GET
    data_selector: result
- name: IP Intelligence
  endpoint:
    path: /accounts/{account_id}/intel/ip
    method: GET
    data_selector: result
- name: Passive DNS by IP
  endpoint:
    path: /accounts/{account_id}/intel/dns
    method: GET
    data_selector: result
- name: page_shield_policy
  endpoint:
    path: /page_shield/policies
    method: POST
    data_selector: policy
    params: {}
- name: policy_violations
  endpoint:
    path: /page_shield/violations
    method: GET
    data_selector: violations
    params: {}
- name: get_auditor_information
  endpoint:
    path: /info
    method: GET
    data_selector: keys
    params: {}
- name: get_epoch
  endpoint:
    path: /namespaces/{namespace}/audits/1
    method: GET
    data_selector: epoch
    params: {}
- name: publish_epoch
  endpoint:
    path: /namespaces/{namespace}/audits
    method: POST
    data_selector: namespace
    params: {}
- name: create_namespace
  endpoint:
    path: /namespaces
    method: POST
    data_selector: name
    params: {}
- name: list_namespaces
  endpoint:
    path: /namespaces
    method: GET
    data_selector: namespaces
    params: {}
- name: page_shield_settings
  endpoint:
    path: /zones/{zone_id}/page_shield
    method: GET
    data_selector: result
- name: page_shield_scripts
  endpoint:
    path: /zones/{zone_id}/page_shield/scripts
    method: GET
    data_selector: result
- name: page_shield_connections
  endpoint:
    path: /zones/{zone_id}/page_shield/connections
    method: GET
    data_selector: result
- name: page_shield_cookies
  endpoint:
    path: /zones/{zone_id}/page_shield/cookies
    method: GET
    data_selector: result
- name: page_shield_policies
  endpoint:
    path: /zones/{zone_id}/page_shield/policies
    method: GET
    data_selector: result
- name: page_shield_policies
  endpoint:
    path: /zones/$ZONE_ID/page_shield/policies
    method: POST
    data_selector: result
    params: {}
- name: manage_miscategorization_reports
  endpoint:
    path: /accounts/$ACCOUNT_ID/intel/miscategorization
    method: POST
    data_selector: result
    params: {}
- name: change_categorization
  endpoint:
    path: /accounts/$ACCOUNT_ID/intel/categorization
    method: POST
    data_selector: result
    params: {}
- name: widget
  endpoint:
    path: /v0/api.js
    method: GET
- name: siteverify
  endpoint:
    path: /turnstile/v0/siteverify
    method: POST
    data_selector: response
    params: {}
- name: pre-confirm
  endpoint:
    path: /pre-confirm
    method: POST
    data_selector: success
    params: {}
- name: Siteverify
  endpoint:
    path: /turnstile/get-started/server-side-validation/
    method: POST
- name: pre-confirm
  endpoint:
    path: /pre-confirm
    method: POST
    data_selector: result
    params: {}
- name: siteverify
  endpoint:
    path: /siteverify
    method: POST
    data_selector: success
    params: {}
- name: historical_changelog_2018
  endpoint:
    path: /waf/change-log/historical-2018/
    method: GET
    data_selector: rulesets
    params: {}
- name: historical_changelog_2019
  endpoint:
    path: /waf/change-log/historical-2019/
    method: GET
    data_selector: rulesets
    params: {}
- name: CVE-2019-19781
  endpoint:
    path: /100242
    method: Block
- name: Improvement in Equation-like SQLi
  endpoint:
    path: /100009CB
    method: Block
- name: Improvement CVE-2019-11043 detection
  endpoint:
    path: /100191
    method: Block
- name: Reduce false positives for requests made with HTTP 2 and 3
  endpoint:
    path: /960034
    method: Scoring based
- name: Disable outdated XSS rule by default
  endpoint:
    path: /100148
    method: Disable
- name: Improve XSS detection
  endpoint:
    path: /100191
    method: Block
- name: Block vBulletin vulnerability CVE-2019-17132
  endpoint:
    path: /100186
    method: Block
- name: WAF Release - 2025-04-02
  endpoint:
    path: /managed_ruleset/2025-04-02
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-22 - Emergency
  endpoint:
    path: /managed_ruleset/2025-03-22/emergency
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-19 - Emergency
  endpoint:
    path: /managed_ruleset/2025-03-19/emergency
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-17
  endpoint:
    path: /managed_ruleset/2025-03-17
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-11 - Emergency
  endpoint:
    path: /managed_ruleset/2025-03-11/emergency
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-10
  endpoint:
    path: /managed_ruleset/2025-03-10
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-02-24
  endpoint:
    path: /managed_ruleset/2025-02-24
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-02-18
  endpoint:
    path: /managed_ruleset/2025-02-18
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-02-11
  endpoint:
    path: /managed_ruleset/2025-02-11
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-01-21
  endpoint:
    path: /managed_ruleset/2025-01-21
    method: GET
    data_selector: rules
    params: {}
- name: Invalid token - reject submission
  endpoint:
    path: Invalid token - reject submission
    method: Block
    data_selector: Disable
    params: {}
- name: Cloudflare Specials
  endpoint:
    path: Cloudflare Specials
    method: Block
    data_selector: N/A
    params: {}
- name: Cloudflare OWASP
  endpoint:
    path: Cloudflare OWASP
    method: Scoring based
    data_selector: Scoring based
    params: {}
- name: Cloudflare Miscellaneous
  endpoint:
    path: Cloudflare Miscellaneous
    method: Log
    data_selector: Disable
    params: {}
- name: Cloudflare PHP
  endpoint:
    path: Cloudflare PHP
    method: Log
    data_selector: Disable
    params: {}
- name: Cloudflare WordPress
  endpoint:
    path: Cloudflare WordPress
    method: Log
    data_selector: Disable
    params: {}
- name: invalid_token
  endpoint:
    path: /invalid_token
    method: POST
    data_selector: submission
    params: {}
- name: ruleset
  endpoint:
    path: /rulesets
    method: GET
    data_selector: rules
    params: {}
- name: Invalid token - reject submission
  endpoint:
    path: /
    method: GET
    data_selector: rules
    params: {}
- name: custom_rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$RULESET_ID/rules
    method: POST
    data_selector: rules
    params: {}
- name: entry_point_ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets/phases/http_request_firewall_managed/entrypoint
    method: GET
    data_selector: result
    params: {}
- name: create_zone_ruleset_rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$ENTRY_POINT_RULESET_ID/rules
    method: POST
    data_selector: ''
    params: {}
- name: Get a zone entry point ruleset
  endpoint:
    path: /api/resources/rulesets/subresources/phases/methods/get/
    method: GET
- name: Update a zone ruleset rule
  endpoint:
    path: /api/resources/rulesets/methods/update/
    method: POST
- name: Delete a zone ruleset rule
  endpoint:
    path: /api/resources/rulesets/methods/delete/
    method: DELETE
- name: list_items
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}/items
    method: GET
    data_selector: items
    params:
      search: '{query}'
- name: token_validation_rules
  endpoint:
    path: /rules
    method: PUT
    data_selector: result
    params: {}
- name: token_validation_preview
  endpoint:
    path: /token_validation/rules/preview
    method: PUT
    data_selector: result
    params: {}
- name: out_of_state_tcp_rules
  endpoint:
    path: accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_flow_protection/rules
    method: GET
    data_selector: rules
- name: out_of_state_tcp_filters
  endpoint:
    path: accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_flow_protection/filters
    method: GET
    data_selector: filters
- name: firewall_rules
  endpoint:
    path: /zones/{zone_id}/firewall/rules
    method: POST
    data_selector: result
    params: {}
- name: update_firewall_rules
  endpoint:
    path: /zones/{zone_id}/firewall/rules
    method: PUT
    data_selector: result
    params: {}
- name: filters
  endpoint:
    path: /zones/{zone_id}/filters
    method: POST
    data_selector: result
    params: {}
- name: validate_expression
  endpoint:
    path: /filters/validate-expr
    method: GET
    data_selector: result
    params: {}
- name: DNS protection rules
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules
    method: GET
- name: Add DNS protection rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules
    method: POST
- name: Get DNS protection rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules/{rule_id}
    method: GET
- name: Update DNS protection rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules/{rule_id}
    method: PATCH
- name: Delete DNS protection rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules/{rule_id}
    method: DELETE
- name: Delete all DNS protection rules
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules
    method: DELETE
- name: Advanced TCP Protection status
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_protection_status
    method: GET
- name: Update Advanced TCP Protection status
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_protection_status
    method: PATCH
- name: Allowlist prefixes
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist
    method: GET
- name: Add allowlisted prefix
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist
    method: POST
- name: Get allowlisted prefix
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist/{allowlist_id}
    method: GET
- name: Update allowlisted prefix
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist/{allowlist_id}
    method: PATCH
- name: Delete allowlisted prefix
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist/{allowlist_id}
    method: DELETE
- name: Delete all allowlisted prefixes
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist
    method: DELETE
- name: Bot Analytics
  endpoint:
    path: /bots/analytics
    method: GET
    data_selector: botTrafficData
- name: create_widget
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets
    method: POST
    data_selector: ''
    params: {}
- name: manage_widgets
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets
    method: GET
    data_selector: ''
    params: {}
- name: view_widget_details
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets/$SITEKEY
    method: GET
    data_selector: ''
    params: {}
- name: update_widget
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets/$SITEKEY
    method: PUT
    data_selector: ''
    params: {}
- name: rotate_secret
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets/$SITEKEY/rotate_secret
    method: POST
    data_selector: ''
    params: {}
- name: delete_widget
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets/$SITEKEY
    method: DELETE
    data_selector: ''
    params: {}
- name: email_security_records
  endpoint:
    path: /dmarc-management/security-records
    method: GET
    data_selector: records
- name: dmarc_statistics
  endpoint:
    path: /dmarc-management/statistics
    method: GET
    data_selector: records
- name: botnet_feed_full_report
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/full_report
    method: GET
    data_selector: result
- name: botnet_feed_day_report
  endpoint:
    path: /accounts/{account_id}/botnet_feed/asn/{asn}/day_report
    method: GET
    data_selector: result
- name: resource_monitoring
  endpoint:
    path: /page-shield/resource-monitoring
    method: GET
    data_selector: scripts
    params: {}
- name: policies
  endpoint:
    path: /page-shield/policies
    method: GET
    data_selector: policies
    params: {}
- name: alerts
  endpoint:
    path: /page-shield/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: security_reports
  endpoint:
    path: /security/reports
    method: GET
    data_selector: reports
- name: blocked_content
  endpoint:
    path: /security/blocked-content
    method: GET
    data_selector: blockedContent
- name: brand_protection
  endpoint:
    path: /security/brand-protection
    method: GET
    data_selector: brandProtection
- name: cloudforce_one
  endpoint:
    path: /security/cloudforce-one
    method: GET
    data_selector: cloudforceOne
- name: asn_intelligence
  endpoint:
    path: /accounts/{account_id}/intel/asn/{asn}
    method: GET
    data_selector: result
- name: custom_indicator_feed_download
  endpoint:
    path: /accounts/{account_id}/intel/indicator-feeds/{feed_id}/download
    method: GET
    data_selector: result
- name: domain_intelligence
  endpoint:
    path: /accounts/{account_id}/intel/domain
    method: GET
    data_selector: result
- name: domain_history
  endpoint:
    path: /accounts/{account_id}/intel/domain-history
    method: GET
    data_selector: result
- name: ip_intelligence
  endpoint:
    path: /accounts/{account_id}/intel/ip
    method: GET
    data_selector: result
- name: passive_dns_by_ip
  endpoint:
    path: /accounts/{account_id}/intel/dns
    method: GET
    data_selector: result
- name: url_info
  endpoint:
    path: /accounts/{account_id}/brand-protection/url-info
    method: GET
    data_selector: result
- name: miscategorization
  endpoint:
    path: /accounts/{account_id}/intel/miscategorization
    method: POST
    data_selector: result
- name: whois
  endpoint:
    path: /accounts/{account_id}/intel/whois
    method: GET
    data_selector: result
- name: managed_ruleset
  endpoint:
    path: /managed_rules
    method: GET
    data_selector: rules
    params: {}
- name: rate_limiting_rules
  endpoint:
    path: /rate_limiting_rules
    method: GET
    data_selector: rules
    params: {}
- name: endpoint_management
  endpoint:
    path: /api-shield/management-and-monitoring/endpoint-management/
    method: GET
    data_selector: endpoints
    params: {}
- name: bot_detection_alert
  endpoint:
    path: /bots/reference/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: firewall_rules
  endpoint:
    path: /zones/{zone_id}/firewall/rules
    method: POST
    data_selector: result
    params: {}
- name: filters
  endpoint:
    path: /zones/{zone_id}/firewall/filters
    method: POST
    data_selector: result
    params: {}
- name: auditor_info
  endpoint:
    path: /info
    method: GET
    data_selector: keys
- name: get_epoch
  endpoint:
    path: /namespaces/{namespace}/audits/1
    method: GET
    data_selector: epoch
- name: publish_epoch
  endpoint:
    path: /namespaces/{namespace}/audits
    method: POST
    data_selector: epoch
- name: create_namespace
  endpoint:
    path: /namespaces
    method: POST
    data_selector: name
- name: list_namespaces
  endpoint:
    path: /namespaces
    method: GET
    data_selector: namespaces
- name: page_shield_settings
  endpoint:
    path: /zones/{zone_id}/page_shield
    method: GET
    data_selector: result
    params: {}
- name: page_shield_scripts
  endpoint:
    path: /zones/{zone_id}/page_shield/scripts
    method: GET
    data_selector: result
    params: {}
- name: page_shield_connections
  endpoint:
    path: /zones/{zone_id}/page_shield/connections
    method: GET
    data_selector: result
    params: {}
- name: page_shield_cookies
  endpoint:
    path: /zones/{zone_id}/page_shield/cookies
    method: GET
    data_selector: result
    params: {}
- name: page_shield_policies
  endpoint:
    path: /zones/{zone_id}/page_shield/policies
    method: GET
    data_selector: result
    params: {}
- name: detected_cookies
  endpoint:
    path: /zones/$ZONE_ID/page_shield/cookies
    method: GET
    data_selector: result
    params:
      page: 1
      per_page: 15
- name: cookie_details
  endpoint:
    path: /zones/$ZONE_ID/page_shield/cookies/{cookie_id}
    method: GET
    data_selector: result
    params: {}
- name: policies
  endpoint:
    path: /zones/$ZONE_ID/page_shield/policies
    method: POST
    data_selector: result
    params: {}
- name: miscategorization
  endpoint:
    path: /accounts/{account_id}/intel/miscategorization
    method: POST
    data_selector: result
- name: widget
  endpoint:
    path: /turnstile/widgets
    method: POST
    data_selector: widget
    params: {}
- name: siteverify
  endpoint:
    path: /siteverify
    method: POST
    data_selector: result
    params: {}
- name: site_verify
  endpoint:
    path: /turnstile/v0/siteverify
    method: POST
    data_selector: outcome
- name: validate_token
  endpoint:
    path: /siteverify
    method: POST
    data_selector: result
    params: {}
- name: pre-confirm
  endpoint:
    path: /pre-confirm
    method: POST
    data_selector: result
    params: {}
- name: siteverify
  endpoint:
    path: /turnstile/v0/siteverify
    method: POST
    data_selector: success
    params: {}
- name: sampled_logs
  endpoint:
    path: /sampled_logs
    method: GET
    data_selector: logs
    params: {}
- name: raw_logs
  endpoint:
    path: /raw_logs
    method: GET
    data_selector: logs
    params: {}
- name: error_codes
  endpoint:
    path: /troubleshooting/client-side-errors/error-codes
    method: GET
    data_selector: error_codes
    params: {}
- name: feedback_reports
  endpoint:
    path: /troubleshooting/feedback-reports
    method: GET
    data_selector: feedback_reports
    params: {}
- name: rotate_secret_key
  endpoint:
    path: /troubleshooting/rotate-secret-key
    method: GET
    data_selector: rotate_secret_key
    params: {}
- name: testing
  endpoint:
    path: /troubleshooting/testing
    method: GET
    data_selector: testing
    params: {}
- name: troubleshooting_faq
  endpoint:
    path: /troubleshooting/troubleshooting-faqs
    method: GET
    data_selector: troubleshooting_faq
    params: {}
- name: challenge_outcome
  endpoint:
    path: /turnstile-analytics/challenge-outcomes
    method: GET
    data_selector: challenge_outcome
    params: {}
- name: token_validation
  endpoint:
    path: /turnstile-analytics/token-validation
    method: GET
    data_selector: token_validation
    params: {}
- name: conditionally_enforce_turnstile
  endpoint:
    path: /tutorials/conditionally-enforcing-turnstile
    method: GET
    data_selector: conditionally_enforce_turnstile
    params: {}
- name: exclude_turnstile_from_e2e_tests
  endpoint:
    path: /tutorials/excluding-turnstile-from-e2e-tests
    method: GET
    data_selector: exclude_turnstile_from_e2e_tests
    params: {}
- name: Invalid token - reject submission
  endpoint:
    path: /InvalidTokenRejectSubmission
    method: POST
    data_selector: submission
    params: {}
- name: block_citrix_netscaler_adc
  endpoint:
    path: /v1/rulesets/100242
    method: GET
    data_selector: rule_id
    params: {}
- name: improvement_in_equation_like_sqli
  endpoint:
    path: /v1/rulesets/100009CB
    method: GET
    data_selector: rule_id
    params: {}
- name: improvement_cve_2019_11043_detection
  endpoint:
    path: /v1/rulesets/100191
    method: GET
    data_selector: rule_id
    params: {}
- name: minor_change_to_reduce_gutenberg_false_positives
  endpoint:
    path: /v1/rulesets/9802140
    method: GET
    data_selector: rule_id
    params: {}
- name: disable_outdated_xss_rule_by_default
  endpoint:
    path: /v1/rulesets/100148
    method: GET
    data_selector: rule_id
    params: {}
- name: Invalid token
  endpoint:
    path: /invalid/token
    method: POST
    data_selector: submission
    params: {}
- name: Cloudflare Specials
  endpoint:
    path: /cloudflare/specials
    method: GET
    data_selector: records
    params: {}
- name: WAF Release - 2025-03-22 - Emergency
  endpoint:
    path: /managed-rules/2025-03-22
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-19 - Emergency
  endpoint:
    path: /managed-rules/2025-03-19
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-17
  endpoint:
    path: /managed-rules/2025-03-17
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-11 - Emergency
  endpoint:
    path: /managed-rules/2025-03-11
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-10
  endpoint:
    path: /managed-rules/2025-03-10
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-03-03
  endpoint:
    path: /managed-rules/2025-03-03
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-02-24
  endpoint:
    path: /managed-rules/2025-02-24
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-02-18
  endpoint:
    path: /managed-rules/2025-02-18
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-02-11
  endpoint:
    path: /managed-rules/2025-02-11
    method: GET
    data_selector: rules
    params: {}
- name: WAF Release - 2025-01-21
  endpoint:
    path: /managed-rules/2025-01-21
    method: GET
    data_selector: rules
    params: {}
- name: ruleset
  endpoint:
    path: /ruleset
    method: GET
    data_selector: rules
- name: ruleset
  endpoint:
    path: /ruleset
    method: GET
    data_selector: rules
    params: {}
- name: historical_2021
  endpoint:
    path: /waf/change-log/historical-2021/
    method: GET
    data_selector: rulesets
- name: historical_2022
  endpoint:
    path: /waf/change-log/historical-2022/
    method: GET
    data_selector: rulesets
- name: custom_rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$RULESET_ID/rules
    method: POST
    data_selector: rules
    params: {}
- name: rate_limiting_rule
  endpoint:
    path: /waf/rate-limiting/rules
    method: POST
    data_selector: rule
    params: {}
- name: managed_rulesets
  endpoint:
    path: /managed-rulesets
    method: GET
    data_selector: rulesets
    params: {}
- name: waf_exceptions
  endpoint:
    path: /waf/exceptions
    method: POST
    data_selector: exceptions
    params: {}
- name: token_validation
  endpoint:
    path: /client/v4/zones/{zone_id}/api_gateway/token_validation
    method: POST
    data_selector: result
    params: {}
- name: token_validation_rules
  endpoint:
    path: /client/v4/zones/{zone_id}/api_gateway/token_validation/rules
    method: POST
    data_selector: result
    params: {}
- name: token_validation_preview
  endpoint:
    path: /client/v4/zones/{zone_id}/api_gateway/token_validation/rules/preview
    method: PUT
    data_selector: result
    params: {}
- name: Scrape Shield
  endpoint:
    path: /waf/tools/scrape-shield
    method: GET
    data_selector: settings
- name: Security Level
  endpoint:
    path: /waf/tools/security-level
    method: GET
    data_selector: security_settings
- name: User Agent Blocking
  endpoint:
    path: /waf/tools/user-agent-blocking
    method: GET
    data_selector: user_agent_rules
- name: Validation checks
  endpoint:
    path: /waf/tools/validation-checks
    method: GET
    data_selector: validation_events
- name: Bing Site Scan
  endpoint:
    path: /waf/troubleshooting/blocked-bing-site-scans
    method: GET
    data_selector: bing_site_scan_issues
- name: Issues sharing to Facebook
  endpoint:
    path: /waf/troubleshooting/facebook-sharing
    method: GET
    data_selector: facebook_sharing_issues
- name: FAQ
  endpoint:
    path: /waf/troubleshooting/faq
    method: GET
    data_selector: faq
- name: Zone Lockdown
  endpoint:
    path: /waf/tools/zone-lockdown
    method: GET
    data_selector: zone_lockdown_rules
- name: token_validation_rules
  endpoint:
    path: /zones/{zone_id}/api_gateway/token_validation/rules
    method: GET
    data_selector: result
- name: update_token_validation_credentials
  endpoint:
    path: /zones/{zone_id}/api_gateway/token_validation/{config_id}/credentials
    method: PUT
    data_selector: response
- name: update_token_validation_rules
  endpoint:
    path: /zones/{zone_id}/api_gateway/token_validation/rules
    method: PATCH
    data_selector: result
- name: advanced_dns_protection
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules
    method: GET
- name: advanced_tcp_protection
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_protection_status
    method: GET
- name: sequence_rules
  endpoint:
    path: /zones/{zone_id}/api_gateway/seqrules
    method: GET
    data_selector: rules
    params: {}
- name: add_sequence_rule
  endpoint:
    path: /zones/{zone_id}/api_gateway/seqrules/rules
    method: POST
    data_selector: rules
    params: {}
- name: bulk_sequence_rules
  endpoint:
    path: /zones/{zone_id}/api_gateway/seqrules
    method: PUT
    data_selector: rules
    params: {}
- name: delete_sequence_rule
  endpoint:
    path: /zones/{zone_id}/api_gateway/seqrules/rules/{id}
    method: DELETE
    data_selector: rules
    params: {}
- name: firewall_rule
  endpoint:
    path: /client/v4/zones/{zone_id}/firewall/rules
    method: POST
    data_selector: result
    params: {}
- name: update_firewall_rule
  endpoint:
    path: /client/v4/zones/{zone_id}/firewall/rules/{rule_id}
    method: PUT
    data_selector: result
    params: {}
- name: filters
  endpoint:
    path: /client/v4/zones/{zone_id}/filters
    method: GET
    data_selector: result
    params: {}
- name: delete_filters
  endpoint:
    path: /client/v4/zones/{zone_id}/filters
    method: DELETE
    data_selector: result
    params: {}
- name: filters
  endpoint:
    path: /zones/{zone_id}/filters
    method: POST
    data_selector: result
    params: {}
- name: validate_expression
  endpoint:
    path: /filters/validate-expr
    method: GET
    data_selector: result
    params: {}
- name: firewall_rules
  endpoint:
    path: /zones/{zone_id}/firewall/rules
    method: GET
    data_selector: result
    params: {}
- name: widgets
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets
    method: POST
- name: get_widgets
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets
    method: GET
- name: get_widget
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets/$SITEKEY
    method: GET
- name: update_widget
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets/$SITEKEY
    method: PUT
- name: delete_widget
  endpoint:
    path: /client/v4/accounts/$ACCOUNT_ID/challenges/widgets/$SITEKEY
    method: DELETE
- name: custom_ruleset
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets
    method: POST
    data_selector: result
    params: {}
- name: rulesets
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets
    method: POST
    data_selector: result.rules
    params: {}
- name: entry_point_ruleset
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets/phases/http_request_firewall_managed/entrypoint
    method: GET
    data_selector: result
    params: {}
- name: account_entry_point_ruleset
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets/phases/http_ratelimit/entrypoint
    method: GET
    data_selector: result
    params: {}
- name: create_account_ruleset_rule
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets/$RULESET_ID/rules
    method: POST
    data_selector: result
    params: {}
- name: create_account_ruleset
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets
    method: POST
    data_selector: result
    params: {}
- name: leaked_credential_checks
  endpoint:
    path: /client/v4/zones/$ZONE_ID/leaked-credential-checks
    method: POST
    data_selector: result
    params: {}
- name: block_specific_countries
  endpoint:
    path: /waf/custom-rules/block-specific-countries
    method: POST
    data_selector: rules
    params:
      expression: (ip.src.country in {"KP" "SY"})
      action: Block
- name: allow_traffic_from_verified_bots
  endpoint:
    path: /waf/custom-rules/allow-verified-bots
    method: POST
    data_selector: rules
    params:
      expression: (ip.src.country in {"US" "MX"} and not cf.client.bot)
      action: Managed Challenge
- name: block_attack_score
  endpoint:
    path: /waf/custom-rules/block-attack-score
    method: POST
    data_selector: rules
    params:
      expression: (ip.src.country in {"CN" "TW" "US" "GB"} and cf.waf.score lt 20)
      action: Block
- name: block_by_geolocation
  endpoint:
    path: /waf/custom-rules/block-geolocation
    method: POST
    data_selector: rules
    params:
      expression: (ip.src.asnum eq 131279) or (ip.src.continent eq "AS") or (ip.src.country
        eq "KP") or (ip.src.region_code eq "CA")
      action: Block
- name: block_ms_exchange_autodiscover
  endpoint:
    path: /waf/custom-rules/block-ms-exchange-autodiscover
    method: POST
    data_selector: rules
    params:
      expression: (ends_with(http.request.uri.path, "/autodiscover.xml") or ends_with(http.request.uri.path,
        "/autodiscover.src"))
      action: Block
- name: challenge_bad_bots
  endpoint:
    path: /waf/custom-rules/challenge-bad-bots
    method: POST
    data_selector: rules
    params:
      expression: (cf.bot_management.score lt 30 and not cf.bot_management.verified_bot)
      action: Block
- name: content_upload_scan_payloads
  endpoint:
    path: /zones/$ZONE_ID/content-upload-scan/payloads
    method: GET
    data_selector: result
    params: {}
- name: enable_content_upload_scan
  endpoint:
    path: /zones/$ZONE_ID/content-upload-scan/enable
    method: POST
    data_selector: ''
    params: {}
- name: add_custom_detection_location
  endpoint:
    path: /zones/$ZONE_ID/leaked-credential-checks/detections
    method: POST
    data_selector: result
    params: {}
- name: get_existing_custom_detection_locations
  endpoint:
    path: /zones/$ZONE_ID/leaked-credential-checks/detections
    method: GET
    data_selector: result
    params: {}
- name: delete_custom_detection_location
  endpoint:
    path: /zones/$ZONE_ID/leaked-credential-checks/detections/$DETECTION_ID
    method: DELETE
    data_selector: ''
    params: {}
- name: enable_content_scanning
  endpoint:
    path: /zones/$ZONE_ID/content-upload-scan/enable
    method: POST
    data_selector: ''
    params: {}
- name: disable_content_scanning
  endpoint:
    path: /zones/$ZONE_ID/content-upload-scan/disable
    method: POST
    data_selector: ''
    params: {}
- name: get_content_scanning_status
  endpoint:
    path: /zones/$ZONE_ID/content-upload-scan/settings
    method: GET
    data_selector: ''
    params: {}
- name: rulesets
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets
    method: POST
    data_selector: result
    params: {}
- name: managed_ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets
    method: POST
    data_selector: result
    params: {}
- name: entry_point_ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets/phases/http_request_firewall_managed/entrypoint
    method: GET
    data_selector: result
    params: {}
- name: create_rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$ENTRY_POINT_RULESET_ID/rules
    method: POST
    data_selector: result
    params: {}
- name: Get a zone ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets/efb7b8c949ac4650a09736fc376e9aee
    method: GET
    data_selector: result
    params: {}
- name: Get a zone entry point ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets/phases/http_request_firewall_managed/entrypoint
    method: GET
    data_selector: result
    params: {}
- name: Create a zone ruleset rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$ENTRY_POINT_RULESET_ID/rules
    method: POST
    data_selector: result
    params: {}
- name: zone_ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets
    method: GET
    data_selector: result
- name: zone_entry_point_ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets/phases/http_request_firewall_managed/entrypoint
    method: GET
    data_selector: result
- name: create_zone_ruleset_rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$ENTRY_POINT_RULESET_ID/rules
    method: POST
    data_selector: result
- name: zone_ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets
    method: GET
- name: zone_entry_point_ruleset
  endpoint:
    path: /zones/$ZONE_ID/rulesets/phases/http_request_firewall_managed/entrypoint
    method: GET
- name: create_zone_ruleset_rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$ENTRY_POINT_RULESET_ID/rules
    method: POST
- name: list_items
  endpoint:
    path: /accounts/{account_id}/rules/lists/{list_id}/items
    method: GET
    data_selector: items
- name: IP Access Rules
  endpoint:
    path: /waf/tools/ip-access-rules
    method: GET
    data_selector: rules
    params: {}
- name: Lists
  endpoint:
    path: /waf/tools/lists
    method: GET
    data_selector: lists
    params: {}
- name: cloudflare_ruleset
  endpoint:
    path: /ruleset
    method: GET
    data_selector: rules
    params: {}
- name: email_obfuscation
  endpoint:
    path: /api/resources/zones/subresources/settings/methods/edit/
    method: PATCH
    data_selector: value
    params:
      email_obfuscation: 'off'
- name: hotlink_protection
  endpoint:
    path: /api/resources/zones/subresources/settings/methods/edit/
    method: PATCH
    data_selector: value
    params:
      hotlink_protection: 'on'
- name: syn_flood_rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/syn_protection/rules
    method: POST
    data_selector: result
    params: {}
- name: out_of_state_tcp_rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_flow_protection/rules
    method: POST
    data_selector: result
    params: {}
- name: syn_flood_filter
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/syn_protection/filters
    method: POST
    data_selector: result
    params: {}
- name: out_of_state_tcp_filter
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_flow_protection/filters
    method: POST
    data_selector: result
    params: {}
- name: DNS protection rules
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules
    method: GET
    data_selector: result
    params: {}
- name: Create DNS protection rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules
    method: POST
    data_selector: result
    params: {}
- name: Update DNS protection rule
  endpoint:
    path: /accounts/{account_id}/magic/advanced_dns_protection/configs/dns_protection/rules/{rule_id}
    method: PATCH
    data_selector: result
    params: {}
- name: Advanced TCP Protection status
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_protection_status
    method: GET
    data_selector: result
    params: {}
- name: Enable Advanced TCP Protection
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/tcp_protection_status
    method: PATCH
    data_selector: result
    params: {}
- name: Get existing prefixes
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/prefixes
    method: GET
    data_selector: result
    params: {}
- name: Get all prefixes in allowlist
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist
    method: GET
    data_selector: result
    params: {}
- name: Add a prefix to the allowlist
  endpoint:
    path: /accounts/{account_id}/magic/advanced_tcp_protection/configs/allowlist
    method: POST
    data_selector: result
    params: {}
- name: rulesets
  endpoint:
    path: /accounts/$ACCOUNT_ID/rulesets
    method: GET
    data_selector: result
    params: {}
- name: entrypoint
  endpoint:
    path: /zones/$ZONE_ID/rulesets/phases/http_request_firewall_managed/entrypoint
    method: GET
    data_selector: result
    params: {}
- name: update_rule
  endpoint:
    path: /zones/$ZONE_ID/rulesets/$ENTRY_POINT_RULESET_ID/rules/$EXECUTE_RULE_ID
    method: PATCH
    data_selector: null
    params: {}
- name: Check WAF update compatibility
  endpoint:
    path: /zones/<ZONE_ID>/waf_migration/check
    method: GET
    params:
      phase_two: '1'
- name: Get new WAF configuration
  endpoint:
    path: /zones/<ZONE_ID>/waf_migration/config
    method: GET
    params:
      phase_two: '1'
- name: Update zone entry point ruleset
  endpoint:
    path: /zones/<ZONE_ID>/rulesets/phases/http_request_firewall_managed/entrypoint
    method: PUT
    params:
      waf_migration: <VALUE>
      phase_two: '1'
- name: Get WAF status
  endpoint:
    path: /zones/<ZONE_ID>/waf_migration/status
    method: GET
- name: create_list
  endpoint:
    path: accounts/{account_id}/rules/lists
    method: POST
    data_selector: ''
    params: {}
- name: get_lists
  endpoint:
    path: accounts/{account_id}/rules/lists
    method: GET
    data_selector: ''
    params: {}
- name: get_list
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}
    method: GET
    data_selector: ''
    params: {}
- name: update_list
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_list
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_list_items
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}/items
    method: GET
    data_selector: ''
    params: {}
- name: create_list_items
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}/items
    method: POST
    data_selector: ''
    params: {}
- name: update_all_list_items
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}/items
    method: PUT
    data_selector: ''
    params: {}
- name: delete_list_items
  endpoint:
    path: accounts/{account_id}/rules/lists/{list_id}/items
    method: DELETE
    data_selector: ''
    params: {}
notes:
- Enabling API Shield features will have no impact on your traffic until you choose
  to move a setting from log to block mode.
- Requires a valid Cloudflare API token.
- Schema validation, schema learning, JWT validation, Sequence Analytics, sequence
  mitigation, and rate limit recommendations only run on endpoints saved to Endpoint
  Management.
- Only available to Enterprise customers with the Advanced DDoS Protection subscription.
- Cloudflare recommends providing values for `samesite` and `secure` different from
  `Auto`.
- Custom rules allow you to control incoming traffic by filtering requests to a zone.
- The DDoS Attack Protection managed rulesets are enabled by default on zones onboarded
  to Cloudflare, IP applications onboarded to Spectrum, and IP Prefixes onboarded
  to Magic Transit.
- Only available to Enterprise customers with a paid add-on.
- Turning off Page Shield's client-side resource monitoring will not turn off policies.
- You must have a Cloudforce One subscription to access Cloudforce One on the dashboard.
- The API URI path is planned to change from .../botnet_feed/... to .../ddos_botnet_feed/...
  in the future.
- Responses with no IP addresses in the results (empty state) will return an HTTP
  200 status code (success), with an empty list in the result property.
- Enterprise customers can preview this product as a non-contract service, which provides
  full access, free of metered usage fees, limits, and certain other restrictions.
- API Shield automatically labels endpoints with risks due to missing schemas and
  performance anomalies.
- Some events will not display Target Country and Target Industry because they are
  unknown information.
- Bot Analytics shows up to 72 hours of data at a time and can display data up to
  30 days old.
- Cloudflare uses adaptive bitrate technology to show sampled data — most customers
  will see a 1-10% sample depending on how much information they are trying to view.
- At least one of the required API token permissions is necessary.
- DDoS Attack Protection managed rulesets provided by Cloudflare are enabled by default
  on zones onboarded to Cloudflare, IP applications onboarded to Spectrum, and IP
  Prefixes onboarded to Magic Transit.
- For additional background on email security records, refer to the introductory blog
  post.
- You must have Admin, Super Admin, or Trust and Safety role to access certain features.
- API Shield automatically labels your API inventory with API-specific risks.
- API call limits vary per month based on your Cloudflare plan type.
- Cloudflare uses adaptive bitrate technology to show sampled data.
- At least one API token permission is required.
- Free, unmetered, and unlimited DDoS protection since 2017.
- Proactive false positive detection available on Business and Enterprise plans.
- While the Brand Protection tool is in beta, all Cloudflare Enterprise customers
  have automatic access to Brand Protection.
- Ensure your user has one of the necessary roles to access Security Insights.
- Turnstile can be used independently without requiring other Cloudflare services.
- On Free plans, the leaked credentials detection is enabled by default, and no action
  is required.
- This guide focuses on configuring WAF for individual domains, known as zones.
- Rate limiting rules are evaluated in order, and some actions like Block will stop
  the evaluation of other rules.
- Rate limiting rules are not designed to allow a precise number of requests to reach
  the origin server.
- Classic Schema validation has been deprecated.
- Based on your Cloudflare plan type, the limit of API calls will vary per month.
- Schema validation 2.0 allows all corresponding configuration calls to be made via
  API.
- Cloudflare currently only accepts OpenAPI v3 schemas.
- Authentication Posture is available for all Enterprise subscriptions with API Shield.
- Service must be made for a widespread use of zones.
- Respecting robots.txt is voluntary.
- Volumetric Abuse Detection is only available for Enterprise customers.
- The short ID will not be visible until your account team has enabled this feature
  for you.
- Zones that have Enterprise Bot Management enabled will not see Bot Fight Mode or
  Super Bot Fight Mode under Security > Bots.
- If you find that Super Bot Fight Mode is causing problems with your application
  traffic, you may want to disable it.
- Customers can opt-in to optimize Super Bot Fight Mode for WordPress.
- The `cf_clearance` cookie cannot exceed the maximum size of 4096 bytes.
- This feature is only available on Pro plans and above.
- The HTTP DDoS Attack Protection managed ruleset is always enabled — you can only
  customize its behavior.
- 'DDoS reports and DDoS alerts are independent: DDoS reports will include information
  about any attacks for which you received DDoS alerts.'
- Cloudflare constantly updates managed rulesets to improve attack coverage.
- DDoS Protection system provides sensitivity adjustment.
- DDoS alerts are currently only available for DDoS attacks detected and mitigated
  by the DDoS managed rulesets.
- Rule Preview is only available to customers on an Enterprise plan.
- Cloudflare Firewall Rules has been deprecated. Cloudflare has moved existing firewall
  rules to WAF custom rules.
- Available as a paid add-on for customers on an Enterprise plan.
- This API is authenticated via mTLS, so that only a Log owner can publish new epochs.
- Open Port Scanning feature is currently in closed beta.
- 'At least one of the following token permissions is required: Page Shield, Domain
  Page Shield, Zone Settings Write'
- Cloudflare does not guarantee the category change will be approved.
- Customers enabling client-side rendering must validate their hostnames by looking
  at the hostname field in the Siteverify response.
- Wildcards are not supported. Specify each hostname you want Turnstile to work on.
- Tokens can expire after 5 minutes (300 seconds) and are single-use.
- Turnstile supports auto (default), which uses the visitor's browser language if
  it is supported.
- Always validate the Turnstile token on the server-side before checking credentials.
- Use environment variables to store sensitive information like your Turnstile secret
  key.
- Tokens can only be redeemed once. Even valid tokens will return `success:false`
  if they are reused.
- Security Events may use sampled data to improve performance.
- Requires setup of connected app in Cloudflare
- Make sure to revert the Turnstile SITE_KEY back to its original value after testing
- Ensure you have a valid sitekey and secret key from Cloudflare.
- The Turnstile widget must be rendered properly for verification.
- This week's update focuses on a wide range of enterprise software, from network
  infrastructure and security platforms to content management systems and development
  frameworks.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Significant vulnerabilities affecting key infrastructure and enterprise content
  management platforms.
- Critical attack vectors that can lead to full server compromise.
- Customers can now effectively manage incoming traffic identified as originating
  from VPN IPs.
- Customers with compliance restrictions can now ensure compliance with local laws
  and regulations.
- Customers with CDN restrictions can use the improved VPN Managed List to prevent
  unauthorized access from users attempting to bypass geographical restrictions.
- Fixed an issue with pagination in Security Events' sampled logs where some pages
  were missing data.
- Removed the total count from the events log as these are only sampled logs.
- Switched to a new, more responsive table in Security Analytics and Security Events.
- Fixed an issue causing score mismatches between the global WAF attack score and
  subscores.
- WAF attack score now automatically detects and decodes Base64 and JavaScript (Unicode
  escape sequences) in HTTP requests.
- For preview WAF updates, refer to the historical changelog.
- Changes to WAF managed rulesets done in 2018 and 2019.
- This rule is not enabled by default as it blocked requests across sites for specific
  authentication middleware.
- Improve SQLi protection
- Reduce WAF false positives for the Gutenberg WordPress editor
- Block requests with null bytes
- Improved SQLi detection
- XSS reflection with JavaScript events
- Changes to WAF managed rulesets done in 2021.
- Changes to WAF managed rulesets done in 2022.
- Invalid token - reject submission
- Feature available on Pro plans and above.
- Only users with the Super Administrator role can configure payload logging and decrypt
  payloads in the Cloudflare dashboard.
- Exposed credentials checks in custom rules are only available via API and require
  account-level WAF, which is available to Enterprise customers with a paid add-on.
- This feature requires an Enterprise plan with a paid add-on.
- To control the rate of actions performed by automated sources, consider use rate
  limiting rules together with Bot Management.
- Rate limiting counting can be request based or complexity based.
- Counters are not shared across data centers.
- 'The WAF provides two mechanisms for exposed credentials check: Managed Ruleset
  and custom rules.'
- Browser Integrity Check is enabled by default.
- The Request rate analysis tab is only available to Enterprise customers.
- Block by country is only available on the Enterprise plan.
- Cloudflare supports use of fail2ban to block IPs on your server.
- The 'matches' operator requires a Cloudflare Business or Enterprise plan.
- Requests are parsed if they are targeting a path ending in '/graphql'.
- Fetches items in a list (all items, by default).
- Items are sorted in ascending order.
- API Shield mTLS uses client certificates issued by a Cloudflare-managed CA by default.
- Check for revoked client certificates using the Expression Builder.
- Advanced TCP and DNS Protection systems are automatically enabled in Monitor mode
  with the default thresholds for new Magic Transit customers.
- Previously, only a subset of rules were exposed publicly.
- In rare situations, these rules can cause false positives.
- You can configure the managed ruleset in the Cloudflare dashboard or define overrides
  via Rulesets API.
- To create a firewall rule you need a filter identifier (`id`).
- PUT does not update the filter specified.
- The Firewall Rules API endpoints require a value for <ZONE_ID>.
- API Shield empowers users to use Cloudflare as an API Gateway with robust security
  features.
- The DDoS Attack Protection managed rulesets provided by Cloudflare are enabled by
  default on zones onboarded to Cloudflare, IP applications onboarded to Spectrum,
  and IP Prefixes onboarded to Magic Transit.
- Enterprise customers with a paid add-on have access to additional classification
  mechanisms based on threat feeds to determine if a script, or a connection made
  by a script, is malicious.
- Policies define the resources allowed on your applications through Content Security
  Policy (CSP) directives.
- Some customers may not have access to reports from the past few months due to limitations
  in the reporting solution.
- Brand Protection tool is in beta and available to all Cloudflare Enterprise customers.
- API calls limits vary per month based on Cloudflare plan type.
- Tokens expire after 300 seconds (5 minutes). Each token can only be validated once.
- The Cloudflare Managed Ruleset protects against Common Vulnerabilities and Exposures
  (CVEs) and known attack vectors.
- The Cloudflare OWASP Core Ruleset is prone to false positives.
- Enterprise customers can specify a custom mitigation timeout period via API.
- Enterprise customers must have application security on their contract to get access
  to rate limiting rules.
- Cloudflare provides pre-configured managed rulesets that protect against web application
  exploits.
- Rate limiting rules allow you to define rate limits for requests matching an expression.
- API Discovery is only available for Enterprise customers.
- Authentication Posture can only apply when customers accurately set up session identifiers
  in API Shield.
- BOLA attack detection is available in a closed beta.
- While API Shield is not required to use mTLS, many teams may use mTLS to protect
  their APIs.
- Schema validation supports OpenAPI Version 3.0.x schemas. OpenAPI 3.1 is not supported
  yet.
- Schema validation is available for all customers.
- Sequence Analytics is available for all API Shield customers.
- Session identifiers should uniquely identify API clients.
- API Shield does not populate metrics data when using Cloudflare Workers.
- Detection IDs are static rules used to detect predictable bot behavior with no overlap
  with human traffic.
- Sequence rules is currently in private beta.
- Bot tags are only available to Enterprise customers who have purchased Bot Management.
- Currently, bot tags are only available in log fields.
- Cloudflare only supports HTTPS requests since our cookies set the Secure attribute.
- Bot alerts inform you when Cloudflare detects spikes in your traffic with any characteristics
  related to bot activity.
- The cf_clearance cookie cannot exceed the maximum size of 4096 bytes.
- Cloudflare Challenges are designed to be compatible with any desktop and mobile
  browser.
- Internet Explorer is no longer supported.
- Cloudflare uses a set of dynamic rules that scan for attack patterns.
- Once generated, the fingerprint is propagated as a mitigation rule to the most optimal
  location on the Cloudflare global network.
- Cloudflare recommends not to use a third-party CDN in front of Cloudflare.
- Certain actions or sensitivity levels may not be available to all Cloudflare plans.
- Users in Free and Pro plans only have access to script monitoring.
- Malicious resource alerts will only include resources with an Active status.
- This feature is available as a paid add-on for customers on an Enterprise plan.
- Cloudflare Firewall Rules has been deprecated. Existing rules have been moved to
  WAF custom rules.
- The Auditor is designed to sign epoch information.
- URL normalization is recommended for stronger security posture.
- A secret name cannot contain spaces.
- The Open Port Scanner will run from a predetermined set of IPs.
- Requires API token with appropriate permissions for access.
- Requires API token with Page Shield permissions to access.
- API token required for access to the API.
- Ephemeral IDs are available to Enterprise Bot Management customers with the Enterprise
  Turnstile add-on or standalone Enterprise Turnstile customers.
- Mandatory server-side validation is required to ensure token security.
- Tokens expire after 300 seconds (5 minutes) and are single-use.
- Uses Turnstile for validation before payment processing.
- Ensure that you verify the Turnstile token after the user has filled out the form
  and selected submit.
- When the user submits the form, send both the form data and the Turnstile token
  to your server.
- Security Analytics uses sampled data by default.
- Raw logs are available under certain conditions.
- Test credentials should only be used in test environments.
- Production credentials must be protected.
- This is a New Detection
- Due to changes in the API implementation, the order of list items in an IP list
  obtained via API or Terraform may change.
- Improve SQLi detection
- Improve XSS detection and reduce false positives
- Some objects may return nulls in deeply nested fields
- Some rules have specific actions that may not be applicable if the default action
  is changed.
- Cloudflare does not store, log, or retain plaintext end-user passwords when performing
  leaked credential checks.
- This feature is available to customers on an Enterprise plan with a paid add-on.
- Some managed rulesets may not allow custom configuration, depending on your Cloudflare
  plan.
- Payload logging is especially useful when diagnosing the behavior of WAF rules.
- The rule defines a limit of 10 downloads in 10 minutes for every file under `https://api.store.com/files/*`.
- If you use the Header value of characteristic in an API request, you must enter
  the header name in lower case.
- If the rule expression includes custom lists, you must enable the Also apply rate
  limiting to cached assets parameter.
- Request rate analysis tab is only available to Enterprise customers.
- Advanced Rate Limiting requires additional configuration
- This feature, when turned on, automatically rewrites URLs to external JavaScript
  libraries to point to Cloudflare-hosted libraries instead.
- Zone Lockdown is only available in the new security dashboard if you have configured
  at least one zone lockdown rule.
- A zone may have up to four token configurations.
- Cloudflare recommends rotating keys periodically.
- Ensure that the JWKs URL returns keys in the expected format.
- Prefixes in the allowlist will be vulnerable to IP spoofing attacks.
- This rule can cause rare false positives with custom apps sending invalid headers.
- Previously, only a subset of rules were exposed publicly. In rare situations, these
  rules can cause false positives. When this happens, you can customize their behavior
  using overrides.
- Cloudflare now shows all rules in the dashboard, including these high-confidence
  rules. This means that requests matching these rules will now have the correct rule
  identifier. The newly published rules are read-only and you cannot disable them.
- Filters API endpoints require a value for <ZONE_ID>.
- A Cloudflare API token with 'Account:Turnstile:Edit' permissions is required.
- Deployed custom rulesets will only apply to incoming traffic of Enterprise domains.
- The expression of your execute rule must end with 'and cf.zone.plan eq "ENT"' or
  else the API operation will fail.
- Requires an Enterprise plan with a paid add-on.
- 'At least one of the following token permissions is required: Zone WAF Write, Account
  WAF Write.'
- Access to Bot Management requires a Cloudflare Enterprise plan with Bot Management
  enabled.
- WAF content scanning is available to customers on an Enterprise plan with a paid
  add-on.
- 'At least one of the following token permissions is required: Zone WAF Write, Account
  WAF Write, Zone WAF Read, Account WAF Read.'
- Cloudflare recommends using leaked credentials detection instead of Exposed Credentials
  Check.
- Cloudflare recommends that you use leaked credentials detection instead of Cloudflare
  Exposed Credentials Check.
- Skip rule applies only to rules listed after it.
- To get the IDs of existing WAF managed rulesets, refer to WAF Managed Rules or use
  the List account rulesets operation.
- Exceptions only apply to rules executing a managed ruleset listed after them.
- Managed rules identify and remove suspicious activity for HTTP GET and POST requests
- Changes to WAF managed rules take about 30 seconds to update globally
- Cloudflare is upgrading all rate limiting rules to the new version of rate limiting
  rules.
- The upgrade is irreversible — once you upgrade to the new WAF Managed Rules, you
  cannot go back to the previous version.
- To disable Email Obfuscation, send a PATCH request with email_obfuscation as the
  setting name and the value parameter set to 'off'.
- To enable Hotlink Protection, send a PATCH request with hotlink_protection as the
  setting name and the value parameter set to 'on'.
- The override only applies to the fingerprint and not the detection.
- The APIs and Terraform resources related to the previous version of WAF managed
  rules are deprecated.
- The `scope` field value must be one of `global`, `region`, or `datacenter`.
- The `mode` value must be one of `enabled`, `disabled`, or `monitoring`.
- The `profile_sensitivity` field value must be one of `low`, `medium`, `high`, or
  `very_high`.
- The `rate_sensitivity` and `burst_sensitivity` field values must be one of `low`,
  `medium`, or `high`.
- The upgrade process can take up to an hour.
- Enterprise customers can enter validation mode before finishing the upgrade.
errors:
- '401 Unauthorized: Recheck API token validity or permissions'
- '403 Forbidden: Ensure the user has access to the requested resource'
- '400 Bad Request: Check the request syntax and parameters'
- 'Invalid value for `samesite`: Cannot set `secure` to `Never` if `samesite` is `None`.'
- 'HTTP 200: Success with empty result'
- '401 Unauthorized: Invalid API token'
- '401 Unauthorized: Recheck API Token permissions'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your API token permissions.'
- '403 Forbidden: You do not have access to this resource.'
- '404 Not Found: The requested resource does not exist.'
- 'HTTP 200: Empty list in result property indicates no detected offenses.'
- 'Required API token permissions: At least one of DDoS Botnet Feed Write or DDoS
  Botnet Feed Read.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API token.'
- '403 Forbidden: Check account access rights'
- '404 Not Found: Verify endpoint path and parameters'
- 'HTTP 400 Bad Request: Namespace is disabled and read-only.'
- '401 Unauthorized: Recheck permissions or token validity'
- 'Unauthorized: Check your API token permissions'
- '400 Bad Request: Validate request parameters and body format'
- '401 Unauthorized: Recheck API token or permissions'
- 'Unknown error: When an unknown error occurs during the challenge.'
- 'Interaction timed out: When the visitor is presented with a checkbox but does not
  interact with it for an extended period.'
- 'Challenge timed out: When the verification was completed but no further action
  has been taken.'
- internal-error
- 'missing-input-secret: Secret parameter not provided'
- 'invalid-input-secret: Secret key is invalid or expired'
- 'missing-input-response: Response parameter was not provided'
- 'invalid-input-response: Token is invalid, malformed, or expired'
- 'bad-request: Request is malformed'
- 'timeout-or-duplicate: Token has already been validated'
- 'internal-error: Internal error occurred'
- Tokens expire after five minutes. Validation must occur within this window to be
  effective.
- '401 Unauthorized: Recheck Turnstile token or key'
- '400: Invalid request - Check the parameters sent in the request.'
- '401: Unauthorized - Check your secret key.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Log - Block
- N/A - Block
- '100105: REFERER - PHP serialization in Referer header'
- '100152: Joomla[CVE-2019-10945] - Block'
- '100144: NoSQL Injection attack (Expression vector) - Log'
- '100143: NoSQL Injection attack (comparison vector) - Log'
- '100148: Improve XSS inline detection - Log'
- '100135A: Improve XSS detection - Block'
- '100135B: Improve XSS detection - Block'
- '100136A: Improve XSS detection - Block'
- '100136B: Improve XSS detection - Block'
- '100097G: Improve SQLi blocking - Log'
- 'WP0034: WordPress zero day XSS - Block'
- '100010A: Improve SQLi detection - Block'
- 'PHP100013: Blocks PHP CGI attack by default - Log'
- '100150: Block[CVE-2019-10842] - Block'
- '100142: NoSQL Injection attack (array vector) - Log'
- '100135A: Improve XSS event detection - N/A'
- '100135B: Improve XSS event detection - N/A'
- '100135C: Improve XSS event detection - N/A'
- '100030SVG: Improve XSS event detection - N/A'
- '100021C: Improve XSS event detection - N/A'
- '100021CE: Improve XSS event detection - N/A'
- '100021CB: Improve XSS event detection - N/A'
- '100021CD: Improve XSS event detection - N/A'
- '100021CD2: Improve XSS event detection - N/A'
- '100021CD3: Improve XSS event detection - N/A'
- 'D0020BETA: Improve blocking of SA-CORE-2019-003 - Log'
- 'D0017: Improve blocking of SA-CORE-2019-003 - Log'
- 'D0017: Improve blocking of SA-CORE-2019-003 - Deleted'
- 'D0018: Improve blocking of SA-CORE-2019-003 - Deleted'
- 'D0019: Improve blocking of SA-CORE-2019-003 - Deleted'
- 'D0021: Improve blocking of SA-CORE-2019-003 - Deleted'
- '100127: Improve blocking of SA-CORE-2019-003 - Deleted'
- '100128: Improve blocking of SA-CORE-2019-003 - Deleted'
- '100135A: Improve XSS detection using JavaScript URI - Block'
- '100135B: Improve XSS detection using JavaScript URI - Log'
- '100135C: Improve XSS detection using JavaScript URI - Block'
- '100123A: Improve invalid UTF-8 detection - Block'
- '100123B: Improve invalid UTF-8 detection - Log'
- '100130: Executable file upload attempt - Log'
- '100136A: Improve XSS detection using JavaScript events - Block'
- '100136B: Improve XSS detection using JavaScript events - Block'
- '100136C: Improve XSS detection using JavaScript events - Block'
- '100120BETA2: Reduce 100120''s false positives - Log'
- 'WP0032BETA: Reduce false positives for WP0032 - Log'
- '100122ARGS: Block use of stream wrappers in all arguments - Log'
- '100132: Protection for Apache Tika Command Injection[CVE-2018-1335] - Log'
- 'PHP100006: Improve PHP webshell attempt detection.'
- 'Access Denied: Requests from those IP addresses will receive an ''Access Denied''
  response.'
- Invalid token - reject submission
- 'Filter parsing error: couldn''t parse address in network: invalid IP address syntax'
- 'false positive: legitimate traffic mistakenly identified as an attack'
- 'HTTP 200: Success but result is empty or null.'
- '401 Unauthorized: Ensure proper roles are assigned for access.'
- '401 Unauthorized: Check API token permissions'
- '429 Too Many Requests: Rate limit exceeded'
- 'Unauthorized: Check authentication configurations.'
- '400 Bad Request: Check your request format and parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Ensure the endpoint you''re trying to access exists.'
- 'Invalid request: Check your request parameters'
- 'Unauthorized: Ensure your API key is correct'
- '401 Unauthorized: Recheck API key or email'
- '400 Bad Request: Check request parameters and payload'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Verify the endpoint and resource ID'
- 'internal-error: Indicates a server-side validation error.'
- '401 Unauthorized: Recheck Turnstile token or response.'
- '400 Bad Request: Token verification failed'
- '500 Internal Server Error: Error verifying Turnstile token'
- '401 Unauthorized: Token verification failed'
- 'INVALID_SECRET: The secret key is invalid'
- '100***: Initialization Problems: There was a problem initializing Turnstile before
  a challenge could be started.'
- '102***: Invalid Parameters: The visitor sent an invalid parameter as part of the
  challenge towards Turnstile.'
- '110100: Invalid sitekey: Turnstile was invoked with an invalid sitekey or a sitekey
  that is no longer active.'
- '110200: Unknown domain: Domain not allowed.'
- '404 Not Found: The entry point ruleset does not exist.'
- '200 OK: Ruleset definition received.'
- '404 Not Found: Entry point ruleset does not exist.'
- '200 OK: Ruleset definition retrieved successfully.'
- '401 Unauthorized: Recheck API token permissions.'
- '401 Unauthorized: Recheck API token permissions'
- '401 Unauthorized: Check your API token.'
- '200 OK: Entry point ruleset exists.'
- 'HTTP 429: Too many requests'
- 'HTTP 429: Request rate limit exceeded'
- '403 Forbidden: Check your authentication credentials'
- '404 Not Found: The requested resource could not be found'
- The number of firewall rules to migrate exceeds 200.
- The length of a firewall rule expression is longer than 4 KB.
auth_info:
  mentioned_objects:
  - Page Shield
  - Domain Page Shield Read
  - Domain Page Shield
  - Page Shield Read
  - Zone Settings Write
  - Zone Settings Read
  - Account ID
  - Cloudflare API Token
  - Admin
  - Super Administrator
  - Trust and Safety
  - Authorization
  - JWT
  - API Discovery
  - API Token Permissions
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.cloudflare.com/client/v4/graphql
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
