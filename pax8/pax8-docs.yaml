resources:
- name: companies
  endpoint:
    path: /v1/companies
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: provision-details
  endpoint:
    path: /v1/products/{productId}/provision-details
    method: GET
- name: dependencies
  endpoint:
    path: /v1/products/{productId}/dependencies
    method: GET
- name: pricing
  endpoint:
    path: /v1/products/{productId}/pricing
    method: GET
- name: orders
  endpoint:
    path: /v1/orders
    method: POST
- name: companies
  endpoint:
    path: /reference/companies
    method: GET
- name: products
  endpoint:
    path: /reference/findallproducts
    method: GET
- name: orders
  endpoint:
    path: /reference/findorders
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/findsubscriptions
    method: GET
- name: contacts
  endpoint:
    path: /reference/get_companies-companyid-contacts
    method: GET
- name: invoices
  endpoint:
    path: /reference/findpartnerinvoices
    method: GET
- name: usage_summaries
  endpoint:
    path: /reference/findsubscriptionusagesummaries
    method: GET
- name: partner_data
  endpoint:
    path: /partner/data
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: vendorSubscriptionId
- name: companies
  endpoint:
    path: /v1/companies/{companyId}
    method: GET
    data_selector: externalId
- name: products
  endpoint:
    path: /v1/products/{productId}
    method: GET
    data_selector: name
- name: create_order
  endpoint:
    path: /reference/createorder
    method: POST
- name: cancel_subscription
  endpoint:
    path: /reference/delete_subscriptions-subscriptionid
    method: DELETE
- name: update_subscription_increase
  endpoint:
    path: /reference/updatesubscription
    method: PATCH
- name: update_subscription_decrease
  endpoint:
    path: /reference/updatesubscription
    method: PATCH
- name: usage_summaries
  endpoint:
    path: /reference/findsubscriptionusagesummaries
    method: GET
- name: usage_lines
  endpoint:
    path: /reference/findusagelines
    method: GET
- name: invoice_items
  endpoint:
    path: /reference/findpartnerinvoiceitems
    method: GET
- name: topic_definitions
  endpoint:
    path: /webhooks/topic-definitions
    method: GET
    data_selector: content
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: ''
    params: {}
- name: update_webhook
  endpoint:
    path: /webhooks/{id}/configuration
    method: POST
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: allowlisted_ip_addresses
  endpoint:
    path: /allowlisted-ip-addresses
    method: GET
    data_selector: ip_addresses
    params: {}
- name: mcp
  endpoint:
    path: /mcp
    method: POST
    data_selector: ''
    params: {}
- name: mcp_server
  endpoint:
    path: /v1/mcp
    method: GET
- name: provision_request
  endpoint:
    path: /provision-requests
    method: POST
    data_selector: request
    params: {}
- name: provision_requests
  endpoint:
    path: /provision-requests
    method: GET
- name: provision_request
  endpoint:
    path: v2/provision-requests/{id}
    method: GET
- name: unfulfilled_provision_requests
  endpoint:
    path: /provision-requests/unfulfilled
    method: GET
- name: List All Provision Details for a Provision Request
  endpoint:
    path: /provision-requests/{provisionRequestId}/details
    method: GET
- name: Get One Detail for a Provision Request
  endpoint:
    path: /provision-requests/{provisionRequestId}/details/{detailId}
    method: GET
- name: Get Latest Detail for an Provision Request
  endpoint:
    path: /provision-requests/{provisionRequestId}/details/latest
    method: GET
- name: provision_attempts
  endpoint:
    path: /provision-requests/{provisionRequestId}/attempts
    method: GET
    data_selector: attempts
    params: {}
- name: create_provision_attempt
  endpoint:
    path: /provision-requests/{provisionRequestId}/attempts
    method: POST
    data_selector: attempt
    params: {}
- name: provision_result
  endpoint:
    path: /provision-requests/{provisionRequestId}/results
    method: GET
    data_selector: results
- name: create_provision_result
  endpoint:
    path: /provision-requests/{provisionRequestId}/results
    method: POST
    data_selector: result
- name: provisioners
  endpoint:
    path: /provisioners
    method: GET
    data_selector: Provisioners
- name: provisioner_by_id
  endpoint:
    path: /provisioners/{provisionerId}
    method: GET
    data_selector: Provisioner
- name: webhook_configurations
  endpoint:
    path: /provisioners/{provisionerId}/webhooks
    method: POST
    data_selector: sharedSecret
    params: {}
- name: get_all_webhooks
  endpoint:
    path: /provisioners/{provisionerId}/webhooks
    method: GET
    data_selector: content
    params: {}
- name: get_one_webhook
  endpoint:
    path: /provisioners/{provisionerId}/webhooks/{webhookId}
    method: GET
    data_selector: sharedSecret
    params: {}
- name: get_latest_webhook
  endpoint:
    path: /provisioners/{provisionerId}/webhooks/latest
    method: GET
    data_selector: sharedSecret
    params: {}
- name: order_event
  endpoint:
    path: /provision-simulations/order-events
    method: POST
    data_selector: provisionRequest
    params: {}
- name: provision_simulations
  endpoint:
    path: /v2/provision-simulations/order-events
    method: POST
    data_selector: provisionRequest
    params: {}
- name: provision_simulations
  endpoint:
    path: /provision-simulations/order-events
    method: POST
    data_selector: provisionRequest
- name: provision_simulation_order_events
  endpoint:
    path: /provision-simulations/order-events
    method: POST
    data_selector: provisionRequest
    params: {}
- name: usage_lines
  endpoint:
    path: /usage/lines
    method: GET
    params:
      subscriptionId: '{subscriptionId}'
      billingPeriod: '{billingPeriod}'
      summaryKey: '{summaryKey}'
- name: save_usage_lines
  endpoint:
    path: /usage/lines
    method: POST
    params:
      subscriptionId: '{subscriptionId}'
      billingPeriod: '{billingPeriod}'
- name: aggregate_usage_lines
  endpoint:
    path: /v2/usage/aggregate-lines
    method: POST
    data_selector: records
    params: {}
- name: usage_lines
  endpoint:
    path: /usage/lines
    method: POST
    data_selector: records
    params:
      overwriteSameDayUsage: 'true'
- name: aggregate_usage_lines
  endpoint:
    path: /usage/aggregate-lines
    method: POST
    data_selector: records
    params:
      overwriteSameDayUsage: 'true'
notes:
- CORS is a security feature implemented by web browsers to control how web pages
  in one domain can request and interact with resources from another domain.
- The Integrations Hub is currently only accessible to Partner Admin and Primary Partner
  Admin roles.
- Pax8 follows the standard OAuth2 Authorization Code flow with a few specific requirements.
- The mandatory audience parameter must be included in the authorization request.
- Mandatory audience parameter is required.
- Access token is valid for 24 hours.
- Jumpstart your Pax8 integrations with our collection of starter workflows.
- Future-dated decreases are possible via the Pax8 platform interface but not the
  API.
- Pax8 partners must link Pax8 companies to vendor entities for correct billing.
- Page numbers typically start at 0.
- Totals like size, totalElements, and totalPages usually start at 1.
- Make sure to use an audience of https://api.pax8.com when getting a token.
- Our webhooks are meant to be used as a notification system and not a full state
  transfer.
- Webhooks are marked as failed if a response is not received after 10 seconds
- Webhooks are sent as a POST call with a JSON body
- Webhook payloads contain only basic event information (event type, relevant IDs,
  timestamp)
- Webhooks do not provide complete entity data or full context
- The primary purpose of this page is to provide a comprehensive list of outgoing
  IP addresses that vendors and partners can use to configure their allow-lists.
- Remember to treat your MCP server token like a password and do not share it publicly.
- Node.js v18+ is required to access the MCP Server.
- Ensure your MCP token is generated and properly configured in the cursor_desktop_config.json
  file.
- Ensure Node.js v18 or higher is properly installed
- Verify that your authentication token was generated successfully
- Check that the `claude_desktop_config.json` file was saved correctly
- Restart Claude Desktop after making configuration changes
- Ensure your Pax8 MCP token was generated successfully and copied correctly
- Verify the openapi.json file is properly formatted and contains all required fields
- Replace 'YOUR-MCP-TOKEN-HERE' with the MCP token generated.
- Utilize tools like GitHub Copilot, OpenAI's ChatGPT, and other GenAI platforms for
  integration.
- Pax8 does not have a sandbox environment where you can log in and test this integration,
  nor can you experience the full order-to-cash process from a partner's perspective.
- Pax8 uses Provision Notification webhooks to notify Provisioners of new Provisioning
  activity.
- It's important to note that if any of the values above would be null, the API will
  omit them from the notification body completely.
- Pax8 employs a retry mechanism for webhook delivery
- A ProvisionRequest and ProvisionDetail may have many associated ProvisionAttempts.
- A ProvisionResult cannot be posted for a ProvisionAttempt that already has an associated
  ProvisionResult.
- Pax8 does not accept ProvisionResults for ProvisionAttempts that are not acknowledged.
- Webhook Configurations are immutable. Only the latest configuration's data will
  be used for new Provision Notifications.
- Values for the header field must comply with HTTP header specifications.
- Test data only persists for 7 days.
- Live data is not visible when using simulation credentials.
- Use of Bearer token required in Authorization header.
- The endpoint features a 'works out of the box' philosophy that should let you invoke
  a simulated with random values very quickly.
- 'Usage line posting is currently synchronous, meaning: The client waits for the
  request to complete with an HTTP 200 status code.'
- Send no more than fifty (50) usage lines in a single request payload.
- billingPeriod is a year-month, taking the format yyyy-MM.
- Both summaryKey and summaryDisplayName have a 255 character limit.
- The billingPeriod is a year-month, taking the format yyyy-MM.
- Default behavior for same-day usage is to set overwriteSameDayUsage to true.
- Pax8 will create billable charges for Partners based on the most recent totals for
  a given summaryKey on a given Subscription in a given Billing Period.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429: Rate limit exceeded'
- '400 Bad Request: The request was unacceptable and therefore couldn''t be processed
  by API due to bad syntax (wrong data format or missing a required parameter).'
- '401 Unauthorized: No valid API key provided'
- '403 Forbidden: The API key doesn''t have permissions to perform the request'
- '404 Not Found: The requested resource doesn''t exist'
- '422 Unprocessable Entity: The request syntax was correct but an exception was caught
  in processing'
- '429 Too Many Requests: Too many requests hit the API quickly'
- '50x Server Errors: Something went wrong on Pax8 server (These should be rare)'
- 'Invalid URL: The `url` field is missing scheme or is not https.'
- 'AuthorizationDeniedException: The token lacks the required `webhook_*` scope.'
- 'Token Issues: Ensure your Pax8 MCP token was generated successfully and copied
  correctly'
- 'OpenAPI Import: Verify the openapi.json file is properly formatted and contains
  all required fields'
- 'Connector Creation: Check that you have appropriate permissions in Power Apps to
  create custom connectors'
- 'Connection Authentication: Confirm the MCP token is pasted correctly without extra
  spaces or characters'
- 'Agent Integration: Ensure the tool has been properly added to your agent after
  connection creation'
- 'Response Issues: If the agent doesn''t respond as expected, verify the connection
  is active and test with simpler prompts'
- 'Pax8 only accepts the following HTTP status codes to acknowledge a Provision Notification:
  200, 201, 202.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the provisionRequestId is valid.'
- '400 Bad Request: Check if the ProvisionAttemptId is valid or if a result already
  exists.'
- '500 Internal Server Error: Retry the request after a brief wait.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - OAuth2 Authorization Code Grant
  - client_id
  - client_secret
client:
  base_url: https://devx.pax8.com
  auth:
    type: oauth2
source_metadata: null
