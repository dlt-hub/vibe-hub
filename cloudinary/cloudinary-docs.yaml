resources:
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
- name: image_upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: resources
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: resources
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/videos
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /video_transformations
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image/upload
    method: GET
- name: video
  endpoint:
    path: /video/upload
    method: GET
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /e_grayscale/c_scale,w_500/q_auto/f_auto/cld-sample-4.jpg
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /video
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: resize_transformations
  endpoint:
    path: /image/upload
    method: GET
    data_selector: results
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: results
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: results
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/video/upload
    method: POST
    data_selector: data
    params: {}
- name: image_transformations
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /video/transformation
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
    params: {}
- name: image
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /resources/video
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: upload_widget
  endpoint:
    path: /upload
    method: POST
    data_selector: result
    params: {}
- name: product_gallery
  endpoint:
    path: /product_gallery
    method: GET
    data_selector: products
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_transformation
  endpoint:
    path: /image/transformation
    method: POST
    data_selector: transformed_image
    params: {}
- name: video_transformation
  endpoint:
    path: /video/transformation
    method: POST
    data_selector: transformed_video
    params: {}
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /v1/upload
    method: POST
    data_selector: response
    params: {}
- name: video_upload
  endpoint:
    path: /v1/video/upload
    method: POST
    data_selector: response
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/transforms
    method: GET
    data_selector: transforms
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/transforms
    method: GET
    data_selector: transforms
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: admin
  endpoint:
    path: /admin
    method: GET
- name: provisioning
  endpoint:
    path: /provisioning
    method: POST
- name: url
  endpoint:
    path: /image/upload
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: resource
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: auto_upload
  endpoint:
    path: /auto_upload
    method: GET
    data_selector: assets
- name: image_upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: response
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: response
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: asset_management
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: asset_management
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
- name: video
  endpoint:
    path: /v1/videos
    method: GET
- name: upload
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: secure_url
    params: {}
- name: transform
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/transform
    method: GET
    data_selector: transformed_url
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /services/image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /services/video
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: response
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: response
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: programmatic_image_creation
  endpoint:
    path: /create_assets
    method: POST
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: resource
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: video_transformation
  endpoint:
    path: /services/data/vXX.X/sobjects/VideoTransformation
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: video_player
  endpoint:
    path: /video/player
    method: GET
    data_selector: videoPlayer
    params: {}
- name: adaptive_bitrate_streaming
  endpoint:
    path: /video/adaptive_bitrate
    method: GET
    data_selector: adaptiveStreaming
    params: {}
- name: video_transcription
  endpoint:
    path: /video/transcription
    method: GET
    data_selector: transcription
    params: {}
- name: video_analytics
  endpoint:
    path: /video/analytics
    method: GET
    data_selector: analytics
    params: {}
- name: video_transformations
  endpoint:
    path: /video/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_live_streaming
  endpoint:
    path: /video/live_streaming
    method: GET
    data_selector: liveStreaming
    params: {}
- name: videos
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: cloud_hosted_player
  endpoint:
    path: /embed/?cloud_name=demo&public_id=elephants
    method: GET
    data_selector: embed_code
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: adaptive_bitrate_streaming
  endpoint:
    path: /sp_auto/docs/waterfall.m3u8
    method: GET
    data_selector: streaming
    params: {}
- name: maximum_resolution
  endpoint:
    path: /sp_auto:maxres_360p/docs/waterfall.mpd
    method: GET
    data_selector: resolution
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/demo/video/upload
    method: POST
    data_selector: eager
    params:
      eager: sp_full_hd,f_m3u8
      public_id: handshake
      eager_notification_url: https://mysite.example.com/notify_endpoint
      eager_async: 'true'
- name: subtitles
  endpoint:
    path: /subtitles
    method: GET
    data_selector: subtitles
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: asset_id
    params: {}
- name: video_explicit
  endpoint:
    path: /video/explicit
    method: POST
    data_selector: asset_id
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: audio
  endpoint:
    path: /v1/audios
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: results
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: results
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: video_views
  endpoint:
    path: /views
    method: GET
    data_selector: data
- name: expressions
  endpoint:
    path: /expressions
    method: GET
    data_selector: results
- name: fields
  endpoint:
    path: /fields
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators
    method: GET
    data_selector: results
- name: custom_cloudinary_video_player_analytics_providers
  endpoint:
    path: /custom_cloudinary_video_player_analytics_providers
    method: GET
    data_selector: results
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: live_stream_outputs
  endpoint:
    path: /live_streams/{liveStreamId}/outputs
    method: POST
    data_selector: outputs
- name: update_live_stream_outputs
  endpoint:
    path: /live_streams/{liveStreamId}/outputs/{liveStreamOutputId}
    method: PATCH
    data_selector: outputs
- name: live_streams
  endpoint:
    path: /live_streams
    method: POST
    data_selector: data
    params:
      input: type=rtmp
- name: activate_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}/activate
    method: POST
    data_selector: data
- name: idle_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}/idle
    method: POST
- name: delete_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: image_transformation
  endpoint:
    path: /services/data/vXX.X/sobjects/ImageTransformation
    method: GET
    data_selector: records
    params: {}
- name: video_transformation
  endpoint:
    path: /services/data/vXX.X/sobjects/VideoTransformation
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: upload
  endpoint:
    path: /v1_1/cld-docs/image/upload
    method: POST
    data_selector: file
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: result
- name: upload_image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: asset_id
    params: {}
- name: upload_video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: asset_id
    params: {}
- name: upload_raw
  endpoint:
    path: /raw/upload
    method: POST
    data_selector: asset_id
    params: {}
- name: upload
  endpoint:
    path: /v1_1/<cloud_name>/image/upload
    method: POST
    data_selector: upload_info
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
- name: delete_by_token
  endpoint:
    path: /delete_by_token
    method: POST
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: media
  endpoint:
    path: /media
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: update_assets
  endpoint:
    path: /v1/assets/{asset_id}
    method: PUT
    data_selector: updated
    params: {}
- name: delete_assets
  endpoint:
    path: /v1/assets/{asset_id}
    method: DELETE
    data_selector: deleted
    params: {}
- name: media
  endpoint:
    path: /resources/media
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: folders
  endpoint:
    path: /folders
    method: GET
    data_selector: folders
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: media
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: null
    params: {}
- name: explicit
  endpoint:
    path: /v1_1/demo/image/explicit
    method: POST
    data_selector: null
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: custom_metadata
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomMetadata
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/<your-cloud-name>/resources
    method: GET
    data_selector: resources
    params: {}
- name: tags
  endpoint:
    path: /image/upload/tags
    method: POST
    data_selector: tags
    params: {}
- name: context
  endpoint:
    path: /image/upload/context
    method: POST
    data_selector: context
    params: {}
- name: metadata_fields
  endpoint:
    path: /metadata_fields
    method: GET
    data_selector: fields
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: POST
    data_selector: metadata
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /resources/video/upload
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: asset_management
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: image_analysis
  endpoint:
    path: /image/analysis
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /resources/video
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: images
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: resource
    params: {}
- name: video
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/upload
    method: POST
    data_selector: resource
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: activity_reports
  endpoint:
    path: /activity/reports
    method: GET
    data_selector: reports
- name: dashboard
  endpoint:
    path: /pm/developer-dashboard
    method: GET
    data_selector: usage_data
    params: {}
- name: delivery_reports
  endpoint:
    path: /pm/developer-dashboard
    method: GET
    data_selector: delivery_reports
    params: {}
- name: error_reports
  endpoint:
    path: /pm/developer-dashboard
    method: GET
    data_selector: error_reports
    params: {}
- name: video_analytics
  endpoint:
    path: /pm/reports/video-player
    method: GET
    data_selector: video_analytics
    params: {}
- name: image_transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
    params: {}
- name: video_transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: image_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/transforms
    method: GET
    data_selector: transforms
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/transforms
    method: GET
    data_selector: transforms
    params: {}
- name: product_assets
  endpoint:
    path: /v1/products/assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: assets
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/auto/upload
    method: POST
    data_selector: results
    params: {}
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: null
    params: {}
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: auto_transcription
    params:
      translate:
      - fr-FR
      - es
      - de
- name: profile_picture
  endpoint:
    path: /image/upload/ar_3:4,c_fill,g_face,h_300/f_auto/q_auto/docs/profile-pic.jpg
    method: GET
    data_selector: records
- name: video_player
  endpoint:
    path: /video/upload/c_limit,h_400,w_300/so_1/v1/docs/dynamic_email_short.jpg
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: Amazon Image Moderation
  endpoint:
    path: /moderation
    method: POST
    data_selector: result
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: result
- name: watermark_detection
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: result.info.detection.object_detection
    params:
      detection: watermark-detection
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload_preset
  endpoint:
    path: /v1_1/{MY_CLOUD_NAME}/upload_presets
    method: POST
    data_selector: upload_presets
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: transformations
  endpoint:
    path: /v1/transformations
    method: GET
    data_selector: transformations
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/demo/video/upload
    method: POST
    data_selector: response
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: response
    params: {}
- name: visual_search
  endpoint:
    path: /v1_1/<cloud_name>/resources/visual_search
    method: GET
    data_selector: resources
    params: {}
- name: generative_remove
  endpoint:
    path: /image/upload/e_gen_remove:prompt_fork/docs/avocado-salad.jpg
    method: GET
    data_selector: image
- name: generative_replace
  endpoint:
    path: /image/upload/e_gen_replace:from_sunglasses;to_black sunglasses/docs/woman-sunglasses.jpg
    method: GET
    data_selector: image
- name: generative_restore
  endpoint:
    path: /image/upload/e_gen_restore/docs/freckles.png
    method: GET
    data_selector: image
- name: content_analysis_for_resizing_and_cropping
  endpoint:
    path: /video/upload/ar_3:4,c_fill,g_auto,h_300/docs/walking-woman.mp4
    method: GET
    data_selector: video
- name: content_analysis_for_enhancing_images
  endpoint:
    path: /image/upload/e_enhance/docs/bedroom.jpg
    method: GET
    data_selector: image
- name: background_removal
  endpoint:
    path: /image/upload/e_background_removal/docs/guitar.jpg
    method: GET
    data_selector: image
- name: drop_shadow
  endpoint:
    path: /image/upload/e_background_removal/e_dropshadow/docs/blue-car.png
    method: GET
    data_selector: image
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image/transformation
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video/transformation
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: Image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: Video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params:
      detection: adv_face
- name: update_face_attributes
  endpoint:
    path: /api/v2.0/update
    method: POST
    data_selector: result
    params:
      detection: adv_face
- name: show_resource_details
  endpoint:
    path: /api/v2.0/resource
    method: GET
    data_selector: result
    params: {}
- name: overlay_glasses
  endpoint:
    path: /image/upload/l_glasses/c_scale,fl_region_relative,w_1.5/fl_layer_apply,g_adv_eyes/coupled.jpg
    method: GET
    data_selector: records
    params: {}
- name: overlay_harlequinmask
  endpoint:
    path: /image/upload/c_scale,w_700/r_max/l_harlequinmask/c_scale,fl_region_relative,w_1.7/fl_layer_apply,g_adv_eyes/cloudinary_team.jpg
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_moderation
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: moderation
    params:
      moderation: aws_rek
- name: update_moderation
  endpoint:
    path: /api/v1/update
    method: POST
    data_selector: result
    params:
      moderation_status: rejected
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: video_moderation
  endpoint:
    path: /video/upload
    method: POST
    data_selector: moderation
    params:
      moderation: aws_rek_video
- name: resources_by_moderation
  endpoint:
    path: /resources/by_moderation
    method: GET
    data_selector: resources
- name: update_resource
  endpoint:
    path: /resources/update
    method: POST
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: info.categorization.aws_rek_tagging.data
    params:
      categorization: aws_rek_tagging
- name: image_transformations
  endpoint:
    path: /image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /video_transformations
    method: GET
    data_selector: records
- name: upload_image
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: tags
    params:
      categorization: aws_rek_tagging
      auto_tagging: '0.7'
- name: update_image
  endpoint:
    path: /v2/api
    method: POST
    data_selector: tags
    params:
      categorization: aws_rek_tagging
      auto_tagging: '0.9'
- name: upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: info.detection.aws_rek_face.data.celebrity_faces
- name: upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: tags
- name: update
  endpoint:
    path: /api/v2/resource
    method: POST
    data_selector: tags
- name: document_conversion
  endpoint:
    path: /document/convert
    method: POST
    data_selector: data
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /raw/upload
    method: POST
    data_selector: info
    params:
      raw_convert: aspose
      resource_type: raw
- name: update
  endpoint:
    path: /raw/update
    method: POST
    data_selector: info
    params:
      raw_convert: aspose
      resource_type: raw
- name: image_transformation
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: transformed_image
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: background_removal
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: result
    params:
      background_removal: cloudinary_ai
      notification_url: https://mysite.example.com/hooks
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
- name: object_aware_cropping
  endpoint:
    path: /object_aware_cropping
    method: POST
- name: automatic_image_tagging
  endpoint:
    path: /automatic_image_tagging
    method: POST
- name: image_quality_analysis
  endpoint:
    path: /image_quality_analysis
    method: POST
- name: watermark_detection
  endpoint:
    path: /watermark_detection
    method: POST
- name: ai_based_image_captioning
  endpoint:
    path: /ai_based_image_captioning
    method: POST
- name: object_aware_cropping
  endpoint:
    path: /object-aware-cropping
    method: GET
    data_selector: data
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: info
    params:
      detection: cld-fashion
- name: upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: info
    params:
      detection: watermark-detection
- name: update
  endpoint:
    path: /update_details_of_an_existing_resource
    method: POST
    data_selector: info
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: ai_vision_tagging
  endpoint:
    path: /v2/analysis/<CLOUD_NAME>/analyze/ai_vision_tagging
    method: POST
    data_selector: data
    params: {}
- name: ai_vision_moderation
  endpoint:
    path: /v2/analysis/<CLOUD_NAME>/analyze/ai_vision_moderation
    method: POST
    data_selector: data
    params: {}
- name: ai_vision_general
  endpoint:
    path: /v2/analysis/<CLOUD_NAME>/analyze/ai_vision_general
    method: POST
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: resources_by_moderation
  endpoint:
    path: /resources/image/moderations/duplicate/rejected
    method: GET
    data_selector: resources
- name: duplicate_image_detection
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: result
    params:
      moderation: duplicate:0.8
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: video_moderation
  endpoint:
    path: /video/upload
    method: POST
    data_selector: moderation
    params:
      moderation: google_video_moderation
      resource_type: video
- name: moderation_response
  endpoint:
    path: /video/upload
    method: POST
    data_selector: moderation_response
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: update_moderation
  endpoint:
    path: /api/v2/modearation
    method: PUT
    data_selector: result
    params:
      resource_type: video
      moderation_status: rejected
- name: images
  endpoint:
    path: /v1/resources/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/resources/videos
    method: GET
    data_selector: resources
    params: {}
- name: subtitles
  endpoint:
    path: /video/upload/b_rgb:331a00,co_khaki,l_subtitles:impact_15:lincoln.transcript/fl_layer_apply,g_south_west/lincoln.mp4
    method: GET
- name: transcripts
  endpoint:
    path: /raw/upload/lincoln_speech.vtt
    method: GET
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: info
    params:
      raw_convert: google_speech
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: info.categorization.google_tagging.data
    params:
      categorization: google_tagging
- name: upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: tags
    params:
      categorization: google_tagging
      auto_tagging: 0.6
- name: update
  endpoint:
    path: /image/update
    method: POST
    data_selector: tags
    params:
      categorization: google_tagging
      auto_tagging: 0.9
- name: resource
  endpoint:
    path: /resource
    method: GET
    data_selector: info
    params: {}
- name: image
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: resource
    params: {}
- name: video
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/upload
    method: POST
    data_selector: resource
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload_video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: info
    params:
      categorization: google_video_tagging
- name: image_transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: result
    params:
      categorization: google_video_tagging
      auto_tagging: 0.4
- name: video_update
  endpoint:
    path: /video/update
    method: POST
    data_selector: result
    params:
      resource_type: video
      categorization: google_video_tagging
      auto_tagging: 0.6
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: auto_tagging
  endpoint:
    path: /v1/tag
    method: POST
    data_selector: tags
    params: {}
- name: image
  endpoint:
    path: /v1/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: info
    params:
      categorization: imagga_tagging
      auto_tagging: '0.4'
- name: update
  endpoint:
    path: /image/update
    method: POST
    data_selector: info
    params:
      categorization: imagga_tagging
      auto_tagging: '0.5'
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: results
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: result
    params:
      public_id: family_bench
      eager: c_imagga_scale,w_150,h_200
- name: smartly_crop
  endpoint:
    path: /image/upload/c_imagga_crop,h_380,w_380/family_bench.jpg
    method: GET
- name: overlay_crop
  endpoint:
    path: /image/upload/c_scale,w_400/l_family_bench/c_imagga_scale,h_150,w_150/r_max/fl_layer_apply/coast.jpg
    method: GET
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: file_upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: moderation_response
    params:
      moderation: perception_point
- name: query_status
  endpoint:
    path: /v1_1/demo/raw/upload
    method: POST
    data_selector: moderation_response
    params:
      resource_type: raw
- name: resources_by_moderation
  endpoint:
    path: /resources_by_moderation
    method: GET
    data_selector: resources
    params:
      moderation: perception_point
      status: pending
- name: update_moderation
  endpoint:
    path: /update
    method: POST
    data_selector: result
    params:
      moderation_status: approved
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: thumbnails
  endpoint:
    path: /videos/{videoId}/thumbnails
    method: GET
    data_selector: thumbnails
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: info
    params:
      categorization: azure_video_indexer
      auto_tagging: '0.6'
- name: video_update
  endpoint:
    path: /video/update
    method: POST
    data_selector: info
    params:
      categorization: azure_video_indexer
      auto_tagging: '0.4'
- name: video_upload
  endpoint:
    path: /v1_1/demo/video/upload
    method: POST
    data_selector: info
    params:
      categorization: azure_video_indexer
- name: media
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/media
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/assets
    method: GET
    data_selector: assets
    params: {}
- name: extracted_text
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: ocr
    params:
      ocr: adv_ocr
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: upload_image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: info
    params:
      background_removal: pixelz
- name: update_image
  endpoint:
    path: /image/update
    method: POST
    data_selector: info
    params:
      background_removal: pixelz
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: data
    params: {}
- name: screenshot
  endpoint:
    path: /v1_1/demo/image/url2png
    method: POST
    data_selector: url
    params: {}
- name: screenshot
  endpoint:
    path: /
    method: GET
    data_selector: screenshot_data
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: response
    params: {}
- name: image_transformation
  endpoint:
    path: /c_crop,g_south,w_1000/r_20/e_viesus_correct/l_viesus_logo/c_scale,w_100/o_50/fl_layer_apply,g_north_east,x_10,y_10/c_scale,w_600/beach.jpg
    method: GET
    data_selector: transformation_result
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image_upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: response
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: response
- name: folders
  endpoint:
    path: /folders
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: metadata_rules
  endpoint:
    path: /metadata_rules
    method: GET
    data_selector: metadata_rules
- name: resources
  endpoint:
    path: /resources/:resource_type(/:type)
    method: GET
- name: resources_by_asset_folder
  endpoint:
    path: /resources/by_asset_folder
    method: GET
- name: metadata_fields
  endpoint:
    path: /metadata_fields
    method: GET
    data_selector: metadata_fields
    params: {}
- name: metadata_field_by_external_id
  endpoint:
    path: /metadata_fields/:external_id
    method: GET
    data_selector: ''
    params: {}
- name: create_metadata_field
  endpoint:
    path: /metadata_fields
    method: POST
    data_selector: ''
    params: {}
- name: restore_entries_in_metadata_field_datasource
  endpoint:
    path: /metadata_fields/:external_id/datasource_restore
    method: POST
    data_selector: ''
    params: {}
- name: order_metadata_field_datasource
  endpoint:
    path: /metadata_fields/:external_id/datasource/order
    method: PUT
    data_selector: ''
    params: {}
- name: update_metadata_field_by_external_id
  endpoint:
    path: /metadata_fields/:external_id
    method: PUT
    data_selector: ''
    params: {}
- name: delete_metadata_field_by_external_id
  endpoint:
    path: /metadata_fields/:external_id
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_entries_in_metadata_field_datasource
  endpoint:
    path: /metadata_fields/:external_id/datasource
    method: DELETE
    data_selector: ''
    params: {}
- name: resource
  endpoint:
    path: /resources/:resource_type/:type/:public_id
    method: GET
    data_selector: asset
- name: resources_by_asset_ids
  endpoint:
    path: /resources/by_asset_ids
    method: GET
    data_selector: resources
    params:
      asset_ids: ''
- name: resources_by_tag
  endpoint:
    path: /resources/:resource_type/tags/:tag
    method: GET
    data_selector: resources
    params:
      tag: ''
- name: resources_by_context
  endpoint:
    path: /resources/:resource_type/context/
    method: GET
    data_selector: resources
    params:
      key: ''
- name: resources_in_moderation
  endpoint:
    path: /resources/:resource_type/moderations/:moderation_kind/:status
    method: GET
    data_selector: resources
    params:
      moderation_kind: ''
      status: ''
- name: resource_by_asset_id
  endpoint:
    path: /resources/:asset_id
    method: GET
    data_selector: resource
    params: {}
- name: search
  endpoint:
    path: /resources/search
    method: GET
    data_selector: resources
- name: visual_search
  endpoint:
    path: /resources/visual_search
    method: GET
    data_selector: resources
    params: {}
- name: update_resource
  endpoint:
    path: /resources/:asset_id
    method: PUT
    data_selector: ''
    params: {}
- name: update_resource
  endpoint:
    path: /resources/:resource_type/:type/:public_id
    method: POST
- name: restore_resources_by_asset_id
  endpoint:
    path: /resources/restore
    method: POST
- name: restore_resources_by_public_id
  endpoint:
    path: /resources/:resource_type/:type/restore
    method: POST
- name: update_access_mode
  endpoint:
    path: /resources/:resource_type/upload/update_access_mode
    method: POST
- name: add_related_assets_by_asset_id
  endpoint:
    path: /resources/related_assets/:asset_id
    method: POST
- name: add_related_assets_by_public_id
  endpoint:
    path: /resources/related_assets/:resource_type/:type/:public_id
    method: POST
- name: delete_related_assets_by_asset_id
  endpoint:
    path: /resources/related_assets/:asset_id
    method: DELETE
- name: delete_related_assets_by_public_id
  endpoint:
    path: /resources/related_assets/:resource_type/:type/:public_id
    method: DELETE
- name: delete_resources_by_asset_id
  endpoint:
    path: /resources
    method: DELETE
- name: delete_resources_by_public_id
  endpoint:
    path: /resources/:resource_type/:type
    method: DELETE
    data_selector: null
    params: {}
- name: delete_resources_by_tags
  endpoint:
    path: /resources/:resource_type/tags/:tag
    method: DELETE
    data_selector: null
    params: {}
- name: delete_derived_resources
  endpoint:
    path: /derived_resources
    method: DELETE
    data_selector: null
    params: {}
- name: delete_backed_up_versions_of_a_resource
  endpoint:
    path: /resources/backup/:asset_id
    method: DELETE
    data_selector: null
    params: {}
- name: create_a_last_access_report
  endpoint:
    path: /resources_last_access_reports
    method: POST
    data_selector: null
    params: {}
- name: get_all_last_access_reports
  endpoint:
    path: /resources_last_access_reports
    method: GET
    data_selector: null
    params: {}
- name: get_the_details_of_a_last_access_report
  endpoint:
    path: /resources_last_access_reports/:report_id
    method: GET
    data_selector: null
    params: {}
- name: tags
  endpoint:
    path: /tags/:resource_type
    method: GET
- name: transformations
  endpoint:
    path: /transformations
    method: GET
- name: trigger
  endpoint:
    path: /triggers
    method: GET
- name: last_access_report
  endpoint:
    path: /resources/last_access_report/:report_id
    method: GET
    params:
      report_id: String
      max_results: Integers
      next_cursor: String
- name: streaming_profiles
  endpoint:
    path: /streaming_profiles
    method: GET
    params: {}
- name: streaming_profile_details
  endpoint:
    path: /streaming_profiles/:name
    method: GET
    params:
      name: String
- name: create_streaming_profile
  endpoint:
    path: /streaming_profiles
    method: POST
    params:
      name: String
      representations: JSON string
      display_name: String
- name: update_streaming_profile
  endpoint:
    path: /streaming_profiles
    method: PUT
    params:
      name: String
      representations: JSON string
      display_name: String
- name: delete_streaming_profile
  endpoint:
    path: /streaming_profiles/:name
    method: DELETE
    params:
      name: String
- name: triggers
  endpoint:
    path: /triggers
    method: POST
- name: upload_mappings
  endpoint:
    path: /upload_mappings
    method: GET
- name: upload_presets
  endpoint:
    path: /upload_presets
    method: GET
- name: upload_presets
  endpoint:
    path: /upload_presets/:name
    method: GET
    data_selector: settings
- name: create_upload_preset
  endpoint:
    path: /upload_presets
    method: POST
    data_selector: message
- name: update_upload_preset
  endpoint:
    path: /upload_presets/:name
    method: PUT
    data_selector: message
- name: delete_upload_preset
  endpoint:
    path: /upload_presets/:name
    method: DELETE
    data_selector: message
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_details
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: resource
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/upload
    method: POST
    data_selector: resource
    params: {}
- name: product_environments
  endpoint:
    path: /sub_accounts
    method: GET
- name: access_keys
  endpoint:
    path: /access_keys
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: user_groups
  endpoint:
    path: /user_groups
    method: GET
- name: billing_usage
  endpoint:
    path: /billing/usage
    method: GET
- name: get_product_environments
  endpoint:
    path: /sub_accounts
    method: GET
    data_selector: sub_accounts
- name: create_product_environment
  endpoint:
    path: /sub_accounts
    method: POST
    data_selector: response
- name: get_product_environment
  endpoint:
    path: /sub_accounts/{sub_account_id}
    method: GET
    data_selector: response
- name: update_product_environment
  endpoint:
    path: /sub_accounts/{sub_account_id}
    method: PUT
    data_selector: response
- name: delete_product_environment
  endpoint:
    path: /sub_accounts/{sub_account_id}
    method: DELETE
    data_selector: response
- name: get_billing_usage
  endpoint:
    path: /billing_usage
    method: GET
    data_selector: usage
- name: image_upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
- name: ai_vision_general
  endpoint:
    path: /analyze/ai_vision_general
    method: POST
    data_selector: data
    params: {}
- name: Get analysis task status
  endpoint:
    path: /workspace/default/request/m3Kqp3ITQJJ92DfpPykgj
    method: GET
- name: live_streaming
  endpoint:
    path: /video_live_streaming_reference
    method: GET
- name: live_streams
  endpoint:
    path: /live_streams
    method: GET
    data_selector: data
- name: create_live_stream
  endpoint:
    path: /live_streams
    method: POST
    data_selector: data
- name: get_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}
    method: GET
    data_selector: data
- name: update_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}
    method: PATCH
    data_selector: data
- name: delete_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}
    method: DELETE
    data_selector: data
- name: activate_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}/activate
    method: POST
    data_selector: data
- name: idle_live_stream
  endpoint:
    path: /live_streams/{liveStreamId}/idle
    method: POST
    data_selector: data
- name: get_live_stream_outputs
  endpoint:
    path: /live_streams/{liveStreamId}/outputs
    method: GET
    data_selector: data
- name: live_streams
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/GET/live_streams
    method: GET
- name: create_live_stream
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/POST/live_streams
    method: POST
- name: get_single_live_stream
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/GET/live_streams/{liveStreamId}
    method: GET
- name: update_live_stream
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/PATCH/live_streams/{liveStreamId}
    method: PATCH
- name: delete_live_stream
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/DELETE/live_streams/{liveStreamId}
    method: DELETE
- name: activate_live_stream
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/POST/live_streams/{liveStreamId}/activate
    method: POST
- name: idle_live_stream
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/POST/live_streams/{liveStreamId}/idle
    method: POST
- name: live_stream_outputs
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/GET/live_streams/{liveStreamId}/outputs
    method: GET
- name: create_live_stream_output
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/POST/live_streams/{liveStreamId}/outputs
    method: POST
- name: get_single_live_stream_output
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/GET/live_streams/{liveStreamId}/outputs/{liveStreamOutputId}
    method: GET
- name: update_live_stream_output
  endpoint:
    path: /video_live_streaming_reference#tag/live-stream/PATCH/live_streams/{liveStreamId}/outputs/{liveStreamOutputId}
    method: PATCH
- name: live_stream_output
  endpoint:
    path: /live_streams/*{liveStreamId}*/outputs
    method: POST
    data_selector: data
    params: {}
- name: single_live_stream_output
  endpoint:
    path: /live_streams/*{liveStreamId}*/outputs/*{liveStreamOutputId}*
    method: GET
    data_selector: data
    params: {}
- name: update_live_stream_output
  endpoint:
    path: /live_streams/*{liveStreamId}*/outputs/*{liveStreamOutputId}*
    method: PATCH
    data_selector: data
    params: {}
- name: delete_live_stream_output
  endpoint:
    path: /live_streams/*{liveStreamId}*/outputs/*{liveStreamOutputId}*
    method: DELETE
    data_selector: data
    params: {}
- name: live_stream
  endpoint:
    path: /live_streams
    method: GET
- name: create_live_stream
  endpoint:
    path: /live_streams
    method: POST
- name: single_live_stream
  endpoint:
    path: /live_streams/{live_stream_id}
    method: GET
- name: delete_live_stream
  endpoint:
    path: /live_streams/{live_stream_id}
    method: DEL
- name: update_live_stream
  endpoint:
    path: /live_streams/{live_stream_id}
    method: PATCH
- name: manually_activate_live_stream
  endpoint:
    path: /live_streams/{live_stream_id}/activate
    method: POST
- name: manually_idle_live_stream
  endpoint:
    path: /live_streams/{live_stream_id}/idle
    method: POST
- name: live_stream_outputs
  endpoint:
    path: /live_streams/{live_stream_id}/outputs
    method: GET
- name: create_live_stream_output
  endpoint:
    path: /live_streams/{live_stream_id}/outputs
    method: POST
- name: single_live_stream_output
  endpoint:
    path: /live_streams/{live_stream_id}/outputs/{output_id}
    method: GET
- name: delete_live_stream_output
  endpoint:
    path: /live_streams/{live_stream_id}/outputs/{output_id}
    method: DEL
- name: update_live_stream_output
  endpoint:
    path: /live_streams/{live_stream_id}/outputs/{output_id}
    method: PATCH
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: Image transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
- name: Video transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
- name: image_upload
  endpoint:
    path: /v1_1/:cloud_name/image/upload
    method: POST
    data_selector: result
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/:cloud_name/video/upload
    method: POST
    data_selector: result
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
- name: video
  endpoint:
    path: /v1/video
    method: GET
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: upload_widget
  endpoint:
    path: /latest/global/all.js
    method: GET
    data_selector: widget
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: Media Editor
  endpoint:
    path: /media/editor
    method: GET
- name: images
  endpoint:
    path: /v1/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: ExportProps
  endpoint:
    path: /export_props
    method: GET
    data_selector: properties
    params: {}
- name: PredefinedPreset
  endpoint:
    path: /predefined_preset
    method: GET
    data_selector: presets
    params: {}
- name: CustomPreset
  endpoint:
    path: /custom_preset
    method: GET
    data_selector: custom_presets
    params: {}
- name: OverlayProps
  endpoint:
    path: /overlay_props
    method: GET
    data_selector: overlays
    params: {}
- name: CustomPlacement
  endpoint:
    path: /custom_placement
    method: GET
    data_selector: custom_placements
    params: {}
- name: PredefinedPlacement
  endpoint:
    path: /predefined_placement
    method: GET
    data_selector: predefined_placements
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: play
  endpoint:
    path: /play
    method: GET
- name: pause
  endpoint:
    path: /pause
    method: GET
- name: stop
  endpoint:
    path: /stop
    method: GET
- name: playNext
  endpoint:
    path: /playNext
    method: GET
- name: playPrevious
  endpoint:
    path: /playPrevious
    method: GET
- name: volume
  endpoint:
    path: /volume
    method: GET
- name: mute
  endpoint:
    path: /mute
    method: GET
- name: unmute
  endpoint:
    path: /unmute
    method: GET
- name: isMuted
  endpoint:
    path: /isMuted
    method: GET
- name: currentTime
  endpoint:
    path: /currentTime
    method: GET
- name: duration
  endpoint:
    path: /duration
    method: GET
- name: maximize
  endpoint:
    path: /maximize
    method: GET
- name: exitMaximize
  endpoint:
    path: /exitMaximize
    method: GET
- name: isMaximized
  endpoint:
    path: /isMaximized
    method: GET
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/transformation
    method: GET
    data_selector: transformation
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/transformation
    method: GET
    data_selector: transformation
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: upload
  endpoint:
    path: /v2/upload
    method: POST
    data_selector: result
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: asset_details
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resource
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: transformations
  endpoint:
    path: /transformations
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: resource
  endpoint:
    path: /resources
    method: GET
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: asset_details
  endpoint:
    path: /resources/image/upload/cld-sample
    method: GET
    data_selector: asset_id
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: transformations
  endpoint:
    path: /transformations
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: resource
- name: photo_album
  endpoint:
    path: /v1/photo_album
    method: GET
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: video_transformations
  endpoint:
    path: /video_transformations
    method: POST
    data_selector: response
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: resource
    params: {}
- name: asset_details
  endpoint:
    path: /resources/image/upload/cld-sample
    method: GET
    data_selector: resource
- name: cloudinary_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
- name: transform
  endpoint:
    path: /image/upload
    method: POST
    data_selector: result
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /resource
    method: GET
    data_selector: resource
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
- name: cloudinary_configuration
  endpoint:
    path: /cloudinary/config
    method: GET
    data_selector: configuration
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
    params: {}
- name: image_transformations
  endpoint:
    path: /v1_1/{{ cloud_name }}/image/demographics
    method: GET
    data_selector: results
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/{{ cloud_name }}/video/demographics
    method: GET
    data_selector: results
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
- name: asset
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1_1/<YOUR-CLOUD-NAME>/image/upload
    method: POST
    data_selector: data
- name: video
  endpoint:
    path: /v1_1/<YOUR-CLOUD-NAME>/video/upload
    method: POST
    data_selector: data
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: upload
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: response
- name: transform
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/transform
    method: POST
    data_selector: response
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: file_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: file_upload
    params: {}
- name: Image
  endpoint:
    path: /image/upload
    method: GET
- name: Video
  endpoint:
    path: /video/upload
    method: GET
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /resources/video/upload
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: CldImage
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
- name: CldVideo
  endpoint:
    path: /video/upload
    method: GET
    data_selector: video
- name: image_transformations
  endpoint:
    path: /v1/image/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: cloudinary
  endpoint:
    path: /cloudinary
    method: GET
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
- name: video_transformation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: transformation
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: transformations
  endpoint:
    path: /transform
    method: GET
    data_selector: transformations
    params: {}
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params:
      cloud_name: demo
      secure: 'true'
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: uploads
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/upload
    method: POST
    data_selector: resource
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: response
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: transformations
  endpoint:
    path: /upload
    method: GET
    data_selector: transformation
    params:
      resource_type: image
- name: file_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: upload
    params:
      resource_type: video
      notification_url: https://mysite.example.com/notify_endpoint
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: transformations
  endpoint:
    path: /transformations
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: images
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/video
    method: GET
    data_selector: resources
- name: cloudinary
  endpoint:
    path: /settings/api-keys
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: Next.js components
  endpoint:
    path: /next.js
    method: GET
    data_selector: components
- name: Astro components
  endpoint:
    path: /astro
    method: GET
    data_selector: components
- name: Laravel package
  endpoint:
    path: /laravel
    method: GET
    data_selector: package
- name: Nuxt.JS components
  endpoint:
    path: /nuxt.js
    method: GET
    data_selector: components
- name: Svelte components
  endpoint:
    path: /svelte
    method: GET
    data_selector: components
- name: Gatsby plugins
  endpoint:
    path: /gatsby
    method: GET
    data_selector: plugins
- name: Netlify plugin
  endpoint:
    path: /netlify
    method: GET
    data_selector: plugin
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: folders
  endpoint:
    path: /folders/search
    method: GET
    data_selector: resources
    params:
      expression: name:folder AND path:my_parent AND created_at>4w
- name: assets
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: AI Vision
  endpoint:
    path: /v2/analysis/{CLOUD_NAME}/analyze/ai_vision_moderation
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: transformations
  endpoint:
    path: /transformations
    method: GET
    data_selector: transformations
    params: {}
- name: asset_management
  endpoint:
    path: /documentation/managing_assets
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /resources/video/upload
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: auto_transcription
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: transcript
    params:
      auto_transcription: 'true'
      resource_type: video
- name: auto_chaptering
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: chapters
    params:
      auto_chaptering: 'true'
      resource_type: video
- name: live_streams
  endpoint:
    path: /create
    method: POST
    data_selector: stream
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /resources/video
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: webhook_management
  endpoint:
    path: /triggers
    method: POST
- name: search_api
  endpoint:
    path: /search
    method: GET
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: media
  endpoint:
    path: /media
    method: GET
    data_selector: records
- name: fetch_video
  endpoint:
    path: /video/fetch
    method: GET
    data_selector: records
    params: {}
- name: create_collage
  endpoint:
    path: /image/upload
    method: POST
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asset_management
  endpoint:
    path: /documentation/managing_assets
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /documentation/upload_images
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /resources/image
    method: GET
- name: video
  endpoint:
    path: /resources/video
    method: GET
- name: image_transformation
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: transformation
    params: {}
- name: video_transformation
  endpoint:
    path: /video/transformation
    method: GET
    data_selector: transformation
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: response
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
    params: {}
- name: upload_widget
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: response
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /resources/video/upload
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: response
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: response
    params: {}
- name: image_transformation
  endpoint:
    path: /v1_1/<cloud_name>/image/transformation
    method: GET
    data_selector: resources
    params: {}
- name: video_transformation
  endpoint:
    path: /v1_1/<cloud_name>/video/transformation
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/video
    method: GET
    data_selector: resources
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/<cloud_name>/image/upload
    method: POST
    data_selector: resource
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/<cloud_name>/video/upload
    method: POST
    data_selector: resource
    params: {}
- name: optimize_images
  endpoint:
    path: /services/data/vXX.X/sobjects/OptimizeImages
    method: GET
    data_selector: records
    params: {}
- name: optimize_videos
  endpoint:
    path: /services/data/vXX.X/sobjects/OptimizeVideos
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: response
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: response
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params: {}
- name: video_player
  endpoint:
    path: /video/player
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: VideoPlayer
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: CldVideoPlayer
  endpoint:
    path: /next-cloudinary/CldVideoPlayer
    method: GET
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/<cloud_name>/image/upload
    method: POST
    data_selector: secure_url
- name: video_upload
  endpoint:
    path: /v1_1/<cloud_name>/video/upload
    method: POST
    data_selector: secure_url
- name: media_assets
  endpoint:
    path: /v1/media/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params:
      type: upload
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /services/data/vXX.X/sobjects/Assets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /v1_1/<cloud_name>/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: zoompan_effect
  endpoint:
    path: /path/to/zoompan_effect
    method: GET
    data_selector: records
    params: {}
- name: zoompan
  endpoint:
    path: /v1_1/<cloud_name>/zoompan
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: asset_management
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: images
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: videos
- name: media
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: image_resizing
  endpoint:
    path: /docs/camera-640.jpg
    method: GET
    data_selector: ''
    params: {}
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation_results
    params: {}
- name: mfit
  endpoint:
    path: /image/upload/c_mfit,h_250,w_250/docs/camera-640.jpg
    method: GET
- name: pad
  endpoint:
    path: /image/upload/b_brown,c_pad,h_250,w_250/docs/camera.jpg
    method: GET
- name: lpad
  endpoint:
    path: /image/upload/b_green,c_lpad,h_150,w_400/docs/camera.jpg
    method: GET
- name: mpad
  endpoint:
    path: /image/upload/b_green,c_mpad,h_200,w_200/docs/camera-100.jpg
    method: GET
- name: image_upscaling
  endpoint:
    path: /image/upload
    method: GET
    data_selector: upscale
    params:
      transformationString: e_upscale
- name: image_downscaling
  endpoint:
    path: /image/upload
    method: GET
    data_selector: downscale
    params:
      transformationString: c_scale,w_300
- name: automatic_gravity_thumb_mode
  endpoint:
    path: /c_thumb,g_auto,h_150,w_150/sunset_shoes.jpg
    method: GET
- name: automatic_gravity_crop_mode
  endpoint:
    path: /c_crop,g_auto,h_250,w_200/docs/hot-air-balloons.jpg
    method: GET
- name: automatic_gravity_auto_cropping_mode
  endpoint:
    path: /c_auto,g_auto,h_215,w_215/docs/handbag2.jpg
    method: GET
- name: rule_of_thirds
  endpoint:
    path: /c_auto,g_auto:thirds_0,h_250,w_250/docs/girl-dress.jpg
    method: GET
- name: dpr_example
  endpoint:
    path: /c_fill,h_100,w_100/l_sale_icon/c_scale,fl_relative,w_0.5/o_60/e_brightness:100/fl_layer_apply,g_south_east/dpr_2.0/docs/pepper.jpg
    method: GET
- name: image_transformations
  endpoint:
    path: /image/transformations
    method: GET
    data_selector: transformations
- name: layers
  endpoint:
    path: /layers
    method: GET
    data_selector: layers
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
- name: text_overlay
  endpoint:
    path: /image/upload
    method: GET
    data_selector: overlay
    params: {}
- name: image_overlay
  endpoint:
    path: /image/upload
    method: GET
    data_selector: overlay
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_overlay
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformationString
    params: {}
- name: text_layer_options
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformationString
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_effects
  endpoint:
    path: /image/effects
    method: GET
    data_selector: effects
    params: {}
- name: background_color
  endpoint:
    path: /image/upload
    method: GET
    data_selector: records
    params: {}
- name: content_aware_padding
  endpoint:
    path: /image/upload
    method: GET
    data_selector: records
    params: {}
- name: gradient_fade
  endpoint:
    path: /image/upload
    method: GET
    data_selector: records
    params: {}
- name: borders
  endpoint:
    path: /image/upload
    method: GET
    data_selector: records
    params: {}
- name: cartoonify
  endpoint:
    path: /e_cartoonify/docs/rmv_bgd/stuffed_orig.jpg
    method: GET
- name: opacity
  endpoint:
    path: /o_30/docs/eye-closeup.jpg
    method: GET
- name: pixelate
  endpoint:
    path: /e_pixelate:20/docs/flower_shop.jpg
    method: GET
- name: sepia
  endpoint:
    path: /e_sepia/docs/couple-rocks.jpg
    method: GET
- name: vignette
  endpoint:
    path: /e_vignette/women-pantsuits-steps.png
    method: GET
- name: generative_restore
  endpoint:
    path: /c_scale,w_300/e_gen_restore/docs/denim.jpg
    method: GET
- name: upscale
  endpoint:
    path: /e_upscale/docs/escalator-200.jpg
    method: GET
- name: enhance
  endpoint:
    path: /e_enhance/docs/under-exposed.jpg
    method: GET
- name: improve
  endpoint:
    path: /e_improve/hallway.jpg
    method: GET
- name: lut
  endpoint:
    path: /l_lut:iwltbap_aspen.3dl/docs/textured_handbag.jpg
    method: GET
- name: distort
  endpoint:
    path: /e_distort
    method: GET
    data_selector: records
- name: replace_color
  endpoint:
    path: /e_replace_color
    method: GET
    data_selector: records
- name: simulate_colorblind
  endpoint:
    path: /image/upload/e_simulate_colorblind:deuteranopia/docs/snooker.jpg
    method: GET
    data_selector: image
    params: {}
- name: assist_colorblind
  endpoint:
    path: /image/upload/e_assist_colorblind:8/v1585561697/docs/snooker.jpg
    method: GET
    data_selector: image
    params: {}
- name: displace
  endpoint:
    path: /upload/l_radialize/e_displace,fl_layer_apply,y_-20/docs/couple-cornfield
    method: GET
    data_selector: image
    params: {}
- name: rotate_image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: url
    params: {}
- name: round_corners
  endpoint:
    path: /image/upload
    method: GET
    data_selector: url
    params: {}
- name: shadow_effect
  endpoint:
    path: /image/upload/co_rgb:483d8b,e_shadow:50,x_60,y_-60/docs/stockholm.jpg
    method: GET
    data_selector: records
    params: {}
- name: dropshadow_effect
  endpoint:
    path: /image/upload/e_dropshadow:azimuth_220;elevation_40;spread_20/docs/rmv_bgd/lipstick-png
    method: GET
    data_selector: records
    params: {}
- name: shape_cutouts
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: tint_effect
  endpoint:
    path: /image/upload/e_tint
    method: GET
    data_selector: records
- name: vectorize_effect
  endpoint:
    path: /image/upload/e_vectorize
    method: GET
    data_selector: records
- name: zoompan_effect
  endpoint:
    path: /e_zoompan
    method: GET
    data_selector: effects
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformation
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformation
    params: {}
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: info
    params:
      background_removal: cloudinary_ai
      notification_url: https://mysite.example.com/hooks
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: image_transformations
  endpoint:
    path: /image/transform
    method: POST
    data_selector: response
    params: {}
- name: generative_background_replace
  endpoint:
    path: /image/upload/e_gen_background_replace
    method: GET
    data_selector: results
- name: generative_replace
  endpoint:
    path: /image/upload/e_gen_replace
    method: GET
    data_selector: null
    params: {}
- name: generative_restore
  endpoint:
    path: /image/upload/e_gen_restore
    method: GET
    data_selector: null
    params: {}
- name: face_detection_transformations
  endpoint:
    path: /v1/face-detection-transformations
    method: GET
    data_selector: transformations
- name: position_overlays_on_detected_faces
  endpoint:
    path: /position/overlays
    method: GET
    data_selector: records
- name: return_coordinates_of_facial_landmarks
  endpoint:
    path: /getinfo
    method: GET
    data_selector: records
- name: position_overlays_avoiding_detected_faces
  endpoint:
    path: /face/avoid
    method: GET
    data_selector: records
- name: effects_with_face_detection
  endpoint:
    path: /effects
    method: GET
    data_selector: records
- name: advanced_facial_attributes_detection
  endpoint:
    path: /advanced/facial/attributes
    method: GET
    data_selector: records
- name: zoom_level
  endpoint:
    path: /zoom
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: coordinates
    params:
      custom_coordinates: 225,230,250,240
- name: crop_custom_coordinates
  endpoint:
    path: /image/upload/c_crop,g_custom
    method: GET
    data_selector: coordinates
- name: overlay_custom_coordinates
  endpoint:
    path: /image/upload/l_sale_icon/c_scale,fl_region_relative,w_0.75/fl_layer_apply,g_custom
    method: GET
    data_selector: coordinates
- name: focus_area
  endpoint:
    path: /focus_area_refiner
    method: GET
    data_selector: focusAreas
- name: custom_coordinates
  endpoint:
    path: /image/upload
    method: POST
    data_selector: coordinates
    params: {}
- name: face_coordinates
  endpoint:
    path: /image/upload
    method: POST
    data_selector: faces
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: animated_images
  endpoint:
    path: /image/upload
    method: GET
    data_selector: data
    params: {}
- name: image_transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
- name: animated_image_conversion
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: transformations
  endpoint:
    path: /image/upload
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: transformations
  endpoint:
    path: /transformations
    method: GET
    data_selector: transformations
    params: {}
- name: 360_animated_image
  endpoint:
    path: /image/upload/e_camera:up_-30;right_15;frames_20/dl_10,f_webp,fl_animated/c_scale,h_200/b_rgb:3448C5/docs/CldLogo3D
    method: GET
    data_selector: frames
    params: {}
- name: 360_video
  endpoint:
    path: /image/upload/dl_10,f_mp4,fl_animated/c_fill,h_300,w_500/b_rgb:d5d2ca/docs/foyer-table
    method: GET
    data_selector: video
    params: {}
- name: draco_compression
  endpoint:
    path: /image/upload/fl_draco/DamagedHelmet3D.gltz
    method: GET
    data_selector: draco
    params: {}
- name: deliver_3D_model_as_glb
  endpoint:
    path: /image/upload/DamagedHelmet3D.glb
    method: GET
    data_selector: glb
    params: {}
- name: deliver_fbx_as_usdz
  endpoint:
    path: /image/upload/f_usdz/docs/foyer-table.fbxz
    method: GET
    data_selector: usdz
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: results
- name: conditional_transformations
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformationString
- name: image_transformations
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: text_overlay
  endpoint:
    path: '/$award_!First!/$color_!rgb:FFFFFF!/$style_!Arial_150!/b_gray,co_$color,l_text:$style:  $(award)  Place
      ,r_10,o_76,g_south,y_10'
    method: GET
    data_selector: records
- name: named_transformation
  endpoint:
    path: /$width_115/t_passport_photo/woman.jpg
    method: GET
    data_selector: records
- name: image_ratings
  endpoint:
    path: /upload/$rating_!thumbs-up!/t_image_ratings/log_cabin.jpg
    method: GET
- name: overlay
  endpoint:
    path: /upload/$overlay_ref:!docs:sale!/fn_wasm:docs:pnglayer.wasm/bo_1px_solid_black/docs/casual.jpg
    method: GET
- name: conditional_transformations
  endpoint:
    path: /upload/$img_current/$height_ih/if_w_lt_800/u_$img/c_scale,h_$height,w_800/e_blur:800/e_brightness:40/fl_layer_apply/if_end/butterfly
    method: GET
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /image/list
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
- name: image_optimization
  endpoint:
    path: /image/optimize
    method: POST
    data_selector: optimizations
    params: {}
- name: sprite_css
  endpoint:
    path: /image/sprite/mytag.css
    method: GET
- name: sprite_image
  endpoint:
    path: /image/sprite/mytag.png
    method: GET
- name: image_quality
  endpoint:
    path: /image/upload/q_auto/woman.jpg
    method: GET
    data_selector: image_quality
- name: image_format
  endpoint:
    path: /image/upload/f_auto/docs/shoes.jpg
    method: GET
    data_selector: image_format
- name: animated_gif
  endpoint:
    path: /image/upload/fl_lossy/kitten_fighting.gif
    method: GET
    data_selector: animated_gif
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: uploads
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/upload
    method: POST
    data_selector: upload
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: optimize_pdf_on_delivery
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: url
    params:
      transformation: q_auto
- name: optimize_pdf_on_upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: url
    params:
      transformation: q_auto
- name: optimize_pdf
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: response
    params:
      file: https://res.cloudinary.com/cld-docs/image/upload/39_Acacia_Road_Brochure_original.pdf
      public_id: 39_Acacia_Road_Brochure_original
      overwrite: 'true'
      invalidate: 'true'
      transformation: q_auto
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /v1_1/<cloud_name>/resources
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: media
    params: {}
- name: Responsive Breakpoints Generator
  endpoint:
    path: https://www.responsivebreakpoints.com/
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: responsive_breakpoints
  endpoint:
    path: /upload
    method: POST
    data_selector: responsive_breakpoints
    params:
      responsive_breakpoints:
        create_derived: true
        bytes_step: 20000
        min_width: 200
        max_width: 1000
        transformation:
          crop: fill
          aspect_ratio: '16:9'
          gravity: auto
- name: house_image
  endpoint:
    path: /image/upload/f_auto/q_auto/c_scale,w_256/docs/house.jpg
    method: GET
    data_selector: srcset
- name: guitar_man_image
  endpoint:
    path: /image/upload/ar_2:1,c_fill,g_face/f_auto/q_auto/c_scale,w_800/docs/guitar-man.jpg
    method: GET
    data_selector: srcset
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: responsive_images
  endpoint:
    path: /responsive_images
    method: GET
    data_selector: images
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: responsive_image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: data-src
    params:
      width: auto
      dpr: auto
      crop: limit
      responsive_placeholder: blank
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: calculated_breakpoints
  endpoint:
    path: /upload/ar_16:9,c_fill/c_limit,w_auto:breakpoints:json/bike.jpg
    method: GET
- name: fetch_image
  endpoint:
    path: /image/fetch/
    method: GET
    data_selector: image
    params: {}
- name: fetch_video
  endpoint:
    path: /video/fetch/
    method: GET
    data_selector: video
    params: {}
- name: video
  endpoint:
    path: /video/fetch
    method: GET
    data_selector: video
    params: {}
- name: thumbnail
  endpoint:
    path: /image/youtube
    method: GET
    data_selector: thumbnail
    params: {}
- name: image_overlay
  endpoint:
    path: /image/upload/l_fetch:aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy8xLzEzL0JlbmVkaWN0X0N1bWJlcmJhdGNoXzIwMTEucG5n/fl_layer_apply/docs/colorful.jpg
    method: GET
- name: video_underlay
  endpoint:
    path: /video/upload/u_fetch:aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy8xLzEzL0JlbmVkaWN0X0N1bWJlcmJhdGNoXzIwMTEucG5n/fl_layer_apply/docs/transparent_talking.webm
    method: GET
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: facebook_profile_picture
  endpoint:
    path: /image/facebook/{signature}/{social_identifier}
    method: GET
    data_selector: profile_picture
    params: {}
- name: twitter_profile_picture
  endpoint:
    path: /image/twitter/{signature}/{social_identifier}
    method: GET
    data_selector: profile_picture
    params: {}
- name: gravatar_profile_picture
  endpoint:
    path: /image/gravatar/{signature}/{social_identifier}
    method: GET
    data_selector: profile_picture
    params: {}
- name: image_transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
- name: PDF
  endpoint:
    path: /image/upload/long_multi_page_pdf
    method: GET
    data_selector: records
    params: {}
- name: Photoshop
  endpoint:
    path: /image/upload/docs/cld_record_PSD.psd
    method: GET
    data_selector: records
    params: {}
- name: embedded_object
  endpoint:
    path: /image/upload/pg_embedded:name:skyline-3242040_1920/docs/cld_sample_smart_PSD.jpg
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: media
    params: {}
- name: access_controlled_assets
  endpoint:
    path: /access_controlled_assets
    method: GET
- name: strict_transformations
  endpoint:
    path: /strict_transformations
    method: GET
- name: create_animated_image
  endpoint:
    path: /image/multi
    method: POST
    data_selector: response
    params:
      tag: arrow_animation
- name: asset_management
  endpoint:
    path: /documentation/managing_assets
    method: GET
    data_selector: records
    params: {}
- name: spinning_text
  endpoint:
    path: /image/multi/dl_100/spinning_text.gif
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: generate_archive
  endpoint:
    path: /v1_1/demo/image/generate_archive
    method: POST
    data_selector: null
    params: {}
- name: sprite
  endpoint:
    path: /image/sprite/sprite_logo.png
    method: GET
    data_selector: image_url
- name: sprite_css
  endpoint:
    path: /image/sprite/sprite_logo.css
    method: GET
    data_selector: css_url
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: sprite_from_tag
  endpoint:
    path: /sprite
    method: POST
    data_selector: image_url
    params:
      tag: logo
      timestamp: '173719931'
      api_key: '614335564976464'
      signature: a788d68f86a6f868af
- name: sprite_from_urls
  endpoint:
    path: /sprite
    method: POST
    data_selector: image_url
    params:
      urls:
      - https://images.unsplash.com/photo-1600210492493-0946911123ea?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80
      - https://images.unsplash.com/photo-1616594039964-ae9021a400a0?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80
      - https://images.unsplash.com/photo-1556912172-45b7abe8b7e1?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80
      format: webp
      api_key: '614335564976464'
      timestamp: '173719931'
      signature: a788d68f86a6f868af
- name: assets
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/media
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: create_collage
  endpoint:
    path: /image/create_collage
    method: POST
    data_selector: manifest_json
    params:
      public_id: test_collage
      resource_type: image
- name: create_collage
  endpoint:
    path: /create_collage
    method: POST
    data_selector: response
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: image_transformations
  endpoint:
    path: /v1_1/<cloud_name>/image/transformation
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/<cloud_name>/video/transformation
    method: GET
    data_selector: resources
    params: {}
- name: create_pdf
  endpoint:
    path: /v1_1/demo/image/multi
    method: POST
    data_selector: response
    params:
      tag: topic
      format: pdf
- name: pdf_delivery
  endpoint:
    path: /image/multi/topic.pdf
    method: GET
- name: text_image
  endpoint:
    path: /v2/uploader/text
    method: POST
    data_selector: result
    params: {}
- name: image
  endpoint:
    path: /create/images/from/text
    method: POST
    data_selector: asset_id
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video_player
  endpoint:
    path: /video_player
    method: GET
    data_selector: records
- name: self-hosted player
  endpoint:
    path: /self-hosted
    method: GET
    data_selector: video
- name: cloud-hosted player
  endpoint:
    path: /cloud-hosted
    method: GET
    data_selector: iframe
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: cloud_hosted_player
  endpoint:
    path: /embed/
    method: GET
    data_selector: iframe
    params: {}
- name: video
  endpoint:
    path: /upload
    method: POST
    data_selector: result
    params:
      resource_type: video
      eager_async: true
      eager_notification_url: https://mysite.example.com/eager_endpoint
      eager:
      - format: webm
        transformation:
        - effect: vignette
          border: 5px_solid_black
        - video_codec: vp9
      - format: mp4
        transformation:
        - effect: vignette
          border: 5px_solid_black
        - video_codec: h265
      - format: mp4
        transformation:
          effect: vignette
          border: 5px_solid_black
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /video/player
    method: GET
    data_selector: videos
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: video_titles_subtitles_and_descriptions
  endpoint:
    path: /video/titles_subtitles_descriptions
    method: GET
    data_selector: records
    params: {}
- name: subtitles_and_captions
  endpoint:
    path: /video/subtitles_captions
    method: GET
    data_selector: records
    params: {}
- name: paced_subtitles
  endpoint:
    path: /video/paced_subtitles
    method: GET
    data_selector: records
    params: {}
- name: visual_customization
  endpoint:
    path: /video/visual_customization
    method: GET
    data_selector: records
    params: {}
- name: video_chapters
  endpoint:
    path: /video/chapters
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
- name: playlist
  endpoint:
    path: /playlist
    method: POST
    data_selector: playlist
    params: {}
- name: playlistByTag
  endpoint:
    path: /playlistByTag
    method: POST
    data_selector: playlistByTag
    params: {}
- name: sourcesByTag
  endpoint:
    path: /sourcesByTag
    method: GET
    data_selector: sourcesByTag
    params: {}
- name: asset_management
  endpoint:
    path: /services/data/vXX.X/sobjects/AssetManagement
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /services/data/vXX.X/sobjects/VideoTransformations
    method: GET
    data_selector: records
- name: video_recommendations
  endpoint:
    path: /video/recommendations
    method: GET
- name: playlist
  endpoint:
    path: /playlist
    method: GET
- name: asset
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: adaptive_streaming
  endpoint:
    path: /adaptive-streaming
    method: GET
- name: adaptiveStreaming
  endpoint:
    path: /adaptive_streaming_options
    method: GET
    data_selector: options
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params:
      type: upload
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1_1/<your-cloud-name>/image/transformation
    method: GET
    data_selector: transformation
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/<your-cloud-name>/video/transformation
    method: GET
    data_selector: transformation
    params: {}
- name: ads
  endpoint:
    path: /js/sdkloader/ima3.js
    method: GET
    data_selector: ads
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/auto/upload
    method: POST
    data_selector: data
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
    params: {}
- name: video_resizing
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformation
    params: {}
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: result
- name: video_transformation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: result
- name: video_fill
  endpoint:
    path: /video/upload/c_fill,h_250,w_250
    method: GET
    data_selector: video
    params: {}
- name: video_fill_pad
  endpoint:
    path: /video/upload/ar_1.0,c_fill_pad,g_auto,h_400
    method: GET
    data_selector: video
    params: {}
- name: video_crop
  endpoint:
    path: /video/upload/c_crop,g_north,h_1000,w_500
    method: GET
    data_selector: video
    params: {}
- name: video_scale
  endpoint:
    path: /video/upload/c_scale,w_150
    method: GET
    data_selector: video
    params: {}
- name: video_fit
  endpoint:
    path: /video/upload/c_fit,h_250,w_250
    method: GET
    data_selector: video
    params: {}
- name: video_limit
  endpoint:
    path: /video/upload/c_limit,h_250,w_250
    method: GET
    data_selector: video
    params: {}
- name: video_pad
  endpoint:
    path: /video/upload/b_brown,c_pad,h_250,w_250
    method: GET
    data_selector: video
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: videos
    params:
      dpr: '2.0'
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video_upload
  endpoint:
    path: /video/upload
    method: GET
    data_selector: records
    params: {}
- name: video_overlays
  endpoint:
    path: /video/upload
    method: POST
    data_selector: result
- name: audio_overlays
  endpoint:
    path: /video/upload
    method: POST
    data_selector: result
- name: text_overlays
  endpoint:
    path: /video/upload
    method: POST
    data_selector: result
- name: subtitles
  endpoint:
    path: /video/upload
    method: POST
    data_selector: result
- name: text_overlay
  endpoint:
    path: /video/upload
    method: POST
- name: text_image
  endpoint:
    path: /image/text
    method: POST
    data_selector: text
    params: {}
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: video
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video_effects
  endpoint:
    path: /video/upload
    method: GET
- name: video_progress_indicator
  endpoint:
    path: /video/upload/e_progressbar
    method: GET
    data_selector: progress_indicator
- name: video_rotation
  endpoint:
    path: /video/upload/a
    method: GET
    data_selector: rotation
- name: video_rounding
  endpoint:
    path: /video/upload/r
    method: GET
    data_selector: rounding
- name: video_transparency
  endpoint:
    path: /video/upload/e_make_transparent
    method: GET
    data_selector: transparency
- name: video_thumbnail
  endpoint:
    path: /video/upload
    method: GET
    data_selector: image
    params: {}
- name: loop
  endpoint:
    path: /e_loop:2/ski_jump.mp4
    method: GET
    data_selector: records
- name: accelerate
  endpoint:
    path: /e_accelerate:100/docs/long-boarding-one-surfer.mp4
    method: GET
    data_selector: records
- name: reverse
  endpoint:
    path: /e_reverse/pencil_sketch.mp4
    method: GET
    data_selector: records
- name: vignette
  endpoint:
    path: /e_vignette/docs/hotel_buffet.mp4
    method: GET
    data_selector: records
- name: noise
  endpoint:
    path: /h_250/e_noise:100/docs/green_screen_queen.mp4
    method: GET
    data_selector: records
- name: preview
  endpoint:
    path: /e_preview:duration_5/elephants.mp4
    method: GET
    data_selector: records
- name: boomerang
  endpoint:
    path: /eo_5.0,so_3.0/e_boomerang/e_loop/snow_deer.gif
    method: GET
    data_selector: records
- name: border
  endpoint:
    path: /bo_5px_solid_blue/docs/sunglasses.mp4
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: audio_transformation
  endpoint:
    path: /video/upload
    method: POST
    data_selector: audio
    params: {}
- name: waveform_image
  endpoint:
    path: /video/upload
    method: GET
    data_selector: waveform
    params: {}
- name: waveform_image
  endpoint:
    path: /video/upload/
    method: GET
    data_selector: image
- name: video
  endpoint:
    path: /video
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: resources
    params: {}
- name: animated_gifs
  endpoint:
    path: /video/upload
    method: GET
    data_selector: animated_gifs
- name: animated_webp
  endpoint:
    path: /video/upload
    method: GET
    data_selector: animated_webp
- name: animated_png
  endpoint:
    path: /video/upload
    method: GET
    data_selector: animated_png
- name: animated_avif
  endpoint:
    path: /video/upload
    method: GET
    data_selector: animated_avif
- name: animated_images
  endpoint:
    path: /video/upload/c_scale,w_250/f_auto,fl_animated
    method: GET
    data_selector: animated_image
    params: {}
- name: animated_images_auto_format
  endpoint:
    path: /video/upload/c_scale,w_250/f_auto:animated
    method: GET
    data_selector: animated_image
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: conditional_video_transformations
  endpoint:
    path: /video/upload
    method: GET
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /video_transformations
    method: GET
    data_selector: records
- name: video_upload
  endpoint:
    path: /video/upload
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video_optimization
  endpoint:
    path: /v1/video/optimization
    method: GET
    data_selector: optimizations
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: ''
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params: {}
- name: audio_file
  endpoint:
    path: /docs/fireflywav.mp3
    method: GET
    data_selector: file_sizes
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: bubbles_audio
  endpoint:
    path: /video/upload/q_auto/docs/bubbles.mp3
    method: GET
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: video_stream
  endpoint:
    path: /video/stream
    method: GET
    data_selector: data
    params: {}
- name: upload_widget
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: list_assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params:
      prefix: shirt
- name: asset_details
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: data
    params:
      faces: '1'
      colors: '1'
      media_metadata: '1'
      versions: '1'
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: explicit
  endpoint:
    path: /v2/resources/explicit
    method: POST
    data_selector: result
    params:
      type: private
- name: update_asset
  endpoint:
    path: /resources/image/upload
    method: POST
    data_selector: resource
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: data
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1_1/<cloud_name>/resources
    method: GET
    data_selector: resources
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: add_related_assets
  endpoint:
    path: /v1_1/<cloud_name>/resources/related_assets/image/upload/dog
    method: POST
    data_selector: assets_to_relate
- name: delete_related_assets
  endpoint:
    path: /v1_1/<cloud_name>/resources/related_assets/image/upload/dog
    method: POST
    data_selector: assets_to_unrelate
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: related_assets
  endpoint:
    path: /resources/raw/upload/<public_id>
    method: GET
    data_selector: related_assets
- name: search
  endpoint:
    path: /resources/search
    method: POST
    data_selector: resources
- name: image
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
    params: {}
- name: video_transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /visual_search
    method: GET
    data_selector: resources
- name: visual_search
  endpoint:
    path: /v1_1/<cloud_name>/resources/visual_search
    method: GET
    data_selector: resources
    params: {}
- name: image_transformation
  endpoint:
    path: /v1/image/transformation
    method: GET
    data_selector: resources
- name: video_transformation
  endpoint:
    path: /v1/video/transformation
    method: GET
    data_selector: resources
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notification
    params: {}
- name: upload_tags
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: null
    params:
      tags: shoes
- name: manage_tags
  endpoint:
    path: /v1_1/demo/image/tags
    method: POST
    data_selector: null
    params:
      command: add
- name: resources_by_tag
  endpoint:
    path: /admin_api/get_resources_by_tag
    method: GET
    data_selector: null
    params:
      tag: shoes
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notification_type
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: results
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: results
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: records
- name: image_transformations
  endpoint:
    path: /v1_1/<cloud_name>/image/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/<cloud_name>/video/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: notification_type
    params: {}
- name: metadata_fields
  endpoint:
    path: /metadata_fields
    method: GET
    data_selector: fields
    params: {}
- name: metadata_field_by_external_id
  endpoint:
    path: /metadata_fields/:external_id
    method: GET
    data_selector: field
    params: {}
- name: create_metadata_field
  endpoint:
    path: /metadata_fields
    method: POST
    data_selector: field
    params: {}
- name: update_metadata_field
  endpoint:
    path: /metadata_fields/:external_id
    method: PUT
    data_selector: field
    params: {}
- name: delete_metadata_field
  endpoint:
    path: /metadata_fields/:external_id
    method: DELETE
    data_selector: field
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1_1/<cloud_name>/resources
    method: GET
    data_selector: resources
    params:
      type: upload
- name: metadata_rules
  endpoint:
    path: /metadata_rules
    method: GET
    data_selector: rules
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: result_structure
  endpoint:
    path: /result_structure
    method: GET
    data_selector: results
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: extended_quality_analysis
  endpoint:
    path: /extended_quality_analysis
    method: GET
    data_selector: quality_analysis
- name: quality_analysis_upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: ''
    params:
      quality_analysis: 'true'
- name: quality_analysis_explicit
  endpoint:
    path: /v1_1/cld-docs/image/explicit
    method: POST
    data_selector: ''
    params:
      type: upload
      quality_analysis: 'true'
- name: update_resources
  endpoint:
    path: /v1_1/<cloud_name>/resources/image/upload/table
    method: POST
    data_selector: ''
    params:
      type: upload
      quality_analysis: 'true'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_data
  endpoint:
    path: /image/upload
    method: GET
    data_selector: asset_id
- name: upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: ''
    params:
      media_metadata: 'true'
      colors: 'true'
      phash: 'true'
- name: explicit
  endpoint:
    path: /v1_1/demo/image/explicit
    method: POST
    data_selector: ''
    params:
      type: upload
      public_id: couple1
      media_metadata: 'true'
      colors: 'true'
      phash: 'true'
- name: update_resources
  endpoint:
    path: /v1_1/<cloud_name>/resources/image/upload/table
    method: POST
    data_selector: ''
    params:
      type: upload
      media_metadata: 'true'
      colors: 'true'
      phash: 'true'
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: transformations
  endpoint:
    path: /v1/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: image_transformations
  endpoint:
    path: /image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /video_transformations
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image_transformations
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: records
    params: {}
- name: video_transformations
  endpoint:
    path: /video/transformation
    method: GET
    data_selector: records
    params: {}
- name: ai_vision_moderation
  endpoint:
    path: /analyze/ai_vision_moderation
    method: POST
    data_selector: data
    params: {}
- name: captioning
  endpoint:
    path: /analyze/captioning
    method: POST
    data_selector: data
    params: {}
- name: shop_classifier
  endpoint:
    path: /analyze/shop_classifier
    method: POST
    data_selector: data
    params: {}
- name: ai_vision_general
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/ai_vision_general
    method: POST
    data_selector: data
    params: {}
- name: ai_vision_moderation
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/ai_vision_moderation
    method: POST
    data_selector: data
    params: {}
- name: ai_vision_tagging
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/ai_vision_tagging
    method: POST
    data_selector: data
    params: {}
- name: captioning
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/captioning
    method: POST
    data_selector: data
    params: {}
- name: cld_fashion
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/cld_fashion
    method: POST
    data_selector: data
    params: {}
- name: cld_text
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/cld_text
    method: POST
    data_selector: data
    params: {}
- name: coco
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/coco
    method: POST
    data_selector: data
    params: {}
- name: google_logo_detections
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/google_logo_detections
    method: POST
    data_selector: data
    params: {}
- name: google_tagging
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/google_tagging
    method: POST
    data_selector: data
    params: {}
- name: human_anatomy
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/human_anatomy
    method: POST
    data_selector: data
    params: {}
- name: image_quality
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/image_quality
    method: POST
    data_selector: data
    params: {}
- name: lvis
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/lvis
    method: POST
    data_selector: data
    params: {}
- name: shop_classifier
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/shop_classifier
    method: POST
    data_selector: data
    params: {}
- name: unidet
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/unidet
    method: POST
    data_selector: data
    params: {}
- name: watermark_detection
  endpoint:
    path: /v2/analysis/<cloud_name>/analyze/watermark_detection
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asset_management
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/transforms
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/transforms
    method: GET
    data_selector: transformations
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /images
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
    params: {}
- name: images
  endpoint:
    path: /image/upload
    method: GET
    data_selector: images
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: data
    params: {}
- name: media
  endpoint:
    path: /media/v1/assets
    method: GET
    data_selector: assets
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: delete_backed_up_versions
  endpoint:
    path: /v1_1/<cloud_name>/resources/backup/<resource_id>
    method: DELETE
- name: restore_deleted_assets
  endpoint:
    path: /v1_1/<cloud_name>/resources/image/upload/restore
    method: POST
- name: download_backup
  endpoint:
    path: /v1_1/<cloud_name>/download_backup
    method: GET
- name: get_details_of_asset_versions
  endpoint:
    path: /v1_1/<cloud_name>/resources/image/upload/<public_id>
    method: GET
    params:
      versions: true
- name: deleted_assets
  endpoint:
    path: /media-library/assets/deleted
    method: GET
    data_selector: assets
    params: {}
- name: version_history
  endpoint:
    path: /media-library/assets/{asset_id}/version-history
    method: GET
    data_selector: versions
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: explicit_method
  endpoint:
    path: /explicit_method
    method: POST
- name: rename_method
  endpoint:
    path: /rename_method
    method: POST
- name: admin_api_config
  endpoint:
    path: /config
    method: GET
- name: resources_by_asset_folder
  endpoint:
    path: /get_resources_by_asset_folder
    method: GET
- name: update_method
  endpoint:
    path: /update_method
    method: POST
- name: search_method
  endpoint:
    path: /search_method
    method: GET
- name: upload_presets
  endpoint:
    path: /upload_presets
    method: POST
- name: upload_mappings
  endpoint:
    path: /upload_mappings
    method: POST
- name: folders_methods
  endpoint:
    path: /folders
    method: GET
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: user_provisioning
  endpoint:
    path: /documentation/user_provisioning
    method: GET
    data_selector: user_provisioning_data
- name: usage_data
  endpoint:
    path: /documentation/programmable_media_asset_usage_data
    method: GET
    data_selector: usage_data
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: search_assets
  endpoint:
    path: /v1_1/<cloud_name>/resources/visual_search
    method: GET
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: personalized_banners
  endpoint:
    path: /image/upload
    method: GET
    data_selector: banners
    params: {}
- name: animated_media
  endpoint:
    path: /video/upload
    method: GET
    data_selector: animations
    params: {}
- name: ugc_assets
  endpoint:
    path: /delete_temporary_ugc_assets
    method: DELETE
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
- name: media_assets
  endpoint:
    path: /resources/media
    method: GET
    data_selector: assets
    params:
      search_expression: created_at < 1d AND tags:ugc-content
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: upload_image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: result
- name: get_asset_info
  endpoint:
    path: /v1_1/{cloud_name}/resources/image/upload/{public_id}
    method: GET
    data_selector: result
- name: image
  endpoint:
    path: /v1/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: asset
  endpoint:
    path: /api/resource
    method: GET
    data_selector: result
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: delete_assets
  endpoint:
    path: /v1/delete_assets
    method: DELETE
    data_selector: results
- name: upload_images
  endpoint:
    path: /v1/upload_images
    method: POST
    data_selector: results
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformations
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: resources
    params: {}
- name: Upload API
  endpoint:
    path: /upload
    method: POST
    data_selector: result
- name: Admin API
  endpoint:
    path: /admin
    method: GET
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /api/resource
    method: GET
    data_selector: asset
    params: {}
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: upload_image
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: get_asset_details
  endpoint:
    path: /asset
    method: GET
    data_selector: response
- name: transform_image
  endpoint:
    path: /transform
    method: GET
    data_selector: response
- name: asset_management
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /video_transformations
    method: GET
    data_selector: transformations
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
- name: video_transformation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: transformations
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: Upload API
  endpoint:
    path: /upload
    method: POST
- name: Admin API
  endpoint:
    path: /admin
    method: GET
- name: assets
  endpoint:
    path: /v1_1/<cloud_name>/resources
    method: GET
    data_selector: resources
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: asset
    params: {}
- name: asset
  endpoint:
    path: /resources/asset
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: asset_management
  endpoint:
    path: /documentation/managing_assets
    method: GET
    data_selector: records
- name: transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /video_api/vXX.X/videos
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: records
    params: {}
- name: upload_image
  endpoint:
    path: /v1_1/<CLOUD_NAME>/upload
    method: POST
    data_selector: result
    params:
      overwrite: true
      unique_filename: false
- name: get_image_details
  endpoint:
    path: /v1_1/<CLOUD_NAME>/resources/image/upload
    method: GET
    data_selector: resource
    params:
      quality_analysis: true
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: result
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /video/
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image/
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
- name: video_transformations
  endpoint:
    path: /video/upload
    method: GET
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/upload
    method: POST
    data_selector: resource
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: result
- name: destroy
  endpoint:
    path: /v1_1/{cloud_name}/destroy
    method: POST
    data_selector: result
- name: asset
  endpoint:
    path: /api/v1/resources/sample
    method: GET
    data_selector: result
- name: Image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: Video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /media
    method: GET
    data_selector: records
    params: {}
- name: Image transformations
  endpoint:
    path: /documentation/image_transformations
    method: GET
    data_selector: records
- name: Video transformations
  endpoint:
    path: /documentation/video_transformations
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: response
    params:
      api_key: API_KEY
      api_secret: API_SECRET
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: upload_response
    params:
      public_id: coffee
      unique_filename: false
      overwrite: true
- name: resource
  endpoint:
    path: /resources
    method: GET
    data_selector: resource_details
    params:
      faces: true
- name: assets
  endpoint:
    path: /v1_1/<cloud_name>/resources
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: data
    params: {}
- name: asset_management
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: response
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: Post
  endpoint:
    path: /migrator
    method: POST
    data_selector: results
    params: {}
- name: video_transformation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: video
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video_transformation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: transformation
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /resource/sample
    method: GET
    data_selector: asset_id
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: picture
  endpoint:
    path: /upload
    method: POST
    data_selector: resource
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: picture
  endpoint:
    path: /v1/pictures
    method: POST
    data_selector: data
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloudinary
  endpoint:
    path: /config/storage.yml
    method: POST
    data_selector: service
    params: {}
- name: active_storage
  endpoint:
    path: /config/environments/development.rb
    method: POST
    data_selector: active_storage.service
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
    params: {}
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: response
- name: upload_large
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: response
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
- name: image_transformations
  endpoint:
    path: /image/upload
    method: POST
- name: assets
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: video_transformation_example_1
  endpoint:
    path: /video/transformation/example_1
    method: POST
- name: video_transformation_example_2
  endpoint:
    path: /video/transformation/example_2
    method: POST
- name: video_transformation_example_3
  endpoint:
    path: /video/transformation/example_3
    method: POST
- name: video_transformation_example_4
  endpoint:
    path: /video/transformation/example_4
    method: POST
- name: video_transformation_example_5
  endpoint:
    path: /video/transformation/example_5
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
- name: admin
  endpoint:
    path: /admin
    method: GET
    data_selector: result
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: upload_image
  endpoint:
    path: /v1_1/<cloud-name>/image/upload
    method: POST
    data_selector: secure_url
- name: get_asset_info
  endpoint:
    path: /v1_1/<cloud-name>/resources/image/upload/quickstart_butterfly
    method: GET
    data_selector: resource
- name: transform_image
  endpoint:
    path: /v1_1/<cloud-name>/image/upload/quickstart_butterfly
    method: POST
    data_selector: secure_url
- name: image
  endpoint:
    path: /services/image/v1
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/video/v1
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: response
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: transformations
  endpoint:
    path: /v1/transformations
    method: GET
    data_selector: resources
    params: {}
- name: asset_management
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: secure_url
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: video_transformation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: transformation
    params: {}
- name: video_concatenation
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformed_video
    params: {}
- name: video_trimming
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformed_video
    params: {}
- name: video_overlays
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformed_video
    params: {}
- name: video_effects
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformed_video
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: admin
  endpoint:
    path: /admin
    method: GET
- name: asset
  endpoint:
    path: /admin/Asset
    method: GET
    data_selector: struct
    params:
      PublicID: sample
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: video_overlay
  endpoint:
    path: /video/upload
    method: GET
    data_selector: myURL
- name: video_concat
  endpoint:
    path: /video/upload
    method: GET
    data_selector: myURL
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: data
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: data
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: transformations
  endpoint:
    path: /transformations
    method: GET
    data_selector: transformations
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/auto/upload
    method: POST
    data_selector: url
    params: {}
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: upload_image
  endpoint:
    path: /v1_1/<cloud_name>/image/upload
    method: POST
    data_selector: data
    params:
      publicId: quickstart_butterfly
      uniqueFilename: false
      overwrite: true
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /resources/video/upload
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video_transformation
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformation
- name: images
  endpoint:
    path: /image/upload
    method: GET
    data_selector: assets
    params: {}
- name: videos
  endpoint:
    path: /video/upload
    method: GET
    data_selector: assets
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: transformations
  endpoint:
    path: /transformations
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1/resources/image
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
- name: image_transform
  endpoint:
    path: /image/upload
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: transformations
  endpoint:
    path: /v1/transformations
    method: GET
    data_selector: transformations
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /video
    method: GET
    data_selector: records
    params: {}
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformed_image_url
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: url
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image_optimization
  endpoint:
    path: /image/optimization
    method: GET
    data_selector: records
- name: background_removal
  endpoint:
    path: /background/removal
    method: GET
    data_selector: records
- name: drop_shadow
  endpoint:
    path: /drop_shadow
    method: GET
    data_selector: records
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /video
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformation
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: response
    params: {}
- name: transformations
  endpoint:
    path: /v1_1/{cloud_name}/transformations
    method: GET
    data_selector: response
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
- name: image_upload
  endpoint:
    path: /v1_1/demo/image/upload
    method: POST
    data_selector: response
- name: image_transform
  endpoint:
    path: /v1_1/demo/image/upload/c_fill,h_250,w_250/docs/models
    method: GET
    data_selector: response
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformed_image
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image_data
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: videos
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: records
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: video
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: video
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: resource
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformed_image
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
- name: image_optimization
  endpoint:
    path: /image/upload
    method: GET
    data_selector: records
- name: plugins
  endpoint:
    path: /plugins
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: asset_management
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: upload
  endpoint:
    path: /v1/upload
    method: POST
    data_selector: upload_result
    params: {}
- name: video_transformations
  endpoint:
    path: /video/upload
    method: GET
    data_selector: videos
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: video
- name: video_transformation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: url
    params: {}
- name: assets
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /upload
    method: POST
    data_selector: resources
    params:
      public_id: docs/models
- name: image
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
- name: video
  endpoint:
    path: /resources/video
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image_transformation
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: url
- name: image_transformation
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: records
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: images
  endpoint:
    path: /v1/resources/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/resources/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: resource
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resource
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: result
- name: image_transformations
  endpoint:
    path: /image/transformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /video/transformations
    method: GET
    data_selector: records
- name: image_transformations
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: image_transformation
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: transformation
- name: text_overlay
  endpoint:
    path: /text/overlay
    method: GET
    data_selector: overlay
- name: image_optimization
  endpoint:
    path: /image/optimization
    method: GET
    data_selector: optimization
- name: responsive_image_settings
  endpoint:
    path: /responsive/image/settings
    method: GET
    data_selector: responsive_settings
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: video
    params: {}
- name: image_transformations
  endpoint:
    path: /image/upload
    method: POST
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /video/upload
    method: POST
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /c_pad,du_10,h_360,q_70,w_480/dog
    method: GET
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: image
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/image/upload
    method: POST
    data_selector: resource
    params: {}
- name: video
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/video/upload
    method: POST
    data_selector: resource
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params:
      type: upload
- name: AdvancedImage
  endpoint:
    path: /advanced/image
    method: GET
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /v1_1/${cloudName}/upload
    method: POST
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: image_transformation
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: video_data
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: advanced_image
  endpoint:
    path: /services/advanced_image
    method: GET
    data_selector: plugins
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Cloudinary API requires setup of a cloud account and connected app to use OAuth2.
- Generative fill can only be used on non-transparent images.
- There is a special transformation count for the background removal effect.
- When Cloudinary is generating a derived version, you may get a 423 response returned
  until the version is ready.
- When Cloudinary is generating an incoming transformation, you may get a 420 response
  returned, with status pending until the asset is ready.
- The background removal transformation imposes a limit of 6144 x 6144 pixels on its
  input images.
- Background removal on the fly isn't supported for fetched images.
- The generative remove effect can only be used on non-transparent images.
- The use of generative AI means that results may not be 100% accurate.
- The generative remove effect works best on simple objects that are clearly visible.
- Very small objects and very large objects may not be detected.
- Don't attempt to remove faces or hands.
- During processing, large images are downscaled to a maximum of 6140 x 6140 pixels,
  then upscaled back to their original size, which may affect quality.
- Uses OAuth2 with refresh token – requires setup of a connected app in Cloudinary
- Some objects like Contact may return nulls in deeply nested fields
- Requires API key and secret to be set in environment variables
- Uses OAuth2 with refresh token - requires setup of connected app in Cloudinary
- Requires setup of connected app in api
- It's considered best practice to validate and sanitize any user-provided input before
  including it in Cloudinary API calls.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some accounts may still see the legacy add-ons page under Settings > Add-ons instead.
  Those accounts will be gradually upgraded to the new Add-on Marketplace over time.
- Learn more in the Cloudinary 3D Documentation
- Explore the Cloudinary 3D API for interacting with Cloudinary 3D programmatically.
- Requires setup of Cloudinary account and app credentials
- Requires setup of Cloudinary account and API configuration
- Requires setup of connected app in Cloudinary
- AI-powered APIs to automate image and video management, transformation and optimized
  delivery at scale
- Uses OAuth2 with refresh token — requires setup of connected app in Cloudinary
- Uses OAuth2 with refresh token - requires setup of connected app in API
- Ensure correct setup of credentials in the secrets.
- You need to register for a free Cloudinary account to obtain API credentials.
- It is recommended to customize your cloud name for SEO purposes.
- Some image transformations may have limitations
- Requires setup of Cloudinary account with valid credentials
- Rate limits apply to API requests
- Some operations may have rate limits
- MCP servers and LLM tools (Beta)
- Optimization is just the tip of the iceberg of what you can do with Cloudinary URL
  API parameters.
- Each transformation component is applied to the result of the previous component.
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token - requires setup of connected app in api
- Setup required for cloudinary account
- Cloudinary offers several AI-based options for smart resizing and cropping.
- Make sure to replace YOUR_CLOUD_NAME with your actual cloud name.
- Some resources may have additional metadata
- Uses OAuth2 with refresh token.
- Uses API key for authentication.
- Setup and configuration documentation available for various SDKs and integrations
- Uses OAuth2 with refresh token – requires setup of connected app in api
- Requires API key and secret for access
- Rate limits apply based on account type
- API may have rate limits on certain endpoints.
- API requires setup of credentials in Cloudinary dashboard
- Some resources may return nulls in deeply nested fields
- Requires setup of connected app in Cloudinary.
- Uses OAuth2 with refresh token — requires setup in Cloudinary
- Some endpoints may require additional parameters depending on the request
- Uses OAuth2 with refresh token, requires setup of connected app in Cloudinary
- Requires API key and secret for authentication
- Ensure proper permissions for assets
- Requires setup of API credentials in the Cloudinary console.
- Uses OAuth2 with refresh token — requires setup of connected app in Cloudinary.
- Requires API key for access
- Requires setup of a Cloudinary account and connected apps for API access.
- You should never expose Your API secret in client-side code or in any other way
  outside your organization.
- Cloudinary uses Amazon's Simple Storage Service (S3) for asset management and storage.
- Requires setup of Cloudinary account and obtaining credentials
- Requires setup of connected app in Cloudinary API
- Uses API key for authentication
- Rate limits apply to API calls
- Ensure correct setup of OAuth2 credentials.
- Auto-upload feature for lazy migration of media files.
- The auto-upload feature allows mapping a remote URL to a folder in Cloudinary.
- Upload presets can be used to define automatic upload actions.
- Test your script and run scripts on a test product environment first.
- Decide on a Backup and Overwrite policy. Set it explicitly in your migration script.
- Store the responses of all API calls in a database, useful for troubleshooting.
- Take note of public ID naming limitations, especially if also including the `use_filename`
  parameter, and validate for duplicate public IDs.
- Ensure to set up your Cloudinary account and obtain necessary credentials.
- Uses OAuth2 with refresh token
- API key and secret are auto-generated and should be kept secret.
- Requires setup of Cloudinary account and connected app.
- Ensure API key is kept secure.
- Some API responses may vary based on account settings
- Uses OAuth2 for authentication
- Some transformations may require additional parameters
- Some assets may return nulls in deeply nested fields
- Many optimization and responsive features are applied using transformation parameters
  in the transformation component of the URL, and as such, are counted as transformations
  in terms of your pricing plan.
- 'To reduce the chances of malware or other potentially harmful files being distributed
  via the Cloudinary domain, the following file formats are, by default, blocked for
  delivery for FREE accounts: ZIP, RAR, TAGZ, and other archive formats, PDF.'
- Requires API key and secret for access.
- These methods create new assets in your product environment.
- Cloudinary uses OAuth2 with a refresh token.
- Ensure to set up the connected app correctly.
- Ensure to set up your cloud name in the base URL.
- Cloudinary supports only the documented configuration and the supplied files with
  the video player.
- The version numbers used above are the latest tested versions at the time of publishing
  this page. It's recommended to test the latest available versions of the video player
  and update the version numbers in your code accordingly.
- Ensure to set up your Cloudinary account and obtain the necessary credentials.
- The possible values for maxres refer to the shorter edge of the video.
- When setting maxres to 2160p for 4K output or 1440p for 2K, the processing of all
  renditions is asynchronous.
- The fl_alternate flag is not currently supported by our SDKs.
- All audio tracks must be added as a layer, including the original track, otherwise
  the first audio layer will be used as the default.
- e_volume:auto is specific to videos delivered with sp_auto.
- Currently, this is the only volume option that you can use with sp_auto.
- Subtitles for HLS videos are only supported as part of the URL transformation string.
- For small videos, where all of the derived files combined are less than 60 MB, you
  can deliver the transformation URL on the fly, but this should be used only for
  demo or debugging purposes.
- By default, video sampling is per 2 seconds.
- Requires setup of Cloudinary account and connection to API
- You must be using a version of the Cloudinary video player that is later than `1.9.9`.
- The Video Analytics API is currently not supported by our SDKs, but you can make
  a direct call to the API.
- The expressions parameter is used to limit the results based on a set of provided
  conditions.
- All fields except `video_public_id` and `view_ended_at` can be queried for null
  values.
- Some endpoints may have specific query parameters
- Only one HLS output can be defined per stream.
- Only one archive output can be defined per stream.
- The new stream will be created in an idle state.
- Using the idle_timeout_sec option to end your stream results in a black screen for
  the duration of the defined timeout period.
- Requires OAuth setup for integration
- Uses OAuth2 with refresh token requiring setup of connected app in Cloudinary.
- Ensure to replace YOUR_CLOUD_NAME with your actual Cloudinary cloud name.
- Short-form videos are the most popular content for most platforms, with videos typically
  ranging from a few seconds to a couple of minutes.
- Vertical video formats (9:16) have become the norm.
- Cloudinary offers automatic video optimization features.
- Specifying the file to upload is required for all uploads
- Amazon S3 bucket names containing a `.` character are not supported for this purpose
- API requires authentication via OAuth2.
- Ensure valid token for requests.
- Assets can be uploaded as private or authenticated via the type parameter.
- Public ID values can't begin or end with a space or forward slash (`/`).
- For `raw` asset types only, the file extension *should* be specified as part of
  the public_id.
- The eval parameter accepts a string of up to 4095 characters with the JavaScript
  code to be evaluated.
- When using the eval parameter code exceeds the 4095-character limit, store it externally
  as a raw authenticated file.
- For security reasons, the upload preset used in this example sets the access control
  mode of the uploaded assets to restricted.
- Requires API key and secret for authentication.
- The Admin API is rate-limited, which means you can make up to 500 requests per hour
  on our Free plan.
- You can make unlimited requests to the upload API.
- Use the Upload API for rate-limited methods of managing assets.
- The Admin API offers bulk management features.
- Requires setup of cloudinary account and API keys
- 'Available features vary by plan: Free, Paid, Enterprise.'
- Assets are managed through the Media Library interface.
- Assets Enterprise plans can manage more than 10 metadata fields
- Some API methods may have rate limits
- Requires setup of a Cloudinary account and application.
- Some operations may have rate limits.
- Even for still WebP images, the animated WebP flag is required, to match the parameter
  replacement performed on the CDN.
- Eager transformations are generated in addition to the originally uploaded asset.
- New derived assets are created if the URL differs in any way.
- Uses OAuth2 with refresh token â€” requires setup of connected app in Cloudinary
- Some API calls may have rate limits
- Requires authentication with client ID and secret
- Rate limits may apply
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Some objects like Video may return nulls in deeply nested fields
- Requires setup of API credentials in Cloudinary dashboard.
- Enable required add-ons for advanced analysis features.
- Remember to replace the comments after the first run.
- You can configure up to 10 notification URLs per product environment.
- You can manage webhook notifications either from the Webhook Notifications page
  of the Console or using the triggers method of the Admin API.
- If you would like to include the initiating client IP Address in the response sent
  to your notification, please contact us.
- 'Check the signature calculation: Make sure your signature calculation is accurate.
  This is crucial for webhook success.'
- 'Ensure JSON payload is stringified correctly: JSON payload stringifying can encounter
  problems like data loss, invalid JSON, and character encoding mismatches.'
- 'Standardize hash methods: When different cloud platforms use different methods
  for securing webhook data, it can cause signature mismatches, leading to webhook
  failure.'
- 'Avoid notification overload: Ensure your server can handle the volume of notifications,
  especially when there are numerous uploads.'
- 'Follow HTTP header specifications: Ensure HTTP headers are treated as case-insensitive
  according to the HTTP V2 specification.'
- 'Monitor endpoint logs: Regularly check endpoint logs for 500 errors to identify
  issues with processing Cloudinary notifications.'
- On product environments using the legacy fixed folder mode, asset_folder and display_name
  keys are also not included in the response.
- Some transformations may have specific requirements
- Requires a valid Cloudinary account to access the API.
- Some endpoints may have rate limits.
- Requires setup of cloudinary account and connected app
- Ensure connected app is set up in Cloudinary
- Ensure to replace {cloud_name} with your actual Cloudinary cloud name
- To find out which roles grant permission to access each setting, see Role-based
  permissions.
- Your account API secret is used for authentication and should never be exposed in
  client-side code or in any other way outside your organization.
- Requires setup of a Cloudinary account and API keys.
- Starting June 4th, 2024, all new Cloudinary accounts are created using dynamic folder
  mode.
- Historically, Cloudinary accounts used fixed folder mode.
- Ensure to configure the API keys properly.
- Ensure to replace YOUR_CLOUD_NAME with the actual cloud name.
- Some media types may return nulls in deeply nested fields
- Provisioning API access is available for accounts on an Enterprise plan.
- Paid customers can also manage users via a script, using the Provisioning API.
- If your account has SAML (SSO) login enabled and you use the Media Library Widget
  or one of our Integrations, you must whitelist the domain `console.cloudinary.com`.
- If you also use the SAML Provisioning feature, make sure the Two-Factor Authentication
  user setting (2FA) is Disabled.
- The two-factor authentication (2FA) user setting is ignored when using SAML login
  to log in to Cloudinary, as the SSO IdP is trusted.
- Even if you set Enforce SAML login to Enabled, any user created with the Master
  admin role will automatically get an invitation to set a Console password and will
  be able to log in directly to the Console, if needed.
- Ensure to set the Referrer-Policy header appropriately to allow Cloudinary to see
  the full URL of the referring page.
- Error reports are supported for accounts on the Advanced plan or higher.
- Your pricing plan is impacted by storage and bandwidth usage.
- Usage limits for uploading, transforming and delivering files depend on your Cloudinary
  plan.
- The transformation count for AVIF files, and other formats converted to AVIF, is
  based on the transformed (derived) image size.
- Most web-based displayed images should be less than 2 MP (2 MP is, for example,
  1600 × 1250 pixels), so should not incur extra transformation costs.
- Moderation and analysis can be invoked as part of the upload flow.
- Uses auto transcription feature for generating subtitles.
- User-generated content is optimized for delivery across devices.
- Some API calls may have limits on the number of requests
- Moderation confidence level should be set between 0.0 and 1.0.
- Subscribe to the Cloudinary AI Content Analysis add-on for watermark detection.
- Ensure to set the detection parameter when uploading images.
- Create an unsigned upload preset called 'try-before-buy'.
- The upload preset must match the uploadPreset parameter used in the Upload API call.
- Uses API key authentication
- Rate limits apply to API usage
- Some of the features require you to register for an add-on. Once registered, you
  can try them out for free.
- Various add-ons available for advanced content analysis and moderation.
- Supports various image formats like HEIC, WebP, AVIF.
- Full support for automatic format selection was added to recent versions of the
  mobile SDKs.
- Some endpoints may have rate limits
- Requires setup of Cloudinary account and API keys
- Requires OAuth2 setup for API access
- Most add-ons provide a Free plan with a small monthly quota.
- Paid add-on plans with a larger monthly quota require a Cloudinary account on a
  paid plan.
- Some API calls may return paginated results
- As of June 30th 2023, Azure AI Services will be retiring facial recognition capabilities
  that can be used to try to infer emotional states and identity attributes.
- Image transformation add-on URLs require signing by default.
- Requires setup of Cloudinary API credentials.
- Confidence levels must be provided as a decimal number between 0.0 and 1.0.
- Images must have a minimum height and width of 80 pixels.
- Use Cloudinary's Admin API to manually override the moderation result.
- Certain media types may have specific configurations
- Videos must have a minimum height and width of 80 pixels.
- The moderation status can be overridden via the Admin API.
- You can use upload presets to centrally define a set of upload options including
  add-on operations to apply.
- You can use upload presets to centrally define a set of upload options.
- Automatically categorizing images using Amazon Rekognition.
- The value of the auto_tagging parameter is between 0 and 1.0.
- The API requires specific configurations for document types.
- The Aspose add-on supports converting files up to 10 MB.
- Document conversion using the Aspose add-on is performed asynchronously in the background
  after the upload call is completed.
- Requires OAuth2 setup for authentication
- OAuth2 with refresh token requires setup in Cloudinary console
- The background removal transformation imposes a limit of 6144 x 6144 pixels on its
  input images. If an image exceeds this limit, the transformation first scales down
  the image to fit the limit, and then processes it. The scaling doesn't affect the
  aspect ratio of the image, but it does alter its output dimensions.
- This add-on is based on a combination of neural networks that were trained on a
  large dataset to create precise segmentation maps of salient objects.
- If you are not satisfied with the results of a background removal operation, you
  can try the Pixelz Remove the Background add-on.
- If you don't want the images to be backed up, contact support to apply a setting
  to your product environment that disables this specific backup.
- If your product environment does not have global backup configured and backup was
  not requested during the upload (either in the request or in the upload preset),
  then none of the images are backed up.
- If your product environment does have global backup configured, or backup was requested
  during the upload (either in the request or in the upload preset), then only the
  original image is backed up, and not the background-removed one.
- If you are using our Asia Pacific data center, currently you can use only the COCO
  and Open Images models.
- If you have difficulty accessing any of the models, please contact support.
- Delivery URLs that use this add-on either need to be signed or eagerly generated.
- When specifying an object or category, you can optionally include a specific model
  that supports bounding boxes.
- If you have any private models set up, these are invoked first.
- Image transformation URLs should be signed for dynamic URLs.
- Use asynchronous handling for calls that may not return immediately.
- Integration requires setup in Cloudinary dashboard.
- Quota is based on tokens, which are units of measurement for processing.
- Every response includes a limits node with the number of tokens used.
- AI Vision uses the Analyze API and doesn't require the image to be stored in your
  Cloudinary account.
- Requires proper setup of Cloudinary account and API credentials.
- Automatic image analysis is very accurate.
- Manual override can be done via the Media Library or Admin API.
- Cloudinary Duplicate Image Detection is currently in Beta.
- The add-on uses hashing algorithms to provide 'fingerprints' for selected images.
- API requires OAuth2 authentication for image and video management.
- Ensure proper scopes are set for the API client.
- By default, assets that are marked for moderation are deliverable and available
  via the Media Library.
- Uses OAuth2 with refresh token – requires setup of connected app in Cloudinary
- Some resources may have rate limits on access
- While Google's speech recognition artificial intelligence algorithm is very powerful,
  no speech recognition tool is 100% accurate.
- Requires account setup and API key generation.
- You can optionally request the category and tag results in another language by registering
  for the Google Translation Add-on.
- Some endpoints may have usage limits
- The video analysis and categorization is performed asynchronously after the method
  call is completed.
- The amount of time it takes for analysis and categorization of the video depends
  on the size and length of the video file itself.
- Requires setup of a Cloudinary account and connected app
- When using the Imagga Auto Tagging add-on, if you specify languages, it will use
  the built-in Imagga translation engine offered with that add-on.
- Some endpoints may have limitations on data retrieval
- Automatic image categorization and tagging features support multiple languages.
- You can run multiple categorization add-ons on the resource.
- The `categorization` parameter accepts a comma-separated list of all the Cloudinary
  categorization add-ons.
- Ensure to follow the best practices for media optimization.
- Uses Cloudinary's authenticated API for requesting Imagga cropping
- URLs for transformations require either signing or eager generation
- Some transformations may require additional parameters.
- Uses OAuth2 with refresh token for authentication.
- You can list assets with a particular status by specifying the second parameter
  of the resources_by_moderation API method.
- Requires an Azure account and Video Indexer resource setup.
- Ensure proper permissions are granted for API access.
- Requires valid Cloudinary credentials for API access.
- Microsoft Azure Video Indexer no longer supports categorization based on celebrity
  faces.
- The analysis and categorization is performed asynchronously after the method call
  is completed.
- The azure_video_indexer parameter value activates a call to the Microsoft Azure
  Video Indexer API, which is performed asynchronously after your original method
  call is completed.
- Requires a Cloudinary account and API key setup.
- No OCR mechanism can identify 100% of the text in all images. The results may be
  affected by things like font, color, contrast between text and background, text
  angle, and more.
- The OCR engine requires images with a minimum resolution of 1024 X 768.
- Delivery URLs using this add-on need to be signed or eagerly generated.
- The Pixelz - Remove the Background add-on is only free-to-try for Cloudinary paid
  accounts.
- Background removal can take up to 24 hours.
- By default, delivery URLs that use this add-on either need to be signed or eagerly
  generated.
- Screenshot creation can be mixed with Cloudinary's image transformation capabilities.
- Visual enhancement using the VIESUS™ add-on can be mixed with any of Cloudinary's
  rich set of image transformation capabilities.
- Ensure to replace {cloud_name} with your actual cloud name
- This API rate limit refers only to Admin API requests, and not to requests that
  use the Upload API.
- Not supported for product environments using the legacy fixed folder mode.
- The `access_mode` parameter is no longer supported. To restrict access to assets,
  you can use the `access_control` parameter.
- 'Cloudinary implements eventual consistency: Search results reflect any changes
  made to assets within a few seconds after the change.'
- Visual Search is only available to Enterprise customers.
- Only images that have already been indexed for visual search are included in the
  results.
- 'The date for the usage report must be within the last 3 months and specified in
  the format: yyyy-mm-dd.'
- Requires Cloudinary account and API key setup.
- The Analyze API is currently in development and is available as a Public Beta.
- The analysis options require an active subscription to the relevant add-on.
- Some fields may return nulls in deeply nested structures
- Requires setup of Cloudinary account and API keys.
- Requires setup of Cloudinary account and API Key
- API keys required for authentication.
- Some API responses may contain large datasets
- The widget uses the HTTPS protocol.
- Cloudinary recommends setting a limit for maxFiles.
- Requires setup of connected app in cloudinary
- Some responses may contain nulls in deeply nested fields
- Requires setup of a connected app in Cloudinary.
- Some resources may return nulls in deeply nested fields.
- Standard HTML5 autoplay behaves differently on different browsers and devices.
- Default transformations for videos are applied automatically.
- When using raw URLs, you must include the cloud name of the relevant Cloudinary
  product environment when creating your video player instance to support video analytics
  data.
- Any transformations included in the URL will overwrite any defined using the options
  parameter.
- When using Cloudinary through a PaaS add-on, such as Heroku, the CLOUDINARY_URL
  environment variable is automatically defined in your deployment environment.
- Cloudinary requires an API key for access.
- Follow your organization's policy on storing secrets and don't expose your API secret.
- Ensure proper OAuth setup to avoid common authentication issues.
- Ensure to set CLOUDINARY_URL environment variable before using the SDK.
- The default value of the optional secure configuration parameter is false. It is
  recommended to configure it to true.
- OAuth2 with refresh token required for API access.
- Uses API key and secret for authentication.
- The default value of the optional `secure` configuration parameter is `false`. However,
  for most modern applications, it's recommended to configure the `secure` parameter
  to `true`.
- Requires authentication setup in Cloudinary
- Your cloud_name is required to create an instance of the Cloudinary class.
- Most transformations can be passed as parameters using Cloudinary's new action based
  syntax with enhanced code autocomplete.
- Uses OAuth2 with refresh token — requires setup of connected app in API.
- Some objects may return nulls in deeply nested fields.
- Configuration parameters should be specified in camelCase, for example cloudName.
- Some transformations may have limitations based on the media type
- If you're not using standalone components, then you'll need to import the CloudinaryModule
  in app.module.ts instead.
- The `@cloudinary/url-gen` package simplifies the generation of transformation URLs
- The Cloudinary Angular library provides plugins to render the media on your site
  in the optimal way
- Cloudinary MCP Servers and LLM-friendly docs make building with AI faster, smarter,
  and more accessible to developers and builders.
- Setup of connected app in Cloudinary is required.
- Specify the configuration parameters in camelCase, for example cloudName.
- Requires setup of Cloudinary account and connected app for OAuth2.
- Most functionality implemented on the client side does not require authentication,
  so only your cloud_name is required to be configured.
- Your API secret should never be exposed on the client side.
- Requires API key for authentication.
- Uses OAuth2 with refresh token - requires setup of connected app in Cloudinary.
- Some resources may have rate limits
- Most functionality implemented on the client side does not require authentication,
  so only your `cloud_name` is *required* to be configured.
- Most functionality implemented on the client side does not require authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- Setup of connected app in API is required.
- Requires setup of connected app in API
- Some operations may require additional permissions
- The React Native SDK has a dependency on the Expo module.
- Requires configuration of your Cloudinary account with API keys.
- Seamlessly integrates Cloudinary's media file management services into Drupal websites.
- Uses OAuth2 with refresh token — requires setup of connected app in cloudinary
- Supports PDF files up to 10 pages or 5 MB.
- New Console experience launched, gradually migrating accounts to the new App Console.
- Media Explorer will be gradually removed from existing accounts.
- Requires setup of a Cloudinary account and API keys
- Make sure to set up your Cloudinary account properly
- Make sure you always know when we publish new release notes with the Programmable
  Media release notes RSS feed.
- The Live Streaming API is currently in Beta. Minor adjustments to parameters and
  implementation details may occur before the general release.
- Increased file upload limit to 100 GB
- To upload large files (above 20 GB), you must use one of the Cloudinary SDKs and
  set the async parameter to true on upload.
- Refer to the Cloudinary documentation for detailed usage and configuration.
- Generative recolor transformation is in Beta.
- Webhook endpoints can be created, updated, and deleted programmatically.
- Requires setup of Cloudinary account for API access
- Enterprise customers can restrict Cloudinary employee access to their data.
- Ensure that the uploaded files have the same tag by adding it to the upload call.
- Ensure proper configuration for authentication and permissions.
- Requires an unsigned upload preset for uploads.
- Make sure to set the Signing mode to unsigned in the Cloudinary Console.
- Uses OAuth2
- Requires setup of API keys in the Cloudinary dashboard
- Ensure to set up proper scopes for API access
- Requires API key and secret from the Cloudinary dashboard.
- Ensure proper configuration of connected app.
- Requires setup of OAuth2 credentials in your Cloudinary account.
- Client ID and secret required for OAuth setup.
- Nuxt Cloudinary automatically adds Automatic format selection and Automatic quality
  selection to your delivery URLs.
- OAuth2 with refresh token requires setup in Cloudinary console.
- Some objects like OptimizeImages may return nulls in deeply nested fields
- Uses API Key for authentication
- Refer to API documentation for specific integration requirements
- Requires setup of a Cloudinary account
- Cloudinary requires setup of account and API key.
- Ensure to replace YOUR_CLOUD_NAME with the actual cloud name in the token URL.
- Use your own cloud name instead of 'colbycloud-examples'.
- Rate limits apply to the API calls
- Some API endpoints may have rate limits
- Some API limits may apply based on account type
- Uses OAuth2 with refresh token - requires setup of Cloudinary application
- Some responses may include additional metadata
- Ensure correct cloud name is used in the base URL
- API requires setup of connected app in Cloudinary
- Requires OAuth2 authentication with refresh token.
- This page introduces you to image transformations that can be useful for social
  media.
- Requires setup of Cloudinary account
- API keys are required for authentication
- Uses OAuth2 with refresh token – requires setup of connected app in cloudinary
- Resizing images can lead to a reduction in image quality.
- Various cropping modes available including thumb, auto, and scale.
- To use the upscale effect, the input image must be smaller than 4.2 megapixels (the
  equivalent of 2048 x 2048 pixels).
- The upscale effect isn't supported for animated images or fetched images.
- When setting a DPR value, you must also include a crop/resize transformation specifying
  a certain width or height.
- OAuth2 requires setup of connected app in Cloudinary
- This page describes Cloudinary transformations that apply layers to a specified
  base image.
- c_fit (called textFit in the latest major version of some SDKs) is the only 'resize'
  option that can be used as a qualifier of text overlays.
- If you do limit the height of your overlay, any text that does not fit within the
  space defined is cut and an ellipsis (...) is added to the end of the text string
  to indicate that the text was truncated.
- May have limitations on file sizes
- Cloudinary provides various image effects and enhancements through simple syntax.
- Currently only the 'solid' border style is supported.
- When you use the vignette effect with PNG images, it usually blends seamlessly.
  But with other formats like JPEG, there could be a visible white background surrounding
  the vignette in areas where the image is transparent when displaying the image against
  a non-white background.
- For more details on perspective warping with the distort effect, see the article
  on how to dynamically distort images to fit your graphic design.
- Uses the `simulate_colorblind`, `assist_colorblind`, and `displace` effects for
  image transformations.
- Images with height or width exceeding 3000 pixels are automatically downscaled before
  rotation.
- Use PNG format for transparent backgrounds.
- The dropshadow effect is not supported for animated images, fetched images or incoming
  transformations.
- During processing, large images are downscaled to a maximum of 2048 x 2048 pixels,
  then upscaled back to their original size, which may affect quality.
- This transformation changes the image's visual appearance by adjusting only the
  alpha channel, which controls transparency.
- Default tint color is red at 60% strength.
- Equalizing colors redistributes the pixels in your image.
- You need to transform the original image to an animated image type by either changing
  the extension or using the format parameter.
- This is legacy functionality, kept for backward compatibility reasons.
- The transformation imposes a limit of 6144 x 6144 total pixels on its input images.
- Generative background replace is currently in Beta
- The use of generative AI means that results may not be 100% accurate
- The generative background replace effect isn't supported for animated images or
  fetched images
- Generative fill isn't supported for animated images or fetched images.
- If you get blurred results when using this feature, it is likely that the built-in
  NSFW check has detected something inappropriate.
- The generative recolor effect can only be used on non-transparent images.
- The generative recolor effect works best on simple objects that are clearly visible,
  and not abstract concepts such as 'background'.
- When you specify more than one prompt, all the objects specified in each of the
  prompts will be recolored whether or not 'multiple_true' is specified in the URL.
- The generative recolor effect isn't supported for animated images or fetched images.
- User-defined variables can't be used for the prompt when more than one prompt is
  specified.
- When Cloudinary is generating an incoming transformation, you may get a 420 response
  returned, with status 'pending' until the asset is ready.
- The generative replace effect can only be used on non-transparent images.
- Cloudinary provides face-detection algorithms for automatically applying transformations
  according to the detected faces within an image.
- Cloudinary does not provide built-in facial-recognition features.
- When gravity is set to one of the facial detection values and no face is detected
  in the image, then no overlay is placed at all.
- Some media types may have specific limitations
- Custom coordinates specified on the fly override any already specified for an image.
- On-the-fly custom coordinates can only be used for cropping, and not for overlays.
- Asynchronous transformations allow derived images of up to 500 frames to be generated.
- If your original GIF is longer than 100 frames, it will be truncated to 100 frames.
- Animated GIF converted to animated AVIF can provide over 90% byte savings.
- Animated GIF converted to animated WebP can provide between 64% byte savings (lossy
  WebP), to 19% byte savings (for lossless WebP).
- Converting from animated WebP or animated PNG to animated AVIF is not supported.
- Upload 3D models with the image asset type
- Ensure that the Allow delivery of PDF and ZIP files option is enabled in the Security
  page of your Console Settings
- Supports texture replacement for 3D models using swap_image effect.
- When you use variable or conditional expressions that include the tags, ctx or md
  parameters, their values are exposed publicly in the URL.
- For the `w`, `h`, `cp` and `ar` parameters, the values refer to the current image
  status in the transformation chain (i.e., if transformations have already been applied
  to the image), while `iw`, `ih`, `fc` and `pc` always refer to the original image.
- '`dpr` is not supported as a conditional transformation with the `cp` and `ar` characteristics.
  Additionally, `w` and `h` are supported with `dpr` as long as they are still equal
  to `iw` or `ih` when the condition is evaluated. If `dpr` is specified in the transformation
  as a whole, and one of the conditional branches includes a resizing transformation,
  you need to specify a resize transformation in all the other branches too.'
- The `ar` (aspect ratio) parameter should be compared using 'greater than' or 'less
  than' rather than with 'equals'. This is because the width and height values are
  given as integers and not floating point values, leading to an 'almost exact' calculated
  aspect ratio.
- Contextual metadata values are always stored as strings, even if the value is numeric,
  therefore you cannot use the `lt`, `gt`, `lte` and `gte` operators to compare contextual
  metadata values numerically. You can, however, use these operators with numeric
  structured metadata values.
- Ensure to replace 'your_cloud_name' with your actual Cloudinary cloud name.
- User-defined variables are especially valuable when used within named transformations.
- Not all transformation parameters are supported for use with variables.
- Variables cannot currently be used in arrays.
- The image is sent in the PNG format to the remote function, even if the uploaded
  image is in a different format.
- The Cloudinary SDKs automatically generate a base64 encoded URL from the source
  parameter.
- JavaScript filter can be applied to a custom data file.
- Ensure proper setup of the Cloudinary account for API access
- Cloudinary performs various default optimizations when delivering media assets.
- Images in the WebP format are lossless when specifying a quality of 100.
- Using f_auto may increase your transformation counts and storage usage.
- Requires connected app setup in Cloudinary
- Uses OAuth2 authentication
- Quality types such as `best`, `good`, `eco` etc. aren't yet supported when applying
  automatic quality to PDFs.
- Cloudinary doesn't optimize PDFs that exceed 10 pages or 5 MB in size—it returns
  the original instead.
- Some PDFs, even below these limits, can't be optimized and reduced in size. In these
  cases, Cloudinary returns the original.
- PDF optimization is intended mainly for on-screen viewing (in a browser or PDF viewer).
  For high-quality printing, it's best to avoid optimizing the PDF.
- This applies the automatic quality transformation, overwrites the existing asset,
  and invalidates any cached versions on the CDN.
- Requires setup of API key and secret
- Each of the default optimizations affect only the delivered image or video. The
  original file remains unchanged.
- Default optimizations count towards your usage, even though the delivery URL does
  not appear to be different from delivering an original asset.
- Enabling default image width may significantly increase your transformation usage,
  although it should also reduce your bandwidth usage.
- This setting is ignored if there is a named transformation or any parameter that
  alters the size of the image in the delivery URL.
- Images are only downscaled, never upscaled.
- Requires OAuth2 setup for API access.
- Some media types may require specific parameters.
- Using Cloudinary transformation parameters in the URLs allows for on-the-fly image
  resizing.
- Requires setup of Cloudinary account and generation of API keys
- Use the responsive plugin to make images responsive based on viewport size.
- Install the @cloudinary/url-gen and @cloudinary/react packages to use the responsive
  plugin.
- Ensure proper configuration of Cloudinary account credentials.
- The JavaScript solution dynamically replaces `dpr_auto` and `w_auto` with actual
  values based on screen properties and viewport width.
- The `cloudinary-core-shrinkwrap.js` library is a shrinkwrapped version of the `cloudinary-core`
  library.
- The responsive design can be implemented with the Cloudinary SDK's helper methods.
- OAuth2 is required for authentication.
- Ensure to replace {cloud_name} with your actual cloud name.
- Currently only works on Chromium-based browsers (e.g., Chrome, Edge, Opera, and
  Samsung Internet).
- If you are delivering images from a Private CDN or custom delivery hostname (CNAME),
  replace 'https://res.cloudinary.com' in the snippets above with the origin of your
  image URLs.
- Browsers will only attach client hints to requests for URLs that use the HTTPS protocol.
- Default width value can be concatenated to the transformation value, separated with
  a colon.
- Ensure that fetched URLs are unrestricted by clearing the Fetched URL box in the
  Restricted media types section of the Security page in your Console Settings.
- If the asset referenced by the original URL changes, Cloudinary will not automatically
  update the fetched asset embedded in your site and all its transformed versions.
- Depending on your plan, there may be a limit to the size of the videos you can fetch.
- Requires setup of a Cloudinary account and configuration of API keys
- Cloudinary automatically checks whether profile pictures have changed, according
  to a pre-defined caching period.
- By default, profile images are checked for changes once every 7 days.
- The 'demo' product environment is set to restrict URLs of type 'facebook', 'twitter',
  and 'gravatar' unless they are signed.
- Requires setup of a Cloudinary account and API key
- Free accounts are blocked from delivering files in PDF format for security reasons.
- It is recommended to save PSD files in Maximize Compatibility mode for the best
  results.
- If a clipping mask is used in a PSD file, the mask only works if delivering the
  image as a whole.
- Layers that apply certain effects or blend modes cannot be accessed using the pg
  transformation parameter.
- Some media objects may return nulls in deeply nested fields
- Ensure API key is kept secure
- Requires setup of signed URLs for private and authenticated assets.
- Access control is available to all Cloudinary accounts.
- Token-based and cookie-based access require the Advanced plan or higher.
- Token-based and cookie-based access let you flexibly and securely restrict the delivery
  of media assets using signed tokens.
- Cookie-based access additionally requires using a Custom delivery hostname (CNAME)
  at additional cost.
- Maximum of 500 frames for animated images, except for specific cases where the maximum
  is 100 frames.
- Requires setup of Cloudinary account and API key
- Free accounts are blocked from delivering ZIP, RAR, TAGZ, and other archive formats
  for security reasons.
- Delivering sprites using dynamic URLs is disabled by default for all new product
  environments.
- Version management is needed to ensure immediate update of the sprite.
- Ensure that you have the appropriate permissions set in your Cloudinary account.
- Generate a sprite from up to 500 images.
- Requires setup of Cloudinary account and connected app
- Any images that you want to use in the collage must be publicly accessible.
- The creation of one image collage counts as one transformation, regardless of the
  number of images contained within it.
- Collage creation is handled asynchronously.
- Uses overlays to create collages with specified positions.
- Specific dimensions and offsets can be set for images.
- Some API calls may return nulls in deeply nested fields
- Ensure to replace <cloud_name> with your actual Cloudinary cloud name
- PDF files can be created from a maximum of 500 images if processed asynchronously
  or a maximum of 100 if synchronously.
- Cloudinary supports dynamic text overlays without predefining text images.
- Some responses may vary based on the account settings
- Ensure correct setup of your Cloudinary account.
- Check the API documentation for specific resource usage.
- Endless looping carousel. Allows you to configure the previous/next buttons to always
  be available.
- Popup initial zoom. Allows users to request that the zoom popup opens already zoomed
  in.
- Ensure to set up connected app and request appropriate scopes for OAuth
- When using both the Upload Widget and Video Player on the same page, the video player
  scripts must be loaded first to prevent any conflicts.
- Video player profiles require version 2.1.1 or later of the video player.
- All transformations use the JavaScript (legacy) syntax.
- The skin theme you set affects how your color scheme displays.
- In previous versions of the Cloudinary Video Player, you accessed the VideoJS API
  with `videoPlayer.videojs`. Due to changes in the VideoJS API, you must now update
  these references to `videoPlayer.videojs.default`.
- Adding customizations with video.js could cause conflicts when future versions of
  the Cloudinary video player get released. Before upgrading your version of the video
  player, it's important to verify that your customizations are still working correctly.
- You must create a new contextual metadata key-value pair with the key set as title,
  subtitle, or description.
- Paced subtitles are only supported for auto generated Cloudinary transcript files
  and only for the original transcription.
- To enable playlistByTag functionality, ensure Resource list option is not restricted
  in product environment settings.
- Auto-advance must be disabled to show recommendations.
- Best results for recommendations require titles, subtitles, and descriptions.
- Blocking some types of cookies may impact your experience of the site and the services
  we are able to offer.
- Ensure proper API credentials are configured
- Adaptive streaming functionality (HLS and DASH) is now lazily loaded by default,
  improving initial load times.
- 'The available strategies are: ''fastStart'', ''balanced'', ''highQuality''.'
- Some API responses may include complex nested structures
- Integration requires setup in Cloudinary.
- You can register to a variety of video player events and then use these events to
  create custom video player controls or to trigger other custom behaviors in your
  application.
- Some transformations may vary depending on asset types
- Ads are not displayed when the source file playing in the video player is an .mp3
  audio file.
- If no ads are showing in the demo, check that you don't have an adblocker running.
- Requires setup of API credentials in Cloudinary dashboard
- Videos should be delivered from the server at their final size.
- Automatic cropping algorithm can take several seconds or minutes depending on video
  length.
- g_auto can be used to adjust focus on identified objects or faces.
- Padding can be added with a specified background color.
- The original aspect ratio is retained in fill and pad modes.
- You can only add overlays that are set to authenticated or private if you also sign
  the whole URL (no separate signature is required for the overlay part).
- By default, whenever you apply relative resize transformations to your overlay,
  the overlay is resized relative to its own original size.
- If the public ID of a video includes slashes, replace the slashes with colons when
  using the video as an overlay.
- When delivering public videos, you can only add other public videos as overlays.
- Uses raw, authenticated files for custom fonts
- Ensure all fade effects for the overlay are specified between the `l_` and `fl_layer_apply`
  components.
- There are some known issues regarding the use of transparent images and fading in
  at a specific offset.
- Supports video transformations for effects like progress indicators, rotation, rounding,
  and transparency.
- Generates thumbnails from videos by specifying image format in the URL.
- Supports automatic frame selection based on color distribution.
- Audio files are uploaded to Cloudinary as a video asset type.
- Relevant video transformations apply for audio as well, but visual related transformations
  are ignored.
- Requires setup of API keys in Cloudinary console
- Cloudinary requires setup of connected app in API.
- To deliver an animated image, use the `fl_animated` flag or the `f_auto:animated`
  option.
- Multiple conditional transformations can be applied by adding an if_end parameter.
- The if_else parameter acts as an if_end parameter when the if condition is not in
  the preceding transformation component.
- When you use variable or conditional expressions that include the `tags`, `ctx`
  or `md` parameters, their values are exposed publicly in the URL.
- For the `w`, `h`, and `ar` parameters, the values refer to the current video status
  in the transformation chain (i.e., if transformations have already been applied
  to the video), while `iw`, `ih`, `iar` always refer to the original video.
- '`dpr` is not supported as a conditional transformation with the `ar` characteristic.
  Additionally, `w` and `h` are supported with `dpr` as long as they are still equal
  to `iw` or `ih` when the condition is evaluated. If `dpr` is specified in the transformation
  as a whole, and one of the conditional branches includes a resizing transformation,
  you need to specify a resize transformation in all the other branches too.'
- The `ar` (aspect ratio) parameter should be compared using 'greater than' or 'less
  than' rather than with 'equals'. This is because the width and height values are
  given as integers and not floating point values, leading to an "almost exact" calculated
  aspect ratio.
- Some responses may include pagination
- User-defined variables can be used within named transformations.
- You can't use variables declared on a video for use within an image overlay on a
  video.
- When using variable or conditional expressions that include the tags, ctx or md
  parameters, their values are exposed publicly in the URL.
- The default optimizations affect only the delivered video. The original video file
  remains unchanged.
- You can also control audio and video bitrate separately.
- If you define a maximum or constant bitrate as well as a maximum quantization, and
  there is a conflict between these two settings, the maximum or constant bitrate
  will take precedence.
- Audio files are uploaded to Cloudinary as video asset types.
- Simulated live streaming allows you to stream a previously recorded video or event
  at a set time as if it was happening live.
- Requires setup of API key in Cloudinary account
- 'Fix: Fixed an issue where requested image positioning wasn''t always properly reflected
  in the crop view.'
- 'Maintenance: Internal code improvements and dependency updates.'
- By default, the list delivery type is restricted.
- This option supports listing up to 1000 resources.
- Use the Admin API's resource method to return the details of a resource by public
  ID or by asset ID.
- The explicit method requires a signature to be generated on the server-side.
- The default resource type for most API requests is image.
- Admin API methods require your API key and secret.
- This method is rate-limited.
- The search method is part of the rate-limited Admin API.
- If no expression is included, it returns the 50 most recently created assets.
- Default TTL for cached search results is 300 seconds
- Signature generated on backend, do not expose api_secret in client-side code.
- Cloudinary API requires authentication using OAuth2.
- Some objects like Image may return nulls in deeply nested fields
- Some transformations may not support all image formats.
- The expression parameter is used for filtering assets in a product environment.
- Field names are case sensitive.
- Notification URL triggered by 'Resource tags changed' Notification Type.
- You can assign context to assets while uploading them by specifying the context
  parameter in the upload method.
- Add a Notification URL triggered by the 'Resource context changed' Notification
  Type.
- Ensure to replace <cloud_name> with your specific cloud name in the URLs.
- Ensure to have valid credentials and permissions set up in your Cloudinary account.
- Some assets may have restrictions on transformation
- Add a Notification URL triggered by the 'Resource metadata changed' Notification
  Type.
- Cloudinary product environments are limited to a maximum of 100 structured metadata
  fields each.
- Some features may have usage limits depending on your plan
- The API uses Basic Authentication over secure HTTP.
- Extended quality analysis is currently in Beta. Some implementation details may
  change before the official release.
- Returns semantic image data including colors and metadata.
- Some objects may have limitations on the number of items returned
- The Cloudinary Media Inspector browser extension is currently in Beta.
- Cloudinary uses digital signatures both to verify the integrity of a message and
  to provide authentication for communicating over the Internet using the HTTP protocol.
- Ensure you have the correct Cloudinary credentials set in your secrets.
- Setup required for client ID and secret.
- Signature is automatically generated for SDK uploads and admin methods.
- The api_secret should never be revealed to anyone who is not authorized.
- Signatures are valid for one hour from the timestamp value used to generate the
  signature.
- Some resources may require additional permissions
- Uses SHA-1 or SHA-256 digests for validation
- Compare the timestamp value with the current time to ensure the signature was generated
  within a reasonable amount of time (e.g., within the last 2 hours)
- Only one API key can be dedicated to webhook notifications.
- Selecting a new API key for this purpose will replace the previously designated
  key.
- Some API methods may have specific rate limits
- Cloudinary delivery URLs require a signature component under certain circumstances.
- API secret should never be revealed to unauthorized individuals.
- SHA-1 is the default algorithm for signature generation, but SHA-256 can also be
  used.
- Some transformations may return nulls in deeply nested fields
- API responses may vary based on account settings
- By default, Cloudinary supports both SHA-1 and SHA-256 digests for validation, and
  you can use either.
- The SDK methods use the SHA-1 algorithm by default, but you can use the SHA-256
  algorithm instead by setting the signature_algorithm SDK configuration parameter
  to sha256.
- You can manually generate the comparison signature instead of using the Cloudinary
  SDK's `api_sign_request` method.
- C2PA in Cloudinary is currently available only to customers who request it.
- 'It is implemented for images only (specifically, these output formats: avif, heic,
  heif, jpg, jpeg, png, svg, tif, tiff, and webp).'
- Automatic backup is off by default. When you turn it on, Cloudinary stores a backup
  copy of every new upload and tracks multiple revisions for each asset.
- When backed up assets are deleted, the public ID of the deleted asset is reserved
  by the backup system.
- To restore deleted assets, navigate to the Assets page of the Media Library.
- Some responses may include nulls in nested fields
- Some objects like Asset may return nulls in deeply nested fields
- To prevent the old asset being delivered, you can send an invalidation request instructing
  the CDN to remove cached copies of the old asset.
- Support for bulk invalidations has to be enabled for your account.
- By default, signed URLs (with or without versions) are not invalidated. If you need
  to invalidate signed URLs submit a service request.
- It usually takes between a few seconds and a few minutes for the invalidation to
  fully propagate through the CDN. To bypass the CDN cached version and force immediate
  delivery of the newest image or video, include versions in your delivery URLs.
- If you continue to see an invalidated image or video in your browser, it may be
  saved in your browser cache. Try opening an incognito window or clearing your browser
  cache.
- Cloudinary supports various media types and offers multiple SDKs for integration.
- Ensure to configure the connected app correctly.
- OAuth2 with refresh token required for accessing resources.
- Certain transformations may require additional parameters.
- Dynamic folder mode provides flexibility to organize and manage media assets without
  breaking URLs in production.
- To revert to fixed folders mode after migration is not possible.
- Requires setup for OAuth2 authentication.
- Only accounts with an Enterprise plan can use SAML login and SAML Provisioning.
- The cloudinary.com domain is being deprecated in favor of console.cloudinary.com.
- Handle setup tasks such as creating folders, configuring auto-tagging, managing
  accessibility settings, and enforcing access restrictions.
- Ensure brand consistency and quality control by using a structured approval process
  for non-product assets before distribution.
- The Admin API allows for searching assets using visual similarity.
- Automates personalized & optimized media for high-converting email marketing.
- Cloudinary Portals provide controlled access to your images and videos, enabling
  external stakeholders like partners, clients, or press to browse, download, and
  use approved content.
- Use Collections to curate and share searchable, filterable asset groups via a public
  link.
- Ensure to set the appropriate cron expressions for periodic triggering.
- Use invalidate option to clear CDN cached copies when deleting assets.
- Setup requires providing valid cloud name and OAuth credentials.
- Ensure API secrets are not exposed in version control.
- Use environment variables to store sensitive information.
- Transformations are performed automatically in the cloud.
- The default resource type for most API requests is image. When working with videos,
  remember to explicitly set the resource_type to video.
- Ensure to use valid public ID for assets
- Requires setup of Cloudinary account and API credentials.
- 'Important: Don''t store your .env under version control for maximum security.'
- Ensure to replace YOUR_CLOUD_NAME with your Cloudinary cloud name.
- Transformation parameters can be included in the delivery URL.
- Requires OAuth2 for authentication.
- All transformations are performed automatically in the cloud and your transformed
  assets are automatically optimized before they are routed through a fast CDN to
  the end user for optimal user experience.
- Images can be delivered via dynamic URLs with transformation parameters.
- In general, when using an SDK, you will probably take advantage of the SDK parameter
  names for improved readability and maintenance of your code.
- The image method generates an HTML image tag.
- Uses Cloudinary for image transformations
- Ensure optimal experience by delivering the right size image for each device
- Uses Admin API to fetch asset details
- API may have rate limits for requests
- Use the Configuration class to configure Cloudinary credentials.
- Don't expose your API secret.
- Cloudinary automatically performs certain optimizations on all transformed images.
- Supports a variety of video transformations including transcoding, applying effects,
  trimming, and generating thumbnails.
- Uses Cloudinary PHP SDK for video transformations.
- The default resource type for most API requests is `image`. When working with videos,
  remember to explicitly set the `resource_type` to `video`.
- Some responses may include nested fields
- Requires setup of Cloudinary account and authentication credentials
- Integration requires setup of API keys in Cloudinary dashboard.
- For signed uploads from your client-side code, a secure signature must be generated
  in your server-side Java code.
- Supports uploading files up to 100 MB only for the Upload method.
- Use the UploadLarge method for larger files.
- Some APIs may return nulls in deeply nested fields
- All transformations are performed automatically in the cloud.
- Transformed assets are automatically optimized before delivery.
- Uses automatic format selection for optimizing images.
- Requires correct setup of Cloudinary account with API keys
- Video files are created dynamically when first accessed by users.
- Uses direct URL building for video transformations.
- Requires setup of Cloudinary account and configuration.
- Ensure to replace {cloud_name} with your actual Cloudinary cloud name.
- Do not expose your API secret.
- Requires setup of Cloudinary account and API key.
- Requires setup of credentials in Cloudinary dashboard
- Requires installation of sqlite3 Ruby gem
- You must configure api_key and api_secret in cloudinary.yml unless provided in constructor
- The video files are created dynamically when first accessed by your users.
- Some endpoints may have specific rate limits
- Uses direct URL building for video transformations
- Requires setup of Cloudinary account and access keys
- Sample output includes attributes such as asset_id, public_id, format, and created_at.
- Requires setup of Cloudinary account and credentials.
- The CarrierWave gem should be loaded before the Cloudinary gem.
- Requires user authentication via OAuth2.
- Uses Cloudinary for uploading files to the cloud, transforming images and delivering
  files through a fast CDN.
- Built-in integration with Cloudinary's jQuery-based direct upload from the browser,
  including progress indication and image preview.
- The variant method should not be used as it would try to create a new resource and
  upload it to Cloudinary.
- Cloudinary is committed to protecting your information security.
- Some transformation features may not be available on all accounts
- Allows users to upload images and videos directly from the browser
- For signed uploads, a secure signature must be generated in server-side code
- Files uploaded to Cloudinary are stored safely in the cloud.
- Uploading is done over HTTPS using a secure protocol based on your product environment's
  api_key and api_secret parameters.
- Some transformations may vary based on asset type
- Uses OAuth2 for authentication.
- The default resource type for most API requests is `image`.
- API usage requires authentication through OAuth2.
- Use API_KEY and API_SECRET in the CLOUDINARY_URL environment variable.
- Requires setup of credentials in Cloudinary for API access
- Direct uploads from the browser reduce load from your servers.
- The Go SDK simplifies the generation of transformation URLs for easy embedding of
  assets in your Go application.
- Automatically optimizes images
- Supports multiple transformations in a single request
- Cloudinary requires API key and secret for authentication.
- Use specific transformation parameters in the URL for different video manipulations.
- Some images may return different formats depending on transformation settings
- API requires setup of Cloudinary account and connected app.
- Ensure to handle token expiration
- Uploads are done over HTTPS using api_key and api_secret parameters.
- For security reasons, only a restricted set of parameters can be used in an unsigned
  upload request.
- Some images may have specific constraints on transformations
- Supports a variety of video effects, enhancements, and filters.
- Each transformation is performed automatically in the cloud.
- Transformed assets are optimized before delivery.
- MCP servers and LLM tools are in Beta.
- Requires setup of a Cloudinary account and proper credentials.
- For convenience, the instruction below shows you how to manually upload files in
  the Cloudinary console UI.
- If using an image with a public ID other than 'docs/models', make sure to update
  your code.
- Ensure the provided tokens are correctly configured
- Uses Cloudinary for image transformations and delivery.
- Uses plugins for lazy loading, responsiveness, accessibility, and placeholders.
- Requires a Cloudinary account with a valid API key.
- Transformation options available for videos
- Setup required for OAuth2 configuration.
- If videos help you learn, then this is the place for you!
- Uses OAuth2 with refresh token - requires setup in Cloudinary console
- Ensure to replace 'demo' with your own cloud name.
- Ensure to set height and width attributes to avoid content jumping.
- Uses URL syntax for transformations.
- The cldPoster property takes precedence over the poster property if both are specified.
- Uses Cloudinary for media transformations
- Cloudinary requires a cloud name to be specified for API calls.
- Requires API key for authentication
- Ensure all assets are optimized before delivery.
- Requires the Cloudinary Console for image upload.
- The @cloudinary/url-gen package simplifies the generation of transformation URLs.
- Uses Cloudinary for image transformations and optimizations.
- Cloudinary API requires OAuth2 with refresh token for authentication.
- Uses Cloudinary for video transformations via the @cloudinary/url-gen package.
- Requires setup of Cloudinary account and cloud name.
- Uses Cloudinary for dynamic image transformations.
- Use lazy loading to optimize page load times.
- Combine placeholder images with lazy loading for better user experience.
- Cloudinary uses a variety of transformation features for images and videos.
- Integration requires setup of connected app in Cloudinary
- Unsigned upload options are controlled by an upload preset.
- Cloudinary automatically performs optimizations on all transformed images.
- Use 'auto' for fetch_format and quality to deliver optimized images.
- The video is cropped to 360X480 using the pad cropping method
- Generated at 70% quality to control file size
- Each of the upload options described above can also be performed as a signed upload,
  but in this case, an authentication signature must be generated on your backend
  server.
- Cloudinary's React package must be used in conjunction with the Cloudinary JavaScript
  SDK to provide all of Cloudinary's transformation and optimization functionality.
- Each of the upload options can also be performed as a signed upload, which requires
  backend server authentication signature.
- Some API responses may contain nested fields
- Uses Cloudinary's SDK for image transformations.
- Cloudinary can help reduce the complexity with dynamic image transformations.
- Fallback content is required for browsers that do not support HTML5 video tags.
- Requires setup of an account with Cloudinary.
- Cloudinary's Vue.js package must be used in conjunction with the Cloudinary JavaScript
  SDK to provide all of Cloudinary's transformation and optimization functionality.
- If you have a large number of assets, we recommend you migrate using the createCloudinaryLegacyURL
  method.
- Use plugins like lazyload, responsive, accessibility, and placeholder as needed.
- Each of the upload options described can also be performed as a signed upload.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key and secret.'
- '404 Not Found: Verify the resource path.'
- '429 Too Many Requests: Rate limit exceeded.'
- '423: The version is not ready.'
- '420: The asset is pending.'
- '423: Returned until the version is ready.'
- '420: Returned with status pending until the asset is ready.'
- '400 Bad Request: Invalid parameters or missing required fields'
- '401 Unauthorized: Invalid API key or secret'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Verify the endpoint URL'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Check API credentials and permissions'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: The requested resource does not exist'
- '429 Too Many Requests: Rate limit exceeded'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '400 Bad Request: Check your request syntax'
- '404 Not Found: Endpoint does not exist'
- 'INVALID_CREDENTIALS: Check your API key and secret.'
- 'RESOURCE_NOT_FOUND: Verify the resource identifier.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API key or token expiration.'
- '401 Unauthorized: Recheck API key or token expiration'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify resource path'
- '500 Internal Server Error: Retry request'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'UPLOAD_ERROR: Ensure your file format is supported.'
- '401 Unauthorized: Invalid credentials or token expired'
- '400 Bad Request: Invalid request parameters'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Check endpoint URL'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Invalid credentials.'
- 'UPLOAD_ERROR: Ensure the file type is supported.'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint.'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Verify API key and permissions'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Recheck OAuth tokens'
- '429 Too Many Requests: Throttle API calls'
- 'INVALID_API_KEY: Check your API key'
- 'UNAUTHORIZED: Recheck your credentials'
- 'RESOURCE_NOT_FOUND: Ensure the resource exists'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Invalid API key or secret.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Check credentials or token expiration.'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency.'
- '404 Not Found: Ensure the endpoint exists.'
- '500 Internal Server Error: Try again later.'
- '404 Not Found: Check endpoint path'
- '429 Too Many Requests: You have exceeded your rate limit.'
- 'INVALID_CREDENTIALS: Check your client ID and client secret'
- 'ACCESS_DENIED: Ensure you have the necessary permissions'
- '401 Unauthorized: Check your credentials and ensure you have the correct permissions.'
- '404 Not Found: Verify the endpoint and resource ID.'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Invalid token or missing credentials.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '429 Too Many Requests: Throttle API calls.'
- 'REQUEST_LIMIT_EXCEEDED: Reduce the frequency of API calls.'
- 'UNAUTHORIZED: Check your API credentials.'
- '401 Unauthorized: Check your credentials and permissions.'
- '401 Unauthorized: Verify your API key and secret.'
- '401 Unauthorized: Check OAuth tokens'
- '401 Unauthorized: Check API key and secret.'
- '404 Not Found: The requested resource was not found.'
- Resource not found - wrong
- 'Payload corruption: Payload validation in webhook notifications checks if the data
  meets expected formatting and matches system requirements.'
- 'Invalid signature: Verification of the signature may fail, resulting in webhook
  failures.'
- 'Disabled API key: Using a disabled API key for signing the API can impact webhook
  functionality.'
- 'Invalid Webhook URL: A webhook was configured with an incorrect or inaccessible
  notification URL.'
- 'Connection Timeout: Timeout errors may occur if your server experiences delays
  exceeding our 20-second limit.'
- '401 Unauthorized: Verify API key and secret.'
- 'RESOURCE_NOT_FOUND: Check the resource ID or URL.'
- 'UNAUTHORIZED: Verify API key and secret.'
- '404 Not Found: Ensure the requested resource exists.'
- '401 Unauthorized: Invalid credentials provided.'
- '401 - Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Check client credentials'
- '400 Bad Request: Check your request parameters and data format.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Ensure the endpoint is correct and the resource exists.'
- '403 Forbidden: Check API key and permissions'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify API keys and tokens'
- 'INVALID_CREDENTIALS: Check your client ID and secret'
- 'QUOTA_EXCEEDED: Upgrade your plan or reduce usage'
- Unfortunately there's been an error sending your feedback.
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of API calls.'
- '401 Unauthorized: Recheck API key or authentication'
- Error sending feedback.
- 'REQUEST_LIMIT_EXCEEDED: Throttle requests'
- 'INVALID_AUTH_TOKEN: Recheck authorization credentials'
- '400 Bad Request: Check parameters and payload formatting.'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Resource may not exist.'
- Free accounts are blocked from delivering files in PDF format for security reasons.
- '423: Background removal process in progress'
- '420: Pending status until the asset is ready'
- '401 Unauthorized: Recheck API key or secret'
- 'Invalid API Key: Check your API key and try again.'
- 'Rate limit exceeded: Slow down your API requests.'
- '404 Not Found: Ensure the URL is correct.'
- 'Invalid Token: Ensure the token is valid and not expired.'
- '401 Unauthorized: Check your credentials and access permissions.'
- 'INVALID_API_KEY: Check the API key provided.'
- 'RESOURCE_NOT_FOUND: Verify the resource ID.'
- 'UNAUTHORIZED: Check your authentication credentials.'
- 'INVALID_REQUEST: Check the parameters sent with the request.'
- 'AUTHENTICATION_FAILED: Verify your authentication credentials.'
- '401 Unauthorized: Verify API key and secret'
- 'REQUEST_LIMIT_EXCEEDED: Reduce API calls or check your plan limits'
- '401 Unauthorized: Check your credentials and token validity'
- 'INVALID_CREDENTIALS: Check your API key and secret'
- 'RESOURCE_NOT_FOUND: Verify the resource ID'
- '401 Unauthorized: Recheck API key or parameters'
- '403 Forbidden: Invalid API key or secret'
- '400 Bad Request: Missing required parameters'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your credentials.'
- '404 Not Found: Check if the public_id is correct'
- '403 Forbidden: Ensure your API key has the right permissions'
- '401 Unauthorized: Verify client credentials or token validity.'
- '404 Not Found: Check the resource ID or path.'
- 'pending: The process is in pending status.'
- 'ERROR: Invalid URL - check the provided URL format.'
- '200: OK | Success'
- '400: Bad request'
- '401: Authorization required'
- '403: Not allowed'
- '404: Not found'
- '409: Already exists'
- '420: Rate limited'
- '401 Unauthorized: Check your API key and secret'
- '404 Not Found: Verify the endpoint and resource'
- 400 Bad request
- 401 Authorization required
- 403 Not allowed
- 404 Not found
- 409 Already exists
- 420 Max usage rate exceeded
- 429 Too many requests
- 401 Unauthorized
- 403 Forbidden
- 429 Rate limited
- 500 Internal server error
- 401 authentication error
- 403 authorization error
- 404 live stream not found
- 404 live stream output not found
- '401 Unauthorized: Check API credentials.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Invalid API key.'
- 'Invalid API key: Check your API key and secret'
- 'Resource not found: Verify the public_id and resource_type'
- '404 Not Found: The requested resource does not exist.'
- '404 Not Found: Verify the endpoint and resource availability.'
- '404 Not Found: Check the public ID used in the request.'
- '401 Unauthorized: Ensure API key and secret are correct.'
- '401 Unauthorized: Check your API credentials.'
- 'ERROR: Invalid API key or secret'
- 'ERROR: Resource not found'
- 'Unauthorized: Recheck OAuth token'
- 'E_INVALID_CREDENTIALS: Check your API key and secret.'
- 'E_NOT_FOUND: The requested resource was not found.'
- '401 Unauthorized: Check credentials'
- '401 Unauthorized: Recheck OAuth credentials'
- '404 Not Found: Verify endpoint path'
- 'NOT_FOUND: Resource not found'
- 'RATE_LIMIT_EXCEEDED: Throttle your requests'
- '401 Unauthorized: Verify your authentication credentials'
- '401 Unauthorized: Check credentials and OAuth settings.'
- '401 Unauthorized: Check your credentials or token expiration.'
- 'INVALID_API_KEY: Verify your API key'
- 'AUTHENTICATION_ERROR: Check your client credentials'
- '401 Unauthorized: Check API key or secret'
- '404 Not Found: Verify the resource path'
- 'INVALID_API_KEY: Check API key validity.'
- 'UNAUTHORIZED: Recheck authentication credentials.'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify endpoint URL'
- 'INVALID_CREDENTIALS: Check your client_id and client_secret'
- '401 Unauthorized: Verify credentials and access.'
- 'RESOURCE_NOT_FOUND: Ensure the resource exists.'
- 'INVALID_API_KEY: Check if the API key is correct'
- 'UNAUTHORIZED: Verify authorization token'
- '401 Unauthorized: Verify your API key and secret'
- '429 Too Many Requests: You''ve exceeded your usage limits'
- '404 Not Found: Ensure the resource exists'
- 'INVALID_AUTH_TOKEN: Ensure your OAuth token is valid'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests'
- '404 Not Found: Check if the requested resource exists'
- '401 Unauthorized: Recheck API key or account status'
- '401 Unauthorized: Check your OAuth token or scopes.'
- '401 Unauthorized: Check API key and secret'
- 'API_KEY_INVALID: Check your API key'
- 'RESOURCE_NOT_FOUND: Verify resource existence'
- 'UNAUTHORIZED: Check your API credentials'
- '423: Response returned until the version is ready.'
- '420: Status `pending` until the asset is ready.'
- 'INVALID_CREDENTIALS: Recheck your API keys'
- 'Invalid transformation string: Ensure the transformation parameters are correctly
  formatted.'
- '423: Background removal process not completed'
- '420: Pending status while generating incoming transformation'
- '404 Not Found: Verify the endpoint path'
- '423: Response returned until the version is ready'
- '420: Status pending until the asset is ready'
- '420: Pending status until the asset is ready.'
- '423: Derived version not ready'
- '420: Incoming transformation pending'
- '400 Bad Request: Check the request parameters and their values.'
- '401 Unauthorized: Check if the API key and secret are correct.'
- 'RESOURCE_NOT_FOUND: Confirm the resource identifier'
- 'Invalid image format: Ensure the format is supported.'
- 'Image not found: Check the image URL or public ID.'
- 'UNAUTHORIZED: Ensure your authentication token is valid'
- '404 Not Found: The requested resource could not be found'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Endpoint does not exist.'
- '400 Bad Request: Ensure parameters are correctly formatted.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Verify the endpoint and resource exists.'
- '404 Not Found: Verify the asset URL or resource ID.'
- '401 Unauthorized: Check your API keys and tokens'
- '404 Not Found: Verify the endpoint and parameters'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '401 Unauthorized: Check your credentials and token validity.'
- '429 Too Many Requests: Reduce the rate of API calls.'
- '401 Unauthorized: Check your credentials and scopes.'
- '404 Not Found: Verify the endpoint and resource existence.'
- 'ERROR_INVALID_CREDENTIALS: Check your API credentials'
- 'ERROR_NOT_FOUND: The requested resource does not exist'
- 'ERROR_RATE_LIMIT_EXCEEDED: Too many requests made in a short period'
- '403 Forbidden: Ensure the URL is signed if restricted.'
- '400 Bad Request: Check for malformed request'
- '404 Not Found: Endpoint may not exist'
- 'INVALID_TAG: Ensure the tag is unique to the uploaded images'
- '401 Unauthorized: Recheck API key or permissions'
- 'RESOURCE_NOT_FOUND: The requested resource could not be found.'
- '401 Unauthorized: Recheck API key or signature'
- '401 Unauthorized: Check if your credentials are correct.'
- '401 Unauthorized: Recheck API key or credentials'
- '401 Unauthorized: Check your API credentials'
- '401 Unauthorized: Ensure your credentials are correct.'
- '400 Bad Request: Check parameters sent with the request'
- '404 Not Found: Check the endpoint and resource ID'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check the authentication credentials'
- '400 Bad Request: Check the transformation parameters.'
- 'HTTP 423: The analysis is not yet complete.'
- '429 Too Many Requests: Exceeded rate limit'
- '401 Unauthorized: Check client ID and secret'
- 'Error: Usage of tags/context/metadata in transformation URLs is disabled.'
- 'invalid_api_key: The API key is invalid'
- 'resource_not_found: The requested resource could not be found'
- 'RESOURCE_NOT_FOUND: The resource you''re trying to access does not exist'
- 'ACCESS_DENIED: Verify your credentials and permissions'
- 'INVALID_TOKEN: Ensure the token has not expired or been revoked'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests per minute'
- '401 Unauthorized: Recheck API key or access permissions'
- '400 Bad Request: Check parameters for errors.'
- '401 Unauthorized: Check your client credentials and token.'
- '404 Not Found: Ensure the endpoint and resource paths are correct.'
- '403 Forbidden: Check your API key and secret.'
- '404 Not Found: Ensure the resource ID is correct.'
- '500 Internal Server Error: Retry the request.'
- '400 Bad Request: Check the request format and required fields.'
- 'Resource Not Found: Ensure the asset ID is correct.'
- '404 Not Found: Verify the asset ID or endpoint path'
- '400 Bad Request: Check parameters and request body.'
- '401 Unauthorized: Verify client credentials and token.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'LIMIT_EXCEEDED: Reduce usage or upgrade your plan'
- 'INVALID_ASSET_ID: Check the asset ID provided in the request.'
- 'Error sending feedback: Try Again'
- USER_CREATION_ERROR
- MISSING_ACCOUNT_ID
- INVALID_ACCOUNT_ID
- MISSING_FIRST_NAME
- MISSING_EMAIL
- INVALID_EMAIL_ADDRESS
- ROLE_LOOKUP_ERROR
- INVALID_SUBACCOUNT_IDENTIFIER
- LICENSE_LIMIT_EXCEEDED
- USER_UPDATE_ERROR
- PROVISIONING_NOT_ALLOWED
- USER_ACCOUNT_MISMATCH
- USER_GROUP_CREATION_ERROR
- INVALID_NAME_ID
- SAML_VALIDATION_FAILED
- INVALID_SAML_RESPONSE
- '401 Unauthorized: Check your credentials and token expiration'
- 'Invalid transformation: Check the transformation parameters.'
- 'Unauthorized: Verify your API key and secret.'
- '404 Not Found: Ensure the public ID is correct'
- '401 Unauthorized: Check your authentication credentials'
- 'RESOURCE_NOT_FOUND: Ensure the resource ID is correct'
- '401 Unauthorized: Check your credentials and token expiration.'
- '404 Not Found: Verify the resource ID or URL.'
- '429 Too Many Requests: Throttle your API requests.'
- '401 Unauthorized: Verify client ID and secret'
- '401 Unauthorized: Check credentials and permissions.'
- '404 Not Found: Verify endpoint path.'
- 'Invalid API key: Check your api_key.'
- 'File size exceeds limit: Ensure file is under 100 MB.'
- '401 Unauthorized: Check your API keys and permissions'
- '404 Not Found: Ensure the requested resource exists'
- 'INVALID_CREDENTIALS: Check the provided client ID and secret.'
- 'RESOURCE_NOT_FOUND: Verify the resource path.'
- 'INVALID_API_KEY: Check your API key and secret.'
- 'UNAUTHORIZED: Ensure your token is valid and has not expired.'
- 'UPLOAD_LIMIT_EXCEEDED: Reduce upload size or frequency'
- 'Rate limit exceeded: Reduce migration speed'
- 'Connection error: Check network settings'
- 'UNAUTHORIZED: Check your API key and secret'
- '404 Not Found: Check public ID or resource availability.'
- '401 Unauthorized: Verify client credentials'
- '429 Too Many Requests: Slow down API requests'
- '401 Unauthorized: Check your credentials and token.'
- 'Invalid API key or secret: Check your api_key and api_secret.'
- 'Upload failed: Check file format and size.'
- '400 Bad Request: Invalid request parameters.'
- '401 Unauthorized: Invalid credentials or token expired.'
- '403 Forbidden: Access denied to the requested resource.'
- '401 Unauthorized: Verify credentials and token'
- '429 Too Many Requests: Respect rate limits'
- 'Invalid API Key: Check your API key.'
- 'Unauthorized: Ensure your API key and secret are valid.'
- 'File not found: Verify the file path or URL.'
- Error sending feedback
- 'INVALID_CREDENTIALS: Check API key and secret.'
- 'REQUEST_TIMEOUT: Increase the timeout setting.'
- '404 Not Found: Check the public ID of the asset'
- '400 Bad Request: Verify transformation parameters'
- 'RESOURCE_NOT_FOUND: Verify resource ID or public ID'
- '429 Too Many Requests: Implement rate limiting'
- 'Invalid API key: Ensure the API key is valid and correctly configured.'
- 'File size exceeds limit: Check the maximum upload size allowed.'
- 'Error uploading: Check upload parameters or permissions.'
- 'Invalid transformation: Check the syntax of the transformation string.'
- 'Unauthorized: Recheck OAuth credentials.'
- 'INVALID_API_KEY: Recheck API key'
- 'UNAUTHORIZED: Check your access permissions'
- '400 Bad Request: Check request parameters for correctness.'
- '401 Unauthorized: Verify client credentials and permissions.'
- '404 Not Found: Confirm the existence of the resource.'
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- '401 Unauthorized: Check your API key'
- '401 Unauthorized: Check client credentials.'
- '404 Not Found: Ensure the resource path is correct.'
- '404 Not Found: Check the asset ID or URL.'
- '403 Forbidden: Verify your API key and permissions.'
- '401 Unauthorized: Verify the access token.'
- '404 Not Found: Ensure the resource exists.'
- '401 Unauthorized: Verify your API key.'
- '404 Not Found: Check if the resource exists'
- 'Invalid image format: Check the image type and format.'
- 'Transformation failed: Ensure the transformation parameters are valid.'
- 'Invalid API key: Check your API key and try again.'
- 'Resource not found: Verify the public-id and try again.'
- '400 Bad Request: Check request format and parameters'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth2
  - API Key
  - API Secret
  - CloudinaryAccount
  - AuthToken
  - AccessToken
  - Cloudinary API
  - Admin API
  - Video API
  - OAuthToken
  - Cloudinary API Key
  - Cloudinary API Secret
  - ClientCredentials
  - OAuth
  - cloudinary
  - api_key
  - Configuration
  - CloudinaryToken
  - CloudinaryAuthProvider
  - CloudinaryClient
  - CloudinaryConfig
  - Asset
  - Transformation
  - Cloudinary Refresh Token
  - ApiKey
  - ApiSecret
client:
  base_url: https://api.cloudinary.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.cloudinary.com/oauth/token
    client_id: '{{ dlt.secrets[''cloudinary_client_id''] }}'
    client_secret: '{{ dlt.secrets[''cloudinary_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''cloudinary_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
