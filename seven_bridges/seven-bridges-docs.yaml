resources:
- name: list_all_api_paths
  endpoint:
    path: /v2/
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: billing
  endpoint:
    path: /reference/billing
    method: GET
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
- name: files
  endpoint:
    path: /reference/files-folders-and-metadata
    method: GET
- name: volumes
  endpoint:
    path: /reference/volumes-v2
    method: GET
- name: tasks
  endpoint:
    path: /reference/tasks
    method: GET
- name: automations
  endpoint:
    path: /reference/managing-automations-overview
    method: GET
- name: list_all_api_paths
  endpoint:
    path: /reference/list-all-api-paths
    method: GET
- name: list_all_api_paths
  endpoint:
    path: /v2/
    method: GET
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: results
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: results
    params: {}
- name: list_markers_available_on_a_file
  endpoint:
    path: /reference/list-markers-available-on-a-file
    method: GET
- name: get_details_for_a_single_marker
  endpoint:
    path: /reference/get-details-for-a-single-marker
    method: GET
- name: create_a_marker
  endpoint:
    path: /reference/create-a-marker
    method: POST
- name: modify_a_single_marker
  endpoint:
    path: /reference/modify-a-single-marker
    method: PATCH
- name: delete_a_single_marker
  endpoint:
    path: /reference/delete-a-single-marker
    method: DELETE
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: results
- name: RNA-seq Alignment - STAR
  endpoint:
    path: /workflows/rna-seq-alignment-star
    method: POST
    data_selector: workflow
    params: {}
- name: samtools
  endpoint:
    path: /tools/samtools
    method: POST
    data_selector: tool
    params: {}
- name: docker_image
  endpoint:
    path: /images
    method: GET
    data_selector: images
    params: {}
- name: samtools-sort
  endpoint:
    path: /tools/samtools-sort
    method: POST
    data_selector: output
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: RNA-seq Alignment - STAR
  endpoint:
    path: /workflows/rna-seq-alignment-star
    method: POST
    data_selector: workflow
    params: {}
- name: samtools-sort
  endpoint:
    path: /samtools
    method: POST
    data_selector: output
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: files
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: files
    params:
      limit: 100
- name: tasks
  endpoint:
    path: /api/tasks
    method: GET
    data_selector: tasks
    params:
      limit: 100
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: data
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: results
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: files
    params: {}
- name: Project Files
  endpoint:
    path: /projects/{project_id}/files
    method: GET
    data_selector: files
- name: Public Files
  endpoint:
    path: /public/files
    method: GET
    data_selector: files
- name: upload_status
  endpoint:
    path: /upload/status
    method: GET
    data_selector: jobs
    params: {}
- name: upload_job
  endpoint:
    path: /upload/start
    method: POST
    data_selector: job
    params: {}
- name: Import from an FTP/HTTP(S) server
  endpoint:
    path: /upload-from-an-ftp-server
    method: GET
- name: import_files
  endpoint:
    path: /import
    method: POST
    data_selector: files
    params: {}
- name: Volumes
  endpoint:
    path: /api/volumes
    method: GET
    data_selector: records
- name: import_files
  endpoint:
    path: /import/files
    method: POST
    data_selector: imports
    params: {}
- name: check_import_status
  endpoint:
    path: /import/status
    method: GET
    data_selector: imports
    params: {}
- name: upload
  endpoint:
    path: /reference/upload-files
    method: POST
    data_selector: files
    params: {}
- name: connect_cloud_storage
  endpoint:
    path: /docs/connecting-cloud-storage-overview
    method: GET
    data_selector: cloud_storage
    params: {}
- name: http_upload
  endpoint:
    path: /docs/upload-from-an-ftp-server
    method: POST
    data_selector: ftp_upload
    params: {}
- name: upload_job
  endpoint:
    path: /upload_jobs
    method: POST
    data_selector: data
    params: {}
- name: upload_status
  endpoint:
    path: /upload_jobs/status
    method: GET
    data_selector: status
    params: {}
- name: import_files
  endpoint:
    path: /import/files
    method: POST
    data_selector: files
    params: {}
- name: import_from_volume
  endpoint:
    path: /api/import/volume
    method: POST
    data_selector: import_status
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: POST
    data_selector: metadata
    params: {}
- name: metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
    data_selector: records
- name: import_drs_files
  endpoint:
    path: /import/drs
    method: POST
    data_selector: imported_files
    params:
      max_links: 500
      wait_time: 5
- name: metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: results
- name: metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: results
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: files
    params: {}
- name: file
  endpoint:
    path: /api/files
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
    params: {}
- name: nextflow_app
  endpoint:
    path: /nextflow/apps
    method: POST
    data_selector: app
    params: {}
- name: app_configuration
  endpoint:
    path: /api/v1/apps
    method: POST
- name: tasks
  endpoint:
    path: /tasks
    method: POST
    data_selector: tasks
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
- name: analysis
  endpoint:
    path: /api/v1/analyses
    method: GET
    data_selector: results
    params: {}
- name: rnaseq
  endpoint:
    path: /api/rnaseq
    method: POST
    data_selector: data
    params: {}
- name: nextflow_app
  endpoint:
    path: /sbpack_nf
    method: POST
- name: wdl_app
  endpoint:
    path: /wdl/apps
    method: POST
    data_selector: app
    params: {}
- name: app_configuration
  endpoint:
    path: /apps
    method: POST
    data_selector: app
    params: {}
- name: WDL app
  endpoint:
    path: /sbpack
    method: POST
- name: create_task
  endpoint:
    path: /v2/tasks
    method: POST
    data_selector: ''
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
    params: {}
- name: app
  endpoint:
    path: /sbpack
    method: POST
    data_selector: app
- name: base_image
  endpoint:
    path: /FROM/ubuntu:18.04
    method: GET
    data_selector: image
    params: {}
- name: docker_image
  endpoint:
    path: /api/v1/docker_images
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: data
- name: docker_repositories
  endpoint:
    path: /api/docker/repositories
    method: GET
    data_selector: repositories
    params: {}
- name: base_image
  endpoint:
    path: /FROM/ubuntu:18.04
    method: GET
    data_selector: image
    params: {}
- name: maintainer_info
  endpoint:
    path: /LABEL
    method: GET
    data_selector: maintainer
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: data
    params: {}
- name: data_analysis
  endpoint:
    path: /api/v1/data_analysis
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: records
    params: {}
- name: inputs
  endpoint:
    path: /reference/list-files-primary-method
    method: GET
    data_selector: sbg:suggestedValue
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
- name: input_file_name
  endpoint:
    data_selector: inputs.<input_port__ID_for_data_file>.path.split('/').slice(-1)[0]
- name: output_file_name_sample_id
  endpoint:
    data_selector: 'input_files[0].metadata.sample_id ? input_files[0].metadata.sample_id
      : ''sample_unknown'''
- name: output_file_name_based_on_input
  endpoint:
    data_selector: filebase.concat('<file_extension>')
- name: paired_end_metadata
  endpoint:
    data_selector: $job.inputs.<input_port_ID>[i].metadata.paired_end
- name: unpack_tar_archive
  endpoint:
    data_selector: '''tar -xf '' + index_files_bundle'
- name: suggested_file
  endpoint:
    path: /reference/list-files-primary-method
    method: GET
    data_selector: files
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: data
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: samtools-sort
  endpoint:
    path: /tools/samtools-sort
    method: POST
- name: analysis
  endpoint:
    path: /api/v1/analyses
    method: GET
    data_selector: results
    params: {}
- name: revision_notes
  endpoint:
    path: /api/revision_notes
    method: GET
    data_selector: notes
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /v1/files
    method: GET
    data_selector: files
    params: {}
- name: input_file_name
  endpoint:
    path: /inputs/<input_ID_for_data_file>/basename
    method: GET
    data_selector: file_name
    params: {}
- name: input_file_contents
  endpoint:
    path: /inputs/<input_ID_for_data_file>/contents
    method: GET
    data_selector: file_contents
    params: {}
- name: output_file_name
  endpoint:
    path: /outputs/sample_id
    method: GET
    data_selector: output_file_name
    params: {}
- name: unpack_tar_archive
  endpoint:
    path: /unpack/tar/archive
    method: POST
    data_selector: unpack_command
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
- name: files
  endpoint:
    path: /v1/files
    method: GET
    data_selector: data
- name: samtools-sort
  endpoint:
    path: /sort
    method: POST
    data_selector: output
    params: {}
- name: STAR
  endpoint:
    path: /api/v1/tools/STAR
    method: POST
- name: STAR Genome Generate
  endpoint:
    path: /api/v1/tools/STAR_Genome_Generate
    method: POST
- name: SBG FASTQ Quality Detector
  endpoint:
    path: /api/v1/tools/SBG_FASTQ_Quality_Detector
    method: POST
- name: Picard SortSAM
  endpoint:
    path: /api/v1/tools/Picard_SortSAM
    method: POST
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: data
    params: {}
- name: input_file_name
  endpoint:
    path: /path/to/input_file
    method: GET
    data_selector: basename
    params: {}
- name: output_file_name_sample_id
  endpoint:
    path: /path/to/output_file
    method: GET
    data_selector: sample_id
    params: {}
- name: output_file_name_based_on_input
  endpoint:
    path: /path/to/output_file
    method: GET
    data_selector: nameroot
    params: {}
- name: output_file_paired_end
  endpoint:
    path: /path/to/output_file
    method: GET
    data_selector: paired_end
    params: {}
- name: input_reads_ordering
  endpoint:
    path: /path/to/input_reads
    method: GET
    data_selector: paired_end
    params: {}
- name: unpack_tar_archive
  endpoint:
    path: /path/to/tar_archive
    method: GET
    data_selector: basename
    params: {}
- name: task_execution
  endpoint:
    path: /api/task_execution
    method: GET
    data_selector: records
    params: {}
- name: workflow
  endpoint:
    path: /workflows
    method: POST
    data_selector: workflow
    params: {}
- name: scatter_single_input_port
  endpoint:
    path: /scatter/single/input/port
    method: GET
    data_selector: output
    params: {}
- name: scatter_multiple_input_ports
  endpoint:
    path: /scatter/multiple/input/ports
    method: GET
    data_selector: output
    params: {}
- name: execution_settings
  endpoint:
    path: /api/v1/execution_settings
    method: POST
    data_selector: execution_settings
    params: {}
- name: project
  endpoint:
    path: /reference/create-a-new-project
    method: POST
    data_selector: use_interruptible_instances
    params: {}
- name: task
  endpoint:
    path: /reference/create-a-new-task
    method: POST
    data_selector: use_interruptible_instances
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: data
    params: {}
- name: instances
  endpoint:
    path: /instances
    method: GET
    data_selector: instances
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: task
  endpoint:
    path: /api/v1/tasks
    method: GET
    data_selector: records
    params: {}
- name: task_logs
  endpoint:
    path: /tasks/logs
    method: GET
    data_selector: logs
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
    params: {}
- name: instances_with_ephemeral_storage
  endpoint:
    path: /instances/ephemeral-storage
    method: GET
    data_selector: instances
    params: {}
- name: bam_file
  endpoint:
    path: /files/bam
    method: GET
    data_selector: records
- name: gene
  endpoint:
    path: /genes
    method: GET
    data_selector: records
- name: vcf
  endpoint:
    path: /variants
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
- name: task_stats
  endpoint:
    path: /task/stats
    method: GET
    data_selector: records
    params: {}
- name: task_stats
  endpoint:
    path: /tasks/stats
    method: GET
    data_selector: tasks
    params: {}
- name: FastQC analysis workflow
  endpoint:
    path: /fastqc/analysis
    method: POST
    data_selector: report
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
    params: {}
- name: automations
  endpoint:
    path: /automations
    method: GET
    data_selector: automations
    params: {}
- name: automation_runs
  endpoint:
    path: /automations/runs
    method: GET
    data_selector: runs
    params: {}
- name: automation_run
  endpoint:
    path: /automations/runs
    method: GET
    data_selector: runs
    params: {}
- name: automation_log
  endpoint:
    path: /automations/log
    method: GET
    data_selector: log_entries
    params: {}
- name: automation_state
  endpoint:
    path: /automations/state
    method: GET
    data_selector: state
    params: {}
- name: bam_file
  endpoint:
    path: /files
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: automations
  endpoint:
    path: /reference/list-all-automations
    method: GET
    data_selector: automations
- name: demo_vcf_files
  endpoint:
    path: /demo/vcf/files
    method: GET
    data_selector: files
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: analysis
  endpoint:
    path: /api/v1/analysis
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
    params: {}
- name: fastqc_report
  endpoint:
    path: /fastqc/report
    method: GET
    data_selector: report
- name: alignment_summary_metrics
  endpoint:
    path: /services/data/vXX.X/sobjects/AlignmentSummaryMetrics
    method: GET
    data_selector: records
- name: alignment_summary_metrics
  endpoint:
    path: /alignment_summary_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: automations
  endpoint:
    path: /automations
    method: GET
    data_selector: automations
- name: automation_runs
  endpoint:
    path: /automations/runs
    method: GET
    data_selector: runs
- name: automations
  endpoint:
    path: /reference/list-all-automations
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users/me
    method: GET
    data_selector: user
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: automation
  endpoint:
    path: /automations
    method: GET
    data_selector: automations
    params: {}
- name: automation_run
  endpoint:
    path: /automations/runs
    method: POST
    data_selector: id
    params: {}
- name: code_package
  endpoint:
    path: /automations/packages
    method: POST
    data_selector: id
    params: {}
- name: automations
  endpoint:
    path: /automations
    method: GET
    data_selector: automations
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: automations
  endpoint:
    path: /api/automations
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: records
- name: Automation inputs
  endpoint:
    path: /api/automation/inputs
    method: GET
    data_selector: records
- name: FastQC
  endpoint:
    path: /apps/fastqc
    method: POST
    data_selector: outputs
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: records
    params: {}
- name: file
  endpoint:
    path: /files
    method: GET
    data_selector: records
    params: {}
- name: String output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Boolean output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Integer output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Float output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Single file output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Single folder output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Single volume file output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Single volume folder output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Single task output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Project output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: analysis
  endpoint:
    path: /api/v1/analyses
    method: GET
    data_selector: results
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: results
    params: {}
- name: GRAF Germline Variant Detection
  endpoint:
    path: /graph-genome-apps/graf-germline-variant-detection
    method: POST
    data_selector: results
- name: automation_run
  endpoint:
    path: /automations/runs
    method: POST
    data_selector: id
    params: {}
- name: code_package
  endpoint:
    path: /automations/packages
    method: POST
    data_selector: id
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: analyses
  endpoint:
    path: /api/analyses
    method: GET
    data_selector: data
    params: {}
- name: data_studio_analysis
  endpoint:
    path: /api/data_studio_analysis
    method: GET
    data_selector: records
- name: String output
  endpoint:
    path: /string
    method: GET
    data_selector: output
    params: {}
- name: Boolean output
  endpoint:
    path: /boolean
    method: GET
    data_selector: output
    params: {}
- name: Integer output
  endpoint:
    path: /integer
    method: GET
    data_selector: output
    params: {}
- name: Float output
  endpoint:
    path: /float
    method: GET
    data_selector: output
    params: {}
- name: Single file output
  endpoint:
    path: /file
    method: GET
    data_selector: output
    params: {}
- name: Single folder output
  endpoint:
    path: /folder
    method: GET
    data_selector: output
    params: {}
- name: Single volume file output
  endpoint:
    path: /volume_file
    method: GET
    data_selector: output
    params: {}
- name: Single volume folder output
  endpoint:
    path: /volume_folder
    method: GET
    data_selector: output
    params: {}
- name: Single task output
  endpoint:
    path: /task
    method: GET
    data_selector: output
    params: {}
- name: Project output
  endpoint:
    path: /project
    method: GET
    data_selector: output
    params: {}
- name: GRAF Germline Variant Detection
  endpoint:
    path: /apps/graf-germline-variant-detection
    method: POST
    data_selector: results
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: results
  endpoint:
    path: /download/results
    method: GET
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: results
- name: GRAF Germline Variant Detection Workflow
  endpoint:
    path: /workflows/graf-germline-variant-detection
    method: POST
    data_selector: results
- name: analysis
  endpoint:
    path: /api/v1/analyses
    method: GET
    data_selector: results
- name: Smart Variant Filtering Project
  endpoint:
    path: /public_projects/smart_variant_filtering
    method: GET
    data_selector: data
    params: {}
- name: workspace
  endpoint:
    path: /docs/about-files-in-a-data-cruncher-analysis
    method: GET
    data_selector: files
    params: {}
- name: outputs
  endpoint:
    path: /sbgenomics/output-files
    method: GET
    data_selector: files
    params: {}
- name: VCF Benchmarking Project
  endpoint:
    path: /vcf-benchmarking
    method: GET
- name: Draft Task
  endpoint:
    path: /draft-task
    method: GET
    data_selector: results
    params: {}
- name: Benchmark Exploration
  endpoint:
    path: /benchmark-exploration
    method: GET
    data_selector: results
    params: {}
- name: data_studio_analysis
  endpoint:
    path: /api/data_studio_analysis
    method: GET
    data_selector: records
    params: {}
- name: SGDP dataset
  endpoint:
    path: /simons-genome-diversity-project-sgdp-dataset
    method: GET
- name: SGDP_samples
  endpoint:
    path: /sgdp/samples
    method: GET
    data_selector: samples
    params: {}
- name: analysis
  endpoint:
    path: /api/v1/analyses
    method: GET
    data_selector: items
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: items
- name: data_import
  endpoint:
    path: /data/import
    method: POST
    data_selector: files
    params: {}
- name: export_results
  endpoint:
    path: /data/export
    method: POST
    data_selector: results
    params: {}
- name: division
  endpoint:
    path: /api/divisions
    method: GET
    data_selector: records
    params: {}
- name: billing_information
  endpoint:
    path: /api/billing
    method: GET
    data_selector: records
    params: {}
- name: public_projects
  endpoint:
    path: /public/projects
    method: GET
    data_selector: projects
- name: variant_filtering
  endpoint:
    path: /api/variant_filtering
    method: GET
    data_selector: records
- name: division_member
  endpoint:
    path: /services/data/vXX.X/sobjects/DivisionMember
    method: GET
    data_selector: records
    params: {}
- name: public_project
  endpoint:
    path: /public/projects/smart_variant_filtering
    method: GET
    data_selector: data
- name: VCF Benchmarking Project
  endpoint:
    path: /vcf-benchmarking
    method: GET
    data_selector: results
- name: Open Access files
  endpoint:
    path: /ccle/open-access
    method: GET
    data_selector: files
    params: {}
- name: credit_card
  endpoint:
    path: /api/v1/payment_methods
    method: POST
    data_selector: data
    params: {}
- name: SGDP samples
  endpoint:
    path: /sgdp/samples
    method: GET
    data_selector: samples
- name: Census_of_Immune_Cells
  endpoint:
    path: /path/to/census_of_immune_cells
    method: GET
    data_selector: datasets
    params: {}
- name: Ischaemic_Sensitivity_of_Human_Tissue
  endpoint:
    path: /path/to/ischaemic_sensitivity_of_human_tissue
    method: GET
    data_selector: datasets
    params: {}
- name: Melanoma_Infiltration_of_Stromal_and_Immune_Cells
  endpoint:
    path: /path/to/melanoma_infiltration_of_stromal_and_immune_cells
    method: GET
    data_selector: datasets
    params: {}
- name: email_notifications
  endpoint:
    path: /manage/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: collaborator
  endpoint:
    path: /api/collaborators
    method: GET
    data_selector: records
    params: {}
- name: collaborator
  endpoint:
    path: /api/collaborator
    method: POST
    data_selector: data
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: division
  endpoint:
    path: /create-division
    method: POST
    data_selector: data
    params: {}
- name: actions
  endpoint:
    path: /actions
    method: GET
    data_selector: items
- name: rate_limit
  endpoint:
    path: /rate_limit
    method: GET
    data_selector: rate_limit
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: billing
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: upload
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: apps
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: storage
  endpoint:
    path: /storage
    method: GET
    data_selector: volumes
- name: division_members
  endpoint:
    path: /api/v1/division/members
    method: GET
    data_selector: members
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    params:
      fields: href
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: billing_groups
  endpoint:
    path: /v2/billing/groups
    method: GET
    data_selector: items
- name: create_project
  endpoint:
    path: /v2/projects
    method: POST
    data_selector: ''
    params: {}
- name: list_files
  endpoint:
    path: /v2/files
    method: GET
    data_selector: items
    params:
      project: admin/sbg-public-data
      metadata.experimental_strategy: WXS
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
    data_selector: ''
    params: {}
- name: modify_file_metadata
  endpoint:
    path: /v2/files/{file_id}/metadata
    method: PATCH
    data_selector: ''
    params: {}
- name: files
  endpoint:
    path: /v2/files
    method: GET
    data_selector: items
    params:
      project: admin/sbg-public-data
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
    data_selector: ''
    params: {}
- name: apps
  endpoint:
    path: /v2/apps
    method: GET
    data_selector: items
    params:
      visibility: public
      limit: 100
- name: copy_app
  endpoint:
    path: /v2/apps/admin/sbg-public-data/whole-exome-sequencing-gatk-2-3-9-lite/56/actions/copy
    method: POST
    data_selector: ''
    params: {}
- name: create_task
  endpoint:
    path: /v2/tasks
    method: POST
    data_selector: ''
    params: {}
- name: collaborator
  endpoint:
    path: /add-collaborator
    method: GET
- name: task
  endpoint:
    path: /v2/tasks/{task_id}/actions/run
    method: POST
    data_selector: tasks
    params: {}
- name: task_status
  endpoint:
    path: /v2/tasks/{task_id}/execution_details
    method: GET
    data_selector: execution_details
    params: {}
- name: task_outputs
  endpoint:
    path: /v2/tasks/{task_id}?fields=outputs
    method: GET
    data_selector: outputs
    params: {}
- name: billing_groups
  endpoint:
    path: /v2/billing/groups
    method: GET
    data_selector: items
    params: {}
- name: create_project
  endpoint:
    path: /v2/projects
    method: POST
    data_selector: id
    params: {}
- name: list_files
  endpoint:
    path: /v2/files
    method: GET
    data_selector: items
    params: {}
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
    data_selector: status
    params: {}
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
    data_selector: new_file_id
    params: {}
- name: list_public_workflows
  endpoint:
    path: /v2/apps
    method: GET
    data_selector: items
    params:
      visibility: public
      limit: 100
- name: copy_workflow
  endpoint:
    path: /v2/apps/admin/sbg-public-data/rna-seq-alignment-star/16/actions/copy
    method: POST
    data_selector: id
    params: {}
- name: create_draft_task
  endpoint:
    path: /v2/tasks
    method: POST
    data_selector: id
    params: {}
- name: run_task
  endpoint:
    path: /v2/tasks/{task_id}/actions/run
    method: POST
    data_selector: id
    params: {}
- name: get_task_outputs
  endpoint:
    path: /v2/tasks/{task_id}
    method: GET
    data_selector: outputs
    params: {}
- name: tasks
  endpoint:
    path: /v2/tasks
    method: GET
    data_selector: items
    params:
      parent: 1fd125fa-789c-45b6-12b3-2a3ab3bedcba
- name: task_outputs
  endpoint:
    path: /v2/tasks/{task_id}
    method: GET
    data_selector: outputs
    params:
      fields: outputs
- name: tasks
  endpoint:
    path: /api/tasks
    method: POST
    data_selector: task
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: billing_groups
  endpoint:
    path: /v2/billing/groups
    method: GET
- name: create_project
  endpoint:
    path: /v2/projects
    method: POST
- name: list_files
  endpoint:
    path: /v2/files
    method: GET
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
- name: modify_file_metadata
  endpoint:
    path: /v2/files/{file_id}/metadata
    method: PATCH
- name: files
  endpoint:
    path: /v2/files
    method: GET
    data_selector: items
    params:
      project: admin/sbg-public-data
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
    data_selector: null
    params: {}
- name: apps
  endpoint:
    path: /v2/apps
    method: GET
    data_selector: items
    params:
      visibility: public
      limit: 100
- name: copy_app
  endpoint:
    path: /v2/apps/admin/sbg-public-data/whole-exome-sequencing-gatk-2-3-9-lite/56/actions/copy
    method: POST
    data_selector: null
    params: {}
- name: tasks
  endpoint:
    path: /v2/tasks
    method: POST
    data_selector: null
    params: {}
- name: run_task
  endpoint:
    path: /v2/tasks/{task_id}/actions/run
    method: POST
- name: check_task_status
  endpoint:
    path: /v2/tasks/{task_id}/execution_details
    method: GET
- name: get_task_outputs
  endpoint:
    path: /v2/tasks/{task_id}
    method: GET
    params:
      fields: outputs
- name: files_import
  endpoint:
    path: /imports
    method: POST
    data_selector: responses
- name: billing_groups
  endpoint:
    path: /v2/billing/groups
    method: GET
    data_selector: items
    params: {}
- name: projects
  endpoint:
    path: /v2/projects
    method: POST
    data_selector: id
    params: {}
- name: files
  endpoint:
    path: /v2/files
    method: GET
    data_selector: items
    params: {}
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
    data_selector: status
    params: {}
- name: file_metadata
  endpoint:
    path: /updating/file/metadata
    method: GET
    data_selector: records
    params: {}
- name: copy_files
  endpoint:
    path: /v2/action/files/copy
    method: POST
- name: list_apps
  endpoint:
    path: /v2/apps
    method: GET
- name: copy_app
  endpoint:
    path: /v2/apps/admin/sbg-public-data/rna-seq-alignment-star/16/actions/copy
    method: POST
- name: create_draft_task
  endpoint:
    path: /v2/tasks
    method: POST
- name: run_task
  endpoint:
    path: /v2/tasks/{task_id}/actions/run
    method: POST
- name: child_tasks
  endpoint:
    path: /v2/tasks
    method: GET
    data_selector: items
    params:
      parent: 1fd125fa-789c-45b6-12b3-2a3ab3bedcba
- name: task_outputs
  endpoint:
    path: /v2/tasks/{task_id}
    method: GET
    data_selector: outputs
    params:
      fields: outputs
- name: file_metadata
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: records
    params: {}
- name: file_metadata
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: records
- name: file_metadata
  endpoint:
    path: /api/v1/files/metadata
    method: GET
    data_selector: data
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: POST
    data_selector: task
    params: {}
- name: project
  endpoint:
    params:
      limit: 100
- name: import_files
  endpoint:
    path: /api/import/files
    method: GET
    data_selector: records
    params: {}
- name: finding_project_by_name
  endpoint:
    path: /finding/project/by/name
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: file_metadata
  endpoint:
    path: /api/v1/files/{file_id}/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: file_metadata
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: results
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: results
- name: files
  endpoint:
    path: /api/v1/files
    method: DELETE
    data_selector: deleted_files
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: public_apps
  endpoint:
    path: /public/apps
    method: GET
    data_selector: apps
    params: {}
- name: copy_app
  endpoint:
    path: /apps/copy
    method: POST
    data_selector: copiedApp
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: imports
  endpoint:
    path: /imports
    method: GET
    data_selector: imports
    params: {}
- name: exports
  endpoint:
    path: /exports
    method: POST
    data_selector: exportJob
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params:
      limit: 100
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
- name: billing_groups
  endpoint:
    path: /billing/list
    method: GET
- name: billing_group
  endpoint:
    path: /billing/get/{group_id}
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: members
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: members
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: members
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /files/metadata
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: records
    params: {}
- name: file
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: records
    params: {}
- name: apps_list
  endpoint:
    path: /apps/list
    method: GET
    data_selector: apps
    params: {}
- name: apps_get
  endpoint:
    path: /apps/get
    method: GET
    data_selector: app_details
    params: {}
- name: apps_import
  endpoint:
    path: /apps/import
    method: POST
    data_selector: import_response
    params: {}
- name: apps_copy
  endpoint:
    path: /apps/copy
    method: POST
    data_selector: copy_response
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: volumes
    params: {}
- name: exports
  endpoint:
    path: /exports
    method: GET
    data_selector: exports
    params: {}
- name: imports
  endpoint:
    path: /imports
    method: GET
    data_selector: imports
    params: {}
- name: volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: create_volume
  endpoint:
    path: /reference/create-a-volume-v2
    method: POST
- name: list_volumes
  endpoint:
    path: /reference/list-volumes-v2
    method: GET
- name: get_details_of_volume
  endpoint:
    path: /reference/get-details-of-a-volume-v2
    method: GET
- name: update_volume
  endpoint:
    path: /reference/update-a-volume-v2
    method: PUT
- name: delete_volume
  endpoint:
    path: /reference/delete-a-volume-v2
    method: DELETE
- name: start_import_job
  endpoint:
    path: /reference/start-an-import-job-v2
    method: POST
- name: get_details_of_import_job
  endpoint:
    path: /reference/get-details-of-an-import-job-v2
    method: GET
- name: start_export_job
  endpoint:
    path: /reference/start-an-export-job-v2
    method: POST
- name: list_export_jobs
  endpoint:
    path: /reference/list-export-jobs-v2
    method: GET
- name: list_import_jobs
  endpoint:
    path: /reference/list-import-jobs
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: data
    params: {}
- name: billing_list
  endpoint:
    path: /billing/list
    method: GET
- name: billing_get
  endpoint:
    path: /billing/get
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: records
- name: members
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: projects
- name: members
  endpoint:
    path: /members
    method: POST
    data_selector: members
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
    params: {}
- name: files_metadata
  endpoint:
    path: /files/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: apps_list
  endpoint:
    path: /apps/list
    method: GET
- name: apps_get
  endpoint:
    path: /apps/get
    method: GET
- name: apps_import
  endpoint:
    path: /apps/import
    method: POST
- name: apps_copy
  endpoint:
    path: /apps/copy
    method: POST
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: volumes
    params: {}
- name: exports
  endpoint:
    path: /exports
    method: GET
    data_selector: exports
    params: {}
- name: imports
  endpoint:
    path: /imports
    method: GET
    data_selector: imports
    params: {}
- name: create_volume
  endpoint:
    path: /reference/create-a-volume-v2
    method: POST
- name: list_volumes
  endpoint:
    path: /reference/list-volumes-v2
    method: GET
- name: get_details_of_a_volume
  endpoint:
    path: /reference/get-details-of-a-volume-v2
    method: GET
- name: update_volume
  endpoint:
    path: /reference/update-a-volume-v2
    method: PUT
- name: delete_volume
  endpoint:
    path: /reference/delete-a-volume-v2
    method: DELETE
- name: start_import_job
  endpoint:
    path: /reference/start-an-import-job-v2
    method: POST
- name: get_details_of_an_import_job
  endpoint:
    path: /reference/get-details-of-an-import-job-v2
    method: GET
- name: start_export_job
  endpoint:
    path: /reference/start-an-export-job-v2
    method: POST
- name: list_export_jobs
  endpoint:
    path: /reference/list-export-jobs-v2
    method: GET
- name: list_import_jobs
  endpoint:
    path: /reference/list-import-jobs
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in api
- Requires setup of connected app in Seven Bridges Platform
- Ensure to use proper authentication token
- Requires setup of connected app in Seven Bridges
- Some responses may have nulls in deeply nested fields
- User experience is largely identical across cloud providers
- Uses OAuth2 with refresh token — requires setup of connected app in Seven Bridges
- Some objects may return nulls in deeply nested fields
- If you haven't logged in to the Platform in 90 days, your account will be temporarily
  disabled due to inactivity.
- AWS charges for the use of their compute instances on a per second basis, but the
  rate depends on the AWS pricing model.
- 'The Platform uses two AWS pricing models: On-Demand and Spot.'
- If there aren't enough funds in the billing group that is associated to a project,
  a task that is executed within the project will fail to start.
- Data transfer costs are charged by AWS as the underlying cloud provider and are
  passed through by Seven Bridges.
- Ensure project location matches the location of your files to avoid data transfer
  costs.
- Seven Bridges passes through EBS storage costs.
- You are not charged for storing public files from our Public reference files repository
  or from our public datasets when you copy them into your project.
- Ensure input files are compatible with STAR tool
- Make sure Docker is running before creating the Docker image.
- Ensure Docker is running before executing commands.
- Login to the Seven Bridges image registry may time out after a while.
- You should enter your authentication token in response to the password prompt, not
  your Seven Bridges password.
- Some tools may complete runs successfully even though we provide incompatible pairs
  on the input.
- As a newcomer to bioinformatics, you might need to revisit the alignment step to
  address incompatible alignment coordinates.
- Invalid command lines tend to produce misleading error messages.
- Comprehensive tips for reliable and efficient analysis set-up
- Ensure to set appropriate app parameters before running the workflow
- Common issues can arise if certain inputs are configured incorrectly.
- Batch analysis allows independent execution of tasks.
- Users can connect their own cloud storage buckets to the Platform using Volumes.
- This API is used for integrating with the Seven Bridges Platform.
- Ensure that the API keys have the correct permissions.
- The API may have rate limits.
- This analysis will take around 75 minutes to run with a typical BAM file.
- Users are not charged for files that are part of the hosted datasets on Seven Bridges
  Platform.
- Files that are produced on the Platform are stored in the Platform storage.
- Limit of 1,000 requests in 5 minutes
- If you are using the Seven Bridges Platform on AWS EU, please use eu-images.sbgenomics.com
  as the image registry instead of images.sbgenomics.com.
- If you signed up for the Seven Bridges Platform by explicitly selecting Google Cloud
  Platform as the cloud service provider, you will need to use Docker Hub to store
  your images, instead of the Seven Bridges image registry.
- For any questions or if help with using API is needed, please contact support.
- Bulk methods are available to reduce the number of requests
- Users may need to check error messages for troubleshooting.
- For STAR aligner, the user does not need to provide transcriptome reference explicitly.
- Uses OAuth2 with refresh token — requires setup of connected app in Seven Bridges
  API
- The API allows you to interact with the Seven Bridges Platform as you would via
  the visual interface.
- Users can connect their cloud storage buckets to the Platform using the Volume feature.
- Some tools may require specific input configurations to work properly.
- Check on their files after each project phase is completed and discard any files
  which are not needed for the future analysis.
- Some objects like Contact may return nulls in deeply nested fields
- Common issues may arise if input parameters are configured incorrectly.
- Testing workflows on a small scale is recommended to minimize costs.
- Files from these hosted datasets are referenced in the project, while the physical
  file remains in the corresponding cloud bucket.
- Requires setup of connected app in Seven Bridges API
- Requires setup of connected app in API
- Set up two-factor authentication
- API rate limits apply — ensure to manage your requests effectively.
- Before you start using the API, ensure you have your authentication token.
- Download restrictions disable file download and preview within the project space.
- Some API calls may have limitations on requests
- Maximum number of characters per tag is 36.
- Maximum number of tags per project is 15.
- Requires setup of connected app in sbgenomics
- Add a collaborator to a project
- Manage your subscription
- Only existing users of the Seven Bridges Platform can be added as project members.
- Multi-factor authentication has to be enabled on both Seven Bridges Platform and
  CGC.
- Project Files can be viewed, edited, and copied by the project administrator and
  by project members with copy permissions.
- Maximum number of files you can submit for upload is 250,000.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- The maximum number of files you can submit for upload is 250,000.
- You must register with eRA Commons credentials to access Controlled Data.
- This upload method can also be used with (pre)signed URLs from cloud storage services
  such as AWS S3 and Google Cloud Storage.
- It is not possible to import files from an FTP/HTTP link which has a redirection.
- You can only edit metadata for files in the current project.
- Upload jobs can be paused and resumed as needed.
- A maximum of 250,000 files can be submitted for upload at once.
- Updated about 2 months ago
- Allowed characters in file names are all alphanumerics and special characters except
  slash (`/`). File names can’t be longer than 255 characters.
- Allowed characters in folder names are `a-z`, `A-Z`, `0-9`, and special characters
  (`_`), (`-`), and (`.`). Folder names can’t be longer than 255 characters.
- Supplementary files do not need to be included for upload in order for their metadata
  to be applied to the files being uploaded.
- Edit metadata using the API
- The maximum number of links you can put inside the text area is 500.
- To import again, you will have to wait for 5 minutes.
- Use OAuth2 for authentication.
- Some API calls may have rate limits.
- Authentication token expires after 1 hour.
- Maximum number of metadata key-value pairs per file is 1000.
- Maximum length of a metadata key is 100 bytes (UTF-8 encoding).
- Metadata key must not contain characters . and $ .
- Maximum length of a metadata value is 300 bytes (UTF-8 encoding).
- It's not possible to update any metadata value belonging to metadata schema for
  a Dataset file.
- Metadata and tags can only be set for files. Folders aren't supported.
- Metadata keys and values are treated as case sensitive.
- Maximum size for the metadata manifest file is 5 GiB.
- Maximum number of key-value pairs per file is 1000, including null-value keys.
- This feature can be used to edit metadata schema and custom metadata fields. However,
  editing the system metadata fields (e.g. file name, id, size, extension, etc.) is
  not allowed.
- The tag(s) which are currently applied as a filter will be highlighted in the list
  of files.
- The maximum file size for the manifest is 5 GiB.
- The exported manifest file contains metadata for files only, metadata for folders
  is not supported.
- Keys and values are case sensitive unless explicitly treated differently by a tool
  or a part of the Platform.
- You can combine filters for file actions.
- The maximum size for the metadata manifest file is 5 GiB.
- Requires setup of Seven Bridges client applications
- Restored files are available for 7 days.
- Restoring files from Amazon Glacier may be costly.
- Some operations may have limitations on file types
- Requires setup of OAuth2 credentials.
- API limits on the number of requests per minute.
- OAuth2 with refresh token is required.
- Seven Bridges currently offers Amazon Glacier as the archiving back-end.
- SBFS is still a beta tool.
- Configure SBFS credentials
- Access via the API requires authentication.
- List all projects available to you by using the list command to determine which
  project you want to mount.
- Recommended method for managing files is via the command line interface.
- Some operations may have limitations based on user permissions
- Some actions are not available in read-only mode.
- Removing files or directories is irreversible.
- Unmount command is executed as an OS unmount command.
- On Linux OS this command has to be executed with root privileges.
- SBFS allows you to use profiles for the credentials allowing you to access multiple
  user accounts.
- API rate limits may apply.
- A file system cannot normally be unmounted when it is busy, such as when there are
  open files or when the working directory of a process is on the mounted file system.
- Using the --force option can cause data loss for open files.
- Ensure to set up your OAuth application in the Seven Bridges platform.
- Allowed characters in directory names are `a-z`, `A-Z`, `0-9`, and special characters
  (`_`), (`-`), and (`.`). Directory names can’t be longer than 255 characters.
- Some endpoints may require specific permissions based on user roles.
- Minimum suspend time is 15 minutes.
- Please note that once published, you will be responsible for maintaining the app
  or workflow and any in-depth troubleshooting or questions will be directed to you.
- Use the `sbpack_nf` command to publish Nextflow apps.
- Ensure the app follows Nextflow community best practices.
- Requires OAuth2 authentication setup on the Seven Bridges Platform.
- Requires setup of connected app in the platform
- Requires setup of credentials in unified configuration file
- Conditional execution allows for steps to be skipped if a specified condition is
  met.
- Run Condition can be set through an expression in the workflow editor.
- Ensure that the project specified with `--projectid` exists and contains the referenced
  files.
- Use descriptive tags when uploading sample sheets to organize files effectively.
- Validate sample sheets before uploading to catch missing files early in the process.
- Always back up your original sample sheet to avoid data loss during remapping or
  validation.
- Uses OAuth2 for authentication — requires setup of credentials in the Seven Bridges
  credentials file.
- Uses OAuth2 with refresh token — requires setup of connected app in Seven Bridges
  API.
- Profile contains the Platform API endpoint and authentication token.
- Workflows are executed in Local mode.
- Use of Docker is required.
- Storing your images in the Seven Bridges Image Registry rather than in Docker Hub
  will speed up processing time on the Platform
- Nextflow app copies made through standard visual interface or API methods instead
  of using sbcopy will still point to the originally pushed code package and the original
  project where it is located.
- Nextflow execution mode can be set at app level or task level.
- If execution mode isn't explicitly set, multi-instance mode is used as the default.
- Requires setup of connected app in the Seven Bridges Platform
- Ensure that the project specified with --projectid exists and contains the referenced
  files.
- To get access to this feature, please contact our Support Team.
- Workflows are executed in Local mode. Make sure your workflow can run in Local mode
  before porting it to the Seven Bridges Platform.
- The first instruction must be FROM to specify the base image.
- Requires setup of authentication via OAuth2.
- Some endpoints may have rate limits
- Requires setup of OAuth2 for client applications
- Be aware of API rate limits
- Do not use the root directory of your file system as the build context.
- API requires authentication via OAuth2.
- 'Username: <division-slug>/<username>, and Password: Authentication Token'
- The instruction FROM must be the first non-comment line in a Dockerfile.
- LABEL is not mandatory but highly suggested for adding metadata.
- Docker commands are commonly used for managing Docker images and containers.
- Seven Bridges currently utilises ubuntu:18.04 as the base image.
- It is advisable to add a revision note in the Changelog file.
- Docker repository names can include only lowercase and uppercase letters of the
  English alphabet, numbers from 0 to 9, dash (-) and underscore (_), while use of
  dots is not allowed.
- Ensure proper OAuth2 setup for token retrieval.
- Do not use the root directory of your file system (`/`) as the build context.
- The account used to authenticate with your Shared Drives needs to be the same as
  the one used to run docker commands.
- 'Every instruction should be described by using comments (comments start with #).'
- The Docker image maintainer should be set using LABEL.
- Dynamic expressions in tool descriptions are supported.
- Some responses may have nested fields with null values
- The API has rate limits that may affect performance.
- Requires setup of connected app in Seven Bridges Platform.
- Some API responses may have varying structures
- A tool cannot, in general, write to its input files since they are not in the tool's
  working directory.
- A tool cannot in general report one of its input files as an output file.
- The file paths of a tool's input files must be given relative to the tool's working
  directory.
- Some data may return nulls in deeply nested fields
- Ensure you have the correct OAuth scopes set up for data access
- Logs are produced and kept for each job executed on the Platform.
- Make files available in your tool's working directory
- To set a file as suggested for an app's input port, upload it to the Platform first.
- Some endpoints may require specific permissions.
- All endpoints require authentication via OAuth2.
- Ensure that the API key has the necessary permissions to access the resources.
- You need copy permissions to be able to copy an app.
- Requires authentication and connected app setup.
- Login times out after a while.
- Use the authentication token for login, not the platform password.
- Suggested files can currently be defined only for sbg:draft-2 workflows.
- Make sure you don't copy your apps from versions with the label if you want to receive
  update notifications when the original app changes.
- API rate limits may apply depending on your subscription plan.
- Requires setup of OAuth2 credentials in the application console.
- Requires setup of OAuth2 application for API access
- To ensure optimal consistency and functioning of your workflows, it is not recommended
  to mix CWL v1.0 and sbg:draft-2 apps in the same workflow.
- Requires setup of connected app in platform
- Login times out after a while
- Workflow created using RNA-seq Alignment - STAR
- Requires setting up input and output nodes properly
- Some tools may have specific input handling requirements
- Requires setup of OAuth2 for API access
- Secondary (index) files need to be added to the same project where the files they
  accompany are located.
- Secondary (index) files usually don't have to be set explicitly as task inputs.
- The current default instance the Scheduling Algorithm will attempt to use for execution
  is c4.2xlarge, which has 8vCPUs and 15 GB RAM.
- The default value for sbg:maxNumberOfParallelInstances is 1.
- Some workflows may require specific input files to function properly
- Scattering may increase overall cost if used with certain settings.
- Separate jobs are generated and executed to process input values in parallel.
- Memoization will not work if a task has folders set up as its inputs or outputs.
- Be careful with non-deterministic tools. If you need stochastic results for a non-deterministic
  tool with the same inputs, you should turn off memoization.
- If your tool dynamically pulls inputs and pushes outputs from/to an external source,
  you should turn off memoization.
- The selected location is the location for analysis (task or Data Studio) execution,
  e.g. the exact region where computation resources (virtual instances and accompanying
  attached disks) will be spun up.
- Secondary (index) files need to be added to the same project where the files they
  accompany are located and where tasks are being executed.
- Secondary (index) files usually don't have to be set explicitly as task inputs.
  Instead, they are pulled automatically when the task starts.
- Beware of mismatches between tool resource requirements and the resources available
  on the provisioned computation instance. Your task will fail if a tool requires
  more resources than the provisioned computation instance.
- Scattering allows for parallel processing of input values.
- Ensure the same number of input values on all scattered input ports when using the
  dot product scatter method.
- Some responses may return nulls in deeply nested fields
- OAuth2 authentication is required for API access.
- If you do not specify resource requirements for the tools you upload to the Platform,
  default tool resource requirements will be used.
- Instances labelled with Yes in the auto-scheduling column are the instances that
  can be selected for task execution automatically based on the defined CPU and memory
  requirements.
- Creating Docker images containing tools that are run on GPU instances is similar
  to the process of creating Docker images with tools that are designed for CPU instances.
- Older binaries are usually built for older GPU architectures and might not work
  on newer GPUs.
- Files that belong to the ICGC dataset can only be used in projects whose location
  is us-east-1 (N. Virginia)
- Logs can be used to troubleshoot failed tasks.
- Spot Instances can be activated at the project and task level, with task settings
  overriding project settings.
- Some responses may vary based on user permissions
- The default attached storage size is 1 TB, but it can be changed to anything between
  2GB and 4 TB.
- It is recommended to use one of Docker images provided by NVIDIA as the base image.
- Storage size can be changed to anything between 2GB and 4 TB.
- Supports visualizing multiple indexed BAM files.
- Only indexed BAM files can be visualized.
- Ensure you have permissions to access the projects and files.
- This page documents the BETA version of the Variant Browser app with features that
  are limited in scope.
- Outputs a report file whose name ends fastqc.b64html that can be viewed directly
  in your internet browser.
- API requires OAuth2 authentication.
- Real-time job monitoring available
- API access requires login
- The most common reasons for failed tasks are missing input files, missing or incorrect
  metadata, and missing or incorrect parameters for a tool.
- The parallel automation runs limit can be increased if there is a need for more
  capacity.
- Use the CLI to manage automations and automation runs.
- Only the run name can be changed, all other attributes are currently read-only.
- Run state information supports streaming.
- Only indexed BAM files can be visualized using the Seven Bridges Browser.
- The Seven Bridges Browser currently supports 20 indexed BAM files to be visualized
  at a time.
- Uses OAuth2 with refresh token — requires setup of connected app in sbgenomics
- During the BETA stage, you are able to interpret demo VCF files which are readily
  available inside the app.
- This feature is available as an add-on.
- Some API endpoints may have rate limits
- The workflow outputs a report file whose name ends fastqc.b64html that can be viewed
  directly in your internet browser.
- An Alignment Summary Metrics report is available for all files with the extension
  .summary_metrics.txt.
- Make sure to include advance_access option in your profile inside ~/.sevenbridges/credentials.
- Automation execution infrastructure can scale automatically for increased workloads.
- The limit for parallel automation runs is 30 runs per Division.
- The default memory limit for rerunning an automation is 500MB, while the maximum
  allowed is 4000MB.
- Print statements can cause execution blocks and prevent parallelization.
- Automations must be flagged as 'project-based' by the automation developer if you
  want to be able to start them directly from within any of your projects.
- Dynamic conditionals tend to be less common than static conditionals.
- When put in its own step, each conditional will evaluate in its own thread, and
  therefore does not block the loop of the parent step.
- Whenever your automation script does not parallelize as expected, watch out for
  execution blocks and remember this simple trick as one possibility to resolve them.
- Token expiration is handled via refresh tokens.
- Make sure to include advance_access option in your profile inside ~/.sevenbridges/credentials
- Automation is currently advance access (think early access or beta), which means
  the Automation API might still be subject to change.
- Requires setup of OAuth2 credentials
- Ensure to handle rate limiting in the API
- Requires setup of connected app in the Seven Bridges API
- Requires WRITE permission on the automation parent entity for package creation
- Automation run can be started using either command line or file
- Execution blocks may cause unwanted delays in automation scripts.
- Some responses may include null values for optional fields
- Ensure you have the correct credentials for API access
- Before continuing with this part of the tutorial, please make sure you have `advance_access`
  enabled for the Seven Bridges API.
- Ensure to handle API rate limits appropriately.
- Requires setup of connected app in the API
- You need a Seven Bridges Platform account to be able to access Graph Genome apps.
- Running the GRAF Germline Variant Detection Workflow should cost between $4-6 depending
  on quality of the sample.
- Uses OAuth2 for authentication.
- GRAF Germline Variant Detection Workflow is only available through the Platform
  running on the AWS cloud infrastructure.
- Minimum suspend time is 15 minutes
- Selection of multiple projects is currently not supported within standard automation
  inputs.
- Any input can be defined as optional, meaning that it will be possible to run the
  automation without providing a value for the specific input.
- To make an input optional, first make sure that the `Optional` class is imported
  from Freyja at the beginning of your automation code.
- If the automation code contains an input type that is valid but does not have an
  adequate UI component, it will be rendered as a text box.
- Separate domain (sb-cruncher.com) is used for serving Data Studio editors, which
  provides better security isolation and privacy control.
- API rate limit may affect data retrieval
- Users can modify attached storage (GB) which defaults to 1024
- 'Users can select Suspend Time: On or Off'
- Access Token obtained through the OAuth2 flow should be used for the authorization
  with the Seven Bridges public API.
- All Seven Bridges Platform users automatically have copy permissions for this project.
- The VCF Benchmarking Workflow requires several inputs to work properly.
- The default input files provided with the VCF Benchmarking Workflow are intended
  for benchmarking against the Genome in a Bottle NA12878 sample, processed with the
  GRCh37 reference genome.
- The CCLE public project is not available for AWS EU.
- You don't need special access or authorization status to use the data in this project.
- The SGDP public project is not available for AWS EU.
- Each dataset in this Preview Data Release is licensed under a Creative Commons Attribution
  4.0 International License.
- Enterprise accounts are granted to users through their organization.
- Run full-featured 3D Slicer in the cloud with GUI access for advanced medical imaging
  visualization and analysis.
- Maintain persistent workspaces so settings, data, and tools remain available across
  sessions.
- Manage two-factor authentication
- Project files in the published project do not appear in the Public Reference Files
  repository
- Published apps are tagged to indicate the publisher
- The expiration time of the authorization code is 10 minutes.
- The access token lifetime is 1800 seconds (30 minutes).
- The refresh token lifetime is 86400 seconds (24 hours).
- As an Enterprise administrator you can review billing information for all of your
  Divisions
- You only have read permissions for public projects.
- Smart Variant Filtering API allows users to filter genomic variants based on various
  parameters.
- Can only access projects they were added to
- Is given permissions for a project
- Can only be a project member (not allowed to become a project administrator)
- Cannot be added to a Team within a Division
- Review billing information for your Division
- Some API responses may vary based on user permissions
- Precautionary measures when downloading Excel files
- Set credit card as payment method
- This data is ideal for interrogating the genomic landscape of cancer cell lines.
- Datasets available under the project's Files tab.
- Authentication via OAuth2 with refresh token is required.
- Enterprise accounts can only be added to the Platform by Division administrator.
- Anyone you add as a Division administrator will be invited to register for an account
  on the Platform after which they will become a Division administrator.
- If the user already has an account on the Platform, they will be immediately added
  to the Division and granted administrator privileges.
- Single sign-on (SSO) setup
- Is single logout (SLO) supported? Yes, both SP-initiated and IdP initiated logout
  flows are supported, as defined by SAML protocol.
- Precautionary measures when downloading Excel files suggest opening in a simple
  text viewer first.
- All API requests need to have the HTTP header X-SBG-Auth-Token.
- Ensure to have the correct OAuth scopes for accessing division members
- Almost all API requests will require your Seven Bridges authentication token.
- Some responses may contain nulls in deeply nested fields
- The authentication token must be included in every API request.
- Ensure to have a billing group ID when creating a project.
- Use 'project' parameter to specify the target project for file operations.
- If you are an Enterprise administrator or a Division administrator, you can manage
  email notifications for the entire Division.
- Ensure proper permissions are set for collaborators
- Requires authentication token for all API requests
- Requires setting up an API key for authentication
- The API rate limit is a limit to the number of calls you can send to the Seven Bridges
  public API within a predefined time frame. That limit is 1000 requests within 5
  minutes.
- Users need to be invited to a division by the division admin.
- Unique ID is configurable and not case sensitive.
- Batch tasks are recommended for submitting multiple tasks.
- All API requests need to have the HTTP header X-SBG-Auth-Token which you should
  set to your authentication token.
- Not optimized for rate limit
- Using a bulk API call you can copy up to 100 files
- The Seven Bridges API allows you to import files from a volume in bulk rather than
  one by one. Using the bulk API feature, you can import up to 100 files per call.
- Using the bulk API feature, you will first query all files that need to be imported
  and then use one API to import up to 100 files.
- Max legal bulk size for import is 100 items.
- 'Importing individual files requires two API calls for each file: one to find the
  file by name, and another one to import it. We recommend using the bulk API call
  instead.'
- The max legal bulk size for import is 100 items.
- Use 'visibility=public' to filter for public workflows.
- Maximum allowable limit per page is 100.
- Ensure to set up the client correctly for OAuth2 authentication.
- Recommended to use batch tasks for efficiency.
- Optimal way to delete multiple files is via bulk API call which can delete up to
  100 files.
- 'Not optimized for rate limit: Fetch and delete files one by one using a loop.'
- 'Optimized for rate limit: Fetch all files at once and then use a bulk API call
  to delete them in batches of 100 files or less.'
- Exporting files to a volume
- Use bulk API calls to copy up to 100 files with a single API call.
- 'Not optimized for rate limit: Copying individual files requires two API calls for
  each file.'
- 'Optimized for rate limit: Using a bulk API call you can copy up to 100 files.'
- Seven Bridges bulk API calls should be used to reduce the overall number of API
  calls.
- Max legal bulk size for export is 100 items.
- Export to a volume is available only via the API, including API client libraries,
  and through the Seven Bridges CLI.
- Using the bulk API feature, you can import up to 100 files per call.
- 'Importing individual files requires two API calls for each file: one to find the
  file by name, and another one to import it.'
- Changing the default pagination limit (50) to its allowed maximum value (100) cuts
  the number of required API calls in half when iterating over the entire result set
  of a query.
- Optimized for rate limit
- API requires authentication for access to data.
- API calls require authentication
- Operations on volumes are handled by the Seven Bridges API.
- Metadata for multiple files can be set using a bulk API call instead of one call
  per file.
- Requires user to be authenticated to access file metadata.
- An optimal way to update metadata for multiple files is to use a bulk API call and
  update metadata for up to 100 files per call.
- Using a unified configuration file to store credentials is preferred.
- Use OAuth2 with refresh token for authentication.
- Deleting multiple files requires proper authorization.
- Export to a volume is available only via the API and through the Seven Bridges CLI.
- Setting maximum pagination limit in queries
- Keep your authentication token safe! It encodes all your credentials on the Platform.
  Generally, we recommend storing the token in a configuration file, which will then
  be stored in your home folder rather than in the code itself.
- Setting maximum pagination limit in queries is recommended.
- Ensure to handle the 409 conflict error when copying apps that already exist in
  the project.
- Polling for task status should not be done in quick succession.
- Prior to using the Seven Bridges Command Line Interface, you must enter your credentials
  to authenticate with the Platform.
- 'Not optimized for rate limit: Iterate over all projects and compare names.'
- 'Optimized for rate limit: Use ''name'' query parameter in search to restrict results.'
- Requires setup of user credentials for accessing a project.
- Once such a connection is established, files and objects from your cloud account
  are available for computation on the Seven Bridges Platform.
- Uses OAuth2 with refresh token — requires setup of connected app in platform
- Store credentials to access Seven Bridges client applications and libraries
- Unified configuration file is the preferred method for storing credentials.
- Each profile must have exactly one api_endpoint and one auth_token key.
- Some users may have varying permissions across different projects.
- Use the correct file_id to access file details.
- Ensure proper permissions to manage files in projects.
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- Requires OAuth2 with refresh token setup.
- Keep your authentication token safe! It encodes all your credentials on the Platform.
- Generally, we recommend storing the token in a configuration file, which will then
  be stored in your home folder rather than in the code itself.
- Ensure to check API rate limits.
- Access to cloud storage repositories from the Platform is mediated by volumes.
- Aliases do not count towards your storage costs.
- The Platform cannot track changes to the file an alias points to.
- API requires authentication using user credentials.
- The ID of a file is a hexadecimal string automatically assigned to a file in a project.
- Volumes authorize the Platform to access and query objects on a specified cloud
  storage on your behalf.
- Bioinformatics data is commonly stored on compliant cloud storage services, such
  as Amazon Web Services (AWS) and Google Cloud Platform (GCP).
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Resource does not exist'
- '404 Not Found: Verify endpoint URL or resource availability'
- FATAL INPUT FILE error, no valid exon lines in the GTF file
- 'Warning: The SAM/BAM file declares less reference sequences (287) than RSEM knows
  (228028)! Please make sure that you aligned your reads against transcript sequences
  instead of genome.'
- 'Exception: Quality scale for range (0, 255) not found.'
- 'A USER ERROR has occurred: Read SRR316957.2380012 chr9:41008959-41009037 is malformed:
  The input .bam file contains reads with no platform information.'
- '404 Not Found: Ensure the endpoint path is correct'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '403 Forbidden: Check your API key permissions.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Try again later.'
- 'API rate limits: The maximum number of API requests is 1000 requests in 5 minutes.'
- 'Rate limit exceeded: Throttle API calls'
- 'Docker image not found: Check for typos in the Docker image name.'
- 'Insufficient disk space: Ensure adequate disk space is available.'
- 'Scatter over a non-list input: Provide an array instead of a single file.'
- 'Warning: The SAM/BAM file declares less reference sequences than RSEM knows. Make
  sure that you aligned your reads against transcript sequences instead of genome.'
- 'tar: This does not look like a tar archive.'
- 'A USER ERROR has occurred: Read is malformed: The input .bam file contains reads
  with no platform information.'
- '2024-07-17T13:20:30.298601490Z Exception in thread "main" java.awt.HeadlessException:
  No X11 DISPLAY variable was set, but this program performed an operation which requires
  it.'
- 'ValueError: NOT_FOUND: could not load fasta and/or fai for fasta.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: The requested resource could not be found.'
- 'Error Code: Connection Failed - Ensure the server is reachable.'
- 'Error Code: Authentication Failed - Check your username and password.'
- '401 Unauthorized: Check your authentication details.'
- '429 Too Many Requests: Rate limit exceeded.'
- '429 Too Many Requests: Reduce API call frequency'
- '401 Unauthorized: Check OAuth token validity'
- '403 Forbidden: Check permissions.'
- '404 Not Found: Ensure endpoint is correct.'
- '401 Unauthorized: Recheck OAuth token validity.'
- '403 Forbidden: Insufficient permissions for the requested operation.'
- '401 Unauthorized: Check your credentials and permissions.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: The specified app ID does not exist.'
- '403 Forbidden: You do not have permission to access this resource.'
- '400 Bad Request: Check request parameters'
- '403 Forbidden: Access denied for the requested resource'
- '404 Not Found: Check endpoint URL'
- '403 Forbidden: Check permissions'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '403 Forbidden: Check permissions for the requested resource.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Retry the request after some time.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify the OAuth token.'
- 'INVALID_CREDENTIALS: Check your client ID and secret'
- 'ACCESS_DENIED: Ensure you have the correct permissions'
- '404 Not Found: Verify the endpoint URL'
- '403 Forbidden: Check your permissions'
- '404 Not Found: Verify the endpoint or resource'
- '403 Forbidden: Check your permissions for this endpoint.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Invalid credentials or token expired.'
- '429 Too Many Requests: Rate limit exceeded. Try again later.'
- '401 Unauthorized: Check OAuth token or scopes.'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the requested resource.'
- '401 Unauthorized: Check client credentials and token validity.'
- '401 Unauthorized: Recheck OAuth token and scopes'
- '404 Not Found: Ensure the endpoint is correct'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify endpoint URL.'
- '500 Internal Server Error: Retry the request.'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Recheck OAuth credentials'
- '403 Forbidden: Access denied to the requested resource'
- '404 Not Found: Ensure the endpoint URL is correct'
- '500 Internal Server Error: Retry the request after some time'
- 'Insufficient resources: Your task will fail if a tool requires more resources than
  the provisioned computation instance.'
- '401 Unauthorized: Check your API token.'
- '400 Bad Request: Check the request parameters for accuracy.'
- '404 Not Found: Ensure the endpoint exists and is accessible.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Check your credentials or token expiration.'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Verify the endpoint and resource'
- '401 Unauthorized: Check your authentication token.'
- '401 Unauthorized: Recheck OAuth token expiration'
- '401 Unauthorized: Recheck authentication token'
- '404 Not Found: Check the endpoint URL'
- '401 Unauthorized: Verify your access token'
- '400 Bad Request: Review your request parameters'
- '401 Unauthorized: Check your authentication token'
- '403 Forbidden: You do not have permission to access this resource'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify endpoint URL'
- '401 Unauthorized: Check client_id and client_secret.'
- '400 Bad Request: Check the query parameters for correctness.'
- '401 Unauthorized: Verify your authentication credentials.'
- '403 Forbidden: Insufficient permissions to access the resource'
- '404 Not Found: Check the endpoint and resource identifier'
- '401 Unauthorized: Check your credentials and permissions'
- '403 Forbidden: Access to the resource is denied'
- '401 Unauthorized: Check your API key and permissions.'
- '401 Unauthorized: Recheck authentication token.'
- '404 Not Found: Ensure the endpoint and project ID are correct.'
- '401 Unauthorized: Recheck API key validity.'
- '401 Unauthorized: Check API key and permissions'
- '404 Not Found: Check the resource path and IDs'
- 'REQUEST_LIMIT_EXCEEDED: No further calls are accepted by the API server, until
  the 5 minute interval ends.'
- There were errors with bulk exporting.
- There were errors with bulk submission.
- '401 Unauthorized: Recheck auth token.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '401 Unauthorized: Check your credentials and OAuth token.'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Verify the file ID.'
- '404 Not Found: Check if the file ID is correct.'
- '403 Forbidden: Ensure you have permission to delete the file.'
- '409 Conflict: App with same ID already exists in project.'
- Error while waiting for imports to finish.
- Error while waiting for export to finish.
- '401 Unauthorized: Check your token or permissions.'
- '403 Forbidden: User does not have permission for the requested action.'
- '404 Not Found: The specified project or member does not exist.'
- 'FILE_NOT_FOUND: Check if the file_id is correct.'
- 'UNAUTHORIZED: Ensure proper authentication and permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'upload failed: Exception'
- 'part upload failed: Exception'
- '404 Not Found: Check if the file_id is correct'
- '403 Forbidden: Ensure you have permission for the project'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - OAuth2
  - sevenbridges-python
  - credentials
  - App
  - Project
  - Token
  - Config
  - client_id
  - client_secret
  - identity management system
  - identity provider
  - X-SBG-Auth-Token
client:
  base_url: https://igor.sbgenomics.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
