resources:
- name: fullnode_rest_api
  endpoint:
    path: /build/apis/fullnode-rest-api
    method: GET
    data_selector: records
- name: faucet_api
  endpoint:
    path: /build/apis/faucet-api
    method: GET
    data_selector: records
- name: data_providers
  endpoint:
    path: /build/apis/data-providers
    method: GET
    data_selector: records
- name: aptos_labs_geomi
  endpoint:
    path: /build/apis/aptos-labs-developer-portal
    method: GET
    data_selector: records
- name: Faucet
  endpoint:
    path: /build/apis/faucet-api
    method: GET
    data_selector: tokens
- name: Aptos Fullnode
  endpoint:
    path: /build/apis/fullnode-rest-api
    method: GET
    data_selector: state
- name: Indexer
  endpoint:
    path: /build/indexer
    method: GET
    data_selector: state
- name: Transaction Stream
  endpoint:
    path: /build/indexer/txn-stream
    method: GET
    data_selector: transactions
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: get_fungible_asset_balances
  endpoint:
    path: /build/indexer
    method: GET
    data_selector: current_fungible_asset_balances
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: fullnode_rest_api
  endpoint:
    path: /build/apis/fullnode-rest-api
    method: GET
    data_selector: records
- name: faucet_api
  endpoint:
    path: /build/apis/faucet-api
    method: GET
    data_selector: records
- name: data_providers
  endpoint:
    path: /build/apis/data-providers
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: account
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: digital_asset
  endpoint:
    path: /mintDigitalAssetTransaction
    method: POST
    data_selector: transaction
    params: {}
- name: collection
  endpoint:
    path: /createCollectionTransaction
    method: POST
    data_selector: transaction
    params: {}
- name: transfer_asset
  endpoint:
    path: /transferDigitalAssetTransaction
    method: POST
    data_selector: transaction
    params: {}
- name: transaction_stream
  endpoint:
    path: /indexer/txn-stream
    method: GET
    data_selector: records
- name: nft_aggregator
  endpoint:
    path: /indexer/nft-aggregator
    method: GET
    data_selector: records
- name: moon_coin
  endpoint:
    path: /build/guides/first-coin
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: get_account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
- name: get_nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: message
  endpoint:
    path: /sources/message.move
    method: POST
- name: message_tests
  endpoint:
    path: /sources/message_tests.move
    method: POST
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/nft/collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: create_smart_contract
  endpoint:
    path: /build/guides/build-e2e-dapp/1-create-smart-contract
    method: GET
- name: set_up_frontend
  endpoint:
    path: /build/guides/build-e2e-dapp/2-set-up-the-frontend
    method: GET
- name: fetch_data_from_chain
  endpoint:
    path: /build/guides/build-e2e-dapp/3-fetch-data-from-chain
    method: GET
- name: submit_data_to_chain
  endpoint:
    path: /build/guides/build-e2e-dapp/4-submit-data-to-chain
    method: GET
- name: handle_tasks
  endpoint:
    path: /build/guides/build-e2e-dapp/5-handle-tasks
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: nfts_owned
  endpoint:
    path: /v1/accounts/{account_address}/nfts
    method: GET
    data_selector: data
    params: {}
- name: get_account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: get_fungible_asset_balances
  endpoint:
    path: /v1/accounts/{address}/balances
    method: GET
    data_selector: balances
    params: {}
- name: managed_fungible_asset
  endpoint:
    path: /aptos-move/move-examples/fungible_asset/managed_fungible_asset
    method: POST
- name: multisig_managed_coin
  endpoint:
    path: /aptos-move/move-examples/fungible_asset/multisig_managed_coin
    method: POST
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: rotate_authentication_key
  endpoint:
    path: /account/rotate_authentication_key
    method: POST
    data_selector: account::rotate_authentication_key
- name: rotate_authentication_key_call
  endpoint:
    path: /account/rotate_authentication_key_call
    method: POST
    data_selector: account::rotate_authentication_key_call
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: Result
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: balances
  endpoint:
    path: /accounts/{address}/balance/{asset_type}
    method: GET
    data_selector: balance
    params: {}
- name: transaction
  endpoint:
    path: /transactions/by_version/{version}
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
- name: nfts
  endpoint:
    path: /build/indexer/indexer-api/get-nfts
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: fungible_asset_events
  endpoint:
    path: /transactions/by_version/{version}
    method: GET
    data_selector: events
    params: {}
- name: fungible_asset_changes
  endpoint:
    path: /transactions/by_version/{version}
    method: GET
    data_selector: changes
    params: {}
- name: transfer_coins
  endpoint:
    path: /transactions
    method: POST
    data_selector: result
    params: {}
- name: current_balance_for_coin
  endpoint:
    path: /accounts/{account_address}/resource/0x1::coin::CoinStore
    method: GET
    data_selector: balance
    params: {}
- name: current_balance_for_fungible_asset
  endpoint:
    path: /accounts/{fungible_store_object_address}/resource/0x1::fungible_asset::FungibleStore
    method: GET
    data_selector: balance
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /transactions/by_version/{version}
    method: GET
    data_selector: transactions
    params: {}
- name: account_transactions
  endpoint:
    path: /account/{address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: account_events_withdraw
  endpoint:
    path: /accounts/{address}/events/0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>/withdraw_events
    method: GET
    data_selector: events
    params: {}
- name: BTC/USD
  endpoint:
    path: /path/to/btc/usd
    method: GET
    data_selector: data
    params: {}
- name: APT/USD
  endpoint:
    path: /path/to/apt/usd
    method: GET
    data_selector: data
    params: {}
- name: ETH/USD
  endpoint:
    path: /path/to/eth/usd
    method: GET
    data_selector: data
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: balances
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: Faucet
  endpoint:
    path: /build/apis/faucet-api
    method: GET
- name: Fullnode
  endpoint:
    path: /build/apis/fullnode-rest-api
    method: GET
- name: Indexer
  endpoint:
    path: /build/indexer
    method: GET
- name: Transaction Stream
  endpoint:
    path: /build/indexer/txn-stream
    method: GET
- name: Fullnode Rest API
  endpoint:
    path: /build/apis/fullnode-rest-api
    method: GET
    data_selector: data
    params: {}
- name: Faucet API
  endpoint:
    path: /build/apis/faucet-api
    method: GET
    data_selector: data
    params: {}
- name: Data Providers
  endpoint:
    path: /build/apis/data-providers
    method: GET
    data_selector: data
    params: {}
- name: Aptos Labs Geomi
  endpoint:
    path: /build/apis/aptos-labs-developer-portal
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: mint
  endpoint:
    path: /mint
    method: POST
    data_selector: null
    params:
      amount: '10000'
      address: '0xd0f523c9e73e6f3d68c16ae883a9febc616e484c4998a72d8899a1009e5a89d6'
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nfts_owned
  endpoint:
    path: /v1/accounts/{account_address}/nfts
    method: GET
    data_selector: nfts
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nfts
  endpoint:
    path: /v1/accounts/{account_address}/nfts
    method: GET
    data_selector: nfts
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: account_data
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: transaction_data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts/{address}
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{accountAddress}/transactions
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /v1/accounts/{accountAddress}
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft_collections
    method: GET
    data_selector: collections
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account_address}/nft_collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: GetFungibleAssetBalances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: current_fungible_asset_balances
    params: {}
- name: GetAccountTransactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: GetAptosName
  endpoint:
    path: /build/indexer/indexer-api/ans-lookup
    method: GET
    data_selector: aptos_name
    params: {}
- name: GetFungibleAssetInfo
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-info
    method: GET
    data_selector: asset_info
    params: {}
- name: GetNFTCollections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: nft_collections
    params: {}
- name: GetNFTs
  endpoint:
    path: /build/indexer/indexer-api/get-nfts
    method: GET
    data_selector: nfts
    params: {}
- name: GetTokenMetadata
  endpoint:
    path: /build/indexer/indexer-api/token-metadata
    method: GET
    data_selector: token_metadata
    params: {}
- name: CountDelegatorsInStakingPool
  endpoint:
    path: /build/indexer/indexer-api/get-delegators
    method: GET
    data_selector: delegators_count
    params: {}
- name: Get Account Transactions Data
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: Get Aptos Name From Address
  endpoint:
    path: /build/indexer/indexer-api/ans-lookup
    method: GET
    data_selector: records
    params: {}
- name: Get Fungible Asset Balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
    params: {}
- name: Get Fungible Asset Info
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-info
    method: GET
    data_selector: records
    params: {}
- name: Count Number of Active Delegators for a Pool
  endpoint:
    path: /build/indexer/indexer-api/get-delegators
    method: GET
    data_selector: records
    params: {}
- name: Retrieve NFT Collections Owned by an Account
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
    params: {}
- name: Get NFTs Owned by an Account
  endpoint:
    path: /build/indexer/indexer-api/get-nfts
    method: GET
    data_selector: records
    params: {}
- name: Get Token Metadata by Name
  endpoint:
    path: /build/indexer/indexer-api/token-metadata
    method: GET
    data_selector: records
    params: {}
- name: Mainnet
  endpoint:
    path: /v1/graphql
    method: GET
- name: Testnet
  endpoint:
    path: /v1/graphql
    method: GET
- name: Devnet
  endpoint:
    path: /v1/graphql
    method: GET
- name: account_transactions
  endpoint:
    path: /indexer/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /indexer/get-nft-collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: Get Account Transactions Data
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
- name: Get Aptos Name From Address
  endpoint:
    path: /build/indexer/indexer-api/ans-lookup
    method: GET
- name: Get Fungible Asset Balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
- name: Get Fungible Asset Info
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-info
    method: GET
- name: Count Number of Active Delegators for a Pool
  endpoint:
    path: /build/indexer/indexer-api/get-delegators
    method: GET
- name: Retrieve NFT Collections Owned by an Account
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
- name: Get NFTs Owned by an Account
  endpoint:
    path: /build/indexer/indexer-api/get-nfts
    method: GET
- name: Get Token Metadata by Name
  endpoint:
    path: /build/indexer/indexer-api/token-metadata
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: transaction_stream
  endpoint:
    path: /build/indexer/txn-stream
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /v1/accounts/{account_address}/balances
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account_address}/nft_collections
    method: GET
    data_selector: nft_collections
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params:
      limit: '100'
- name: nft_collections
  endpoint:
    path: /v1/nft/collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: layout
  endpoint:
    path: /layout
    method: GET
    data_selector: root_key, users, chain_id
    params: {}
- name: validator_configuration
  endpoint:
    path: /validator_configuration
    method: GET
    data_selector: account_address, consensus_key, account_key, network_key, validator_host,
      full_node_host, stake_amount
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account_address}/nft_collections
    method: GET
- name: transaction_replay
  endpoint:
    path: /move/replay
    method: POST
    data_selector: Result
    params:
      network: mainnet
      txn-id: '581400718'
- name: benchmark_transaction
  endpoint:
    path: /move/replay
    method: POST
    data_selector: Result
    params:
      network: mainnet
      txn-id: '581400718'
      benchmark: true
- name: gas_profiling
  endpoint:
    path: /move/replay
    method: POST
    data_selector: Result
    params:
      network: mainnet
      txn-id: '581400718'
      profile-gas: true
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: transaction_stream
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
    params: {}
- name: node_api
  endpoint:
    path: /rest-api/operations/info
    method: GET
    data_selector: info
- name: indexer_api
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: account
- name: Node API
  endpoint:
    path: /build/apis/fullnode-rest-api
    method: GET
- name: Indexer API
  endpoint:
    path: /build/indexer/indexer-api
    method: GET
- name: Transaction Stream Service
  endpoint:
    path: /build/indexer/txn-stream
    method: GET
- name: Postgres
  endpoint:
    path: https://www.postgresql.org/
    method: GET
- name: Faucet
  endpoint:
    path: /build/apis/faucet-api
    method: GET
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: get_account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: data
- name: get_fungible_asset_balances
  endpoint:
    path: /v1/accounts/{address}/resource/{resource_type}
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: move_compile
  endpoint:
    path: /move/compile
    method: POST
    data_selector: result
    params:
      package_dir: <your-package-directory>
      named_addresses: hello_blockchain=default
- name: move_test
  endpoint:
    path: /move/test
    method: POST
    data_selector: result
    params:
      package_dir: <your-package-directory>
- name: move_publish
  endpoint:
    path: /move/publish
    method: POST
    data_selector: result
    params:
      package_dir: <your-package-directory>
      profile: <name_of_profile>
- name: move_run
  endpoint:
    path: /move/run
    method: POST
    data_selector: result
    params:
      function_id: <the-address-you-published-to>::<module_name>::<function_name>
      args: string:hello!
- name: move_prove
  endpoint:
    path: /move/prove
    method: POST
    data_selector: result
    params:
      package_dir: <your-package-directory>
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data.records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: blocks
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: events
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: general
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: tables
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: view
    params: {}
- name: faucet
  endpoint:
    path: /faucet
    method: POST
    data_selector: result
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: auth_siwa
  endpoint:
    path: /auth/siwa
    method: GET
- name: auth_siwa_callback
  endpoint:
    path: /auth/siwa/callback
    method: POST
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: data
- name: nfts
  endpoint:
    path: /v1/accounts/{account}/nfts
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: compile_code
  endpoint:
    path: /build/smart-contracts/compile
    method: POST
    data_selector: records
    params: {}
- name: deploy_code
  endpoint:
    path: /build/smart-contracts/deploy
    method: POST
    data_selector: records
    params: {}
- name: transfer_code
  endpoint:
    path: /build/smart-contracts/transfer
    method: POST
    data_selector: records
    params: {}
- name: upgrade_code
  endpoint:
    path: /build/smart-contracts/upgrade
    method: POST
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: account
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: block
    params: {}
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
    data_selector: event
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: transaction
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/nft/collections
    method: GET
    data_selector: collections
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: accountData
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: transactionsData
    params: {}
- name: AptosFramework
  endpoint:
    path: /aptos-labs/aptos-framework.git
    method: GET
    data_selector: dependencies
- name: AptosTokenObjects
  endpoint:
    path: /account/0x4/modules/code/aptos_token
    method: GET
    data_selector: ABI
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
    data_selector: records
    params: {}
- name: get_account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
- name: get_nfts
  endpoint:
    path: /v1/accounts/{account_address}/nfts
    method: GET
    data_selector: nfts
- name: collection
  endpoint:
    path: /build/smart-contracts/collections
    method: GET
    data_selector: records
- name: token
  endpoint:
    path: /build/smart-contracts/tokens
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: fungible_asset_balances
  endpoint:
    path: /indexer/fungible-asset-balances
    method: GET
    data_selector: data
- name: nft_collections
  endpoint:
    path: /indexer/get-nft-collections
    method: GET
    data_selector: data
- name: current_fungible_asset_balances
  endpoint:
    path: /build/apis/fullnode-rest-api#tag/accounts/GET/accounts/{address}/balance/{asset_type}
    method: GET
    data_selector: balances
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: create_fungible_asset
  endpoint:
    path: /build/smart-contracts
    method: POST
    data_selector: result
    params: {}
- name: withdraw
  endpoint:
    path: /withdraw
    method: POST
    data_selector: result
    params: {}
- name: deposit
  endpoint:
    path: /deposit
    method: POST
    data_selector: result
    params: {}
- name: transfer
  endpoint:
    path: /transfer
    method: POST
    data_selector: result
    params: {}
- name: check_balance
  endpoint:
    path: /check_balance
    method: GET
    data_selector: result
    params: {}
- name: check_frozen_status
  endpoint:
    path: /check_frozen_status
    method: GET
    data_selector: result
    params: {}
- name: coin
  endpoint:
    path: /coin
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: TokenData
  endpoint:
    path: /aptos-token/tokenData
    method: GET
    data_selector: records
- name: CollectionData
  endpoint:
    path: /aptos-token/collectionData
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
- name: token_transfers
  endpoint:
    path: /aptos-move/framework/aptos-token/sources/token_transfers.move
    method: GET
    data_selector: tokens
    params: {}
- name: opt_in_direct_transfer
  endpoint:
    path: /aptos-move/framework/aptos-token/doc/token.md#0x3_token_opt_in_direct_transfer
    method: GET
    data_selector: tokens
    params: {}
- name: transfer
  endpoint:
    path: /aptos-move/framework/aptos-token/doc/token.md#0x3_token_transfer
    method: GET
    data_selector: tokens
    params: {}
- name: direct_transfer_script
  endpoint:
    path: /aptos-move/framework/aptos-token/doc/token.md#function-direct_transfer_script
    method: GET
    data_selector: tokens
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cryptographic_hash_functions
  endpoint:
    path: /hash-functions
    method: GET
    data_selector: functions
    params: {}
- name: digital_signature_verification
  endpoint:
    path: /digital-signatures
    method: GET
    data_selector: signatures
    params: {}
- name: elliptic_curve_arithmetic
  endpoint:
    path: /elliptic-curves
    method: GET
    data_selector: curves
    params: {}
- name: zero_knowledge_proofs
  endpoint:
    path: /zero-knowledge-proofs
    method: GET
    data_selector: proofs
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /accounts/{account_address}/nft_collections
    method: GET
    data_selector: nft_collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /accounts/{account_address}/nft_collections
    method: GET
    data_selector: nftCollections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: OrderedMap
  endpoint:
    path: /build/smart-contracts/maps
    method: GET
    data_selector: entries
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nfts
  endpoint:
    path: /v1/accounts/{account}/nfts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
- name: nfts
  endpoint:
    path: /build/indexer/indexer-api/get-nfts
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params:
      incremental: timestamp
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account_address}/nft_collections
    method: GET
    data_selector: collections
    params: {}
- name: fullnode_rest_api
  endpoint:
    path: /fullnode
    method: GET
- name: faucet_api
  endpoint:
    path: /faucet
    method: POST
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: vector
  endpoint:
    path: /vector
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: account_data
- name: blocks
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: block_data
- name: Token Metadata
  endpoint:
    path: /build/smart-contracts/tokens
    method: GET
    data_selector: metadata
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/nft/collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: ConfidentialAssetStore
  endpoint:
    path: /confidential_asset/store
    method: GET
    data_selector: records
- name: ConfidentialBalance
  endpoint:
    path: /confidential_balance
    method: GET
    data_selector: records
- name: withdraw
  endpoint:
    path: /withdraw
    method: POST
    data_selector: records
    params: {}
- name: rotate_encryption_key
  endpoint:
    path: /rotate_encryption_key
    method: POST
    data_selector: records
    params: {}
- name: normalize
  endpoint:
    path: /normalize
    method: POST
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft-collections
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: account
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: block
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account_address}/nft_collections
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft_collections
    method: GET
    data_selector: collections
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: table
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft_collections
    method: GET
    data_selector: data
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/nft/collections
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft_collections
    method: GET
    data_selector: data
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{address}/nft_collections
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: nfts
  endpoint:
    path: /v1/accounts/{address}/nfts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: data
- name: nft_collections
  endpoint:
    path: /v1/accounts/{address}/nft_collections
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: data
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/nft/collections
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: account_data
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: transactions_data
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft_collections
    method: GET
    data_selector: collections
    params: {}
- name: Mainnet
  endpoint:
    path: /v1
    method: GET
- name: Testnet
  endpoint:
    path: /v1
    method: GET
- name: Devnet
  endpoint:
    path: /v1
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params:
      limit: '10'
- name: nft_collections
  endpoint:
    path: /v1/nft/collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: fullnode_rest_api
  endpoint:
    path: /fullnode/v1
    method: GET
    data_selector: data
    params: {}
- name: faucet_api
  endpoint:
    path: /faucet/v1
    method: POST
    data_selector: data
    params: {}
- name: indexer_api
  endpoint:
    path: /indexer/v1
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: block
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: blocks
    params: {}
- name: event
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: events
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: views
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: transactions
- name: nft_collections
  endpoint:
    path: /v1/accounts/{address}/nft_collections
    method: GET
    data_selector: collections
- name: Get Account Transactions Data
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: Get Aptos Name From Address
  endpoint:
    path: /build/indexer/indexer-api/ans-lookup
    method: GET
    data_selector: records
- name: Get Fungible Asset Balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
- name: Get NFTs Owned by an Account
  endpoint:
    path: /build/indexer/indexer-api/get-nfts
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /accounts/{address}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /accounts/{address}/nft_collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: events_by_event_handle
  endpoint:
    path: /accounts/{account}/events/{event_handle}
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: accounts
  endpoint:
    path: /network/blockchain/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
- name: nfts
  endpoint:
    path: /v1/nfts
    method: GET
    data_selector: nfts
- name: fullnode_rest_api
  endpoint:
    path: /build/apis/fullnode-rest-api
    method: GET
- name: faucet_api
  endpoint:
    path: /build/apis/faucet-api
    method: GET
- name: data_providers
  endpoint:
    path: /build/apis/data-providers
    method: GET
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: nfts
  endpoint:
    path: /v1/accounts/{account_address}/nfts
    method: GET
    data_selector: data
    params: {}
- name: staking_config
  endpoint:
    path: /v1/accounts/0x1/resource/0x1::staking_config::StakingConfig
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft_collections
    method: GET
    data_selector: nft_collections
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: Aptos Improvement Proposals
  endpoint:
    path: /AIPs
    method: GET
    data_selector: proposals
    params: {}
- name: Voting
  endpoint:
    path: /voting
    method: GET
    data_selector: votes
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: block_epilogue_transaction
  endpoint:
    path: /block/epilogue
    method: GET
    data_selector: block_end_info
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /accounts/{address}
    method: GET
    data_selector: default authentication key and sequence number
    params: {}
- name: account_resource
  endpoint:
    path: /accounts/{address}/resource/0x1::account::Account
    method: GET
    data_selector: account resource
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: table
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /v1/accounts/{address}
    method: GET
    data_selector: Account
    params:
      ledger_version: latest
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
- name: nft_collections
  endpoint:
    path: /accounts/{account_address}/nft_collections
    method: GET
    data_selector: collections
- name: account_resources
  endpoint:
    path: /v1/accounts/{address}/resources
    method: GET
    data_selector: Array<object>
    params:
      ledger_version: '32425224034'
      start: 0000000000000000000000000000000000000000000000000000000000000000012f0000000000000000000000000000000000000000000000000000000000000000010d7374616b696e675f70726f7879
      limit: 200
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: account_balance
  endpoint:
    path: /v1/accounts/{address}/balance/{asset_type}
    method: GET
    data_selector: data
    params: {}
- name: account_balance
  endpoint:
    path: /v1/accounts/balance
    method: GET
    data_selector: balance
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: POST
    data_selector: records
- name: account_transactions
  endpoint:
    path: /accounts/{accountAddress}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /accounts/{accountAddress}/nft_collections
    method: GET
    data_selector: collections
    params: {}
- name: account_modules
  endpoint:
    path: /v1/accounts/{address}/modules
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: account_resource
  endpoint:
    path: /v1/accounts/{address}/resource/{resource_type}
    method: GET
    data_selector: data
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /v1/accounts/{account}/balances
    method: GET
    data_selector: balances
    params: {}
- name: get_account_module
  endpoint:
    path: /v1/accounts/{address}/module/{module_name}
    method: GET
    data_selector: module
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: transactions
- name: fungible_asset_balances
  endpoint:
    path: /v1/accounts/{address}/resource/0x1::coin::CoinStore
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
- name: blocks
  endpoint:
    path: /v1/blocks/by_height/{block_height}
    method: GET
    data_selector: null
    params:
      with_transactions: boolean
- name: block
  endpoint:
    path: /blocks/{block_height}
    method: GET
    data_selector: object
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: account_signature_scheme
  endpoint:
    path: /account/signature/scheme
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: multi_ed25519_signature
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: single_key_signature
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: block_metadata_transaction
  endpoint:
    path: /transactions/block_metadata
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: POST
    data_selector: data
    params: {}
- name: delete_table_item
  endpoint:
    path: /delete_table_item
    method: POST
    data_selector: data
    params: {}
- name: write_module
  endpoint:
    path: /write_module
    method: POST
    data_selector: data
    params: {}
- name: write_resource
  endpoint:
    path: /write_resource
    method: POST
    data_selector: data
    params: {}
- name: write_table_item
  endpoint:
    path: /write_table_item
    method: POST
    data_selector: data
    params: {}
- name: state_checkpoint_transaction
  endpoint:
    path: /state_checkpoint_transaction
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: blocks_by_height
  endpoint:
    path: /blocks/by_height
    method: GET
    data_selector: data
- name: blocks_by_version
  endpoint:
    path: /v1/blocks/by_version/{version}
    method: GET
    data_selector: ''
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account}/nft_collections
    method: GET
    data_selector: collections
    params: {}
- name: block
  endpoint:
    path: /blocks
    method: GET
    data_selector: block
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: public_key
  endpoint:
    path: /public_key
    method: GET
    data_selector: object
    params: {}
- name: signature
  endpoint:
    path: /signature
    method: GET
    data_selector: object
    params: {}
- name: account
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: account_signature_scheme
  endpoint:
    path: /account_signature_scheme
    method: GET
    data_selector: records
- name: signatures
  endpoint:
    path: /signatures
    method: GET
    data_selector: signatures
- name: account_signature_scheme
  endpoint:
    path: /account_signature_scheme
    method: GET
    data_selector: signatures
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: block_metadata_transaction
  endpoint:
    path: /transactions/block_metadata
    method: GET
    data_selector: data
- name: coin_store
  endpoint:
    path: /coin_store
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: data
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: POST
    data_selector: data
    params: {}
- name: delete_table_item
  endpoint:
    path: /delete_table_item
    method: POST
    data_selector: data
    params: {}
- name: write_module
  endpoint:
    path: /write_module
    method: POST
    data_selector: data
    params: {}
- name: write_resource
  endpoint:
    path: /write_resource
    method: POST
    data_selector: data
    params: {}
- name: write_table_item
  endpoint:
    path: /write_table_item
    method: POST
    data_selector: data
    params: {}
- name: delete_module
  endpoint:
    path: /delete_module
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: event
  endpoint:
    path: /blocks
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /v1/events
    method: GET
    data_selector: data
    params: {}
- name: events_by_creation_number
  endpoint:
    path: /v1/accounts/{address}/events/{creation_number}
    method: GET
    data_selector: Array<object>
    params:
      start: '32425224034'
      limit: 100
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /v1/accounts/{address}/events/{event_handle}/{field_name}
    method: GET
    data_selector: Array<object>
- name: spec
  endpoint:
    path: /v1/spec
    method: GET
    data_selector: response
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: Indexer API
  endpoint:
    path: /build/indexer/indexer-api
    method: GET
- name: Faucet API
  endpoint:
    path: /build/apis/faucet-api
    method: GET
- name: info
  endpoint:
    path: /v1/info
    method: GET
    data_selector: object
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: health_check
  endpoint:
    path: /v1/-/healthy
    method: GET
    data_selector: message
    params:
      duration_secs: integer
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: transactions
    params:
      incremental: created_at
- name: nft_collections
  endpoint:
    path: /v1/accounts/{account_address}/nft_collections
    method: GET
    data_selector: collections
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: ledger_info
  endpoint:
    path: /
    method: GET
    data_selector: object
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
- name: get_table_item
  endpoint:
    path: /v1/tables/{table_handle}/item
    method: POST
    data_selector: ''
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: account_data
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: transaction_data
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: collections
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
- name: account_resources
  endpoint:
    path: /rest-api/operations/get_account_resources
    method: GET
- name: account_balance
  endpoint:
    path: /rest-api/operations/get_account_balance
    method: GET
- name: account_modules
  endpoint:
    path: /rest-api/operations/get_account_modules
    method: GET
- name: account_resource
  endpoint:
    path: /rest-api/operations/get_account_resource
    method: GET
- name: account_module
  endpoint:
    path: /rest-api/operations/get_account_module
    method: GET
- name: raw_table_item
  endpoint:
    path: /v1/tables/{table_handle}/raw_item
    method: POST
    data_selector: key
    params:
      ledger_version: latest
- name: transactions
  endpoint:
    path: /get_transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      start: ledger_version
      limit: max_transactions
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: transaction_data
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: signatures
  endpoint:
    path: /signatures
    method: GET
    data_selector: signatures
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: data
- name: signatures
  endpoint:
    path: /signatures
    method: GET
- name: account_signature_scheme
  endpoint:
    path: /account_signature_scheme
    method: GET
- name: account_signature_scheme
  endpoint:
    path: /account/signature/scheme
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: events
    params: {}
- name: move_function
  endpoint:
    path: /move_function
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /transaction
    method: GET
    data_selector: records
- name: delete_module
  endpoint:
    path: /delete_module
    method: POST
    data_selector: module
    params: {}
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: POST
    data_selector: resource
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: write_resource
  endpoint:
    path: /write_resource
    method: POST
    data_selector: data
    params: {}
- name: delete_module
  endpoint:
    path: /delete_module
    method: DELETE
    data_selector: data
    params: {}
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: DELETE
    data_selector: data
    params: {}
- name: write_table_item
  endpoint:
    path: /write_table_item
    method: POST
    data_selector: data
    params: {}
- name: delete_table_item
  endpoint:
    path: /delete_table_item
    method: DELETE
    data_selector: data
    params: {}
- name: submit_transaction
  endpoint:
    path: /v1/transactions
    method: POST
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: transactions
- name: nft_collections
  endpoint:
    path: /v1/accounts/{address}/nft_collections
    method: GET
    data_selector: collections
- name: signatures
  endpoint:
    path: /transaction/signatures
    method: POST
- name: transaction
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: transaction
- name: ed25519_signature
  endpoint:
    path: /submit_transaction
    method: POST
    data_selector: signature
    params: {}
- name: account_signature
  endpoint:
    path: /account_signature
    method: POST
    data_selector: account_signature_data
- name: transaction
  endpoint:
    path: /v1/transactions/by_hash/{txn_hash}
    method: GET
    data_selector: ''
    params: {}
- name: transaction
  endpoint:
    path: /transactions/by_hash
    method: GET
    data_selector: object
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: function_info
  endpoint:
    path: /function_info
    method: GET
    data_selector: data
    params: {}
- name: auth_data
  endpoint:
    path: /auth_data
    method: GET
    data_selector: data
    params: {}
- name: account_signature_scheme
  endpoint:
    path: /account/signature/scheme
    method: GET
    data_selector: records
- name: transaction_by_hash
  endpoint:
    path: /transactions/by_hash/{hash}
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
- name: transaction
  endpoint:
    method: GET
- name: signatures
  endpoint:
    path: /signatures
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /get_transaction_by_hash
    method: GET
    data_selector: transaction_data
    params: {}
- name: transaction
  endpoint:
    path: /transactions/{hash}
    method: GET
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: delete_module
  endpoint:
    path: /delete_module
    method: DELETE
    data_selector: module
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: DELETE
    data_selector: resource
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /get_transaction_by_hash
    method: GET
    data_selector: events
    params: {}
- name: transaction
  endpoint:
    path: /transactions/{hash}
    method: GET
    data_selector: data
    params: {}
- name: wait_transaction_by_hash
  endpoint:
    path: /v1/transactions/wait_by_hash/{txn_hash}
    method: GET
    data_selector: response
- name: transaction
  endpoint:
    path: /transactions/by_hash
    method: GET
    data_selector: object
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /wait_for_transaction_by_hash
    method: POST
    data_selector: result
- name: transaction_details
  endpoint:
    path: /transactions/{hash}
    method: GET
    data_selector: transaction
    params: {}
- name: module
  endpoint:
    path: /modules
    method: GET
    data_selector: modules
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: signature
  endpoint:
    path: /transaction/signature
    method: POST
    data_selector: signatures
- name: account_signature_scheme
  endpoint:
    path: /account/signature/scheme
    method: POST
    data_selector: data
    params: {}
- name: account_signature
  endpoint:
    path: /account/signature
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: events
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
- name: delete_table_item
  endpoint:
    path: /delete_table_item
    method: POST
    data_selector: data
    params: {}
- name: write_module
  endpoint:
    path: /write_module
    method: POST
    data_selector: data
    params: {}
- name: delete_module
  endpoint:
    path: /delete_module
    method: POST
    data_selector: data
    params: {}
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: delete_module
  endpoint:
    path: /delete_module
    method: POST
    data_selector: module
    params: {}
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: POST
    data_selector: resource
    params: {}
- name: delete_table_item
  endpoint:
    path: /delete_table_item
    method: POST
    data_selector: table_item
    params: {}
- name: write_module
  endpoint:
    path: /write_module
    method: POST
    data_selector: module
    params: {}
- name: write_resource
  endpoint:
    path: /write_resource
    method: POST
    data_selector: resource
    params: {}
- name: write_table_item
  endpoint:
    path: /write_table_item
    method: POST
    data_selector: table_item
    params: {}
- name: state_checkpoint_transaction
  endpoint:
    path: /state_checkpoint_transaction
    method: POST
    data_selector: checkpoint_transaction
    params: {}
- name: transaction_by_version
  endpoint:
    path: /v1/transactions/by_version/{txn_version}
    method: GET
    data_selector: response
    params:
      txn_version: required
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: account_transactions
  endpoint:
    path: /accounts/{address}/transactions
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: object
    params: {}
- name: signature
  endpoint:
    path: /transaction/signature
    method: POST
    data_selector: signatures
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
- name: signatures
  endpoint:
    path: /api/signatures
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: signatures
  endpoint:
    path: /transaction/signatures
    method: GET
- name: key_account
  endpoint:
    path: /transaction/key_account
    method: GET
    data_selector: records
    params: {}
- name: signature_scheme
  endpoint:
    path: /transaction/signature_scheme
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
- name: delete_module
  endpoint:
    path: /delete_module
    method: POST
    data_selector: module
    params: {}
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: POST
    data_selector: resource
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: events
    params: {}
- name: account_transactions
  endpoint:
    path: /v1/accounts/{address}/transactions
    method: GET
    data_selector: transactions
    params:
      start: start
      limit: limit
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /account/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
- name: aptos_name_from_address
  endpoint:
    path: /build/indexer/indexer-api/ans-lookup
    method: GET
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
- name: fungible_asset_info
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-info
    method: GET
- name: active_delegators
  endpoint:
    path: /build/indexer/indexer-api/get-delegators
    method: GET
- name: nft_collections_owned
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
- name: nfts_owned
  endpoint:
    path: /build/indexer/indexer-api/get-nfts
    method: GET
- name: token_metadata
  endpoint:
    path: /build/indexer/indexer-api/token-metadata
    method: GET
- name: value
  endpoint:
    data_selector: value
- name: signatures_required
  endpoint:
    data_selector: signatures_required
- name: auth_data
  endpoint:
    data_selector: auth_data
- name: transaction_signature
  endpoint:
    path: /account/transaction/signature
    method: POST
    data_selector: signature
- name: signatures
  endpoint:
    method: POST
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /account/transactions
    method: GET
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: account_transactions
  endpoint:
    path: /accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /api/v1/account
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: delete_module
  endpoint:
    path: /delete_module
    method: POST
    data_selector: module
    params: {}
- name: delete_resource
  endpoint:
    path: /delete_resource
    method: POST
    data_selector: resource
    params: {}
- name: transaction_data
  endpoint:
    path: /account/transactions
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: account_transactions
  endpoint:
    path: /v1/accounts/{account_address}/transactions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: transaction_summaries
  endpoint:
    path: /v1/accounts/{address}/transaction_summaries
    method: GET
    data_selector: Array<object>
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
    params: {}
- name: submit_batch_transactions
  endpoint:
    path: /v1/transactions/batch
    method: POST
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
    params: {}
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: data
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
- name: account_signature_scheme
  endpoint:
    path: /account_signature_scheme
    method: GET
    data_selector: records
- name: ed25519_signature
  endpoint:
    path: /ed25519_signature
    method: POST
    data_selector: signature
    params: {}
- name: signature
  endpoint:
    path: /signature
    method: POST
    data_selector: signature
    params: {}
- signatures:
  - type: ed25519
    value: '0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1'
  - type: secp256k1_ecdsa
    value: '0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1'
  - type: web_authn
    value: '0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1'
- name: simulate_transaction
  endpoint:
    path: /v1/transactions/simulate
    method: POST
    data_selector: ''
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
    params: {}
- name: signatures_required
  endpoint:
    params: {}
- name: function_info
  endpoint:
    params: {}
- name: auth_data
  endpoint:
    params: {}
- name: account_signature_scheme
  endpoint:
    path: /account_signature_scheme
    method: POST
    data_selector: records
- name: signatures
  endpoint:
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: Array<object>
    params: {}
- name: multi_ed25519_signature
  endpoint:
    path: /multi_ed25519_signature
    method: GET
    data_selector: public_keys
    params: {}
- name: multi_agent_signature
  endpoint:
    path: /multi_agent_signature
    method: GET
    data_selector: signatures
    params: {}
- name: single_key_signature
  endpoint:
    path: /single_key_signature
    method: GET
    data_selector: value
    params: {}
- name: encode_submission
  endpoint:
    path: /v1/transactions/encode_submission
    method: POST
    data_selector: response
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /rest-api/operations/get_events_by_creation_number
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /rest-api/operations/get_transactions
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: fungible_asset_balances
  endpoint:
    path: /build/indexer/indexer-api/fungible-asset-balances
    method: GET
    data_selector: records
    params: {}
- name: estimate_gas_price
  endpoint:
    path: /v1/estimate_gas_price
    method: GET
    data_selector: object
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
- name: general
  endpoint:
    path: /rest-api/operations/tags/general
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
- name: view
  endpoint:
    path: /rest-api/operations/tags/view
    method: GET
    data_selector: records
- name: view_function
  endpoint:
    path: /v1/view
    method: POST
    data_selector: response
    params: {}
- name: account
  endpoint:
    path: /rest-api/operations/get_account
    method: GET
    data_selector: records
- name: block
  endpoint:
    path: /rest-api/operations/get_block_by_height
    method: GET
    data_selector: records
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
    params: {}
- name: account_transactions
  endpoint:
    path: /build/indexer/indexer-api/account-transactions
    method: GET
    data_selector: records
    params: {}
- name: nft_collections
  endpoint:
    path: /build/indexer/indexer-api/get-nft-collections
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
- name: llms.txt
  endpoint:
    path: /llms.txt
    method: GET
- name: llms-small.txt
  endpoint:
    path: /llms-small.txt
    method: GET
- name: llms-full.txt
  endpoint:
    path: /llms-full.txt
    method: GET
- name: accounts
  endpoint:
    path: /rest-api/operations/tags/accounts
    method: GET
    data_selector: records
    params: {}
- name: blocks
  endpoint:
    path: /rest-api/operations/tags/blocks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /rest-api/operations/tags/events
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /rest-api/operations/tags/transactions
    method: GET
    data_selector: records
    params: {}
- name: tables
  endpoint:
    path: /rest-api/operations/tags/tables
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in Aptos
- Some endpoints may have rate limits
- Uses OAuth2 with refresh token — requires setup of connected app in Aptos
- Hitting rate limits for Fullnode API / Indexers? Get an API Key here
- 'Last updated: Aug 18, 2025'
- Requires OAuth2 setup for API access
- The devnet is reset periodically, so don’t store anything important there.
- Check final balances using account API.
- This tutorial assumes you are comfortable with using the Aptos CLI, have Node.js
  and npm installed, and understand basic JavaScript/TypeScript concepts.
- Always wait for the transaction to complete using waitForTransaction before proceeding.
- Requires setup of connected app in api
- Some endpoints may return nulls in deeply nested fields
- The example run will pause with output showing addresses for Alice and Bob.
- Some API responses may include nulls
- If you change the name of the token in the fa_coin.move contract you will see the
  output update with that name.
- Some objects may return nulls in deeply nested fields
- Move has some unique characteristics that make it different from other smart contract
  languages.
- Debug prints will show up automatically during test execution.
- You can interact with the module through the Aptos CLI
- Aptos implements multisig directly at the protocol level, allowing accounts to require
  multiple signatures without deploying additional smart contracts.
- You can verify transaction on Aptos Explorer
- Make sure Explorer is set to Devnet
- Some responses may contain null values
- Requires setup of connected app in Aptos for OAuth2.
- Some endpoints may have rate limits.
- Ensure to replace {address} with the actual account address.
- The Aptos devnet has historically been reset each Thursday.
- Ensure the devnet is live when trying to run the example.
- An account should be managed by a single instance of the transaction manager.
- Mempool does not immediate evict expired transactions.
- Requires OAuth2 authentication setup in the Aptos API
- Some endpoints may have rate limiting
- Account key rotation is an advanced feature that should be used with caution.
- The aptos CLI does not currently support unproven key rotations.
- Uses Aptos CLI for key rotation
- Ensure to delete test profiles and clean up localnet after use
- Uses REST API to track coin transfers and balance changes.
- Some endpoints may require additional parameters.
- Aptos uses a BFT consensus algorithm, so transactions are finalized immediately
  after committing to the blockchain.
- Balance changes are tracked in the primary_fungible_store.
- Events include Deposit and Withdraw types.
- This API supports various endpoints for accounts, transactions, blocks, events,
  general information, tables, and views.
- Gas fees are not emitted as events but must be considered for total balance changes.
- Ensure the fullnode you are communicating with is up-to-date.
- The fullnode must reach the version containing your transaction to retrieve relevant
  data from it.
- Some API endpoints may have rate limits.
- Ensure proper OAuth scopes are set for access.
- Data is often used for analytics since it allows for aggregations.
- Hitting the full node directly will give the latest data.
- Rate limits are applied to API requests.
- The API is rate-limited.
- Ensure proper handling of pagination for large datasets.
- Requires authentication to access data
- Requires OAuth2 setup with a valid client ID and secret
- Rate limits apply to all API endpoints
- Uses OAuth2 with refresh token for authentication.
- Rate limiting is applied on requests.
- Ensure to replace {account} with a valid account address.
- This SDK is currently in beta.
- Requires setup of connected app in Aptos.
- Ensure to handle API rate limits to avoid throttling.
- Some endpoints may require additional permissions.
- Requires setup of application in Aptos for OAuth2
- Hosted Transaction Stream Service available
- Self-Hosted Transaction Stream Service available
- Some operations may take time to reflect due to network confirmation.
- If you still need to install the CLI, follow the installation steps.
- To use default settings, you can provide no input and just press 'Enter'.
- Uses OAuth2 with refresh token.
- When formatting the code, set max_width to 80 and indent_size to 2
- Requires an active Aptos account with appropriate permissions
- Genesis ceremony involves multiple participants generating configurations.
- Ensure ValidatorConfiguration matches the layout file for genesis.blob generation.
- Ensure proper setup for accessing the Fullnode API
- Some endpoints may require additional parameters for filtering.
- Local networks can be helpful when testing your code.
- Despite the name (local-testnet), this has nothing to do with the Aptos testnet,
  it will run a network entirely local to your machine.
- When it returns 200 it means all the services are ready.
- The CLI can be a convenient tool for quickly looking up on-chain data and sending
  transactions from your accounts.
- Make sure to replace {address} and {resource_type} with actual values in the request
- By default, Move contracts publish their source code.
- To avoid publishing with source code, publish with the --included-artifacts none
  argument.
- create-aptos-dapp generates predefined end-to-end dapp templates and configuration
  files
- create-aptos-dapp includes built-in commands for common tasks
- Only light mode is set up, but color values for both light and dark mode are defined.
- Requires authentication setup for API access
- Tokens are for testing purposes only — they hold no real-world value and cannot
  be exchanged for mainnet APT.
- Requires a valid Aptos account for queries
- Some API calls may have rate limits
- We recommend installing the Aptos CLI before beginning.
- You can also create a Move package from a template.
- Ensure that your CLI is up to date before compiling.
- Each deployment publishes to a new address.
- Only the owner of the code object can upgrade and freeze the code.
- Move was designed to be simple and safe, but bugs can still occur.
- Some APIs may have rate limits that need to be considered
- Protocols should have the ability to pause operations effectively.
- Using the same account for testnet and mainnet poses a security risk.
- Ensure to manage rate limits on API requests.
- Ensure to check for network stability during data extraction.
- API calls are subject to rate limiting.
- API requires OAuth2 authentication
- Endpoints support pagination
- Requires OAuth2 for authentication
- All Digital Asset modules are deployed at the reserved address `0x4`.
- A `Collection`’s maximum supply cannot be changed after creation.
- After migration, querying resource 0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>
  at account address will be unavailable.
- The FA standard allows for seamless minting, transfer, and customization of fungible
  assets.
- The `ConstructorRef` cannot be stored and is destroyed by the end of the transaction
  used to create the Object.
- Coin is stored in `0x1::coin`.
- Monitoring supply (`monitor_supply`) helps track total coins in supply.
- Some objects may return nulls in deeply nested fields.
- Some endpoints may require specific query parameters.
- Token name must be unique within each collection
- Collection name must be unique within each account
- Token and collection name length must be smaller than 128 characters
- URI length must be smaller than 512 characters
- Property map can hold at most 1000 properties, and each key should be smaller than
  128 characters
- The randomness API currently does not prevent undergasing attacks.
- Some objects like Contact may return nulls in deeply nested fields
- This module is educational. It is not production-ready. Using it could lead to loss
  of funds.
- Resource accounts require developers to generate seeds each time a resource account
  is created.
- Upgrading contracts requires specific steps which is prone to error.
- API may have rate limits on requests.
- Some endpoints require specific account permissions.
- BCS is used to serialize all data on-chain, provide binary responses on the REST
  API, and encode input arguments to transactions.
- Because BCS is not a self-describing format, the reader must know the format of
  the bytes ahead of time.
- Unsigned 256-bit integers are serialized as 32 bytes in little-endian byte order.
- Unsigned 128-bit variable length integers are serialized as a variable number of
  bytes.
- SmartTable has been deprecated, and replaced with BigOrderedMap.
- Requires an active account to access the API
- Some objects like NFT may return nulls in deeply nested fields
- The Vector in Move provides a flexible and dynamic array-like data structure that
  supports various operations.
- Aptos requires indexing to determine the set of all NFTs owned by an account.
- Requires OAuth2 authentication with refresh token.
- API rate limits may apply.
- Interacting directly with Confidential Asset’s smart contracts is highly complex.
- Users must register a ConfidentialAssetStore for each token they intend to transact
  with.
- Attempting to withdraw more tokens than available will cause an error.
- Calling `rotate_encryption_key` with a non-zero pending balance will cause an error.
- Calling a `rollover_pending_balance` when the actual balance is already normalized
  will cause an error.
- Some endpoints may return nulls in certain fields
- 'To suppress one or more lint checks named check1, check2, … (and so on), you can
  add the attribute #[lint::skip(check1, check2, ...)] to a function or a module.'
- Move on Aptos is in production and is now the default compiler, with Move 2 being
  the default language version.
- Rate limits are enforced per IP address.
- Rate limits may apply to API usage
- Ensure you replace {address} with the actual account address.
- Rate limits apply to all requests.
- Requires setup of OAuth2 client in Aptos
- API requires authentication via OAuth2.
- Requires setup of OAuth2 application in Aptos.
- Data may vary based on API calls and parameters.
- Uses OAuth2 for authentication
- Authentication requires setup on Aptos platform
- Rate limits apply to API calls
- Ensure you have valid OAuth credentials to access the API.
- Transactions may silently fail to execute if the account has run out of utility
  tokens.
- The API supports multiple languages including Python, TypeScript, Go, and Rust.
- Rate limits may apply for certain endpoints.
- Conceptually, this fee can be thought of as quite similar to how we pay for our
  home electric or water utilities.
- The total gas amount must not exceed max_gas_amount, or else the transaction will
  abort the execution.
- As of the time of this writing, all instruction gas operations are multiplied by
  the EXECUTION_GAS_MULTIPLIER defined in meter.rs, which is set to 20.
- As of the time of this writing, the minimum amount of internal gas per transaction
  is defined as 1,500,000 internal units.
- Check basic node health GET
- Requires an active account to access data
- Rate limits are in place for API calls
- Only transactions can change the ledger state.
- A transaction that is successfully submitted but ultimately discarded may have no
  visible state in any accessible Aptos node or within the Aptos network.
- Requires authentication via OAuth2.
- Fullnodes can be run by anyone.
- Fullnodes verify blockchain history by either re-executing all transactions in the
  history of the Aptos blockchain or replaying each transaction’s output.
- Fullnodes replicate the entire state of the blockchain by synchronizing with upstream
  participants.
- Uses OAuth2 for authentication.
- Requires initial setup of an Aptos account and obtaining access tokens.
- As of December 2024, the Aptos network’s block time was under 250ms.
- Some objects like account may return nulls in deeply nested fields
- Ensure the correct account address format is used in API requests.
- Rate limits may apply to the number of requests per minute.
- Currently, slashing is not implemented.
- The lockup duration is decided by the Aptos governance.
- Requires OAuth2 for authentication.
- Rate limits may apply.
- Delegation pools are permissionless and anyone can add stake.
- Delegation pools cannot be changed to stake pools once it’s created or vice versa.
- The delegation pool’s stake will automatically be locked up for a fixed duration
  that is set by the Aptos governance.
- Ensure to replace {account} with the actual account address.
- Governance process allows community members to create and vote on proposals.
- Ensure to handle rate limits as specified in the API documentation
- Certain endpoints may have different response structures
- Some responses may include rate limits
- The BlockEpilogue transaction is guaranteed to be the last transaction of a block
  except for the last block of an epoch, which will not have a BlockEpilogue transaction.
- Stateless Accounts simplify account management and reduce unnecessary resource creation.
- All addresses are considered valid, and checking for existence via 404 errors is
  no longer reliable.
- Some API calls may require specific permissions.
- Some requests may have rate limits
- Requires authentication to access account resources.
- Rate limits are enforced; check the documentation for limits.
- Retrieves all account modules’ bytecode for a given account at a specific ledger
  version.
- If the ledger version is not specified in the request, the latest ledger version
  is used.
- The Aptos nodes prune account state history, via a configurable time window.
- If the requested ledger version has been pruned, the server responds with a 410.
- Requires API key for access
- Rate limits apply for API requests
- Aptos nodes prune account state history, via a configurable time window.
- Check rate limits and pagination for large datasets.
- Ensure the address format is valid before making requests.
- API requires authentication using Aptos account.
- If the block is pruned, it will return a 410
- 'The account signature scheme allows you to have two types of accounts: single key
  and multi-key.'
- 'The account signature scheme allows you to have two types of accounts: a single
  Ed25519 key account or a k-of-n multi-Ed25519 key account.'
- Empty chars should be ignored when comparing 2 struct tag ids.
- When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).
- Transactions are limited by max default transactions size. If not all transactions
  are present, the user will need to query for the rest of the transactions via the
  get transactions API.
- If the block has been pruned, it will return a 410
- Pagination is handled via cursor.
- All bytes (Vec) data is represented as hex-encoded string prefixed with `0x` and
  fulfilled with two hex digits per byte.
- Unlike the `Address` type, HexEncodedBytes will not trim any zeros.
- Ensure to handle errors gracefully.
- Get a table item at a specific ledger version from the table identified by {table_handle}
  in the path.
- Some queries may return nulls in deeply nested fields
- Retrieve on-chain committed transactions.
- If the version has been pruned, then a 410 will be returned.
- All bytes data is represented as hex-encoded string prefixed with `0x` and fulfilled
  with two hex digits per byte.
- Requires a transaction and a signature of it
- Requires OAuth2 setup for authentication
- Rate limits apply to API requests
- Fields like sender, sequence_number, max_gas_amount, gas_unit_price, expiration_timestamp_secs
  are required.
- All bytes data is represented as hex-encoded string prefixed with `0x`.
- Uses various signature types including Ed25519 and Secp256k1
- HexEncodedBytes will not trim any zeros.
- Look up a transaction by its hash.
- Allowed values for transaction type include pending_transaction.
- All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled
  with two hex digits per byte.
- Same as /transactions/by_hash, but will wait for a pending transaction to be committed.
- Requires OAuth2 token for API access
- Rate limits apply on requests
- Allows for multiple types of accounts and signatures
- Account signature scheme supports Ed25519 and Secp256k1Ecdsa keys.
- Retrieves a transaction by a given version. If the version has been pruned, a 410
  will be returned.
- API supports fetching transactions by version.
- Rate limits apply to API calls.
- Account signature scheme allows for multiple types of accounts.
- Transaction data may include various types of events and state changes
- Data is represented as hex-encoded string prefixed with '0x'
- Does not trim any zeros
- Rate limiting applies to all endpoints.
- Requires a valid Aptos account address and signature.
- Some API endpoints may have rate limits and require handling.
- Ensure to check the response format for data extraction.
- Responses are returned in JSON format
- All bytes (Vec) data is represented as hex-encoded string prefixed with `0x`.
- This endpoint makes it possible to submit transaction requests to the API from languages
  that do not have library support for BCS.
- Uses OAuth2 with refresh token — requires setup of connected app in aptos
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Check your authentication details'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Recheck API key or token expiration'
- Check that your account address matches in the -named-addresses parameter
- Ensure string literals are properly encoded
- 'INVALID_REQUEST: Check your request parameters'
- 'UNAUTHORIZED: Ensure you have valid credentials'
- 'FORBIDDEN: You do not have permission to access this resource'
- 'INVALID_ARGUMENT: Check parameters sent in the request.'
- 'NOT_FOUND: The requested resource does not exist.'
- '401 Unauthorized: Check your authentication details.'
- '404 Not Found: The specified account does not exist.'
- '400 Bad Request: Invalid request parameters.'
- '401 Unauthorized: Check OAuth credentials'
- '404 Not Found: Ensure the endpoint is correct'
- 'API error: Invalid arguments: New public key cannot be the same as the current
  public key'
- 'API error: Unknown error Transaction committed on chain, but failed execution:
  Move abort in 0x1::account: ENEW_AUTH_KEY_ALREADY_MAPPED(0x10015): The new authentication
  key already has an entry in the `OriginatingAddress` table'
- 'API error: Unknown error Transaction committed on chain, but failed execution:
  Move abort in 0x1::account: EINVALID_ORIGINATING_ADDRESS(0x6000d): Abort the transaction
  if the expected originating address is different from the originating address on-chain'
- '404 Not Found: Check if the specified transaction version exists'
- '401 Unauthorized: Recheck OAuth token.'
- '404 Not Found: Verify endpoint paths.'
- '404 Not Found: Check if the account address is correct.'
- '429 Too Many Requests: Rate limit exceeded.'
- '404 Not Found: Check the endpoint URL'
- '429 Too Many Requests: Slow down requests'
- '401 Unauthorized: Check authentication credentials'
- '429 Too Many Requests: You have hit the rate limit.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify token validity'
- '429 Too Many Requests: Reduce request frequency'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your access token.'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: Verify the account address or endpoint.'
- 'INVALID_ACCOUNT: The specified account does not exist.'
- 'RATE_LIMIT_EXCEEDED: Too many requests made in a short period.'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint URL'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Verify API token'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Verify the endpoint or resource'
- '404 Not Found: Ensure endpoint is correct'
- '400 Bad Request: Check if the address is valid'
- '401 Unauthorized: Token may be expired or invalid'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Verify endpoint URL'
- '401 Unauthorized: Invalid credentials'
- '404 Not Found: Check account address'
- '403 Forbidden: Check API key or permissions'
- '404 Not Found: Verify endpoint path and parameters'
- '429 Too Many Requests: Implement exponential backoff'
- '429 Too Many Requests: Slow down your requests.'
- '401 Unauthorized: Verify your authentication credentials.'
- '401 Unauthorized: Check your access token'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Try again later'
- 'Reentrancy Prevention: Only call `with_ref` APIs in your custom hooks for deposit/withdraw
  operations.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '404 Not Found: Check the endpoint path'
- '400 Bad Request: Verify query parameters'
- 'INVALID_URI: Ensure the URI is less than 512 characters'
- 'DUPLICATE_NAME: Token name or collection name already exists'
- '429 Too Many Requests: Exceeded rate limit.'
- '404 Not Found: Check endpoint URL and parameters.'
- '401 Unauthorized: Check authentication credentials.'
- '401 Unauthorized: Invalid token or missing authentication'
- '404 Not Found: Check the account address or endpoint'
- '400 Bad Request: Check request format and parameters'
- 'EINDEX_OUT_OF_BOUNDS: Index is out of bounds.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Invalid or expired token.'
- '404 Not Found: Endpoint does not exist.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '500 Internal Server Error: Retry the request'
- '401 Unauthorized: Check OAuth token validity'
- '401 Unauthorized: Check OAuth credentials.'
- '404 Not Found: Verify the endpoint and account address.'
- '404 Not Found: Ensure the resource exists.'
- 'RATE_LIMIT_EXCEEDED: Reduce frequency of requests'
- 'INVALID_TOKEN: Ensure token is valid and not expired'
- '401 Unauthorized: Check OAuth scopes or token'
- 'INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE: Insufficient balance to pay for max_gas
  specified in the transaction. Balance needs to be above max_gas_amount * gas_unit_price
  to proceed.'
- 'OUT_OF_GAS: Transaction exceeded its allocated max gas.'
- 'SEQUENCE_NUMBER_TOO_OLD: Sequence number is too old.'
- 'SEQUENCE_NUMBER_TOO_NEW: Sequence number is too new.'
- 'EACCOUNT_ALREADY_EXISTS: Account already exists.'
- 'EACCOUNT_DOES_NOT_EXIST: Account does not exist.'
- 'ESEQUENCE_NUMBER_TOO_BIG: Sequence number exceeds the maximum value for a u64.'
- 'EOUT_OF_GAS: Transaction exceeded its allocated max gas.'
- 'EINVALID_PROOF_OF_KNOWLEDGE: Specified proof of knowledge required to prove ownership
  of a public key is invalid.'
- 'EINSUFFICIENT_BALANCE: Not enough coins to complete transaction.'
- 'EALREADY_HAS_BALANCE: The token has balance and cannot be initialized.'
- 'ECOLLECTIONS_NOT_PUBLISHED: There isn’t any collection under this account.'
- 'ECOLLECTION_NOT_PUBLISHED: Cannot find collection in creator’s account.'
- 'ECOLLECTION_ALREADY_EXISTS: The collection already exists.'
- 'ECREATE_WOULD_EXCEED_COLLECTION_MAXIMUM: Exceeds the collection’s maximal number
  of token_data.'
- 'EINSUFFICIENT_BALANCE: Insufficient token balance.'
- 'EINVALID_TOKEN_MERGE: Cannot merge the two tokens with different token IDs.'
- 'EMINT_WOULD_EXCEED_TOKEN_MAXIMUM: Exceed the token data maximal allowed.'
- 'ENO_BURN_CAPABILITY: No burn capability.'
- 'ETOKEN_DATA_ALREADY_EXISTS: TokenData already exists.'
- 'ETOKEN_DATA_NOT_PUBLISHED: TokenData not published.'
- 'ETOKEN_STORE_NOT_PUBLISHED: TokenStore doesn’t exist.'
- 'ETOKEN_SPLIT_AMOUNT_LARGER_THAN_TOKEN_AMOUNT: Cannot split token to an amount larger
  than its amount.'
- 'EFIELD_NOT_MUTABLE: The field is not mutable.'
- 'ENO_MUTATE_CAPABILITY: Not authorized to mutate.'
- 'ENO_TOKEN_IN_TOKEN_STORE: Token not in the token store.'
- 'EUSER_NOT_OPT_IN_DIRECT_TRANSFER: User didn’t opt-in direct transfer.'
- 'EWITHDRAW_ZERO: Cannot withdraw 0 token.'
- 'ENFT_NOT_SPLITABLE: Cannot split a token that only has 1 amount.'
- 'ENO_MINT_CAPABILITY: No mint capability'
- 'ECOLLECTION_NAME_TOO_LONG: The collection name is too long.'
- 'ENFT_NAME_TOO_LONG: The NFT name is too long.'
- 'EURI_TOO_LONG: The URI is too long.'
- 'ENO_DEPOSIT_TOKEN_WITH_ZERO_AMOUNT: Cannot deposit a token with 0 amount.'
- 'ENO_BURN_TOKEN_WITH_ZERO_AMOUNT: Cannot burn 0 token.'
- 'EWITHDRAW_PROOF_EXPIRES: Withdraw proof expires.'
- 'EOWNER_CANNOT_BURN_TOKEN: Token is not burnable by owner.'
- 'ECREATOR_CANNOT_BURN_TOKEN: Token is not burnable by creator.'
- 'ECANNOT_UPDATE_RESERVED_PROPERTY: Reserved fields for token contract. Cannot be
  updated by user.'
- 'EURI_TOO_SHORT: URI too short.'
- 'ETOKEN_OFFER_NOT_EXIST: Token offer doesn’t exist.'
- '404 Not Found: Check if the account address is valid.'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '404 Not Found: Check the account address or endpoint path.'
- '401 Unauthorized: Verify authentication credentials.'
- 'INVALID_REQUEST: Check the request parameters'
- 'NOT_FOUND: Resource not found'
- 'UNAUTHORIZED: Check authentication details'
- 'INVALID_REQUEST: Check request parameters.'
- 'ACCESS_DENIED: Ensure proper permissions.'
- 'NOT_FOUND: Verify the endpoint or resource.'
- 'INVALID_ARGUMENT: Check the parameters passed in the request'
- 'NOT_FOUND: The requested resource could not be found'
- 'UNAUTHORIZED: Check your authentication credentials'
- '429 Too Many Requests: Exceeded rate limits'
- '401 Unauthorized: Check the client credentials.'
- '404 Not Found: Verify the endpoint URL.'
- 'Invalid transaction: Sequence number must match the sender''s current sequence
  number.'
- '401 Unauthorized: Ensure correct authentication tokens are provided.'
- '404 Not Found: Verify the endpoint path.'
- 'INVALID_REQUEST: Check request format and parameters'
- 'UNAUTHORIZED: Ensure valid access token'
- 'RESOURCE_NOT_FOUND: Verify resource existence'
- 'INVALID_ADDRESS: Check the account address format'
- 'RATE_LIMIT_EXCEEDED: Throttle your requests to the API'
- '401 Unauthorized: Ensure your OAuth token is valid'
- 'Insufficient gas: Increase the gas cost by a trivial amount to help make progress.'
- 'Invalid transaction format: Ensure the transaction adheres to the expected format.'
- 'INVALID_ADDRESS: Check if the address is in the correct format.'
- 'UNAUTHORIZED: Ensure your OAuth token is valid.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: The requested resource could not be found.'
- 'INVALID_REQUEST: Check the request parameters and structure.'
- 'UNAUTHORIZED: Verify the access token validity.'
- '400 Bad Request: Check if the request parameters are correct.'
- '404 Not Found: Verify the account address or resource path.'
- '403 Forbidden: Ensure proper authentication and permissions.'
- '400 Bad Request: Invalid parameters.'
- '401 Unauthorized: Check your access token.'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '404 Not Found: The requested resource could not be found'
- '404 Not Found: Verify endpoint path or resource ID'
- account_not_found
- resource_not_found
- module_not_found
- struct_field_not_found
- version_not_found
- transaction_not_found
- table_item_not_found
- block_not_found
- state_value_not_found
- version_pruned
- block_pruned
- invalid_input
- invalid_transaction_update
- sequence_number_too_old
- vm_error
- rejected_by_filter
- health_check_failed
- mempool_is_full
- internal_error
- web_framework_error
- bcs_not_supported
- api_disabled
- '400: Bad Request'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '404 Not Found: Ensure the endpoint and parameters are correct.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '410: Requested ledger version has been pruned'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key'
- '410: The requested ledger version has been pruned'
- '404 Not Found: Resource does not exist.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Check API key or authentication.'
- '410: Block is pruned'
- '410: Block has been pruned'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: Resource not found'
- '500 Internal Server Error: Try the request again later.'
- '401 Unauthorized: Check your OAuth token.'
- '410: The version has been pruned.'
- '401 Unauthorized: Ensure valid OAuth token'
- '429 Too Many Requests: Throttle your requests'
- 'INVALID_SIGNATURE: Verify the provided signature format.'
- 'MISSING_PUBLIC_KEY: Ensure public key is included.'
- 'Invalid signature: Ensure the signature matches the expected format'
- 'Unauthorized: Check if your account has the necessary permissions'
- 'INVALID_SIGNATURE: Check the signature format or the public key used.'
- 'UNAUTHORIZED: Ensure the account has permission to perform this action.'
- '400 Bad Request: Check the transaction hash format'
- '404 Not Found: Transaction not found'
- 'InvalidAddress: The provided address is not valid.'
- 'TransactionNotFound: No transaction found for the provided hash.'
- 'INVALID_ARGUMENT: Check your parameters'
- 'UNAUTHORIZED: Invalid or expired token'
- '400 Bad Request: Check request format and required fields.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '404 Not Found: Verify endpoint path and resource availability.'
- '410: The version has been pruned'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Invalid authentication credentials.'
- 'INVALID_SIGNATURE: Check the provided signatures for correctness.'
- 'TRANSACTION_FAILED: Ensure all required fields are present.'
- '404 Not Found: Check the transaction ID or endpoint path'
- '500 Internal Server Error: Retry the request or contact support'
- '400 Bad Request: Check if request parameters are correctly formatted.'
- '401 Unauthorized: Check your authentication credentials.'
- '400 Bad Request: Invalid parameters provided'
- '401 Unauthorized: Authentication credentials are missing or invalid'
- '400 Bad Request: Invalid input data format'
- '404 Not Found: Requested resource does not exist'
- 'InvalidAddress: Check the format of the provided address.'
- 'TransactionNotFound: Verify the transaction ID.'
- '404 Not Found: Check the account address.'
- '400 Bad Request: Verify your request parameters.'
- '202: All transactions succeed'
- '206: Some transactions succeed, others fail'
- '206: No transactions succeed'
- '400 Bad Request: Check if all required fields are provided.'
- '401 Unauthorized: Verify authentication details.'
- no_account_signature
- abstraction_signature
- '401 Unauthorized: Check your credentials and token validity.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '429 Too Many Requests: Implement retry logic for rate limits.'
- Invalid signature type
- Signature verification failed
- 'Incorrect format: Ensure that the data is hex-encoded and prefixed with `0x`.'
- REQUEST_LIMIT_EXCEEDED
- QUERY_TIMEOUT
- 401 Unauthorized
- '403 Forbidden: Check your access rights'
- '400: Bad Request - Check your request parameters'
- '404: Not Found - Verify the endpoint or resource'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - account::RotationProofChallenge
  - account::OriginatingAddress
  - AccessToken
  - TokenProvider
  - OAuthClient
  - ClientCredentials
  - OAuthToken
  - OAuth2
  - AuthorizationCode
  - ed25519
  - secp256k1_ecdsa
  - web_authn
  - keyless
  - federated_keyless
  - AuthenticationProvider
  - secp256r1_ecdsa
  - multi_ed25519_signature
  - no_account_signature
  - abstraction_signature
  - single_key_signature
  - multi_key_signature
  - single_sender
  - ed25519_signature
  - Account signature scheme
client:
  base_url: https://api.mainnet.aptoslabs.com
  headers:
    Accept: application/json
source_metadata: null
