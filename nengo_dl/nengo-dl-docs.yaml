resources:
- name: Simulator
  endpoint:
    path: /nengo_dl/simulator
    method: GET
- name: probe_values
  endpoint:
    path: /nengo/probe_values
    method: GET
    data_selector: output
    params: {}
- name: predict_on_batch
  endpoint:
    path: /nengo/predict_on_batch
    method: POST
    data_selector: predictions
    params: {}
- name: compile
  endpoint:
    path: /nengo/compile
    method: POST
    data_selector: compilation_info
    params: {}
- name: fit
  endpoint:
    path: /nengo/fit
    method: POST
    data_selector: training_info
    params: {}
- name: evaluate
  endpoint:
    path: /nengo/evaluate
    method: POST
    data_selector: evaluation_results
    params: {}
- name: SimulationData
  endpoint:
    path: /nengo_dl/simulator/SimulationData
    method: GET
    data_selector: data
    params: {}
- name: Probe
  endpoint:
    path: /nengo_dl/simulator/Probe
    method: GET
    data_selector: data
    params: {}
- name: Ensemble
  endpoint:
    path: /nengo_dl/simulator/Ensemble
    method: GET
    data_selector: data
    params: {}
- name: Connection
  endpoint:
    path: /nengo_dl/simulator/Connection
    method: GET
    data_selector: data
    params: {}
- name: loss_functions
  endpoint:
    path: /nengo_dl/losses
    method: GET
    data_selector: functions
    params: {}
- name: ResetInc
  endpoint:
    path: /nengo_dl/op_builders/ResetInc
    method: GET
    data_selector: records
- name: ElementwiseSet
  endpoint:
    path: /nengo_dl/op_builders/ElementwiseSet
    method: GET
    data_selector: records
- name: DotSet
  endpoint:
    path: /nengo_dl/op_builders/DotSet
    method: GET
    data_selector: records
- name: SparseDotSet
  endpoint:
    path: /nengo_dl/op_builders/SparseDotSet
    method: GET
    data_selector: records
- name: ResetBuilder
  endpoint:
    path: /nengo_dl/op_builders/ResetBuilder
    method: GET
    data_selector: records
- name: CopyBuilder
  endpoint:
    path: /nengo_dl/op_builders/CopyBuilder
    method: GET
    data_selector: records
- name: ElementwiseIncBuilder
  endpoint:
    path: /nengo_dl/op_builders/ElementwiseIncBuilder
    method: GET
    data_selector: records
- name: sparse_matmul
  endpoint:
    path: /nengo_dl/op_builders/sparse_matmul
    method: GET
    data_selector: records
- name: DotIncBuilder
  endpoint:
    path: /nengo_dl/op_builders/DotIncBuilder
    method: GET
    data_selector: records
- name: predict_on_batch
  endpoint:
    path: /predict_on_batch
    method: POST
- name: compile
  endpoint:
    path: /compile
    method: POST
- name: fit
  endpoint:
    path: /fit
    method: POST
- name: evaluate
  endpoint:
    path: /evaluate
    method: POST
- name: simulation
  endpoint:
    path: /nengo_dl/simulator
    method: POST
    data_selector: outputs
- name: Operator
  endpoint:
    path: /nengo_dl/neuron_builders.py
    method: GET
    data_selector: ops
    params: {}
- name: SignalDict
  endpoint:
    path: /nengo_dl/signals
    method: GET
    data_selector: signals
    params: {}
- name: BuildConfig
  endpoint:
    path: /nengo_dl/builder
    method: GET
    data_selector: config
    params: {}
- name: nan_mse
  endpoint:
    path: /nengo_dl/losses/nan_mse
    method: GET
    data_selector: records
- name: Regularize
  endpoint:
    path: /nengo_dl/losses/Regularize
    method: GET
    data_selector: records
- name: SimProcessBuilder
  endpoint:
    path: /nengo_dl/process_builders/SimProcessBuilder
    method: GET
    data_selector: attributes
    params: {}
- name: ConvSet
  endpoint:
    path: /nengo_dl/transform_builders/ConvSet
    method: GET
    data_selector: attributes
    params: {}
- name: SimTensorNode
  endpoint:
    path: /nengo_dl/tensor_node/SimTensorNode
    method: GET
    data_selector: attributes
    params: {}
- name: NengoSummaries
  endpoint:
    path: /nengo_dl/callbacks/NengoSummaries
    method: GET
    data_selector: parameters
    params: {}
- name: TensorBoard
  endpoint:
    path: /nengo_dl/callbacks/TensorBoard
    method: GET
    data_selector: parameters
    params: {}
- name: IsolateState
  endpoint:
    path: /nengo_dl/callbacks/IsolateState
    method: GET
    data_selector: parameters
    params: {}
- name: graph_optimizer
  endpoint:
    path: /nengo_dl/graph_optimizer
    method: GET
    data_selector: functions
    params: {}
- name: ResetInc
  endpoint:
    path: /nengo_dl/op_builders/ResetInc
    method: GET
    data_selector: src
    params: {}
- name: ElementwiseSet
  endpoint:
    path: /nengo_dl/op_builders/ElementwiseSet
    method: GET
    data_selector: src
    params: {}
- name: DotSet
  endpoint:
    path: /nengo_dl/op_builders/DotSet
    method: GET
    data_selector: src
    params: {}
- name: SparseDotSet
  endpoint:
    path: /nengo_dl/op_builders/SparseDotSet
    method: GET
    data_selector: src
    params: {}
- name: ResetBuilder
  endpoint:
    path: /nengo_dl/op_builders/ResetBuilder
    method: GET
    data_selector: src
    params: {}
- name: CopyBuilder
  endpoint:
    path: /nengo_dl/op_builders/CopyBuilder
    method: GET
    data_selector: src
    params: {}
- name: ElementwiseIncBuilder
  endpoint:
    path: /nengo_dl/op_builders/ElementwiseIncBuilder
    method: GET
    data_selector: src
    params: {}
- name: DotIncBuilder
  endpoint:
    path: /nengo_dl/op_builders/DotIncBuilder
    method: GET
    data_selector: src
    params: {}
- name: remove_reset_incs
  endpoint:
    path: /nengo_dl/graph_optimizer/remove_reset_incs
    method: GET
    data_selector: new_operators
    params: {}
- name: remove_constant_copies
  endpoint:
    path: /nengo_dl/graph_optimizer/remove_constant_copies
    method: GET
    data_selector: new_operators
    params: {}
- name: remove_identity_muls
  endpoint:
    path: /nengo_dl/graph_optimizer/remove_identity_muls
    method: GET
    data_selector: new_operators
    params: {}
- name: signal_io_dicts
  endpoint:
    path: /nengo_dl/graph_optimizer/signal_io_dicts
    method: GET
    data_selector: sets
    params: {}
- name: display_signal_blocks
  endpoint:
    path: /nengo_dl/graph_optimizer/display_signal_blocks
    method: GET
    data_selector: signal_blocks
    params: {}
- name: TFNeuronBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/TFNeuronBuilder
    method: GET
- name: RectifiedLinearBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/RectifiedLinearBuilder
    method: GET
- name: SpikingRectifiedLinearBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/SpikingRectifiedLinearBuilder
    method: GET
- name: SigmoidBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/SigmoidBuilder
    method: GET
- name: TanhBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/TanhBuilder
    method: GET
- name: LIFRateBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/LIFRateBuilder
    method: GET
- name: SoftLIFRateBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/SoftLIFRateBuilder
    method: GET
- name: LIFBuilder
  endpoint:
    path: /nengo_dl/neuron_builders/LIFBuilder
    method: GET
- name: RegularSpiking
  endpoint:
    path: /nengo_dl/neuron_builders/RegularSpikingBuilder
    method: GET
- name: StochasticSpiking
  endpoint:
    path: /nengo_dl/neuron_builders/StochasticSpikingBuilder
    method: GET
- name: PoissonSpiking
  endpoint:
    path: /nengo_dl/neuron_builders/PoissonSpikingBuilder
    method: GET
- name: SimNeurons
  endpoint:
    path: /nengo_dl/neuron_builders/SimNeuronsBuilder
    method: GET
- name: SimBCM
  endpoint:
    path: /nengo_dl/learning_rule_builders/SimBCMBuilder
    method: GET
- name: SimOja
  endpoint:
    path: /nengo_dl/learning_rule_builders/SimOjaBuilder
    method: GET
- name: SimVoja
  endpoint:
    path: /nengo_dl/learning_rule_builders/SimVojaBuilder
    method: GET
- name: SimPES
  endpoint:
    path: /nengo_dl/learning_rule_builders/SimPESBuilder
    method: GET
- name: ConvertAverage
  endpoint:
    path: /nengo_dl/converter/ConvertAverage
    method: GET
- name: ConvertAvgPool1D
  endpoint:
    path: /nengo_dl/converter/ConvertAvgPool1D
    method: GET
- name: ConvertAvgPool2D
  endpoint:
    path: /nengo_dl/converter/ConvertAvgPool2D
    method: GET
- name: ConvertAvgPool3D
  endpoint:
    path: /nengo_dl/converter/ConvertAvgPool3D
    method: GET
- name: ConvertBatchNormalization
  endpoint:
    path: /nengo_dl/converter/ConvertBatchNormalization
    method: GET
- name: ConvertConcatenate
  endpoint:
    path: /nengo_dl/converter/ConvertConcatenate
    method: GET
- name: ConvertConv
  endpoint:
    path: /nengo_dl/converter/ConvertConv
    method: GET
- name: ConvertConv1D
  endpoint:
    path: /nengo_dl/converter/ConvertConv1D
    method: GET
- name: ConvertConv2D
  endpoint:
    path: /nengo_dl/converter/ConvertConv2D
    method: GET
- name: ConvertConv3D
  endpoint:
    path: /nengo_dl/converter/ConvertConv3D
    method: GET
- name: ConvertDense
  endpoint:
    path: /nengo_dl/converter/ConvertDense
    method: GET
- name: ConvertFlatten
  endpoint:
    path: /nengo_dl/converter/ConvertFlatten
    method: GET
- name: ConvertInput
  endpoint:
    path: /nengo_dl/converter/ConvertInput
    method: GET
- name: ConvertReLU
  endpoint:
    path: /nengo_dl/converter/ConvertReLU
    method: GET
- name: ConvertLeakyReLU
  endpoint:
    path: /nengo_dl/converter/ConvertLeakyReLU
    method: GET
- name: ConvertReshape
  endpoint:
    path: /nengo_dl/converter/ConvertReshape
    method: GET
- name: ConvertUpSampling
  endpoint:
    path: /nengo_dl/converter/ConvertUpSampling
    method: GET
- name: ConvertUpSampling1D
  endpoint:
    path: /nengo_dl/converter/ConvertUpSampling1D
    method: GET
- name: ConvertUpSampling2D
  endpoint:
    path: /nengo_dl/converter/ConvertUpSampling2D
    method: GET
- name: ConvertUpSampling3D
  endpoint:
    path: /nengo_dl/converter/ConvertUpSampling3D
    method: GET
- name: GenericProcessBuilder
  endpoint:
    path: /nengo_dl/process_builders/GenericProcessBuilder
    method: GET
    data_selector: outputs
    params: {}
- name: LowpassBuilder
  endpoint:
    path: /nengo_dl/process_builders/LowpassBuilder
    method: GET
    data_selector: outputs
    params: {}
- name: LinearFilterBuilder
  endpoint:
    path: /nengo_dl/process_builders/LinearFilterBuilder
    method: GET
    data_selector: outputs
    params: {}
- name: SimProcessBuilder
  endpoint:
    path: /nengo_dl/process_builders/SimProcessBuilder
    method: GET
    data_selector: outputs
    params: {}
- name: TensorGraph
  endpoint:
    path: /nengo_dl/tensor_graph/TensorGraph
    method: GET
- name: TensorSignal
  endpoint:
    path: /nengo_dl/signals/TensorSignal
    method: GET
- name: SignalDict
  endpoint:
    path: /nengo_dl/signals/SignalDict
    method: GET
- name: ConvertZeroPadding
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding
    method: GET
    data_selector: NengoObject
- name: ConvertZeroPadding1D
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding1D
    method: GET
    data_selector: NengoObject
- name: ConvertZeroPadding2D
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding2D
    method: GET
    data_selector: NengoObject
- name: ConvertZeroPadding3D
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding3D
    method: GET
    data_selector: NengoObject
- name: ConvertKerasSpiking
  endpoint:
    path: /nengo_dl/converter/ConvertKerasSpiking
    method: GET
    data_selector: NengoObject
- name: ConvertSpikingActivation
  endpoint:
    path: /nengo_dl/converter/ConvertSpikingActivation
    method: GET
    data_selector: NengoObject
- name: ConvertLowpassAlpha
  endpoint:
    path: /nengo_dl/converter/ConvertLowpassAlpha
    method: GET
    data_selector: NengoObject
- name: ConvertTimeDistributed
  endpoint:
    path: /nengo_dl/converter/ConvertTimeDistributed
    method: GET
    data_selector: NengoObject
- name: graph_optimizer
  endpoint:
    path: /nengo_dl/graph_optimizer
    method: GET
    data_selector: operators
    params: {}
- name: remove_reset_incs
  endpoint:
    path: /nengo_dl/graph_optimizer/remove_reset_incs
    method: GET
    data_selector: new_operators
- name: remove_constant_copies
  endpoint:
    path: /nengo_dl/graph_optimizer/remove_constant_copies
    method: GET
    data_selector: new_operators
- name: remove_identity_muls
  endpoint:
    path: /nengo_dl/graph_optimizer/remove_identity_muls
    method: GET
    data_selector: new_operators
- name: signal_io_dicts
  endpoint:
    path: /nengo_dl/graph_optimizer/signal_io_dicts
    method: GET
    data_selector: sets
- name: display_signal_blocks
  endpoint:
    path: /nengo_dl/graph_optimizer/display_signal_blocks
    method: GET
    data_selector: signal_blocks
- name: ConvertZeroPadding
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding
    method: GET
    data_selector: output
- name: ConvertZeroPadding1D
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding1D
    method: GET
    data_selector: output
- name: ConvertZeroPadding2D
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding2D
    method: GET
    data_selector: output
- name: ConvertZeroPadding3D
  endpoint:
    path: /nengo_dl/converter/ConvertZeroPadding3D
    method: GET
    data_selector: output
- name: ConvertKerasSpiking
  endpoint:
    path: /nengo_dl/converter/ConvertKerasSpiking
    method: GET
    data_selector: output
- name: ConvertSpikingActivation
  endpoint:
    path: /nengo_dl/converter/ConvertSpikingActivation
    method: GET
    data_selector: output
- name: ConvertLowpassAlpha
  endpoint:
    path: /nengo_dl/converter/ConvertLowpassAlpha
    method: GET
    data_selector: output
- name: ConvertTimeDistributed
  endpoint:
    path: /nengo_dl/converter/ConvertTimeDistributed
    method: GET
    data_selector: output
- name: cconv
  endpoint:
    path: /nengo_dl/benchmarks/cconv
    method: GET
- name: integrator
  endpoint:
    path: /nengo_dl/benchmarks/integrator
    method: GET
- name: pes
  endpoint:
    path: /nengo_dl/benchmarks/pes
    method: GET
- name: basal_ganglia
  endpoint:
    path: /nengo_dl/benchmarks/basal_ganglia
    method: GET
- name: mnist
  endpoint:
    path: /nengo_dl/benchmarks/mnist
    method: GET
- name: spaun
  endpoint:
    path: /nengo_dl/benchmarks/spaun
    method: GET
- name: random_network
  endpoint:
    path: /nengo_dl/benchmarks/random_network
    method: GET
- name: lmu
  endpoint:
    path: /nengo_dl/benchmarks/lmu
    method: GET
- name: run_profile
  endpoint:
    path: /nengo_dl/benchmarks/run_profile
    method: GET
- name: mnist
  endpoint:
    path: /examples/spiking-mnist
    method: GET
    data_selector: data
    params: {}
- name: Layers
  endpoint:
    path: /reference/layers
    method: GET
- name: Regularizers
  endpoint:
    path: /reference/regularizers
    method: GET
- name: Constraints
  endpoint:
    path: /reference/constraints
    method: GET
- name: Callbacks
  endpoint:
    path: /reference/callbacks
    method: GET
- name: Configuration
  endpoint:
    path: /reference/config
    method: GET
- name: Energy estimation
  endpoint:
    path: /reference/model_energy
    method: GET
- name: utilization_summary
  endpoint:
    path: /utilization/summary
    method: GET
    data_selector: utilization
- name: predictions
  endpoint:
    path: /predictions
    method: POST
    data_selector: results
- name: adaptive_pendulum
  endpoint:
    path: /examples/adaptive-pendulum
    method: GET
- name: reinforcement_learning
  endpoint:
    path: /examples/reinforcement-learning
    method: GET
- name: KerasSpikingCell
  endpoint:
    path: /keras_spiking/layers/KerasSpikingCell
    method: GET
- name: KerasSpikingLayer
  endpoint:
    path: /keras_spiking/layers/KerasSpikingLayer
    method: GET
- name: SpikingActivationCell
  endpoint:
    path: /keras_spiking/SpikingActivationCell
    method: GET
- name: SpikingActivation
  endpoint:
    path: /keras_spiking/SpikingActivation
    method: GET
- name: LowpassCell
  endpoint:
    path: /keras_spiking/LowpassCell
    method: GET
- name: Lowpass
  endpoint:
    path: /keras_spiking/Lowpass
    method: GET
- name: AlphaCell
  endpoint:
    path: /keras_spiking/AlphaCell
    method: GET
- name: Alpha
  endpoint:
    path: /keras_spiking/Alpha
    method: GET
- name: Lowpass
  endpoint:
    path: /get_config
    method: GET
- name: AlphaCell
  endpoint:
    path: /get_config
    method: GET
- name: Alpha
  endpoint:
    path: /get_config
    method: GET
- name: utilization_summary
  endpoint:
    path: /utilization
    method: GET
    data_selector: summary
- name: RangedRegularizer
  endpoint:
    path: /keras_spiking/regularizers/RangedRegularizer
    method: GET
- name: L1L2
  endpoint:
    path: /keras_spiking/regularizers/L1L2
    method: GET
- name: L1
  endpoint:
    path: /keras_spiking/regularizers/L1
    method: GET
- name: L2
  endpoint:
    path: /keras_spiking/regularizers/L2
    method: GET
- name: Percentile
  endpoint:
    path: /keras_spiking/regularizers/Percentile
    method: GET
- name: Mean
  endpoint:
    path: /keras_spiking/constraints/Mean
    method: GET
- name: DtScheduler
  endpoint:
    path: /keras_spiking/callbacks/DtScheduler
    method: GET
- name: DefaultManager
  endpoint:
    path: /keras_spiking/config/DefaultManager
    method: GET
- name: ModelEnergy
  endpoint:
    path: /keras_spiking/model_energy
    method: GET
    data_selector: statistics
- name: compute_layer_stats
  endpoint:
    path: /keras_spiking/model_energy/compute_layer_stats
    method: GET
    data_selector: layer_stats
- name: register_layer
  endpoint:
    path: /keras_spiking/model_energy/register_layer
    method: POST
    data_selector: registered_layers
- name: adaptive_pendulum
  endpoint:
    path: /nengo_fpga/docs/examples/gui/01-adaptive-pendulum.py
    method: GET
    data_selector: examples
    params: {}
- name: reinforcement_learning
  endpoint:
    path: /nengo_fpga/docs/examples/gui/02-RL-demo.py
    method: GET
    data_selector: examples
    params: {}
- name: ModelEnergy
  endpoint:
    path: /model_energy
    method: GET
    data_selector: records
- name: keras_to_snn
  endpoint:
    path: /nengo_dl/converter
    method: POST
    data_selector: model
    params: {}
- name: KerasSpikingCell
  endpoint:
    path: /keras_spiking/layers/KerasSpikingCell
    method: GET
    data_selector: parameters
    params: {}
- name: KerasSpikingLayer
  endpoint:
    path: /keras_spiking/layers/KerasSpikingLayer
    method: GET
    data_selector: parameters
    params: {}
- name: SpikingActivationCell
  endpoint:
    path: /keras_spiking/SpikingActivationCell
    method: GET
    data_selector: parameters
    params: {}
- name: SpikingActivation
  endpoint:
    path: /keras_spiking/SpikingActivation
    method: GET
    data_selector: parameters
    params: {}
- name: LowpassCell
  endpoint:
    path: /keras_spiking/LowpassCell
    method: GET
    data_selector: parameters
    params: {}
- name: Lowpass
  endpoint:
    path: /keras_spiking/Lowpass
    method: GET
    data_selector: parameters
    params: {}
- name: AlphaCell
  endpoint:
    path: /keras_spiking/AlphaCell
    method: GET
    data_selector: parameters
    params: {}
- name: Alpha
  endpoint:
    path: /keras_spiking/Alpha
    method: GET
    data_selector: parameters
    params: {}
- name: Lowpass
  endpoint:
    path: /get_config
    method: GET
    data_selector: config
    params: {}
- name: AlphaCell
  endpoint:
    path: /get_initial_state
    method: GET
    data_selector: state
    params: {}
- name: Alpha
  endpoint:
    path: /build_cell
    method: GET
    data_selector: cell
    params: {}
- name: layer_energy
  endpoint:
    path: /keras_spiking/model_energy/layer_energy
    method: GET
- name: total_energy
  endpoint:
    path: /keras_spiking/model_energy/total_energy
    method: GET
- name: summary
  endpoint:
    path: /keras_spiking/model_energy/summary
    method: GET
- name: summary_string
  endpoint:
    path: /keras_spiking/model_energy/summary_string
    method: GET
- name: TensorNode
  endpoint:
    path: /nengo_dl/tensor_node
    method: GET
    data_selector: records
- name: KerasWrapper
  endpoint:
    path: /nengo_dl/keras_wrapper
    method: GET
    data_selector: records
- name: TensorNode
  endpoint:
    path: /reference.html#nengo_dl.TensorNode
    method: GET
    data_selector: records
- name: Layer
  endpoint:
    path: /reference.html#nengo_dl.Layer
    method: GET
    data_selector: records
- name: converter
  endpoint:
    path: /converter
    method: GET
    data_selector: records
- name: Keras to Spiking Neural Network
  endpoint:
    path: /nengo-dl/converter
    method: POST
    data_selector: converter
- name: spiking_neural_network
  endpoint:
    path: /examples/spiking-mnist
    method: GET
    data_selector: data
notes:
- If `unroll_simulation=x` is specified, and `n_steps > x`, this will repeatedly execute
  `x` timesteps until the number of steps executed is >= `n_steps`.
- This function is useful for saving/loading entire models; for saving/loading individual
  objects within a model, see [`get_nengo_params`](#nengo_dl.Simulator.get_nengo_params
  "nengo_dl.Simulator.get_nengo_params").
- This modifies the source object in-place, and it may slightly modify the structure
  of that object. The goal is to have the object produce the same output as it would
  if run in the NengoDL simulator. It may not be possible to accurately freeze all
  possible object; if you run into errors in this process, try manually extracting
  the parameters you need in your model (from `sim.data`).
- Dynamic input types require explicit input for all input nodes.
- The 'n_steps' input must be batched.
- If 'x' is a generator, 'y' is unused.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- If `unroll_simulation=x` is specified, and `n_steps > x`, this will repeatedly execute
  `x` timesteps until the the number of steps executed is >= `n_steps`.
- This modifies the source object in-place, and it may slightly modify the structure
  of that object.
- Data must be specified via standard Keras methods (arrays, list of arrays, or string
  name dictionary).
- Data must be explicitly provided for all input nodes.
- Some objects like Contact may return nulls in deeply nested fields
- this part is optional, but we may often want to only keep the data from the most
  recent timestep when probing in this way, to save memory
- This library allows TensorFlow code to be integrated into a Nengo model.
- This class is here so that we can register new build functions for NengoDL without
  affecting the default Nengo build process.
- These will be executed as native Python functions, requiring execution to move in
  and out of TensorFlow. This can significantly slow down the simulation, so any performance-critical
  neuron models should consider adding a custom TensorFlow implementation for their
  neuron type instead.
- This is designed to be applied to a probed signal.
- This documentation is for a development version.
- Nengo runs on Windows, Mac OS X and Linux and requires Python.
- 'NengoDL combines two frameworks: Nengo and TensorFlow.'
- NengoDL allows model parameters to be optimized via TensorFlow optimization algorithms.
- The NEF optimization can be used in combination with the deep learning optimization
  methods.
- NengoDL combines Nengo and TensorFlow.
- Uses TensorFlow with NengoDL for deep learning optimization
- Uses TensorFlow for model optimization and inference
- LMUs have achieved state of the art performance on complex RNN tasks.
- Uses TensorFlow with Nengo for CIFAR-10 convolutional neural network.
- Training may require fine-tuning of initialization parameters.
- Compatible with NxSDK 0.8.0.
- Some objects may have specific limitations.
- Output data is a timeseries of the output values at each timestep.
- A working installation of OpenCL is the most difficult part of installing NengoOCL.
- Let us know if Nengo crashes or does something that you don’t expect.
- To run the adaptive pendulum example, execute 'nengo 01-adaptive-pendulum.py -b
  nengo_fpga'
- To run the reinforcement learning example, execute 'nengo 02-RL-demo.py -b nengo_fpga'
- Switching to NengoDL will not impact the behaviour of a model at all (ignoring very
  minor floating point math differences).
- Uses TensorFlow for computations within Nengo models.
- Uses TensorFlow for model training and evaluation
- The network performs well enough to demonstrate that Loihi is capable of hosting
  larger, more powerful object recognition networks than MNIST.
- Uses NengoDL for training neural networks.
- Probes on individual layers are removed when running on Loihi.
- These examples are made available under a proprietary license that permits using,
  copying, sharing, and making derivative works for any non-commercial purpose.
- Estimates energy usage on various devices for Keras models.
- Estimates are rough and depend on specific details of the implementation.
- Uses OAuth2 with refresh token — requires setup of connected app in Nengo
- The Converter is designed to automate the translation process as much as possible,
  but it will not work for all possible Keras networks.
- NengoDL uses Nengo’s config system to allow users to control more fine-grained aspects
  of the simulation.
- Most users will not need to worry about these options, and can leave them at their
  default settings.
- Uses NengoDL to convert Keras models to spiking neural networks.
- Common issues include accuracy tradeoffs with spiking neurons.
- Uses target firing rates during training for optimization
- Tradeoffs between accuracy and firing rates are application dependent
- Uses a cognitive model with temporal dynamics.
- This is equivalent to tf.keras.layers.RNN(LowpassCell(...) ...), it just takes care
  of the RNN construction automatically.
- Do not instantiate DefaultManager class directly, instead access it through keras_spiking.default.
- Minimum Numpy version is now 1.16.0 (required by TensorFlow).
- Increased minimum Nengo core version to 3.0.0.
- Estimates energy usage on various devices for Keras models
- Actual power usage will be heavily dependent on the specific details of the underlying
  software and hardware implementation
- Switching to the more generic `data` argument simplifies the API and makes it more
  flexible.
- The `objective` argument in `sim.train`/`sim.loss` must now be explicitly specified.
- Supports integration of Keras models into Nengo networks.
- Performance may vary slightly due to random initialization.
- By default, NengoDL will optimize connection weights, ensemble encoders, and neuron
  biases.
- Uses TensorFlow for training and evaluation of models
- Almost all deep learning methods require the network to be differentiable, which
  means that trying to train a network with non-differentiable elements will result
  in an error or poor training.
- Most TensorFlow optimizers do not have GPU support for networks with sparse reads,
  which are a common element in Nengo models.
- TensorNodes allow parts of a model to be defined using TensorFlow and smoothly integrated
  with the rest of a Nengo model.
- This page includes some tips and tricks to get the most out of NengoDL, or answers
  to common questions we see from users.
- 'We have seen three different methods for integrating a Keras model into NengoDL:
  inserting a whole model, inserting individual layers, or building an equivalent
  native Nengo model.'
- Each method reproduces the same behaviour as the original Keras model, but requires
  differing levels of effort and supports different functionality.
- The NengoDL Converter automates the translation from Keras to Nengo.
- We can increase firing rates without retraining the model by applying a linear scale
  to the input of all the neurons.
- This will likely only work well with linear activation functions (like ReLU).
- We can see that as the frequency of spiking increases, the accuracy also increases.
- While increasing the firing rates can improve accuracy, it may lead to losing advantages
  of a spiking model.
- Uses a memory network with recursive connections
- Model performance can vary based on parameters
- Compatible with Nengo 3.0.0
- Compatible with TensorFlow 2.0.0 - 2.1.0
- TensorBoard functionality replaced by Keras TensorBoard callback.
- Specify dtype as string instead of tf.Dtype.
- Configure trainability separately within subnetworks, rather than marking networks
  as trainable.
- Use tf.config instead of session_config.
- Uses TensorFlow for model training and evaluation.
errors:
- 'UserWarning: Number of elements in input data is not evenly divisible by Simulator.minibatch_size;
  input data will be truncated.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '20.75% accuracy: Initial naive conversion without tuning.'
- '71.75% accuracy: Improved with synaptic filtering.'
- Retrieval accuracy may initially be poor
- Optimization may require tuning of model parameters
auth_info:
  mentioned_objects: []
client:
  base_url: https://www.nengo.ai
source_metadata: null
