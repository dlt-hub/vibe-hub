resources:
- name: ping
  endpoint:
    path: /ping/{time}
    method: GET
    data_selector: response
    params: {}
- name: userdata
  endpoint:
    path: /userdata
    method: GET
    data_selector: response
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: response
    params: {}
- name: session
  endpoint:
    path: /session
    method: GET
    data_selector: response
    params: {}
- name: jwt
  endpoint:
    path: /session/jwt
    method: GET
    data_selector: response
    params: {}
- name: forgotpassword
  endpoint:
    path: /forgotpassword
    method: POST
    data_selector: response
    params: {}
- name: forgot_password_confirm
  endpoint:
    path: /forgotpassword/confirm/{userid}
    method: POST
    data_selector: data
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: data
- name: register_confirm
  endpoint:
    path: /register/confirm/{userid}
    method: POST
    data_selector: data
- name: user_list
  endpoint:
    path: /users
    method: GET
    data_selector: response
- name: get_user
  endpoint:
    path: /users/{userid}
    method: GET
    data_selector: response
- name: update_user
  endpoint:
    path: /users/{userid}
    method: POST
    data_selector: response
- name: delete_user
  endpoint:
    path: /users/{userid}
    method: DELETE
    data_selector: response
- name: confirm_delete_user
  endpoint:
    path: /users/{userid}/confirm/{confirmcode}
    method: DELETE
    data_selector: response
- name: create_user
  endpoint:
    path: /users/create
    method: POST
    data_selector: response
- name: resend_welcome
  endpoint:
    path: /users/{userid}/resendwelcome
    method: POST
    data_selector: response
- name: accept_terms
  endpoint:
    path: /users/{userid}/acceptterms
    method: POST
    data_selector: response
- name: get_api_keys
  endpoint:
    path: /users/{userid}/keys
    method: GET
    data_selector: response
- name: create_api_key
  endpoint:
    path: /users/{userid}/keys
    method: POST
    data_selector: response
- name: key_description
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: GET
- name: update_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: POST
- name: delete_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: DELETE
- name: get_2fa_keys
  endpoint:
    path: /users/{userid}/2fa
    method: GET
- name: create_2fa_key
  endpoint:
    path: /users/{userid}/2fa
    method: POST
- name: verify_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}/verify
    method: POST
- name: get_2fa_devices
  endpoint:
    path: /users/{userid}/2fadevices
    method: GET
- name: delete_2fa_device
  endpoint:
    path: /users/{userid}/2fadevices/{deviceid}
    method: DELETE
- name: get_custom_data
  endpoint:
    path: /users/{userid}/customdata
    method: GET
- name: update_custom_data
  endpoint:
    path: /users/{userid}/customdata/{key}
    method: POST
- name: get_domain_stats
  endpoint:
    path: /users/{userid}/stats/{stattype}
    method: GET
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: response
    params: {}
- name: specific_domain
  endpoint:
    path: /domains/{domain}
    method: GET
    data_selector: response
    params: {}
- name: domain_access
  endpoint:
    path: /domains/{domain}/access
    method: GET
    data_selector: response
    params: {}
- name: domain_keys
  endpoint:
    path: /domains/{domain}/keys
    method: GET
    data_selector: response
    params: {}
- name: domain_hooks
  endpoint:
    path: /domains/{domain}/hooks
    method: GET
    data_selector: response
    params: {}
- name: hook
  endpoint:
    path: /domains/{domain}/hooks/{hookid}
    method: GET
    data_selector: response
- name: domain_records
  endpoint:
    path: /domains/{domain}/records
    method: GET
    data_selector: response.records
- name: domain_stats
  endpoint:
    path: /domains/{domain}/stats{?type}
    method: GET
    data_selector: response.stats
- name: domain_logs
  endpoint:
    path: /domains/{domain}/logs
    method: GET
    data_selector: response
- name: domain_export
  endpoint:
    path: /domains/{domain}/export/{type}
    method: GET
    data_selector: response.zone
- name: domain_import
  endpoint:
    path: /domains/{domain}/import/{type}
    method: POST
    data_selector: response.serial
- name: specific_record_information
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: GET
    data_selector: response
    params: {}
- name: update_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: POST
    data_selector: response
    params: {}
- name: delete_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: DELETE
    data_selector: response
    params: {}
- name: get_all_records_by_name
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: GET
    data_selector: response
    params: {}
- name: delete_all_domain_records
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: DELETE
    data_selector: response
    params: {}
- name: force_backend_sync
  endpoint:
    path: /domains/{domain}/sync
    method: GET
    data_selector: response
    params: {}
- name: schedule_domain_verification
  endpoint:
    path: /domains/{domain}/verify
    method: GET
    data_selector: response
    params: {}
- name: publish_acme_challenge
  endpoint:
    path: /external/httpreq/present
    method: POST
    data_selector: response
    params: {}
- name: cleanup_acme_challenge
  endpoint:
    path: /external/httpreq/cleanup
    method: POST
    data_selector: response
    params: {}
- name: get_domains_admin
  endpoint:
    path: /admin/domains
    method: GET
    data_selector: response
    params: {}
- name: create_new_domain
  endpoint:
    path: /admin/domains
    method: POST
    data_selector: response
    params: {}
- name: ping
  endpoint:
    path: /ping/{time}
    method: GET
- name: userdata
  endpoint:
    path: /userdata
    method: GET
- name: version
  endpoint:
    path: /version
    method: GET
- name: session
  endpoint:
    path: /session
    method: GET
- name: jwt
  endpoint:
    path: /session/jwt
    method: GET
- name: forgotpassword
  endpoint:
    path: /forgotpassword
    method: POST
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: response
    params: {}
- name: admin_articles
  endpoint:
    path: /admin/articles
    method: GET
    data_selector: response
    params: {}
- name: blockregexes
  endpoint:
    path: /admin/blockregexes
    method: GET
    data_selector: response
    params: {}
- name: system_datavalue
  endpoint:
    path: /system/datavalue/{datavalue}
    method: GET
    data_selector: response
    params: {}
- name: system_stats
  endpoint:
    path: /system/stats/{stat}
    method: GET
    data_selector: response
    params: {}
- name: ping
  endpoint:
    path: /ping/{time}
    method: GET
    data_selector: response
    params: {}
- name: userdata
  endpoint:
    path: /userdata
    method: GET
    data_selector: response
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: response
    params: {}
- name: session
  endpoint:
    path: /session
    method: GET
    data_selector: response
    params: {}
- name: jwt
  endpoint:
    path: /session/jwt
    method: GET
    data_selector: response
    params: {}
- name: forgotpassword
  endpoint:
    path: /forgotpassword
    method: POST
    data_selector: response
    params: {}
- name: forgot_password_confirm
  endpoint:
    path: /forgotpassword/confirm/{userid}
    method: POST
- name: register
  endpoint:
    path: /register
    method: POST
- name: register_confirmation
  endpoint:
    path: /register/confirm/{userid}
    method: POST
- name: user_list
  endpoint:
    path: /users
    method: GET
- name: get_user_info
  endpoint:
    path: /users/{userid}
    method: GET
- name: update_user
  endpoint:
    path: /users/{userid}
    method: POST
- name: delete_user
  endpoint:
    path: /users/{userid}
    method: DELETE
- name: confirm_delete_user
  endpoint:
    path: /users/{userid}/confirm/{confirmcode}
    method: DELETE
- name: confirm_delete_user_2fa
  endpoint:
    path: /users/{userid}/confirm/{confirmcode}/{twofactorcode}
    method: DELETE
- name: create_user
  endpoint:
    path: /users/create
    method: POST
- name: resend_welcome_email
  endpoint:
    path: /users/{userid}/resendwelcome
    method: POST
- name: accept_terms
  endpoint:
    path: /users/{userid}/acceptterms
    method: POST
- name: get_api_keys
  endpoint:
    path: /users/{userid}/keys
    method: GET
- name: create_api_key
  endpoint:
    path: /users/{userid}/keys
    method: POST
- name: forgot_password_confirm
  endpoint:
    path: /forgotpassword/confirm/{userid}
    method: POST
    data_selector: response
    params: {}
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: response
    params: {}
- name: register_confirm
  endpoint:
    path: /register/confirm/{userid}
    method: POST
    data_selector: response
    params: {}
- name: user_list
  endpoint:
    path: /users
    method: GET
    data_selector: response
    params: {}
- name: user_info
  endpoint:
    path: /users/{userid}
    method: GET
    data_selector: response
    params: {}
- name: user_update
  endpoint:
    path: /users/{userid}
    method: POST
    data_selector: response
    params: {}
- name: user_delete
  endpoint:
    path: /users/{userid}
    method: DELETE
    data_selector: response
    params: {}
- name: user_confirm_delete
  endpoint:
    path: /users/{userid}/confirm/{confirmcode}
    method: DELETE
    data_selector: response
    params: {}
- name: user_create
  endpoint:
    path: /users/create
    method: POST
    data_selector: response
    params: {}
- name: resend_welcome
  endpoint:
    path: /users/{userid}/resendwelcome
    method: POST
    data_selector: response
    params: {}
- name: accept_terms
  endpoint:
    path: /users/{userid}/acceptterms
    method: POST
    data_selector: response
    params: {}
- name: api_keys
  endpoint:
    path: /users/{userid}/keys
    method: GET
    data_selector: response
    params: {}
- name: create_api_key
  endpoint:
    path: /users/{userid}/keys
    method: POST
    data_selector: response
    params: {}
- name: key_description
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: GET
    data_selector: response
    params: {}
- name: update_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: POST
    data_selector: response
    params: {}
- name: delete_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: DELETE
    data_selector: response
    params: {}
- name: get_2fa_keys
  endpoint:
    path: /users/{userid}/2fa
    method: GET
    data_selector: response
    params: {}
- name: create_2fa_key
  endpoint:
    path: /users/{userid}/2fa
    method: POST
    data_selector: response
    params: {}
- name: manipulate_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}
    method: GET
    data_selector: response
    params: {}
- name: verify_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}/verify
    method: POST
    data_selector: response
    params: {}
- name: get_2fa_devices
  endpoint:
    path: /users/{userid}/2fadevices
    method: GET
    data_selector: response
    params: {}
- name: delete_2fa_device
  endpoint:
    path: /users/{userid}/2fadevices/{deviceid}
    method: DELETE
    data_selector: response
    params: {}
- name: user_domain_statistics
  endpoint:
    path: /users/{userid}/stats/{stattype}
    method: GET
    data_selector: response
    params: {}
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: response
    params: {}
- name: specific_domain
  endpoint:
    path: /domains/{domain}
    method: GET
    data_selector: response
    params: {}
- name: domain_access
  endpoint:
    path: /domains/{domain}/access
    method: GET
    data_selector: response
    params: {}
- name: domain_keys
  endpoint:
    path: /domains/{domain}/keys
    method: GET
    data_selector: response
    params: {}
- name: domain_hooks
  endpoint:
    path: /domains/{domain}/hooks
    method: GET
    data_selector: response
    params: {}
- name: get_key_description
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: GET
- name: update_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: POST
- name: delete_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: DELETE
- name: get_2fa_keys
  endpoint:
    path: /users/{userid}/2fa
    method: GET
- name: create_2fa_key
  endpoint:
    path: /users/{userid}/2fa
    method: POST
- name: delete_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}
    method: DELETE
- name: verify_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}/verify
    method: POST
- name: get_2fa_devices
  endpoint:
    path: /users/{userid}/2fadevices
    method: GET
- name: delete_2fa_device
  endpoint:
    path: /users/{userid}/2fadevices/{deviceid}
    method: DELETE
- name: get_custom_data
  endpoint:
    path: /users/{userid}/customdata
    method: GET
- name: update_custom_data
  endpoint:
    path: /users/{userid}/customdata/{key}
    method: POST
- name: delete_custom_data
  endpoint:
    path: /users/{userid}/customdata/{key}
    method: DELETE
- name: get_domain_statistics
  endpoint:
    path: /users/{userid}/stats/{stattype}
    method: GET
- name: hook
  endpoint:
    path: /domains/{domain}/hooks/{hookid}
    method: GET
    data_selector: response
    params: {}
- name: domain_records
  endpoint:
    path: /domains/{domain}/records
    method: GET
    data_selector: response.records
    params: {}
- name: domain_stats
  endpoint:
    path: /domains/{domain}/stats{?type}
    method: GET
    data_selector: response.stats
    params: {}
- name: domain_logs
  endpoint:
    path: /domains/{domain}/logs
    method: GET
    data_selector: response
    params: {}
- name: domain_export
  endpoint:
    path: /domains/{domain}/export/{type}
    method: GET
    data_selector: response.zone
    params: {}
- name: domain_import
  endpoint:
    path: /domains/{domain}/import/{type}
    method: POST
    data_selector: response.serial
    params: {}
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: response
    params: {}
- name: specific_domain
  endpoint:
    path: /domains/{domain}
    method: GET
    data_selector: response
    params: {}
- name: domain_access
  endpoint:
    path: /domains/{domain}/access
    method: GET
    data_selector: response
    params: {}
- name: domain_keys
  endpoint:
    path: /domains/{domain}/keys
    method: GET
    data_selector: response
    params: {}
- name: domain_hooks
  endpoint:
    path: /domains/{domain}/hooks
    method: GET
    data_selector: response
    params: {}
- name: specific_record_info
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: GET
- name: update_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: POST
- name: delete_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: DELETE
- name: get_all_www_records
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: GET
- name: delete_all_domain_records
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: DELETE
- name: force_backend_sync
  endpoint:
    path: /domains/{domain}/sync
    method: GET
- name: schedule_domain_verification
  endpoint:
    path: /domains/{domain}/verify
    method: GET
- name: publish_acme_challenge
  endpoint:
    path: /external/httpreq/present
    method: POST
- name: cleanup_acme_challenge
  endpoint:
    path: /external/httpreq/cleanup
    method: POST
- name: get_domains
  endpoint:
    path: /admin/domains
    method: GET
- name: create_new_domain
  endpoint:
    path: /admin/domains
    method: POST
- name: hooks
  endpoint:
    path: /domains/{domain}/hooks/{hookid}
    method: GET
    data_selector: response
    params: {}
- name: domain_records
  endpoint:
    path: /domains/{domain}/records
    method: GET
    data_selector: response.records
    params: {}
- name: domain_stats
  endpoint:
    path: /domains/{domain}/stats{?type}
    method: GET
    data_selector: response.stats
    params: {}
- name: domain_logs
  endpoint:
    path: /domains/{domain}/logs
    method: GET
    data_selector: response
    params: {}
- name: domain_export
  endpoint:
    path: /domains/{domain}/export/{type}
    method: GET
    data_selector: response
    params: {}
- name: domain_import
  endpoint:
    path: /domains/{domain}/import/{type}
    method: POST
    data_selector: response
    params: {}
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: response
- name: admin_articles
  endpoint:
    path: /admin/articles
    method: GET
    data_selector: response
- name: blockregexes
  endpoint:
    path: /admin/blockregexes
    method: GET
    data_selector: response
- name: system_stats_queries_per_server
  endpoint:
    path: /system/stats/queries-per-server
    method: GET
    data_selector: response
- name: ping
  endpoint:
    path: /ping/{time}
    method: GET
- name: userdata
  endpoint:
    path: /userdata
    method: GET
- name: version
  endpoint:
    path: /version
    method: GET
- name: session
  endpoint:
    path: /session
    method: GET
- name: session_jwt
  endpoint:
    path: /session/jwt
    method: GET
- name: forgotpassword
  endpoint:
    path: /forgotpassword
    method: POST
- name: specific_record_information
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: GET
    data_selector: response
    params: {}
- name: update_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: POST
    data_selector: response
    params: {}
- name: delete_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: DELETE
    data_selector: response
    params: {}
- name: get_all_records_by_name
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: GET
    data_selector: response
    params: {}
- name: delete_all_records_by_name
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: DELETE
    data_selector: response
    params: {}
- name: force_backend_sync
  endpoint:
    path: /domains/{domain}/sync
    method: GET
    data_selector: response
    params: {}
- name: schedule_domain_verification
  endpoint:
    path: /domains/{domain}/verify
    method: GET
    data_selector: response
    params: {}
- name: publish_records
  endpoint:
    path: /external/httpreq/present
    method: POST
    data_selector: response
    params: {}
- name: cleanup_records
  endpoint:
    path: /external/httpreq/cleanup
    method: POST
    data_selector: response
    params: {}
- name: get_domains_admin
  endpoint:
    path: /admin/domains
    method: GET
    data_selector: response
    params: {}
- name: create_domain
  endpoint:
    path: /admin/domains
    method: POST
    data_selector: response
    params: {}
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: response
    params: {}
- name: admin_articles
  endpoint:
    path: /admin/articles
    method: GET
    data_selector: response
    params: {}
- name: blockregexes
  endpoint:
    path: /admin/blockregexes
    method: GET
    data_selector: response
    params: {}
- name: system_datavalue
  endpoint:
    path: /system/datavalue/{datavalue}
    method: GET
    data_selector: response
    params: {}
- name: system_stats
  endpoint:
    path: /system/stats/{stat}
    method: GET
    data_selector: response
    params:
      type: raw
- name: forgot_password_confirm
  endpoint:
    path: /forgotpassword/confirm/{userid}
    method: POST
    data_selector: response
    params: {}
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: response
    params: {}
- name: register_confirm
  endpoint:
    path: /register/confirm/{userid}
    method: POST
    data_selector: response
    params: {}
- name: user_list
  endpoint:
    path: /users
    method: GET
    data_selector: response
    params: {}
- name: user_info
  endpoint:
    path: /users/{userid}
    method: GET
    data_selector: response
    params: {}
- name: user_update
  endpoint:
    path: /users/{userid}
    method: POST
    data_selector: response
    params: {}
- name: user_delete
  endpoint:
    path: /users/{userid}
    method: DELETE
    data_selector: response
    params: {}
- name: user_confirm_delete
  endpoint:
    path: /users/{userid}/confirm/{confirmcode}
    method: DELETE
    data_selector: response
    params: {}
- name: user_confirm_delete_2fa
  endpoint:
    path: /users/{userid}/confirm/{confirmcode}/{twofactorcode}
    method: DELETE
    data_selector: response
    params: {}
- name: user_create
  endpoint:
    path: /users/create
    method: POST
    data_selector: response
    params: {}
- name: user_resend_welcome
  endpoint:
    path: /users/{userid}/resendwelcome
    method: POST
    data_selector: response
    params: {}
- name: user_accept_terms
  endpoint:
    path: /users/{userid}/acceptterms
    method: POST
    data_selector: response
    params: {}
- name: user_api_keys
  endpoint:
    path: /users/{userid}/keys
    method: GET
    data_selector: response
    params: {}
- name: user_create_key
  endpoint:
    path: /users/{userid}/keys
    method: POST
    data_selector: response
    params: {}
- name: key_description_permissions
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: GET
    data_selector: response
- name: update_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: POST
    data_selector: response
- name: delete_key
  endpoint:
    path: /users/{userid}/keys/{keyid}
    method: DELETE
    data_selector: response
- name: get_2fa_keys
  endpoint:
    path: /users/{userid}/2fa
    method: GET
    data_selector: response
- name: create_2fa_key
  endpoint:
    path: /users/{userid}/2fa
    method: POST
    data_selector: response
- name: update_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}
    method: POST
    data_selector: response
- name: delete_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}
    method: DELETE
    data_selector: response
- name: verify_2fa_key
  endpoint:
    path: /users/{userid}/2fa/{keyid}/verify
    method: POST
    data_selector: response
- name: get_2fa_devices
  endpoint:
    path: /users/{userid}/2fadevices
    method: GET
    data_selector: response
- name: delete_2fa_device
  endpoint:
    path: /users/{userid}/2fadevices/{deviceid}
    method: DELETE
    data_selector: response
- name: get_user_custom_data
  endpoint:
    path: /users/{userid}/customdata
    method: GET
    data_selector: response
- name: get_custom_data_key_value
  endpoint:
    path: /users/{userid}/customdata/{key}
    method: GET
    data_selector: response
- name: update_custom_data
  endpoint:
    path: /users/{userid}/customdata/{key}
    method: POST
    data_selector: response
- name: delete_custom_data_key
  endpoint:
    path: /users/{userid}/customdata/{key}
    method: DELETE
    data_selector: response
- name: get_user_domain_statistics
  endpoint:
    path: /users/{userid}/stats/{stattype}
    method: GET
    data_selector: response
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: response
    params: {}
- name: specific_domain
  endpoint:
    path: /domains/{domain}
    method: GET
    data_selector: response
    params: {}
- name: domain_access
  endpoint:
    path: /domains/{domain}/access
    method: GET
    data_selector: response
    params: {}
- name: domain_keys
  endpoint:
    path: /domains/{domain}/keys
    method: GET
    data_selector: response
    params: {}
- name: domain_hooks
  endpoint:
    path: /domains/{domain}/hooks
    method: GET
    data_selector: response
    params: {}
- name: get_hook_details
  endpoint:
    path: /domains/{domain}/hooks/{hookid}
    method: GET
    data_selector: response
    params: {}
- name: update_hook
  endpoint:
    path: /domains/{domain}/hooks/{hookid}
    method: POST
    data_selector: response
    params: {}
- name: delete_hook
  endpoint:
    path: /domains/{domain}/hooks/{hookid}
    method: DELETE
    data_selector: response
    params: {}
- name: get_all_domain_records
  endpoint:
    path: /domains/{domain}/records
    method: GET
    data_selector: response.records
    params: {}
- name: update_domain_records
  endpoint:
    path: /domains/{domain}/records
    method: POST
    data_selector: response.changed
    params: {}
- name: delete_all_domain_records
  endpoint:
    path: /domains/{domain}/records
    method: DELETE
    data_selector: response
    params: {}
- name: get_raw_statistics
  endpoint:
    path: /domains/{domain}/stats{?type}
    method: GET
    data_selector: response.stats
    params: {}
- name: get_logs
  endpoint:
    path: /domains/{domain}/logs
    method: GET
    data_selector: response
    params: {}
- name: export_zone
  endpoint:
    path: /domains/{domain}/export/{type}
    method: GET
    data_selector: response.zone
    params: {}
- name: import_zone
  endpoint:
    path: /domains/{domain}/import/{type}
    method: POST
    data_selector: response.serial
    params: {}
- name: specific_record_info
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: GET
    data_selector: response
- name: update_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: POST
    data_selector: response
- name: delete_specific_record
  endpoint:
    path: /domains/{domain}/records/{recordid}
    method: DELETE
    data_selector: response
- name: get_all_records_by_name
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: GET
    data_selector: response.records
- name: delete_all_domain_records
  endpoint:
    path: /domains/{domain}/record/{rrname}/{rrtype}
    method: DELETE
    data_selector: response
- name: force_backend_sync
  endpoint:
    path: /domains/{domain}/sync
    method: GET
    data_selector: response
- name: schedule_domain_verification
  endpoint:
    path: /domains/{domain}/verify
    method: GET
    data_selector: response
- name: publish_acme_challenge
  endpoint:
    path: /external/httpreq/present
    method: POST
    data_selector: response
- name: cleanup_acme_challenge
  endpoint:
    path: /external/httpreq/cleanup
    method: POST
    data_selector: response
- name: get_domains
  endpoint:
    path: /admin/domains
    method: GET
    data_selector: response
- name: create_new_domain
  endpoint:
    path: /admin/domains
    method: POST
    data_selector: response
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: response
    params: {}
- name: admin_articles
  endpoint:
    path: /admin/articles
    method: GET
    data_selector: response
    params: {}
- name: blockregexes
  endpoint:
    path: /admin/blockregexes
    method: GET
    data_selector: response
    params: {}
- name: system_datavalue
  endpoint:
    path: /system/datavalue/{datavalue}
    method: GET
    data_selector: response
    params: {}
- name: system_stats
  endpoint:
    path: /system/stats/{stat}
    method: GET
    data_selector: response
    params: {}
notes:
- All endpoints require authentication.
- Requests to the API may be subject to rate limiting.
errors:
- '429: Rate limit exceeded'
- 'HTTP Error 429: Rate limit exceeded.'
- 'HTTP 429: Rate limit exceeded.'
- '429: Rate limit exceeded.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.mydnshost.co.uk/1.0
  auth:
    type: basic
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
