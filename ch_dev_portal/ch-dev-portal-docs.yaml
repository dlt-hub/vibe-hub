resources:
- name: attachments_status
  endpoint:
    path: /attachments/status
    method: GET
    data_selector: records
- name: attachments_submission
  endpoint:
    path: /attachments/submission
    method: POST
    data_selector: records
- name: claims_responses
  endpoint:
    path: /claims/responses
    method: GET
    data_selector: records
- name: claims
  endpoint:
    path: /claims
    method: GET
    data_selector: records
- name: Questionnaire
  endpoint:
    path: /fhir/Questionnaire
    method: GET
- name: QuestionnaireResponse
  endpoint:
    path: /fhir/QuestionnaireResponse
    method: POST
- name: eligibility_requests
  endpoint:
    path: /eligibilityrequests
    method: POST
- name: eligibility_transactions
  endpoint:
    path: /eligibilitytransactions
    method: GET
- name: coverage_discovery
  endpoint:
    path: /coveragediscovery
    method: POST
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: Questionnaire
  endpoint:
    path: /Questionnaire
    method: GET
- name: QuestionnaireResponse
  endpoint:
    path: /QuestionnaireResponse
    method: POST
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-eligibility
    method: POST
- name: PayerList
  endpoint:
    path: /eligibilityandclaims/reference/payerlist
    method: GET
- name: Professional Claims
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim
    method: POST
- name: Institutional Claims
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim-1
    method: POST
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: attachments_submission
  endpoint:
    path: /attachments/submissions
    method: POST
- name: attachments_status
  endpoint:
    path: /attachments/status
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/eligibility
    method: POST
    data_selector: eligibilityRecords
- name: Claim Status
  endpoint:
    path: /eligibilityandclaims/reference/claimstatus
    method: POST
    data_selector: claimStatusRecords
- name: health_check
  endpoint:
    path: /medicalnetwork/eligibility/v3/healthcheck
    method: GET
    data_selector: response
    params: {}
- name: eligibility
  endpoint:
    path: /medicalnetwork/eligibility/v3/
    method: POST
- name: check_eligibility
  endpoint:
    path: /medicalnetwork/eligibility/v3/raw-x12
    method: POST
    data_selector: x12
- name: Professional Claims
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim
    method: POST
    data_selector: claims
    params: {}
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Claim Validation
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim
    method: POST
- name: Eligibility Requests
  endpoint:
    path: /eligibilityandclaims/reference/posteligibility-1
    method: POST
- name: health_check
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/healthcheck
    method: GET
    data_selector: response
    params: {}
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/eligibility
    method: POST
    data_selector: records
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
    data_selector: records
- name: claim_validation
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/validation
    method: POST
- name: Health Check
  endpoint:
    path: /medicalnetwork/eligibility/v3/healthcheck
    method: GET
    data_selector: ''
- name: submission
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/submission
    method: POST
- name: Check Eligibility
  endpoint:
    path: /
    method: POST
- name: Claim Submission
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/raw-x12-submission
    method: POST
- name: check_eligibility
  endpoint:
    path: /medicalnetwork/eligibility/v3/raw-x12
    method: POST
    data_selector: x12
- name: Claim Validation
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/raw-x12-validation
    method: POST
    data_selector: response
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: Claim Status
  endpoint:
    path: /eligibilityandclaims/reference/claimstatus
    method: POST
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: institutional_claims_validation
  endpoint:
    path: /institutionalclaims/v1/validation
    method: POST
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
    data_selector: records
- name: Check Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
    data_selector: records
- name: Claim Validation
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim
    method: POST
    data_selector: records
- name: Claim Submission
  endpoint:
    path: /eligibilityandclaims/reference/processclaim
    method: POST
    data_selector: records
- name: health_check
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/healthcheck
    method: GET
- name: institutional_claim_validation
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/validation
    method: POST
    data_selector: response
- name: health_check
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/healthcheck
    method: GET
- name: claim_validation
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/validation
    method: POST
- name: raw_x12_submission
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/raw-x12-submission
    method: POST
- name: Claim Submission
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/raw-x12-submission
    method: POST
- name: claim_validation_x12
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/raw-x12-validation
    method: POST
- name: Claim Validation
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/raw-x12-validation
    method: POST
- name: Health Check
  endpoint:
    path: /healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /medicaleligibility
    method: POST
- name: Claim Validation
  endpoint:
    path: /validateclaim
    method: POST
- name: Claim Submission
  endpoint:
    path: /processclaim
    method: POST
- name: Attachment Submission
  endpoint:
    path: /upload
    method: POST
- name: Claim Responses and Reports
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-claim-responses-and-reports-v2-overview
    method: GET
    data_selector: records
- name: institutional_claims_validation
  endpoint:
    path: /institutionalclaims/v1/validation
    method: post
- name: health_check
  endpoint:
    path: /medicalnetwork/reports/v2/healthcheck
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/healthcheck
    method: GET
- name: list_reports
  endpoint:
    path: /medicalnetwork/reports/v2/
    method: GET
- name: institutional_claim_validation
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/validation
    method: POST
- name: report
  endpoint:
    path: /medicalnetwork/reports/v2/{filename}
    method: GET
    data_selector: ''
- name: Claim Submission x12
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/raw-x12-submission
    method: POST
- name: convert_report_277
  endpoint:
    path: /medicalnetwork/reports/v2/{filename}/277
    method: GET
    data_selector: response
- name: Claim Validation
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/raw-x12-validation
    method: POST
- name: convert_report_835
  endpoint:
    path: /medicalnetwork/reports/v2/{filename}/835
    method: GET
    data_selector: ''
- name: Health Check
  endpoint:
    path: /healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /medicaleligibility
    method: POST
- name: Claim Validation
  endpoint:
    path: /validateclaim
    method: POST
- name: Claim Submission
  endpoint:
    path: /processclaim
    method: POST
- name: health_check
  endpoint:
    path: /medicalnetwork/reports/v2/healthcheck
    method: GET
- name: Claim Status
  endpoint:
    path: /eligibilityandclaims/reference/claimstatus
    method: POST
    data_selector: status
    params: {}
- name: list_reports
  endpoint:
    path: /medicalnetwork/reports/v2/
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/claimstatus/v2/healthcheck
    method: GET
    data_selector: ''
- name: report
  endpoint:
    path: /medicalnetwork/reports/v2/{filename}
    method: GET
- name: claim_status
  endpoint:
    path: /v1/claimStatus/raw-x12/enhanced
    method: POST
- name: delete_single_report
  endpoint:
    path: /medicalnetwork/reports/v2/{filename}
    method: DELETE
- name: claim_status
  endpoint:
    path: /medicalnetwork/claimstatus/v2/
    method: POST
- name: convert_report_277
  endpoint:
    path: /medicalnetwork/reports/v2/{filename}/277
    method: GET
    data_selector: ''
- name: claim_status
  endpoint:
    path: /medicalnetwork/claimstatus/v2/raw-x12
    method: POST
- name: convert_report_835
  endpoint:
    path: /medicalnetwork/reports/v2/{filename}/835
    method: GET
    data_selector: response
    params: {}
- name: health_check
  endpoint:
    path: /medicalnetwork/attachments/submission/v1/healthcheck
    method: GET
- name: attachment_submission
  endpoint:
    path: /medicalnetwork/attachments/submission/v1/uploads
    method: POST
    data_selector: records
- name: Medical Network Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-eligibility-v3-overview
    method: GET
- name: Medical Network Professional Claims
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-professional-claims-v3-overview
    method: GET
- name: Medical Network Institutional Claims
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-institutional-claims-v1-overview
    method: GET
- name: Medical Network Claims Responses And Reports
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-claim-responses-and-reports-v2-overview
    method: GET
- name: Medical Network Claim Status
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-claims-status-v2-overview-1
    method: GET
- name: Medical Network Attachments Submission
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-attachment-submission-v1-overview
    method: GET
- name: Medical Network Attachment Status
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-attachments-status-v1-overview
    method: GET
- name: Medical Network Attachment Retrieval
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-attachments-retrieval-v1-overview
    method: GET
- name: Enhanced Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/enhanced-eligibility-v1-overview
    method: GET
- name: Medical Network Payer List
  endpoint:
    path: /eligibilityandclaims/reference/payerlist-overview
    method: GET
- name: Prior Authorization
  endpoint:
    path: /eligibilityandclaims/reference/prior-auth-overview
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: Claim Validation
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim
    method: POST
- name: Claim Submission
  endpoint:
    path: /eligibilityandclaims/reference/processclaim
    method: POST
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: claim_status
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-claims-status-v2-overview-1
    method: GET
- name: attachment_status
  endpoint:
    path: /eligibilityandclaims/reference/get_traceid
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/claimstatus/v2/healthcheck
    method: GET
    data_selector: response
- name: health_check
  endpoint:
    path: /medicalnetwork/attachments/status/v1/healthcheck
    method: GET
- name: claim_status
  endpoint:
    path: /v1/claimStatus/raw-x12/enhanced
    method: POST
- name: attachment_status
  endpoint:
    path: /medicalnetwork/attachments/status/v1/{traceId}
    method: GET
    data_selector: status
- name: claim_status
  endpoint:
    path: /medicalnetwork/claimstatus/v2/
    method: POST
    data_selector: response
- name: attachment_status
  endpoint:
    path: /medicalnetwork/attachments/status/v1/metadata
    method: POST
    data_selector: status
- name: claim_status
  endpoint:
    path: /medicalnetwork/claimstatus/v2/raw-x12
    method: POST
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Check Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: attachment_status
  endpoint:
    path: /eligibilityandclaims/reference/attachment-status
    method: GET
- name: attachment_submission
  endpoint:
    path: /eligibilityandclaims/reference/upload
    method: POST
    data_selector: attachments
    params: {}
- name: health_check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
    data_selector: status
    params: {}
- name: health_check
  endpoint:
    path: /medicalnetwork/attachments/retrieval/v1/healthcheck
    method: GET
- name: search
  endpoint:
    path: /medicalnetwork/attachments/retrieval/v1/search
    method: POST
- name: attachment_submission
  endpoint:
    path: /medicalnetwork/attachments/submission/v1/uploads
    method: POST
- name: attachment_retrieval
  endpoint:
    path: /medicalnetwork/attachments/retrieval/v1/{documentId}
    method: GET
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Check Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: Claim Validation
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim
    method: POST
- name: Claim Submission
  endpoint:
    path: /eligibilityandclaims/reference/processclaim
    method: POST
- name: Health Check
  endpoint:
    path: /healthcheck
    method: GET
- name: Check Eligibility
  endpoint:
    path: /medicaleligibility
    method: POST
- name: health_check
  endpoint:
    path: /medicalnetwork/attachments/status/v1/healthcheck
    method: GET
    data_selector: response
- name: health_check
  endpoint:
    path: /v1/healthcheck
    method: GET
- name: attachment_status
  endpoint:
    path: /medicalnetwork/attachments/status/v1/{traceId}
    method: GET
    data_selector: status
- name: Create Attachments Container
  endpoint:
    path: /dentalnetwork/attachments/v1/CreateAttachment
    method: POST
- name: attachment_status
  endpoint:
    path: /medicalnetwork/attachments/status/v1/metadata
    method: POST
    data_selector: status
- name: add_attachment
  endpoint:
    path: /dentalnetwork/attachments/v1/AddAttachment
    method: POST
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: Update Attachments to Container
  endpoint:
    path: /dentalnetwork/attachments/v1/{attachmentId}/UpdateAttachmentFile/{attachmentFileId}
    method: PUT
- name: attachment_status
  endpoint:
    path: /eligibilityandclaims/reference/attachment-status
    method: GET
    data_selector: records
- name: attachment_document
  endpoint:
    path: /eligibilityandclaims/reference/post_search
    method: POST
    data_selector: records
- name: commit_attachment
  endpoint:
    path: /dentalnetwork/attachments/v1/CommitAttachment/{attachmentId}
    method: PATCH
- name: attachment
  endpoint:
    path: /dentalnetwork/attachments/v1/GetAttachmentbyId/{attachmentId}
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/attachments/retrieval/v1/healthcheck
    method: GET
    data_selector: ''
- name: Get Attachments Files from Container
  endpoint:
    path: /dentalnetwork/attachments/v1/GetAttachmentList/{AttachmentId}
    method: GET
- name: attachment_retrieval
  endpoint:
    path: /medicalnetwork/attachments/retrieval/v1/search
    method: POST
    data_selector: document_ids
    params:
      testMode: 'false'
- name: delete_attachment_file
  endpoint:
    path: /dentalnetwork/attachments/v1/{attachmentId}/DeleteAttachmentFile/{attachmentFileId}
    method: DELETE
- name: attachment_retrieval
  endpoint:
    path: /medicalnetwork/attachments/retrieval/v1/{documentId}
    method: GET
- name: participating_payers
  endpoint:
    path: /dentalnetwork/attachments/v1/GetAllParticipatingPayers
    method: GET
- name: Health Check
  endpoint:
    path: /eligibilityandclaims/reference/healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/reference/medicaleligibility
    method: POST
- name: Claim Validation
  endpoint:
    path: /eligibilityandclaims/reference/validateclaim
    method: POST
- name: participating_payer
  endpoint:
    path: /dentalnetwork/attachments/v1/IsParticipatingPayer
    method: GET
    params:
      payerid: string
- name: IsParticipatingPayer
  endpoint:
    path: /dentalnetwork/attachments/v1/IsParticipatingPayer
    method: GET
- name: GetParticipatingPayers
  endpoint:
    path: /dentalnetwork/attachments/v1/getallparticipatingpayers
    method: GET
- name: health_check
  endpoint:
    path: /v1/healthcheck
    method: GET
    data_selector: status
- name: attachment_submission
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: Get Payer Business Rules
  endpoint:
    path: /dentalnetwork/attachments/v1/GetPayerBusinessRules/me
    method: GET
- name: submit_eligibility_request
  endpoint:
    path: /
    method: POST
- name: Attachment Submission
  endpoint:
    path: /eligibilityandclaims/reference/upload
    method: POST
- name: Attachment Status
  endpoint:
    path: /eligibilityandclaims/reference/get_traceid
    method: GET
- name: Attachment Document
  endpoint:
    path: /eligibilityandclaims/reference/post_search
    method: POST
- name: eligibility_transactions
  endpoint:
    path: /rcm/eligibility/v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: Create Attachments Container
  endpoint:
    path: /dentalnetwork/attachments/v1/CreateAttachment
    method: POST
- name: eligibility_transaction
  endpoint:
    path: /rcm/eligibility/v1/transactions/{id}
    method: GET
- name: Add Attachment
  endpoint:
    path: /dentalnetwork/attachments/v1/AddAttachment
    method: POST
- name: coverage_discovery
  endpoint:
    path: /coverage-discovery
    method: POST
- name: Update Attachment File
  endpoint:
    path: /dentalnetwork/attachments/v1/{attachmentId}/UpdateAttachmentFile/{attachmentFileId}
    method: PUT
- name: coverage_discovery
  endpoint:
    path: /rcm/eligibility/v1/coverage-discovery/x12
    method: POST
- name: discovery_tasks
  endpoint:
    path: /rcm/eligibility/v1/coverage-discovery
    method: GET
    data_selector: tasks
    params: {}
- name: Commit Attachment
  endpoint:
    path: /dentalnetwork/attachments/v1/CommitAttachment/{attachmentId}
    method: PATCH
- name: discovery_task
  endpoint:
    path: /rcm/eligibility/v1/coverage-discovery/{id}
    method: GET
    data_selector: response
- name: attachments_container
  endpoint:
    path: /dentalnetwork/attachments/v1/GetAttachmentbyId/{attachmentId}
    method: GET
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: attachment_files
  endpoint:
    path: /dentalnetwork/attachments/v1/GetAttachmentList/{AttachmentId}
    method: GET
- name: delete_attachment_file
  endpoint:
    path: /dentalnetwork/attachments/v1/{attachmentId}/DeleteAttachmentFile/{attachmentFileId}
    method: DELETE
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: payers
  endpoint:
    path: /payers
    method: GET
- name: export
  endpoint:
    path: /export
    method: GET
- name: fields
  endpoint:
    path: /fields
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/payerlist/v1/healthcheck
    method: GET
- name: participating_payers
  endpoint:
    path: /dentalnetwork/attachments/v1/GetAllParticipatingPayers
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/payerlist/v1/healthcheck
    method: GET
    data_selector: ''
- name: Check Participating Payer by Payer ID
  endpoint:
    path: /dentalnetwork/attachments/v1/IsParticipatingPayer
    method: GET
    data_selector: responses
- name: payers
  endpoint:
    path: /medicalnetwork/payerlist/v1/payers
    method: GET
    params:
      system: EXCH
- name: payer_list
  endpoint:
    path: /medicalnetwork/payerlist/v1/payers/export
    method: GET
    params:
      system: EXCH
- name: Get Payer Business Rules
  endpoint:
    path: /dentalnetwork/attachments/v1/GetPayerBusinessRules/me
    method: GET
- name: submit_eligibility_request
  endpoint:
    path: /
    method: POST
- name: Get Fields
  endpoint:
    path: /medicalnetwork/payerlist/v1/fields
    method: GET
    data_selector: fields
- name: eligibility_transactions
  endpoint:
    path: /rcm/eligibility/v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: Get Token
  endpoint:
    path: /apip/auth/v2/token
    method: POST
- name: eligibility_transaction
  endpoint:
    path: /transactions/{id}
    method: GET
    data_selector: transaction
- name: Service Heartbeat
  endpoint:
    path: /rcm/prior-authorization/v1/healthcheck
    method: GET
- name: inquiry
  endpoint:
    path: /rcm/prior-authorization/v1/inquiry/x12
    method: POST
- name: coverage_discovery
  endpoint:
    path: /coverage-discovery
    method: POST
- name: inquiry
  endpoint:
    path: /rcm/prior-authorization/v1/inquiry
    method: POST
- name: coverage_discovery
  endpoint:
    path: /rcm/eligibility/v1/coverage-discovery/x12
    method: POST
- name: prior_authorization_submission
  endpoint:
    path: /rcm/prior-authorization/v1/submission/x12
    method: POST
- name: discovery_tasks
  endpoint:
    path: /rcm/eligibility/v1/coverage-discovery
    method: GET
    data_selector: records
    params: {}
- name: prior_authorization_submission
  endpoint:
    path: /rcm/prior-authorization/v1/submission
    method: POST
- name: discovery_task
  endpoint:
    path: /coverage-discovery/{id}
    method: GET
    data_selector: response
- name: eligibility_request
  endpoint:
    path: /rcm/eligibility/v1
    method: POST
- name: eligibility_transactions
  endpoint:
    path: /rcm/eligibility/v1/transactions
    method: GET
- name: coverage_discovery
  endpoint:
    path: /rcm/eligibility/v1/coverage-discovery
    method: POST
- name: health_check
  endpoint:
    path: /healthcheck
    method: GET
- name: health_check
  endpoint:
    path: /healthcheck
    method: GET
- name: payers
  endpoint:
    path: /payers
    method: GET
- name: fields
  endpoint:
    path: /fields
    method: GET
- name: export
  endpoint:
    path: /export
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/payerlist/v1/healthcheck
    method: GET
- name: health_check
  endpoint:
    path: /medicalnetwork/payerlist/v1/healthcheck
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payers
  endpoint:
    path: /medicalnetwork/payerlist/v1/payers
    method: GET
    params:
      system: EXCH
- name: payer_list
  endpoint:
    path: /medicalnetwork/payerlist/v1/payers/export
    method: GET
    params:
      system: EXCH
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: fields
  endpoint:
    path: /medicalnetwork/payerlist/v1/fields
    method: GET
    data_selector: fields
- name: coverage_discovery_task
  endpoint:
    path: /coverage-discovery
    method: GET
    data_selector: value
- name: health_check
  endpoint:
    path: /rcm/prior-authorization/v1/healthcheck
    method: GET
- name: prior_authorization_inquiry
  endpoint:
    path: /rcm/prior-authorization/v1/inquiry/x12
    method: POST
- name: Inquiry
  endpoint:
    path: /rcm/prior-authorization/v1/inquiry
    method: POST
- name: prior_authorization_submission
  endpoint:
    path: /rcm/prior-authorization/v1/submission/x12
    method: POST
- name: json_prior_authorization_submission
  endpoint:
    path: /rcm/prior-authorization/v1/submission
    method: POST
- name: eligibility_request
  endpoint:
    path: /rcm/eligibility/v1
    method: POST
    data_selector: responses
    params: {}
- name: eligibility_transactions
  endpoint:
    path: /rcm/eligibility/v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: coverage_discovery
  endpoint:
    path: /rcm/eligibility/v1/coverage-discovery
    method: POST
    data_selector: responses
    params: {}
- name: healthcheck
  endpoint:
    path: /rcm/eligibility/v1/healthcheck
    method: GET
    data_selector: status
    params: {}
- name: pre_service_member
  endpoint:
    path: /oihub/eligibility/v1/pre-service/member
    method: POST
- name: health_check
  endpoint:
    path: /oihub/eligibility/v1/healthcheck
    method: GET
- name: DiscoveryDryRunResponse
  endpoint:
    path: /DiscoveryDryRun
    method: GET
    data_selector: content.application/json.schema
- name: DiscoveryResponse
  endpoint:
    path: /Discovery
    method: GET
    data_selector: content.application/json.schema
- name: HealthcheckHealthyResponse
  endpoint:
    path: /Healthcheck
    method: GET
    data_selector: content.application/json.schema
- name: HealthcheckUnhealthyResponse
  endpoint:
    path: /Healthcheck
    method: GET
    data_selector: content.application/json.schema
- name: claim_precheck
  endpoint:
    path: /oihub/pre-service/v1/claim/precheck
    method: POST
- name: health_check
  endpoint:
    path: /healthcheck
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: CoverageDiscoveryTask
  endpoint:
    path: /coverage-discovery
    method: GET
    data_selector: records
- name: claim_inquiry
  endpoint:
    path: /oihub/claim/inquiry/v1
    method: POST
- name: health_check
  endpoint:
    path: /oihub/claim/inquiry/v1/healthcheck
    method: GET
- name: chained_discover_task
  endpoint:
    path: /coverage-discovery/chained
    method: GET
    data_selector: value
    params: {}
- name: serial_discover_task
  endpoint:
    path: /coverage-discovery/serial
    method: GET
    data_selector: value
    params: {}
- name: enrollment_status
  endpoint:
    path: /payments/pes-payer-enrollments/v1/enrollment-status
    method: GET
- name: payer_enrollments
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: GET
- name: Payer Enrollment Status
  endpoint:
    path: /payments/pes-payer-enrollments/v1/enrollment-status
    method: GET
    data_selector: ''
- name: pes_payer_enrollments
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: GET
    data_selector: enrollments
- name: payer_enrollment_status
  endpoint:
    path: /payments/pes-payer-enrollments/v1/enrollment-status
    method: GET
- name: payer_enrollments
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: GET
- name: patch_payer_enrollment
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: PATCH
- name: file_status
  endpoint:
    path: /getFileStatus/{contextID}/{fileName}
    method: GET
- name: document_status
  endpoint:
    path: /getDocumentStatus/{contextID}/{fileName}/{claimNumber}/{claimType}/{recipientType}
    method: GET
- name: doc_counts
  endpoint:
    path: /getDocCounts/{contextID}
    method: GET
- name: list_of_file_status
  endpoint:
    path: /getListOfFileStatus/{contextID}
    method: GET
- name: list_of_doc_status
  endpoint:
    path: /getListofDocStatus/{contextID}/{recipientType}
    method: GET
- name: file_status
  endpoint:
    path: /getListOfFileStatus/{contextID}
    method: GET
- name: getDocCounts
  endpoint:
    path: /getDocCounts/{contextID}
    method: GET
- name: document_status
  endpoint:
    path: /getDocumentStatus/{contextID}/{fileName}/{claimNumber}/{claimType}/{recipientType}
    method: GET
- name: enrollment_status
  endpoint:
    path: /getListofDocStatus/{contextID}/{recipientType}
    method: GET
- name: getFileStatus
  endpoint:
    path: /getFileStatus/{contextID}/{fileName}
    method: GET
- name: pre_service_member
  endpoint:
    path: /oihub/eligibility/v1/pre-service/member
    method: POST
- name: health_check
  endpoint:
    path: /oihub/eligibility/v1/healthcheck
    method: GET
- name: health_check
  endpoint:
    path: /healthcheck
    method: GET
- name: claim_inquiry
  endpoint:
    path: /oihub/claim/inquiry/v1
    method: POST
- name: check_job
  endpoint:
    path: /prometheus/checkjob/v1
    method: POST
- name: health_check
  endpoint:
    path: /oihub/claim/inquiry/v1/healthcheck
    method: GET
- name: job_submission
  endpoint:
    path: /prometheus/jobsubmission/v1
    method: POST
- name: enrollment_status
  endpoint:
    path: /payments/pes-payer-enrollments/v1/enrollment-status
    method: GET
- name: payer_enrollments
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: GET
- name: DecisionSupportRecord
  endpoint:
    path: /abm/dsrservice/v1
    method: POST
    data_selector: access_token
    params: {}
- name: DecisionSupportRecordSearch
  endpoint:
    path: /abm/dsrservicesearch/v1
    method: GET
    data_selector: records
    params: {}
- name: DecisionSupportRecordHealthCheck
  endpoint:
    path: /abm/dsrservicehc/v1
    method: GET
    data_selector: health
    params: {}
- name: PES Payer Enrollment Status
  endpoint:
    path: /payments/pes-payer-enrollments/v1/enrollment-status
    method: GET
- name: decision_support_record
  endpoint:
    path: /abm/dsrservice/v1
    method: POST
- name: pes_payer_enrollments
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: GET
- name: decision_support_record
  endpoint:
    path: /abm/dsrservicesearch/v1/{decisionSupportNumber}
    method: GET
    data_selector: records
    params: {}
- name: delete_decision_support_record
  endpoint:
    path: /abm/dsrservicesearch/v1/{decisionSupportNumber}
    method: DELETE
- name: enrollment_status
  endpoint:
    path: /payments/pes-payer-enrollments/v1/enrollment-status
    method: GET
- name: payer_enrollments
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: GET
- name: patch_payer_enrollment
  endpoint:
    path: /payments/pes-payer-enrollments/v1
    method: PATCH
- name: HealthCheck
  endpoint:
    path: /abm/dsrservicehc/v1
    method: GET
- name: decision_support_record
  endpoint:
    path: /abm/dsrservicesearch/v1/
    method: GET
    data_selector: records
    params: {}
- name: getListOfFileStatus
  endpoint:
    path: /getListOfFileStatus/{contextID}
    method: GET
- name: getDocCounts
  endpoint:
    path: /getDocCounts/{contextID}
    method: GET
- name: getDocumentStatus
  endpoint:
    path: /getDocumentStatus/{contextID}/{fileName}/{claimNumber}/{claimType}/{recipientType}
    method: GET
- name: getListofDocStatus
  endpoint:
    path: /getListofDocStatus/{contextID}/{recipientType}
    method: GET
- name: getFileStatus
  endpoint:
    path: /getFileStatus/{contextID}/{fileName}
    method: GET
- name: file_status
  endpoint:
    path: /getListOfFileStatus/{contextID}
    method: GET
- name: PrePay DME
  endpoint:
    path: /abm/prepaydme/v1
    method: POST
- name: getDocCounts
  endpoint:
    path: /getDocCounts/{contextID}
    method: GET
- name: Prepaylab
  endpoint:
    path: /abm/prepaylab/v1
    method: POST
- name: Prior Auth
  endpoint:
    path: /abm/priorauth/v1
    method: POST
- name: getDocumentStatus
  endpoint:
    path: /getDocumentStatus/{contextID}/{fileName}/{claimNumber}/{claimType}/{recipientType}
    method: GET
- name: getListOfFileStatus
  endpoint:
    path: /getListOfFileStatus/{contextID}
    method: GET
- name: getDocCounts
  endpoint:
    path: /getDocCounts/{contextID}
    method: GET
- name: getListofDocStatus
  endpoint:
    path: /getListofDocStatus/{contextID}/{recipientType}
    method: GET
- name: getFileStatus
  endpoint:
    path: /getFileStatus/{contextID}/{fileName}
    method: GET
- name: Prior Auth
  endpoint:
    path: /abm/priorauth/v1
    method: POST
- name: ListOfDocStatus
  endpoint:
    path: /getListofDocStatus/{contextID}/{recipientType}
    method: GET
- name: FileStatus
  endpoint:
    path: /getFileStatus/{contextID}/{fileName}
    method: GET
- name: DocCounts
  endpoint:
    path: /getDocCounts/{contextID}
    method: GET
- name: DocumentStatus
  endpoint:
    path: /getDocumentStatus/{contextID}/{fileName}/{claimNumber}/{claimType}/{recipientType}
    method: GET
- name: ListOfFileStatus
  endpoint:
    path: /getListOfFileStatus/{contextID}
    method: GET
- name: attachments_submission
  endpoint:
    path: /eligibilityandclaims/docs/attachment-submissions-v1-getting-started
    method: POST
    data_selector: transaction
    params: {}
- name: attachments_status
  endpoint:
    path: /eligibilityandclaims/docs/attachment-status-v1-getting-started
    method: GET
    data_selector: status
    params: {}
- name: Decision Support Record
  endpoint:
    path: /abm/dsrservice/v1
    method: POST
    data_selector: access_token
- name: Decision Support Record Search
  endpoint:
    path: /abm/dsrservicesearch/v1
    method: GET
    data_selector: access_token
- name: Health Check
  endpoint:
    path: /abm/dsrservicehc/v1
    method: GET
    data_selector: access_token
- name: decision_support_record
  endpoint:
    path: /abm/dsrservice/v1
    method: POST
- name: decision_support_record
  endpoint:
    path: /abm/dsrservicesearch/v1/{decisionSupportNumber}
    method: GET
    data_selector: ''
    params: {}
- name: delete_decision_support_record
  endpoint:
    path: /abm/dsrservicesearch/v1/{decisionSupportNumber}
    method: DELETE
- name: HealthCheck
  endpoint:
    path: /abm/dsrservicehc/v1
    method: GET
- name: decision_support_records
  endpoint:
    path: /abm/dsrservicesearch/v1/
    method: GET
    data_selector: records
- name: PrepayDME
  endpoint:
    path: /abm/prepaydme/v1
    method: POST
    data_selector: response
- name: Prepaylab
  endpoint:
    path: /abm/prepaylab/v1
    method: POST
- name: Prior Auth
  endpoint:
    path: /abm/priorauth/v1
    method: POST
- name: Prior Auth
  endpoint:
    path: /abm/priorauth/v1
    method: POST
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: eligibility
  endpoint:
    path: /eligibility/v3
    method: GET
- name: payerlist
  endpoint:
    path: /payerlist/v1/payers
    method: GET
- name: professional_claims_validation
  endpoint:
    path: /professionalclaims/v3/validation
    method: GET
- name: institutional_claims_validation
  endpoint:
    path: /institutionalclaims/v1/validation
    method: GET
- name: claim_status
  endpoint:
    path: /claimstatus/v2/
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibility
    method: GET
- name: Claims
  endpoint:
    path: /claims
    method: GET
- name: Claim Status
  endpoint:
    path: /claim-status
    method: GET
- name: healthcheck
  endpoint:
    path: /medicalnetwork/eligibility/v3/healthcheck
    method: GET
- name: attachments_submission
  endpoint:
    path: /attachments/submission/v1/uploads
    method: POST
- name: attachments_status
  endpoint:
    path: /attachments/status/v1/{traceId}
    method: GET
- name: metadata
  endpoint:
    path: /attachments/status/v1/metadata
    method: GET
- name: Healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibility/v3
    method: GET
- name: PayerList
  endpoint:
    path: /payerlist/v1/payers
    method: GET
- name: Professional Claims Validation
  endpoint:
    path: /professionalclaims/v3/validation
    method: GET
- name: Institutional Claims Validation
  endpoint:
    path: /institutionalclaims/v1/validation
    method: GET
- name: Claim Status
  endpoint:
    path: /claimstatus/v2/
    method: GET
- name: attachments_submission
  endpoint:
    path: /attachments/submission
    method: POST
    data_selector: status
    params: {}
- name: attachments_status
  endpoint:
    path: /attachments/status
    method: GET
    data_selector: status
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params: {}
- name: attachments_submission
  endpoint:
    path: /attachments/submission/v1/uploads
    method: POST
    data_selector: response
    params: {}
- name: attachments_status
  endpoint:
    path: /attachments/status/v1/{traceId}
    method: GET
    data_selector: status
    params: {}
- name: metadata_search
  endpoint:
    path: /attachments/status/v1/metadata
    method: GET
    data_selector: transactions
    params: {}
- name: Track Information for Sent Transactions
  endpoint:
    path: /eligibilityandclaims/docs/tracking-information-for-sent-transactions
    method: GET
- name: successful_attachments_transaction
  endpoint:
    path: /attachments/success
    method: GET
    data_selector: documents
    params: {}
- name: transaction_status
  endpoint:
    path: /attachments/status
    method: GET
    data_selector: status
    params: {}
- name: attachments_submission
  endpoint:
    path: /eligibilityandclaims/docs/attachment-submissions-v1-getting-started
    method: GET
    data_selector: statusCode
    params: {}
- name: attachments_transaction
  endpoint:
    path: /eligibilityandclaims/docs/rejection-of-attachment-transaction-by-change-healthcare-clearinghouse
    method: GET
- name: metadata_search
  endpoint:
    path: /medicalnetwork/attachments/status/v1/transactionStatus/metadata
    method: POST
    data_selector: transactionDetails
- name: attachments_workflow
  endpoint:
    path: /attachments/workflow
    method: GET
- name: claims_api_best_practices
  endpoint:
    path: /claims/best-practices
    method: GET
- name: Eligibility
  endpoint:
    path: /eligibilityandclaims/docs/eligibility-api
    method: GET
- name: Claims
  endpoint:
    path: /eligibilityandclaims/docs/claims-api
    method: GET
- name: Attachments
  endpoint:
    path: /eligibilityandclaims/docs/attachments-api
    method: GET
- name: metadata_search
  endpoint:
    path: /transactionStatus/metadata
    method: POST
    data_selector: transactionDetails
- name: metadata_search
  endpoint:
    path: /medicalnetwork/attachments/status/v1/metadata
    method: POST
    data_selector: transactionDetails
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
    data_selector: status
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: data
    params:
      payer_field: mandatory
- name: attachments_retrieval
  endpoint:
    path: /attachments/retrieval/v1/search
    method: GET
- name: attachments_submission
  endpoint:
    path: /attachments/submission
    method: POST
    data_selector: results
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: data
    params: {}
- name: Eligibility
  endpoint:
    path: /
    method: POST
    data_selector: controlNumber
    params: {}
- name: Eligibility V3
  endpoint:
    path: /eligibilityandclaims/docs/eligibility-v3
    method: GET
- name: Professional Claims V3
  endpoint:
    path: /eligibilityandclaims/docs/professional-claims-v3
    method: GET
- name: Institutional Claims V1
  endpoint:
    path: /eligibilityandclaims/docs/institutional-claims-v1
    method: GET
- name: Claim Status V2
  endpoint:
    path: /eligibilityandclaims/docs/claim-status-v2
    method: GET
- name: Attachments Retrieval V1
  endpoint:
    path: /eligibilityandclaims/docs/attachment-retrieval-v1
    method: GET
- name: eligibility_response
  endpoint:
    path: /eligibility
    method: POST
    data_selector: eligibilityResponse
    params: {}
- name: subscriber_trace_number
  endpoint:
    path: /eligibilityandclaims/docs/eligibility-json-to-edi-api-contents#receiver_2000C/D_trace
    method: GET
    data_selector: records
    params: {}
- name: provider
  endpoint:
    path: /eligibilityandclaims/docs/eligibility-json-to-edi-api-contents#2100B_loop
    method: GET
    data_selector: records
    params: {}
- name: subscriber
  endpoint:
    path: /eligibilityandclaims/docs/eligibility-json-to-edi-api-contents#2100C_loop
    method: GET
    data_selector: records
    params: {}
- name: dependent
  endpoint:
    path: /eligibilityandclaims/docs/eligibility-json-to-edi-api-contents#2100D_loop
    method: GET
    data_selector: records
    params: {}
- name: encounter
  endpoint:
    path: /eligibilityandclaims/docs/eligibility-json-to-edi-api-contents#2110C/D_loop
    method: GET
    data_selector: records
    params: {}
- name: attachments_submission
  endpoint:
    path: /eligibilityandclaims/attachments/submission
    method: POST
- name: attachments_status
  endpoint:
    path: /eligibilityandclaims/attachments/status
    method: GET
- name: dependent
  endpoint:
    path: /eligibility/dependents
    method: GET
    data_selector: dependents
    params: {}
- name: encounter
  endpoint:
    path: /eligibility/encounter
    method: GET
    data_selector: encounter
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: GET
    data_selector: subscriber
- name: dependent
  endpoint:
    path: /dependent
    method: GET
    data_selector: dependents
- name: planInformation
  endpoint:
    path: /planInformation
    method: GET
    data_selector: planInformation
- name: planDateInformation
  endpoint:
    path: /planDateInformation
    method: GET
    data_selector: planDateInformation
- name: planStatus
  endpoint:
    path: /planStatus
    method: GET
    data_selector: planStatus
- name: benefitsDateInformation
  endpoint:
    path: /eligibility/benefitsDateInformation
    method: GET
    data_selector: benefitsDateInformation
    params: {}
- name: benefitsInformation
  endpoint:
    path: /eligibility/benefitsInformation
    method: GET
    data_selector: benefitsInformation
    params: {}
- name: additionalBenefitInformation
  endpoint:
    path: /eligibility/additionalBenefitInformation
    method: GET
    data_selector: benefitsAdditionalInformation
    params: {}
- name: benefitsRelatedEntity
  endpoint:
    path: /eligibility/benefitsRelatedEntity
    method: GET
    data_selector: benefitsRelatedEntity
    params: {}
- name: eligibilityInformation
  endpoint:
    path: /eligibility/eligibilityInformation
    method: GET
    data_selector: eligibilityAdditionalInformation
    params: {}
- name: contactInformation
  endpoint:
    path: /eligibility/contactInformation
    method: GET
    data_selector: contactInformation
    params: {}
- name: providerInformation
  endpoint:
    path: /eligibility/providerInformation
    method: GET
    data_selector: providerInformation
    params: {}
- name: benefitsServiceDelivery
  endpoint:
    path: /eligibility/benefitsServiceDelivery
    method: GET
    data_selector: benefitsServiceDelivery
    params: {}
- name: additionalInformation
  endpoint:
    path: /eligibility/additionalInformation
    method: GET
    data_selector: additionalInformation
    params: {}
- name: eligibility_request
  endpoint:
    path: /
    method: POST
- name: subscriber
  endpoint:
    path: /eligibility/subscriber
    method: GET
    data_selector: subscriber
    params: {}
- name: payer
  endpoint:
    path: /eligibility/payer
    method: GET
    data_selector: payer
    params: {}
- name: eligibility
  endpoint:
    path: /eligibility
    method: POST
    data_selector: ''
    params: {}
- name: response
  endpoint:
    path: /eligibilityandclaims/edit/eligibility-response-for-medicare-patient
    method: GET
    data_selector: response
- name: eligibility_response
  endpoint:
    path: /eligibility
    method: POST
    data_selector: json
- name: subscriber_trace_number
  endpoint:
    path: /eligibility/subscriber_trace_number
    method: GET
    data_selector: subscriberTraceNumber
    params: {}
- name: identification_header
  endpoint:
    path: /eligibility/identification_header
    method: GET
    data_selector: controlNumber
    params: {}
- name: Dependent
  endpoint:
    path: /eligibility/dependent
    method: GET
    data_selector: dependents
    params: {}
- name: Encounter
  endpoint:
    path: /eligibility/encounter
    method: GET
    data_selector: encounter
    params: {}
- name: subscriber
  endpoint:
    path: /eligibility/subscriber
    method: GET
    data_selector: subscriber
- name: dependent
  endpoint:
    path: /eligibility/dependent
    method: GET
    data_selector: dependents
- name: planInformation
  endpoint:
    path: /eligibility/planInformation
    method: GET
    data_selector: planInformation
- name: planDateInformation
  endpoint:
    path: /eligibility/planDateInformation
    method: GET
    data_selector: planDateInformation
- name: planStatus
  endpoint:
    path: /eligibility/planStatus
    method: GET
    data_selector: planStatus
- name: benefitsDateInformation
  endpoint:
    path: /eligibilityandclaims/benefitsDateInformation
    method: GET
    data_selector: benefitsDateInformation
- name: benefitsInformation
  endpoint:
    path: /eligibilityandclaims/benefitsInformation
    method: GET
    data_selector: benefitsInformation
- name: eligibilityAdditionalInformation
  endpoint:
    path: /eligibilityandclaims/eligibilityAdditionalInformation
    method: GET
    data_selector: eligibilityAdditionalInformation
- name: contactInformation
  endpoint:
    path: /eligibilityandclaims/contactInformation
    method: GET
    data_selector: contactInformation
- name: providerInformation
  endpoint:
    path: /eligibilityandclaims/providerInformation
    method: GET
    data_selector: providerInformation
- name: benefitsServiceDelivery
  endpoint:
    path: /eligibilityandclaims/benefitsServiceDelivery
    method: GET
    data_selector: benefitsServiceDelivery
- name: additionalInformation
  endpoint:
    path: /eligibilityandclaims/additionalInformation
    method: GET
    data_selector: additionalInformation
- name: Eligibility
  endpoint:
    path: /eligibility/v3
    method: POST
- name: eligibility
  endpoint:
    path: /medicalnetwork/eligibility/v3/
    method: POST
    data_selector: response
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: GET
    data_selector: subscriber
    params: {}
- name: payer
  endpoint:
    path: /payer
    method: GET
    data_selector: payer
    params: {}
- name: benefitsInformation
  endpoint:
    path: /benefitsInformation
    method: GET
    data_selector: benefitsInformation
    params: {}
- name: attachments_retrieval
  endpoint:
    path: /attachments/retrieval/v1
    method: GET
- name: claim_status
  endpoint:
    path: /claim/status/v2
    method: GET
- name: validation
  endpoint:
    path: /professionalclaims/v3/validation
    method: GET
    data_selector: claimReference
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: POST
    data_selector: subscriber
- name: providers
  endpoint:
    path: /providers
    method: POST
    data_selector: providers
- name: claimInformation
  endpoint:
    path: /claims
    method: POST
    data_selector: claimInformation
- name: response
  endpoint:
    path: /eligibilityandclaims/edit/eligibility-response-for-medicare-patient
    method: GET
    data_selector: response
- name: Transaction Header
  endpoint:
    path: /eligibilityandclaims/docs/professional-claims-json-to-edi-contents#section-transaction-header-request
    method: GET
    data_selector: records
    params: {}
- name: submitter
  endpoint:
    path: /submitter
    method: GET
    data_selector: submitter
    params: {}
- name: receiver
  endpoint:
    path: /receiver
    method: GET
    data_selector: receiver
    params: {}
- name: subscriber_information
  endpoint:
    path: /subscriber_information
    method: GET
    data_selector: subscriber_information
    params: {}
- name: payer_information
  endpoint:
    path: /payer_information
    method: GET
    data_selector: payer_information
    params: {}
- name: dependent
  endpoint:
    path: /dependent
    method: GET
    data_selector: dependent
    params: {}
- name: providers
  endpoint:
    path: /providers
    method: GET
    data_selector: providers
    params: {}
- name: claim_information
  endpoint:
    path: /claims/2300
    method: GET
    data_selector: claimInformation
    params: {}
- name: claim_date_information
  endpoint:
    path: /claims/2300/dates
    method: GET
    data_selector: claimDateInformation
    params: {}
- name: claim_supplemental
  endpoint:
    path: /claims/2300/supplemental
    method: GET
    data_selector: claimSupplementalInformation
    params: {}
- name: contract_information
  endpoint:
    path: /claims/2300/contracts
    method: GET
    data_selector: claimContractInformation
    params: {}
- name: patient_amount_paid
  endpoint:
    path: /path/to/patient_amount_paid
    method: GET
    data_selector: patientAmountPaid
    params: {}
- name: file_information
  endpoint:
    path: /path/to/file_information
    method: GET
    data_selector: fileInformation
    params: {}
- name: claim_note
  endpoint:
    path: /path/to/claim_note
    method: GET
    data_selector: claimNote
    params: {}
- name: ambulance_transport_information
  endpoint:
    path: /path/to/ambulance_transport_information
    method: GET
    data_selector: ambulanceTransportInformation
    params: {}
- name: spinal_manipulation_service_information
  endpoint:
    path: /path/to/spinal_manipulation_service_information
    method: GET
    data_selector: spinalManipulationServiceInformation
    params: {}
- name: ambulance_certification
  endpoint:
    path: /path/to/ambulance_certification
    method: GET
    data_selector: ambulanceCertification
    params: {}
- name: patient_vision_information
  endpoint:
    path: /path/to/patient_vision_information
    method: GET
    data_selector: patientVisionInformation
    params: {}
- name: homebound_indicator
  endpoint:
    path: /path/to/homebound_indicator
    method: GET
    data_selector: homeBoundIndicator
    params: {}
- name: epsdt_referral
  endpoint:
    path: /path/to/epsdt_referral
    method: GET
    data_selector: epsdtReferral
    params: {}
- name: health_care_code_information
  endpoint:
    path: /path/to/health_care_code_information
    method: GET
    data_selector: healthCareCodeInformation
    params: {}
- name: anesthesia_related_procedure
  endpoint:
    path: /path/to/anesthesia_related_procedure
    method: GET
    data_selector: anesthesiaRelatedSurgicalProcedure
    params: {}
- name: condition_information
  endpoint:
    path: /path/to/condition_information
    method: GET
    data_selector: conditionInformation
    params: {}
- name: claim_pricing_information
  endpoint:
    path: /path/to/claim_pricing_information
    method: GET
    data_selector: claimPricingRepricingInformation
    params: {}
- name: ambulance_pick_up_location
  endpoint:
    path: /path/to/ambulance_pick_up_location
    method: GET
    data_selector: ambulancePickUpLocation
    params: {}
- name: ambulance_drop_off_location
  endpoint:
    path: /path/to/ambulance_drop_off_location
    method: GET
    data_selector: ambulanceDropOffLocation
    params: {}
- name: service_facility_location
  endpoint:
    path: /path/to/service_facility_location
    method: GET
    data_selector: serviceFacilityLocation
    params: {}
- name: other_payer
  endpoint:
    path: /path/to/other_payer
    method: GET
    data_selector: otherPayer
    params: {}
- name: other_payer_referring_provider
  endpoint:
    path: /path/to/other_payer_referring_provider
    method: GET
    data_selector: otherPayerReferringProvider
    params: {}
- name: other_payer_rendering_provider
  endpoint:
    path: /path/to/other_payer_rendering_provider
    method: GET
    data_selector: otherPayerRenderingProvider
    params: {}
- name: other_payer_service_facility_location
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/2330E
    method: GET
    data_selector: records
- name: other_payer_supervising_provider
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/2330F
    method: GET
    data_selector: records
- name: other_payer_billing_provider
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/2330G
    method: GET
    data_selector: records
- name: service_lines
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/2400
    method: GET
    data_selector: records
- name: line_pricing_repricing_information
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: linePricingRepricingInformation
    params: {}
- name: durable_medical_equipment_service
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: durableMedicalEquipmentService
    params: {}
- name: drug_identification
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: drugIdentification
    params: {}
- name: line_adjudication_information
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: lineAdjudicationInformation
    params: {}
- name: line_adjustment_information
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: claimAdjustmentInformation
    params: {}
- name: form_identification
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: formIdentification
    params: {}
- name: corrected_claims
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-attachment-submission-v1-overview
    method: GET
    data_selector: claims
- name: eligibility
  endpoint:
    path: /eligibility/v3
    method: POST
    data_selector: response
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params: {}
- name: raw_x12_validation
  endpoint:
    path: /raw-x12-validation
    method: POST
    data_selector: ''
    params: {}
- name: claim_information
  endpoint:
    path: /claims
    method: POST
    data_selector: claims
    params: {}
- name: validation
  endpoint:
    path: /professionalclaims/v3/validation
    method: GET
    data_selector: claimReference
- name: attachments_submission
  endpoint:
    path: /attachments/submission
    method: POST
    data_selector: submissionResponse
- name: attachments_status
  endpoint:
    path: /attachments/status
    method: GET
    data_selector: statusResponse
- name: subscriber
  endpoint:
    path: /claims/subscriber
    method: POST
    data_selector: subscriber
    params: {}
- name: claimInformation
  endpoint:
    path: /claims/information
    method: POST
    data_selector: claimInformation
    params: {}
- name: claimReference
  endpoint:
    path: /claims
    method: GET
    data_selector: claimReference
    params: {}
- name: transaction_header_request
  endpoint:
    path: /eligibilityandclaims/docs/professional-claims-json-to-edi-contents#section-transaction-header-request
    method: GET
    data_selector: fields
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: POST
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: submitter
  endpoint:
    path: /submitter
    method: GET
    data_selector: submitter
    params: {}
- name: receiver
  endpoint:
    path: /receiver
    method: GET
    data_selector: receiver
    params: {}
- name: subscriber_information
  endpoint:
    path: /subscriber_information
    method: GET
    data_selector: subscriber_information
    params: {}
- name: dependent
  endpoint:
    path: /dependent
    method: GET
    data_selector: dependent
    params: {}
- name: providers
  endpoint:
    path: /providers
    method: GET
    data_selector: providers
    params: {}
- name: Institutional Claims
  endpoint:
    path: /eligibilityandclaims/docs/institutional-claims-v1-api-getting-started
    method: GET
    data_selector: records
    params: {}
- name: institutional_claim_validation
  endpoint:
    path: /institutionalclaims/v1/validation
    method: GET
- name: provider_id
  endpoint:
    path: /provider/id
    method: GET
    data_selector: records
    params: {}
- name: provider_contact_information
  endpoint:
    path: /provider/contact/information
    method: GET
    data_selector: records
    params: {}
- name: pay_to_address_name
  endpoint:
    path: /pay/to/address/name
    method: GET
    data_selector: records
    params: {}
- name: pay_to_plan_name
  endpoint:
    path: /pay/to/plan/name
    method: GET
    data_selector: records
    params: {}
- name: claim_information
  endpoint:
    path: /claim/information
    method: GET
    data_selector: records
    params: {}
- name: claim_date_information
  endpoint:
    path: /claim/date/information
    method: GET
    data_selector: records
    params: {}
- name: claim_supplemental
  endpoint:
    path: /claim/supplemental
    method: GET
    data_selector: records
    params: {}
- name: contract_information
  endpoint:
    path: /contract/information
    method: GET
    data_selector: records
    params: {}
- name: institutional_claims_submission
  endpoint:
    path: /[validation|submission]
    method: POST
    data_selector: claimReference
- name: Transaction Header
  endpoint:
    path: /attachment-submissions
    method: POST
    data_selector: transactionHeader
    params: {}
- name: Submitter
  endpoint:
    path: /attachment-submissions
    method: POST
    data_selector: submitter
    params: {}
- name: Receiver
  endpoint:
    path: /attachment-submissions
    method: POST
    data_selector: receiver
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: GET
    data_selector: records
- name: dependent
  endpoint:
    path: /dependent
    method: GET
    data_selector: records
- name: providers
  endpoint:
    path: /providers
    method: GET
    data_selector: records
- name: otherSubscriberInformation
  endpoint:
    path: /otherSubscriberInformation
    method: GET
    data_selector: records
- name: otherPayer
  endpoint:
    path: /otherPayer
    method: GET
    data_selector: records
- name: patient_amount_paid
  endpoint:
    path: /patient/amount_paid
    method: GET
    data_selector: patientAmountPaid
    params: {}
- name: file_information
  endpoint:
    path: /file/information
    method: GET
    data_selector: fileInformation
    params: {}
- name: claim_note
  endpoint:
    path: /claim/note
    method: GET
    data_selector: claimNote
    params: {}
- name: ambulance_transport_information
  endpoint:
    path: /ambulance/transport/information
    method: GET
    data_selector: ambulanceTransportInformation
    params: {}
- name: spinal_manipulation_service_information
  endpoint:
    path: /spinal/manipulation/service/information
    method: GET
    data_selector: spinalManipulationServiceInformation
    params: {}
- name: ambulance_certification
  endpoint:
    path: /ambulance/certification
    method: GET
    data_selector: ambulanceCertification
    params: {}
- name: patient_vision_information
  endpoint:
    path: /patient/vision/information
    method: GET
    data_selector: patientVisionInformation
    params: {}
- name: homebound_indicator
  endpoint:
    path: /homebound/indicator
    method: GET
    data_selector: homeBoundIndicator
    params: {}
- name: epsdt_referral
  endpoint:
    path: /epsdt/referral
    method: GET
    data_selector: epsdtReferral
    params: {}
- name: health_care_code_information
  endpoint:
    path: /health/care/code/information
    method: GET
    data_selector: healthCareCodeInformation
    params: {}
- name: anesthesia_related_procedure
  endpoint:
    path: /anesthesia/related/procedure
    method: GET
    data_selector: anesthesiaRelatedSurgicalProcedure
    params: {}
- name: condition_information
  endpoint:
    path: /condition/information
    method: GET
    data_selector: conditionInformation
    params: {}
- name: claim_pricing_information
  endpoint:
    path: /claim/pricing/information
    method: GET
    data_selector: claimPricingRepricingInformation
    params: {}
- name: ambulance_pick_up_location
  endpoint:
    path: /ambulance/pick_up/location
    method: GET
    data_selector: ambulancePickUpLocation
    params: {}
- name: ambulance_drop_off_location
  endpoint:
    path: /ambulance/drop_off/location
    method: GET
    data_selector: ambulanceDropOffLocation
    params: {}
- name: service_facility_location
  endpoint:
    path: /service/facility/location
    method: GET
    data_selector: serviceFacilityLocation
    params: {}
- name: other_payer
  endpoint:
    path: /other/payer
    method: GET
    data_selector: otherPayerName
    params: {}
- name: other_payer_referring_provider
  endpoint:
    path: /other/payer/referring/provider
    method: GET
    data_selector: otherPayerReferringProvider
    params: {}
- name: other_payer_rendering_provider
  endpoint:
    path: /other/payer/rendering/provider
    method: GET
    data_selector: otherPayerRenderingProvider
    params: {}
- name: otherPayerServiceFacilityLocation
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/otherPayerServiceFacilityLocation
    method: GET
    data_selector: otherPayerServiceFacilityLocation
    params: {}
- name: otherPayerSupervisingProvider
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/otherPayerSupervisingProvider
    method: GET
    data_selector: otherPayerSupervisingProvider
    params: {}
- name: otherPayerBillingProvider
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/otherPayerBillingProvider
    method: GET
    data_selector: otherPayerBillingProvider
    params: {}
- name: serviceLines
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims/serviceLines
    method: GET
    data_selector: serviceLines
    params: {}
- name: claim_information
  endpoint:
    path: /claim_information
    method: GET
    data_selector: claimInformation
    params: {}
- name: claim_notes
  endpoint:
    path: /claim_notes
    method: GET
    data_selector: claimNote
    params: {}
- name: epsdt_referral
  endpoint:
    path: /epsdt_referral
    method: GET
    data_selector: epsdtReferral
    params: {}
- name: claim_date_information
  endpoint:
    path: /claim_date_information
    method: GET
    data_selector: claimDateInformation
    params: {}
- name: claim_code_information
  endpoint:
    path: /claim_code_information
    method: GET
    data_selector: claimCodeInformation
    params: {}
- name: claim_contract_information
  endpoint:
    path: /claim_contract_information
    method: GET
    data_selector: claimContractInformation
    params: {}
- name: report_information
  endpoint:
    path: /report_information
    method: GET
    data_selector: reportInformation
    params: {}
- name: claim_supplemental_information
  endpoint:
    path: /claim_supplemental_information
    method: GET
    data_selector: claimSupplementalInformation
    params: {}
- name: condition_codes
  endpoint:
    path: /condition_codes
    method: GET
    data_selector: conditionCodesList
    params: {}
- name: principal_diagnosis
  endpoint:
    path: /principal_diagnosis
    method: GET
    data_selector: principalDiagnosis
    params: {}
- name: admitting_diagnosis
  endpoint:
    path: /admitting_diagnosis
    method: GET
    data_selector: admittingDiagnosis
    params: {}
- name: patient_reason_for_visit
  endpoint:
    path: /patient_reason_for_visit
    method: GET
    data_selector: patientReasonForVisit
    params: {}
- name: linePricingRepricingInformation
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: linePricingRepricingInformation
- name: durableMedicalEquipmentService
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: durableMedicalEquipmentService
- name: drugIdentification
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: drugIdentification
- name: lineAdjudicationInformation
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: lineAdjudicationInformation
- name: claimAdjustmentInformation
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: claimAdjustmentInformation
- name: formIdentification
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: formIdentification
- name: supportingDocumentation
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: supportingDocumentation
- name: ambulancePickUpLocation
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: ambulancePickUpLocation
- name: ambulanceDropOffLocation
  endpoint:
    path: /eligibilityandclaims/reference/professional-claims
    method: GET
    data_selector: ambulanceDropOffLocation
- name: externalCauseOfInjury
  endpoint:
    path: /externalCauseOfInjury
    method: GET
    data_selector: externalCauseOfInjury
    params: {}
- name: diagnosisRelatedGroupInformation
  endpoint:
    path: /diagnosisRelatedGroupInformation
    method: GET
    data_selector: diagnosisRelatedGroupInformation
    params: {}
- name: otherDiagnosisInformationList
  endpoint:
    path: /otherDiagnosisInformationList
    method: GET
    data_selector: otherDiagnosisInformationList
    params: {}
- name: principalProcedureInformation
  endpoint:
    path: /principalProcedureInformation
    method: GET
    data_selector: principalProcedureInformation
    params: {}
- name: otherProcedureInformationList
  endpoint:
    path: /otherProcedureInformationList
    method: GET
    data_selector: otherProcedureInformationList
    params: {}
- name: occurrenceSpanInformationList
  endpoint:
    path: /occurrenceSpanInformationList
    method: GET
    data_selector: occurrenceSpanInformationList
    params: {}
- name: occurrenceInformationList
  endpoint:
    path: /occurrenceInformationList
    method: GET
    data_selector: occurrenceInformationList
    params: {}
- name: valueInformationList
  endpoint:
    path: /valueInformationList
    method: GET
    data_selector: valueInformationList
    params: {}
- name: treatmentCodeInformationList
  endpoint:
    path: /treatmentCodeInformationList
    method: GET
    data_selector: treatmentCodeInformationList
    params: {}
- name: claimPricingInformation
  endpoint:
    path: /claimPricingInformation
    method: GET
    data_selector: claimPricingInformation
    params: {}
- name: serviceFacilityLocation
  endpoint:
    path: /serviceFacilityLocation
    method: GET
    data_selector: serviceFacilityLocation
    params: {}
- name: institutionalServiceLines
  endpoint:
    path: /institutionalServiceLines
    method: GET
    data_selector: institutionalServiceLines
    params: {}
- name: drugIdentification
  endpoint:
    path: /drugIdentification
    method: GET
    data_selector: drugIdentification
    params: {}
- name: line_adjustment_information
  endpoint:
    path: /line_adjustment_information
    method: GET
    data_selector: records
- name: claim_line_adjustment
  endpoint:
    path: /claim_line_adjustment
    method: GET
    data_selector: records
- name: corrected_claims
  endpoint:
    path: /eligibilityandclaims/reference/medical-network-attachment-submission-v1-overview
    method: GET
    data_selector: corrected_claims
    params: {}
- name: claims_mapping
  endpoint:
    path: /eligibilityandclaims/docs/attachment-submissions-v1-getting-started
    method: GET
    data_selector: claims_mapping
    params: {}
- name: validation_submission
  endpoint:
    path: /[validation|submission]
    method: POST
- name: raw_x12_validation_submission
  endpoint:
    path: /[raw-x12-validation|raw-x12-submission]
    method: POST
- name: validation
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/validation
    method: POST
- name: raw-x12-validation
  endpoint:
    path: /medicalnetwork/professionalclaims/v3/raw-x12-validation
    method: POST
- name: submitter
  endpoint:
    path: /submitter
    method: GET
    data_selector: submitter
    params: {}
- name: receiver
  endpoint:
    path: /receiver
    method: GET
    data_selector: receiver
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: GET
    data_selector: subscriber
    params: {}
- name: dependent
  endpoint:
    path: /dependent
    method: GET
    data_selector: dependent
    params: {}
- name: providers
  endpoint:
    path: /providers
    method: GET
    data_selector: providers
    params: {}
- name: claimInformation
  endpoint:
    path: /claimInformation
    method: GET
    data_selector: claimInformation
    params: {}
- name: attachments_submission
  endpoint:
    path: /attachments/submission
    method: POST
    data_selector: response
    params: {}
- name: attachments_status
  endpoint:
    path: /attachments/status
    method: GET
    data_selector: status
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: POST
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: healthcheck
  endpoint:
    path: /institutionalclaims/v1/healthcheck
    method: GET
    data_selector: status
    params: {}
- name: submission
  endpoint:
    path: /institutionalclaims/v1/submit
    method: POST
    data_selector: response
    params: {}
- name: institutional_claims_validation
  endpoint:
    path: /institutionalclaims/v1/validation
    method: POST
    data_selector: validationResults
    params: {}
- name: Claim Status
  endpoint:
    path: /eligibilityandclaims/docs/claim-status-v2-getting-started
    method: GET
- name: institutional_claims
  endpoint:
    path: /[validation|submission]
    method: POST
    data_selector: status
    params: {}
- name: claim_status
  endpoint:
    path: /eligibilityandclaims/docs/claim-status-v2-getting-started
    method: GET
- name: transaction_header
  endpoint:
    path: /eligibilityandclaims/docs/institutional-claims-api-json-to-edi-contents#transaction-header
    method: GET
    data_selector: fields
    params: {}
- name: submitter
  endpoint:
    path: /eligibilityandclaims/docs/institutional-claims-api-json-to-edi-contents#submitter
    method: GET
    data_selector: fields
    params: {}
- name: receiver
  endpoint:
    path: /eligibilityandclaims/docs/institutional-claims-api-json-to-edi-contents#receiver
    method: GET
    data_selector: fields
    params: {}
- name: claim_status
  endpoint:
    path: claimstatus/v2/
    method: POST
    data_selector: records
- name: raw_x12
  endpoint:
    path: claimstatus/v2/raw-x12
    method: POST
    data_selector: records
- name: healthcheck
  endpoint:
    path: /claimstatus/v2/healthcheck
    method: GET
    data_selector: status
- name: raw_x12_enhanced
  endpoint:
    path: /claimStatus/raw-x12/enhanced
    method: POST
    data_selector: records
- name: Claim Information
  endpoint:
    path: /claims/information
    method: GET
    data_selector: claims
    params: {}
- name: Claim Notes
  endpoint:
    path: /claims/notes
    method: GET
    data_selector: notes
    params: {}
- name: EPSDT Referral
  endpoint:
    path: /claims/epsdt/referral
    method: GET
    data_selector: epsdtReferral
    params: {}
- name: Claim Date Information
  endpoint:
    path: /claims/date/information
    method: GET
    data_selector: dateInformation
    params: {}
- name: Claim Code Information
  endpoint:
    path: /claims/code/information
    method: GET
    data_selector: codeInformation
    params: {}
- name: Claim Contract Information
  endpoint:
    path: /claims/contract/information
    method: GET
    data_selector: contractInformation
    params: {}
- name: Report Information
  endpoint:
    path: /claims/report/information
    method: GET
    data_selector: reportInformation
    params: {}
- name: Claim Supplemental/Reference Information
  endpoint:
    path: /claims/supplemental/reference/information
    method: GET
    data_selector: supplementalReferenceInformation
    params: {}
- name: Condition Codes
  endpoint:
    path: /claims/condition/codes
    method: GET
    data_selector: conditionCodes
    params: {}
- name: Principal Diagnosis
  endpoint:
    path: /claims/principal/diagnosis
    method: GET
    data_selector: principalDiagnosis
    params: {}
- name: Admitting Diagnosis
  endpoint:
    path: /claims/admitting/diagnosis
    method: GET
    data_selector: admittingDiagnosis
    params: {}
- name: Patient’s Reason for Visit
  endpoint:
    path: /claims/patient/reason/visit
    method: GET
    data_selector: reasonForVisit
    params: {}
- name: externalCauseOfInjury
  endpoint:
    path: /externalCauseOfInjury
    method: GET
    data_selector: records
- name: diagnosisRelatedGroupInformation
  endpoint:
    path: /diagnosisRelatedGroupInformation
    method: GET
    data_selector: records
- name: otherDiagnosisInformationList
  endpoint:
    path: /otherDiagnosisInformationList
    method: GET
    data_selector: records
- name: principalProcedureInformation
  endpoint:
    path: /principalProcedureInformation
    method: GET
    data_selector: records
- name: otherProcedureInformationList
  endpoint:
    path: /otherProcedureInformationList
    method: GET
    data_selector: records
- name: occurrenceSpanInformationList
  endpoint:
    path: /occurrenceSpanInformationList
    method: GET
    data_selector: records
- name: occurrenceInformationList
  endpoint:
    path: /occurrenceInformationList
    method: GET
    data_selector: records
- name: valueInformationList
  endpoint:
    path: /valueInformationList
    method: GET
    data_selector: records
- name: treatmentCodeInformationList
  endpoint:
    path: /treatmentCodeInformationList
    method: GET
    data_selector: records
- name: claimPricingInformation
  endpoint:
    path: /claimPricingInformation
    method: GET
    data_selector: records
- name: serviceFacilityLocation
  endpoint:
    path: /serviceFacilityLocation
    method: GET
    data_selector: records
- name: institutionalServiceLines
  endpoint:
    path: /institutionalServiceLines
    method: GET
    data_selector: records
- name: drugIdentification
  endpoint:
    path: /drugIdentification
    method: GET
    data_selector: records
- name: Identification Leader
  endpoint:
    path: /claim-status/277/identification-leader
    method: GET
    data_selector: controlNumber
- name: Payer
  endpoint:
    path: /claim-status/277/payer
    method: GET
    data_selector: payer
- name: Providers
  endpoint:
    path: /claim-status/277/providers
    method: GET
    data_selector: providers
- name: Subscriber
  endpoint:
    path: /claim-status/277/subscriber
    method: GET
    data_selector: subscriber
- name: Dependent
  endpoint:
    path: /claim-status/277/dependent
    method: GET
    data_selector: dependent
- name: Claims
  endpoint:
    path: /claim-status/277/claims
    method: GET
    data_selector: claimStatus
- name: Service Details
  endpoint:
    path: /claim-status/277/service-details
    method: GET
    data_selector: serviceDetails
- name: Error Response
  endpoint:
    path: /claim-status/277/error-response
    method: GET
    data_selector: errorResponse
- name: claim_validation
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/raw-x12-validation
    method: POST
    data_selector: status
    params: {}
- name: claim_submission
  endpoint:
    path: /medicalnetwork/institutionalclaims/v1/raw-x12-submission
    method: POST
    data_selector: status
    params: {}
- name: Claim
  endpoint:
    path: /eligibilityandclaims/docs/create-an-edi-837p-5010-claim-for-a-client-primary-and-secondary-insurances
    method: POST
- name: claims
  endpoint:
    path: /eligibilityandclaims/docs/handle-multiple-authorization-numbers-per-claim
    method: GET
- name: attachments_retrieval
  endpoint:
    path: /eligibilityandclaims/docs/attachment-retrieval-v1-getting-started
    method: GET
- name: claim_status
  endpoint:
    path: /eligibilityandclaims/docs/claim-status-v2-getting-started
    method: GET
- name: institutional_claims
  endpoint:
    path: /eligibilityandclaims/docs/institutional-claims-v1-api-getting-started
    method: GET
- name: attachments_retrieval
  endpoint:
    path: /eligibilityandclaims/docs/attachment-retrieval-v1-getting-started
    method: GET
- name: claim_status
  endpoint:
    path: /eligibilityandclaims/docs/claim-status-v2-getting-started
    method: GET
- name: institutional_claims
  endpoint:
    path: /eligibilityandclaims/docs/institutional-claims-v1-api-getting-started
    method: GET
- name: professional_claims
  endpoint:
    path: /eligibilityandclaims/docs/professional-claims-v3-getting-started
    method: GET
- name: medical_network_eligibility
  endpoint:
    path: /eligibilityandclaims/docs/medical-network-eligibility-v3-getting-started
    method: GET
- name: healthcheck
  endpoint:
    path: /institutionalclaims/v1/healthcheck
    method: GET
    data_selector: status
    params: {}
- name: claims_submission
  endpoint:
    path: /institutionalclaims/v1/submit
    method: POST
    data_selector: response
    params: {}
- name: claim_status
  endpoint:
    path: /eligibilityandclaims/docs/claim-status-v2-getting-started
    method: GET
- name: claim_status
  endpoint:
    path: /eligibilityandclaims/docs/claim-status-v2-getting-started
    method: GET
    data_selector: records
    params: {}
- name: claim_status
  endpoint:
    path: claimstatus/v2/
    method: POST
    data_selector: records
- name: raw_x12
  endpoint:
    path: claimstatus/v2/raw-x12
    method: POST
    data_selector: records
- name: healthcheck
  endpoint:
    path: /claimstatus/v2/healthcheck
    method: GET
    data_selector: records
- name: raw_x12_enhanced
  endpoint:
    path: /claimStatus/raw-x12/enhanced
    method: POST
    data_selector: records
- name: claim_status
  endpoint:
    path: /eligibilityandclaims/docs/claims-status-api-json-to-edi-contents
    method: GET
    data_selector: records
    params: {}
- name: Identification Leader
  endpoint:
    path: /identification/leader
    method: GET
    data_selector: controlNumber
- name: Payer
  endpoint:
    path: /payer
    method: GET
    data_selector: payer
- name: Providers
  endpoint:
    path: /providers
    method: GET
    data_selector: providers
- name: Subscriber
  endpoint:
    path: /subscriber
    method: GET
    data_selector: subscriber
- name: Dependent
  endpoint:
    path: /dependent
    method: GET
    data_selector: dependent
- name: Claims
  endpoint:
    path: /claims
    method: GET
    data_selector: claimStatus
- name: Service Details
  endpoint:
    path: /service/details
    method: GET
    data_selector: serviceDetails
- name: Error Response
  endpoint:
    path: /error
    method: GET
    data_selector: errorResponse
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Use serviceType codes to identify business group
- Requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Optum
- Some objects may return nulls in deeply nested fields
- Most of our APIs are private and require credentials to gain access.
- Production credentials are provided after contract signing or once a subscription
  has been processed.
- Access tokens are valid for one hour from issuance.
- Argonaut uses SMART on FHIR authorization for apps that connect to EHR data.
- Uses OAuth2 with refresh token
- Ensure correct setup of connected app in Optum
- Uses OAuth2 with SMART on FHIR authorization for apps that connect to EHR data.
- Forms should be shareable between systems and across organizational boundaries.
- Responses to Questionnaires may be stored in an external ‘answer bank’.
- Access token is valid for one hour from the time of its issuance.
- This version of the API is more fully compliant with the conventions defined in
  the oAuth 2.0 specification.
- This version of the API utilizes a new IdP (Identity provider).
- This implementation guide provides guidance to support interchange of simple forms
  based on FHIR Version 3.0.1.
- API requires setup of connected app in api
- This API is compliant with the oAuth 2.0 specification.
- Not all grant types are currently supported.
- Optum uses OAuth2 to create a secure connection with our API users
- Our APIs are only accessible through HTTPS
- Request bodies and responses are JSON encoded
- DO NOT perform load testing or production data testing in the sandbox environment.
- The Enhanced Eligibility API extends the functionality of Optum’s 270/271 json-based
  Eligibility API.
- Supports Solicited and Unsolicited claims.
- Translates X12 EDI 275 Patient Information transaction to JSON.
- The API uses standard X12 EDI 270 eligibility transaction.
- Optum uses OAuth2 to create a secure connection with API users
- accepts 270 EDI json object model and produces a json object model of a 271 response
- DO NOT perform load testing or production data testing in the sandbox environment.
  Please use the sandbox ONLY to view sample API responses to HTTP requests using
  our predefined values and to familiarize yourself with our APIs.
- The Professional Claims API takes the standard X12 EDI 837P transaction and translates
  it to JSON.
- Uses OAuth2 for authentication
- Takes json with a single string property 'x12' that should have a 270 edi string
  and produces a json response with a single 'x12' property that should have a 271
  edi string
- 'The ASC X12N Health Care Claim: Institutional (837i) transaction enables institutional
  healthcare providers to submit healthcare claims for a service or encounter.'
- For attendingProvider, do not send the organizationName.
- Send any payer-specific information in the otherPayerName object.
- Requires OAuth2 authentication for access
- During the offline processing of large files/reports, it might take up to five minutes
  for our service to complete processing the large files/reports.
- You can ignore the `taxId` field in the `receiver` object below. This does not need
  to be sent, and it does not impact anything if sent. This field is overridden within
  the clearinghouse.
- The finished/downloaded Claim files are not available permanently for retrieval.
- The Claim Status API supports the X12 EDI 276 transaction.
- The payer returns the response as an X12 EDI 277 transaction.
- In the Response 200 pop-up below, the X12 segment in the payerIdentification is
  the same as that of the trandingPartnerServiceId.
- Supports the X12 EDI 275 Patient Information transaction.
- API requires authentication via token.
- Endpoints may have specific requirements for headers.
- You won't be able to obtain the claim response file itself; this file details the
  payments for each line item for the claim.
- The Attachments Status API enables customers to query for the status of attachments
  transactions.
- In the Response 200 pop-up below, the X12 segment in the `payerIdentification` is
  the same as that of the `trandingPartnerServiceId`.
- Lets you search and download attachments documents for payers.
- Supports legacy network connections.
- Accepts JPG, TIF, TIFF, PDF, JPEG, and PNG formats for attachments.
- Requires setup of connected app in API
- API testing is not supported in the sandbox environment.
- Currently, API testing is not supported in the sandbox environment.
- The Attachments Retrieval API lets you search and download attachments documents
  for payers.
- Once the attachments are committed, you can add files but cannot update/modify the
  attachments container and files.
- Log in to use your API keys
- If conditions are not met, the link response header will not contain any /coverage-discovery
  references.
- You must be enrolled in the Coverage Discovery feature in order to use this system!
- Submitter can delete the files from the attachments container.
- If you only plan to use a few daily transactions, you can use our PayerList V1 API
  user interface (UI) for your Medical Network transaction needs.
- system is the only required parameter.
- '`system` is the only required parameter'
- Due to the long-running nature of the discovery process, all concluded task responses
  will be communicated asynchronously via the provided request.callbackUrl.
- If no query parameters are sent in the request, all of the tasks will be returned.
- Adding query parameters filters the returned records.
- All of the fields marked as R are not required to be filled in; only one of the
  fields marked as (R) is required.
- A healthcheck of the Enhanced Eligibility workflow
- Some objects like Contact may return nulls in deeply nested fields
- system is the only required parameter
- Most of our APIs are private and require credential to gain access.
- Please use the dryRun field to validate your input produces the expected paths prior
  to submitting the next request.
- Responses are delivered asynchronously to your provided callback URL
- Supports secure delivery via OAuth2 authentication
- You must be enrolled in the Coverage Discovery feature in order to use this system.
- Requires OAuth2 authentication
- 'Supported Payer ID’s for UnitedHealthcare: 87726 03432 96385 95467 86050 86047
  95378 06111 00773 36273 37602 39026 41161 41194 52461 65088 74227 76342 76343 78857
  81400 88337 94265 95958 USN01 25463 UHNDC'
- Providers can receive real-time updates on submitted claims.
- 'Supported Payer ID’s for UnitedHealthcare: 87726, 25463, 39026, 74227, LIFE1, WELM2,
  06111, 96385, 37602, 03432, 95467, 86050, 86047, 95378'
- Sandbox is not available for this API. Information is only returned by the API when
  it is added in the online PES workflow. If no enrollments are added in the workflow,
  then no data will be returned in the API call.
- A callback API with an OAuth2 token endpoint using the Client Credentials grant
  type is required
- API Health Check - The health check endpoint checks the operating status of our
  APIs.
- For Claim Inquiry
- Access to Optum APIs is controlled via OAuth2 using the client credentials grant.
- Consumers must obtain a short-lived (one hour) access token.
- Sandbox is not available for this API. Information is only returned by the API when
  it is added in the online PES workflow.
- Your access token will expire after two hours.
- The API is secured using OAuth 2.0 facilitated by the Link API Gateway.
- Solicited claims usually are sent by payers to providers requesting documentation
  for a claim.
- The API supports the X12 EDI 275 Patient Information transaction.
- Optum APIs are only accessible through HTTPS
- Request and response contents are in JSON format
- All Optum API requests are protected by OAuth2 Bearer token to obtain access
- The lifespan of a Bearer token is one hour (3600 seconds) for both sandbox and production
  environments.
- Bearer token lifespan is one hour (3600 seconds) for both sandbox and production
  environments.
- 'When you are ready to move from sandbox to production, replace the sandbox authorization
  URL with the production URL: https://apigw.optum.com/apip/auth/v2/token'
- The lifespan of a bearer token is one hour (3600 seconds) for both sandbox and production
  environments.
- Optum strongly recommends you carefully guard your API access credentials.
- Avoid using real-world values in our sandbox API endpoints! Doing so will generate
  errors.
- All fields must use predefined values to have successful responses in the sandbox.
- The JSON attributes in our APIs use snake-case, with the first letter of the attribute
  in lower case as in propertyCasualtyClaimNumber.
- Our APIs are case-sensitive and your JSON request body must observe this convention.
- For sandbox usage, all fields must have the correct predefined values to obtain
  a successful response.
- Do not use real-world values in our sandbox API endpoints! Doing so will produce
  errors.
- API & Services Connection™
- The TESTEP10 Test PayerId is designed for the 'Partially Accepted' use case. Use
  at least two attachments in the same sandbox API request to receive an accurate
  response for this use case.
- Ensure all documents conform to file format standards and also avoid sending files
  that exceed more than a few megabytes each.
- Payers may reject an attachment due to excessive file sizes.
- The sandbox returns a canned response based on the received data.
- Use the Test Payer Accounts for each Attachments API Response Type
- Optum's print/fax contractor also handles mailing of attachments to payers who accept
  only mailed hardcopies.
- Select Attachments features are not yet supported by the sandbox standard responses.
- If you use the sandbox with this test payerId, you will receive the message indicating
  a successful attachment transaction.
- API users need not enable this capability; it is automatic and has no effect on
  information in any medical transaction.
- Upon request, give this entire object to Optum support for troubleshooting.
- The clearinghouse may contribute information for the rejectionInformation field.
- If information is missing from the request body, the clearinghouse also may detect
  that and reject it for that reason.
- All metadata queries must have the submitterId, transactionReceivedStartDate, and
  transactionReceivedEndDate attributes in the request body.
- Dates must be in YYYY-MM-DD format.
- Do not use the `traceId` value as a metadata search criteria.
- Pagination works with the query parameters size and page. Its maximum size is 1000.
  Page numbering starts at page 0.
- Ensure that all information in the request is accurate. The file attachments also
  may be too large.
- In rare instances, an attachment may not be mailed successfully due to missing payerAddress
  or tradingPartnerServiceId.
- Address any errors if an 'EDITS' response is received.
- Allow the submitted claim to process for *X* number of days.
- API requires setup of connected app in optum
- Enter your Bearer token in the Authorization box exactly as shown in the example.
- 'When they appear, consider the IDs in the metadata object as a hierarchy from less
  specific to most specific: submitterId as least specific, senderId denoting the
  API customer, billerId as the customer medical department that is responsible for
  the billing.'
- The Attachments Submission API provides useful error information with HTTP 400 code
  when the request body contains mistakes or when something else in the process goes
  wrong.
- Do not use the traceId value as a metadata search criteria.
- 'While calling the API, the following DNS error occurs: javax.net.ssl.SSLHandshakeException:
  No subject alternative DNS name matching sandbox-apigw.optum.com found'
- Pagination works with the query parameters size and page. Its maximum size is 1000.
- Eligibility API is giving `unable to process the request at this time, please try
  again later`.
- The submitter gets unsolicited claim status about the claim being in process.
- If a claim is rejected by the payer, make the requested changes and generate a new
  submission with a new patientControlNumber.
- If a claim is denied by the payer, a corrected claim would be required.
- The Patient Account Number must not be greater than 20 characters and must only
  contain alphanumeric characters, spaces, and !"&'()+,-./;?=%@[]{}#$
- Automating transactions to use the tokens generated over the token lifespan is recommended.
- Unable to Process the Request at this Time
- There is no iFrame capability for ConnectCenter right now.
- Customers should only use the payerlists for the products/services they are contracted
  to, or testing with.
- The auth API gives Either `client_id` or `client_secret` are invalid, when using
  correct value for both.
- Access token might not be valid for the selected API or you might have selected
  one API to test but tried a different API.
- You might have used your own data instead of the predefined values and fields.
- You might not have followed the OpenAPI specs.
- We recommend using the Validation API before sending the claim request to the payer.
- Invalid Access Token Error in Sandbox
- The controlNumber must be defined as a nine-digit unsigned numeric value.
- Ensure integrity of X12 transactions
- To obtain a license that also provides access to the full requirements for these
  transactions, visit https://x12.org/licensing.
- We make every effort to ensure consistency between our APIs and the X12 TR3. If
  there is a discrepancy, the X12 TR3 is the final authority.
- Version 2 is fully compliant with the expectations outlined in the OAuth 2.0 specification.
- The token name usage in v2 is `access_token`.
- Refer to pages 92-93 for further detail on Subscriber Trace Number.
- Testing claims in the sandbox is limited to predefined data values.
- When trying to determine if a specific payer requires enrollment, this can be found
  on our payerlist.
- While we make every effort to keep all information up to date and accurate, Optum
  makes no warranties, express or implied, about completeness, accuracy, reliability,
  or availability regarding the content, images, services or hyperlinks in our documentation.
  We provide this information as a service to our customers; your use of this information
  is your responsibility.
- If you submit an Eligibility request with a serviceTypeCode other than 30 to a payer
  that does not support other more-specific code values for this information, you
  will receive a generic response equaling the standard one of 30.
- Check the Eligibility API Mappings document for complete Eligibility EDI loop and
  segment mappings.
- 'Some information in the Eligibility requests is Situational: you can include or
  omit specific information depending on the individual encounter.'
- For many API consumers, it is a good practice to build shorter API requests that
  limit the amount of work needed to obtain successful and accurate Eligibility queries.
- Optum provides ECG credentials to access the SFTP server.
- Supports only SSH-FTP.
- The file suffix must be *.275
- 'Do not use the following characters in any file name: ‘ “ ( ) [ ] { } / , $ @ &
  = + * # ! % ` | ? < > ; or spaces'
- Use our OpenAPI Spec JSON file as a reference for development.
- The API only allows for the submission of serviceTypeCode.
- Typically, most commercial payers only return information for the current calendar
  year.
- Eligibility API is giving 'unable to process the request at this time, please try
  again later'? The auth API gives Either **client_id** or **client_secret** are invalid,
  when using correct value for both. It works via curl though.
- If you only plan to use a few daily transactions, you can use our ConnectCenter
  for your Medical Network transaction needs.
- The JSON attributes in our APIs use snake-case, with the first letter of the attribute
  in lower case as in `claimInformation`. Our APIs are case-sensitive and your JSON
  request body must observe this convention.
- 'In the Professional and Institutional Claims sandbox request, using value: test00005
  (lower case and not uppercase), for fieldName: patientControlNumber returns EDITS
  canned response.'
- Generate an API Token
- The JSON attributes in our APIs use snake-case, with the first letter of the attribute
  in lower case.
- If you are submitting the request to Medicare, they would return additional information
  related to specific insuranceTypes.
- API users need not enable metadata capability; it is automatic and has no effect
  on information in any medical transaction.
- If you encounter any issues with a transaction and need to work with Optum technical
  support, give the values provided in the meta object to the Optum representative.
- All requests must have the Authorization header.
- Do not encapsulate the 275 as a ZIP file.
- All fields are required if the object is in use for the claim.
- Submitting a corrected claim would require the claim frequency code '7'
- The claimControlNumber must be included on the claim in the claimSupplementalInformation
- Eligibility API supports X12 EDI formatted requests.
- Responses to our Medical Network APIs can be lengthy due to the many data points
  that a payer or trading partner provides in the query response.
- A correct claim is only submitted when the payer has actually adjudicated the submission
  and processed the claim for payment.
- '`claimFrequencyCode` ''1'' is used for all original submissions even if a claim
  has been rejected.'
- '`claimFrequencyCode` ''7'' is used specifically if a payer denies a claim and corrections
  need to be made.'
- Test Production Data without Submitting for Processing
- The JSON attributes in our APIs use snake-case, with the first letter of the attribute
  in lower case as in claimInformation.
- Sending a claim with the usageIndicator is a valid way to test production data without
  submitting for processing.
- Ensure to use the correct control number format in requests.
- The encounter for the claim submission may involve the subscriber or a dependent.
- Test different Professional Claims Validation and Submission Responses
- API users need not enable metadata capability; it is automatic.
- The first response does not indicate whether the claim is being paid.
- Requires setup of connected app in OPTUM
- The /validation endpoint checks for the correct well-formed syntax of your submission.
- Do not send any claims until you have tested your submission process and validated
  your claim.
- When testing in the sandbox environment, you can only use sandbox API values and
  test responses.
- To submit a test claim, specify the usage indicator as 'T' so it will not go to
  the payers.
- Only one of the organization or individual provider information is allowed per provider
  object.
- Elements marked with 'R' in the Constraints column are required when applicable.
- Institutional Claims API JSON-to-EDI Contents
- A single Institutional Claim supports up to 999 service line items.
- Validation checks for well-formed syntax of the submission.
- The first response from the clearinghouse does not indicate whether the claim is
  being paid; it indicates acceptance of the claim.
- If not required by this implementation guide, do not send.
- This section describes the line-level information reporting that may be required
  if it differs or adds further detail to information provided at the claim level.
- Optum makes no warranties, express or implied, about completeness, accuracy, reliability,
  or availability regarding the content.
- Responses can be lengthy due to many data points.
- APIs translate between JSON and X12 EDI.
- Create an EDI 837p 5010 Claim for a Client-Primary and Secondary Insurances
- '`claimFrequencyCode` ''1'' is used for all original submissions even if a claim
  has been rejected'
- '`claimFrequencyCode` ''7'' is used specifically if a payer denies a claim and corrections
  need to be made'
- If a claim submission response is received with status **EDIT**, use `claimFrequencyCode`
  '7'
- Corrected claim should be sent for additional review if a claim is denied or partially
  paid
- Handle multiple authorization numbers per claim
- Both JSON and EDI endpoints use the same API request model with the same sets of
  attributes.
- The Institutional Claims v1 API does not directly support X12 EDI submissions.
- Uses a specific control number format for patient control number
- Test cases require exact match for specific fields
- In the sandbox environment, you can test claims only by using our sandbox predefined
  fields and values.
- Test Claims in Sandbox
- Test Prof. and Inst. Claims for PatientControlNumber in Sandbox
- Submit Claim with Remarks
- API requires the setup of connected app in optum
- Some endpoints may return nulls in deeply nested fields
- The /validation and /submission endpoints use the same request model.
- Avoid sending any claims until you have tested your submission process and validated
  your claim.
- 'The JSON would be: `usageIndicator`: "T".'
- 'If you submit `usageIndicator`: "T", the production transition will be flagged
  as a test claim and will not be sent to the payer.'
- The APIs translate back and forth between JSON and X12 EDI when the information
  departs into and returns from the medical network.
- Old PokitDok APIs is no longer supported
- Most Medicare have the Eligibility ID/Realtime ID of CMSMED
- The validation does not examine the actual contents of your claim.
- Claim Status API JSON-to-EDI Contents
- The first response from the clearinghouse does not indicate whether the claim is
  being paid.
- Security and Authorization V2
- Most Claim Status 277 responses will contain a header with several attributes.
- You can look up the entire statusCategoryCode table and its associated statusCategoryCodeValue
  table in the X12 EDI standards page.
- At least one of SV201 or SV202 is required in service lines.
- When your EDI formatted request is corrected and validated, use your normal claim
  submission workflow to submit the claim. The Institutional Claims v1 API does not
  directly support X12 EDI submissions.
- In the sandbox environment, you can test claims only by using sandbox predefined
  fields and values.
- APIs translate back and forth between JSON and X12 EDI
- Validation API is recommended before submitting the claim
- Most Medicare have the Eligibility ID/Realtime ID of CMSMED.
- Submit a ticket to our Registrations team through ConnectCenter or email to EDIEnrollmentSupport@optum.com
  for specifics.
- Claims API Best Practices and Workflow
- Bearer token lifespan is one hour (3600 seconds)
- API requests consume and produce application/json
- Some coding information is accessible only through copyrighted subscription and
  hence can't be fully described here.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Invalid Access Token
- 'INVALID_ACCESS_TOKEN: Ensure the access token is valid'
- '400: Check for required fields in the request'
- 'Unauthorized: Check if the access token is valid.'
- 'Not Found: Verify the endpoint URL.'
- 'Bad Request: Validate the request parameters.'
- Invalid Access Token Error in Sandbox
- 'Invalid request: Check request body structure.'
- 'Unauthorized: Ensure valid Bearer token is used.'
- 400 Bad Request
- 403 The requestor is forbidden to access this resource.
- 404 The resource could not be found.
- 412 The account resource does not exist.
- 429 The requestor has sent more requests within a given timeframe than allowed.
- 500 Internal Server Error.
- 502 An unexpected error occurred within a gateway.
- 503 The endpoint is not available, or an unknown endpoint has been requested.
- '400: Bad Request'
- '403: Forbidden'
- '404: Not Found'
- '412: Precondition Failed'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '502: Bad Gateway'
- '503: Service Unavailable'
- '504: Gateway Timeout'
- '401: Permission Denied'
- '422: Unprocessable Entity'
- '5XX: Unexpected Error'
- Bad request.
- Unauthorized.
- Not found.
- Unexpected error.
- Forbidden.
- Unprocessable Entity.
- Conflict.
- Ensure successful integration with your callback API by whitelisting specified IP
  addresses
- 'Eligibility API: Unable to Process the Request at this Time'
- 79 (Invalid Participant Identification) Error
- 'REJECTED_BY_PAYER: Address any possible issues before starting the transaction.'
- File type not supported
- '52: REJECTED_BY_PAYER: Attachment type not supported'
- Attachment rejected by print/fax facility
- code: '04'
  description: Authorized Quantity Exceeded
  followupAction: Please Correct and Resubmit
- code: '35'
  description: Out of Network
  followupAction: Do Not Resubmit; Inquiry Initiated to a Third Party
  location: Loop 2100C
  possibleResolutions: Provider is not in network provider for the subscriber's plan
- code: '42'
  description: Unable to Respond at Current Time
  followupAction: Do Not Resubmit; We Will Hold Your Request and Respond Again Shortly
  location: Loop 2100C
  possibleResolutions: Is what we call the catch-all error.First place to start is
    look at PIRs to see if payer is having issues processing. If no PIR for payer
    call Command Center and have them check the system see if they are seeing trouble
    with the payer.Follow standard troubleshooting flow if no issue happening with
    payer.
- code: '43'
  description: Invalid/Missing Provider Identification
  followupAction: Resubmission Not Allowed
  location: Loop 2100D
  possibleResolutions: Provider's NPI most likely is not registered with the payer,
    or not registered correctly with the payer, and the provider must contact payer
    directly to correct, Emdeon can not do this for them, it is a PHI/HIPPA restriction
- code: '45'
  description: Invalid/Missing Provider Specialty
  followupAction: Please Wait 30 Days and Resubmit
  location: Loop 2100D
  possibleResolutions: Provider's NPI not registered with the payer under the correct
    Specialty. Provider must contact payer directly to remedy this issue, due to PHI/HIPPA.
- code: '47'
  description: Invalid/Missing Provider State
  followupAction: Please Correct and Resubmit
  location: Loop 2100D
  possibleResolutions: Provider's address doesn't match what is listed with the payer
    or the NPPES system. Provider must contact payer directly to remedy this issue,
    due to PHI/HIPPA.
- code: '48'
  description: Invalid/Missing Referring Provider Identification Number
  followupAction: Do Not Resubmit; Inquiry Initiated to a Third Party
  location: Loop 2100D
  possibleResolutions: 'Referrals only: Referring provider''s NPI is either not registered
    with the payer, provider must contact payer directly, or Enrollment with Emdeon
    is incorrect, contact enrollment department.'
- code: '49'
  description: Provider is Not Primary Care Physician
  followupAction: Resubmission Not Allowed
  location: Loop 2100D
  possibleResolutions: 'Referrals only: Referring provider must be Primary Care Physician
    in some payer plans, insured must contact payer and set PCP in their system. Emdeon
    can not do this due to PHI/HIPPA guidelines.'
- code: '51'
  description: Provider Not on File
  followupAction: Please Correct and Resubmit
  location: Loop 2100C
  possibleResolutions: Provider is not registered with the payer, provider must call
    payer directly to register their NPI
- code: '52'
  description: Service Dates Not Within Provider Plan Enrollment
  followupAction: Do Not Resubmit; We Will Hold Your Request and Respond Again Shortly
  location: Loop 2100D
  possibleResolutions: Provider was not registered in the insured's plan with the
    payer, on the DOS listed in transaction.
- code: '57'
  description: Invalid/Missing Date(s) of Service
  followupAction: Do Not Resubmit; We Will Hold Your Request and Respond Again Shortly
  location: Loop 2100D
  possibleResolutions: DOS is not within allowable time frame, or DOS is missing in
    the 270
- code: '63'
  description: Date of Service in Future
  followupAction: Please Wait 30 Days and Resubmit
  location: Loop 2100C
  possibleResolutions: Some Payers do not accept DOS in the future check payer instruction
    tables for specs per payer.
- code: '72'
  description: Invalid/Missing Subscriber/Insured ID
  followupAction: Please Correct and Resubmit
  location: Loop 2100C
  possibleResolutions: Subscriber member ID is incorrect in the request being sent.
- code: '76'
  description: Duplicate Subscriber/Insured ID Number
  followupAction: Resubmission Not Allowed
  location: Loop 2100C
  possibleResolutions: Duplicate member ID is found in the payer database.
- code: T4
  description: Payer Name or Identifier Missing
  followupAction: Resubmission Allowed
  location: Loop 2100A
  possibleResolutions: Payer Name or Identifier Missing.
- 'HTTP 400: Bad Request - Indicates that there is an issue with the request body.'
- Unable to process the request at this time, please try again later
- Valid SubmitterId value must be passed
- trading partner not established for digital attachments, please provide a payerFaxNumber
  or payerAddress
- must not be blank
- BAD_CONTROL_NUMBER, ControlNumber has to be 9 digits.
- 'File:  is size 0, please submit a valid file.'
- Invalid document found, possible virus detected
- Required Segment Missing
- payerClaimControlNumber must be the same for solicited transactions for all attachments
- '*, ~, ^, : characters are not allowed'
- 'Unsupported File Type: (text/html). Please Use application/pdf, application/msword,
  application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/docx,  text/plain,
  text/rtf, application/rtf, application/xml, image/jpeg, image/gif, image/png, image/tiff,
  image/bmp'
- field: provider.validProviderCode
  description: 'Allowed Values are: ''AD'' Admitting, ''AT'' Attending, ''BI'' Billing,
    ''CO'' Consulting, ''CV'' Covering, ''H'' Hospital, ''HH'' Home Health Care, ''LA''
    Laboratory, ''OT'' Other Physician, ''P1'' Pharmacist, ''P2'' Pharmacy, ''PC''
    Primary Care Physician, ''PE'' Performing, ''R'' Rural Health Clinic, ''RF'' Referring,
    ''SB'' Submitting, ''SK'' Skilled Nursing Facility, ''SU'' Supervising'
- field: AAA
  code: '44'
  description: Invalid/Missing Provider Name
  followupAction: Please Correct and Resubmit
  location: Loop 2100D
  possibleResolutions: Provider's OrganizationName or LastName is required.
- field: subscriber.dateOfBirth
  description: 'Invalid date format. Please use the following format: yyyyMMdd.'
- field: AAA
  code: '71'
  description: Patient Birth Date Does Not Match That for the Patient on the Database
  followupAction: Please Correct and Resubmit
  location: Loop 2100C
  possibleResolutions: Patient Birth Date Does Not Match That for the Patient on the
    Database.
- field: patientId
  description: Invalid/Missing Patient ID.
- field: AAA
  code: '64'
  description: Invalid/Missing Patient ID
  followupAction: Please Correct and Resubmit
  location: Loop 2100C
  possibleResolutions: Patient ID is incorrect in the request being sent.
- Either `client_id` or `client_secret` are invalid, when using correct value for
  both.
- X-CHC-MN-Attachments-Payer Field is Mandatory
- X-CHC-MN-Attachments-Payer field is mandatory
- 406 Error when running Auth Token Example
- '79 (Invalid Participant Identification): CMSMED requires NPI enrollment before
  they reply to your requests.'
- NPI Error
- Other Payer Primary ID is Missing or Invalid
- Patient Account Number Validation Error
- The Patient Account Number must not be greater than 20 characters and must only
  contain alphanumeric characters, spaces, and !"&'()+,-./;?=%@[]{}#$
- Patient Eligibility not Found with Entity
- field: claimInformation.validHealthCareCodeInformation
  description: First healthCareCodeInformation.diagnosisTypeCode list item value must
    equal 'BK' or 'ABK' and subsequent values must equal 'BF' or 'ABF'
- field: claimInformation.healthCareCodeInformation[0].validCodeCategory
  description: 'Allowed Values are: ''BK'' International Classification of Diseases
    Clinical Modification (ICD-9-CM) Principal Diagnosis, ''ABK'' International Classification
    of Diseases Clinical Modification (ICD-10-CM) Principal Diagnosis, ''BF'' International
    Classification of Diseases Clinical Modification (ICD-9-CM) Diagnosis, ''ABF''
    International Classification of Diseases Clinical Modification (ICD-10-CM) Diagnosis'
- field: 01-2
  value: '46'
  code: BK
  description: 'When entered, the Diagnosis Code must be valid.


    Note: The decimal point is not allowed in the diagnosis code.


    LOOP 2300 HI'
  location: 2300 HI
- field: '02'
  value: '22.75'
  description: 'The Total Claim Charge Amount must balance to the sum of all the Service
    Line Charge Amounts.


    LOOP 2300 CLM02'
  location: 2300 CLM
- '400: Bad Request - The request body contains mistakes'
- '401: Unauthorized - Invalid authentication credentials'
- '403: Forbidden - Access denied to the requested resource'
- 'DNS Error: Please see documentation for more information.'
- Check the headers for any typos or unexpected values.
- Validate your JSON to make sure it is properly formatted.
- 'Invalid Access Token: Requesting for new access token may resolve the issue.'
- Professional Claims Error Messages
- 'INVALID_MISSING_INPUT_DATA: Value provided in payer ID should be a valid Optum-assigned
  ERA payer Id.'
- 'INVALID_VALUE: Attribute that is bad.'
- 'INVALID_ACCESS_TOKEN: Token may be expired or invalid'
- invalid access token error
- '400 Bad Request: Authorization header is missing'
- '401 Unauthorized: Invalid or expired token'
- 'INVALID_VALUE: Code for the error.'
- 'AAA errors: Follow action required for the error.'
- Either client_id or client_secret are invalid, when using correct value for both.
- '79 (Invalid Participant Identification): Eligibility v3 API throws this error when
  the CMSMED is passed as the tradingPartnerServiceId.'
- '400 Bad Request: Missing Authorization header.'
- '401 Unauthorized: Invalid or expired token.'
- '79 (Invalid Participant Identification): Check tradingPartnerServiceId value.'
- Either client_id or client_secret are invalid, when using correct value for both
- '79 (Invalid Participant Identification): Check if CMSMED is passed as the tradingPartnerServiceId'
- 'EDITS: Check for missing required fields in the submission.'
- 'INVALID_REQUEST: Ensure JSON structure follows the API requirements.'
- 'INVALID_ACCESS_TOKEN: Recheck OAuth token validity'
- '400: Missing or invalid data or parameters in the request.'
- 'invalid_request: Ensure the API is added to your sandbox entitlement/credentials.'
- 'missing patient information: If the patient is the subscriber, only the subscriber
  details would be present.'
- 'EDITS: Indicates issues with the submitted claim. Check the request format and
  values.'
- 'EDITS: Review fields for missing or incorrect data'
- 'EDITS: Canned response for incorrect patientControlNumber in sandbox.'
- HTTP Error Response Codes
- 'OTHER PAYER PRIMARY ID# IS MISSING OR INVALID: Ensure payer ID is correct'
- 'Syntax error: Review claim data for formatting issues'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - Bearer token
  - Bearer token lifespan
  - Bearer token request header
  - Bearer token request
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Adaptive Questionnaire Service
  - Assessment-Bank
  - Answer-Bank
  - Provider EHR
  - bearer authorization token
  - oAuth
  - Bearer
client:
  base_url: https://developer.optum.com
  auth:
    type: oauth2
source_metadata: null
