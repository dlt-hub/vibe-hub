resources:
- name: deps-in-workflow
  endpoint:
    path: /deps-in-workflow
    method: GET
    data_selector: records
    params: {}
- name: disable
  endpoint:
    path: /disable
    method: GET
    data_selector: records
    params: {}
- name: enable
  endpoint:
    path: /enable
    method: GET
    data_selector: records
    params: {}
- name: fix
  endpoint:
    path: /fix
    method: GET
    data_selector: records
    params: {}
- name: install
  endpoint:
    path: /install
    method: GET
    data_selector: records
    params: {}
- name: install-deps
  endpoint:
    path: /install-deps
    method: GET
    data_selector: records
    params: {}
- name: reinstall
  endpoint:
    path: /reinstall
    method: GET
    data_selector: records
    params: {}
- name: restore-dependencies
  endpoint:
    path: /restore-dependencies
    method: GET
    data_selector: records
    params: {}
- name: restore-snapshot
  endpoint:
    path: /restore-snapshot
    method: GET
    data_selector: records
    params: {}
- name: save-snapshot
  endpoint:
    path: /save-snapshot
    method: GET
    data_selector: records
    params: {}
- name: show
  endpoint:
    path: /show
    method: GET
    data_selector: records
    params: {}
- name: simple-show
  endpoint:
    path: /simple-show
    method: GET
    data_selector: records
    params: {}
- name: uninstall
  endpoint:
    path: /uninstall
    method: GET
    data_selector: records
    params: {}
- name: update
  endpoint:
    path: /update
    method: GET
    data_selector: records
    params: {}
- name: custom_nodes
  endpoint:
    path: path/custom_nodes
    method: GET
- name: nodes
  endpoint:
    path: /development/core-concepts/nodes
    method: GET
    data_selector: nodes
    params: {}
- name: install_git
  endpoint:
    path: /install_git
    method: GET
- name: clone_repository
  endpoint:
    path: /clone_repository
    method: GET
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
    params: {}
- name: custom_nodes
  endpoint:
    path: /api/custom_nodes
    method: GET
    data_selector: nodes
    params: {}
- name: python_dependencies
  endpoint:
    path: /api/python_dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: custom_nodes
  endpoint:
    path: path/custom_nodes
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
- name: custom_nodes
  endpoint:
    path: /custom_nodes
    method: GET
    data_selector: data
- name: python_dependencies
  endpoint:
    path: /python_dependencies
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: data
- name: custom_node_issues
  endpoint:
    path: /troubleshooting/custom-node-issues
    method: GET
- name: generation_failures
  endpoint:
    path: /troubleshooting/generation-fails-or-produces-errors
    method: GET
- name: slow_performance
  endpoint:
    path: /troubleshooting/slow-performance
    method: GET
- name: SD1.5 model
  endpoint:
    path: /models/checkpoints
    method: GET
    data_selector: models
    params: {}
- name: messages
  endpoint:
    path: /development/comfyui-server/comms_messages
    method: GET
    data_selector: messages
    params: {}
- name: prompt
  endpoint:
    path: /prompt
    method: post
- name: queue
  endpoint:
    path: /queue
    method: post
- name: upload_image
  endpoint:
    path: /upload/image
    method: post
- name: upload_mask
  endpoint:
    path: /upload/mask
    method: post
- name: history
  endpoint:
    path: /history
    method: post
- name: free_memory
  endpoint:
    path: /free
    method: post
- name: model_architecture_mismatch
  endpoint:
    path: /troubleshooting/model-architecture-mismatch
    method: GET
    data_selector: model_mismatch_info
- name: missing_models_error
  endpoint:
    path: /troubleshooting/missing-models-error
    method: GET
    data_selector: missing_models_info
- name: model_loading_errors
  endpoint:
    path: /troubleshooting/model-loading-errors
    method: GET
    data_selector: model_loading_info
- name: model_performance_issues
  endpoint:
    path: /troubleshooting/model-performance-issues
    method: GET
    data_selector: performance_issues_info
- name: workflow
  endpoint:
    path: /prompt
    method: POST
    data_selector: prompt
- name: text_to_image_workflow
  endpoint:
    path: /api/v1/text_to_image
    method: POST
    data_selector: results
- name: Image Selector
  endpoint:
    path: /custom_nodes/ImageSelector
    method: POST
    data_selector: result
    params: {}
- name: workflow_templates
  endpoint:
    path: /api/workflow_templates
    method: GET
- name: messages
  endpoint:
    path: /development/comfyui-server/comms_messages
    method: GET
    data_selector: events
    params: {}
- name: prompt
  endpoint:
    path: /prompt
    method: POST
- name: queue
  endpoint:
    path: /queue
    method: GET
- name: users
  endpoint:
    path: /users
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
- name: Comfy Workflows
  endpoint:
    path: /comfy/workflows
    method: GET
    data_selector: results
    params: {}
- name: custom_node
  endpoint:
    path: /registry/specifications
    method: GET
    data_selector: nodes
- name: Image Selector
  endpoint:
    path: /custom-nodes
    method: GET
    data_selector: nodes
    params: {}
- name: workflow_templates
  endpoint:
    path: /api/workflow_templates
    method: GET
- name: pyproject
  endpoint:
    path: /registry/specifications
    method: GET
- name: Claim My Node
  endpoint:
    path: /registry/claim-my-node
    method: GET
    data_selector: node_details
    params: {}
- name: super-resolution-node
  endpoint:
    path: /registry/publishing
    method: GET
    data_selector: records
notes:
- ComfyUI's latest features, improvements, and bug fixes
- ComfyUI is still in rapid iteration and development, and some operations mentioned
  may change or be omitted.
- 'Currently, ComfyUI supports installing custom nodes through multiple methods, including:
  Install via ComfyUI Manager (Recommended), Install via Git, Manual installation.'
- Models are essential building blocks for media generation workflows.
- Models are not included in the ComfyUI installation, but ComfyUI can often automatically
  download and install missing model files.
- ComfyUI is still in rapid iteration and development, some operations may change
  or be omitted.
- ComfyUI workflows can only run normally when all relevant dependencies are satisfied.
- Models can be extremely large files relative to image files.
- Normal login only works when accessing from localhost
- 'For LAN/remote access: Generate API key at platform.comfy.org/login'
- Ensure your system meets the minimum requirements
- Check if it’s a custom node issue
- 'If you use Git to update ComfyUI, you need to run the following command in the
  corresponding environment after pulling the latest updates: pip install -r requirements.txt.'
- Templates provide model workflows natively supported by ComfyUI and example workflows
  from custom nodes.
- Currently, only links from Hugging Face and Civitai are supported. The model format
  must be a safe format such as .safetensors or .sft.
- Common issues include workflows not executing, some nodes can’t show preview images,
  misaligned UI elements, unable to access ComfyUI frontend, completely broken UI
  or blank screen, unable to communicate normally with ComfyUI backend.
- ComfyUI runs in a separate Python environment
- ComfyUI Desktop currently supports standalone installation for Windows and MacOS
  (ARM), currently in Beta
- Because Desktop is always built based on the stable release, the latest updates
  may take some time to experience for Desktop
- Check API key validity in user settings
- Requires at least one SD1.5 model file in your ComfyUI/models/checkpoints folder
- An extension can register to receive events using the api.addEventListener method.
- The node_id is available on the server side through a hidden input.
- Using models from different architecture families together may cause tensor dimension
  errors.
- Checkpoints must match the architecture of the base model.
- Execution order has always changed depending on which nodes happen to have which
  IDs, but it may now change depending on which values are cached as well.
- Common issues include workflows not executing and misaligned UI elements.
- This guide introduces some system requirements for ComfyUI, including hardware and
  software requirements.
- Due to frequent updates of ComfyUI, this document may not be updated in a timely
  manner.
- Using API Key to call ComfyUI’s built-in API nodes requires sufficient account credits.
- We track usage of the CLI to improve the user experience.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires at least one SD1.5 model file in the ComfyUI/models/checkpoints folder.
- Each generation will produce different results based on the random seed.
- Custom nodes need to be registered in NODE_CLASS_MAPPINGS.
- Restart ComfyUI to see any changes made to nodes.
- Custom nodes can include rich markdown documentation that will be displayed in the
  UI instead of the generic node description.
- An extension can register to receive events following the standard Javascript idiom.
- Most of the built-in messages include the current node id in the value of `node`.
- Claims are automatically processed based on GitHub admin permissions.
- Only users with admin access to the original repository can successfully claim nodes.
- The server defines a series of get and post methods which can be found by searching
  for @routes in server.py.
- Don’t rely on the execution order.
- Custom nodes must provide valuable functionality to the ComfyUI community
- Do not interfere with other custom nodes’ operations (installation, updates, removal)
- Must comply with all applicable laws and regulations
- Nodes must be fully functional, well documented, and actively maintained
- Forked nodes must have clearly distinct names from original and provide significant
  differences in functionality or code
- Custom nodes should be secure
- You still need to install CUDA, or ROCm depending on your GPU.
- Uses OAuth2 with refresh token — requires setup of connected app in ComfyUI
- Some objects may return nulls in deeply nested fields
- 'A custom node is defined using a Python class, which must include these four things:
  CATEGORY, INPUT_TYPES, RETURN_TYPES, and FUNCTION.'
- Custom nodes should be secure.
- The use of eval and exec functions is prohibited in custom nodes due to security
  concerns.
- Runtime package installation through subprocess calls is not permitted.
- Code obfuscation is prohibited in custom nodes.
- Output files are uploaded to the CI/CD Dashboard and can be viewed as a last step
  before committing new changes or publishing new versions of the custom node.
- Some objects like Contact may return nulls in deeply nested fields
errors:
- Check API key validity - Verify keys in user settings
- Check account credits - Ensure sufficient API credits
- Verify internet connection - Test with other online services
- Check service status - Provider may be experiencing downtime
- 'Failed to connect to server: Check firewall settings'
- 'Timeout errors: Test with other online services'
- 'timeout errors: Verify internet connection'
- 'quota exceeded: Check account credits'
- 'Timeout errors: Try different port, default is 8188'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Failed to connect to server: Check firewall settings or try different port'
- 'REQUEST_LIMIT_EXCEEDED: Check API key validity or account credits'
- '401 Unauthorized: Recheck API key or permissions'
- Tensor dimension errors during generation.
- 'CheckpointLoaderSimple: Value not in list.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'execution_error: When an error occurs during execution'
- 'execution_interrupted: When execution is stopped by a node raising `InterruptProcessingException`'
- 'execution_success: When all nodes from the prompt have been successfully executed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://docs.comfy.org
source_metadata: null
