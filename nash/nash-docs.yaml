resources:
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
    data_selector: null
    params: {}
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: null
    params: {}
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
    data_selector: null
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: null
    params: {}
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
    data_selector: null
    params: {}
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: null
    params: {}
- name: refresh_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
    data_selector: null
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: null
    params: {}
- name: Create Order
  endpoint:
    path: /api-reference/order/create-order
    method: POST
- name: Select Quote
  endpoint:
    path: /api-reference/job/select-quote
    method: POST
- name: webhooks
  endpoint:
    path: /reference/webhooks
    method: POST
- name: Create Order
  endpoint:
    path: /api-reference/order/create-order
    method: POST
- name: Autodispatch Order
  endpoint:
    path: /api-reference/order/autodispatch-order
    method: POST
- name: Select Quote
  endpoint:
    path: /api-reference/order/select-quote
    method: POST
- name: Get Job
  endpoint:
    path: /api-reference/job/get-job
    method: GET
- name: Update Job
  endpoint:
    path: /api-reference/job/update-job-by-job-id-and-job-configuration-id
    method: PUT
- name: Cancel Job
  endpoint:
    path: /api-reference/job/cancel-job-by-job-id-and-job-configuration-id
    method: DELETE
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: delivery_status
  endpoint:
    path: /api/v1/delivery-status
    method: GET
    data_selector: statuses
- name: webhook
  endpoint:
    path: /settings/webhook-management
    method: POST
    data_selector: Webhook response
    params: {}
- name: live_tracking
  endpoint:
    path: /{packageId}
    method: GET
    data_selector: live tracking data
    params: {}
- name: delivery_status
  endpoint:
    path: /delivery/status
    method: GET
    data_selector: statuses
- name: live_tracking
  endpoint:
    path: /{packageId}
    method: GET
    data_selector: details
    params:
      components: map
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
    data_selector: null
    params: {}
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: null
    params: {}
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
    data_selector: null
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: null
    params: {}
- name: dispatch_strategies
  endpoint:
    path: /api-reference/dispatch-strategies/get-dispatch-strategies
    method: GET
- name: create_dispatch_strategy
  endpoint:
    path: /api-reference/dispatch-strategies/create-dispatch-strategy
    method: POST
- name: update_dispatch_strategy
  endpoint:
    path: /api-reference/dispatch-strategies/update-dispatch-strategy
    method: PATCH
- name: order
  endpoint:
    path: /api-reference/order/order
    method: GET
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
    data_selector: null
    params: {}
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: null
    params: {}
- name: refresh_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
    data_selector: null
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: null
    params: {}
- name: order_requirements
  endpoint:
    path: /api-reference/order/order-requirements
    method: GET
- name: dispatch_strategies
  endpoint:
    path: /api-reference/dispatch-strategies/get-dispatch-strategies
    method: GET
- name: create_dispatch_strategy
  endpoint:
    path: /api-reference/dispatch-strategies/create-dispatch-strategy
    method: POST
- name: update_dispatch_strategy
  endpoint:
    path: /api-reference/dispatch-strategies/update-dispatch-strategy
    method: PATCH
- name: Create Order
  endpoint:
    path: /api-reference/order/create-order
    method: POST
- name: Get Order
  endpoint:
    path: /api-reference/order/get-order
    method: GET
- name: Update Order
  endpoint:
    path: /api-reference/order/update-order
    method: PATCH
- name: Archive Order
  endpoint:
    path: /api-reference/order/archive-order
    method: DEL
- name: order
  endpoint:
    path: /api-reference/order
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: order
    params: {}
- name: order_requirements
  endpoint:
    path: /api-reference/order/order-requirements
    method: GET
    data_selector: requirements
    params: {}
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: id
- name: order
  endpoint:
    path: /ord_1234567890
    method: GET
    data_selector: status
    params: {}
- name: order_validations
  endpoint:
    path: /api-reference/order/order-validations
    method: GET
    data_selector: validations
    params: {}
- name: orders
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: orders
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: id
    params: {}
- name: get_order
  endpoint:
    path: /order/get-order
    method: GET
    data_selector: id
    params: {}
- name: create_or_update_order
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
    data_selector: id
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: id
- name: order
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /ord_1234567890
    method: GET
    data_selector: status
- name: quotes
  endpoint:
    path: /api-reference/order/quotes
    method: GET
    data_selector: quotes
- name: failed_quotes
  endpoint:
    path: /api-reference/order/failed-quotes
    method: GET
    data_selector: failedQuotes
- name: orders
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: orders
- name: order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
    data_selector: data
- name: order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
    data_selector: order
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
    data_selector: id
- name: order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: quotes
    params: {}
- name: get_quotes
  endpoint:
    path: /v1/order/get_quotes
    method: POST
    data_selector: quotes
    params: {}
- name: order
  endpoint:
    path: /v1/order/get_order
    method: GET
    data_selector: order
    params: {}
- name: order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: get_quotes
  endpoint:
    path: /v1/order/get_quotes
    method: POST
    data_selector: quotes
    params: {}
- name: order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /api-reference/order/get-order
    method: GET
    data_selector: status
- name: order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
    data_selector: documents
    params:
      loadData: true
- name: order
  endpoint:
    path: /api-reference/order/create-or-update-order-by-external-identifier
    method: POST
    data_selector: order
    params: {}
- name: get_order
  endpoint:
    path: /api-reference/order/get-order
    method: GET
    data_selector: order
    params: {}
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: id
    params: {}
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
    data_selector: quotes
    params: {}
- name: get_quotes
  endpoint:
    path: /v1/order/get_quotes
    method: POST
    data_selector: quotes
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: get_quotes
  endpoint:
    path: /v1/order/get_quotes
    method: POST
    data_selector: quotes
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: job
- name: order
  endpoint:
    path: /api-reference/order/get-order
    method: GET
    data_selector: status
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
    data_selector: event
    params: {}
- name: order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
    data_selector: ''
    params:
      loadData: 'true'
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
    data_selector: id
    params: {}
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
    data_selector: id
    params: {}
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
    data_selector: quotes
    params:
      orderId: ord_1234567890
      externalOrderId: ext_1234567890
- name: order_unarchive
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: order
  endpoint:
    path: /api-reference/order/order
    method: POST
- name: dispatch_strategy
  endpoint:
    path: /api-reference/dispatch-strategies/get-dispatch-strategies
    method: GET
- name: notification
  endpoint:
    path: /api-reference/notifications/notifications
    method: GET
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
    data_selector: records
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
    data_selector: id
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
    data_selector: event
    params: {}
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
- name: order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
    data_selector: id
    params: {}
- name: notifications
  endpoint:
    path: /api-reference/notifications/notifications
    method: GET
    data_selector: notifications
- name: add_contact_to_deny_list
  endpoint:
    path: /api-reference/notifications/add-a-contact-to-the-deny-list
    method: POST
    data_selector: response
- name: get_contacts_in_deny_list
  endpoint:
    path: /api-reference/notifications/get-contacts-in-the-deny-list
    method: GET
    data_selector: contacts
- name: remove_contact_from_deny_list
  endpoint:
    path: /api-reference/notifications/remove-a-contact-from-the-deny-list
    method: DEL
    data_selector: response
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
    data_selector: id
- name: order_unarchive
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: '[]'
    params:
      page: 0
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
    data_selector: success
- name: dispatch_strategies
  endpoint:
    path: /api-reference/dispatch-strategies/get-dispatch-strategies
    method: GET
    data_selector: records
- name: store_location
  endpoint:
    path: /v1/store_locations
    method: POST
    data_selector: records
- name: get_store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: GET
    data_selector: records
- name: get_store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
    data_selector: records
- name: dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
    data_selector: records
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: store_location
  endpoint:
    path: /v1/store_locations
    method: POST
    data_selector: id
    params: {}
- name: dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
    data_selector: id
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: PATCH
    data_selector: integrationMetadata
    params: {}
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: PATCH
    data_selector: null
    params: {}
- name: notifications
  endpoint:
    path: /api-reference/notifications/notifications
    method: GET
- name: add_contact_to_deny_list
  endpoint:
    path: /api-reference/notifications/add-a-contact-to-the-deny-list
    method: POST
- name: get_contacts_in_deny_list
  endpoint:
    path: /api-reference/notifications/get-contacts-in-the-deny-list
    method: GET
- name: remove_contact_from_deny_list
  endpoint:
    path: /api-reference/notifications/remove-a-contact-from-the-deny-list
    method: DEL
- name: store_location
  endpoint:
    path: /v1/store_locations/external-identifier/{externalIdentifier}
    method: POST
    data_selector: response
    params: {}
- name: deny_list_contact
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
    data_selector: id
    params: {}
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: records
    params:
      page: 0
- name: store_locations
  endpoint:
    path: /v1/store_locations/external-identifier/{externalIdentifier}
    method: POST
    data_selector: id
    params: {}
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
    data_selector: success
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: GET
    data_selector: records
    params: {}
- name: store_location
  endpoint:
    path: /v1/store_locations
    method: POST
    data_selector: id
    params: {}
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
    data_selector: storeLocations
    params:
      offset: 0
- name: store_location
  endpoint:
    path: /v1/store_locations
    method: POST
    data_selector: id
    params: {}
- name: store_location
  endpoint:
    path: /v1/store_locations/external_identifier/{externalIdentifier}
    method: GET
    data_selector: records
    params: {}
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: PATCH
    data_selector: store_location
    params: {}
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: DELETE
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: PATCH
    data_selector: id
    params: {}
- name: store_locations_coverage
  endpoint:
    path: /v1/store_locations/coverage
    method: GET
    data_selector: results
    params:
      latitude: '0.00'
      longitude: '0.00'
      cityZipcode: sanfrancisco_94114
      zipcode: '94114'
- name: store_location
  endpoint:
    path: /v1/store_locations/external-identifier/{externalIdentifier}
    method: POST
    data_selector: id
- name: get_store_location
  endpoint:
    path: /v1/store_locations/get-store-location
    method: GET
    data_selector: location
- name: store_location
  endpoint:
    path: /v1/store_locations/external-identifier/{externalIdentifier}
    method: POST
    data_selector: id
    params: {}
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: GET
    data_selector: id
- name: zones
  endpoint:
    path: /v1/zones
    method: POST
    data_selector: id
    params: {}
- name: zone
  endpoint:
    path: /v1/zones/{id}
    method: PATCH
    data_selector: id
- name: store_location
  endpoint:
    path: /store_locations
    method: GET
    data_selector: storeLocations
    params:
      size: 10
      offset: 0
- name: zone
  endpoint:
    path: /v1/zones/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: store_location
  endpoint:
    path: /v1/store_locations/external_identifier/{externalIdentifier}
    method: GET
    data_selector: store location
- name: zone
  endpoint:
    path: /v1/zones/{id}
    method: GET
    data_selector: zone
- name: store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: store_locations_coverage
  endpoint:
    path: /v1/store_locations/coverage
    method: GET
    data_selector: records
    params: {}
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: zones
    params:
      isDeleted: false
      offset: 0
- name: zone
  endpoint:
    path: /v1/zones/external_identifier/{externalIdentifier}
    method: GET
    data_selector: id
    params: {}
- name: zones_coverage
  endpoint:
    path: /v1/zones/coverage
    method: GET
    data_selector: zones
    params: {}
- name: zone
  endpoint:
    path: /v1/zones
    method: POST
    data_selector: id
    params: {}
- name: store_location
  endpoint:
    path: /store-locations
    method: GET
    data_selector: storeLocations
    params: {}
- name: zone
  endpoint:
    path: /v1/zones/{id}
    method: PATCH
    data_selector: null
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: jobs
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: zone
  endpoint:
    path: /v1/zones/{id}
    method: DELETE
    data_selector: id
- name: job
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: job
    params: {}
- name: zone
  endpoint:
    path: /v1/zones/{id}
    method: GET
    data_selector: id
- name: jobs
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: jobs
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: zones
    params:
      isDeleted: 'false'
- name: job
  endpoint:
    path: /api-reference/order/create-order
    method: POST
    data_selector: jobConfigurations
    params: {}
- name: zone
  endpoint:
    path: /v1/zones/external_identifier/{externalIdentifier}
    method: GET
    data_selector: ''
- name: create_job
  endpoint:
    path: /api/v1/jobs
    method: POST
- name: zones_coverage
  endpoint:
    path: /v1/zones/coverage
    method: GET
    data_selector: zones
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: POST
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: POST
    data_selector: id
- name: jobs
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /api-reference/job/create-job
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: jobs
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: id
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: job
    params: {}
- name: update_job
  endpoint:
    path: /api/job/update
    method: POST
    data_selector: application/json
    params: {}
- name: get_job
  endpoint:
    path: /api/job/get
    method: GET
    data_selector: application/json
    params: {}
- name: create_job
  endpoint:
    path: /api-reference/job/create-or-update-job
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: create_or_update_job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: POST
    data_selector: response
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
    data_selector: id
- name: jobs
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: POST
    data_selector: id
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: job
  endpoint:
    path: /api-reference/job/create-job
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /portal/job_abc123
    method: GET
    data_selector: id
    params: {}
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: data
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
    data_selector: id
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: id
    params: {}
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: update_job
  endpoint:
    path: /api/job/update
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
    data_selector: id
    params: {}
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: data
- name: job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
    data_selector: job
    params:
      externalIdentifier: string
- name: jobs
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: none
    params: {}
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /portal/job_abc123
    method: GET
    data_selector: jobMetadata
    params: {}
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
- name: reassign_task
  endpoint:
    path: /api/reassign_task
    method: POST
    data_selector: application/json
    params:
      jobId: string
      taskId: string
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: null
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: response
    params: {}
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: jobs
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: null
    params: {}
- name: autodispatch_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
- name: job
  endpoint:
    path: /jobs
    method: POST
    data_selector: jobConfigurations
    params: {}
- name: reassign_task
  endpoint:
    path: /reassign-task
    method: POST
    data_selector: application/json
    params:
      jobId: string
      taskId: string
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
    data_selector: job
- name: job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
    data_selector: job
    params: {}
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
    data_selector: job
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
    data_selector: job
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
    data_selector: job
- name: cancel_job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
    data_selector: job
- name: autodispatch_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
    data_selector: response
    params: {}
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
- name: refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
    data_selector: '[]'
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
- name: refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
    data_selector: response
    params: {}
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: packages
- name: job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: packages
    params: {}
- name: cancel_job
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: packages
- name: delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
    data_selector: records
- name: refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
- name: batch_job
  endpoint:
    path: /api-reference/job/create-job
    method: POST
    data_selector: batch
    params: {}
- name: refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
    data_selector: response
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
    data_selector: records
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: packages
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: quote
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: jobConfiguration
  endpoint:
    path: /jobConfigurations
    method: GET
    data_selector: records
    params: {}
- name: optionsGroup
  endpoint:
    path: /optionsGroup
    method: GET
    data_selector: records
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
    data_selector: records
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: packages
- name: update_job
  endpoint:
    path: /api-reference/job/update-job-by-id
    method: POST
    data_selector: application/json
    params: {}
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: packages
    params: {}
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: job
  endpoint:
    path: /portal/job_abc123
    method: GET
    data_selector: jobMetadata
    params: {}
- name: select_quote
  endpoint:
    path: /select_quote
    method: POST
    data_selector: job
    params: {}
- name: batch_job
  endpoint:
    path: /api-reference/job/create-job
    method: POST
    data_selector: batch
    params: {}
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
    data_selector: quotes
- name: update_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
    data_selector: job
    params: {}
- name: cancel_batch_job
  endpoint:
    path: /api-reference/batch-job/cancel-job-by-job-id-and-task-or-job-configuration-id
    method: POST
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: jobConfigurations
  endpoint:
    path: /jobConfigurations
    method: GET
    data_selector: jobConfigurations
- name: optionsGroup
  endpoint:
    path: /optionsGroup
    method: GET
    data_selector: optionsGroup
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
    data_selector: job
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
    data_selector: id
- name: providers
  endpoint:
    path: /v1/providers
    method: GET
    data_selector: '[].providerId'
- name: update_job
  endpoint:
    path: /api-reference/job/update-job-by-id
    method: POST
    data_selector: application/json
    params: {}
- name: route
  endpoint:
    path: /v1/routes/{id}
    method: GET
    data_selector: id
- name: shift
  endpoint:
    path: /v1/shift
    method: POST
    data_selector: ''
    params: {}
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: job
    params: {}
- name: shifts
  endpoint:
    path: /v1/shifts
    method: GET
    data_selector: shifts
    params:
      startTime: required
      endTime: required
      storeLocationId: optional
      externalStoreLocationId: optional
- name: select_quote
  endpoint:
    path: /select_quote
    method: POST
    data_selector: job
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
    data_selector: quotes
- name: shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
    data_selector: id
    params: {}
- name: all_shifts
  endpoint:
    path: /v1/shift
    method: GET
    data_selector: shifts
    params: {}
- name: templates
  endpoint:
    path: /v1/templates/upsert
    method: POST
    data_selector: templates
- name: cancel_batch_job
  endpoint:
    path: /api-reference/batch-job/cancel-job-by-job-id-and-task-or-job-configuration-id
    method: POST
- name: products
  endpoint:
    path: /v1/products
    method: POST
- name: inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
    data_selector: job
- name: server_health_check
  endpoint:
    path: /v1/health-check
    method: GET
    data_selector: response
- name: providers
  endpoint:
    path: /v1/providers
    method: GET
    data_selector: providers
- name: route
  endpoint:
    path: /v1/routes/{id}
    method: GET
    data_selector: stops
- name: shift
  endpoint:
    path: /v1/shift
    method: POST
    data_selector: id
    params: {}
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: shifts
  endpoint:
    path: /v1/shifts
    method: GET
    data_selector: shifts
    params:
      startTime: '2025-05-01T00:00:00Z'
      endTime: '2025-06-01T00:00:00Z'
- name: shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
    data_selector: records
- name: templates
  endpoint:
    path: /v1/templates/upsert
    method: POST
    data_selector: templates
- name: products
  endpoint:
    path: /v1/products
    method: POST
    data_selector: records
- name: inventory
  endpoint:
    path: /v1/inventory
    method: POST
    data_selector: records
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: server_health_check
  endpoint:
    path: /v1/health-check
    method: GET
    data_selector: response
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: get_contacts_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: autodispatch_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: get_refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
- name: get_refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
- name: job
  endpoint:
    path: /api-reference/job/jobs
    method: GET
    data_selector: Job
    params: {}
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window_order
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window_order
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window_order
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: cancel_job_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
    data_selector: response
    params: {}
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: response
    params: {}
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
    data_selector: response
    params: {}
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: response
    params: {}
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
    data_selector: response
    params: {}
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
    data_selector: response
    params: {}
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: response
    params: {}
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
    data_selector: response
    params: {}
- name: job
  endpoint:
    path: /v1/jobs
    method: GET
    data_selector: Job
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: Job
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: get_refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
- name: get_refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: job
  endpoint:
    path: /api-reference/job/jobs
    method: GET
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
    data_selector: response
    params: {}
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
    data_selector: response
    params: {}
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
    data_selector: response
    params: {}
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: response
    params: {}
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
    data_selector: response
    params: {}
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
    data_selector: response
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{jobId}
    method: GET
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: server_health_check
  endpoint:
    path: /api-reference/miscellaneous/server-health-check
    method: GET
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: add_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: remove_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
- name: add_custom_event
  endpoint:
    path: /v1/order/{id}/events
    method: POST
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: autodispatch_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: get_refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
- name: get_refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
- name: job
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: Job
    params: {}
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: Task
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
- name: get_bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: job
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: server_health_check
  endpoint:
    path: /v1/server_health_check
    method: GET
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: contacts
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
    data_selector: result
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
    data_selector: result
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: order
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: order
- name: job
  endpoint:
    path: /v1/jobs
    method: GET
    data_selector: jobs
- name: task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: tasks
- name: quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: quotes
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: job
  endpoint:
    path: /v1/jobs
    method: GET
    data_selector: jobs
- name: task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}
    method: GET
    data_selector: tasks
- name: quote
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/quotes
    method: GET
    data_selector: quotes
- name: job
  endpoint:
    path: /v1/jobs/{jobId}
    method: GET
    data_selector: Job
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: server_health_check
  endpoint:
    path: /v1/health_check
    method: GET
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: contacts
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
    data_selector: result
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
    data_selector: result
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: order
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: order
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
    data_selector: result
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: contacts
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
- name: order
  endpoint:
    path: /api/order
    method: POST
    data_selector: id
    params: {}
- name: order_address_validation
  endpoint:
    path: /order/order-address-validation-geocoding
    method: GET
    data_selector: address_validation_data
- name: order_requirements
  endpoint:
    path: /order/order-requirements
    method: GET
    data_selector: requirements_data
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: job
  endpoint:
    path: /v1/jobs
    method: GET
    data_selector: jobs
- name: task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}
    method: POST
    data_selector: tasks
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: contacts
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
    data_selector: result
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
    data_selector: result
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: order
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: order
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
    data_selector: result
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: result
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
    data_selector: order
- name: create_orders
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: orders
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
    data_selector: bulk_status
- name: get_bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
    data_selector: response
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
    data_selector: documents
- name: get_order_quotes
  endpoint:
    path: /v1/order/get_quotes
    method: POST
    data_selector: quotes
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: autodispatch_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: get_refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
- name: get_refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
- name: order
  endpoint:
    path: /api/v1/orders
    method: POST
    data_selector: order
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{jobId}
    method: POST
    data_selector: ''
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: ''
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
    data_selector: ''
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: ''
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: ''
- name: server_health_check
  endpoint:
    path: /v1/server_health_check
    method: GET
    data_selector: ''
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: create_orders
  endpoint:
    path: /v1/orders
    method: POST
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
- name: job
  endpoint:
    path: /v1/jobs
    method: GET
    data_selector: jobs
- name: task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: task
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
    data_selector: quotes
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: selected_quote
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: updated_job
- name: order
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: address_validation
  endpoint:
    path: /order/address-validation
    method: POST
    data_selector: validation
    params: {}
- name: deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: contacts
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: upsert_order_by_external_identifier_with_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window
    method: POST
- name: get_providers
  endpoint:
    path: /v1/providers
    method: GET
- name: get_route
  endpoint:
    path: /v1/routes/{id}
    method: GET
- name: create_shift
  endpoint:
    path: /v1/shift
    method: POST
- name: get_shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
- name: get_all_shifts
  endpoint:
    path: /v1/shifts
    method: GET
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: create_or_update_products
  endpoint:
    path: /v1/products
    method: POST
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
- name: create_or_update_store_location_by_external_identifier
  endpoint:
    path: /v1/store_locations/external-identifier/{externalIdentifier}
    method: POST
- name: delete_store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: DELETE
- name: order_address_validation
  endpoint:
    path: /api-reference/order/order-address-validation-geocoding
    method: GET
    data_selector: address_validation
    params: {}
- name: order_requirements
  endpoint:
    path: /api-reference/order/order-requirements
    method: GET
    data_selector: requirements
    params: {}
- name: order_validations
  endpoint:
    path: /api-reference/order/order-validations
    method: GET
    data_selector: validations
    params: {}
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: job
  endpoint:
    path: /v1/jobs
    method: POST
- name: delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: upsert_order_by_external_identifier_with_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window
    method: POST
- name: get_providers
  endpoint:
    path: /v1/providers
    method: GET
- name: get_route
  endpoint:
    path: /v1/routes/{id}
    method: GET
- name: create_shift
  endpoint:
    path: /v1/shift
    method: POST
- name: get_a_shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
- name: get_all_shifts
  endpoint:
    path: /v1/shifts
    method: GET
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: create_or_update_products
  endpoint:
    path: /v1/products
    method: POST
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
- name: create_or_update_store_location_by_external_identifier
  endpoint:
    path: /v1/store_locations/external-identifier/{externalIdentifier}
    method: POST
- name: delete_store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: DELETE
- name: job
  endpoint:
    path: /v1/jobs/{jobId}
    method: GET
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: server_health_check
  endpoint:
    path: /v1/health
    method: GET
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
- name: store_location_by_id
  endpoint:
    path: /v1/store_locations/{id}
    method: GET
- name: create_store_location
  endpoint:
    path: /v1/store_locations
    method: POST
- name: update_store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: PATCH
- name: delete_store_location
  endpoint:
    path: /v1/store_locations/{id}
    method: DELETE
- name: get_store_location_by_external_identifier
  endpoint:
    path: /v1/store_locations/external_identifier/{externalIdentifier}
    method: GET
- name: get_store_locations_that_cover_specified_location
  endpoint:
    path: /v1/store_locations/coverage
    method: GET
- name: get_store_locations_by_external_id
  endpoint:
    path: /v1/store_locations/external_identifier/{externalIdentifier}
    method: GET
- name: zones
  endpoint:
    path: /v1/zones
    method: GET
- name: create_zone
  endpoint:
    path: /v1/zones
    method: POST
- name: update_zone
  endpoint:
    path: /v1/zones/{id}
    method: PATCH
- name: delete_zone
  endpoint:
    path: /v1/zones/{id}
    method: DELETE
- name: get_zone_by_id
  endpoint:
    path: /v1/zones/{id}
    method: GET
- name: get_zones_that_cover_specified_location
  endpoint:
    path: /v1/zones/coverage
    method: GET
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: create_orders
  endpoint:
    path: /v1/orders
    method: POST
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
- name: get_bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: update_order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
- name: upsert_order_by_external_identifier_with_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window
    method: POST
- name: get_providers
  endpoint:
    path: /v1/providers
    method: GET
- name: get_route
  endpoint:
    path: /v1/routes/{id}
    method: GET
- name: create_shift
  endpoint:
    path: /v1/shift
    method: POST
- name: get_a_shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
- name: get_all_shifts
  endpoint:
    path: /v1/shifts
    method: GET
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: create_or_update_products
  endpoint:
    path: /v1/products
    method: POST
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: autodispatch_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/autodispatch
    method: POST
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: get_refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
- name: get_refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
- name: zones
  endpoint:
    path: /v1/zones
    method: GET
- name: orders
  endpoint:
    path: /v1/order
    method: POST
- name: job
  endpoint:
    path: /v1/jobs/{jobId}
    method: GET
    data_selector: Job
- name: task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}
    method: GET
    data_selector: Job.jobConfigurations[0].tasks[0]
- name: quote
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
    data_selector: quotes
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: selectedQuote
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: updatedJob
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: quotes
    params: {}
- name: refresh_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
    data_selector: ''
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: winnerQuote
    params: {}
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: ''
    params: {}
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: create_orders
  endpoint:
    path: /v1/orders
    method: POST
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
- name: get_bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: order
    params: {}
- name: providers
  endpoint:
    path: /v1/providers
    method: GET
    data_selector: providers
    params: {}
- name: routes
  endpoint:
    path: /v1/routes/{id}
    method: GET
    data_selector: route
    params: {}
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
- name: zones
  endpoint:
    path: /v1/zones
    method: GET
- name: job
  endpoint:
    path: /v1/jobs/{jobId}
    method: GET
    data_selector: Job
- name: task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}
    method: GET
    data_selector: Task
- name: quote
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/quotes
    method: GET
    data_selector: quotes
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
    data_selector: quotes
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: quote
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: Job
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: quotes
- name: refresh_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: get_order
  endpoint:
    path: /v1/order
    method: GET
- name: delivery_status
  endpoint:
    path: /delivery/status
    method: GET
    data_selector: status
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
- name: deny_list_add_contact
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: deny_list_get_contacts
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: deny_list_remove_contact
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: create_orders
  endpoint:
    path: /v1/orders
    method: POST
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
- name: get_bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
- name: batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: update_order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
- name: upsert_order_by_external_identifier_with_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window
    method: POST
- name: get_providers
  endpoint:
    path: /v1/providers
    method: GET
- name: get_route
  endpoint:
    path: /v1/routes/{id}
    method: GET
- name: create_shift
  endpoint:
    path: /v1/shift
    method: POST
- name: get_a_shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
- name: get_all_shifts
  endpoint:
    path: /v1/shifts
    method: GET
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: create_or_update_products
  endpoint:
    path: /v1/products
    method: POST
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
- name: zones
  endpoint:
    path: /v1/zones
    method: GET
- name: orders
  endpoint:
    path: /v1/order
    method: POST
- name: job
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: Job
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
    data_selector: Task
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
    data_selector: Quotes
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
    data_selector: Quote
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
    data_selector: Job
- name: server_health_check
  endpoint:
    path: /v1/health
    method: GET
    data_selector: Health
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
- name: create_orders
  endpoint:
    path: /v1/orders
    method: POST
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
- name: get_bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: cancel_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}/cancel
    method: POST
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: get_refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
- name: get_refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: update_order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
- name: upsert_order_by_external_identifier_with_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window
    method: POST
- name: get_providers
  endpoint:
    path: /v1/providers
    method: GET
- name: get_route
  endpoint:
    path: /v1/routes/{id}
    method: GET
- name: create_shift
  endpoint:
    path: /v1/shift
    method: POST
- name: get_a_shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
- name: get_all_shifts
  endpoint:
    path: /v1/shifts
    method: GET
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: create_or_update_products
  endpoint:
    path: /v1/products
    method: POST
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
- name: job
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: server_health_check
  endpoint:
    path: /v1/server_health_check
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: records
- name: inventory
  endpoint:
    path: /v1/inventory
    method: GET
    data_selector: records
    params:
      externalStoreLocationId: store_id
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
    data_selector: records
- name: zones
  endpoint:
    path: /v1/zones
    method: GET
    data_selector: records
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
    data_selector: ''
    params: {}
- name: add_contact_to_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
    data_selector: ''
    params: {}
- name: get_contacts_in_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: ''
    params: {}
- name: remove_contact_from_deny_list
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
    data_selector: ''
    params: {}
- name: add_custom_event_to_order
  endpoint:
    path: /v1/order/{id}/events
    method: POST
    data_selector: ''
    params: {}
- name: archive_order
  endpoint:
    path: /v1/order/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: autodispatch_order
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: ''
    params: {}
- name: create_or_update_order_by_external_identifier
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
    data_selector: ''
    params: {}
- name: create_order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: ''
    params: {}
- name: create_orders
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: ''
    params: {}
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
    data_selector: ''
    params: {}
- name: get_order
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: ''
    params: {}
- name: get_order_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
    data_selector: ''
    params: {}
- name: create_quote
  endpoint:
    path: /v1/order/get_quotes
    method: POST
    data_selector: ''
    params: {}
- name: get_bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
    data_selector: ''
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: quotes
- name: refresh_quotes
  endpoint:
    path: /order/refresh_quotes
    method: POST
    data_selector: null
- name: autodispatch_order
  endpoint:
    path: /order/{id}/autodispatch
    method: POST
    data_selector: winnerQuote
- name: get_order
  endpoint:
    path: /order/{id}
    method: GET
    data_selector: null
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: update_order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
- name: upsert_order_by_external_identifier_with_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window
    method: POST
- name: get_providers
  endpoint:
    path: /v1/providers
    method: GET
- name: get_route
  endpoint:
    path: /v1/routes/{id}
    method: GET
- name: create_shift
  endpoint:
    path: /v1/shift
    method: POST
- name: get_a_shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
- name: get_all_shifts
  endpoint:
    path: /v1/shifts
    method: GET
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: create_or_update_products
  endpoint:
    path: /v1/products
    method: POST
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
- name: zones
  endpoint:
    path: /v1/zones
    method: GET
- name: cancel_batch_job
  endpoint:
    path: /v1/jobs/{jobId}/cancel
    method: POST
- name: create_batch_job
  endpoint:
    path: /v1/batch_job
    method: POST
- name: refresh_quotes_batch
  endpoint:
    path: /v1/jobs/{jobId}/batch/{batchId}/refresh_quotes
    method: POST
- name: select_quote_batch
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_batch_job
  endpoint:
    path: /v1/jobs/{id}/{jobConfigurationId}
    method: PATCH
- name: book_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/book
    method: POST
- name: confirm_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/confirm
    method: POST
- name: create_single_delivery_window
  endpoint:
    path: /v1/delivery-window
    method: POST
- name: get_delivery_window
  endpoint:
    path: /v1/delivery-window/{id}
    method: GET
- name: revoke_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window/revoke
    method: POST
- name: create_dispatch_strategy
  endpoint:
    path: /v1/options_group
    method: POST
- name: get_dispatch_strategies
  endpoint:
    path: /v1/options_group
    method: GET
- name: update_dispatch_strategy
  endpoint:
    path: /v1/options_group/{id}
    method: PATCH
- name: autodispatch_job
  endpoint:
    path: /v1/jobs/{id}/autodispatch
    method: POST
- name: cancel_job
  endpoint:
    path: /v1/jobs/{jobId}/{objectId}/cancel
    method: POST
- name: create_delivery_incident
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/delivery_incident
    method: POST
- name: create_job
  endpoint:
    path: /v1/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v1/jobs/{id}
    method: GET
- name: get_job_by_external_identifier
  endpoint:
    path: /v1/jobs/external_identifier/{externalIdentifier}
    method: GET
- name: get_refund_request
  endpoint:
    path: /v1/refund-request/{id}
    method: GET
- name: get_refund_requests
  endpoint:
    path: /v1/refund-requests
    method: GET
- name: order
  endpoint:
    path: /order/refresh_quotes
    method: POST
    data_selector: quotes
    params: {}
- name: autodispatch
  endpoint:
    path: /order/{id}/autodispatch
    method: POST
    data_selector: winnerQuote
    params: {}
- name: job
  endpoint:
    path: /v1/jobs/{jobId}
    method: GET
    data_selector: Job
- name: reassign_task
  endpoint:
    path: /v1/jobs/{jobId}/{taskId}/reassign
    method: POST
- name: refresh_quotes
  endpoint:
    path: /v1/jobs/{jobId}/tasks/{taskId}/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: update_job
  endpoint:
    path: /v1/jobs/{id}
    method: PATCH
- name: server_health_check
  endpoint:
    path: /v1/health
    method: GET
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
    data_selector: ''
    params: {}
- name: deny_list_add_contact
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: POST
    data_selector: ''
    params: {}
- name: deny_list_get_contacts
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: GET
    data_selector: ''
    params: {}
- name: deny_list_remove_contact
  endpoint:
    path: /v1/organization-management/notifications/deny-list
    method: DELETE
    data_selector: ''
    params: {}
- name: order_add_custom_event
  endpoint:
    path: /v1/order/{id}/events
    method: POST
    data_selector: ''
    params: {}
- name: order_archive
  endpoint:
    path: /v1/order/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: order_autodispatch
  endpoint:
    path: /v1/order/{id}/autodispatch
    method: POST
    data_selector: ''
    params: {}
- name: order_create_or_update
  endpoint:
    path: /v1/order/external-identifier/{externalId}
    method: POST
    data_selector: ''
    params: {}
- name: order_create
  endpoint:
    path: /v1/order
    method: POST
    data_selector: ''
    params: {}
- name: orders_create
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: ''
    params: {}
- name: bulk_order_actions
  endpoint:
    path: /v1/orders/bulk
    method: POST
    data_selector: ''
    params: {}
- name: order_get
  endpoint:
    path: /v1/order/{id}
    method: GET
    data_selector: ''
    params: {}
- name: order_get_documents
  endpoint:
    path: /v1/order/{id}/documents
    method: GET
    data_selector: ''
    params: {}
- name: order_get_quotes
  endpoint:
    path: /v1/order/get_quotes
    method: POST
    data_selector: ''
    params: {}
- name: bulk_order_response
  endpoint:
    path: /v1/orders/bulk/{id}
    method: GET
    data_selector: ''
    params: {}
- name: create_order
  endpoint:
    path: /api-reference/order/create-order
    method: POST
- name: autodispatch_order
  endpoint:
    path: /api-reference/order/autodispatch-order
    method: POST
- name: select_quote
  endpoint:
    path: /api-reference/order/select-quote
    method: POST
- name: track_job
  endpoint:
    path: /api-reference/job/get-job
    method: GET
- name: update_job
  endpoint:
    path: /api-reference/job/update-job-by-job-id-and-job-configuration-id
    method: PUT
- name: cancel_job
  endpoint:
    path: /api-reference/job/cancel-job-by-job-id-and-job-configuration-id
    method: DELETE
- name: refresh_order_quotes
  endpoint:
    path: /v1/order/refresh_quotes
    method: POST
- name: select_quote
  endpoint:
    path: /v1/select_quote
    method: POST
- name: unarchive_order
  endpoint:
    path: /v1/order/{id}/unarchive
    method: PATCH
- name: update_order
  endpoint:
    path: /v1/order/{id}
    method: PATCH
- name: upsert_order_by_external_identifier_with_delivery_window
  endpoint:
    path: /v1/order/external-identifier/{externalId}/delivery-window
    method: POST
- name: get_providers
  endpoint:
    path: /v1/providers
    method: GET
- name: get_route
  endpoint:
    path: /v1/routes/{id}
    method: GET
- name: create_shift
  endpoint:
    path: /v1/shift
    method: POST
- name: get_a_shift
  endpoint:
    path: /v1/shift/{id}
    method: GET
- name: get_all_shifts
  endpoint:
    path: /v1/shifts
    method: GET
- name: create_or_update_inventory
  endpoint:
    path: /v1/inventory
    method: POST
- name: create_or_update_products
  endpoint:
    path: /v1/products
    method: POST
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: POST
    data_selector: data
    params: {}
- name: get_products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
    params: {}
- name: inventory
  endpoint:
    path: /v1/inventory
    method: POST
    data_selector: data
    params: {}
- name: get_inventory
  endpoint:
    path: /v1/inventory
    method: GET
    data_selector: data
    params: {}
- name: store_locations
  endpoint:
    path: /v1/store_locations
    method: GET
    data_selector: data
    params: {}
- name: zones
  endpoint:
    path: /v1/zones
    method: GET
    data_selector: data
    params: {}
- name: order_quotes
  endpoint:
    path: /order/get-order-quotes
    method: GET
    data_selector: quotes
- name: update_order
  endpoint:
    path: /order/update-order
    method: POST
- name: autodispatch_order
  endpoint:
    path: /order/{id}/autodispatch
    method: POST
- name: refresh_quotes
  endpoint:
    path: /order/refresh_quotes
    method: POST
- name: get_order
  endpoint:
    path: /order/{id}
    method: GET
notes:
- Implementing a Nash integration typically takes 2 - 4 weeks.
- Choose the dispatch strategy that Nash will use to select delivery providers for
  your orders.
- When you are ready for Production testing, please reach out to support@usenash.com
  to enable the API in Production.
- Nash is a delivery orchestration platform enabling your business to offer reliable
  delivery.
- Every Nash API response includes a job_id as the ‘X-Job-Id’ header.
- The request_id is included regardless of whether or not the API request succeeded
  or failed.
- API Key must be included as a header in requests.
- Nash-Org-Id header is needed for endpoints that interact with an Organization's
  resources.
- Nash Sandbox is a free and fully-featured environment that allows you to test your
  integration without sending requests to actual drivers.
- Please note that the prices reflected in Sandbox do not reflect Production settings.
- Webhook responses include a type field, event field, and a data field.
- Webhooks can be set up in the Webhook Management page in the Nash Portal.
- Different providers will support different subsets of the statuses.
- Nash does not guarantee the order in which providers will send statuses.
- Nash’s APIs use rate-limiting mechanisms to control the number of requests that
  come in.
- Each account is limited to 20 requests per second across all Nash API endpoints.
- Webhooks are sent securely and follow a retry policy.
- For production traffic, strongly recommend using the HTTPS endpoint to ensure end-to-end
  encryption.
- If you’re interested in integrating Nash’s MCP server into your AI agent, please
  reach out to our support team.
- Different providers will support different subsets of the statuses above.
- Nash does not guarantee the order in which providers will send us the statuses,
  outside of the Critical Delivery Status Path defined earlier.
- Too many requests hitting will result in HTTP 429 (Too Many Requests) responses.
- For production traffic use the HTTPS endpoint to ensure end-to-end encryption.
- Nash will seek an alternative provider if the first choice cannot fulfill the order.
- Indicate that we will manually manage the autodispatch of orders.
- Contact support@usenash.com to get started with Nash’s MCP integration.
- Multiple requirements are allowed.
- Not all providers support all requirements.
- Nash applies validations to ensure order validity.
- All timestamps are in UTC and in this format %Y-%m-%dT%H:%M:%S.%f
- Order creation requires a valid pickup and dropoff address, and appropriate details.
- See Order Address Validation for more info on how Nash validates addresses.
- Address Input Exclusivity requires using either pickup_address or pickup_place_id.
- Geocoding and Parsing will raise an error if parsing fails.
- Uses an API key for authentication
- Ensure timestamps are in UTC
- Requires externalId parameter in the URL
- Order unique identifier from an external system.
- The full address in one line for the pickup location.
- If two requests with the same `external_id` are received, the second request will
  be processed as an update.
- Requires setup of connected app in api
- Requires valid order ID for retrieval
- If two requests with the same `external_id` are received, Nash will block the second
  request until the first request has been committed to the db and the response has
  been sent to the client.
- Updating an archived order will also unarchive it.
- Ensure correct externalId is provided for quotes
- Order API provides detailed information about delivery orders.
- Some fields in the request and response may contain placeholders like <string> or
  <string[]>
- 'Rate limits: Max 3 requests/second'
- 'Size limit: Request body must not exceed 1kb'
- Requires setup of connected app in Nash
- An order that has been dispatched to a job cannot be unarchived.
- Requires OAuth2 authentication
- Nash has a built-in, fully customizable notifications platform.
- Dispatch Automations will apply to any job that does not have a Dispatch Strategy
  assigned.
- Requires valid location data for store creation
- Operating hours must be defined for each day of the week
- Store business name limited to 80 characters.
- 'Phone number format: ''+15555555555''.'
- 'Email format: ''taylor@swift.com''.'
- Pickup instructions should be included in the request body.
- API supports updating store locations by ID.
- Get store location by ID.
- Requires setup of connected app in API
- The size of the store locations to return defaults to 10.
- The offset of the store locations to return defaults to 0.
- Integration specific preparation time may apply for orders.
- Pickup instructions include a guidance for customers upon arrival.
- Store location update requires valid ID in the path.
- Store business name is limited to 80 characters.
- Pickup instructions are limited to 280 characters.
- Zone unique identifier from an external system.
- The name of the zone.
- The coverage area id to associate with the zone.
- The store location ids to associate with the zone.
- The store location associations to associate with the zone.
- Free form tags specific to the location.
- The metadata of the zone.
- Expected input payload for updating a zone.
- Uses DELETE method to remove a zone.
- This API requires specific identifiers for accessing store locations.
- The zone endpoint requires a valid zone ID as a path parameter.
- Some objects like store locations may require specific identifiers.
- No authentication is required for accessing the API.
- The zone creation requires externalId, name, coverageAreaId, storeLocationIds and
  storeLocationAssociations.
- No authentication required for accessing job data.
- Zone deletion requires the zone ID as a path parameter.
- The endpoint retrieves zone details by ID.
- The pickup and dropoff addresses must include complete address components.
- Default size for zones is 10
- Default offset for zones is 0
- This endpoint is deprecated.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Times that are not specified will be calculated by Nash.
- If the specified pickup time of a scheduled job is very close to the current time
  (within 5 minutes in the past or 10 minutes in the future), it will be automatically
  transformed into an ASAP job.
- Any field in the response we provide may be null.
- All timestamps are in UTC and in this format `%Y-%m-%dT%H:%M:%S.%f`
- The API does not require authentication.
- This endpoint is deprecated. Please use the Create or Update Order by External Identifier
  endpoint instead.
- The API includes various job configurations and metadata.
- Updating a job should always work before a quote is selected.
- Some updates may result in pricing changes.
- Ensure that all required fields are included in the request payload.
- This endpoint is deprecated. Please use the [Create Order](/api-reference/order/create-order)
  endpoint instead.
- None
- Job metadata may vary by job type.
- Be aware of rate limits when querying job data.
- Job specifications and configurations are detailed under jobConfigurations.
- Public tracking URL is available for each job.
- Requires the external identifier as a path parameter.
- Some jobs may have complex nested structures.
- Public tracking URL available for each job
- Requires setup of connected app in Nash API
- This endpoint allows you to reassign a task within an existing job.
- Regenerate quotes for a given job’s task.
- Includes job configurations and delivery details.
- Endpoint to autodispatch a job.
- Ensure that an options group has been attached to the job.
- Enable Autodispatch should be switched off on the Dispatch Strategy used.
- API requires setup of connected app in Nash
- Job ID and Object ID are required path parameters.
- Create a job with multiple packages
- Uses OAuth2 with refresh token — requires setup of connected app in usenash
- Some objects may return nulls in deeply nested fields
- Retrieve a refund request by its ID.
- API provides access to batch jobs and quotes.
- Batch jobs may have complex nested structures.
- You are only able to update the package delivery times and the pickup or dropoff
  addresses before an order has been dispatched.
- Requires setup of connected app in usenash
- Public tracking URL available for jobs
- Any field in the response may be null.
- Expected output when listing org providers, it will return an array of this.
- Uses POST method to select a quote
- Requires a quoteId in the request body
- Uses a POST request to refresh quotes for a batch job.
- Requires authentication to access batch job functionalities
- A Route object represents a planned sequence of stops for a vehicle or delivery
  agent.
- For this and all other endpoints, as Nash processes fields from different providers,
  please assume that any field in the response we provide may be null.
- Expected payload for creating multiple templates
- Assume that any field in the response we provide may be null.
- Please make sure that Enable Autodispatch is switched off on the Dispatch Strategy
  that you are using to autodispatch the job.
- Nash provides standardized statuses that help you understand the delivery's progress.
- When creating a scheduled job, at least one time field must be included.
- Assume any field in the response may be null due to processing from different providers.
- Nash provides standardized statuses to understand the delivery's progress.
- 'Public tracking URL: https://portal.usenash.com/tracking/[JOB_ID]'
- When one or more Orders are dispatched, they become a Job.
- SMS notifications are not triggered in Sandbox.
- Times that are not specified will be calculated by Nash based on the existing job
  configuration and current conditions.
- For this and all other endpoints, assume that any field in the response may be null.
- Max 3 requests/second for API calls
- Request body must not exceed 1kb
- Nash validates an address on every request when passed a pickup or dropoff address
  or Google Place ID.
- If you change packageDeliveryMode from SCHEDULED job to NOW, you do not need to
  specify any other time fields.
- Max 3 requests/second
- Nash provides standardized delivery statuses for tracking.
- By default, Nash validates an address on every request when passed a pickup or dropoff
  address or Google Place ID.
- Assume that any field in the response may be null.
- When using componentized address fields, do not pass <pickup|dropoff>Address or
  <pickup|dropoff>PlaceId in the request to create or update an order.
- If a Store Location ID or External ID is provided along with address information,
  the address information will take precedence over the store location's address.
- For this and all other endpoints, as Nash processes fields from different providers,
  please assume that any field in the response we provide may be `null`.
- Times not specified will be calculated by Nash based on existing job configuration.
- 'By default, requirements: ["photo_proof_of_delivery"]'
- API keys can be created in Nash's portal
- Include 'Nash-Org-Id' header for organization-specific requests
- 'When creating a scheduled job, you must include at least one of the following fields:
  packagePickupStartTime, packagePickupEndTime, packageDropoffStartTime, packageDropoffEndTime.'
- For all endpoints, as Nash processes fields from different providers, please assume
  that any field in the response we provide may be null.
- API keys can be created in Nash's portal.
- Uses OAuth2 with refresh token — requires setup of connected app in Nash
- Multiple requirements are allowed when creating an order
- Please assume that any field in the response we provide may be null.
- Interested in using Nash's MCP for your AI Agent? Please reach out to support@usenash.com
  to get started.
- Ensure to handle pagination for large datasets.
- If you're interested in integrating Nash's MCP server into your AI agent, please
  reach out to our support team at support@usenash.com.
- Quotes have an expireTime and can be refreshed
- For production traffic we strongly recommend using the HTTPS endpoint
- You'll need the signing secret, which can be found in the Nash Portal under Settings
  > Webhook Management > Click on an Endpoint > Signing Secret.
- If your webhook receiving endpoint is behind a firewall or NAT, you may need to
  explicitly allow traffic from Svix's IP addresses.
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- Include the Nash-Org-Id header if the API key has access to multiple Nash Organizations.
- For production traffic we strongly recommend using the HTTPS endpoint (https://tracking.usenash.com)
  to ensure end-to-end encryption.
errors:
- 'BAD_REQUEST: The request failed, often due to missing a required parameter or malformed
  input field'
- 'UNAUTHORIZED: Invalid or missing API key.'
- 'FORBIDDEN: Provided API key does not have access to requested resource/action'
- 'INVALID_ADDRESS: Provided address in either ''pickupsAddress'' or ''dropoffAddress''
  is missing, invalid or couldn’t be parsed.'
- 'INVALID_PHONE_NUMBER: Provided phone-number in either ''pickupPhoneNumber'' or
  ''dropoffPhoneNumber'' is missing, invalid or couldn’t be parsed.'
- 'RESOURCE_ALREADY_EXISTS: provided ''externalIdentifier'' has been already used
  for another job'
- 'MISSING_RESOURCE: job/task/options_group cannot be found'
- 'INVALID_TIME_CONSTRAINT: Provided ''packagePickupStartTime'', ''packagePickupEndTime'',
  ''packageDropoffStartTime'', ''packageDropoffEndTime'' are invalid'
- 'DISALLOWED_OPERATION: An API operation was attempted but was disallowed'
- 'AUTODISPATCH_FAILURE: Auto-dispatch failed due to no valid quotes.'
- 'INTERNAL_SERVER_ERROR: Something went wrong on Nash’s end.'
- '408: Request Timeout'
- '409: Conflict'
- '429: Too Many Requests'
- 'HTTP 429: Too Many Requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check required fields and validation rules'
- '400: Bad Request'
- '400 Bad Request: Invalid request data'
- 'required_field: Missing required field for address.'
- 'delivery_distance_exceeded: Distance exceeds maximum delivery distance.'
- 'invalid_phone_number: Phone number validation failed.'
- '400 Bad Request: Check request parameters or body'
- '404 Not Found: Verify the order ID'
- '401 Unauthorized: Check API key validity'
- '400 Bad Request: Check the request structure and data types'
- '200: Success'
- '200'
- '400'
- 400 Bad Request
- '400 Bad Request: Check the order ID provided'
- '400: Bad Request - Check the request parameters'
- '200: OK'
- '400: Bad Request - Invalid input parameters'
- '404: Not Found - Order ID does not exist'
- '400 Bad Request: Check request body and parameters'
- '400 Bad Request: Check the request body format'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the provided input data'
- '404 Not Found: The specified store location ID does not exist'
- '400: Bad Request - Check required fields and formats.'
- '400 Bad Request: Check the request body for invalid data.'
- '400 Bad Request: Ensure the ID is valid.'
- '400: Bad Request - Check the query parameters.'
- '400 Bad Request: Check the externalIdentifier provided.'
- '400 Bad Request: Invalid input data'
- '400: Bad Request - Check the external identifier'
- '200: OK - Response will include store location details'
- '400: Bad Request - Check the request parameters.'
- '200: OK - Valid response for zone.'
- '400: Bad Request - Check input parameters for validity.'
- '400 Bad Request: Check request payload format'
- '400 Bad Request: Check the request payload for correctness'
- '400 Bad Request: Ensure all required fields are present and correctly formatted.'
- '400 Bad Request: Check query parameters for validity'
- '400 Bad Request: Check request format and required fields'
- '400 Bad Request: Check the request format and parameters'
- '400: Error thrown if a task in a job is dispatched and an update is attempted.'
- '400 Bad Request: Check the request payload for missing or invalid fields.'
- '404 Not Found: Check job ID or endpoint.'
- '500 Internal Server Error: Retry after some time.'
- '400 Bad Request: Invalid job ID'
- '400 Bad Request: Check the request data format or required fields.'
- '400: Bad Request - Check the external identifier format.'
- '400 Bad Request: Check the external identifier or request format.'
- '400 Bad Request: Check if jobId and objectId are valid.'
- '400 Bad Request: Check input data for errors'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Ensure the resource exists'
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: Check for required fields in the update request.'
- '404 Not Found: Job ID or Job Configuration ID does not exist.'
- '409 Conflict: Update is not allowed after job has been dispatched.'
- '400: Bad Request - Check the job ID and identifiers provided'
- '400 Bad Request: Check job ID or task ID'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Ensure the job or resource ID is correct.'
- '400 Bad Request: Ensure the request parameters are correct.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Validate your authentication tokens.'
- '400 Bad Request: Ensure all required fields are provided and correctly formatted.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404 Not Found: Job or task not found.'
- 'job_not_found: The specified job ID does not exist.'
- 'task_not_found: The specified task ID does not exist.'
- 'update_rejected: The fleet rejected the update of the order.'
- 'FORBIDDEN: The API key doesn''t have permissions to perform the request.'
- 'NOT_FOUND: The requested resource doesn''t exist.'
- 'INTERNAL_SERVER_ERROR: Something went wrong on Nash''s end.'
- '401 Unauthorized: Recheck API key or organization ID'
- '403 Forbidden: API key does not have required permissions'
- 'UNAUTHORIZED: Invalid or missing API key'
- 'INVALID_ADDRESS: Provided address in either pickupsAddress or dropoffAddress is
  missing, invalid or couldn''t be parsed'
- 'INVALID_PHONE_NUMBER: Provided phone-number in either pickupPhoneNumber or dropoffPhoneNumber
  is missing, invalid or couldn''t be parsed'
- 'RESOURCE_ALREADY_EXISTS: provided externalIdentifier has been already used for
  another job'
- 'INVALID_TIME_CONSTRAINT: Provided packagePickupStartTime, packagePickupEndTime,
  packageDropoffStartTime , packageDropoffEndTime are invalid'
- 'AUTODISPATCH_FAILURE: Auto-dispatch failed due to no valid quotes'
- 'INTERNAL_SERVER_ERROR: Something went wrong on Nash''s end'
- 4xx error status codes indicate an error because of the information provided.
- 5xx error status codes are rare and indicate an error with Nash's end.
- 'INVALID_ADDRESS: Provided address in either `pickupsAddress` or `dropoffAddress`
  is missing, invalid or couldn''t be parsed.'
- 'INVALID_PHONE_NUMBER: Provided phone-number in either `pickupPhoneNumber` or `dropoffPhoneNumber`
  is missing, invalid or couldn''t be parsed.'
- 'RESOURCE_ALREADY_EXISTS: provided `externalIdentifier` has been already used for
  another job'
- 'INVALID_TIME_CONSTRAINT: Provided `packagePickupStartTime`, `packagePickupEndTime`,
  `packageDropoffStartTime`, `packageDropoffEndTime` are invalid'
- 'DISALLOWED_OPERATION: An API operation was attempted but was disallowed, e.g.,
  updating a job after completion.'
- '401 Unauthorized: Recheck API key or permissions'
- '404 Not Found: Check if the endpoint is correct or if the resource exists.'
- '400 Bad Request: Validate the request payload and parameters.'
- '401 Unauthorized: Verify the authentication credentials.'
- '4xx: Client error, check request parameters'
- '5xx: Server error, try again later'
- 'MISSING_RESOURCE: job ''job_123'' does not exist'
- 'INVALID_ADDRESS: Provided address in either ''pickupsAddress'' or ''dropoffAddress''
  is missing, invalid or couldn''t be parsed.'
- 'INVALID_PHONE_NUMBER: Provided phone-number in either ''pickupPhoneNumber'' or
  ''dropoffPhoneNumber'' is missing, invalid or couldn''t be parsed.'
- '4xx: error due to information provided'
- '5xx: error with Nash''s end'
- 'DISALLOWED_OPERATION: An API operation was attempted but was disallowed.'
- 'HTTP 429: Too Many Requests - signals to your application that it should slow down
  or halt the sending of requests.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - Job
  - JobConfiguration
  - Task
  - Delivery
  - API Key
  - Organization ID
  - Nash-Org-Id
client:
  base_url: https://api.sandbox.usenash.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
