resources:
- name: API Key Profiles
  endpoint:
    path: /api-keys/profiles
    method: GET
    data_selector: profiles
- name: payment_order
  endpoint:
    path: /post/posms/refund
    method: POST
    data_selector: order
    params: {}
- name: send_payment_link
  endpoint:
    path: /post/posms/refund
    method: POST
    data_selector: order
    params: {}
- name: single_step_payment
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: cancellation
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: moto_payment
  endpoint:
    path: /posms/moto
    method: POST
    data_selector: message
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: Payout
  endpoint:
    path: /post/posms/refund
    method: POST
    data_selector: order
    params: {}
- name: get_all_orders
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: orders
    params:
      start: '202012312359'
      end: '202112312359'
      updated_at_start: '202012312359'
      updated_at_end: '202112312359'
      terminal: 65432781
      limit: 10
      offset: 20
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: create_merchant
  endpoint:
    path: /merchants/create
    method: POST
    data_selector: client
    params: {}
- name: promote_merchant
  endpoint:
    path: /merchants/promote
    method: POST
    data_selector: ''
    params: {}
- name: create_dashboard_user
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: list_client_services
  endpoint:
    path: /posms/refund
    method: GET
    data_selector: message
    params: {}
- name: create_customer
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: create_account
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: create_customer
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: account
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: create_profile
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: get_address
  endpoint:
    path: /address/{uuid}
    method: GET
    data_selector: address
    params:
      uuid: required
- name: charge
  endpoint:
    path: /posms/charge
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: cancel_operation
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: ''
    params: {}
- name: preauth
  endpoint:
    path: /posms/preauth
    method: POST
    data_selector: order
    params: {}
- name: cancel_preauth
  endpoint:
    path: /posms/cancel_preauth
    method: POST
    data_selector: order
    params: {}
- name: confirm_preauth
  endpoint:
    path: /posms/confirm_preauth
    method: POST
    data_selector: order
    params: {}
- name: store_multiple_cards
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: response
    params: {}
- name: store_credit_debit_card
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: delete_card
  endpoint:
    path: /posms/refund
    method: DELETE
    data_selector: message
    params: {}
- name: revalidate_card
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: retrieve_all_cards
  endpoint:
    path: /cards
    method: GET
    data_selector: cards
    params:
      customer_ext_id: required
      status: optional
      unique: optional
- name: view_card
  endpoint:
    path: /cards/{uuid}
    method: GET
    data_selector: card
    params:
      uuid: required
- name: retrieve_bank_accounts
  endpoint:
    path: /bank_accounts
    method: GET
    data_selector: accounts
    params:
      customer_ext_id: string
      status: VALIDATED
      unique: 'false'
- name: payment_link_delivery
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: payment_link_delivery
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: download_opening_certificate
  endpoint:
    path: /posms/refund
    method: GET
    data_selector: order
    params: {}
- name: download_receipt_certificate
  endpoint:
    path: /posms/refund
    method: GET
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: products
  endpoint:
    path: /posms/products
    method: GET
    data_selector: products
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: get_payment
  endpoint:
    path: /payments/{payment_id}
    method: GET
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: list_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: subscribe
  endpoint:
    path: /posms/subscribe
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscription_id}
    method: DELETE
    data_selector: message
- name: list_physical_devices
  endpoint:
    path: /posms/devices
    method: GET
    data_selector: devices
    params: {}
- name: send_payment
  endpoint:
    path: /posms/payment
    method: POST
    data_selector: order
    params: {}
- name: refund_payment
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: send_pre_authorization
  endpoint:
    path: /posms/pre_authorization
    method: POST
- name: send_confirmation
  endpoint:
    path: /posms/confirmation
    method: POST
- name: send_cancellation
  endpoint:
    path: /posms/cancellation
    method: POST
- name: refund
  endpoint:
    path: /sandbox/posms/refund
    method: POST
    data_selector: message
    params: {}
- name: api_key_profiles
  endpoint:
    path: /api_key/profiles
    method: GET
    data_selector: profiles
- name: payment_order
  endpoint:
    path: /v1/posms/refund
    method: POST
    data_selector: order
    params: {}
- name: send_payment_link
  endpoint:
    path: /v1/posms/refund
    method: POST
    data_selector: order
    params: {}
- name: single_step_payment
  endpoint:
    path: /posms/single-step-payment
    method: POST
    data_selector: order
    params: {}
- name: cancellation
  endpoint:
    path: /posms/cancellation
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: moto_payment
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params:
      order_uuid: 4DE116C9-0064-4BCA-A5D0-1D69A8E972FD
- name: get_all_orders
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: orders
    params:
      start: '202012312359'
      end: '202112312359'
      updated_at_start: '202012312359'
      updated_at_end: '202112312359'
      terminal: 65432781
      limit: 10
      offset: 20
- name: expire_order
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params:
      signature: string
      device: string
      order_uuid: string
      amount: 50
- name: get_order
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params:
      order_uuid: string
- name: transaction
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: merchant
  endpoint:
    path: /merchants/create
    method: POST
    data_selector: message
    params: {}
- name: promote_merchant
  endpoint:
    path: /merchants/promote
    method: POST
    data_selector: message
    params: {}
- name: refund
  endpoint:
    path: /sandbox/posms/refund
    method: POST
    data_selector: order
    params: {}
- name: create_customer
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: refund
  endpoint:
    path: /sandbox/posms/refund
    method: POST
    data_selector: order
    params: {}
- name: create_account
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: account
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: create_address
  endpoint:
    path: /sandbox/posms/refund
    method: POST
    data_selector: message
    params: {}
- name: update_address
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: delete_address
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: create_profile
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: get_address
  endpoint:
    path: /address/{uuid}
    method: GET
    data_selector: address
    params:
      uuid: required
- name: charge
  endpoint:
    path: /posms/charge
    method: POST
    data_selector: message
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: message
    params: {}
- name: get_profile
  endpoint:
    path: /posms/profile
    method: GET
    data_selector: message
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: sync_device
  endpoint:
    path: /sync/device
    method: POST
    data_selector: device
    params: {}
- name: cancel_operation
  endpoint:
    path: /cancel/operation
    method: POST
    data_selector: operation
    params: {}
- name: preauth
  endpoint:
    path: /posms/preauth
    method: POST
    data_selector: order
    params: {}
- name: cancel_preauth
  endpoint:
    path: /posms/cancel_preauth
    method: POST
    data_selector: order
    params: {}
- name: confirm_preauth
  endpoint:
    path: /posms/confirm_preauth
    method: POST
    data_selector: order
    params: {}
- name: store_multiple_credit_debit_cards
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: response
    params: {}
- name: store_credit_debit_card
  endpoint:
    path: /posms/card
    method: POST
    data_selector: response
    params: {}
- name: delete_card
  endpoint:
    path: /posms/card
    method: DELETE
    data_selector: response
    params: {}
- name: revalidate_card
  endpoint:
    path: /posms/card/revalidate
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: retrieve_all_cards
  endpoint:
    path: /cards
    method: GET
    data_selector: cards
    params:
      status: VALIDATED
      unique: 'false'
- name: view_card
  endpoint:
    path: /cards/{uuid}
    method: GET
    data_selector: card
    params: {}
- name: retrieve_all_bank_accounts
  endpoint:
    path: /bank_accounts
    method: GET
    params:
      customer_ext_id: string
      status: VALIDATED
      unique: 'false'
- name: new_bank_account
  endpoint:
    path: /bank_accounts/new
    method: POST
    params:
      signature: string
      customer_ext_id: string
      account_holder: string
      iban: string
      additional: string
- name: delete_bank_account
  endpoint:
    path: /bank_accounts/delete
    method: DELETE
    params:
      signature: string
      source_uuid: string
      customer_ext_id: string
- name: payment_link_delivery
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: download_opening_certificate
  endpoint:
    path: /moto_payment_uuid
    method: GET
    data_selector: certificate
    params: {}
- name: download_receipt_certificate
  endpoint:
    path: /moto_payment_uuid
    method: GET
    data_selector: certificate
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: list_products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: get_payment
  endpoint:
    path: /payments/{payment_id}
    method: GET
    data_selector: order
    params: {}
- name: list_plans
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
- name: subscribe_customer
  endpoint:
    path: /posms/subscribe
    method: POST
- name: cancel_subscription
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: signature
    params:
      subscription_id: 'string Example:  5de7b52ac4d347306fd59ec5'
- name: list_physical_devices
  endpoint:
    path: /posms
    method: GET
    data_selector: devices
    params: {}
- name: send_payment
  endpoint:
    path: /posms/send_payment
    method: POST
    data_selector: order
    params: {}
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: get_device
  endpoint:
    path: /posms/device/{id}
    method: GET
    data_selector: device
    params: {}
- name: send_pre_authorization
  endpoint:
    path: /posms/pre-authorization
    method: POST
    data_selector: order
- name: send_confirmation
  endpoint:
    path: /posms/confirmation
    method: POST
    data_selector: order
- name: send_cancellation
  endpoint:
    path: /posms/cancellation
    method: POST
    data_selector: order
- name: refund
  endpoint:
    path: /posms/refund
    method: POST
    data_selector: order
    params: {}
- name: generar_orden_pago
  endpoint:
    path: /pagos/generar_orden_pago
    method: POST
    data_selector: items
    params: {}
- name: enviar_enlace_pago
  endpoint:
    path: /pagos/enviar_enlace_pago
    method: POST
    data_selector: items
    params: {}
- name: pago_un_solo_paso
  endpoint:
    path: /pagos/pago_un_solo_paso
    method: POST
    data_selector: items
    params: {}
- name: pago_push
  endpoint:
    path: /sandbox/security/list-management/{list_uuid}/items
    method: POST
    data_selector: items
    params: {}
- name: devolucion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
    data_selector: items
    params: {}
- name: create_customer
  endpoint:
    path: /create_customer
    method: POST
    data_selector: items
- name: expire_order
  endpoint:
    path: /expire_order
    method: POST
    data_selector: ''
- name: read_order
  endpoint:
    path: /read_order
    method: GET
    data_selector: ''
- name: list_transactions
  endpoint:
    path: /list_transactions
    method: GET
    data_selector: ''
- name: crear_cliente
  endpoint:
    path: /crear
    method: POST
    data_selector: items
    params: {}
- name: actualizar_cuenta
  endpoint:
    path: /actualizar_cuenta
    method: PUT
    data_selector: items
    params: {}
- name: eliminar_cuenta
  endpoint:
    path: /eliminar_cuenta
    method: DELETE
    data_selector: items
    params: {}
- name: obtener_cuenta
  endpoint:
    path: /obtener_cuenta
    method: GET
    data_selector: items
    params: {}
- name: crear_direccion
  endpoint:
    path: /crear_direccion
    method: POST
    data_selector: items
    params: {}
- name: actualizar_direccion
  endpoint:
    path: /actualizar_direccion
    method: PUT
    data_selector: items
    params: {}
- name: eliminar_direccion
  endpoint:
    path: /eliminar_direccion
    method: DELETE
    data_selector: items
    params: {}
- name: obtener_direccion
  endpoint:
    path: /obtener_direccion
    method: GET
    data_selector: items
    params: {}
- name: crear_perfil
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: POST
    data_selector: items
- name: actualizar_perfil
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: PUT
    data_selector: items
- name: obtener_perfil
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: GET
    data_selector: items
- name: procesar_pago
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: POST
    data_selector: items
- name: procesar_devolucion
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: POST
    data_selector: items
- name: sincronizar_dispositivo
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: GET
    data_selector: items
- name: cancelar_operacion
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: DELETE
    data_selector: items
- name: preautorizacion
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: POST
    data_selector: items
- name: cancelar_preautorizacion
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: DELETE
    data_selector: items
- name: nueva_cuenta_bancaria
  endpoint:
    path: /v1/security/list-management/{list_uuid}/items
    method: POST
    data_selector: items
- name: eliminar_cuenta_bancaria
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: DELETE
    data_selector: message
    params: {}
- name: obtener_cuentas_bancarias
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
    data_selector: message
    params: {}
- name: ver_cuenta_bancaria
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
    data_selector: message
    params: {}
- name: actualizar_external_id
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: PUT
    data_selector: message
    params: {}
- name: consultar_ordenes_moto
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
    data_selector: message
    params: {}
- name: enviar_enlaces_pago_csv
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
    data_selector: message
    params: {}
- name: enviar_enlaces_pago_json
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
    data_selector: message
    params: {}
- name: descargar_certificado_apertura
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
    data_selector: message
    params: {}
- name: descargar_certificado_recepcion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
    data_selector: message
    params: {}
- name: fichero_pagos
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
    data_selector: message
    params: {}
- name: fichero_devoluciones
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
    data_selector: message
    params: {}
- name: crear_compania
  endpoint:
    path: /sandbox/security/list-management/{list_uuid}/items
    method: POST
- name: crear_producto
  endpoint:
    path: /sandbox/security/list-management/{list_uuid}/items
    method: POST
- name: listar_productos
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: obtener_producto
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: eliminar_producto
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: DELETE
- name: crear_plan
  endpoint:
    path: /sandbox/security/list-management/{list_uuid}/items
    method: POST
- name: listar_planes
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: obtener_plan
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: eliminar_plan
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: DELETE
- name: suscribir_cliente
  endpoint:
    path: /sandbox/security/list-management/{list_uuid}/items
    method: POST
- name: listar_pagos
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: obtener_pago
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: listar_subscripciones
  endpoint:
    path: /sandbox/security/list-management/{list_uuid}/items
    method: GET
- name: obtener_subscripcion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: cancelar_subscripcion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: DELETE
- name: listar_dispositivos_fisicos
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: obtener_dispositivo
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: GET
- name: enviar_pago
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
- name: enviar_pre_autorizacion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
- name: enviar_confirmacion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
- name: enviar_cancelacion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
- name: enviar_devolucion
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
- name: crear_lista
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: POST
- name: list_management_items
  endpoint:
    path: /security/list-management/{list_uuid}/items
    method: DELETE
    data_selector: message
    params: {}
notes:
- API authentication is based on HTTP Basic Auth. API Key must be sent as the value
  for the username field.
- This operation will not require authentication, as it is a PSD2-exempt operation.
- If anti-fraud is activated, orders considered risky will be processed without any
  additional restrictions.
- If a refund attempt fails, wait 1 minute before retrying. After 3 failed attempts,
  no further attempts are allowed until the next day.
- Requires setup of API key for authorization
- Authorization token is required in the header for all requests.
- It is possible that a card cannot be tokenized if it is under suspected fraud. In
  such cases, the service will return a 400 error response.
- Signature required for all POST/PUT/DELETE requests.
- Authorization header is required for all requests.
- Requires setup of merchant and devices by support team
- Virtual devices can be used for simulation in sandbox
- signature required in all POST/PUT/DELETE requests
- If the payment is not secure, the order will be paid through a direct payment.
- If a cancellation attempt fails, you must wait 1 minute from the last unsuccessful
  attempt before making a new attempt.
- If a refund attempt fails, you must wait 1 minute from the last unsuccessful attempt
  before making a new attempt.
- If the system detects 3 failed attempts in total, no further attempts will be allowed
  until the start of the next day.
- Authorization header containing your API key is required.
- Certain alternative payment methods may not support payouts.
- Authorization header containing your API key is required for all requests.
- Authorization header is required for all operations.
- Authorization header should contain your API key.
- 'Authorization required: string Example:  Basic VGhpc0lzWW91ckFQSUtleUtlZXBJdFNhZmU=  Authorization
  header containing your API key.'
- 'signature required: Signature paired with the API key. Required in all POST/PUT/DELETE
  requests.'
- The transaction.bizum field of the notification will only be included in Bizum payments.
- The order.dcc field in the notification will only be included in DCC transactions.
- La autenticación se realiza mediante HTTP Basic Auth.
- Es necesario mantener la API Key en secreto.
errors:
- '401 Unauthorized: Recheck API Key or permissions'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or authorization header'
- '401 Unauthorized: Recheck API key'
- '200: OK'
- '400: Bad Request'
- '401: Unauthorized'
- '400: Bad Request - The request could not be understood or was missing required
  parameters.'
- '401 Unauthorized: Recheck API key.'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Recheck API Key or encoding'
- 'CANCELLATION_FAILED: Wait until the next day for further attempts'
- Device 611629d29a5b401507c11f7e is offline!
- 'Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key or token'
- '400: Bad Request - A card cannot be tokenized if it is under suspected fraud.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters or body'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Verifique los parámetros enviados.'
- '401 Unauthorized: Asegúrese de que la API Key es correcta.'
- '403 Forbidden: Acceso denegado, verifique permisos de la API Key.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.paylands.com/v1
  auth:
    type: http_basic
    location: header
    header_name: Authorization
source_metadata: null
