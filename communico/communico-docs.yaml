resources:
- name: events
  endpoint:
    path: /v3/attend/events
    method: GET
    data_selector: entries
- name: event_by_id
  endpoint:
    path: /v3/attend/events/{eventId}
    method: GET
    data_selector: entries
- name: events_by_series
  endpoint:
    path: /v3/attend/events/series/{recurringId}
    method: GET
    data_selector: entries
- name: registrants_by_event_id
  endpoint:
    path: /v3/attend/events/{eventId}/registrants
    method: GET
    data_selector: entries
- name: locations
  endpoint:
    path: /v3/client/locations
    method: GET
    data_selector: entries
    params:
      limit: integer
      start: integer
      fields: Array[string]
- name: location
  endpoint:
    path: /v3/client/locations/{locationId}
    method: GET
    data_selector: entries
    params:
      fields: Array[string]
- name: appointments_categories
  endpoint:
    path: /v3/schedule/appointments/categories
    method: GET
- name: appointments
  endpoint:
    path: /v3/schedule/appointments
    method: GET
- name: appointment_details
  endpoint:
    path: /v3/schedule/appointments/{appointmentId}
    method: GET
notes:
- To log in you will need the partner's keyword and a valid access token for all requests.
- Returns a list of locations matching the criteria.
- Returns a single location based on the provided ID.
errors:
- 'default: unexpected error'
auth_info:
  mentioned_objects: []
client:
  base_url: /
source_metadata: null
