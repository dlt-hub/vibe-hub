resources:
- name: account_info
  endpoint:
    path: /v1/users/{userId}/signature
    method: GET
    data_selector: string
- name: appointments
  endpoint:
    path: /v1/appointments
    method: GET
    data_selector: string
- name: appointment
  endpoint:
    path: /users/{userId}/signature
    method: GET
    data_selector: string
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: string
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: string
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: string
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: create_contact
  endpoint:
    path: /contacts
    method: POST
- name: update_contact
  endpoint:
    path: /contacts/{contactId}
    method: PUT
- name: delete_contact
  endpoint:
    path: /contacts/{contactId}
    method: DELETE
- name: list_emails
  endpoint:
    path: /emails
    method: GET
- name: users_signature
  endpoint:
    path: /v1/users/{userId}/signature
    method: GET
    data_selector: string
- name: emails
  endpoint:
    path: /v1/emails
    method: GET
    data_selector: string
- name: files
  endpoint:
    path: /v1/files
    method: GET
    data_selector: string
- name: notes
  endpoint:
    path: /v1/notes
    method: GET
    data_selector: string
- name: users_signature
  endpoint:
    path: /v1/users/{userId}/signature
    method: GET
    data_selector: string
- name: remove_applied_tags
  endpoint:
    path: /contacts/{contact_id}/tags
    method: DELETE
    data_selector: string
    params:
      ids: string
- name: retrieve_contact
  endpoint:
    path: /v1/contacts/{id}
    method: GET
    data_selector: string
    params:
      optional_properties: Array of strings
- name: list_orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: string
    params:
      contact_id: integer
      limit: integer
      offset: integer
      order: string
      paid: boolean
      product_id: integer
      since: string
      until: string
- name: create_order
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: string
    params:
      contact_id: integer
      order_date: string
      order_items: Array of objects
      order_title: string
      order_type: string
- name: retrieve_order
  endpoint:
    path: /v1/orders/{orderId}
    method: GET
    data_selector: string
- name: create_payment
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: string
    params:
      orderId: integer
- name: create_subscription
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: string
    params:
      contact_id: integer
      subscription_plan_id: integer
- name: create_product_subscription
  endpoint:
    path: /crm/rest/v1/products/{productId}/subscriptions
    method: POST
    data_selector: string
    params: {}
- name: create_product
  endpoint:
    path: /crm/rest/v1/products
    method: POST
    data_selector: string
    params: {}
- name: delete_product
  endpoint:
    path: /crm/rest/v1/products/{productId}
    method: DELETE
    data_selector: string
    params: {}
- name: retrieve_product
  endpoint:
    path: /crm/rest/v1/products/{productId}
    method: GET
    data_selector: string
    params: {}
- name: update_product
  endpoint:
    path: /crm/rest/v1/products/{productId}
    method: PUT
    data_selector: string
    params: {}
- name: list_products
  endpoint:
    path: /crm/rest/v1/products
    method: GET
    data_selector: string
    params: {}
- name: product_subscription
  endpoint:
    path: /v1/products/{productId}/subscriptions/{subscriptionId}
    method: GET
    data_selector: string
    params: {}
- name: hook_subscriptions
  endpoint:
    path: /v1/hooks/subscriptions
    method: GET
    data_selector: string
    params: {}
- name: tags
  endpoint:
    path: /v1/tags
    method: GET
    data_selector: string
    params: {}
- name: tasks
  endpoint:
    path: /v1/tasks
    method: GET
    data_selector: string
    params: {}
- name: Get User email signature
  endpoint:
    path: /users/{userId}/signature
    method: GET
    data_selector: string
- name: Create a Task
  endpoint:
    path: /tasks
    method: POST
    data_selector: task
- name: Delete a Task
  endpoint:
    path: /tasks/{taskId}
    method: DELETE
    data_selector: string
- name: Update a Task
  endpoint:
    path: /tasks/{taskId}
    method: PUT
    data_selector: task
- name: Retrieve User Info
  endpoint:
    path: /users/me
    method: GET
    data_selector: string
- name: List Users
  endpoint:
    path: /users
    method: GET
    data_selector: string
- name: Create a User
  endpoint:
    path: /users
    method: POST
    data_selector: user
- name: credit_card
  endpoint:
    path: /credit_cards
    method: GET
    data_selector: data
    params: {}
- name: ActionSequence
  endpoint:
    path: /actionsequences
    method: GET
    data_selector: records
- name: AffResource
  endpoint:
    path: /affresources
    method: GET
    data_selector: records
- name: Affiliate
  endpoint:
    path: /affiliates
    method: GET
    data_selector: records
- name: CCharge
  endpoint:
    path: /ccharges
    method: GET
    data_selector: records
- name: CProgram
  endpoint:
    path: /cprograms
    method: GET
    data_selector: records
- name: Campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: CampaignStep
  endpoint:
    path: /campaignsteps
    method: GET
    data_selector: records
- name: Campaignee
  endpoint:
    path: /campaignees
    method: GET
    data_selector: records
- name: Company
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: Contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: ContactAction
  endpoint:
    path: /contactactions
    method: GET
    data_selector: records
- name: ContactGroup
  endpoint:
    path: /contactgroups
    method: GET
    data_selector: records
- name: ContactGroupAssign
  endpoint:
    path: /contactgroupassigns
    method: GET
    data_selector: records
- name: ContactGroupCategory
  endpoint:
    path: /contactgroupcategories
    method: GET
    data_selector: records
- name: ProductOptValue
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductOptValue
    method: GET
    data_selector: records
- name: ProductOption
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductOption
    method: GET
    data_selector: records
- name: RecurringOrder
  endpoint:
    path: /services/data/vXX.X/sobjects/RecurringOrder
    method: GET
    data_selector: records
- name: RecurringOrderWithContact
  endpoint:
    path: /services/data/vXX.X/sobjects/RecurringOrderWithContact
    method: GET
    data_selector: records
- name: Referral
  endpoint:
    path: /services/data/vXX.X/sobjects/Referral
    method: GET
    data_selector: records
- name: SavedFilter
  endpoint:
    path: /services/data/vXX.X/sobjects/SavedFilter
    method: GET
    data_selector: records
- name: SocialAccount
  endpoint:
    path: /services/data/vXX.X/sobjects/SocialAccount
    method: GET
    data_selector: records
- name: Stage
  endpoint:
    path: /services/data/vXX.X/sobjects/Stage
    method: GET
    data_selector: records
- name: StageMove
  endpoint:
    path: /services/data/vXX.X/sobjects/StageMove
    method: GET
    data_selector: records
- name: Status
  endpoint:
    path: /services/data/vXX.X/sobjects/Status
    method: GET
    data_selector: records
- name: SubscriptionPlan
  endpoint:
    path: /services/data/vXX.X/sobjects/SubscriptionPlan
    method: GET
    data_selector: records
- name: Template
  endpoint:
    path: /services/data/vXX.X/sobjects/Template
    method: GET
    data_selector: records
- name: User
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
- name: UserGroup
  endpoint:
    path: /services/data/vXX.X/sobjects/UserGroup
    method: GET
    data_selector: records
- name: account_info
  endpoint:
    path: /crm/rest/v1/users/{userId}/signature
    method: GET
- name: affiliates
  endpoint:
    path: /crm/rest/v1/affiliates
    method: GET
- name: appointments
  endpoint:
    path: /crm/rest/v1/appointments
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params: {}
- name: create_or_update_contact
  endpoint:
    path: /contacts
    method: POST
    data_selector: contact
    params: {}
- name: delete_contact
  endpoint:
    path: /contacts/{contactId}
    method: DELETE
    data_selector: response
    params: {}
- name: update_contact
  endpoint:
    path: /contacts/{contactId}
    method: PATCH
    data_selector: contact
    params: {}
- name: list_emails
  endpoint:
    path: /emails
    method: GET
    data_selector: emails
    params: {}
- name: users_signature
  endpoint:
    path: /users/{userId}/signature
    method: GET
    data_selector: string
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: string
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: string
- name: users_signature
  endpoint:
    path: /users/{userId}/signature
    method: GET
    data_selector: string
- name: users_signature
  endpoint:
    path: /crm/rest/v1/users/{userId}/signature
    method: GET
    data_selector: string
- name: contacts_tags
  endpoint:
    path: /contacts/{contact_id}/tags
    method: DELETE
    data_selector: string
- name: contacts
  endpoint:
    path: /contacts/{id}
    method: GET
    data_selector: string
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: string
- name: create_order
  endpoint:
    path: /orders
    method: POST
    data_selector: string
- name: delete_order
  endpoint:
    path: /orders/{orderId}
    method: DELETE
    data_selector: string
- name: order_items
  endpoint:
    path: /orders/{orderId}/items
    method: POST
    data_selector: string
- name: delete_order_item
  endpoint:
    path: /orders/{orderId}/items/{orderItemId}
    method: DELETE
    data_selector: string
- name: payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: string
- name: create_payment
  endpoint:
    path: /orders/{orderId}/payments
    method: POST
    data_selector: string
- name: transactions
  endpoint:
    path: /orders/{orderId}/transactions
    method: GET
    data_selector: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: string
- name: product_subscription
  endpoint:
    path: /v1/products/{productId}/subscriptions
    method: POST
    data_selector: string
    params: {}
- name: custom_field
  endpoint:
    path: /v1/tasks/customField
    method: POST
    data_selector: string
    params: {}
- name: note
  endpoint:
    path: /v1/users/{userId}/note
    method: GET
    data_selector: string
    params: {}
- name: opportunity
  endpoint:
    path: /v1/opportunities
    method: GET
    data_selector: string
    params: {}
- name: product
  endpoint:
    path: /v1/products
    method: GET
    data_selector: string
    params: {}
- name: List Tags
  endpoint:
    path: /tags
    method: GET
    data_selector: string
- name: Create Tag
  endpoint:
    path: /tags
    method: POST
    data_selector: string
- name: Retrieve a Tag
  endpoint:
    path: /tags/{id}
    method: GET
    data_selector: string
- name: Apply Tag to Contacts
  endpoint:
    path: /tags/{tagId}/apply
    method: POST
    data_selector: string
- name: Remove Tag from Contacts
  endpoint:
    path: /tags/{tagId}/remove
    method: POST
    data_selector: string
- name: List Tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: string
- name: get_user_email_signature
  endpoint:
    path: /users/{userId}/signature
    method: GET
    data_selector: string
- name: create_task
  endpoint:
    path: /tasks
    method: POST
    data_selector: task
- name: retrieve_task_model
  endpoint:
    path: /tasks/model
    method: GET
    data_selector: string
- name: create_custom_field
  endpoint:
    path: /tasks/custom_fields
    method: POST
    data_selector: customField
- name: search_tasks
  endpoint:
    path: /tasks/search
    method: GET
    data_selector: string
- name: retrieve_a_task
  endpoint:
    path: /tasks/{taskId}
    method: GET
    data_selector: string
- name: replace_a_task
  endpoint:
    path: /tasks/{taskId}
    method: PUT
    data_selector: task
- name: delete_a_task
  endpoint:
    path: /tasks/{taskId}
    method: DELETE
    data_selector: string
- name: update_a_task
  endpoint:
    path: /tasks/{taskId}
    method: PATCH
    data_selector: task
- name: retrieve_user_info
  endpoint:
    path: /users/me
    method: GET
    data_selector: string
- name: list_users
  endpoint:
    path: /users
    method: GET
    data_selector: string
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: user
- name: users
  endpoint:
    path: /v2/users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: deleteSubscriptionPlan
  endpoint:
    path: /subscriptions
    method: DELETE
    data_selector: next_page_token
- name: commissionPrograms
  endpoint:
    path: /commissionPrograms
    method: GET
    data_selector: next_page_token
- name: affiliateLinks
  endpoint:
    path: /affiliateLinks
    method: GET
    data_selector: next_page_token
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: category_discounts
  endpoint:
    path: /category_discounts
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: email_template
  endpoint:
    path: /email-templates/{email_template_id}
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: users
    params:
      filter: string
      order_by: string
      page_size: integer
      page_token: string
- name: subscription_free_trial_discounts
  endpoint:
    path: /freeTrialDiscounts
    method: GET
    data_selector: users
    params:
      filter: string
      order_by: string
      page_size: integer
      page_token: string
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: lead_source_category
  endpoint:
    path: /lead_source_categories
    method: GET
    data_selector: lead_source_categories
- name: lead_source_expense
  endpoint:
    path: /lead_source_expenses
    method: GET
    data_selector: users
- name: lead_source_category
  endpoint:
    path: /lead_source_categories
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: notes
  endpoint:
    path: /notes
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: opportunities
  endpoint:
    path: /opportunities
    method: GET
    data_selector: opportunities
- name: opportunity_stages
  endpoint:
    path: /opportunity_stages
    method: GET
    data_selector: opportunity_stages
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: product_categories
  endpoint:
    path: /product_categories
    method: GET
    data_selector: product_categories
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: shipping_discounts
  endpoint:
    path: /shipping_discounts
    method: GET
    data_selector: users
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: subscription_plans
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: tag_category
  endpoint:
    path: /tag-categories
    method: GET
    data_selector: tag_categories
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: tasks
  endpoint:
    path: /tasks
    method: POST
    data_selector: next_page_token
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: affiliate
  endpoint:
    path: /crm/xmlrpc/v1/affiliate
    method: POST
    data_selector: records
- name: affiliate_programs
  endpoint:
    path: /AffiliateProgramService.getProgramsForAffiliate
    method: POST
    data_selector: value
    params:
      privateKey: privateKey
      affiliateId: affiliateId
- name: contact
  endpoint:
    path: /ContactService.findByNameOrEmail
    method: POST
    data_selector: value
    params:
      privateKey: privateKey
      searchString: searchString
      limit: limit
      page: page
- name: create_contact
  endpoint:
    path: /ContactService.add
    method: POST
    data_selector: value
    params:
      privateKey: privateKey
      data: data
- name: update_contact
  endpoint:
    path: /ContactService.update
    method: POST
    data_selector: value
    params:
      privateKey: privateKey
      contactId: contactId
      data: data
- name: merge_contacts
  endpoint:
    path: /ContactService.merge
    method: POST
    data_selector: value
    params:
      privateKey: privateKey
      contactId: contactId
      duplicateContactId: duplicateContactId
- name: clawbacks
  endpoint:
    path: APIAffiliateService.affClawbacks
    method: POST
    data_selector: params
    params:
      privateKey: string
      affiliateId: integer
      filterStartDate: dateTime
      filterEndDate: dateTime
- name: commissions
  endpoint:
    path: APIAffiliateService.affCommissions
    method: POST
    data_selector: params
    params:
      privateKey: string
      affiliateId: integer
      filterStartDate: dateTime
      filterEndDate: dateTime
- name: payments
  endpoint:
    path: APIAffiliateService.affPayouts
    method: POST
    data_selector: params
    params:
      privateKey: string
      affiliateId: integer
      filterStartDate: dateTime
      filterEndDate: dateTime
- name: redirect_links
  endpoint:
    path: AffiliateService.getRedirectLinksForAffiliate
    method: POST
    data_selector: params
    params:
      privateKey: string
      affiliateId: integer
- name: affiliate_statistics
  endpoint:
    path: APIAffiliateService.affSummary
    method: POST
    data_selector: params
    params:
      privateKey: string
      affiliateId: array
      filterStartDate: dateTime
      filterEndDate: dateTime
- name: running_totals
  endpoint:
    path: APIAffiliateService.affRunningTotals
    method: POST
    data_selector: params
    params:
      privateKey: string
      affiliateIds: array
- name: affiliate_programs
  endpoint:
    path: AffiliateProgramService.getAffiliatePrograms
    method: POST
    data_selector: params
    params:
      privateKey: string
- name: affiliates_by_program
  endpoint:
    path: AffiliateProgramService.getAffiliatesByProgram
    method: POST
    data_selector: params
    params:
      privateKey: string
      programId: integer
- name: create_record
  endpoint:
    path: /DataService.add
    method: POST
    data_selector: params
- name: retrieve_record
  endpoint:
    path: /DataService.load
    method: POST
    data_selector: params
- name: find_record
  endpoint:
    path: /DataService.findByField
    method: POST
    data_selector: params
- name: query_data_table
  endpoint:
    path: /DataService.query
    method: POST
    data_selector: params
- name: update_record
  endpoint:
    path: /DataService.update
    method: POST
    data_selector: params
- name: delete_record
  endpoint:
    path: /DataService.delete
    method: POST
    data_selector: params
- name: count_records
  endpoint:
    path: /DataService.count
    method: POST
    data_selector: params
- name: create_custom_field
  endpoint:
    path: /DataService.addCustomField
    method: POST
    data_selector: params
- name: remove_from_group
  endpoint:
    path: /ContactService.removeFromGroup
    method: POST
    data_selector: params
- name: add_to_campaign
  endpoint:
    path: /ContactService.addToCampaign
    method: POST
    data_selector: params
- name: get_next_campaign_step
  endpoint:
    path: /ContactService.getNextCampaignStep
    method: POST
    data_selector: params
- name: reschedule_campaign_step
  endpoint:
    path: /ContactService.rescheduleCampaignStep
    method: POST
    data_selector: params
- name: pause_campaign
  endpoint:
    path: /ContactService.pauseCampaign
    method: POST
    data_selector: params
- name: resume_campaign_for_contact
  endpoint:
    path: /ContactService.resumeCampaignForContact
    method: POST
    data_selector: params
- name: remove_from_campaign
  endpoint:
    path: /ContactService.removeFromCampaign
    method: POST
    data_selector: params
- name: link_contacts
  endpoint:
    path: /ContactService.linkContacts
    method: POST
    data_selector: params
- name: unlink_contacts
  endpoint:
    path: /ContactService.unlinkContacts
    method: POST
    data_selector: params
- name: list_linked_contacts
  endpoint:
    path: /ContactService.listLinkedContacts
    method: POST
    data_selector: params
- name: run_action_sequence
  endpoint:
    path: /ContactService.runActionSequence
    method: POST
    data_selector: params
- name: get_user_info
  endpoint:
    path: /DataService.getUserInfo
    method: POST
    data_selector: params
- name: Create a Product Discount
  endpoint:
    path: /DiscountService.addProductTotalDiscount
    method: POST
    data_selector: params
- name: Retrieve a Product Total Discount
  endpoint:
    path: /DiscountService.getProductTotalDiscount
    method: POST
    data_selector: params
- name: Create a Category Discount
  endpoint:
    path: /DiscountService.addCategoryDiscount
    method: POST
    data_selector: params
- name: Retrieve a Category Discount
  endpoint:
    path: /DiscountService.getCategoryDiscount
    method: POST
    data_selector: params
- name: Retrieve a Category Discount's Category Assignments
  endpoint:
    path: /DiscountService.getCategoryAssignmentsForCategoryDiscount
    method: POST
    data_selector: params
- name: Assign a Product to a Category Discount
  endpoint:
    path: /DiscountService.addCategoryAssignmentToCategoryDiscount
    method: POST
    data_selector: params
- name: Opt-in an Email Address
  endpoint:
    path: /APIEmailService.optIn
    method: POST
    data_selector: params
- name: Opt-out an Email Address
  endpoint:
    path: /APIEmailService.optOut
    method: POST
    data_selector: params
- name: Retrieve an Email's Opt-in Status
  endpoint:
    path: /APIEmailService.getOptStatus
    method: POST
    data_selector: params
- name: Create an Email Template
  endpoint:
    path: /APIEmailService.addEmailTemplate
    method: POST
    data_selector: params
- name: update_custom_field
  endpoint:
    path: /DataService.updateCustomField
    method: POST
    data_selector: result
    params:
      privateKey: string
      customFieldId: integer
      values: struct
- name: get_appointment_ical
  endpoint:
    path: /DataService.getAppointmentICal
    method: POST
    data_selector: result
    params:
      privateKey: string
      appointmentId: integer
- name: get_app_setting
  endpoint:
    path: /DataService.getAppSetting
    method: POST
    data_selector: result
    params:
      privateKey: string
      module: string
      setting: string
- name: add_order_total_discount
  endpoint:
    path: /DiscountService.addOrderTotalDiscount
    method: POST
    data_selector: result
    params:
      privateKey: string
      name: string
      description: string
      applyDiscountToCommission: integer
      percentOrAmt: integer
      amt: double
      payType: string
- name: get_order_total_discount
  endpoint:
    path: /DiscountService.getOrderTotalDiscount
    method: POST
    data_selector: result
    params:
      privateKey: string
      ID: integer
- name: add_free_trial
  endpoint:
    path: /DiscountService.addFreeTrial
    method: POST
    data_selector: result
    params:
      privateKey: string
      name: string
      description: string
      freeTrialDays: integer
      hidePrice: integer
      subscriptionPlanID: integer
- name: get_free_trial
  endpoint:
    path: /DiscountService.getFreeTrial
    method: POST
    data_selector: result
    params:
      privateKey: string
      trialId: integer
- name: add_shipping_total_discount
  endpoint:
    path: /DiscountService.addShippingTotalDiscount
    method: POST
    data_selector: result
    params:
      privateKey: string
      name: string
      description: string
      applyDiscountToCommission: integer
      percentOrAmt: integer
      amt: double
- name: get_shipping_total_discount
  endpoint:
    path: /DiscountService.getShippingTotalDiscount
    method: POST
    data_selector: result
    params:
      privateKey: string
      shippingDiscountID: integer
- name: getEmailTemplate
  endpoint:
    path: /APIEmailService.getEmailTemplate
    method: POST
    data_selector: params
    params:
      privateKey: string
      templateId: string
- name: updateEmailTemplate
  endpoint:
    path: /APIEmailService.updateEmailTemplate
    method: POST
    data_selector: params
    params:
      privateKey: string
      templateId: string
      templateName: string
      categories: string
      fromAddress: string
      toAddress: string
      ccAddress: string
      bccAddress: string
      subject: string
      textBody: string
      htmlBody: string
      contentType: string
      mergeContext: string
- name: sendEmailFromTemplate
  endpoint:
    path: /APIEmailService.sendEmail
    method: POST
    data_selector: params
    params:
      privateKey: string
      contactList: array
      templateID: string
- name: sendEmail
  endpoint:
    path: /APIEmailService.sendEmail
    method: POST
    data_selector: params
    params:
      privateKey: string
      contactList: array
      fromAddress: string
      toAddress: string
      ccAddresses: string
      bccAddresses: string
      contentType: string
      subject: string
      htmlBody: string
      textBody: string
- name: attachEmail
  endpoint:
    path: /APIEmailService.attachEmail
    method: POST
    data_selector: params
    params:
      privateKey: string
      contactId: integer
      fromName: string
      fromAddress: string
      toAddress: string
      ccAddresses: string
      bccAddresses: string
      contentType: string
      subject: string
      htmlBody: string
      textBody: string
      header: string
      receivedDate: string
      sentDate: string
      emailSentType: integer
- name: uploadFile
  endpoint:
    path: /FileService.uploadFile
    method: POST
    data_selector: params
    params:
      privateKey: string
      contactID: integer
      fileName: string
      base64EncodedData: string
- name: addOrderItem
  endpoint:
    path: /InvoiceService.addOrderItem
    method: POST
    data_selector: params
- name: addManualPayment
  endpoint:
    path: /InvoiceService.addManualPayment
    method: POST
    data_selector: params
- name: addOrderCommissionOverride
  endpoint:
    path: /InvoiceService.addOrderCommissionOverride
    method: POST
    data_selector: params
- name: recalculateTax
  endpoint:
    path: /InvoiceService.recalculateTax
    method: POST
    data_selector: params
- name: deleteInvoice
  endpoint:
    path: /InvoiceService.deleteInvoice
    method: POST
    data_selector: params
- name: addRecurringOrder
  endpoint:
    path: /InvoiceService.addRecurringOrder
    method: POST
    data_selector: params
- name: createInvoiceForRecurring
  endpoint:
    path: /InvoiceService.createInvoiceForRecurring
    method: POST
    data_selector: params
- name: updateJobRecurringNextBillDate
  endpoint:
    path: /InvoiceService.updateJobRecurringNextBillDate
    method: POST
    data_selector: params
- name: deleteSubscription
  endpoint:
    path: /InvoiceService.deleteSubscription
    method: POST
    data_selector: params
- name: validateCreditCard
  endpoint:
    path: /InvoiceService.validateCreditCard
    method: POST
    data_selector: params
    params:
      privateKey: your_infusionsoft_api_key
- name: locateExistingCard
  endpoint:
    path: /InvoiceService.locateExistingCard
    method: POST
    data_selector: params
    params:
      privateKey: your_infusionsoft_api_key
- name: getAllPaymentOptions
  endpoint:
    path: /InvoiceService.getAllPaymentOptions
    method: POST
    data_selector: params
    params:
      privateKey: your_infusionsoft_api_key
- name: addPaymentPlan
  endpoint:
    path: /InvoiceService.addPaymentPlan
    method: POST
    data_selector: params
    params:
      privateKey: your_infusionsoft_api_key
- name: placeOrder
  endpoint:
    path: /OrderService.placeOrder
    method: POST
    data_selector: params
    params:
      privateKey: your_infusionsoft_api_key
- name: getInventory
  endpoint:
    path: /ProductService.getInventory
    method: POST
    data_selector: params
    params:
      privateKey: your_infusionsoft_api_key
- name: incrementInventory
  endpoint:
    path: /ProductService.incrementInventory
    method: POST
    data_selector: params
    params:
      privateKey: your_infusionsoft_api_key
- name: getFile
  endpoint:
    path: /FileService.getFile
    method: GET
    data_selector: fileData
    params:
      privateKey: string
      fileID: integer
- name: getDownloadUrl
  endpoint:
    path: /FileService.getDownloadUrl
    method: GET
    data_selector: fileURL
    params:
      privateKey: string
      fileID: string
- name: replaceFile
  endpoint:
    path: /FileService.replaceFile
    method: POST
    data_selector: fileReplaceResponse
    params:
      privateKey: string
      fileId: integer
      base64EncodedData: string
- name: renameFile
  endpoint:
    path: /FileService.renameFile
    method: POST
    data_selector: renameResponse
    params:
      privateKey: string
      fileID: string
      fileName: string
- name: achieveGoal
  endpoint:
    path: /FunnelService.achieveGoal
    method: POST
    data_selector: goalResponse
    params:
      privateKey: string
      integration: string
      callName: string
      contactID: integer
- name: createBlankOrder
  endpoint:
    path: /InvoiceService.createBlankOrder
    method: POST
    data_selector: invoiceCreationResponse
    params:
      privateKey: string
      contactID: integer
      name: string
      orderDate: dateTime
      leadAffiliateID: integer
      saleAffiliateID: integer
- name: chargeInvoice
  endpoint:
    path: /InvoiceService.chargeInvoice
    method: POST
    data_selector: paymentResponse
    params:
      privateKey: string
      invoiceID: integer
      notes: string
      creditCardID: integer
      merchantAccountID: integer
      bypassComissions: boolean
- name: getPayments
  endpoint:
    path: /InvoiceService.getPayments
    method: GET
    data_selector: paymentData
    params:
      privateKey: string
      invoiceID: integer
- name: calculateAmountOwed
  endpoint:
    path: /InvoiceService.calculateAmountOwed
    method: GET
    data_selector: amountDue
    params:
      privateKey: string
      invoiceID: integer
- name: decrementInventory
  endpoint:
    path: /ProductService/decrementInventory
    method: POST
    data_selector: params
- name: increaseInventory
  endpoint:
    path: /ProductService/increaseInventory
    method: POST
    data_selector: params
- name: decreaseInventory
  endpoint:
    path: /ProductService/decreaseInventory
    method: POST
    data_selector: params
- name: deactivateCreditCard
  endpoint:
    path: /ProductService/deactivateCreditCard
    method: POST
    data_selector: params
- name: getAllReportColumns
  endpoint:
    path: /SearchService/getAllReportColumns
    method: POST
    data_selector: params
- name: getSavedSearchResultsAllFields
  endpoint:
    path: /SearchService/getSavedSearchResultsAllFields
    method: POST
    data_selector: params
- name: getSavedSearchResults
  endpoint:
    path: /SearchService/getSavedSearchResults
    method: POST
    data_selector: params
- name: getAvailableQuickSearches
  endpoint:
    path: /SearchService/getAvailableQuickSearches
    method: POST
    data_selector: params
- name: getDefaultQuickSearch
  endpoint:
    path: /SearchService/getDefaultQuickSearch
    method: POST
    data_selector: params
- name: quickSearch
  endpoint:
    path: /SearchService/quickSearch
    method: POST
    data_selector: params
- name: AllShippingOptions
  endpoint:
    path: /ShippingService/getAllShippingOptions
    method: GET
    data_selector: array
    params:
      privateKey: your_private_key
- name: WeightBasedShippingOption
  endpoint:
    path: /ShippingService/getWeightBasedShippingOption
    method: GET
    data_selector: struct
    params:
      privateKey: your_private_key
      optionId: optionID
- name: FlatRateShippingOption
  endpoint:
    path: /ShippingService/getFlatRateShippingOption
    method: GET
    data_selector: struct
    params:
      privateKey: your_private_key
      optionId: optionID
- name: ProductBasedShippingOption
  endpoint:
    path: /ShippingService/getProductBasedShippingOption
    method: GET
    data_selector: struct
    params:
      privateKey: your_private_key
      optionId: optionID
- name: OrderTotalShippingOption
  endpoint:
    path: /ShippingService/getOrderTotalShippingOption
    method: GET
    data_selector: array
    params:
      privateKey: your_private_key
      optionId: optionID
- name: OrderQuantityShippingOption
  endpoint:
    path: /ShippingService/getOrderQuantityShippingOption
    method: GET
    data_selector: struct
    params:
      privateKey: your_private_key
      optionId: optionID
- name: OrderTotalShippingRanges
  endpoint:
    path: /ShippingService/getOrderTotalShippingRanges
    method: GET
    data_selector: array
    params:
      privateKey: your_private_key
      optionId: optionID
- name: UpsShippingOption
  endpoint:
    path: /ShippingService/getUpsShippingOption
    method: GET
    data_selector: struct
    params:
      privateKey: your_private_key
      optionId: optionID
- name: WebFormHTML
  endpoint:
    path: /WebFormService/getHTML
    method: GET
    data_selector: html
    params:
      privateKey: your_private_key
      formID: formID
- name: WebFormMap
  endpoint:
    path: /WebFormService/getMap
    method: GET
    data_selector: struct
    params:
      privateKey: your_private_key
notes:
- All requests to the REST API will be required to use OAuth 2.0.
- Do not use the API for continuous or overtly frequent data synchronization or export
- Do not use the API in infinite loops
- Do not use the API without proper error handling
- Do not use the API for unfiltered searches/queries
- Keap uses OAuth 2.0 as the authentication standard for the API and is a requirement
  for all marketplace listings.
- Throttling depends on the authentication method you are using.
- Current turn-around time for support tickets is 7 days or longer.
- Do not send private keys or secrets (Personal Access Tokens, Service Account Keys,
  Refresh Tokens or Access Tokens).
- Keap sandbox accounts are typically used by developers providing on-going maintenance
  and services to their app (integration, add-on, plug-in, etc.) or for initial development.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Currently you can only complete a goal in a campaign using the FunnelService
- Each key/secret pair has a limit of 1500 Queries per Minute and 150000 Queries per
  Day.
errors:
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 500 Internal Server Error
- '401 Unauthorized: Authentication failed'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource not found'
- '500 Internal Server Error: An error occurred on the server'
- '401 Unauthorized: Check client_id and client_secret.'
auth_info:
  mentioned_objects:
  - Personal Access Token
  - OAuth2 Bearer Token
  - iSDK
  - Infusionsoft
client:
  base_url: https://api.infusionsoft.com/crm/rest/v1
  headers:
    Content-Type: application/json
source_metadata: null
