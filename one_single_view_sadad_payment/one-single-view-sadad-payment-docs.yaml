resources:
- name: svSadadPaymentService
  endpoint:
    path: /v1/api/erp/svSadadPaymentService
    method: POST
    data_selector: svSadadPaymentServiceRS
- name: svSadadPaymentService
  endpoint:
    path: /v1/api/erp/svSadadPaymentService
    method: POST
    data_selector: svSadadPaymentServiceRS
    params: {}
- name: SADAD Bill Enquiry
  endpoint:
    path: /v1.0.2/docs/b2b-payouts-sadad-bills#bill-enquiry
    method: GET
- name: SADAD Bill Payment
  endpoint:
    path: /v1.0.2/docs/b2b-payouts-sadad-bills#bill-payment
    method: POST
- name: accounts
  endpoint:
    path: /ais/accounts
    method: GET
- name: balance
  endpoint:
    path: /ais/balance
    method: GET
- name: transactions
  endpoint:
    path: /ais/transactions
    method: GET
- name: parties
  endpoint:
    path: /ais/parties
    method: GET
- name: access_token
  endpoint:
    path: /v1/api/observice/token
    method: POST
    data_selector: payload
    params: {}
- name: access_token
  endpoint:
    path: /v1/api/observice/token
    method: POST
    data_selector: payload
    params: {}
- name: consent_management
  endpoint:
    path: /docs/open-banking-api-ais-consent
    method: GET
- name: accounts
  endpoint:
    path: /docs/open-banking-api-ais-accounts
    method: GET
- name: balance
  endpoint:
    path: /docs/open-banking-api-ais-balance
    method: GET
- name: transactions
  endpoint:
    path: /docs/open-banking-api-ais-transactions
    method: GET
- name: parties
  endpoint:
    path: /docs/open-banking-api-ais-parties
    method: GET
- name: direct_debits
  endpoint:
    path: /docs/open-banking-api-ais-direct-debits
    method: GET
- name: standing_orders
  endpoint:
    path: /docs/open-banking-api-ais-standing-orders
    method: GET
- name: scheduled_payments
  endpoint:
    path: /docs/open-banking-api-ais-scheduled-payments
    method: GET
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
    data_selector: payload
    params: {}
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
    data_selector: payload
    params: {}
- name: revoke_consent
  endpoint:
    path: /v1/api/observice/consent/revoke
    method: POST
    data_selector: payload
    params: {}
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
- name: Create Consent
  endpoint:
    path: /consent
    method: POST
    data_selector: payload
    params:
      dateTimeStamp: YYYY-MM-DDTHH:MM:SS
      requestID: UUID
      merchantId: UUID
      banks:
      - code: Alphanumeric
      consentId: String
- name: Revoke Consent
  endpoint:
    path: /consent/revoke
    method: POST
    data_selector: payload
    params: {}
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
- name: revoke_consent
  endpoint:
    path: /v1/api/observice/consent/delete
    method: POST
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
- name: revoke_consent
  endpoint:
    path: /v1/api/observice/consent/revoke
    method: POST
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
    data_selector: payload
    params: {}
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
    data_selector: payload
    params: {}
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
    data_selector: payload
    params: {}
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
    data_selector: payload
    params: {}
- name: revoke_consent
  endpoint:
    path: /v1/api/observice/consent/revoke
    method: POST
    data_selector: payload
    params: {}
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
- name: revoke_consent
  endpoint:
    path: /v1/api/observice/consent/delete
    method: POST
- name: accounts
  endpoint:
    path: /open-banking/api/ais/accounts
    method: GET
    data_selector: payload
    params: {}
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
- name: get_consent_details
  endpoint:
    path: /v1/api/observice/consent/details
    method: POST
- name: revoke_consent
  endpoint:
    path: /v1/api/observice/revoke/consent
    method: POST
- name: get_all_accounts_info
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
    data_selector: payload
    params: {}
- name: get_account_info_by_account_id
  endpoint:
    path: /v1/api/observice/accountsById
    method: POST
    data_selector: payload
    params: {}
- name: create_consent
  endpoint:
    path: /v1/api/observice/connect
    method: POST
- name: accounts
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
    data_selector: payload
    params: {}
- name: accounts
  endpoint:
    path: /open-banking/account-information
    method: GET
    data_selector: payload
    params: {}
- name: balance
  endpoint:
    path: /v1/api/observice/balanceById
    method: POST
    data_selector: payload
    params: {}
- name: get_all_accounts_info
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
- name: get_account_info_by_id
  endpoint:
    path: /v1/api/observice/accountsById
    method: POST
- name: transactionsById
  endpoint:
    path: /v1/api/observice/transactionsById
    method: POST
    data_selector: transactions
    params: {}
- name: transactions
  endpoint:
    path: /get/account/transactions
    method: GET
- name: accounts
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
    data_selector: payload
    params: {}
- name: parties
  endpoint:
    path: /open-banking/account-information/2022.11.01-final-errata2/accounts/{accountId}/parties
    method: GET
    data_selector: payload
- name: balance
  endpoint:
    path: /v1/api/observice/balanceById
    method: POST
    data_selector: payload
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: parties
  endpoint:
    path: /v1/api/observice/parties
    method: POST
- name: transactions
  endpoint:
    path: /v1/api/observice/transactionsById
    method: POST
    data_selector: transactions
    params: {}
- name: parties
  endpoint:
    path: /reference/open-banking-api-ais-get-parties-by-account-id
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /get/account/transactions
    method: GET
    data_selector: data.transactions
- name: partiesById
  endpoint:
    path: /partiesById
    method: POST
    data_selector: payload
    params: {}
- name: parties
  endpoint:
    path: /open-banking/account-information/2022.11.01-final-errata2/accounts/{accountId}/parties
    method: GET
- name: party
  endpoint:
    path: /parties
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /get-all-accounts-parties
    method: GET
    data_selector: data
- name: parties
  endpoint:
    path: /v1/api/observice/parties
    method: POST
- name: parties
  endpoint:
    path: /v1/api/observice/parties
    method: POST
    data_selector: payload
- name: parties_by_account_id
  endpoint:
    path: /api/v1/parties/account/{account_id}
    method: GET
    data_selector: data
- name: parties
  endpoint:
    path: /accounts/{accountId}/parties
    method: GET
    data_selector: data
- name: parties_by_account_id
  endpoint:
    path: /v1/api/observice/partiesById
    method: POST
- name: party
  endpoint:
    path: /path/to/party/endpoint
    method: GET
    data_selector: data.party
    params: {}
- name: direct_debits
  endpoint:
    path: /v1/api/observice/directDebitsById
    method: POST
    data_selector: payload
    params: {}
- name: parties
  endpoint:
    path: /v1/api/observice/parties
    method: POST
- name: parties
  endpoint:
    path: /parties
    method: GET
    data_selector: data
    params: {}
- name: standing_orders
  endpoint:
    path: /v1/api/observice/standingOrdersById
    method: POST
    data_selector: payload
    params: {}
- name: direct_debits
  endpoint:
    path: /v1/api/observice/directDebitsById
    method: POST
    data_selector: payload
    params: {}
- name: scheduled_payments
  endpoint:
    path: /v1/api/observice/scheduledPaymentsById
    method: POST
    data_selector: payload
    params: {}
- name: standing_orders
  endpoint:
    path: /v1/api/observice/standingOrdersById
    method: POST
- name: account_aggregation
  endpoint:
    path: /v1/api/observice/accountAggregation
    method: POST
- name: scheduled_payments
  endpoint:
    path: /v1/api/observice/scheduledPaymentsById
    method: POST
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: all_accounts_check
  endpoint:
    path: /v1/api/observice/allAccountsCheck
    method: POST
    data_selector: response
    params: {}
- name: account
  endpoint:
    path: /api/account
    method: GET
    data_selector: payload.account
    params: {}
- name: account_aggregation
  endpoint:
    path: /v1/api/observice/accountAggregation
    method: POST
    data_selector: response
    params: {}
- name: account_information
  endpoint:
    path: /open-banking/account-information/2022.11.01-final-errata2/accounts
    method: GET
    data_selector: accounts
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /getAccountCheck
    method: GET
    data_selector: data
    params: {}
- name: allAccountsBalance
  endpoint:
    path: /v1/api/observice/allAccountsBalance
    method: POST
    data_selector: payload
    params: {}
- name: allAccountsCheck
  endpoint:
    path: /v1/api/observice/allAccountsCheck
    method: POST
    data_selector: accounts
    params: {}
- name: account
  endpoint:
    path: /account/check/services
    method: GET
    data_selector: payload.account
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
    data_selector: data
    params: {}
- name: account_information
  endpoint:
    path: /open-banking/account-information/2022.11.01-final-errata2/accounts
    method: GET
    data_selector: data
    params: {}
- name: payload
  endpoint:
    path: /credit-check
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: allAccountsBalance
  endpoint:
    path: /v1/api/observice/allAccountsBalance
    method: POST
    data_selector: payload
    params: {}
- name: debits
  endpoint:
    path: /debits
    method: GET
    data_selector: totalCount
- name: cashWithdrawals
  endpoint:
    path: /cashWithdrawals
    method: GET
    data_selector: totalCount
- name: inwardReturns
  endpoint:
    path: /inwardReturns
    method: GET
    data_selector: totalCount
- name: monthlyReport
  endpoint:
    path: /monthlyReport
    method: GET
    data_selector: date
- name: expenseReport
  endpoint:
    path: /expenseReport
    method: GET
    data_selector: date
- name: overallLoanReport
  endpoint:
    path: /overallLoanReport
    method: GET
    data_selector: monthlyReport
- name: overallOtherConductReport
  endpoint:
    path: /overallOtherConductReport
    method: GET
    data_selector: monthlyReport
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
- name: payload
  endpoint:
    path: /credit/check/services
    method: GET
    data_selector: data
- name: customer_verification
  endpoint:
    path: /v1/api/observice/parties
    method: POST
- name: customer_verification
  endpoint:
    path: /open-banking/account-information/2022.11.01-final-errata2/parties
    method: GET
    data_selector: payload.data
    params: {}
- name: debits
  endpoint:
    path: /debits
    method: GET
    data_selector: debits
    params: {}
- name: cashWithdrawals
  endpoint:
    path: /cashWithdrawals
    method: GET
    data_selector: cashWithdrawals
    params: {}
- name: inwardReturns
  endpoint:
    path: /inwardReturns
    method: GET
    data_selector: inwardReturns
    params: {}
- name: monthlyDebitAnalysis
  endpoint:
    path: /monthlyReport
    method: GET
    data_selector: monthlyReport
    params: {}
- name: expenseReport
  endpoint:
    path: /expenseReport
    method: GET
    data_selector: expenseReport
    params: {}
- name: overallLoanReport
  endpoint:
    path: /overAllLoanReport
    method: GET
    data_selector: overallLoanReport
    params: {}
- name: overallOtherConductReport
  endpoint:
    path: /overAllOtherConductReport
    method: GET
    data_selector: overallOtherConductReport
    params: {}
- name: data_enrichment_txns
  endpoint:
    path: /v1/api/observice/dataEnrichmentTxns
    method: POST
- name: data
  endpoint:
    path: /getDataEnrichment
    method: GET
    data_selector: payload.data
    params: {}
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
    params: {}
- name: customer_verification
  endpoint:
    path: /v1/api/observice/parties
    method: POST
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
- name: customer_verification
  endpoint:
    path: /open-banking/account-information/2022.11.01-final-errata2/parties
    method: GET
    data_selector: payload
    params: {}
- name: data_enrichment_txns
  endpoint:
    path: /v1/api/observice/dataEnrichmentTxns
    method: POST
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
- name: data
  endpoint:
    path: /get-data-enrichment
    method: GET
- name: account
  endpoint:
    path: /get-account
    method: GET
- name: transactions
  endpoint:
    path: /get-transactions
    method: GET
- name: e_statement
  endpoint:
    path: /get-e-statement
    method: GET
    data_selector: data
    params: {}
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
    data_selector: response
    params: {}
- name: IBAN Verification
  endpoint:
    path: /v1/api/observice/connect
    method: GET
    data_selector: payload
    params:
      useCaseType: IBANVALIDATIONS
      permissions:
      - ReadAccountsBasic
      - ReadAccountsDetail
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: get_all_accounts_iban_verification
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
    data_selector: payload
    params: {}
- name: get_iban_verification_by_account_id
  endpoint:
    path: /v1/api/observice/accountsById
    method: POST
    data_selector: payload
    params: {}
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
- name: accounts
  endpoint:
    path: /get-e-statement-services
    method: GET
    data_selector: data
- name: iban_verification
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
    data_selector: payload
    params: {}
- name: IBAN Verification
  endpoint:
    path: /v1/api/observice/connect
    method: GET
    data_selector: payload
    params:
      useCaseType: IBANVALIDATIONS
      permissions:
      - ReadAccountsBasic
      - ReadAccountsDetail
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
- name: kyc
  endpoint:
    path: /v1/api/observice/kyc
    method: POST
- name: get_all_accounts_iban_verification
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
- name: get_iban_verification_by_account_id
  endpoint:
    path: /v1/api/observice/accountsById
    method: POST
- name: kyc_data
  endpoint:
    path: /parties
    method: GET
    data_selector: payload
    params: {}
- name: get_all_accounts_iban_verification
  endpoint:
    path: /v1/api/observice/accounts
    method: POST
- name: update_sdk_designation_account
  endpoint:
    path: /v1/api/bank/accounts/updateSdkDesignationAccount
    method: POST
    data_selector: success
    params: {}
- name: allAccountsTransactions
  endpoint:
    path: /v1/api/observice/allAccountsTransactions
    method: POST
- name: scheduled_payments
  endpoint:
    path: /ais/scheduled-payments
    method: GET
    data_selector: result
    params: {}
- name: kyc
  endpoint:
    path: /v1/api/observice/kyc
    method: POST
- name: getSchedulePaymentsByAccount
  endpoint:
    path: /getSchedulePaymentsByAccount
    method: GET
- name: getAccountAggregationData
  endpoint:
    path: /getAccountAggregationData
    method: GET
- name: getEStatementData
  endpoint:
    path: /getEStatementData
    method: GET
- name: getIncomeCheckData
  endpoint:
    path: /getIncomeCheckData
    method: GET
- name: getExpenseCheckData
  endpoint:
    path: /getExpenseCheckData
    method: GET
- name: getKYCInfoData
  endpoint:
    path: /getKYCInfoData
    method: GET
- name: getCreditCheckData
  endpoint:
    path: /getCreditCheckData
    method: GET
- name: getIBANVerificationForAllAccountsResponse
  endpoint:
    path: /getIBANVerificationForAllAccountsResponse
    method: GET
- name: getIBANVerificationByAccountResponse
  endpoint:
    path: /getIBANVerificationByAccountResponse
    method: GET
- name: getCustomerVerificationResponse
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
- name: getTaxFilingData
  endpoint:
    path: /getTaxFilingData
    method: GET
- name: payload
  endpoint:
    path: /open-banking/account-information/2022.11.01-final-errata2/parties
    method: GET
    data_selector: payload
- name: accounts
  endpoint:
    path: /getAllAccounts
    method: GET
    data_selector: accounts
- name: transactions
  endpoint:
    path: /getAllTransactions
    method: GET
    data_selector: transactions
- name: update_sdk_designation_account
  endpoint:
    path: /bank/accounts/updateSdkDesignationAccount
    method: POST
    data_selector: success
    params: {}
- name: customer_verification
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
    data_selector: result
    params: {}
- name: tax_filing_data
  endpoint:
    path: /getTaxFilingData
    method: GET
    data_selector: result
    params:
      fromDate: string
      toDate: string
      bank: '[SingleViewSDK.SVRequestBank]'
- name: scheduled_payments
  endpoint:
    path: /api/v1/scheduled-payments
    method: GET
    data_selector: results
- name: accounts_check
  endpoint:
    path: /getAccountsCheck
    method: GET
    data_selector: accounts
    params: {}
- name: balance
  endpoint:
    path: /getBalance
    method: GET
    data_selector: balance
    params: {}
- name: transactions
  endpoint:
    path: /getTransactions
    method: GET
    data_selector: transactions
    params: {}
- name: getKYC
  endpoint:
    path: /getKyc
    method: GET
    data_selector: kyc
    params:
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: creditCheck
  endpoint:
    path: /creditCheck
    method: GET
    data_selector: creditCheck
    params:
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: ibanValidation
  endpoint:
    path: /ibanValidation
    method: GET
    data_selector: ibanCheck
    params:
      banks:
      - code: your-bank-code
        consentId: your-consent-id
        iban: account-iban
- name: customerVerification
  endpoint:
    path: /customerVerification
    method: GET
    data_selector: customerVerification
    params:
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: getSchedulePaymentsByAccount
  endpoint:
    path: /getSchedulePaymentsByAccount
    method: GET
    data_selector: response
- name: getAccountAggregationData
  endpoint:
    path: /getAccountAggregationData
    method: GET
    data_selector: response
    params:
      fromDate: ISO format
      toDate: ISO format
- name: getEStatementData
  endpoint:
    path: /getEStatementData
    method: GET
    data_selector: response
    params:
      fromDate: ISO format
      toDate: ISO format
- name: getIncomeCheckData
  endpoint:
    path: /getIncomeCheckData
    method: GET
    data_selector: response
    params:
      fromDate: ISO format
      toDate: ISO format
- name: getExpenseCheckData
  endpoint:
    path: /getExpenseCheckData
    method: GET
    data_selector: response
    params:
      fromDate: ISO format
      toDate: ISO format
- name: getKYCInfoData
  endpoint:
    path: /getKYCInfoData
    method: GET
    data_selector: response
    params:
      fromDate: ISO format
      toDate: ISO format
- name: getCreditCheckData
  endpoint:
    path: /getCreditCheckData
    method: GET
    data_selector: response
    params:
      fromDate: ISO format
      toDate: ISO format
- name: getIBANVerificationForAllAccountsResponse
  endpoint:
    path: /getIBANVerificationForAllAccountsResponse
    method: GET
    data_selector: response
- name: getIBANVerificationByAccountResponse
  endpoint:
    path: /getIBANVerificationByAccountResponse
    method: GET
    data_selector: response
- name: getCustomerVerificationResponse
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
    data_selector: response
- name: getTaxFilingData
  endpoint:
    path: /getTaxFilingData
    method: GET
    data_selector: response
    params:
      fromDate: ISO format
      toDate: ISO format
- name: payment_consent
  endpoint:
    path: /payment/single/sip/consent
    method: POST
    data_selector: payload
    params: {}
- name: create_consent
  endpoint:
    path: /createConsent
    method: POST
- name: get_all_merchants
  endpoint:
    path: /getAllMerchants
    method: GET
- name: get_all_accounts_balance
  endpoint:
    path: /getAllAccountsBalance
    method: GET
- name: get_all_accounts_transactions
  endpoint:
    path: /getAllAccountsTransactions
    method: GET
- name: payment_status
  endpoint:
    path: /payment/status
    method: POST
    data_selector: paymentInitiationRes
- name: customer_verification
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
    data_selector: result
    params: {}
- name: tax_filing
  endpoint:
    path: /getTaxFilingData
    method: GET
    data_selector: result
    params:
      fromDate: string
      toDate: string
      bank: '[SingleViewSDK.SVRequestBank]'
- name: Consent Management
  endpoint:
    path: /ais/consent-management
    method: GET
- name: Accounts
  endpoint:
    path: /ais/accounts
    method: GET
- name: Balance
  endpoint:
    path: /ais/balance
    method: GET
- name: Transactions
  endpoint:
    path: /ais/transactions
    method: GET
- name: Parties
  endpoint:
    path: /ais/parties
    method: GET
- name: Direct Debits
  endpoint:
    path: /ais/direct-debits
    method: GET
- name: Standing Orders
  endpoint:
    path: /ais/standing-orders
    method: GET
- name: Scheduled Payments
  endpoint:
    path: /ais/scheduled-payments
    method: GET
- name: accounts_check
  endpoint:
    path: /getAccountsCheck
    method: POST
    data_selector: accounts
    params: {}
- name: balance
  endpoint:
    path: /getBalance
    method: POST
    data_selector: balance
    params: {}
- name: transactions
  endpoint:
    path: /getTransactions
    method: POST
    data_selector: transactions
    params: {}
- name: direct_debits
  endpoint:
    path: /getDirectDebits
    method: POST
    data_selector: direct_debits
    params: {}
- name: standing_orders
  endpoint:
    path: /getStandingOrder
    method: POST
    data_selector: standing_orders
    params: {}
- name: scheduled_payments
  endpoint:
    path: /getSchedulePayments
    method: POST
    data_selector: scheduled_payments
    params: {}
- name: Account Aggregation
  endpoint:
    path: /getAccountAggregationData
    method: POST
    data_selector: result
- name: E-Statement
  endpoint:
    path: /getEStatementData
    method: POST
    data_selector: result
- name: Income Check
  endpoint:
    path: /getIncomeCheckData
    method: POST
    data_selector: result
- name: Expense Check
  endpoint:
    path: /getExpenseCheckData
    method: POST
    data_selector: result
- name: KYC Info
  endpoint:
    path: /getKYCInfoData
    method: POST
    data_selector: result
- name: Credit Check
  endpoint:
    path: /getCreditCheckData
    method: POST
    data_selector: result
- name: IBAN Verification
  endpoint:
    path: /getIBANVerificationForAllAccountsResponse
    method: POST
    data_selector: result
- name: customer_verification
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
    data_selector: result
    params: {}
- name: tax_filing
  endpoint:
    path: /getTaxFilingData
    method: GET
    data_selector: result
    params:
      fromDate: string
      toDate: string
- name: getKyc
  endpoint:
    path: /getKyc
    method: GET
    data_selector: kycInfo
    params:
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: creditCheck
  endpoint:
    path: /creditCheck
    method: GET
    data_selector: accountInfo
    params:
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: ibanValidation
  endpoint:
    path: /ibanValidation
    method: GET
    data_selector: ibanInfo
    params:
      banks:
      - code: your-bank-code
        consentId: your-consent-id
        iban: account-iban
- name: customerVerification
  endpoint:
    path: /customerVerification
    method: GET
    data_selector: verificationResponse
    params:
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: scheduled_payments
  endpoint:
    path: /api/scheduled-payments
    method: GET
    data_selector: result
- name: payment_consent
  endpoint:
    path: /payment/single/sip/consent
    method: POST
    data_selector: payload
- name: payment_status
  endpoint:
    path: /payment/status
    method: POST
    data_selector: paymentInitiationRes
- name: accounts
  endpoint:
    path: /ais/accounts
    method: GET
- name: balance
  endpoint:
    path: /ais/balance
    method: GET
- name: transactions
  endpoint:
    path: /ais/transactions
    method: GET
- name: parties
  endpoint:
    path: /ais/parties
    method: GET
- name: direct_debits
  endpoint:
    path: /ais/direct-debits
    method: GET
- name: standing_orders
  endpoint:
    path: /ais/standing-orders
    method: GET
- name: scheduled_payments
  endpoint:
    path: /ais/scheduled-payments
    method: GET
- name: getSchedulePaymentsByAccount
  endpoint:
    path: /getSchedulePaymentsByAccount
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      AccountID: ''
- name: getAccountAggregationData
  endpoint:
    path: /getAccountAggregationData
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      fromDate: ''
      toDate: ''
- name: getEStatementData
  endpoint:
    path: /getEStatementData
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      fromDate: ''
      toDate: ''
- name: getIncomeCheckData
  endpoint:
    path: /getIncomeCheckData
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      fromDate: ''
      toDate: ''
- name: getExpenseCheckData
  endpoint:
    path: /getExpenseCheckData
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      fromDate: ''
      toDate: ''
- name: getKYCInfoData
  endpoint:
    path: /getKYCInfoData
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      fromDate: ''
      toDate: ''
- name: getCreditCheckData
  endpoint:
    path: /getCreditCheckData
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      fromDate: ''
      toDate: ''
- name: getIBANVerificationForAllAccountsResponse
  endpoint:
    path: /getIBANVerificationForAllAccountsResponse
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
- name: getIBANVerificationByAccountResponse
  endpoint:
    path: /getIBANVerificationByAccountResponse
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
- name: getCustomerVerificationResponse
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
    data_selector: result
    params:
      bankCode: ''
- name: getTaxFilingData
  endpoint:
    path: /getTaxFilingData
    method: GET
    data_selector: result
    params:
      bankCode: ''
      ConsentID: ''
      fromDate: ''
      toDate: ''
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: balance
  endpoint:
    path: /balance
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: customer_verification
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
- name: tax_filing
  endpoint:
    path: /getTaxFilingData
    method: GET
- name: scheduled_payments
  endpoint:
    path: /api/v1/scheduled_payments
    method: GET
    data_selector: records
- name: account_check
  endpoint:
    path: /getAccountsCheck
    method: POST
    data_selector: accounts
    params: {}
- name: balance_check
  endpoint:
    path: /getBalance
    method: POST
    data_selector: balance
    params: {}
- name: transactions
  endpoint:
    path: /getTransactions
    method: POST
    data_selector: transactions
    params: {}
- name: getSchedulePaymentsByAccount
  endpoint:
    path: /getSchedulePaymentsByAccount
    method: GET
- name: getAccountAggregationData
  endpoint:
    path: /getAccountAggregationData
    method: GET
- name: getEStatementData
  endpoint:
    path: /getEStatementData
    method: GET
- name: getIncomeCheckData
  endpoint:
    path: /getIncomeCheckData
    method: GET
- name: getExpenseCheckData
  endpoint:
    path: /getExpenseCheckData
    method: GET
- name: getKYCInfoData
  endpoint:
    path: /getKYCInfoData
    method: GET
- name: getCreditCheckData
  endpoint:
    path: /getCreditCheckData
    method: GET
- name: getIBANVerificationForAllAccountsResponse
  endpoint:
    path: /getIBANVerificationForAllAccountsResponse
    method: GET
- name: getIBANVerificationByAccountResponse
  endpoint:
    path: /getIBANVerificationByAccountResponse
    method: GET
- name: getCustomerVerificationResponse
  endpoint:
    path: /getCustomerVerificationResponse
    method: GET
- name: getTaxFilingData
  endpoint:
    path: /getTaxFilingData
    method: GET
- name: getKYC
  endpoint:
    path: /getKYC
    method: POST
    data_selector: kyc
    params:
      merchantId: your-merchant-id
      kyc: true
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: creditCheck
  endpoint:
    path: /creditCheck
    method: POST
    data_selector: creditCheck
    params:
      merchantId: your-merchant-id
      creditCheck: true
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: ibanValidation
  endpoint:
    path: /ibanValidation
    method: POST
    data_selector: ibanCheck
    params:
      merchantId: your-merchant-id
      ibanCheck: true
      banks:
      - code: your-bank-code
        consentId: your-consent-id
        iban: account-iban
- name: customerVerification
  endpoint:
    path: /customerVerification
    method: POST
    data_selector: customerVerification
    params:
      merchantId: your-merchant-id
      customerVerification: true
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: accounts_check
  endpoint:
    path: /getAccountsCheck
    method: POST
    data_selector: response
    params: {}
- name: balance
  endpoint:
    path: /getBalance
    method: POST
    data_selector: response
    params: {}
- name: transactions
  endpoint:
    path: /getTransactions
    method: POST
    data_selector: response
    params: {}
- name: direct_debits
  endpoint:
    path: /getDirectDebits
    method: POST
    data_selector: response
    params: {}
- name: standing_orders
  endpoint:
    path: /getStandingOrder
    method: POST
    data_selector: response
    params: {}
- name: scheduled_payments
  endpoint:
    path: /getSchedulePayments
    method: POST
    data_selector: response
    params: {}
- name: getKYC
  endpoint:
    path: /getKyc
    method: POST
    data_selector: data
    params:
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: creditCheck
  endpoint:
    path: /creditCheck
    method: POST
    data_selector: data
    params:
      txnFromDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      txnToDate: YYYY-MM-DDTHH:MM:SS.XXXZ
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: ibanValidation
  endpoint:
    path: /ibanValidation
    method: POST
    data_selector: data
    params:
      banks:
      - code: your-bank-code
        consentId: your-consent-id
        iban: account-iban
- name: customerVerification
  endpoint:
    path: /customerVerification
    method: POST
    data_selector: data
    params:
      banks:
      - code: your-bank-code
        consentId: your-consent-id
- name: create_group_company
  endpoint:
    path: /v1/api/erp/svGrpCmpService
    method: POST
    data_selector: svGrpCmpServiceRS
    params: {}
- name: add_supplier
  endpoint:
    path: /v1/api/erp/svSupplierService
    method: POST
- name: add_account
  endpoint:
    path: /v1/api/erp/svAccService
    method: POST
    data_selector: svAccServiceRQ
- name: Payments
  endpoint:
    path: /erp-integration-api/payments
    method: POST
- name: svPaymentService
  endpoint:
    path: /v1/api/erp/svPaymentService
    method: POST
    data_selector: svPaymentServiceRS
    params: {}
- name: payment
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-payment-attachment-upload
    method: GET
    data_selector: svPaymentServiceRS
    params: {}
- name: create_group_company
  endpoint:
    path: /v1/api/erp/svGrpCmpService
    method: POST
    data_selector: svGrpCmpServiceRQ
- name: upload_payment_attachment
  endpoint:
    path: /svPaymentAttachementService
    method: POST
    data_selector: svPaymentAttachementServiceRS
    params: {}
- name: svSupplierService
  endpoint:
    path: /v1/api/erp/svSupplierService
    method: POST
- name: payment_enquiry
  endpoint:
    path: /v1/api/erp/svPayEnquiryService/
    method: POST
    data_selector: svPayEnquiryServiceRS
    params: {}
- name: add_account
  endpoint:
    path: /v1/api/erp/svAccService
    method: POST
- name: payment_status
  endpoint:
    path: /erp-integration-api/payment-status
    method: GET
    data_selector: payments
    params: {}
- name: payment_charges
  endpoint:
    path: /erp-integration-api/payment-charges
    method: GET
    data_selector: payments
    params: {}
- name: payments
  endpoint:
    path: /erp-integration-api/payments
    method: POST
    data_selector: paymentResponse
- name: svARAPService
  endpoint:
    path: /v1/api/erp/svARAPService
    method: POST
    data_selector: svARAPServiceRS.company
    params: {}
- name: svPaymentService
  endpoint:
    path: /v1/api/erp/svPaymentService
    method: POST
    data_selector: svPaymentServiceRS
- name: payment_service_response
  endpoint:
    path: /v1.0.4/process_payment
    method: POST
    data_selector: svPaymentServiceRS
    params: {}
- name: error_posting
  endpoint:
    path: /v1/api/erp/error
    method: POST
- name: payment_attachment
  endpoint:
    path: /v1/api/erp/svPaymentAttachementService
    method: POST
    data_selector: svPaymentAttachementServiceRS
    params: {}
- name: payroll
  endpoint:
    path: /v1/api/erp/svPayrollService
    method: POST
    data_selector: svPayrollServiceRQ
- name: payment_enquiry
  endpoint:
    path: /v1/api/erp/svPayEnquiryService/
    method: POST
    data_selector: svPayEnquiryServiceRS
    params: {}
- name: svPayrollServiceRQ
  endpoint:
    path: /v1.0.4/payroll
    method: POST
    data_selector: svPayrollServiceRS
    params: {}
- name: payment_status
  endpoint:
    path: /erp-integration-api-payment-status
    method: GET
    data_selector: payments
- name: payment_charges
  endpoint:
    path: /erp-integration-api-payment-charges
    method: GET
    data_selector: payments
- name: payroll_approval_status
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-payroll-webhook
    method: POST
    data_selector: service
    params: {}
- name: payroll_payment_status
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-payroll-webhook
    method: POST
    data_selector: service
    params: {}
- name: svARAPService
  endpoint:
    path: /v1/api/erp/svARAPService
    method: POST
    data_selector: svARAPServiceRS.company
    params: {}
- name: SADAD Enquiry
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-sadad-enquiry
    method: GET
    data_selector: bill_info
    params: {}
- name: SADAD Payment
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-sadad-payment
    method: POST
    data_selector: payment_info
    params: {}
- name: error_posting
  endpoint:
    path: /v1/api/erp/error
    method: POST
- name: svSadadEnqService
  endpoint:
    path: /v1/api/erp/svSadadEnqService
    method: POST
    data_selector: svSadadEnqServiceRS
    params: {}
- name: payroll
  endpoint:
    path: /v1/api/erp/svPayrollService
    method: POST
- name: svPayrollServiceRS
  endpoint:
    method: POST
    data_selector: svPayrollServiceRS
    params: {}
- name: create_virtual_account
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-create
    method: POST
    data_selector: virtual_account
    params: {}
- name: add_virtual_account
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-add
    method: POST
    data_selector: virtual_account
    params: {}
- name: virtual_account_statement
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-statement
    method: GET
    data_selector: statement
    params: {}
- name: virtual_account_webhook
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-webhook
    method: POST
    data_selector: webhook
    params: {}
- name: payroll_approval_status
  endpoint:
    path: /erp-integration-api/payment-webhook
    method: POST
    data_selector: service
    params: {}
- name: payroll_payment_status
  endpoint:
    path: /erp-integration-api/payment-webhook
    method: POST
    data_selector: service
    params: {}
- name: virtual_account
  endpoint:
    path: /v1/api/erp/svVAService
    method: POST
    data_selector: svVAServiceRS.company
    params: {}
- name: SADAD Enquiry
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-sadad-enquiry
    method: GET
- name: SADAD Payment
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-sadad-payment
    method: POST
- name: svSadadEnqService
  endpoint:
    path: /v1/api/erp/svSadadEnqService
    method: POST
    data_selector: svSadadEnqServiceRS
    params: {}
- name: Add Virtual Account
  endpoint:
    path: /v1/api/erp/svVAService
    method: POST
    data_selector: svVAServiceRS
    params: {}
- name: VA Statement
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-statement
    method: GET
- name: create_virtual_account
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-create
    method: POST
- name: add_virtual_account
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-add
    method: POST
- name: virtual_account_statement
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-statement
    method: GET
- name: virtual_account_webhook_notification
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-webhook
    method: POST
- name: virtual_account_transaction_webhook
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-webhook
    method: POST
    data_selector: svWebhookNotificationServiceRQ
- name: create_virtual_account
  endpoint:
    path: /v1/api/erp/svVAService
    method: POST
    data_selector: svVAServiceRS
- name: balance_enquiry
  endpoint:
    path: /v1/api/erp/svBalanceEnqService
    method: POST
    data_selector: svBalanceEnqServiceRS
    params: {}
- name: svStmtServiceRQ
  endpoint:
    path: /v1/api/erp/svStmtServiceRQ
    method: POST
    data_selector: svStmtServiceRS
- name: Add Virtual Account
  endpoint:
    path: /v1/api/erp/svVAService
    method: POST
    data_selector: svVAServiceRS
- name: iban_validation
  endpoint:
    path: /v1/api/erp/svibanValServiceRQ
    method: POST
    data_selector: svibanValServiceRS
- name: VA Statement
  endpoint:
    path: /v1.0.4/docs/erp-integration-api-virtual-accounts-statement
    method: GET
- name: virtual_account_transaction_webhook_notification
  endpoint:
    path: /erp-integration-api-virtual-accounts-webhook
    method: POST
    data_selector: svWebhookNotificationServiceRQ
    params: {}
- name: balance_enquiry
  endpoint:
    path: /v1/api/erp/svBalanceEnqService
    method: POST
    data_selector: svBalanceEnqServiceRS
    params: {}
- name: statement
  endpoint:
    path: /v1/api/erp/svStmtServiceRQ
    method: POST
    data_selector: svStmtServiceRS
    params: {}
- name: iban_validation
  endpoint:
    path: /v1/api/erp/svibanValServiceRQ
    method: POST
    data_selector: svibanValServiceRS
    params: {}
- name: Supplier Services
  endpoint:
    path: /erp-integration-api/suppliers
    method: GET
- name: Account Services
  endpoint:
    path: /erp-integration-api/account-services
    method: GET
- name: Payments
  endpoint:
    path: /erp-integration-api/payments
    method: GET
- name: Payroll
  endpoint:
    path: /erp-integration-api/payroll
    method: GET
- name: SADAD
  endpoint:
    path: /erp-integration-api/sadad
    method: GET
- name: Virtual Accounts
  endpoint:
    path: /erp-integration-api/virtual-accounts
    method: GET
- name: Balance Enquiry
  endpoint:
    path: /erp-integration-api/balance-enquiry
    method: GET
- name: Statements
  endpoint:
    path: /erp-integration-api/statements
    method: GET
- name: IBAN Validation
  endpoint:
    path: /erp-integration-api/iban-validation
    method: GET
- name: banks
  endpoint:
    path: /api/banks/identifier_codes
    method: GET
    data_selector: banks
    params: {}
- name: bank_identifier_codes
  endpoint:
    path: /api/bank_identifier_codes
    method: GET
    data_selector: records
    params: {}
notes:
- Request parameters may change depending on the service of SADAD bill/MOI.
- All the tags included in the SADAD Enquiry are required to included in the payment.
- Advanced Data Security
- Consent-Driven Data Access
- The authentication endpoint for obtaining an Access Token has been updated.
- A user account will be active once the user accepts the invitation and completes
  the self-onboarding process successfully.
- SingleView Open Banking APIs enable secure and authorized access to financial information
  from multiple sources.
- signature varies for every request and no two requests will have the same signature
- In case of Signature Key mismatches, an 'Unauthorized' or 'Invalid' response will
  be reflected
- If the process encounters a technical error, the system will respond to the request
  as 'Technical/Internal/Server Error'
- Access Token is valid for a limited period of 60 minutes from the time it is created.
- A bank account without/expired user consent cannot be accessed through the AIS services
  as per the regulatory standards.
- To manage your consent, ensure a valid access token that must be included in the
  request.
- To access Account Information Services (AIS), it is mandatory to hold an active
  consent.
- Ensure a valid access token that must be included in the request.
- Users must have active consent to access bank account information.
- Retrieval of bank account information requires active user consent.
- API allows retrieval of account information with active user consent.
- Get parties by account ID request requires dateTimeStamp, requestID, merchantId,
  banks with code, consentId, and accountId.
- Requires `clientId`, `clientCode`, `signature`, and `Authorization Bearer:` Token
  for authentication.
- Requires clientId, clientCode, signature, and Authorization Bearer token.
- Authentication requires clientId, clientCode, signature, and Authorization Bearer
  Token.
- SAMA has recently announced Payment Initiation Services (PIS) regulations. PIS modules
  are under development and will be available soon.
- Authentication requires clientId, clientCode, signature, and Authorization Bearer
  token.
- User consent is the primary requirement to access any services in Open Banking.
- Consent request must include clientId, clientCode, signature, and Authorization
  Bearer token.
- Retrieve information about Scheduled Payments of a bank account
- User consent is required to access any services in Open Banking.
- User consent is required to access services in Open Banking.
- Account information endpoint provides details about accounts.
- The consent request must include specific details as outlined.
- Assurance process may include multiple assurance types and classifications
- The consent request must include the useCaseType value 'BALANCECHECK' and permissions
  values 'ReadAccountsBasic', 'ReadAccountsDetail', 'ReadBalances'.
- Response includes success status and detailed payload with verification information.
- Response includes various details regarding verification and claims.
- Response includes party information and verification details.
- Sensitive data should not be used in Sandbox environment.
- Uses GET method to retrieve KYC data
- Ensure the Merchant ID is set correctly before making any API calls.
- Date parameters should be in ISO format.
- Must pass application token in the request’s Header as sv-app-token
- Ensure proper setup of the SingleView SDK and Merchant ID
- Some methods require specific parameters in ISO format
- Payly options can be accessed only after a merchant is created
- The Callback URL has to be provided to access details on the payment status and
  charges
- Ensure Merchant ID is provided to access all methods.
- Updates on payment information and status are provided through webhooks to the assigned
  callback URLs.
- Requires setup of connected app in SingleView Console
- ISO format required for date parameters
- Merchant ID is mandatory to access all methods available within SingleView SDK.
- 'Dates should be in ISO format Ex: 2022-07-12T11:11:29.245Z'
- Merchant ID is mandatory to access all methods within SingleView SDK.
- Requires setup of merchant ID and bank consent
- Date values must follow ISO string format
- Use ISO format for date values.
- A Signature Code for every request
- In case of Signature Key mismatch, an 'Unauthorized' or 'Invalid' response will
  be reflected
- The login platform is case-sensitive. Ensure the Caps Lock and Number Lock status
  is correct before entering the details.
- A user account that has gone through 3 failed login attempts will be automatically
  disabled.
- Authentication endpoint for obtaining an Access Token has been updated to /v1/api/svplatform/tokenOauth2
- clientid, clientsecret, and signature are mandatory for authentication
- Authentication requires clientid, clientsecret, and signature.
- clientid, clientsecret, and signature are mandatory for the request
- Refer `Types & Statuses` for more info on payment status update codes.
- 'To acknowledge that you received the web hook without any problem, your server
  should return response as json `{status: "OK"}`.'
- Unique company identification code must be between 3 to 20 characters.
- 'Request includes mandatory fields: apiName, companyCodes, errorDescription, errorCode,
  statusCode.'
- Error description length must be between 3 and 35 characters.
- Upload supports up to 5 files each of 2 MB in JPG, JPEG, PNG, DOC, DOCX, XLS, &
  XLSX formats.
- A minimum of 3 payment entries are required to process a payroll request.
- Mandatory fields include clientid, clientsecret, signature, svPayrollServiceRQ,
  company, payroll, amount, currency, dueDate, userName, payrollPayId, payeeDetails.
- 'Responding to the webhook you receive requires your server to return response as
  json `{status: "OK"}`.'
- Webhook will continue trying to send the web hook once every hour for a maximum
  of 3 attempts after which they will be discarded.
- Acknowledgement is required from the ERP side to confirm the receival of the request
  to receive updates on the respective payroll's payments processing statuses.
- Request parameters may change depending on the SADAD bill/MOI.
- 'Responding to the webhook notification you receive is required to acknowledge the
  received webhook by sending a JSON response as as `{status: "OK"}`.'
- Expand Existing Setup – Add new virtual accounts without modifying the existing
  framework
- Multiple Accounts – Maintain separate virtual accounts for different transaction
  flows, business units, or reconciliation needs
- Real-Time Provisioning – Instantly add accounts and start using them for collections
- 'It is required to acknowledge the received webhook by sending a JSON response as
  as `{status: "OK"}`.'
- Unique group identification code must be between 3 to 20 characters.
- Unique user identification name must be between 3 to 20 characters.
- Unique account ERP identification code must be at least 9 digits.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'APIERR400: Bad Request'
- 'APIERR401: Unauthorized'
- 'APIERR500: Internal Server Error'
- 'Unauthorized: Signature Key mismatches'
- 'Invalid: Mismatched Signature'
- 'Technical/Internal/Server Error: Encountered a technical error'
- 'Unauthorized: Invalid/Unauthorized response due to signature mismatch'
- 'Technical/Internal/Server Error: Response when encountering a technical error'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'success: Process success status represented as true or false'
- 'payload: Process response tag'
- 'code: Unique bank code identifier'
- 'consentId: Unique identification for a bank account(s) consent'
- 'message: Message about the process action'
- 'status: Status of the specific consent'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Client ID or client code missing
- Invalid signature
- 'Unauthorized: Token expired or invalid'
- 'Unauthorized: Check clientId, clientCode, and token.'
- '1. Unauthorized: Ensure clientId, clientCode, and signature are included.'
- '2. Invalid request: Check request format and mandatory fields.'
- 'Invalid Request: Ensure all required parameters are included.'
- 'Unauthorized: Check client credentials and authorization.'
- 'Invalid request: Check required fields and formats.'
- 'Unauthorized: Verify authentication details.'
- 'Unauthorized: Check clientId, clientCode, signature, or token.'
- 1. clientId required
- 2. clientCode required
- 3. signature required
- 'Invalid clientId: Ensure that the client ID is correct.'
- 'Unauthorized: Check if the Authorization Bearer token is valid.'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck OAuth credentials'
- '400 Bad Request: Check required parameters'
- '401 Unauthorized: Recheck client credentials'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify endpoint path'
- 'Invalid bank code: Ensure the bank code is correct'
- 'Unauthorized: Check your OAuth credentials'
- '400 Bad Request: Invalid parameters'
- '401 Unauthorized: Check your authentication details'
- '404 Not Found: Endpoint does not exist'
- 'Unauthorized: Check your credentials'
- 'Invalid Bank Code: Ensure the bank code is correct'
- 'Consent Expired: Refresh consent'
- 'Unauthorized: Signature Key mismatch'
- 'Technical/Internal/Server Error: Process encounters a technical error'
- '0: Success'
- '1: Failed'
- Technical/Internal/Server Error
- 'Invalid Authentication: Check clientid, clientsecret, and signature.'
- 'success: true - If processed successfully'
- 'success: false - Unsuccessful processing'
- '401 Unauthorized: Recheck client ID, client secret, or signature'
- 'Invalid credentials: Check clientid, clientsecret, and signature'
- 'Account limit exceeded: Review account creation limits'
- 'Invalid clientid or clientsecret: Check your credentials.'
- 'Signature mismatch: Ensure the signature is generated correctly.'
- 'ER00400: Bad Request'
- 'ER00500: Internal Server Error/Due to some exception'
- 'ER01001: `Group` tag is missing'
- 'ER01002: `group.en` mandatory field is missing'
- 'ER01003: `group.code` mandatory field is missing'
- 'ER01004: `company.en` mandatory field is missing'
- 'ER01005: `company.code` mandatory field is missing'
- 'ER01006: `company.erpService` mandatory field is missing'
- 'ER03001: `account.accountNum` mandatory field is missing'
- 'ER03002: `account.corpId` mandatory field is missing'
- 'ER03003: `account.swiftCode` mandatory field is missing'
- 'ER03004: `account.holderName` mandatory field is missing'
- 'ER03005: `account.address` mandatory field is missing'
- 'ER03006: `account.currency` mandatory field is missing'
- 'ER03007: `account.acERPcode` mandatory field is missing'
- 'ER03008: `account.bankCode` mandatory field is missing'
- 'ER03010: `account.bankCode` is invalid'
- 'ER03011: `beneficiary.accountNum` mandatory field is missing'
- 'ER03012: `beneficiary.corpId` mandatory field is missing'
- 'ER03013: `beneficiary.swiftCode` mandatory field is missing'
- 'ER03014: `beneficiary.name` mandatory field is missing'
- 'ER03015: `beneficiary.address` mandatory field is missing'
- 'ER03016: `beneficiary.iban` mandatory field is missing'
- 'ER03017: `beneficiary.currency` mandatory field is missing'
- 'ER03018: `beneficiary.benERPcode` mandatory field is missing'
- 'ER03019: `beneficiary.bankCode` mandatory field is missing'
- 'ER03021: `beneficiary.bankCode` is invalid'
- 'ER03022: `beneficiary.supplierCode` is invalid'
- 'ER03023: `beneficiary.iban` + "-" + "`beneficiary.iban` is already exist"'
- 'ER03025: `beneficiary.type` mandatory field is missing'
- 'ER03026: `beneficiary.supplierCode` mandatory field is missing'
- 'ER03027: `beneficiary.name` field length should be max 35 characters'
- 'ER03028: `beneficiary.name` field should not have any special characters'
- 'ER03029: `beneficiary.iban` should be max 24 characters for beneficiary type local'
- 'ER03030: `beneficiary.iban` should be max 34 characters for beneficiary type international'
- 'ER03031: `beneficiary.swiftCode` should be max 11 characters'
- 'ER04001: `payment` tag is missing'
- 'ER04002: `payment` array details are missing'
- 'ER04003: `payment.payId` mandatory field is missing'
- 'ER04004: `payment.amount` mandatory field is missing'
- 'ER04005: `payment.currency` mandatory field is missing'
- 'ER04006: `payment.acERPcode` mandatory field is missing'
- 'ER04007: `payment.benERPcode` mandatory field is missing'
- 'ER04008: `payment.description` mandatory field is missing'
- 'ER04012: `payment.benERPcode` not approved yet for process payment'
- 'ER04012: `iv.supplierCode` mandatory field is missing'
- 'ER04013: `iv.createdDate` mandatory field is missing'
- 'ER04014: `iv.payDate` mandatory field is missing'
- 'ER04015: `iv.userId` mandatory field is missing'
- 'ER04016: `iv.ivNumber` mandatory field is missing'
- 'ER04017: `iv.amount` mandatory field is missing'
- 'ER04018: `iv.approvers` mandatory field is missing'
- 'ER04019: `iv.description` mandatory field is missing'
- 'ER04020: `iv.ledgerRef` mandatory field is missing'
- 'ER04021: `iv.po` details are missing'
- 'ER04022: `iv.items` details are missing'
- 'ER04023: `po.supplierCode` mandatory field is missing'
- 'ER04024: `po.createdDate` mandatory field is missing'
- 'ER04025: `po.payDate` mandatory field is missing'
- 'ER04026: `po.userId` mandatory field is missing'
- 'ER04027: `po.poNumber` mandatory field is missing'
- 'ER04028: `po.amount` mandatory field is missing'
- 'ER04029: `po.approvers` mandatory field is missing'
- 'ER04030: `po.description` mandatory field is missing'
- 'ER04031: `po.ledgerRef` mandatory field is missing'
- 'ER04032: `item.item` mandatory field is missing'
- 'ER04033: `item.createdDate` mandatory field is missing'
- 'ER04034: `item.description` mandatory field is missing'
- 'ER04035: `item.quantity` mandatory field is missing'
- 'ER04036: `item.unitPrice` mandatory field is missing'
- 'ER04037: `item.discount` mandatory field is missing'
- 'ER04038: `item.discountPercentage` mandatory field is missing'
- 'ER04039: `item.amount` mandatory field is missing'
- 'ER04040: `item.salesTaxInclude` mandatory field is missing'
- 'ER04041: `item.reason` mandatory field is missing'
- 'ER04043: `payment.userName` is invalid'
- 'ER04043: `payment.userName` mandatory field is missing'
- 'ER05001: `companyCode` mandatory field is missing'
- 'ER05002: `fromDate` mandatory field is missing'
- 'ER05003: `toDate` mandatory field is missing'
- 'ER05004: `type` mandatory field is missing'
- 'ER06001: `company.companyCode` is invalid'
- 'ER06002: `company.companyCode` is invalid'
- 'ER06003: `data` tag is missing'
- 'ER06004: `data` array details are missing'
- 'ER06005: `data.cusPO` mandatory field is missing'
- 'ER06005: `data.name` mandatory field is missing'
- 'ER06006: `data.currency` mandatory field is missing'
- 'ER06007: `data.ivId` mandatory field is missing'
- 'ER06008: `data.createdDate` mandatory field is missing'
- 'ER06009: `data.amount` mandatory field is missing'
- 'ER06010: `data.ref_num` mandatory field is missing'
- 'ER06011: `data.status` mandatory field is missing'
- 'ER06012: `data.date` mandatory field is missing'
- 'ER07001: `company.companyCode` is invalid'
- 'ER07002: `company.companyCode` is invalid'
- 'ER07003: `supplier` tag is missing'
- 'ER07004: `supplier` array details are missing'
- 'ER07005: `supplier.name` mandatory field is missing'
- 'ER07006: `supplier.benERPCode` mandatory field is missing'
- 'ER07007: `supplier.supplierContact` mandatory field is missing'
- 'ER07008: `supplier.mobile` mandatory field is missing'
- 'ER07009: `supplier.email` mandatory field is missing'
- 'ER07010: `supplier.supplierCode` mandatory field is missing'
- 'ER07011: `supplier.userName` is invalid/`supplier.userName` mandatory field is
  missing'
auth_info:
  mentioned_objects:
  - OauthToken
  - clientId
  - clientCode
  - signature
  - SVSDK
  - SVRequestBank
  - sv-app-token
  - merchantId
  - consentId
  - bankCode
  - sv
  - clientid
  - clientsecret
  - Signature Key
client:
  base_url: https://servicesuat.onesingleview.com
  headers:
    Content-Type: application/json
source_metadata: null
