resources:
- name: cooking_bundle
  endpoint:
    path: /vault/:bundletype/:swhid
    method: POST
    data_selector: ''
    params: {}
- name: get_cooking_status
  endpoint:
    path: /vault/:bundletype/:swhid
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_bundle
  endpoint:
    path: /vault/:bundletype/:swhid/raw
    method: GET
    data_selector: ''
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: create_deposit
  endpoint:
    path: /swh/deposit/collection
    method: POST
    data_selector: results
- name: update_content
  endpoint:
    path: /swh/deposit/update-media
    method: PUT
    data_selector: results
- name: update_metadata
  endpoint:
    path: /swh/deposit/update-metadata
    method: PUT
    data_selector: results
- name: retrieve_status
  endpoint:
    path: /swh/deposit/status
    method: GET
    data_selector: results
- name: display_content
  endpoint:
    path: /swh/deposit/content
    method: GET
    data_selector: results
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: main_service_set
  endpoint:
    path: /
    method: GET
    data_selector: services
- name: deposit
  endpoint:
    path: /deposit
    method: GET
    data_selector: api
- name: grafana
  endpoint:
    path: /grafana
    method: GET
    data_selector: dashboard
- name: kafka-ui
  endpoint:
    path: /kafka-ui
    method: GET
    data_selector: dashboard
- name: mailpit
  endpoint:
    path: /mail
    method: GET
    data_selector: dashboard
- name: prometheus
  endpoint:
    path: /prometheus
    method: GET
    data_selector: monitoring
- name: graphql
  endpoint:
    path: /graphql
    method: GET
    data_selector: api
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: counters
  endpoint:
    path: /api/1/stat/counters/
    method: GET
    data_selector: counters
    params: {}
- name: origin_search
  endpoint:
    path: /api/1/origin/search/<keyword>/
    method: GET
    data_selector: origins
    params: {}
- name: origin_get
  endpoint:
    path: /api/1/origin/<origin_url>/get/
    method: GET
    data_selector: origin_data
    params: {}
- name: origin_visits
  endpoint:
    path: /api/1/origin/<origin_url>/visits/
    method: GET
    data_selector: visits
    params: {}
- name: stat_counters
  endpoint:
    path: /api/1/stat/counters/
    method: GET
    data_selector: records
- name: origin_search
  endpoint:
    path: /api/1/origin/search/<keyword>/
    method: GET
    data_selector: records
- name: origin_get
  endpoint:
    path: /api/1/origin/<origin_url>/get/
    method: GET
    data_selector: records
- name: origin_visits
  endpoint:
    path: /api/1/origin/<origin_url>/visits/
    method: GET
    data_selector: records
- name: latest_visit
  endpoint:
    path: /api/1/origin/visit/latest/
    method: GET
    data_selector: records
- name: snapshot
  endpoint:
    path: /api/1/snapshot/<snapshot_id>/
    method: GET
    data_selector: branches
- name: directory
  endpoint:
    path: /api/1/directory/<directory_id>/
    method: GET
    data_selector: entries
- name: vault_directory
  endpoint:
    path: /api/1/vault/directory/<directory_id>/
    method: POST
    data_selector: fetch_url
- name: swh.alter
  endpoint:
    path: /swh/alters
    method: GET
- name: swh.auth
  endpoint:
    path: /swh/auth
    method: GET
- name: swh.coarnotify
  endpoint:
    path: /swh/coarnotify
    method: GET
- name: swh.core
  endpoint:
    path: /swh/core
    method: GET
- name: swh.counters
  endpoint:
    path: /swh/counters
    method: GET
- name: swh.datasets
  endpoint:
    path: /swh/datasets
    method: GET
- name: swh.deposit
  endpoint:
    path: /swh/deposit
    method: GET
- name: swh.digestmap
  endpoint:
    path: /swh/digestmap
    method: GET
- name: swh.export
  endpoint:
    path: /swh/export
    method: GET
- name: swh.fuse
  endpoint:
    path: /swh/fuse
    method: GET
- name: swh.graph
  endpoint:
    path: /swh/graph
    method: GET
- name: swh.indexer
  endpoint:
    path: /swh/indexer
    method: GET
- name: swh.journal
  endpoint:
    path: /swh/journal
    method: GET
- name: archive
  endpoint:
    path: /archive
    method: GET
    data_selector: records
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: records
    params: {}
- name: software_archive
  endpoint:
    path: /api/software/archive
    method: GET
    data_selector: records
    params: {}
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: records
    params: {}
- name: archive
  endpoint:
    path: /archive
    method: GET
    data_selector: data
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
- name: packages
  endpoint:
    path: /api/packages
    method: GET
    data_selector: packages
- name: raw_intrinsic_metadata_citation_origin
  endpoint:
    path: /api/1/raw-intrinsic-metadata/citation/origin/
    method: GET
    data_selector: records
    params:
      citation_format: bibtex
- name: raw_intrinsic_metadata_citation_swhid
  endpoint:
    path: /api/1/raw-intrinsic-metadata/citation/swhid/SWHID/
    method: GET
    data_selector: records
    params:
      citation_format: bibtex
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /api/dataset
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: software
  endpoint:
    path: /api/software
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: deposits
  endpoint:
    path: /api/deposits
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: archive
  endpoint:
    path: /archives
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: results
- name: packages
  endpoint:
    path: /api/packages
    method: GET
    data_selector: results
- name: dataset
  endpoint:
    path: /api/dataset
    method: GET
- name: example_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/ExampleResource
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: metadata
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: journals
  endpoint:
    path: /api/journals
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: repositories
  endpoint:
    path: /api/2/repositories
    method: GET
    data_selector: results
    params: {}
- name: commits
  endpoint:
    path: /api/2/commits
    method: GET
    data_selector: results
    params: {}
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: metadata
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: public_api
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /api/items
    method: GET
    data_selector: data
    params: {}
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: journal
  endpoint:
    path: /journal
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
- name: archive
  endpoint:
    path: /api/archives
    method: GET
    data_selector: archives
- name: journal
  endpoint:
    path: /journal
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: journals
  endpoint:
    path: /api/journals
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
- name: status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
- name: content
  endpoint:
    path: /swh/deposit/api/content
    method: GET
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: records
- name: removal_searches
  endpoint:
    path: /removal_searches/main
    method: GET
- name: removal_storages
  endpoint:
    path: /removal_storages
    method: GET
- name: removal_objstorages
  endpoint:
    path: /removal_objstorages/main
    method: GET
- name: removal_journals
  endpoint:
    path: /removal_journals/main_journal
    method: GET
- name: mirror_notification_watcher
  endpoint:
    path: /swh/alter/run-mirror-notification-watcher
    method: POST
- name: removal_notification
  endpoint:
    path: /swh/alter/handle-removal-notification
    method: POST
- name: manifest
  endpoint:
    path: /manifest.yml
    method: GET
    data_selector: records
    params: {}
- name: origins
  endpoint:
    path: /origins/
    method: GET
    data_selector: records
    params: {}
- name: origin_visits
  endpoint:
    path: /origin_visits/
    method: GET
    data_selector: records
    params: {}
- name: origin_visit_statuses
  endpoint:
    path: /origin_visit_statuses/
    method: GET
    data_selector: records
    params: {}
- name: snapshots
  endpoint:
    path: /snapshots/
    method: GET
    data_selector: records
    params: {}
- name: releases
  endpoint:
    path: /releases/
    method: GET
    data_selector: records
    params: {}
- name: revisions
  endpoint:
    path: /revisions/
    method: GET
    data_selector: records
    params: {}
- name: directories
  endpoint:
    path: /directories/
    method: GET
    data_selector: records
    params: {}
- name: contents
  endpoint:
    path: /contents/
    method: GET
    data_selector: records
    params: {}
- name: skipped_contents
  endpoint:
    path: /skipped_contents/
    method: GET
    data_selector: records
    params: {}
- name: raw_extrinsic_metadata
  endpoint:
    path: /raw_extrinsic_metadata/
    method: GET
    data_selector: records
    params: {}
- name: extids
  endpoint:
    path: /extids/
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: collection
  endpoint:
    path: /services/deposit/collection
    method: POST
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /services/deposit/status
    method: GET
    data_selector: records
    params: {}
- name: RootsNotFound
  endpoint:
    path: /swh/alter/inventory/RootsNotFound
    method: GET
    data_selector: swhids
- name: StuckInventoryException
  endpoint:
    path: /swh/alter/inventory/StuckInventoryException
    method: GET
    data_selector: swhids
- name: InventorySubgraph
  endpoint:
    path: /swh/alter/inventory/InventorySubgraph
    method: GET
    data_selector: vertices
- name: ProgressBarItem
  endpoint:
    path: /swh/alter/inventory/ProgressBarItem
    method: GET
    data_selector: items
- name: make_inventory
  endpoint:
    path: /swh/alter/inventory/make_inventory
    method: POST
    data_selector: inventory
- name: get_raw_extrinsic_metadata
  endpoint:
    path: /swh/alter/inventory/get_raw_extrinsic_metadata
    method: GET
    data_selector: metadata
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: records
- name: Graph Querying
  endpoint:
    path: /api/graph/query
    method: GET
- name: vault
  endpoint:
    path: /vault
    method: GET
    data_selector: data
    params: {}
- name: graph_querying
  endpoint:
    path: /api/graph/query
    method: POST
    data_selector: results
    params: {}
- name: Manifest
  endpoint:
    path: /swh/alter/recovery_bundle/Manifest
    method: GET
- name: SecretSharing
  endpoint:
    path: /swh/alter/recovery_bundle/SecretSharing
    method: GET
- name: RecoveryBundle
  endpoint:
    path: /swh/alter/recovery_bundle/RecoveryBundle
    method: GET
- name: RemovableSubgraph
  endpoint:
    path: /swh/alter/removable
    method: GET
    data_selector: records
- name: subgraph
  endpoint:
    path: /swh/alter/subgraph
    method: GET
    data_selector: subgraph_data
- name: index_data
  endpoint:
    path: /index/data
    method: GET
    data_selector: records
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
    params: {}
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
    params: {}
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
    data_selector: records
    params: {}
- name: graph_query
  endpoint:
    path: /graph/query
    method: POST
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: provenance
  endpoint:
    path: /provenance
    method: GET
    data_selector: provenance
- name: oidc-login
  endpoint:
    path: /oidc/login/
    method: GET
- name: oidc-logout
  endpoint:
    path: /oidc/logout/
    method: GET
- name: service_document
  endpoint:
    path: /swh-deposit/endpoints/service-document
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: graph_endpoint
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /swh/deposit/status
    method: GET
    data_selector: status
    params: {}
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: response
    params: {}
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
    data_selector: response
    params: {}
- name: service_document
  endpoint:
    path: /services/deposit/v1/service-document
    method: GET
    data_selector: data
- name: create_deposit
  endpoint:
    path: /services/deposit/v1/collection
    method: POST
    data_selector: data
- name: update_content
  endpoint:
    path: /services/deposit/v1/update-media
    method: PUT
    data_selector: data
- name: update_metadata
  endpoint:
    path: /services/deposit/v1/update-metadata
    method: PUT
    data_selector: data
- name: retrieve_status
  endpoint:
    path: /services/deposit/v1/status
    method: GET
    data_selector: data
- name: display_content
  endpoint:
    path: /services/deposit/v1/content
    method: GET
    data_selector: data
- name: deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: records
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: records
- name: COARNotifyClient
  endpoint:
    path: /swh/coarnotify/client
    method: POST
    data_selector: notification
    params: {}
- name: DevCOARNotifyClient
  endpoint:
    path: /swh/coarnotify/client/dev
    method: POST
    data_selector: notification
    params: {}
- name: DummyCOARNotifyClient
  endpoint:
    path: /swh/coarnotify/client/dummy
    method: POST
    data_selector: notification
    params: {}
- name: ConsoleCOARNotifyClient
  endpoint:
    path: /swh/coarnotify/client/console
    method: POST
    data_selector: notification
    params: {}
- name: create_deposit
  endpoint:
    path: /api/deposit
    method: POST
- name: update_metadata
  endpoint:
    path: /api/update-metadata
    method: PUT
- name: create_deposit
  endpoint:
    path: /services/deposit/create
    method: POST
    data_selector: data
    params: {}
- name: update_content
  endpoint:
    path: /services/deposit/update
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /services/deposit/status
    method: GET
    data_selector: data
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
    params: {}
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
    data_selector: records
    params: {}
- name: db_init
  endpoint:
    path: /swh/db/init
    method: POST
    data_selector: results
    params:
      dbname: <dbname>
- name: storage
  endpoint:
    path: /swh/db
    method: POST
    data_selector: init
    params:
      dbname: test-storage
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: POST
    data_selector: records
    params: {}
- name: BaseDb
  endpoint:
    path: /swh/core/db/BaseDb
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: repositories
  endpoint:
    path: /api/1/repositories
    method: GET
    data_selector: results
    params: {}
- name: packages
  endpoint:
    path: /api/1/packages
    method: GET
    data_selector: results
    params: {}
- name: deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: data
    params: {}
- name: update_metadata
  endpoint:
    path: /api/update-metadata
    method: PUT
    data_selector: data
    params: {}
- name: deposits
  endpoint:
    path: /api/deposits
    method: GET
    data_selector: results
- name: JournalHandler
  endpoint:
    path: /swh/core/logger/JournalHandler
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: data
    params: {}
- name: deposits
  endpoint:
    path: /api/deposits
    method: GET
    data_selector: data
    params: {}
- name: Nar
  endpoint:
    path: /swh/core/nar
    method: GET
    data_selector: records
    params: {}
- name: Create deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: Update content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: Update metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: Retrieve status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: Display content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: GET
    data_selector: records
    params: {}
- name: git_repository
  endpoint:
    path: /git/repositories
    method: GET
    data_selector: repositories
- name: git_commit
  endpoint:
    path: /git/commits
    method: GET
    data_selector: commits
- name: get_sentry_release
  endpoint:
    path: /swh/core/sentry/get_sentry_release
    method: GET
- name: override_with_bool_envvar
  endpoint:
    path: /swh/core/sentry/override_with_bool_envvar
    method: GET
- name: override_with_float_envvar
  endpoint:
    path: /swh/core/sentry/override_with_float_envvar
    method: GET
- name: init_sentry
  endpoint:
    path: /swh/core/sentry/init_sentry
    method: GET
- name: collection
  endpoint:
    path: /api/collection
    method: POST
- name: update_media
  endpoint:
    path: /api/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /api/update-metadata
    method: PATCH
- name: status
  endpoint:
    path: /api/status
    method: GET
- name: content
  endpoint:
    path: /api/content
    method: GET
- name: example_resource
  endpoint:
    path: /api/v1/resource
    method: GET
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: register_new_archive_formats
  endpoint:
    path: /swh/core/tarball/register_new_archive_formats
    method: POST
    data_selector: source
    params: {}
- name: uncompress
  endpoint:
    path: /swh/core/tarball/uncompress
    method: POST
    data_selector: source
    params: {}
- name: normalize_permissions
  endpoint:
    path: /swh/core/tarball/normalize_permissions
    method: POST
    data_selector: source
    params: {}
- name: compress
  endpoint:
    path: /swh/core/tarball/compress
    method: POST
    data_selector: source
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/api/collection
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh-deposit/api/update-media
    method: PUT
    data_selector: records
- name: update_metadata
  endpoint:
    path: /swh-deposit/api/update-metadata
    method: PUT
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /swh-deposit/api/status
    method: GET
    data_selector: records
- name: display_content
  endpoint:
    path: /swh-deposit/api/content
    method: GET
    data_selector: records
- name: cwd
  endpoint:
    path: /swh/core/utils/cwd
    method: GET
    data_selector: source
- name: grouper
  endpoint:
    path: /swh/core/utils/grouper
    method: GET
    data_selector: source
- name: iter_chunks
  endpoint:
    path: /swh/core/utils/iter_chunks
    method: GET
    data_selector: source
- name: backslashescape_errors
  endpoint:
    path: /swh/core/utils/backslashescape_errors
    method: GET
    data_selector: source
- name: encode_with_unescape
  endpoint:
    path: /swh/core/utils/encode_with_unescape
    method: GET
    data_selector: source
- name: decode_with_escape
  endpoint:
    path: /swh/core/utils/decode_with_escape
    method: GET
    data_selector: source
- name: commonname
  endpoint:
    path: /swh/core/utils/commonname
    method: GET
    data_selector: source
- name: numfile_sortkey
  endpoint:
    path: /swh/core/utils/numfile_sortkey
    method: GET
    data_selector: source
- name: basename_sortkey
  endpoint:
    path: /swh/core/utils/basename_sortkey
    method: GET
    data_selector: source
- name: provenance
  endpoint:
    path: /provenance
    method: GET
    data_selector: data
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: data
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: data
    params: {}
- name: deposit_api
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: records
- name: get_counters
  endpoint:
    path: /get_counters
    method: GET
    data_selector: counters
- name: get_history
  endpoint:
    path: /get_history
    method: GET
    data_selector: history
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: deposit
    params: {}
- name: retrieve_status
  endpoint:
    path: /api/deposit/status
    method: GET
    data_selector: status
    params: {}
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh/deposit/api/update-media
    method: PUT
    data_selector: records
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
    data_selector: records
- name: display_content
  endpoint:
    path: /swh/deposit/api/content
    method: GET
    data_selector: records
- name: graph_data
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: graph_data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: results
    params: {}
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
    params: {}
- name: ExportGraph
  endpoint:
    path: /swh.datasets.luigi.ExportGraph
    method: GET
- name: RunExportCompressUpload
  endpoint:
    path: /swh.datasets.luigi.RunExportCompressUpload
    method: GET
- name: LocalExport
  endpoint:
    path: /swh.datasets.luigi.LocalExport
    method: GET
- name: UploadExportToS3
  endpoint:
    path: /swh.export.luigi.UploadExportToS3
    method: GET
- name: DownloadExportFromS3
  endpoint:
    path: /swh.export.luigi.DownloadExportFromS3
    method: GET
- name: CreateAthena
  endpoint:
    path: /swh.export.luigi.CreateAthena
    method: GET
- name: CompressGraph
  endpoint:
    path: /swh.datasets.luigi.CompressGraph
    method: GET
- name: UploadGraphToS3
  endpoint:
    path: /swh.datasets.luigi.UploadGraphToS3
    method: GET
- name: DownloadGraphFromS3
  endpoint:
    path: /swh.datasets.luigi.DownloadGraphFromS3
    method: GET
- name: RunBlobDataset
  endpoint:
    path: /swh.datasets.luigi.RunBlobDataset
    method: GET
- name: RunOriginContributors
  endpoint:
    path: /swh.datasets.luigi.RunOriginContributors
    method: GET
- name: Create deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: Update content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: Update metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PATCH
- name: Retrieve status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: Display content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: download
  endpoint:
    path: /datasets/download
    method: GET
    data_selector: datasets
    params: {}
- name: list-datasets
  endpoint:
    path: /datasets/list-datasets
    method: GET
    data_selector: datasets
    params: {}
- name: luigi
  endpoint:
    path: /datasets/luigi
    method: GET
    data_selector: luigi_params
    params: {}
- name: rpc-serve
  endpoint:
    path: /datasets/rpc-serve
    method: GET
    data_selector: rpc_options
    params: {}
- name: repositories
  endpoint:
    path: /swh/repositories
    method: GET
    data_selector: repositories
- name: versions
  endpoint:
    path: /swh/versions
    method: GET
    data_selector: versions
- name: RunNewGraph
  endpoint:
    path: /swh/datasets/luigi/RunNewGraph
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: data
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PATCH
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
    data_selector: data
    params: {}
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/api/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/api/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/api/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/api/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/api/content
    method: GET
- name: compute_unified_information
  endpoint:
    path: /compute_unified_information
    method: POST
- name: status_update
  endpoint:
    path: /status_update
    method: POST
- name: archive_get
  endpoint:
    path: /archive_get
    method: GET
- name: metadata_get
  endpoint:
    path: /metadata_get
    method: GET
- name: check
  endpoint:
    path: /check
    method: GET
- name: deposit_status
  endpoint:
    path: /deposit/status
    method: GET
- name: deposit_list
  endpoint:
    path: /deposit/list
    method: GET
- name: deposit_create
  endpoint:
    path: /deposit/create
    method: POST
- name: deposit_update
  endpoint:
    path: /deposit_update
    method: POST
- name: deposit_metadata_only
  endpoint:
    path: /deposit_metadata_only
    method: POST
- name: Create deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: Update content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: Update metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: Retrieve status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: Display content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Deposit
  endpoint:
    path: /swh/deposit
    method: GET
    data_selector: records
- name: DepositRequest
  endpoint:
    path: /swh/deposit/request
    method: GET
    data_selector: records
- name: DepositCollection
  endpoint:
    path: /swh/deposit/collection
    method: GET
    data_selector: records
- name: Deposit
  endpoint:
    path: /swh/deposit/models/Deposit
    method: GET
- name: DepositRequest
  endpoint:
    path: /swh/deposit/models/DepositRequest
    method: GET
- name: DepositCollection
  endpoint:
    path: /swh/deposit/models/DepositCollection
    method: GET
- name: DepositClient
  endpoint:
    path: /swh/deposit/models/DepositClient
    method: GET
- name: SWHFileUploadZipParser
  endpoint:
    path: /swh/deposit/parsers/SWHFileUploadZipParser
    method: GET
    data_selector: media_type
    params: {}
- name: SWHFileUploadTarParser
  endpoint:
    path: /swh/deposit/parsers/SWHFileUploadTarParser
    method: GET
    data_selector: media_type
    params: {}
- name: SWHXMLParser
  endpoint:
    path: /swh/deposit/parsers/SWHXMLParser
    method: GET
    data_selector: media_type
    params: {}
- name: SWHAtomEntryParser
  endpoint:
    path: /swh/deposit/parsers/SWHAtomEntryParser
    method: GET
    data_selector: media_type
    params: {}
- name: SWHMultiPartParser
  endpoint:
    path: /swh/deposit/parsers/SWHMultiPartParser
    method: GET
    data_selector: media_type
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: deposits
  endpoint:
    path: /deposits
    method: GET
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /deposit
    method: POST
    data_selector: results
    params:
      metadata: '{{ dlt.secrets[''metadata_path''] }}'
      format: json
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: 2023-09-06-popular-1k
  endpoint:
    path: /2023-09-06-popular-1k/digestmap/
    method: GET
    data_selector: hashes
    params: {}
- name: '2024-12-06'
  endpoint:
    path: /2024-12-06/digestmap/
    method: GET
    data_selector: hashes
    params: {}
- name: service_document
  endpoint:
    path: /swh-deposit/endpoints/service-document
    method: GET
    data_selector: records
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
    data_selector: records
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PATCH
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
    data_selector: records
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
    data_selector: records
- name: hash_conversion
  endpoint:
    path: /hash_conversion
    method: POST
    data_selector: result
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params:
      incremental: updated_at
- name: revisions
  endpoint:
    path: /revisions
    method: GET
    data_selector: revisions
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
- name: scheduler
  endpoint:
    path: /scheduler
    method: GET
    data_selector: records
- name: scrubber
  endpoint:
    path: /scrubber
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: records
- name: shard
  endpoint:
    path: /shard
    method: GET
    data_selector: records
- name: storage
  endpoint:
    path: /storage
    method: GET
    data_selector: records
- name: vault
  endpoint:
    path: /vault
    method: GET
    data_selector: records
- name: web
  endpoint:
    path: /web
    method: GET
    data_selector: records
- name: graph_dataset
  endpoint:
    path: /swh/export/graph
    method: POST
    data_selector: dataset
    params:
      formats: orc,edges
      export_id: '2022-04-25'
- name: repositories
  endpoint:
    path: /search/repositories
    method: GET
    data_selector: items
    params:
      page: '1'
      s: stars
      order: desc
      q: language:python
      per_page: '100'
- name: graph_querying
  endpoint:
    path: /api/graph/query
    method: GET
    data_selector: results
- name: Deposit API
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: data
    params: {}
- name: create_database
  endpoint:
    path: /create_database
    method: POST
- name: drop_table
  endpoint:
    path: /drop_table
    method: DELETE
- name: create_table
  endpoint:
    path: /create_table
    method: POST
- name: repair_table
  endpoint:
    path: /repair_table
    method: POST
- name: query
  endpoint:
    path: /query
    method: POST
- name: create_tables
  endpoint:
    path: /create_tables
    method: POST
- name: human_size
  endpoint:
    path: /human_size
    method: GET
- name: run_query_get_results
  endpoint:
    path: /run_query_get_results
    method: POST
- name: generate_subdataset
  endpoint:
    path: /generate_subdataset
    method: POST
- name: deposits
  endpoint:
    path: /api/deposits
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: ExportGraph
  endpoint:
    path: /export
    method: GET
- name: ExportTopic
  endpoint:
    path: /topic
    method: GET
- name: ExportPersonsTable
  endpoint:
    path: /persons
    method: GET
- name: UploadExportToS3
  endpoint:
    path: /swh/export/luigi/UploadExportToS3
    method: POST
    data_selector: output
    params: {}
- name: DownloadExportFromS3
  endpoint:
    path: /swh/export/luigi/DownloadExportFromS3
    method: POST
    data_selector: output
    params: {}
- name: CreateAthena
  endpoint:
    path: /swh/export/luigi/CreateAthena
    method: POST
    data_selector: output
    params: {}
- name: RunExportAll
  endpoint:
    path: /swh/export/luigi/RunExportAll
    method: POST
    data_selector: output
    params: {}
- name: collection
  endpoint:
    path: /services/data/vXX.X/sobjects/Collection
    method: POST
    data_selector: records
- name: update_metadata
  endpoint:
    path: /services/data/vXX.X/sobjects/UpdateMetadata
    method: PATCH
    data_selector: records
- name: status
  endpoint:
    path: /services/data/vXX.X/sobjects/Status
    method: GET
    data_selector: records
- name: BLOOM_FILTER_COLUMNS
  endpoint:
    path: /swh/export/relational/BLOOM_FILTER_COLUMNS
    method: GET
    data_selector: Dict
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh/deposit/status
    method: GET
    data_selector: status
    params: {}
- name: Create deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: Update content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: Update metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: Retrieve status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: Display content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: GET
    data_selector: records
- name: archive
  endpoint:
    path: /archive/
    method: GET
    data_selector: artifacts
- name: origin
  endpoint:
    path: /origin/
    method: GET
    data_selector: origins
- name: cache
  endpoint:
    path: /cache/
    method: GET
    data_selector: caches
- name: artifact
  endpoint:
    path: /api/artifacts
    method: GET
    data_selector: records
- name: entry
  endpoint:
    path: /api/entries
    method: GET
    data_selector: records
- name: mountpoint
  endpoint:
    path: /api/mountpoints
    method: GET
    data_selector: records
- name: clean
  endpoint:
    path: clean
    method: GET
- name: mount
  endpoint:
    path: mount
    method: GET
- name: umount
  endpoint:
    path: umount
    method: GET
- name: service_document
  endpoint:
    path: /swh-deposit/endpoints/service-document
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PATCH
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: GraphBackend
  endpoint:
    path: /swh/fuse/backends/GraphBackend
    method: GET
    data_selector: metadata
    params: {}
- name: ContentBackend
  endpoint:
    path: /swh/fuse/backends/ContentBackend
    method: GET
    data_selector: blob
    params: {}
- name: FuseCache
  endpoint:
    path: /fuse/cache
    method: GET
    data_selector: cache
    params: {}
- name: AbstractCache
  endpoint:
    path: /fuse/cache/abstract
    method: GET
    data_selector: abstract
    params: {}
- name: MetadataCache
  endpoint:
    path: /fuse/cache/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: BlobCache
  endpoint:
    path: /fuse/cache/blob
    method: GET
    data_selector: blob
    params: {}
- name: HistoryCache
  endpoint:
    path: /fuse/cache/history
    method: GET
    data_selector: history
    params: {}
- name: DirEntry
  endpoint:
    path: /swh/fuse/cache/DirEntry
    method: GET
- name: LRU
  endpoint:
    path: /swh/fuse/cache/DirEntryCache/LRU
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/api/collection
    method: POST
    data_selector: results
- name: update_metadata
  endpoint:
    path: /swh-deposit/api/update-metadata
    method: PUT
    data_selector: results
- name: retrieve_status
  endpoint:
    path: /swh-deposit/api/status
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: get_metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: metadata
    params: {}
- name: get_blob
  endpoint:
    path: /blob
    method: GET
    data_selector: blob
    params: {}
- name: get_history
  endpoint:
    path: /history
    method: GET
    data_selector: history
    params: {}
- name: get_visits
  endpoint:
    path: /visits
    method: GET
    data_selector: visits
    params: {}
- name: get_attrs
  endpoint:
    path: /attrs
    method: GET
    data_selector: attrs
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
- name: graph
  endpoint:
    path: /graph/leaves/{id}
    method: GET
    data_selector: content
    params: {}
- name: leaves
  endpoint:
    path: /graph/leaves/:src
    method: GET
    data_selector: records
    params: {}
- name: neighbors
  endpoint:
    path: /graph/neighbors/:src
    method: GET
    data_selector: records
    params: {}
- name: visit_nodes
  endpoint:
    path: /graph/visit/nodes/:src
    method: GET
    data_selector: records
    params: {}
- name: visit_edges
  endpoint:
    path: /graph/visit/edges/:src
    method: GET
    data_selector: records
    params: {}
- name: stats
  endpoint:
    path: /graph/stats
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: project
  endpoint:
    path: /api/projects
    method: GET
    data_selector: results
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
- name: GetNode
  endpoint:
    path: /swh.graph.TraversalService.GetNode
    method: CALL
    data_selector: response
    params: {}
- name: Stats
  endpoint:
    path: /swh.graph.TraversalService.Stats
    method: CALL
    data_selector: response
    params: {}
- name: GetNode
  endpoint:
    path: /swh.graph.TraversalService.GetNode
    method: CALL
    data_selector: response
    params: {}
- name: Stats
  endpoint:
    path: /swh.graph.TraversalService.Stats
    method: CALL
    data_selector: response
    params: {}
- name: GetNode
  endpoint:
    path: /swh.graph.TraversalService.GetNode
    method: POST
    data_selector: response
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: GetNode
  endpoint:
    path: /swh.graph.TraversalService.GetNode
    method: CALL
    data_selector: response
    params: {}
- name: Stats
  endpoint:
    path: /swh.graph.TraversalService.Stats
    method: CALL
    data_selector: response
    params: {}
- name: Stats
  endpoint:
    path: /swh.graph.TraversalService.Stats
    method: GET
    data_selector: response
    params: {}
- name: Traverse
  endpoint:
    path: /swh.graph.TraversalService.Traverse
    method: GET
    data_selector: response
    params: {}
- name: FindPathTo
  endpoint:
    path: /swh.graph.TraversalService.FindPathTo
    method: GET
    data_selector: response
    params: {}
- name: FindPathBetween
  endpoint:
    path: /swh.graph.TraversalService.FindPathBetween
    method: POST
    data_selector: node
    params: {}
- name: archive
  endpoint:
    path: /archive
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: compression_pipeline
  endpoint:
    path: /swh.graph/compress
    method: POST
    data_selector: results
- name: extract_nodes
  endpoint:
    path: /swh.graph/extract_nodes
    method: GET
    data_selector: nodes
- name: extract_labels
  endpoint:
    path: /swh.graph/extract_labels
    method: GET
    data_selector: labels
- name: node_properties
  endpoint:
    path: /node_properties
    method: GET
    data_selector: properties
    params: {}
- name: mph_labels
  endpoint:
    path: /mph_labels
    method: GET
    data_selector: labels
    params: {}
- name: fcl_labels
  endpoint:
    path: /fcl_labels
    method: GET
    data_selector: labels
    params: {}
- name: edge_labels
  endpoint:
    path: /edge_labels
    method: GET
    data_selector: labels
    params: {}
- name: e2e_test
  endpoint:
    path: /e2e_test
    method: GET
    data_selector: test_results
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: compress
  endpoint:
    path: /graph/compress
    method: POST
- name: download
  endpoint:
    path: /graph/download
    method: POST
- name: find-context
  endpoint:
    path: /graph/find-context
    method: POST
- name: grpc-serve
  endpoint:
    path: /graph/grpc-serve
    method: POST
- name: list-datasets
  endpoint:
    path: /graph/list-datasets
    method: GET
- name: luigi
  endpoint:
    path: /graph/luigi
    method: POST
- name: reindex
  endpoint:
    path: /graph/reindex
    method: POST
- name: rpc-serve
  endpoint:
    path: /graph/rpc-serve
    method: POST
- name: artifact
  endpoint:
    path: /api/artifacts
    method: GET
    data_selector: data
    params: {}
- name: entry
  endpoint:
    path: /api/entries
    method: GET
    data_selector: data
    params: {}
- name: graph
  endpoint:
    path: /docker/run.sh
    method: POST
    data_selector: data
    params:
      input-dataset: data/g
      output-directory: data/compressed
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: data
    params:
      incremental: updatedAt
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: data.repositories
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: data.packages
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: results
- name: versions
  endpoint:
    path: /versions
    method: GET
    data_selector: results
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: POST
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /services/data/vXX.X/sobjects/Content
    method: GET
    data_selector: records
    params: {}
- name: collection
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: data
    params: {}
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: result
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: result
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
    data_selector: result
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PATCH
    data_selector: result
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
    data_selector: result
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
    data_selector: result
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: data
    params: {}
- name: releases
  endpoint:
    path: /releases
    method: GET
    data_selector: data
    params: {}
- name: Graph Querying
  endpoint:
    path: /api/graph/query
    method: GET
- name: example_resource
  endpoint:
    path: /example/path
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: repositories
  endpoint:
    path: /graph/repositories
    method: POST
    data_selector: data
    params: {}
- name: packages
  endpoint:
    path: /graph/packages
    method: POST
    data_selector: data
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/api/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/api/update-media
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/api/status
    method: GET
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: POST
    data_selector: records
    params: {}
- name: repository
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
    params: {}
- name: file
  endpoint:
    path: /api/files
    method: GET
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /services/deposit
    method: POST
    data_selector: records
- name: RemoteGraphClient
  endpoint:
    path: /swh/graph/http_client
    method: GET
- name: create_deposit
  endpoint:
    path: /api/deposit
    method: POST
- name: update_metadata
  endpoint:
    path: /api/update-metadata
    method: PUT
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: repositories
  endpoint:
    path: /graph/repositories
    method: GET
    data_selector: data
    params: {}
- name: packages
  endpoint:
    path: /graph/packages
    method: GET
    data_selector: data
    params: {}
- name: graph_data
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data
    params: {}
- name: GraphServerApp
  endpoint:
    path: /
    method: GET
- name: StatsView
  endpoint:
    path: /stats
    method: GET
- name: VisitNodesView
  endpoint:
    path: /visit/nodes
    method: GET
- name: VisitEdgesView
  endpoint:
    path: /visit/edges
    method: GET
- name: deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: status
    params: {}
- name: Create deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: Update content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: Update metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: Retrieve status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: Display content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: repository
  endpoint:
    path: /api/v1/repository
    method: GET
    data_selector: repositories
    params:
      incremental: updated_at
- name: commit
  endpoint:
    path: /api/v1/commit
    method: GET
    data_selector: commits
    params: {}
- name: origins
  endpoint:
    path: /graphql/
    method: POST
    data_selector: data.origins
    params:
      first: 2
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: records
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
    data_selector: records
    params: {}
- name: service_document
  endpoint:
    path: /swh-deposit/endpoints/service-document.html
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
- name: content_indexer
  endpoint:
    path: /content
    method: GET
- name: origin_indexer
  endpoint:
    path: /origin
    method: GET
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: records
    params: {}
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
- name: releases
  endpoint:
    path: /api/releases
    method: GET
    data_selector: data
- name: intrinsic_metadata
  endpoint:
    path: /metadata/intrinsic
    method: GET
    data_selector: records
    params: {}
- name: extrinsic_metadata
  endpoint:
    path: /metadata/extrinsic
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: package
  endpoint:
    path: /schema/2023/packages/
    method: GET
    data_selector: packages
- name: release
  endpoint:
    path: /schema/2023/packages/releases/
    method: GET
    data_selector: releases
- name: dependencies
  endpoint:
    path: /schema/2023/packages/dependencies/
    method: GET
    data_selector: dependencies
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: data
    params: {}
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
    data_selector: data
    params: {}
- name: npm
  endpoint:
    path: /swh/indexer/metadata_dictionary/npm
    method: GET
- name: nuget
  endpoint:
    path: /swh/indexer/metadata_dictionary/nuget
    method: GET
- name: python
  endpoint:
    path: /swh/indexer/metadata_dictionary/python
    method: GET
- name: ruby
  endpoint:
    path: /swh/indexer/metadata_dictionary/ruby
    method: GET
- name: utils
  endpoint:
    path: /swh/indexer/metadata_dictionary/utils
    method: GET
- name: deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: status
    params: {}
- name: content_mimetype
  endpoint:
    path: /swh/indexer/storage/mimetype
    method: GET
    data_selector: records
- name: content_license
  endpoint:
    path: /swh/indexer/storage/license
    method: GET
    data_selector: records
- name: content_metadata
  endpoint:
    path: /swh/indexer/storage/metadata
    method: GET
    data_selector: records
- name: directory_intrinsic_metadata
  endpoint:
    path: /swh/indexer/storage/directory_metadata
    method: GET
    data_selector: records
- name: origin_intrinsic_metadata
  endpoint:
    path: /swh/indexer/storage/origin_metadata
    method: GET
    data_selector: records
- name: origin_extrinsic_metadata
  endpoint:
    path: /swh/indexer/storage/origin_extrinsic_metadata
    method: GET
    data_selector: records
- name: indexer_storage
  endpoint:
    path: /indexer/storage
    method: GET
    data_selector: data
    params: {}
- name: check_id_duplicates
  endpoint:
    path: /check/id/duplicates
    method: POST
    data_selector: data
    params: {}
- name: origin_intrinsic_metadata_search_by_producer
  endpoint:
    path: /origin_intrinsic_metadata_search_by_producer
    method: GET
    data_selector: PagedResult
- name: origin_intrinsic_metadata_stats
  endpoint:
    path: /origin_intrinsic_metadata_stats
    method: GET
    data_selector: stats
- name: origin_extrinsic_metadata_get
  endpoint:
    path: /origin_extrinsic_metadata_get
    method: GET
    data_selector: OriginExtrinsicMetadataRow
- name: origin_extrinsic_metadata_add
  endpoint:
    path: /origin_extrinsic_metadata_add
    method: POST
    data_selector: response
- name: indexer_configuration_add
  endpoint:
    path: /indexer_configuration_add
    method: POST
    data_selector: response
- name: indexer_configuration_get
  endpoint:
    path: /indexer_configuration_get
    method: GET
    data_selector: configuration
- name: deposit
  endpoint:
    path: /services/deposit
    method: POST
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /services/status
    method: GET
    data_selector: records
    params: {}
- name: repositories
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.repositories
    params: {}
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: data
    params: {}
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: compute_license
  endpoint:
    path: /compute_license
    method: GET
    data_selector: licenses
    params: {}
- name: index
  endpoint:
    path: /index
    method: POST
    data_selector: result
    params: {}
- name: persist_index_computations
  endpoint:
    path: /persist_index_computations
    method: POST
    data_selector: result
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: results
    params: {}
- name: deposit
  endpoint:
    path: /api/v1/deposit
    method: POST
    data_selector: records
    params: {}
- name: ObjectsDict
  endpoint:
    path: /swh/indexer/ObjectsDict
    method: GET
    data_selector: content
- name: BaseIndexer
  endpoint:
    path: /swh/indexer/BaseIndexer
    method: GET
    data_selector: results
- name: ContentIndexer
  endpoint:
    path: /swh/indexer/ContentIndexer
    method: GET
    data_selector: results
- name: OriginIndexer
  endpoint:
    path: /swh/indexer/OriginIndexer
    method: GET
    data_selector: results
- name: DirectoryIndexer
  endpoint:
    path: /indexer/directory
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: extrinsic_metadata
  endpoint:
    path: /swh/indexer/metadata/extrinsic
    method: GET
    data_selector: results
- name: content_metadata
  endpoint:
    path: /swh/indexer/metadata/content
    method: GET
    data_selector: results
- name: directory_metadata
  endpoint:
    path: /swh/indexer/metadata/directory
    method: GET
    data_selector: results
- name: origin_metadata
  endpoint:
    path: /swh/indexer/metadata/origin
    method: GET
    data_selector: results
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
    params: {}
- name: releases
  endpoint:
    path: /api/releases
    method: GET
    data_selector: data
    params: {}
- name: detect_metadata
  endpoint:
    path: /swh/indexer/metadata_detector/detect_metadata
    method: GET
    data_selector: mapping_filenames
    params: {}
- name: deposit
  endpoint:
    path: /services/deposit
    method: POST
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /graph/dataset
    method: GET
    data_selector: data
- name: package
  endpoint:
    path: /graph/package
    method: GET
    data_selector: data
- name: compute_mimetype_encoding
  endpoint:
    path: /swh/indexer/mimetype/compute_mimetype_encoding
    method: GET
    data_selector: mimetype and encoding
    params: {}
- name: index
  endpoint:
    path: /swh/indexer/mimetype/index
    method: POST
    data_selector: content’s mimetype
    params: {}
- name: persist_index_computations
  endpoint:
    path: /swh/indexer/mimetype/persist_index_computations
    method: POST
    data_selector: results
    params: {}
- name: example_resource
  endpoint:
    path: /example/path
    method: GET
    data_selector: records
- name: example_resource
  endpoint:
    path: /example/path
    method: GET
    data_selector: records
    params: {}
- name: package
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.packages
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /api/dataset
    method: GET
    data_selector: data
- name: record
  endpoint:
    path: /api/record
    method: GET
    data_selector: data
- name: create_deposit
  endpoint:
    path: /swh-deposit/api/deposit
    method: POST
    data_selector: deposit_data
    params: {}
- name: update_metadata
  endpoint:
    path: /swh-deposit/api/update-metadata
    method: PUT
    data_selector: metadata_update
    params: {}
- name: packages
  endpoint:
    path: /api/packages
    method: GET
    data_selector: records
- name: releases
  endpoint:
    path: /api/releases
    method: GET
    data_selector: records
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
- name: journal_client
  endpoint:
    path: /swh/journal_client
    method: GET
    data_selector: records
- name: scrubber
  endpoint:
    path: /swh/scrubber
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /swh/search
    method: GET
    data_selector: records
- name: shard
  endpoint:
    path: /swh/shard
    method: GET
    data_selector: records
- name: storage
  endpoint:
    path: /swh/storage
    method: GET
    data_selector: records
- name: vault
  endpoint:
    path: /swh/vault
    method: GET
    data_selector: records
- name: web
  endpoint:
    path: /swh/web
    method: GET
    data_selector: records
- name: journal-client
  endpoint:
    path: /swh/indexer/journal-client
    method: GET
- name: mapping
  endpoint:
    path: /swh/indexer/mapping
    method: GET
- name: rpc-serve
  endpoint:
    path: /swh/indexer/rpc-serve
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: git_base
  endpoint:
    path: /git/base
    method: GET
    data_selector: data
    params: {}
- name: git_converters
  endpoint:
    path: /git/converters
    method: GET
    data_selector: data
    params: {}
- name: git_directory
  endpoint:
    path: /git/directory
    method: GET
    data_selector: data
    params: {}
- name: git_dumb
  endpoint:
    path: /git/dumb
    method: GET
    data_selector: data
    params: {}
- name: git_from_disk
  endpoint:
    path: /git/from_disk
    method: GET
    data_selector: data
    params: {}
- name: git_loader
  endpoint:
    path: /git/loader
    method: GET
    data_selector: data
    params: {}
- name: git_tasks
  endpoint:
    path: /git/tasks
    method: GET
    data_selector: data
    params: {}
- name: git_utils
  endpoint:
    path: /git/utils
    method: GET
    data_selector: data
    params: {}
- name: journal_client
  endpoint:
    path: /swh/journal/client
    method: GET
- name: create_deposit
  endpoint:
    path: /swh/deposit/collection
    method: POST
    data_selector: response
    params: {}
- name: update_metadata
  endpoint:
    path: /swh/deposit/update-metadata
    method: PUT
    data_selector: response
    params: {}
- name: repositories
  endpoint:
    path: /api/1/repositories
    method: GET
    data_selector: results
    params: {}
- name: ensure_lists
  endpoint:
    path: /swh/journal/pytest_plugin/ensure_lists
    method: GET
    data_selector: records
- name: consume_messages
  endpoint:
    path: /swh/journal/pytest_plugin/consume_messages
    method: GET
    data_selector: records
- name: assert_all_objects_consumed
  endpoint:
    path: /swh/journal/pytest_plugin/assert_all_objects_consumed
    method: GET
    data_selector: records
- name: kafka_prefix
  endpoint:
    path: /swh/journal/pytest_plugin/kafka_prefix
    method: GET
    data_selector: records
- name: kafka_consumer_group
  endpoint:
    path: /swh/journal/pytest_plugin/kafka_consumer_group
    method: GET
    data_selector: records
- name: object_types
  endpoint:
    path: /swh/journal/pytest_plugin/object_types
    method: GET
    data_selector: records
- name: privileged_object_types
  endpoint:
    path: /swh/journal/pytest_plugin/privileged_object_types
    method: GET
    data_selector: records
- name: kafka_server
  endpoint:
    path: /swh/journal/pytest_plugin/kafka_server
    method: GET
    data_selector: records
- name: kafka_server_base
  endpoint:
    path: /swh/journal/pytest_plugin/kafka_server_base
    method: GET
    data_selector: records
- name: test_config
  endpoint:
    path: /swh/journal/pytest_plugin/test_config
    method: GET
    data_selector: records
- name: consumer
  endpoint:
    path: /swh/journal/pytest_plugin/consumer
    method: GET
    data_selector: records
- name: deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/Deposit
    method: GET
    data_selector: records
    params: {}
- name: listers
  endpoint:
    path: /listers
    method: GET
    data_selector: list
    params: {}
- name: extrinsic_metadata
  endpoint:
    path: /services/data/vXX.X/sobjects/ExtrinsicMetadata
    method: GET
    data_selector: records
- name: object_masking
  endpoint:
    path: /services/data/vXX.X/sobjects/ObjectMasking
    method: GET
    data_selector: records
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: packages
  endpoint:
    path: /api/packages
    method: GET
    data_selector: data
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: task_add
  endpoint:
    path: /scheduler/task/add
    method: POST
- name: task_type_register
  endpoint:
    path: /scheduler/task-type/register
    method: POST
- name: official_packages
  endpoint:
    path: /packages/
    method: GET
    data_selector: records
    params: {}
- name: arm_packages
  endpoint:
    path: /packages/
    method: GET
    data_selector: records
    params: {}
- name: packages
  endpoint:
    path: /packages-meta-v1.json.gz
    method: GET
    data_selector: packages
    params: {}
- name: create_deposit
  endpoint:
    path: /api/deposit/create
    method: POST
    data_selector: data
    params: {}
- name: update_metadata
  endpoint:
    path: /api/deposit/update_metadata
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /api/deposit/status
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: git_loader
  endpoint:
    path: /git/loader
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: origins
- name: package
  endpoint:
    path: /repodata.json
    method: GET
    data_selector: packages
    params: {}
- name: package_names
  endpoint:
    path: /release/
    method: GET
    data_selector: results
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
    data_selector: records
- name: crates
  endpoint:
    path: /api/v1/crates
    method: GET
    data_selector: records
    params: {}
- name: origins
  endpoint:
    path: /api/packages/dump
    method: GET
    data_selector: records
- name: origins
  endpoint:
    path: /all-packages/since/5000
    method: GET
    data_selector: json array of strings
- name: collection
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
    data_selector: records
    params: {}
- name: Create deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: Update content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: Update metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PATCH
- name: Retrieve status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: Display content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: collection
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: records
- name: status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
    data_selector: records
- name: example_resource
  endpoint:
    path: /api/v1/example
    method: GET
    data_selector: data
    params: {}
- name: package_names
  endpoint:
    path: /packages/search
    method: POST
    data_selector: results
    params:
      page: 0
      sortColumn: default
      sortDirection: ascending
      searchQuery: (deprecated:any)
- name: origins
  endpoint:
    path: /origins
    method: GET
    data_selector: urls
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: releases
  endpoint:
    path: /releases
    method: GET
    data_selector: records
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
- name: incremental_listing
  endpoint:
    path: NpmLister.API_INCREMENTAL_LISTING_URL
    method: GET
- name: full_listing
  endpoint:
    path: NpmLister.API_FULL_LISTING_URL
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: PhabricatorLister
  endpoint:
    path: swh/lister/phabricator/lister
    method: GET
- name: package_names
  endpoint:
    path: /api/package-names
    method: GET
    data_selector: package_names
    params: {}
- name: package_info
  endpoint:
    path: /api/packages/{pkgname}
    method: GET
    data_selector: package_info
    params: {}
- name: modules
  endpoint:
    path: /getModules
    method: GET
    data_selector: results
- name: create_deposit
  endpoint:
    path: /swh/deposit/create
    method: POST
    data_selector: result
- name: update_metadata
  endpoint:
    path: /swh/deposit/update-metadata
    method: PUT
    data_selector: result
- name: retrieve_status
  endpoint:
    path: /swh/deposit/status
    method: GET
    data_selector: status
- name: resource_name
  endpoint:
    path: /services/data/vXX.X/sobjects/resource
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /services/data/vXX.X/deposit
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /services/data/vXX.X/update
    method: PUT
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /services/data/vXX.X/status
    method: GET
    data_selector: records
- name: origins
  endpoint:
    path: /versions
    method: GET
    data_selector: gems
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /swh/deposit/status
    method: GET
    data_selector: status
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
    data_selector: records
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
    data_selector: records
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
    data_selector: records
- name: example_resource
  endpoint:
    path: /api/v1/resource
    method: GET
    data_selector: data
    params: {}
- name: create_deposit
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: data
    params: {}
- name: update_content
  endpoint:
    path: /api/update-content
    method: PUT
    data_selector: data
    params: {}
- name: Deposit API
  endpoint:
    path: /swh-deposit/api
    method: GET
- name: example_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/ExampleResource
    method: GET
    data_selector: records
    params: {}
- name: ListerStats
  endpoint:
    path: /ListerStats
    method: GET
    data_selector: pages
- name: Lister
  endpoint:
    path: /Lister
    method: GET
    data_selector: origins
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: data
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: records
    params: {}
- name: lister
  endpoint:
    path: /swh/lister
    method: GET
- name: service_document
  endpoint:
    path: /swh/deposit/api/service-document
    method: GET
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh/deposit/api/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
- name: display_content
  endpoint:
    path: /swh/deposit/api/content
    method: GET
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
- name: releases
  endpoint:
    path: /api/releases
    method: GET
    data_selector: data
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: data
- name: update_content
  endpoint:
    path: /swh/deposit/api/update-media
    method: PUT
    data_selector: data
- name: retrieve_status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
    data_selector: data
- name: deposit
  endpoint:
    path: /swh/deposit/api
    method: POST
    data_selector: records
- name: dataset
  endpoint:
    path: /api/dataset
    method: GET
    data_selector: records
    params: {}
- name: archive
  endpoint:
    path: /api/archive
    method: GET
    data_selector: records
    params: {}
- name: service_document
  endpoint:
    path: /swh/deposit/api/service-document
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: records
    params: {}
- name: update_content
  endpoint:
    path: /swh/deposit/api/update-media
    method: PUT
    data_selector: records
    params: {}
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
    data_selector: records
    params: {}
- name: display_content
  endpoint:
    path: /swh/deposit/api/content
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: provenance
  endpoint:
    path: /provenance
    method: GET
    data_selector: provenance
    params: {}
- name: New Loader
  endpoint:
    path: /swh/loader/package/newloader
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: arch
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Arch Linux source package {p_info.name} version
      {p_info.version} {description}
    params: {}
- name: archive
  endpoint:
    path: passed as arg
    method: GET
    data_selector: Synthetic release for archive at {p_info.url}n
    params: {}
- name: aur
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Aur source package {p_info.name} version
      {p_info.version} {description}
    params: {}
- name: cpan
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Perl source package {name} version {version}
      {description}
    params: {}
- name: cran
  endpoint:
    path: metadata.get("Version", passed as arg)
    method: GET
    data_selector: standard message
    params: {}
- name: conda
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Conda source package {p_info.name} version
      {p_info.version}
    params: {}
- name: crates
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Crate source package {p_info.name} version
      {p_info.version}
    params: {}
- name: debian
  endpoint:
    path: version
    method: GET
    data_selector: standard message (using i_version)
    params: {}
- name: golang
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Golang source package {p_info.name} version
      {p_info.version}
    params: {}
- name: deposit
  endpoint:
    path: HEAD
    method: GET
    data_selector: '{client}: Deposit {id} in collection {collection}n'
    params: {}
- name: hackage
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Haskell source package {p_info.name} version
      {p_info.version}
    params: {}
- name: hex
  endpoint:
    path: p_info.version
    method: GET
    data_selector: standard message
    params: {}
- name: maven-loader
  endpoint:
    path: passed as arg
    method: GET
    data_selector: Synthetic release for archive at {p_info.url}n
    params: {}
- name: npm
  endpoint:
    path: metadata["version"]
    method: GET
    data_selector: standard message
    params: {}
- name: opam
  endpoint:
    path: as given by opam
    method: GET
    data_selector: standard message
    params: {}
- name: pubdev
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for pub.dev source package {p_info.name} version
      {p_info.version}
    params: {}
- name: puppet
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for Puppet source package {p_info.name} version
      {version} {description}
    params: {}
- name: pypi
  endpoint:
    path: metadata["version"]
    method: GET
    data_selector: metadata['comment_text'] or standard message
    params: {}
- name: rubygems
  endpoint:
    path: p_info.version
    method: GET
    data_selector: Synthetic release for RubyGems source package {p_info.name} version
      {p_info.version}
    params: {}
- name: collection
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: collection
    params: {}
- name: status
  endpoint:
    path: /swh/deposit/api/status
    method: GET
    data_selector: status
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
    data_selector: records
    params: {}
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: data
    params: {}
- name: service_document
  endpoint:
    path: /swh-deposit/endpoints/service-document.html
    method: GET
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media.html
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: project
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
- name: collection
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
- name: update_content
  endpoint:
    path: /swh-deposit/endpoints/update-media
    method: PUT
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status
    method: GET
- name: display_content
  endpoint:
    path: /swh-deposit/endpoints/content
    method: GET
- name: mercurial_loader
  endpoint:
    path: /
    method: GET
    data_selector: storage
    params: {}
- name: create_deposit
  endpoint:
    path: /api/deposit/collection
    method: POST
    data_selector: result
    params: {}
- name: update_metadata
  endpoint:
    path: /api/deposit/update-metadata
    method: PUT
    data_selector: result
    params: {}
- name: retrieve_status
  endpoint:
    path: /api/deposit/status
    method: GET
    data_selector: result
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: repositories
  endpoint:
    path: /api/1/repositories
    method: GET
    data_selector: results
- name: swh_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/SwhResource
    method: GET
    data_selector: records
    params: {}
- name: svn_repository
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection
    method: POST
    data_selector: data
    params: {}
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata
    method: PUT
    data_selector: data
    params: {}
- name: create_deposit
  endpoint:
    path: /swh-deposit/endpoints/collection.html
    method: POST
- name: update_metadata
  endpoint:
    path: /swh-deposit/endpoints/update-metadata.html
    method: PUT
- name: retrieve_status
  endpoint:
    path: /swh-deposit/endpoints/status.html
    method: GET
- name: artifact
  endpoint:
    path: /api/artifact
    method: GET
    data_selector: data
    params: {}
- name: entry
  endpoint:
    path: /api/entry
    method: GET
    data_selector: data
    params: {}
- name: example_dataset
  endpoint:
    path: /datasets/example
    method: GET
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: data
    params: {}
- name: graph
  endpoint:
    path: /graphs
    method: GET
    data_selector: data
    params: {}
- name: SWHID
  endpoint:
    path: /swh
    method: GET
    data_selector: records
- name: resolve
  endpoint:
    path: /api/1/resolve/(swhid)
    method: GET
    data_selector: ''
    params: {}
- name: deposit
  endpoint:
    path: /swh/deposit
    method: POST
    data_selector: data
    params: {}
- name: retrieve_status
  endpoint:
    path: /swh/deposit/status
    method: GET
    data_selector: status
    params: {}
- name: extrinsic_metadata_specification
  endpoint:
    path: /swh-storage/extrinsic-metadata-specification
    method: GET
- name: object_masking
  endpoint:
    path: /swh-storage/object-masking
    method: GET
- name: swh_identify
  endpoint:
    path: /identify
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_deposit
  endpoint:
    path: /swh/deposit/api/collection
    method: POST
    data_selector: data
    params: {}
- name: update_metadata
  endpoint:
    path: /swh/deposit/api/update-metadata
    method: PUT
    data_selector: data
    params: {}
- name: CoreSWHIDParamType
  endpoint:
    path: /swh/model/cli/CoreSWHIDParamType
    method: GET
- name: swhid_of_file
  endpoint:
    path: /swh/model/cli/swhid_of_file
    method: GET
- name: swhid_of_file_content
  endpoint:
    path: /swh/model/cli/swhid_of_file_content
    method: GET
- name: model_of_dir
  endpoint:
    path: /swh/model/cli/model_of_dir
    method: GET
- name: swhid_of_dir
  endpoint:
    path: /swh/model/cli/swhid_of_dir
    method: GET
- name: swhid_of_origin
  endpoint:
    path: /swh/model/cli/swhid_of_origin
    method: GET
- name: swhid_of_git_repo
  endpoint:
    path: /swh/model/cli/swhid_of_git_repo
    method: GET
- name: identify_object
  endpoint:
    path: /swh/model/cli/identify_object
    method: GET
- name: datasets
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.datasets
    params: {}
- name: deposits
  endpoint:
    path: /deposits
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: results
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Content
  endpoint:
    path: /swh/model/from_disk/Content
    method: GET
    data_selector: records
- name: Directory
  endpoint:
    path: /swh/model/from_disk/Directory
    method: GET
    data_selector: records
- name: Directory
  endpoint:
    path: /swh/model/from_disk/Directory
    method: GET
    data_selector: entries
- name: Content
  endpoint:
    path: /swh/model/from_disk/Content
    method: GET
    data_selector: object_type
- name: content_git_object
  endpoint:
    path: /swh/model/git_objects/content_git_object
    method: GET
    data_selector: records
- name: directory_entry_sort_key
  endpoint:
    path: /swh/model/git_objects/directory_entry_sort_key
    method: GET
    data_selector: records
- name: escape_newlines
  endpoint:
    path: /swh/model/git_objects/escape_newlines
    method: GET
    data_selector: records
- name: format_date
  endpoint:
    path: /swh/model/git_objects/format_date
    method: GET
    data_selector: records
- name: normalize_timestamp
  endpoint:
    path: /swh/model/git_objects/normalize_timestamp
    method: GET
    data_selector: records
- name: directory_git_object
  endpoint:
    path: /swh/model/git_objects/directory_git_object
    method: GET
    data_selector: records
- name: format_git_object_from_headers
  endpoint:
    path: /swh/model/git_objects/format_git_object_from_headers
    method: GET
    data_selector: records
- name: format_git_object_from_parts
  endpoint:
    path: /swh/model/git_objects/format_git_object_from_parts
    method: GET
    data_selector: records
- name: format_author_data
  endpoint:
    path: /swh/model/git_objects/format_author_data
    method: GET
    data_selector: records
- name: revision_git_object
  endpoint:
    path: /swh/model/git_objects/revision_git_object
    method: GET
    data_selector: records
- name: target_type_to_git
  endpoint:
    path: /swh/model/git_objects/target_type_to_git
    method: GET
    data_selector: records
- name: release_git_object
  endpoint:
    path: /swh/model/git_objects/release_git_object
    method: GET
    data_selector: records
- name: snapshot_git_object
  endpoint:
    path: /swh/model/git_objects/snapshot_git_object
    method: GET
    data_selector: records
- name: raw_extrinsic_metadata_git_object
  endpoint:
    path: /swh/model/git_objects/raw_extrinsic_metadata_git_object
    method: GET
    data_selector: records
- name: extid_git_object
  endpoint:
    path: /swh/model/git_objects/extid_git_object
    method: GET
    data_selector: records
- name: git
  endpoint:
    path: /git
    method: GET
- name: mercurial
  endpoint:
    path: /mercurial
    method: GET
- name: metadata
  endpoint:
    path: /metadata
    method: GET
- name: svn
  endpoint:
    path: /svn
    method: GET
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
    data_selector: data
    params: {}
- name: packages
  endpoint:
    path: /api/packages
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Cooking is idempotent and a no-op in between a previous cooking operation and expiration.
- Uses Keycloak for authentication
- Authentication required for accessing deposit endpoints
- Requires OAuth2 authentication
- Ensure the client ID and secret are properly configured
- Running a Software Heritage instance on your machine can consume quite a bit of
  resources.
- The startup of some containers may fail the first time for dependency-related problems.
- Some objects like Contact may return nulls in deeply nested fields
- Python 3.10 or newer is required
- Some swh packages require a postgresql server properly configured to execute the
  tests.
- Running a Software Heritage instance can consume a lot of resources.
- It is generally used as a subdirectory of the swh-environment.
- Running a lister task can lead to a lot of loading tasks, which can fill your hard
  drive pretty fast. Make sure to monitor your available storage space regularly when
  playing with this stack.
- A few containers (`swh-storage`, `swh-xxx-db`) use a volume for storing the blobs
  or the database files. With the default configuration provided in the `compose.yml`
  file, these volumes are not persistent. So removing the containers will delete the
  volumes!
- For the `swh-objstorage`, since the volume can be pretty big, the remove operation
  can be quite long (several minutes is not uncommon), which may mess a bit with the
  `docker compose` command.
- The cooking feature allows fetching the entire directory content as a tar.gz file.
- Requires OAuth2 authentication to access endpoints.
- 'While the archive itself is public, Software Heritage reserves some features to
  authenticated clients, such as higher rate limits, access to experimental APIs (currently:
  the Graph service), or the Deposit.'
- 'We currently consider 2 types of alterations that may have to be applied to the
  archive: content removal and personal identity modification.'
- Handling archive content removal can also imply masking them temporarily or permanently.
- Uses OAuth2 with refresh token — requires setup of connected app in Software Heritage
- Requires OAuth2 authentication setup
- API may have rate limiting
- Currently, the only allowed citation format value is BibTeX.
- Requires OAuth2 authentication setup.
- API usage might be rate-limited.
- Uses OAuth2 with refresh token — requires setup of connected app in software heritage
- Only staff members are allowed to make new releases
- Releases are made automatically by Jenkins when a tag is pushed to a module repository
- Authentication requires a registered application.
- Rate limits apply to API calls.
- Account approval and land is manual and could take a while.
- Make sure the merge request passes the CI build.
- Requires OAuth2 setup
- API may return different structures based on the endpoint
- maximum line length is 88 characters, rather than the default of 79
- Requires setup of connected app in API
- All sorts of lists require an empty line before the first bullet and after the last
  one, to be properly interpreted as list.
- Verbatim code blocks require double colon at the end of a line, then an empty line,
  and then the code block itself, indented.
- Ensure that your OAuth2 setup is correct.
- If testing is difficult, the tested design may need reconsideration.
- The service requires a login password pair to access, but does not require the SWH
  VPN access.
- Uses OAuth2 with refresh token.
- Ensure proper setup of OAuth application.
- Adding the repository in .mrconfig will break swh-docs builds until the new module
  is registered in the documentation
- Before adding a new module to the documentation, at least one release must have
  been made
- OAuth2 authentication required
- Ensure proper permission scopes are set
- 'Maximum number of permitted requests per hour: 120 for anonymous users, 1200 for
  authenticated users.'
- Some API calls may be rate-limited
- Some information are not easily accessible, for instance metadata.
- Ensure proper OAuth2 setup for access
- Repository data might be paginated
- API may have rate limits on requests
- Requires OAuth2 authentication for all requests.
- Requires setup of connected app in Software Heritage API
- Requires setup of OAuth authentication
- Make sure to update the client credentials for access.
- Ensure proper token management to avoid expiration issues.
- Requires setup of connected app in swh storage
- 'The example above requires people from two groups to decrypt recovery bundles:
  the legal team and the system administration team.'
- The process should not terminate under normal circumstances.
- Objects in Software Heritage have an intrinsic identifier in the form of a SHWID.
  This means that it is not possible to remove a single directory entry without changing
  the identifier for the directory.
- We only support removal of origins and snapshots.
- Retrieving data from Software Heritage - graph service is an optimization. It is
  fast but its content is only accurate to the point when the latest export was generated.
- Recovery bundles contain sensitive information for which access should be restricted.
- Each object is stored encrypted using a public key selected for the whole bundle.
- Requires authentication setup for the API.
- Requires setup of connected app in api
- Authentication requires setup of connected app in api
- Rate limits apply to API calls
- Uses OAuth2 for authentication
- May require specific permissions for certain operations
- Requires valid OAuth2 token to access the API.
- Responses may include pagination information
- 'Long lived refresh tokens can be generated in Keycloak by opening an OpenID Connect
  session with the scope: openid offline_access.'
- Ensure correct permissions are set for API access
- Requires authentication via OAuth2.
- The package should provide an sql directory in its root namespace providing initialization
  sql scripts.
- Module should provide a get_datastore function returning an instance of the datastore
  object.
- Requires setup of OAuth application at Software Heritage
- Requires setup of connected app in swh deposit
- Be aware of rate limits on API calls
- Requires OAuth2 setup with client credentials.
- Rate limits apply to API usage.
- Authentication is required
- Some objects like Deposit may return nulls in deeply nested fields
- Requires OAuth2 authentication with refresh token.
- API rate limits may apply.
- Ensure correct OAuth scopes are set for the application.
- Authentication is required to access the API endpoints.
- Some endpoints may require specific headers for authentication
- Check for rate limits on deposit creation
- Requires an OAuth2 setup with a valid client ID and secret
- Requires OAuth2 setup for access
- Ensure tokens are valid before making requests
- Authentication requires setup of connected app.
- Uses command-line interface for accessing datasets
- Requires setup of OAuth2 credentials.
- Authentication is required.
- Requires authentication via OAuth2
- Requires authentication to access.
- Authentication is required for all endpoints.
- Update (add/replace) existing deposit (archive, metadata, both).
- Requires setup of connected app in the swh API
- OAuth2 authentication is required for all API requests.
- Supports both GraphQL and gRPC APIs.
- Requires setup of connected app in swh.deposit
- Some endpoints may have specific rate limits
- Service exposes hash conversion via gRPC.
- Some endpoints may have rate limits
- Exporting as the edges format is discouraged.
- Exclude fullnames bigger than this number of bytes.
- Tasks in this module work on 'export directories', which have a specific layout.
- '''stamps'' files are written after corresponding directories are written to indicate
  completion.'
- The default configuration uses Software Heritage’s public Web API.
- SwhFS daemonizes into background and logs to syslog.
- If you do not need to read files’ contents at all, we advise you instead use the
  compressed graph directly.
- Code scanners usually crawl each repository or source tree one by one.
- When creating many mountpoints you should avoid calling swh fs mount repeatedly.
- Authentication required for all endpoints.
- Authentication is required for all API endpoints.
- Authentication is required for all API calls.
- The server we use in production to run the graph service has more than 700 GiB of
  RAM.
- Ensure to handle API rate limits.
- Check for updated API documentation regularly.
- Requires OAuth2 setup for token acquisition
- Objects inserted before exportStartedAt are guaranteed to be in the export.
- Objects inserted after exportEndedAt are guaranteed not to be in the export.
- Uses gRPC for communication
- API rate limits are enforced.
- This page discusses various considerations related to memory usage and performance
  tuning when using the swh-graph library to load large compressed graphs.
- 'It is advised to systematically specify a path to a local temporary directory with
  enough space to accommodate the needs of Python or Rust programs, using the environment
  variable: TMPDIR=/srv/softwareheritage/ssd/tmp.'
- The compression pipeline is implemented on top of the WebGraph framework.
- The machine used to compress the graph had specific hardware requirements.
- The results are stored in various binary and compressed formats.
- Files include graph.property.author_id.bin, graph.labels.pthash, graph-labelled.properties,
  etc.
- Uses OAuth2 with refresh token — requires setup of connected app in swh deposit
- Requires setup of a connected app for OAuth2.
- Some fields may return null values for certain records.
- When entering the container the current working directory will be /srv/softwareheritage/graph.
- Uses OAuth2 — requires setup of connected app in api
- Requires OAuth2 setup for access.
- SWHID calculation for snapshots is not fully compatible with the specification,
  because currently only HEAD is considered as a symbolic reference.
- The graph structure is not affected, but looking up obtained snapshots by SWHID
  on the main Software Heritage archive might fail.
- Requires an OAuth2 token for access
- Response data is in GraphQL format
- Requires OAuth2 token for access.
- Rate limits may apply.
- Uses OAuth2 with refresh token — requires setup of connected app in swh
- Some queries may have rate limits
- This API requires authentication.
- Requires OAuth2 authentication.
- Requires OAuth2 authentication with refresh token
- Data may change frequently, consider caching strategies
- Requires setup of connected app in swh deposit.
- Requires OAuth2 setup for access to the API
- The server can operate in local or remote mode depending on configuration.
- The server can return either a Node object or a Connection object.
- Authentication requires setup of user account.
- OAuth2 setup is required for access.
- Extrinsic metadata is only indexed when provided by the same forge/package-repository
  as the origin.
- This is an early draft and hasn’t been implemented yet
- Requires setup of connected app in the authentication system
- Requires authentication for data access
- OAuth2 authentication is required to access the API.
- Authentication requires setup of connected app in API
- Requires OAuth2 setup for access to the API.
- Uses OAuth2 with refresh token — requires setup of connected app in swh.deposit
- The DirectoryIndexer is not an instantiable object. To use it in another context
  one should inherit from this class and override the methods mentioned in the BaseIndexer
  class.
- Handles multiple types of metadata indexing.
- Uses OAuth2 with refresh token
- Ensure to check API rate limits
- Requires setup of OAuth application on Software Heritage.
- Authentication is required for accessing deposit endpoints.
- Requires setup of OAuth2 application at Software Heritage
- Requires setup of authentication for deposit operations
- The API supports only OAuth2 authentication.
- Some endpoints may have specific requirements for data format
- Some objects may have rate limits.
- 'There are two types of client: privileged and unprivileged.'
- Ensure proper authentication setup
- Requires OAuth2 authentication with a valid token.
- This expects scheduler (5008) service to run locally
- Requires API key for access.
- Testing the lister in docker dev prior to deployment reduces the chances of encountering
  errors when turning it for production.
- 'Packages are put in three different repositories: core, extra and community.'
- Arch Linux ARM does not provide api or archives.
- Uses AUR metadata JSON file to list packages
- Only lists standard packages, not those belonging to split packages
- Each page returns a list of results which are raw data from api response.
- 'Origin url is the html page corresponding to a package name on metacpan.org, following
  this pattern: ''https://metacpan.org/dist/{pkgname}'''
- API requires setup of the connected app in swh.deposit
- The database dump is automatically generated every 24 hours, around 02:00:00 UTC.
- The lister is incremental, so it retrieves only the list of new and changed packages
  since last seen timestamp.
- Each time the lister is executed, the HEAD commit id of Julia General registry is
  stored as state.last_seen_commit.
- Requires setup of connected app in Software Heritage
- Some endpoints may require specific parameters to be included in the request
- The lister is incremental following a cursor principle, based on the value of commitTimeStamp
  from the catalog index endpoint.
- Requires setup of deposit account and proper API configuration
- The lister is incremental using `with_release_since` api argument whose value is
  an iso date set regarding the last time the lister has been executed, stored as
  `lister.state.last_listing_date`.
- Requires authentication setup for deposit operations
- Ensure API authentication is configured properly.
- Be mindful of the request limits to avoid throttling.
- Requires setup of connected app in the API
- A lister scrapes a page by page list of origins from an upstream
- Always return empty state
- Always set empty state
- Requires valid OAuth2 credentials to access resources.
- Requires authentication to access the deposit API.
- Requires an OAuth2 setup for access.
- Rate limits may apply depending on the endpoint.
- Ensure to handle potential API limits on requests
- Requires OAuth2 setup in the Software Heritage API
- Check rate limits to avoid throttling
- Some deposits may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in API
- The loader uses a package repository API to load packages.
- Authentication is required to access deposit API
- Requires a valid OAuth2 token for API access
- The loader’s test suite requires cvs to be installed.
- Access via rsync requires the rsync program to be installed.
- Access via pserver over SSH requires OpenSSH to be installed.
- Ensure OAuth2 is properly configured before accessing the API.
- Rate limits apply to all API endpoints.
- Ensure correct API endpoint usage
- Ensure to handle rate limits appropriately
- This API supports both GraphQL and gRPC.
- Ensure to handle token refresh properly.
- API rate limits may apply
- OAuth2 is required for authentication.
- Ensure that the OAuth application is properly configured.
- Requires OAuth2 for authentication.
- Some datasets may return nulls in deeply nested fields
- Some endpoints may have rate limits.
- Only a subset of hashing algorithms is supported as defined in the ALGORITHMS set.
- Any provided algorithms not in that list will result in a ValueError explaining
  the error.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: malformed SWHID'
- '404 Not Found: unavailable bundle or object not found'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Verify the endpoint path and resource ID'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint URL'
- 'Error response from daemon: removal of container 928de3110381 is already in progress'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: Endpoint does not exist.'
- '404 Not Found: The requested resource could not be found'
- '401 Unauthorized: Check your credentials and token expiration'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check access token and scopes'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API credentials'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check your credentials and token validity'
- '404 Not Found: Ensure the endpoint is correct'
- '404 Not Found: Verify the endpoint URL.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Invalid credentials'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Verify OAuth token'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify OAuth token.'
- '401 Unauthorized: Check authentication details'
- '400 Bad Request: Verify request format and parameters'
- '400 Bad Request: Check the request parameters for correctness.'
- '401 Unauthorized: Verify client credentials and token validity.'
- '401 Unauthorized: Check your credentials'
- 'Invalid removal identifier: Ensure the identifier is correctly formatted.'
- 'Decryption failed: Check the decryption key shares.'
- '403 Forbidden: Check API permissions'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check your OAuth2 credentials.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '403 Forbidden: Check your OAuth2 credentials'
- '400 Bad Request: Check your request parameters'
- '404 Not Found: Verify the endpoint and resource'
- '401 Unauthorized: Check your OAuth credentials'
- '404 Not Found: Verify the endpoint and parameters'
- '401 Unauthorized: Ensure valid token'
- '404 Not Found: Verify endpoint URL'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Check the request URL.'
- '500 Internal Server Error: Try again later.'
- '429: too many requests'
- ConnectionError
- Server errors (status >= 500)
- '403 Forbidden: Check permissions for the requested resource.'
- '404 Not Found: Verify the endpoint and resource path.'
- '401 Unauthorized: Check your API credentials'
- '500 Internal Server Error: Try again later'
- '404 Not Found: Ensure the deposit ID is correct'
- 'INVALID_TOKEN: Ensure the token is valid and not expired'
- '403 FORBIDDEN: Check your permissions for the requested resource'
- '404 Not Found: Resource may not exist'
- '401 Unauthorized: Check your OAuth token.'
- '403 Forbidden: Ensure you have the right permissions.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure the endpoint exists.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_TOKEN: Recheck OAuth token validity'
- '401 Unauthorized: Ensure valid access token'
- '403 Forbidden: Check authentication permissions'
- '404 Not Found: Verify endpoint and resource availability'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Verify the endpoint and resource ID.'
- '500 Internal Server Error: Retry after some time.'
- 'ACCESS_DENIED: Check permissions for the requested resource'
- '401 Unauthorized: Invalid or expired token.'
- 'RATE_LIMIT_EXCEEDED: Reduce number of requests.'
- 'INVALID_TOKEN: Check token validity.'
- '403 Forbidden: Verify access permissions.'
- '401 Unauthorized: Check OAuth credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Check your query syntax'
- '401 Unauthorized: Check your token.'
- '403 Forbidden: Access denied.'
- '403 Forbidden: Check your OAuth token permissions'
- '404 Not Found: Ensure the endpoint and parameters are correct'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check your token'
- '500 Internal Server Error: Retry after a short delay'
- GraphAPIError
- GraphArgumentException
- '401 Unauthorized: Check your OAuth2 credentials'
- '403 Forbidden: You do not have permission for this operation'
- '401 Unauthorized: Invalid token.'
- '404 Not Found: Check the endpoint path.'
- '400: Validation and query syntax errors'
- 'ObjectNotFoundError: Requested object is missing.'
- 'PaginationError: Issue with pagination arguments.'
- '400 Bad Request: Check your request body for errors'
- '401 Unauthorized: Check your credentials and permissions.'
- '401 Unauthorized: Check your access token or permissions.'
- '401 Unauthorized: Recheck OAuth credentials'
- '401 Unauthorized: Check your OAuth token and scopes.'
- '401 Unauthorized: Check token validity'
- '403 Forbidden: Insufficient permissions'
- '401 Unauthorized: Ensure the access token is valid.'
- '400 Bad Request: Validate request payload'
- '403 Forbidden: You do not have permission to access this resource'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your API key or token.'
- '401 Unauthorized: Check OAuth token'
- '400 Bad Request: Check request payload'
- '404 Not Found: Check the endpoint path or parameters'
- '401 Unauthorized: Check authentication credentials'
- '404 Not Found: Verify endpoint path and parameters'
- '401 Unauthorized: Check API credentials'
- '404 Not Found: Ensure the endpoint exists'
- '400 Bad Request: Check request format and parameters.'
- '500 Internal Server Error: Retry later.'
- '403 Forbidden: Insufficient scopes for the requested resource.'
- '401 Unauthorized: Check your API token or OAuth credentials.'
- '404 Not Found: The requested resource could not be found.'
- '404 Not Found: Check the endpoint path or resource availability'
- '401 Unauthorized: Check your client credentials'
- '404 Not Found: Verify the endpoint path or resource'
- '404 Not Found: The requested resource does not exist'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Check the validity of the OAuth token.'
- '404 Not Found: Verify the endpoint path and parameters'
- '429 Too Many Requests: Slow down your requests'
- '404 Not Found: Verify the resource path'
- 'INVALID_TOKEN: Check if the token is expired or invalid.'
- 'NOT_FOUND: Resource not found. Verify endpoint and parameters.'
- '401 Unauthorized: Check your token and client credentials.'
- '400 Bad Request: Check your request syntax.'
- '401 Unauthorized: Verify your credentials.'
- 'ValidationError: An error while validating data.'
- 'InvalidDirectoryPath: An error related to directory paths.'
- '401 Unauthorized: Check your credentials and scopes.'
- ValueError if the git_type is unexpected.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth2
  - ClientCredentials
  - AccessToken
  - ClientCredential
  - Client
  - Authorization
  - Token
  - OAuthToken
  - OAuth2Token
  - OAuth
  - ClientId
  - ClientSecret
  - KeycloakOpenIDConnect
  - OIDCAuthorizationCodePKCEBackend
  - OIDCBearerTokenAuthentication
  - RefreshToken
  - OAuthClient
  - AuthToken
  - KeycloakBasicAuthentication
  - HasDepositPermission
  - PublicApiDepositClient
  - OAuth2Client
  - NpmLister
  - AuthorizationCode
client:
  base_url: https://api.softwareheritage.org
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.softwareheritage.org/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
