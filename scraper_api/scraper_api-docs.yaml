resources:
- name: crawler_job
  endpoint:
    path: /job
    method: POST
    data_selector: jobId
    params:
      api_key: <YOUR API KEY>
      start_url: https://www.zillow.com/homes/44269_rid/
      max_depth: 5
      crawl_budget: 50
      url_regexp: https://www\.zillow\.com/homedetails/[^"\s>]+|/homedetails/[^"\s>]+
      api_params:
        country_code: us
      callback:
        type: webhook
        url: <YOUR CALLBACK WEBHOOK URL>
- name: scrape
  endpoint:
    path: /scrape
    method: POST
    data_selector: data
    params:
      scrape: required
      url: required
      render: optional
      country_code: optional
      premium: optional
      ultra_premium: optional
      device_type: optional
- name: scrape
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: scraping_job
  endpoint:
    path: /jobs
    method: POST
    data_selector: response
    params: {}
- name: api_parameters
  endpoint:
    path: /making-requests/api-parameters
    method: POST
    data_selector: apiParams
- name: batch_jobs
  endpoint:
    path: /batchjobs
    method: POST
    data_selector: '[]'
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: POST
    data_selector: response
    params: {}
- name: Amazon Product Page API
  endpoint:
    path: /making-requests/structured-data-collection-method/amazon-product-page-api
    method: GET
- name: Amazon Search API
  endpoint:
    path: /making-requests/structured-data-collection-method/amazon-search-api
    method: GET
- name: Ebay Product Page API
  endpoint:
    path: /making-requests/structured-data-collection-method/ebay-product-page-api
    method: GET
- name: Google SERP API
  endpoint:
    path: /making-requests/structured-data-collection-method/google-serp-api
    method: GET
- name: amazon_product_page
  endpoint:
    path: /making-requests/structured-data-collection-method/amazon-product-page-api
    method: GET
- name: amazon_search
  endpoint:
    path: /making-requests/structured-data-collection-method/amazon-search-api
    method: GET
- name: amazon_offers
  endpoint:
    path: /making-requests/structured-data-collection-method/amazon-offers-api
    method: GET
- name: amazon_reviews
  endpoint:
    path: /making-requests/structured-data-collection-method/amazon-reviews-api
    method: GET
- name: ebay_product_page
  endpoint:
    path: /making-requests/structured-data-collection-method/ebay-product-page-api
    method: GET
- name: ebay_search
  endpoint:
    path: /making-requests/structured-data-collection-method/ebay-search-api
    method: GET
- name: google_search
  endpoint:
    path: /making-requests/structured-data-collection-method/google-serp-api
    method: GET
- name: google_news
  endpoint:
    path: /making-requests/structured-data-collection-method/google-news-api
    method: GET
- name: google_jobs
  endpoint:
    path: /making-requests/structured-data-collection-method/google-jobs-api
    method: GET
- name: google_shopping
  endpoint:
    path: /making-requests/structured-data-collection-method/google-shopping-api
    method: GET
- name: google_maps_search
  endpoint:
    path: /making-requests/structured-data-collection-method/google-maps-search-api
    method: GET
- name: redfin_agent_details
  endpoint:
    path: /making-requests/structured-data-collection-method/redfin-agent-details-api
    method: GET
- name: redfin_for_rent_listings
  endpoint:
    path: /making-requests/structured-data-collection-method/redfin-for-rent-listings-api
    method: GET
- name: redfin_for_sale_listings
  endpoint:
    path: /making-requests/structured-data-collection-method/redfin-for-sale-listings-api
    method: GET
- name: redfin_listing_search
  endpoint:
    path: /making-requests/structured-data-collection-method/redfin-listing-search-api
    method: GET
- name: walmart_search
  endpoint:
    path: /making-requests/structured-data-collection-method/walmart-search-api
    method: GET
- name: walmart_category
  endpoint:
    path: /making-requests/structured-data-collection-method/walmart-category-api
    method: GET
- name: walmart_product
  endpoint:
    path: /making-requests/structured-data-collection-method/walmart-product-api
    method: GET
- name: walmart_reviews
  endpoint:
    path: /making-requests/structured-data-collection-method/walmart-reviews-api
    method: GET
- name: amazon_product_page
  endpoint:
    path: /structured/amazon/product
    method: GET
    data_selector: data
    params:
      api_key: API_KEY
      asin: ASIN
      country: COUNTRY
      tld: TLD
- name: ads
  endpoint:
    path: /ads
    method: GET
    data_selector: ads
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: results
- name: amazon_search
  endpoint:
    path: /structured/amazon/search
    method: GET
    data_selector: products
    params:
      api_key: API_KEY
      query: QUERY
      country: COUNTRY
      tld: TLD
- name: offers
  endpoint:
    path: /structured/amazon/offers
    method: GET
    data_selector: item
    params:
      api_key: API_KEY
      asin: ASIN
      country: COUNTRY
      tld: TLD
- name: reviews
  endpoint:
    path: /gp/customer-reviews/R3SMRQ8TO3UWGE/ref=cm_cr_arp_d_rvw_ttl?ie=UTF8&ASIN=B079BLHH67
    method: GET
    data_selector: reviews
    params: {}
- name: reviews
  endpoint:
    path: /structured/amazon/review
    method: GET
    data_selector: reviews
    params:
      api_key: API_KEY
      asin: ASIN
      country: COUNTRY
      tld: TLD
      output_format: json
- name: product_reviews
  endpoint:
    path: /reviews
    method: GET
    data_selector: reviews
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /structured/ebay/product
    method: GET
    data_selector: product data
    params:
      api_key: API_KEY
      product_id: PRODUCT_ID
      country_code: COUNTRY_CODE
      tld: TLD
- name: ebay_search
  endpoint:
    path: /structured/ebay/search
    method: GET
    data_selector: results
    params:
      api_key: API_KEY
      query: QUERY
      tld: TLD
      country_code: COUNTRY_CODE
      sort_by: SORT_BY
      page: PAGE
      items_per_page: ITEMS_PER_PAGE
      seller_id: SELLER_ID
      condition: CONDITION
      buying_format: BUYING_FORMAT
      show_only: SHOW_ONLY
- name: search_information
  endpoint:
    path: /search_information
    method: GET
    data_selector: search_information
    params: {}
- name: knowledge_graph
  endpoint:
    path: /knowledge_graph
    method: GET
    data_selector: knowledge_graph
    params: {}
- name: organic_results
  endpoint:
    path: /organic_results
    method: GET
    data_selector: organic_results
    params: {}
- name: search_results
  endpoint:
    path: /structured/google/search
    method: GET
    data_selector: results
    params:
      api_key: API_KEY
      query: QUERY
      country_code: COUNTRY_CODE
      tld: TLD
      output_format: OUTPUT_FORMAT
- name: google_serp
  endpoint:
    path: /google-serp
    method: GET
    data_selector: results
- name: articles
  endpoint:
    path: /v2/everything
    method: GET
    data_selector: articles
- name: google_news
  endpoint:
    path: /structured/google/news
    method: GET
    data_selector: results
    params:
      api_key: API_KEY
      country_code: COUNTRY_CODE
      tld: TLD
      query: QUERY
- name: jobs_results
  endpoint:
    path: /search
    method: GET
    data_selector: jobs_results
- name: jobs
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: API_KEY
      country_code: COUNTRY_CODE
      tld: TLD
      query: QUERY
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: shopping_results
  endpoint:
    path: /shopping/results
    method: GET
    data_selector: shopping_results
    params:
      query: Skateboards
- name: google_shopping
  endpoint:
    path: /making-requests/structured-data-collection-method/google-shopping-api
    method: GET
- name: shopping_data
  endpoint:
    path: ''
    method: GET
    data_selector: results
    params:
      api_key: APIKEY
      country_code: COUNTRY_CODE
      query: QUERY
- name: results
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: maps_search
  endpoint:
    path: /structured/google/mapssearch
    method: GET
    data_selector: results
    params:
      api_key: API_KEY
      query: QUERY
      latitude: LATITUDE
      longitude: LONGITUDE
- name: agent_details
  endpoint:
    path: /real-estate-agents
    method: GET
    data_selector: ''
- name: partner_agent_details
  endpoint:
    path: /real-estate-agents/smarter-move-real-estate-group
    method: GET
    data_selector: ''
- name: agent_details
  endpoint:
    path: /structured/redfin/agent
    method: GET
    data_selector: details
    params:
      api_key: API_KEY
      url: URL
      country_code: COUNTRY_CODE
      tld: TLD
- name: for_rent_listings
  endpoint:
    path: /for_rent_listings
    method: GET
    data_selector: listings
- name: for_rent_listing
  endpoint:
    path: /structured/redfin/forrent
    method: GET
    data_selector: listing_data
    params:
      api_key: API_KEY
      url: URL
      country_code: COUNTRY_CODE
      tld: TLD
      raw: RAW
- name: listings
  endpoint:
    path: /for-sale-listings
    method: GET
    data_selector: listings
- name: listing
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: API_KEY
      url: URL
      country_code: COUNTRY_CODE
      tld: TLD
      raw: RAW
- name: listing
  endpoint:
    path: /city/1826/MA/Boston/filter/min-beds=3,min-baths=2
    method: GET
    data_selector: listing
    params: {}
- name: redfin_listing_search
  endpoint:
    path: /structured/redfin/search
    method: GET
    data_selector: results
    params:
      api_key: API_KEY
      url: URL
      country_code: COUNTRY_CODE
      tld: TLD
- name: product_list
  endpoint:
    path: /structured/walmart/search
    method: GET
    data_selector: results
    params:
      api_key: API_KEY
      query: QUERY
      page: PAGE
- name: walmart_category
  endpoint:
    path: /structured/walmart/category
    method: GET
    data_selector: product_listings
    params:
      api_key: API_KEY
      category: CATEGORY
      page: PAGE
- name: product_details
  endpoint:
    path: /
    method: GET
    data_selector: product_name
    params:
      api_key: API_KEY
      product_id: PRODUCTID
- name: walmart_reviews
  endpoint:
    path: /structured/walmart/review
    method: GET
    data_selector: reviews
    params:
      api_key: <API_KEY>
      product_id: '1347882796'
- name: Amazon Product Page API
  endpoint:
    path: /making-requests/structured-data-collection-method/amazon-product-page-api
    method: GET
- name: Google Search API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/google-search-api-async
    method: GET
- name: Amazon Product Page API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/amazon-product-page-api-async
    method: GET
- name: Amazon Search API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/amazon-search-api-async
    method: GET
- name: Amazon Offers API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/amazon-offers-api-async
    method: GET
- name: Amazon Reviews API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/amazon-reviews-api-async
    method: GET
- name: Ebay Product Page API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/ebay-product-page-api-async
    method: GET
- name: Ebay Search API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/ebay-search-api-async
    method: GET
- name: Google Search API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/google-search-api-async
    method: GET
- name: Google News API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/google-news-api-async
    method: GET
- name: Google Jobs API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/google-jobs-api-async
    method: GET
- name: Google Shopping API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/google-shopping-api-async
    method: GET
- name: Google Maps Search API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/google-maps-search-api-async
    method: GET
- name: Redfin Agent Details API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/redfin-agent-details-api-async
    method: GET
- name: Redfin 'For Rent' Listings API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/redfin-for-rent-listings-api-async
    method: GET
- name: Redfin 'For Sale' Listings API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/redfin-for-sale-listings-api-async
    method: GET
- name: Redfin Listing Search API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/redfin-listing-search-api-async
    method: GET
- name: Walmart Search API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/walmart-search-api-async
    method: GET
- name: Walmart Category API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/walmart-category-api-async
    method: GET
- name: Walmart Product API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/walmart-product-api-async
    method: GET
- name: Walmart Reviews API
  endpoint:
    path: /making-requests/async-structured-data-collection-method/walmart-reviews-api-async
    method: GET
- name: amazon_product_page
  endpoint:
    path: /structured/amazon/product
    method: POST
    data_selector: response
- name: search_results
  endpoint:
    path: /structured/amazon/search
    method: POST
    data_selector: response
    params: {}
- name: offers
  endpoint:
    path: /structured/amazon/offers
    method: POST
    data_selector: response
    params:
      apiKey: APIKEY
      country_code: COUNTRY_CODE
      tld: TLD
      f_new: F_NEW
      f_usedGood: F_USEDGOOD
      f_usedLikeNew: F_USEDLIKENEW
      f_usedVeryGood: F_USEDVERYGOOD
      f_usedAcceptable: F_USEDACCEPTABLE
- name: amazon_reviews
  endpoint:
    path: /structured/amazon/review
    method: POST
    data_selector: response
    params: {}
- name: single_product_request
  endpoint:
    path: /structured/ebay/product
    method: POST
    data_selector: response
    params:
      apiKey: API_KEY
      productId: PRODUCTID
      country_code: COUNTRY_CODE
      tld: TLD
      callback:
        type: webhook
        url: YYYY
- name: multiple_products_request
  endpoint:
    path: /structured/ebay/product
    method: POST
    data_selector: response
    params:
      apiKey: API_KEY
      productIds:
      - PRODUCTID1
      - PRODUCTID2
      country_code: COUNTRY_CODE
      tld: TLD
      callback:
        type: webhook
        url: YYYY
- name: ebay_search
  endpoint:
    path: /structured/ebay/search
    method: POST
    data_selector: ''
    params:
      apiKey: APIKEY
      query: QUERY
      tld: TLD
      page: PAGE
      country_code: COUNTRY_CODE
      items_per_page: ITEMS_PER_PAGE
      condition: CONDITION
      buying_format: BUYING_FORMAT
      show_only: SHOW_ONLY
- name: single_query_request
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: multiple_query_request
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: google_news
  endpoint:
    path: /structured/google/news
    method: POST
    data_selector: response
    params:
      apiKey: APIKEY
      query: QUERY
      tld: TLD
      uule: UULE
      num: NUM
      hl: HOSTLANGUAGE
      gl: GUESTLANGUAGE
      ie: QUERYENCODING
      oe: RESULTENCODING
      start: START
- name: jobs
  endpoint:
    path: /structured/google/jobs
    method: POST
    data_selector: response
    params: {}
- name: google_shopping
  endpoint:
    path: /structured/google/shopping
    method: POST
    data_selector: response
    params: {}
- name: maps_search
  endpoint:
    path: /structured/google/mapssearch
    method: POST
    data_selector: response
    params: {}
- name: redfin_agent
  endpoint:
    path: /structured/redfin/agent
    method: POST
    data_selector: id
    params:
      apiKey: APIKEY
      url: URL
      country_code: COUNTRY_CODE
      tld: TLD
- name: for_rent_listing
  endpoint:
    path: /structured/redfin/forrent
    method: POST
    data_selector: response
    params: {}
- name: single_query_request
  endpoint:
    path: /structured/redfin/forsale
    method: POST
    data_selector: id
    params:
      apiKey: APIKEY
      url: URL
      country_code: COUNTRY_CODE
      tld: TLD
      raw: RAW
- name: multiple_query_request
  endpoint:
    path: /structured/redfin/forsale
    method: POST
    data_selector: id
    params:
      apiKey: APIKEY
      urls: URLs
      country_code: COUNTRY_CODE
      tld: TLD
      raw: RAW
- name: redfin_listing_search
  endpoint:
    path: /structured/redfin/search
    method: POST
    data_selector: id
    params:
      apiKey: APIKEY
      url: URL
      country_code: COUNTRY_CODE
      tld: TLD
- name: walmart_search
  endpoint:
    path: /structured/walmart/search
    method: POST
    data_selector: response
    params:
      apiKey: APIKEY
      query: QUERY
      tld: TLD
      page: PAGE
      output_format: FORMAT
- name: category
  endpoint:
    path: /structured/walmart/category
    method: POST
    data_selector: response
    params:
      apiKey: APIKEY
      category: CATEGORY
      tld: TLD
      output_format: FORMAT
      page: PAGE
- name: product
  endpoint:
    path: /structured/walmart/product
    method: POST
    data_selector: response
    params:
      apiKey: APIKEY
      productId: PRODUCTID
      output_format: FORMAT
      tld: TLD
- name: product_reviews
  endpoint:
    path: /walmart/reviews
    method: GET
- name: single_query_request
  endpoint:
    path: /structured/walmart/review
    method: POST
    data_selector: id
    params: {}
- name: multiple_query_request
  endpoint:
    path: /structured/walmart/review
    method: POST
    data_selector: id
    params: {}
- name: amazon_zip_code_targeting
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      zip: '92223'
- name: sde_method
  endpoint:
    path: /structured/amazon/offers
    method: GET
    data_selector: response
    params:
      zip: '92223'
- name: scrape
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      max_cost: '5'
- name: async_scrape
  endpoint:
    path: /jobs
    method: POST
    data_selector: response
    params:
      premium: 'true'
      max_cost: '5'
- name: geotargeting
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      premium: 'true'
      country_code: lu
- name: output_format_json
  endpoint:
    path: /
    method: GET
    data_selector: name
    params:
      output_format: json
      autoparse: 'true'
- name: output_format_csv
  endpoint:
    path: /
    method: GET
    data_selector: name
    params:
      output_format: csv
      autoparse: 'true'
- name: structured_data_collection
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: records
    params:
      api_key: API_KEY
notes:
- There is a 2MB limit per request.
- We highly recommend you set a 70 seconds timeout in your application to get the
  best possible success rates.
- Handles failed requests gracefully.
- Stops when your credit budget or depth limit is hit.
- Either max_depth or crawl_budget must be set
- Make sure your regex pattern is specific enough to only match the URLs you want
  to crawl.
- Use crawl_budget when you want to control costs.
- Use max_depth when you want to control how deep the crawler goes.
- If you receive a 500 server error, identify the website's geo-targeting and add
  the corresponding country_code to overcome geo-restrictions.
- If errors continue, upgrade the request to use premium proxies by adding premium=true.
- For persistent failures, activate ultra_premium=true to use enhanced anti-blocking
  measures.
- Your code must be configured to not verify SSL certificates.
- Response for an Async job is stored for up to 72 hours or until you retrieve the
  results.
- Currently only webhook callbacks are supported
- Parameters should go into an apiParams object inside the POST data
- We recommend sending a maximum of 50,000 URLs in one batch job.
- Responses for binary requests require Base64 decoding.
- ASIN's are market specific (TLD).
- Both TLD and COUNTRY parameters must be specified for cross-country scraping.
- Amazon review pages currently require a login to access.
- ScraperAPI does not support scraping behind a login.
- The TLD defaults to 'com' if not specified.
- Multiple options can be used for condition and buying_format parameters.
- Ensure to include API key in the requests
- API provides various structured data collection methods.
- Valid values for COUNTRY_CODE are two letter country codes for Geo Targeting.
- TLD defaults to 'com' if not specified.
- To fetch additional pages you need to use the `next_page_url` by adding your unique
  `api_key` parameter at the end.
- The URL has to be the URL of a property for rent.
- If the raw parameter is set to true, the raw data will be extracted from the page
  without further parsing.
- Last updated 7 months ago
- Gather product lists, paginate results, and power price‑monitoring tools.
- Extract product listings, prices, and availability by department ID.
- Scrape Walmart product reviews into structured JSON/CSV.
- Filter by rating, date, or relevance.
- Requires setup of user account's API key.
- User account’s normal API key is required.
- Both TLD and COUNTRY parameters must be specified when scraping from another country.
- Amazon review pages currently require a login to access. Since ScraperAPI does not
  support scraping behind a login, this endpoint is not available.
- Throttle API calls or reduce frequency
- Top-level Ebay domain defaults to 'com' if not specified.
- Multiple conditions and buying formats can be specified.
- Requires API key for access
- Output format defaults to JSON if not specified.
- JSON is default if parameter OUTPUT_FORMAT is not added.
- Single and multiple query requests available.
- Uses API key for authentication
- The URL has to be a Redfin Search page.
- The return value will be stringified. So if you want to use it as JSON, you will
  need to parse it into a JSON object.
- Requests using `render=true` cost 10 API credits.
- Requests using `screenshot=true` automatically enable JS rendering.
- Current support is limited to US ZIP Codes exclusively
- Cached results update every 10 mins for fresh data.
- This feature applies only to requests that include the `ultra_premium=true` parameter
  and is enabled by default.
- Recommended only when necessary. Not compatible with ultra_premium=true.
- Only use this feature if you need to send custom headers to retrieve specific results
  from the website.
- Set `device_type=desktop` to have the API set a desktop user agent. This is the
  default behavior.
- Set `device_type=mobile` to have the API set a mobile user agent.
- Certain websites display different data based on geolocation of the IP used for
  the request.
- ZIP Code Geo targeting is currently supported for the Amazon domain.
- To get access to these geographic locations, please use premium=true together with
  the country_code parameter.
- The 'x-sapi-' prefix is used on each header to avoid collisions with headers used
  by target sites.
- Enable headless browser rendering with render=true for dynamic content, SPAs, and
  JS-heavy sites.
- Sessions expire 15 minutes after the last usage.
- Get UTF-8 encoded data, JSON autoparse for supported sites, and error retries up
  to 70 seconds.
- All content is standardized to UTF-8 encoding, so you receive consistent results
  no matter the encoding format of the original site.
- To avoid timing out your request before the API has had a chance to complete all
  retries, remember to set your timeout to 70 seconds.
- If you receive a successful 200 status code response from the API but the response
  contains a CAPTCHA, please contact our support team and they will add it to our
  CAPTCHA detection database.
- Uses autoparse parameter to get structured JSON or CSV
- For selected domains we offer a parameter that parses the data and returns structured
  JSON format.
- We recommend using our Structured Data Endpoints instead of the autoparse parameter.
- Add the parameter output_format=text or output_format=markdown to the request structure.
- This API provides a key for authentication.
- Ensure to monitor your usage and plan accordingly.
- You can delete your ScraperAPI account by going to your Billing Page.
- You can download all previous invoices on the Billing Page.
- If you want to receive billing information related to your ScraperAPI subscription
  to an additional email address, you can add it by clicking ‘Edit billing address’
  in the top right corner of the Billing Page.
- Add or update VAT number by clicking ‘Edit billing address’ in the top right corner
  of the Billing Page
- Accepts credit cards and Paypal for payment.
- Accessing domains with anti-scraping protections requires the activation of a bypass
  mechanism.
- requestCount and failedRequestCount numbers refresh once every 15 seconds, while
  concurrentRequests number is available in real-time.
errors:
- 'Job ID not found: Ensure the job ID is correct'
- 'Request limit exceeded: Throttle API calls or reduce frequency'
- 'Invalid API key: Check your API key and try again'
- Failed requests don't cost any API credits.
- If a single URL's cost exceeds the crawl budget, the job will fail to start.
- '500 Internal Server Error: Check geo-targeting and consider premium proxies.'
- 'Missing Data: Set render=true to enable JS Rendering.'
- failed_due_to_timeout
- '401 Unauthorized: Recheck API key or permissions'
- 'Invalid API_KEY: Check your API key and try again'
- 'Invalid QUERY: Ensure the query string is properly formatted'
- 'Invalid COUNTRY or TLD: Check the values provided'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check for required parameters'
- '401 Unauthorized: Check API key'
- '404 Not Found: Verify the endpoint path'
- '403 Forbidden: Check your API key or permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check required parameters are included.'
- '401 Unauthorized: Check API Key validity.'
- '401 Unauthorized: Invalid API key'
- '401 Unauthorized: Invalid API key.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API Key'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck API key or token expiration.'
- '403: This request exceeds your max_cost. You can view the cost per request in your
  response header or in the API Playground on the dashboard.'
- Request failed after 70 seconds of retries.
- '200: Successful response.'
- '400: Bad request. Please check your request structure.'
- '404: Requested page does not exist.'
- '410: Requested page is no longer available.'
- '500: After retrying for 70 seconds, the API was unable to receive a successful
  response.'
- '429: You are sending requests too fast, and exceeding your concurrency limit.'
- '403: You have used up all your API credits.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Validate your API key.'
- '429 Too Many Requests: Reduce the number of requests.'
- '200: Successful request'
- '404: Not found'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.scraperapi.com
  auth:
    type: apikey
    location: query
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
