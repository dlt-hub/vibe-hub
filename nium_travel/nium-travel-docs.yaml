resources:
- name: funding_account
  endpoint:
    path: /api/v1/funding_accounts
    method: GET
    data_selector: funding_accounts
- name: virtual_card
  endpoint:
    path: /api/v1/virtual_cards
    method: GET
    data_selector: virtual_cards
- name: login
  endpoint:
    path: /authentication/v1/sessions
    method: POST
    data_selector: access_token
- name: card_creation
  endpoint:
    path: /v1/cards
    method: POST
- name: card_management
  endpoint:
    path: /v1/cards/{reference}
    method: PUT
- name: reporting
  endpoint:
    path: /v1/transactions
    method: GET
- name: transaction_types
  endpoint:
    path: /api/v1/transaction_types
    method: GET
    data_selector: transactions
    params: {}
- name: Card Activity Daily
  endpoint:
    path: /reports/card-activity/daily
    method: GET
    data_selector: transactions
- name: Card Activity Monthly
  endpoint:
    path: /reports/card-activity/monthly
    method: GET
    data_selector: transactions
- name: Funding Account Activity Daily
  endpoint:
    path: /reports/funding-account-activity/daily
    method: GET
    data_selector: transactions
- name: Funding Account Activity Monthly
  endpoint:
    path: /reports/funding-account-activity/monthly
    method: GET
    data_selector: transactions
- name: Non-zero Card Balances
  endpoint:
    path: /reports/non-zero-card-balances
    method: GET
    data_selector: cards
- name: Balance Sheet
  endpoint:
    path: /reports/balance-sheet
    method: GET
    data_selector: summary
- name: Scheduled Loads
  endpoint:
    path: /reports/scheduled-loads
    method: GET
    data_selector: loads
- name: Credit Activity
  endpoint:
    path: /reports/credit-activity
    method: GET
    data_selector: credit
- name: Credit Statement
  endpoint:
    path: /reports/credit-statement
    method: GET
    data_selector: statement
- name: card_activity_daily_report
  endpoint:
    path: /reports/card_activity_daily
    method: GET
    data_selector: records
    params: {}
- name: funding_account_activity_daily_report
  endpoint:
    path: /travel/api/funding_account_activity_daily_report
    method: GET
    data_selector: reportData
    params: {}
- name: card_activity_monthly_report
  endpoint:
    path: /CardActivityMonthly
    method: GET
    data_selector: card_activity
    params: {}
- name: Funding Account Activity Monthly
  endpoint:
    path: /Funding_Account_Activity/Monthly
    method: GET
- name: non_zero_card_balances
  endpoint:
    path: /travel/api/non-zero-card-balances
    method: GET
    data_selector: records
    params: {}
- name: balance_sheet_report
  endpoint:
    path: /travel/api/balance-sheet-report
    method: GET
    data_selector: report_data
    params: {}
- name: associated_detailed_sheets
  endpoint:
    path: /travel/api/associated-detailed-sheets
    method: GET
    data_selector: sheets_data
    params: {}
- name: Scheduled Loads
  endpoint:
    path: /scheduled_loads
    method: GET
    data_selector: records
- name: dispute_closed
  endpoint:
    path: /notifications
    method: POST
- name: balance_created
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: balance_blocked
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: balance_unblocked
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: balance_closed
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
    params: {}
- name: balance_associated_cards_blocked
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: balance_associated_cards_unblocked
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: balance_associated_cards_closed
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: card_created
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
    params: {}
- name: card_expired
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: card_blocked
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
    params: {}
- name: card_unblocked
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: card_closed
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: balance_funds_deposited
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: low_balance_alert_limit
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: balance_exposure_notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: balance_exposure_threshold_exceeded
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
- name: card_purchase
  endpoint:
    path: /notifications
    method: POST
    data_selector: notificationContent
    params: {}
notes:
- Funding accounts must be created during account setup.
- Virtual cards are instantly available upon creation and loading.
- A single-fund card is often configured as a single-spend card and is sometimes referred
  to as a single-use card.
- A multi-fund card is often configured as a multi-spend card and is sometimes referred
  to as a multi-use card.
- Pre-auth protection on single-spend cards extends their usability when the recipient
  pre-authorizes the payment.
- Pre-auth protection cannot be enabled for multi-spend cards.
- In pre-payment scenarios, we recommend asking the recipient of the payment to ensure
  they do not confirm the card before the payment.
- Do not store the received card information unless you are fully PCI compliant.
- A multi-spend card must be used.
- Do not store received card information unless you are fully PCI compliant.
- Multi-spend virtual cards are not automatically deleted. You must manually delete
  them yourself.
- Safeguarding sensitive data like your API credentials and card information should
  be your top priority.
- Implementing IP whitelisting emerges as a crucial security measure to achieve integrity
  of shared data over the internet.
- Tokens are valid for 15 minutes.
- If a request returns 401 Unauthorized, re-authenticate to obtain a new token.
- 'All applicable API requests must include the following header: x-request-id: <unique-client-generated-id>'
- Always use the same x-request-id when retrying a request after a failure to ensure
  idempotent handling.
- Uses OAuth2 with refresh token â€” requires setup of connected app in Nium
- This report contains a detailed list of all card activity on all cards, on a specific
  day.
- It is generated daily and covers all transactions carried out on the previous day.
- This report contains a detailed list of all funding account activity on all funding
  accounts on a specific day.
- A transaction can have multiple balance movements.
- Custom fields (customField1 to customField20) may be updated during the course of
  a month.
errors:
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 500 Unexpected error occurred
- 'HTTP 500: Indicates server communication timeout'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: The input parameter security token was not specified or is invalid.'
- '403 Forbidden: The IP invoking the API was not one of the allowed IPs.'
- '404 Not Found: The request method was not found as the URL parameter was not specified
  in the URL.'
- '405 Method Not Allowed: The URL parameter was not specified in the URL for the
  request method.'
- '415 Unsupported Media Type: Server refused the request because the format is unsupported
  by the requested resource.'
- '429 Too Many Requests: The number of requests for this API has exceeded the maximum
  number of allowed requests.'
- '500 Internal Server Error: A system error occurred in the Nium platform.'
- '503 Service Unavailable: The system is temporarily unavailable.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects: []
client:
  base_url: https://<customerHost:Port>
  headers:
    Content-Type: application/json
source_metadata: null
