resources:
- name: agentic_document_analysis
  endpoint:
    path: /v1/tools/agentic-document-analysis
    method: POST
    data_selector: data
    params: {}
- name: ade_parse
  endpoint:
    path: /v1/ade/parse
    method: POST
- name: ade_extract
  endpoint:
    path: /v1/ade/extract
    method: POST
    data_selector: extraction
- name: GoogleDrive
  endpoint:
    path: /api-reference/tools/agentic-document-extraction
    method: POST
    data_selector: results
- name: AmazonS3
  endpoint:
    path: /api-reference/tools/agentic-document-extraction
    method: POST
    data_selector: results
- name: LocalDirectory
  endpoint:
    path: /api-reference/tools/agentic-document-extraction
    method: POST
    data_selector: results
- name: URL
  endpoint:
    path: /api-reference/tools/agentic-document-extraction
    method: POST
    data_selector: results
- name: GoogleDrive
  endpoint:
    path: /ade/connectors
    method: POST
    data_selector: results
    params:
      folder_id: your-google-drive-folder-id
- name: AmazonS3
  endpoint:
    path: /ade/connectors
    method: POST
    data_selector: results
    params:
      bucket_name: your-bucket-name
      region_name: us-east-1
- name: LocalDirectory
  endpoint:
    path: /ade/connectors
    method: POST
    data_selector: results
    params:
      connector_path: /path/to/documents
- name: URL
  endpoint:
    path: /ade/connectors
    method: POST
    data_selector: results
    params:
      connector_path: https://example.com/document.pdf
- name: ParsedDocument
  endpoint:
    path: /ade/ade-extract-api
    method: POST
    data_selector: chunks
- name: chunk_types
  endpoint:
    path: /ade/ade-chunk-types
    method: GET
    data_selector: chunks
    params: {}
- name: groundings
  endpoint:
    path: /ade/ade-save-groundings
    method: POST
    data_selector: results
    params: {}
- name: ParsedDocument
  endpoint:
    path: /api/parse
    method: POST
    data_selector: chunks
- name: visualization
  endpoint:
    path: /ade/ade-visualize
    method: GET
    data_selector: results
    params: {}
- name: ParseConfig
  endpoint:
    path: /ade/ade-parseconfig
    method: GET
    data_selector: settings
- name: parse_documents
  endpoint:
    path: /ade/ade-parse-docs
    method: POST
    data_selector: results
    params: {}
- name: parse_and_save_documents
  endpoint:
    path: /ade/ade-parseconfig
    method: POST
    data_selector: results
    params: {}
- name: parse_documents
  endpoint:
    path: /ade/ade-parse-docs
    method: POST
    data_selector: results
    params: {}
- name: parse_and_save_documents
  endpoint:
    path: /ade/ade-parse-documents
    method: POST
    data_selector: results
    params: {}
- name: parse_one_document
  endpoint:
    path: /ade/ade-parse-one-document
    method: POST
    data_selector: result
    params: {}
- name: parse_documents
  endpoint:
    path: /ade/ade-parse-docs
    method: POST
    data_selector: results
- name: parse_and_save_documents
  endpoint:
    path: /ade/ade-parse-docs
    method: POST
    data_selector: results
- name: parse_and_save_document
  endpoint:
    path: /ade/ade-parse-docs
    method: POST
    data_selector: results
- name: parse_documents
  endpoint:
    path: /ade/ade-parse-docs
    method: POST
    data_selector: results
    params: {}
- name: parse_and_save_documents
  endpoint:
    path: /ade/ade-parse-documents
    method: POST
    data_selector: result_paths
    params: {}
- name: parse_and_save_document
  endpoint:
    path: /ade/ade-parse-one-document
    method: POST
    data_selector: result_path
    params: {}
- name: document_analysis
  endpoint:
    path: /v1/tools/agentic-document-analysis
    method: POST
    data_selector: data
- name: extraction_model
  endpoint:
    path: /ade/extract
    method: POST
    data_selector: results
    params: {}
- name: extraction_schema
  endpoint:
    path: /ade/extract/schema
    method: POST
    data_selector: results
    params: {}
- name: document_analysis
  endpoint:
    path: /v1/tools/agentic-document-analysis
    method: POST
    data_selector: data
- name: extraction_model
  endpoint:
    path: /ade/ade-extract
    method: POST
    data_selector: results
    params: {}
- name: extraction_schema
  endpoint:
    path: /ade/ade-extract-schema
    method: POST
    data_selector: results
    params: {}
- name: agentic_document_analysis
  endpoint:
    path: /v1/tools/agentic-document-analysis
    method: GET
- name: parse
  endpoint:
    path: /ade/parse
    method: POST
    data_selector: markdown
- name: extract
  endpoint:
    path: /ade/extract
    method: POST
    data_selector: extraction
- name: parse
  endpoint:
    path: /v1/ade/parse
    method: POST
    data_selector: markdown
    params: {}
- name: extract
  endpoint:
    path: /v1/ade/extract
    method: POST
    data_selector: extraction
    params: {}
- name: parse
  endpoint:
    path: /ade/parse
    method: POST
    data_selector: markdown
- name: extract
  endpoint:
    path: /ade/extract
    method: POST
    data_selector: extraction
- name: parse
  endpoint:
    path: /ade/parse
    method: POST
    data_selector: markdown
- name: extract
  endpoint:
    path: /ade/extract
    method: POST
    data_selector: extraction
- name: invoice_information
  endpoint:
    path: /invoice/information
    method: GET
    data_selector: Invoice Information
    params: {}
- name: beneficiary_bank_information
  endpoint:
    path: /beneficiary/bank/information
    method: GET
    data_selector: Beneficiary Bank Information
    params: {}
- name: invoice_line_items
  endpoint:
    path: /invoice/line/items
    method: GET
    data_selector: Invoice Line Items
    params: {}
- name: wire_transfer_instructions
  endpoint:
    path: /wire/transfer/instructions
    method: GET
    data_selector: Wire Transfer Instructions
    params: {}
- name: extract
  endpoint:
    path: /ade/extract
    method: POST
    data_selector: extraction
- name: parse
  endpoint:
    path: /ade/parse
    method: POST
    data_selector: markdown
- name: wire_transfer
  endpoint:
    path: /extract
    method: POST
    data_selector: extraction
- name: Agentic Document Extraction
  endpoint:
    path: /ade/ade-extract
    method: GET
    data_selector: records
    params: {}
- name: Agentic Document Extraction
  endpoint:
    path: /ade/ade-extract-api
    method: GET
- name: document_extraction
  endpoint:
    path: /ade/ade-extract
    method: GET
- name: LandingAI Agentic Document Extraction
  endpoint:
    path: /ade/ade-sf-parse-local
    method: GET
    data_selector: records
- name: LandingAI Agentic Document Extraction Cloud API
  endpoint:
    path: /ade/ade-sf-parse-cloud
    method: GET
    data_selector: records
- name: document_parsing
  endpoint:
    path: /parse
    method: POST
    data_selector: data
    params: {}
- name: indexed_documents
  endpoint:
    path: /index_documents
    method: POST
    data_selector: indexed_documents
    params: {}
- name: indexed_documents
  endpoint:
    path: /ade/ade-sf-index
    method: POST
    data_selector: indexed_documents
    params: {}
notes:
- Add .env to .gitignore to prevent accidentally committing the API key to version
  control.
- Do not pass the API key directly to the code, because others could see and use your
  API key.
- 'If using a .env file: Add .env to .gitignore to prevent accidentally committing
  the API key to version control.'
- Uses API key for authentication.
- Users on the Team, Visionary, and Enterprise plans can turn on zero data retention
  (ZDR) directly in the user interface.
- Agentic Document Extraction is now available in Europe.
- For EU users, use the endpoint https://api.va.eu-west-1.landing.ai/v1/ade/parse
- The file can be a PDF (50 pages max) or an image (50MB)
- 'Get your API key here: https://va.landing.ai/settings/api-key'
- The Playground is not intended for production use. It has certain limitations and
  is best suited for small-scale testing and exploration.
- Uses API Key for authentication.
- Uses API Key for authentication
- Configurable through connectors for various sources.
- Deprecated chunk types should be updated in the code to use the new types.
- Markdown representation of the document is provided in the response.
- Chunking improves retrieval granularity and maintains human readability.
- Extracted data is returned in a hierarchical JSON format.
- Images are saved with a specific structure based on the timestamp and page number.
- Visualization shows bounding boxes around each extracted chunk
- Custom colors for different chunk types available
- Uses ParseConfig to group multiple parsing options.
- The parsing functions below were deprecated in v0.2.3 of the library.
- Deprecated functions will continue to work in later versions, but we recommend implementing
  the parse function instead.
- The parsing functions were deprecated in v0.2.3 of the library.
- Use parse function for document parsing.
- The parsing functions are deprecated in v0.2.3 of the library.
- Visual groundings can be saved to a directory.
- Field extraction costs 3 credits per page.
- For optimal performance, include no more than 30 properties in your extraction schema.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Use the parse_documents function for immediate processing.
- Use the parse_and_save_documents function for persistence and auditing.
- Requires API key for authentication.
- Schemas created in the Playground are saved to chat history.
- Confidence score feature is experimental and may not return accurate results.
- Data extracted from tables will have a null confidence score.
- Only JSON schema version 2020-12 is supported.
- The top-level element of the schema must be 'object'.
- Rate limits help ensure that the API stays fast and available for everyone.
- Rate limits prevent any single user or accidental spike in traffic from slowing
  things down for others.
- The library automatically handles the rate limit error or other intermittent HTTP
  errors with retries.
- The maximum parallelism allowed by the library is 100.
- Maximum parallelism allowed by the library is 100
- The maximum file size is 50MB.
- Doesnâ€™t support parsing password-protected PDFs.
- Extraction accuracy influenced by script type, image clarity, and formatting.
- API keys are deployment-specific. An API key created in the US will not work for
  the EU, and vice versa.
- Submit a support ticket by emailing support@landing.ai
- If you experience an issue, send an email to support@landing.ai
- Committed to protecting your data and maintaining the highest security standards.
- ZDR is applicable when parsing documents with the agentic-doc library and when calling
  the ADE API directly.
- Zero Data Retention (ZDR) option provides the highest level of data privacy and
  control for sensitive documents.
- Free trial includes 1000 credits.
- Uses credits for processing tasks
- The Explore plan does not have the concept of organizations or members.
- Invitations to members expire in 2 days.
- The Parse and Extract APIs are in beta.
- Do not use these APIs in production environments.
- The APIs are in beta and may not return accurate results.
- The Parse and Extract APIs are in beta and may not return accurate results.
- Please include invoice number INV-2025-0847 in the payment reference
- All bank charges to be borne by the sender
- Payment should be received within 3-5 business days
- Please send wire confirmation receipt to accounting@abcconsulting.com
- 'For any questions regarding this transfer, contact: +1 (555) 123-4567'
- Standard processing (3-5 business days acceptable)
- parses and extracts structured data from unstructured documents like PDFs and images.
- The app creates an X-Small warehouse called LANDING_DOC_EXTRACTION_APP.
- The app automatically updates when a new version is released.
- These processes require you to grant permission to run Cortex functions.
- Default app name is LANDINGAI_AGENTIC_DOCUMENT_EXTRACTION.
- Local Processing maintains zero data retention (ZDR).
- Local Processing can parse up to 20 pages per minute.
- Uses API key for authentication â€” ensure it's entered in Snowsight
- Cloud Processing uses your LandingAI account.
- If you want Zero Data Retention (ZDR) with Cloud Processing, you must first enable
  ZDR in your LandingAI account.
- Uses Python-compatible regular expressions for filtering files.
- To reduce credit usage, you can suspend the app when itâ€™s not in use.
- Grant the app access to run Cortex.
- This error may occur when you try to run Cloud Processing and the database for the
  Snowsight Worksheet doesnâ€™t match the database defined in your code. To resolve
  this issue, update the database to match the database that has the files you want
  to process.
- 'You might get an error similar to the following when you try to run Local Processing:
  Request failed for external function SNOWFLAKE_EXTRACT_DOC_STRUCTURE with remote
  service error: 500 ''{"message":"Internal Server Error"}''; requests batch-id: 01beadad-0206-5638-0065-4b070147f522:1:1:0:0;
  request batch size: 1 rows; request retries: 3; response time (last retry): 3.88708s.
  To resolve the issue, try these troubleshooting tips: Grant the app access to run
  Cortex. For more information, go to Grant Agentic Document Extraction Access to
  Cortex. Make sure the app is running.'
- 'You might get an error similar to the following when you try to run Local Processing
  on a list of documents in a table: 002003 (42S02): SQL compilation error: Object
  ''your_table'' does not exist or not authorized. This error may occur if the app
  does not have permissions to access the table. To grant the app access to the table,
  run the command below. Replace these placeholders with your information: your_db,
  your_schema, your_stage, and APP_NAME. GRANT SELECT ON TABLE your_db.your_schema.your_table
  TO APPLICATION APP_NAME.'
errors:
- 'Error: Missing Authorization Header'
- 'Error: User Not Found, Please Check Your API Key'
- 'Error: Illegal header value bâ€™Basic â€™'
- '200: Successful Response'
- '206: Partial Content'
- '422: Unprocessable Entity'
- 'No documents to parse: The error is raised if the provided file path does not exist.'
- 'ValueError: This error is raised if the file type is not supported or a URL is
  invalid.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or permissions'
- 'FileNotFoundError: This error is raised if the provided file path does not exist.'
- 'FileNotFoundError: Raised if the provided file path does not exist.'
- 'ValueError: Raised if the file type is not supported or a URL is invalid.'
- 'FileNotFoundError: Provided file path does not exist.'
- 'ValueError: File type is not supported or URL is invalid.'
- '401 Unauthorized: Recheck API key or its validity.'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Validate your request payload.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Only JSON schema version 2020-12 is supported. Invalid JSON Schema: â€˜unknown_typeâ€™
  is not valid under any of the given schemas'
- Top-level schema must be of type â€˜objectâ€™
- Schema depth exceeds 5 at PATH
- Type list definition at PATH cannot contain â€˜objectâ€™ or â€˜arrayâ€™. Please use â€˜anyOfâ€™
  instead.
- Keyword â€˜KEYâ€™ is not supported
- â€˜propertiesâ€™ must be defined for object at root
- â€˜itemsâ€™ must be defined for array at PATH
- 'Error: Only JSON schema version 2020-12 is supported. Invalid JSON Schema: â€˜unknown_typeâ€™
  is not valid under any of the given schemas'
- 'Error: Top-level schema must be of type â€˜objectâ€™'
- 'Error: Schema depth exceeds 5 at PATH'
- 'Error: Type list definition at PATH cannot contain â€˜objectâ€™ or â€˜arrayâ€™. Please
  use â€˜anyOfâ€™ instead.'
- 'Error: Keyword â€˜KEYâ€™ is not supported'
- 'Error: â€˜propertiesâ€™ must be defined for object at root'
- 'Error: â€˜itemsâ€™ must be defined for array at PATH'
- Contact us for higher rate limits.
- '400: Bad Request: Schema validation failed due to invalid extraction schema format'
- '401: Unauthorized: Missing or invalid API key'
- '402: Payment Required: Your account does not have enough credits to complete processing'
- '422: Unprocessable Entity: Input validation failed'
- '429: Too Many Requests: Rate limit exceeded'
- '500: Internal Server Error: Server error during processing'
- '503: Service Unavailable: Server is not available'
- '504: Gateway Timeout: Request processing exceeded the timeout limit'
- '200: Success: Request processed successfully and document analyzed'
- '206: Partial Content: Document processed but some pages failed or field extraction
  encountered errors'
- '408: Request Timeout'
- '429: Too Many Requests'
- '502: Bad Gateway'
- '503: Service Unavailable'
- '504: Gateway Timeout'
- 'HTTP-422: Failed to split PDF into pages. Ensure it is a valid PDF file. document
  closed or encrypted'
- '401 Unauthorized: Recheck API key or token expiration'
- There was an error initializing the configuration flow. Close the dialog and try
  again.
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests per minute.'
- 'INVALID_REQUEST: Check the format of your request payload.'
- '100351 (P0000): Request failed for external function SNOWFLAKE_EXTRACT_DOC_STRUCTURE
  with remote service error: 500'
- '002003 (42S02): SQL compilation error: Object ''your_table'' does not exist or
  not authorized.'
- 'Request failed for external function SNOWFLAKE_EXTRACT_DOC_STRUCTURE with remote
  service error: 500 ''{"message":"Internal Server Error"}''; requests batch-id: 01beadad-0206-5638-0065-4b070147f522:1:1:0:0;
  request batch size: 1 rows; request retries: 3; response time (last retry): 3.88708s'
auth_info:
  mentioned_objects: []
client:
  base_url: https://landing.ai
  auth:
    type: apikey
source_metadata: null
