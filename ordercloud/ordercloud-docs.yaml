resources:
- name: product_pricing
  endpoint:
    path: /v1/me/products/{productID}/sellers
    method: GET
- name: cart_calculate
  endpoint:
    path: /v1/cart/calculate
    method: POST
    data_selector: ''
    params: {}
- name: order_invitations
  endpoint:
    path: /v1/me/orderinvitations
    method: GET
    data_selector: ''
    params: {}
- name: order_invitation_by_id
  endpoint:
    path: /v1/me/orderinvitations/{invitationID}
    method: GET
    data_selector: ''
    params: {}
- name: create_order_invitation
  endpoint:
    path: /v1/me/orderinvitations
    method: POST
    data_selector: ''
    params: {}
- name: update_order_invitation
  endpoint:
    path: /v1/me/orderinvitations/{invitationID}
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_order_invitation
  endpoint:
    path: /v1/me/orderinvitations/{invitationID}
    method: DELETE
    data_selector: ''
    params: {}
- name: request_token
  endpoint:
    path: /v1/grouporders/{invitationID}/token
    method: POST
    data_selector: ''
    params: {}
- name: promotion
  endpoint:
    path: /v1/integrations/promotion
    method: GET
- name: promotion
  endpoint:
    path: /v1/integrations/promotion
    method: PUT
- name: promotion
  endpoint:
    path: /v1/integrations/promotion
    method: DELETE
- name: promotion
  endpoint:
    path: /v1/integrations/promotion
    method: PATCH
- name: eligible_promotions
  endpoint:
    path: /v1/orders/{direction}/{orderID}/eligiblepromotions
    method: GET
- name: refresh_promotions
  endpoint:
    path: /v1/orders/{direction}/{orderID}/refreshpromotions
    method: GET
- name: apply_promotions
  endpoint:
    path: /v1/orders/{direction}/{orderID}/applypromotions
    method: GET
- name: inventory
  endpoint:
    path: /v1/integrations/inventory
    method: GET
    data_selector: ''
    params: {}
- name: inventory_update
  endpoint:
    path: /v1/integrations/inventory
    method: PUT
    data_selector: ''
    params: {}
- name: inventory_delete
  endpoint:
    path: /v1/integrations/inventory
    method: DELETE
    data_selector: ''
    params: {}
- name: inventory_patch
  endpoint:
    path: /v1/integrations/inventory
    method: PATCH
    data_selector: ''
    params: {}
- name: inventory_records
  endpoint:
    path: /v1/products/{productID}/inventoryrecords
    method: GET
    data_selector: records
- name: inventory_record_details
  endpoint:
    path: /v1/products/{productID}/inventoryrecords/{inventoryRecordID}
    method: GET
    data_selector: records
- name: available_products
  endpoint:
    path: /v1/me/products
    method: GET
    data_selector: records
    params:
      InventoryRecords.AddressID: '{addressA}|{addressB}'
      InventoryRecords.QuantityAvailable: '>0'
- name: TrackingEvents
  endpoint:
    path: /integrations/TrackingEvents
    method: GET
    data_selector: records
- name: TrackingEventById
  endpoint:
    path: /integrations/TrackingEvents/{id}
    method: GET
    data_selector: record
- name: CreateTrackingEvent
  endpoint:
    path: /integrations/TrackingEvents
    method: POST
    data_selector: record
- name: UpdateTrackingEvent
  endpoint:
    path: /integrations/TrackingEvents/{id}
    method: PUT
    data_selector: record
- name: PatchTrackingEvent
  endpoint:
    path: /integrations/TrackingEvents/{id}
    method: PATCH
    data_selector: record
- name: DeleteTrackingEvent
  endpoint:
    path: /integrations/TrackingEvents/{id}
    method: DELETE
- name: AddToCart
  endpoint:
    path: /integration-events/AddToCart
    method: POST
    data_selector: Product
    params: {}
- name: Order Calculate
  endpoint:
    path: /order-checkout/integration
    method: POST
    data_selector: LineItemOverrides
    params: {}
- name: incrementor
  endpoint:
    path: /v1/incrementors
    method: POST
    data_selector: ''
    params: {}
- name: products
  endpoint:
    path: /v1/products
    method: POST
- name: generate_variants
  endpoint:
    path: /v1/products/{productID}/variants/generate
    method: POST
- name: product_collections
  endpoint:
    path: /v1/me/productcollections
    method: GET
    data_selector: records
- name: product_collection
  endpoint:
    path: /v1/me/productcollections/{productCollectionID}
    method: GET
    data_selector: records
- name: add_product_to_collection
  endpoint:
    path: /v1/me/productcollections/{productCollectionID}/{productID}
    method: PUT
    data_selector: records
- name: error_config
  endpoint:
    path: /integrations/errorconfig
    method: GET
- name: error_config_update
  endpoint:
    path: /integrations/errorconfig
    method: PUT
- name: error_config_delete
  endpoint:
    path: /integrations/errorconfig
    method: DELETE
- name: error_config_validate
  endpoint:
    path: /integrations/errorconfig/validate
    method: POST
- name: bundles
  endpoint:
    path: /v1/bundles
    method: POST
    data_selector: ''
- name: catalog_assignments
  endpoint:
    path: /v1/catalogs/bundleassignments
    method: POST
    data_selector: ''
- name: product_assignments
  endpoint:
    path: /v1/bundles/productassignments
    method: POST
    data_selector: ''
- name: assignments
  endpoint:
    path: /v1/bundles/assignments
    method: POST
    data_selector: ''
- name: cart
  endpoint:
    path: /v1/cart
    method: GET
    data_selector: Cart
    params: {}
- name: cart_lineitems
  endpoint:
    path: /v1/cart/lineitems
    method: POST
    data_selector: LineItem
    params: {}
- name: cart_payments
  endpoint:
    path: /v1/cart/payments
    method: POST
    data_selector: Payment
    params: {}
- name: cart_submit
  endpoint:
    path: /v1/cart/submit
    method: POST
    data_selector: Submit
    params: {}
- name: promotions
  endpoint:
    path: /v1/me/promotions
    method: GET
    data_selector: promotions
    params: {}
- name: OrderReturns
  endpoint:
    path: /knowledge-base/product-returns-refunds-credits
    method: GET
    data_selector: records
    params: {}
- name: Integration Event
  endpoint:
    path: /integration-events
    method: GET
    data_selector: records
- name: order_calculate
  endpoint:
    path: /v1/orders/{direction}/{orderID}/calculate
    method: POST
- name: order_submit
  endpoint:
    path: /v1/orders/{direction}/{orderID}/submit
    method: POST
- name: order_submit_for_approval
  endpoint:
    path: /v1/orders/{direction}/{orderID}/submit
    method: POST
- name: order_approve
  endpoint:
    path: /v1/orders/{direction}/{orderID}/approve
    method: POST
- name: shipping_rates
  endpoint:
    path: /v1/orders/{direction}/{orderID}/estimateshipping
    method: POST
- name: order_worksheet
  endpoint:
    path: /v1/orders/{direction}/{orderID}/worksheet
    method: GET
- name: PriceSchedule
  endpoint:
    path: /v1/priceschedules/enterprise-priceschedule-id
    method: GET
    data_selector: PriceSchedule
    params: {}
- name: PriceSchedule
  endpoint:
    path: /v1/priceschedules/startup-priceschedule-id
    method: GET
    data_selector: PriceSchedule
    params: {}
- name: price_schedules
  endpoint:
    path: /v1/priceschedules
    method: POST
    data_selector: ''
    params: {}
- name: product_assignments
  endpoint:
    path: /v1/products/assignments
    method: POST
    data_selector: ''
    params: {}
- name: product_details
  endpoint:
    path: /v1/me/products/usb-product-id
    method: GET
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /v1/orders/all
    method: GET
- name: suppliers_buyers
  endpoint:
    path: /v1/suppliers/{supplierID}/buyers
    method: GET
- name: sellers
  endpoint:
    path: /v1/me/sellers
    method: GET
- name: products
  endpoint:
    path: /v1/me/products
    method: GET
- name: product
  endpoint:
    path: /v1/me/product/{productID}
    method: GET
- name: product_assignment
  endpoint:
    path: /v1/products/assignments
    method: POST
- name: update_product_supplier
  endpoint:
    path: /v1/products/{productID}/suppliers/{supplierID}
    method: PUT
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: records
- name: me_products
  endpoint:
    path: /v1/me/products
    method: GET
    data_selector: records
- name: api_clients
  endpoint:
    path: /apiclients
    method: GET
    data_selector: records
- name: security_profiles
  endpoint:
    path: /securityprofiles
    method: GET
    data_selector: records
- name: admin_users
  endpoint:
    path: /adminusers
    method: GET
    data_selector: records
- name: admin_user_groups
  endpoint:
    path: /usergroups
    method: GET
    data_selector: records
- name: admin_addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: incrementors
  endpoint:
    path: /incrementors
    method: GET
    data_selector: records
- name: locales
  endpoint:
    path: /locales
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: records
- name: xp_indices
  endpoint:
    path: /xpindices
    method: GET
    data_selector: records
- name: buyers
  endpoint:
    path: /buyers
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /buyers/{buyerID}/users
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /buyers/{buyerID}/usergroups
    method: GET
    data_selector: records
- name: addresses
  endpoint:
    path: /buyers/{buyerID}/addresses
    method: GET
    data_selector: records
- name: cost_centers
  endpoint:
    path: /buyers/{buyerID}/costcenters
    method: GET
    data_selector: records
- name: credit_cards
  endpoint:
    path: /buyers/{buyerID}/creditcards
    method: GET
    data_selector: records
- name: spending_accounts
  endpoint:
    path: /buyers/{buyerID}/spendingaccounts
    method: GET
    data_selector: records
- name: approval_rules
  endpoint:
    path: /buyers/{buyerID}/approvalrules
    method: GET
    data_selector: records
- name: product_collections
  endpoint:
    path: /buyers/{buyerID}/productcollections
    method: GET
    data_selector: records
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: records
- name: supplier_users
  endpoint:
    path: /suppliers/{supplierID}/users
    method: GET
    data_selector: records
- name: supplier_user_groups
  endpoint:
    path: /suppliers/{supplierID}/usergroups
    method: GET
- name: supplier_addresses
  endpoint:
    path: /suppliers/{supplierID}/addresses
    method: GET
- name: product_catalogs
  endpoint:
    path: /productcatalogs
    method: GET
- name: catalogs
  endpoint:
    path: /catalogs
    method: GET
- name: categories
  endpoint:
    path: /catalogs/{catalogID}/categories
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: price_schedules
  endpoint:
    path: /priceschedules
    method: GET
- name: specs
  endpoint:
    path: /specs
    method: GET
- name: product_facets
  endpoint:
    path: /productfacets
    method: GET
- name: inventory_records
  endpoint:
    path: /products/{productID}/inventoryrecords
    method: GET
- name: bundles
  endpoint:
    path: /bundles
    method: GET
- name: orders
  endpoint:
    path: /orders/{direction}
    method: GET
- name: cart
  endpoint:
    path: /cart
    method: GET
- name: line_items
  endpoint:
    path: /lineitems/{direction}
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: payments
  endpoint:
    path: /orders/{direction}/{orderID}/payments
    method: POST
- name: shipments
  endpoint:
    path: /shipments
    method: GET
- name: order_returns
  endpoint:
    path: /orderreturns
    method: GET
- name: seller_approval_rules
  endpoint:
    path: /approvalrules
    method: GET
- name: bundle_line_items
  endpoint:
    path: /orders/{direction}/{orderID}/bundles/{bundleID}
    method: POST
- name: bundle_subscription_items
  endpoint:
    path: /subscriptions/{subscriptionID}/bundles/{bundleID}
    method: POST
- name: group_orders
  endpoint:
    path: /grouporders/{invitationID}/token
    method: POST
- name: subscription_items
  endpoint:
    path: /subscriptions/{subscriptionID}/items
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: me
  endpoint:
    path: /me
    method: GET
- name: me_addresses
  endpoint:
    path: /me/addresses
    method: GET
- name: me_catalogs
  endpoint:
    path: /me/catalogs
    method: GET
- name: me_categories
  endpoint:
    path: /me/categories
    method: GET
- name: me_cost_centers
  endpoint:
    path: /me/costcenters
    method: GET
- name: me_credit_cards
  endpoint:
    path: /me/creditcards
    method: GET
- name: me_orders
  endpoint:
    path: /me/orders
    method: GET
- name: me_product_collections
  endpoint:
    path: /me/productcollections
    method: GET
- name: me_products
  endpoint:
    path: /me/products
    method: GET
- name: me_promotions
  endpoint:
    path: /me/promotions
    method: GET
- name: sellers
  endpoint:
    path: /me/sellers
    method: GET
- name: shipments
  endpoint:
    path: /me/shipments
    method: GET
- name: spending_accounts
  endpoint:
    path: /me/spendingAccounts
    method: GET
- name: subscriptions
  endpoint:
    path: /me/subscriptions
    method: GET
- name: user_groups
  endpoint:
    path: /me/usergroups
    method: GET
- name: tracking_events
  endpoint:
    path: /integrations/trackingEvents
    method: GET
- name: delivery_configurations
  endpoint:
    path: /integrations/deliveryconfig
    method: GET
- name: entity_synchronization
  endpoint:
    path: /integrations/entitysync/adminusers
    method: GET
- name: error_configs
  endpoint:
    path: /integrations/ErrorConfig
    method: GET
- name: integration_events
  endpoint:
    path: /integrationEvents
    method: GET
- name: inventory
  endpoint:
    path: /integrations/inventory
    method: GET
- name: message_senders
  endpoint:
    path: /messagesenders
    method: GET
- name: order_synchronization
  endpoint:
    path: /integrations/OrderSync
    method: GET
- name: product_synchronization
  endpoint:
    path: /integrations/productsync
    method: GET
- name: promotion
  endpoint:
    path: /integrations/promotion
    method: GET
- name: subscription
  endpoint:
    path: /integrations/subscription
    method: GET
- name: api_clients
  endpoint:
    path: /apiclients
    method: GET
- name: security_profiles
  endpoint:
    path: /securityprofiles
    method: GET
- name: admin_users
  endpoint:
    path: /adminusers
    method: GET
- name: admin_user_groups
  endpoint:
    path: /usergroups
    method: GET
- name: admin_addresses
  endpoint:
    path: /addresses
    method: GET
- name: incrementors
  endpoint:
    path: /incrementors
    method: GET
    data_selector: records
- name: locales
  endpoint:
    path: /locales
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: records
- name: xp_indices
  endpoint:
    path: /xpindices
    method: GET
    data_selector: records
- name: buyers
  endpoint:
    path: /buyers
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /buyers/{buyerID}/users
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /buyers/{buyerID}/usergroups
    method: GET
    data_selector: records
- name: addresses
  endpoint:
    path: /buyers/{buyerID}/addresses
    method: GET
    data_selector: records
- name: cost_centers
  endpoint:
    path: /buyers/{buyerID}/costcenters
    method: GET
    data_selector: records
- name: credit_cards
  endpoint:
    path: /buyers/{buyerID}/creditcards
    method: GET
    data_selector: records
- name: spending_accounts
  endpoint:
    path: /buyers/{buyerID}/spendingaccounts
    method: GET
    data_selector: records
- name: approval_rules
  endpoint:
    path: /buyers/{buyerID}/approvalrules
    method: GET
    data_selector: records
- name: product_collections
  endpoint:
    path: /buyers/{buyerID}/productcollections
    method: GET
    data_selector: records
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: records
- name: supplier_users
  endpoint:
    path: /suppliers/{supplierID}/users
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /suppliers/{supplierID}/usergroups
    method: GET
    data_selector: records
- name: supplier_addresses
  endpoint:
    path: /suppliers/{supplierID}/addresses
    method: GET
    data_selector: records
- name: product_catalogs
  endpoint:
    path: /catalogs
    method: GET
    data_selector: records
- name: categories
  endpoint:
    path: /catalogs/{catalogID}/categories
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: price_schedules
  endpoint:
    path: /priceschedules
    method: GET
    data_selector: records
- name: specs
  endpoint:
    path: /specs
    method: GET
    data_selector: records
- name: product_facets
  endpoint:
    path: /productfacets
    method: GET
    data_selector: records
- name: inventory_records
  endpoint:
    path: /products/{productID}/inventoryrecords
    method: GET
    data_selector: records
- name: bundles
  endpoint:
    path: /bundles
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders/{direction}
    method: GET
    data_selector: records
- name: cart
  endpoint:
    path: /cart
    method: GET
    data_selector: records
- name: line_items
  endpoint:
    path: /lineitems/{direction}
    method: GET
    data_selector: records
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /orders/{direction}/{orderID}/payments
    method: GET
- name: shipments
  endpoint:
    path: /shipments
    method: GET
- name: order_returns
  endpoint:
    path: /orderreturns
    method: GET
- name: seller_approval_rules
  endpoint:
    path: /approvalrules
    method: GET
- name: bundle_line_items
  endpoint:
    path: /orders/{direction}/{orderID}/bundles/{bundleID}
    method: POST
- name: bundle_subscription_items
  endpoint:
    path: /subscriptions/{subscriptionID}/bundles/{bundleID}
    method: POST
- name: group_orders
  endpoint:
    path: /grouporders/{invitationID}/token
    method: POST
- name: subscription_items
  endpoint:
    path: /subscriptions/{subscriptionID}/items
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: me
  endpoint:
    path: /me
    method: GET
- name: addresses
  endpoint:
    path: /me/addresses
    method: GET
- name: catalogs
  endpoint:
    path: /me/catalogs
    method: GET
- name: categories
  endpoint:
    path: /me/categories
    method: GET
- name: cost_centers
  endpoint:
    path: /me/costcenters
    method: GET
- name: credit_cards
  endpoint:
    path: /me/creditcards
    method: GET
- name: orders
  endpoint:
    path: /me/orders
    method: GET
- name: product_collections
  endpoint:
    path: /me/productcollections
    method: GET
- name: products
  endpoint:
    path: /me/products
    method: GET
- name: promotions
  endpoint:
    path: /me/promotions
    method: GET
- name: sellers
  endpoint:
    path: /me/sellers
    method: GET
- name: shipments
  endpoint:
    path: /me/shipments
    method: GET
- name: spending_accounts
  endpoint:
    path: /me/spendingAccounts
    method: GET
- name: subscriptions
  endpoint:
    path: /me/subscriptions
    method: GET
- name: user_groups
  endpoint:
    path: /me/usergroups
    method: GET
- name: tracking_events
  endpoint:
    path: /integrations/trackingEvents
    method: GET
- name: delivery_configurations
  endpoint:
    path: /integrations/deliveryconfig
    method: GET
- name: entity_synchronization
  endpoint:
    path: /integrations/entitysync/adminusers
    method: GET
- name: error_configs
  endpoint:
    path: /integrations/ErrorConfig
    method: GET
- name: integration_events
  endpoint:
    path: /integrationEvents
    method: GET
- name: inventory
  endpoint:
    path: /integrations/inventory
    method: GET
- name: message_senders
  endpoint:
    path: /messagesenders
    method: GET
- name: order_sync
  endpoint:
    path: /integrations/OrderSync
    method: GET
- name: product_sync
  endpoint:
    path: /integrations/productsync
    method: GET
- name: promotion
  endpoint:
    path: /integrations/promotion
    method: GET
- name: subscription
  endpoint:
    path: /integrations/subscription
    method: GET
- name: api_clients
  endpoint:
    path: /apiclients
    method: GET
- name: security_profiles
  endpoint:
    path: /securityprofiles
    method: GET
- name: admin_users
  endpoint:
    path: /adminusers
    method: GET
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: incrementors
  endpoint:
    path: /incrementors
    method: GET
    data_selector: records
- name: locales
  endpoint:
    path: /locales
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: records
- name: xp_indices
  endpoint:
    path: /xpindices
    method: GET
    data_selector: records
- name: buyers
  endpoint:
    path: /buyers
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /buyers/{buyerID}/users
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /buyers/{buyerID}/usergroups
    method: GET
    data_selector: records
- name: addresses
  endpoint:
    path: /buyers/{buyerID}/addresses
    method: GET
    data_selector: records
- name: cost_centers
  endpoint:
    path: /buyers/{buyerID}/costcenters
    method: GET
    data_selector: records
- name: credit_cards
  endpoint:
    path: /buyers/{buyerID}/creditcards
    method: GET
    data_selector: records
- name: spending_accounts
  endpoint:
    path: /buyers/{buyerID}/spendingaccounts
    method: GET
    data_selector: records
- name: approval_rules
  endpoint:
    path: /buyers/{buyerID}/approvalrules
    method: GET
    data_selector: records
- name: product_collections
  endpoint:
    path: /buyers/{buyerID}/productcollections
    method: GET
    data_selector: records
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: records
- name: supplier_users
  endpoint:
    path: /suppliers/{supplierID}/users
    method: GET
    data_selector: records
- name: supplier_user_groups
  endpoint:
    path: /suppliers/{supplierID}/usergroups
    method: get
    data_selector: records
- name: supplier_addresses
  endpoint:
    path: /suppliers/{supplierID}/addresses
    method: get
    data_selector: records
- name: product_catalogs
  endpoint:
    path: /productcatalogs
    method: get
    data_selector: records
- name: categories
  endpoint:
    path: /catalogs/{catalogID}/categories
    method: get
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: get
    data_selector: records
- name: price_schedules
  endpoint:
    path: /priceschedules
    method: get
    data_selector: records
- name: specs
  endpoint:
    path: /specs
    method: get
    data_selector: records
- name: product_facets
  endpoint:
    path: /productfacets
    method: get
    data_selector: records
- name: inventory_records
  endpoint:
    path: /products/{productID}/inventoryrecords
    method: get
    data_selector: records
- name: bundles
  endpoint:
    path: /bundles
    method: get
    data_selector: records
- name: orders
  endpoint:
    path: /orders/{direction}
    method: get
    data_selector: records
- name: cart
  endpoint:
    path: /cart
    method: get
    data_selector: records
- name: line_items
  endpoint:
    path: /lineitems/{direction}
    method: get
    data_selector: records
- name: promotions
  endpoint:
    path: /promotions
    method: get
    data_selector: records
- name: payments
  endpoint:
    path: /orders/{direction}/{orderID}/payments
    method: POST
    data_selector: payments
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: GET
    data_selector: shipments
    params: {}
- name: order_returns
  endpoint:
    path: /orderreturns
    method: GET
    data_selector: order_returns
    params: {}
- name: seller_approval_rules
  endpoint:
    path: /approvalrules
    method: GET
    data_selector: approval_rules
    params: {}
- name: bundle_line_items
  endpoint:
    path: /orders/{direction}/{orderID}/bundles/{bundleID}
    method: POST
    data_selector: bundle_line_items
    params: {}
- name: bundle_subscription_items
  endpoint:
    path: /subscriptions/{subscriptionID}/bundles/{bundleID}
    method: POST
    data_selector: bundle_subscription_items
    params: {}
- name: group_orders
  endpoint:
    path: /grouporders/{invitationID}/token
    method: POST
    data_selector: group_orders
    params: {}
- name: subscription_items
  endpoint:
    path: /subscriptions/{subscriptionID}/items
    method: GET
    data_selector: subscription_items
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: me
  endpoint:
    path: /me
    method: GET
    data_selector: me
    params: {}
- name: addresses
  endpoint:
    path: /me/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: catalogs
  endpoint:
    path: /me/catalogs
    method: GET
    data_selector: catalogs
    params: {}
- name: categories
  endpoint:
    path: /me/categories
    method: GET
    data_selector: categories
    params: {}
- name: cost_centers
  endpoint:
    path: /me/costcenters
    method: GET
    data_selector: cost_centers
    params: {}
- name: credit_cards
  endpoint:
    path: /me/creditcards
    method: GET
    data_selector: credit_cards
    params: {}
- name: orders
  endpoint:
    path: /me/orders
    method: GET
    data_selector: orders
    params: {}
- name: product_collections
  endpoint:
    path: /me/productcollections
    method: GET
    data_selector: product_collections
    params: {}
- name: products
  endpoint:
    path: /me/products
    method: GET
    data_selector: products
    params: {}
- name: promotions
  endpoint:
    path: /me/promotions
    method: GET
    data_selector: promotions
    params: {}
- name: sellers
  endpoint:
    path: /me/sellers
    method: GET
- name: shipments
  endpoint:
    path: /me/shipments
    method: GET
- name: spending_accounts
  endpoint:
    path: /me/spendingAccounts
    method: GET
- name: subscriptions
  endpoint:
    path: /me/subscriptions
    method: GET
- name: user_groups
  endpoint:
    path: /me/usergroups
    method: GET
- name: tracking_events
  endpoint:
    path: /integrations/trackingEvents
    method: GET
- name: delivery_configurations
  endpoint:
    path: /integrations/deliveryconfig
    method: GET
- name: entity_synchronization
  endpoint:
    path: /integrations/entitysync/adminusers
    method: GET
- name: error_configs
  endpoint:
    path: /integrations/ErrorConfig
    method: GET
- name: integration_events
  endpoint:
    path: /integrationEvents
    method: GET
- name: inventory
  endpoint:
    path: /integrations/inventory
    method: GET
- name: message_senders
  endpoint:
    path: /messagesenders
    method: GET
- name: order_synchronization
  endpoint:
    path: /integrations/OrderSync
    method: GET
- name: product_synchronization
  endpoint:
    path: /integrations/productsync
    method: GET
- name: promotion
  endpoint:
    path: /integrations/promotion
    method: GET
- name: subscription
  endpoint:
    path: /integrations/subscription
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- As of February 20, 2025, release notes have moved to developers.sitecore.com/changelog/ordercloud.
- Add `POST v1/cart/calculate` endpoint
- New optional parameter, `adjustListOrders`, on Category `POST`, `PUT`, and `PATCH`
- Delete operations cannot be paused and will be synced immediately.
- Feature is only available to current Sitecore customers.
- Automated data seeding for OrderCloud marketplace
- Requires setup of API Client, Admin User, and Security Profile
- We do our best to avoid hard limits in the API when we can, but we make exceptions
  in a few cases in order to deliver the best performance possible to our customers.
- Staying under a few hundred LineItems per Order would be a good rule of thumb.
- Uses XP as a mechanism for adding properties to an object.
- XP is not optimized for full-text or natural language search.
- Ad-Hoc products are supported on Subscriptions.
- 'Unique Incrementors for Different Endpoints: It is recommended to use unique incrementors
  for each resource type (e.g., orders, products) to avoid sharing the sequence across
  different endpoints.'
- 'Handle Asynchronous API Calls Carefully: Proper management of asynchronous API
  calls is crucial to prevent accidental duplicate ID generation.'
- 'Avoid Resetting LastNumber Property: Refrain from resetting the LastNumber property
  of an incrementor, doing so will result in 409 ID conflicts.'
- Bundles are returned in product lists.
- Cart always represents an unsubmitted Order, any action taken on the Cart is a proxy
  to take action on the corresponding order.
- Cart endpoints will not return null or 404.
- Managing the spending accounts is a business operation decided by the implementation
  partner.
- Another highly recommended practice is to use a pre-webhook call on the Payment
  endpoint to validate the balance as a secondary check.
- Webhooks can only be triggered by OrderCloud endpoints that write to the database
  (POST, PUT, PATCH, DELETE).
- Both EligibleExpression and ValueExpression are limited to 400 characters each.
- 'Rebuilds can only be triggered from the Portal and are limited to: 3 rebuilds per
  hour and 5 rebuilds per week for Production and Staging environments; 10 rebuilds
  per hour and 30 rebuilds per week for Sandbox environments.'
- Only marketplace administrators have the option to rebuild an index.
- Users must enter card details into an Iframe provided by the processor, who will
  forward the merchant a card token or ID representing the full card data.
- At this time, the PriceSchedule.IsOnSale property is not searchable or filterable
  as it is a calculated value.
- The Client ID and especially the Client Secret should be private.
- Testing is critical as the fields from the IDP will not be validated until a user
  attempts to log in.
- OrderCloud implements OAuth2 combined with our own notion of roles to control user
  authentication and authorization at fine-grain level.
errors:
- '400: Misconfigured integration event'
- '404: Product not found'
- '409 ID conflicts: Occurs if there are accidental duplicate ID generation or if
  LastNumber property is reset.'
- '404: Order Not Found if a designated Order does not exist.'
- '400: Bad Request if required fields are missing.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '200: Successful response'
- '401 Unauthorized: Missing or invalid access token'
- 'Auth.InvalidUsernameOrPassword: Bad username or password was provided'
- 'Auth.UsernameAndPasswordRequired: Either the username or password was missing'
- 'Auth.PasswordExpired: Based on the security profile, the password is expired'
- 'Auth.InsecurePassword: Password no longer meets requirements, and will need to
  be changed'
- 'Auth.InsufficientRole: One or more of the roles requested is not allowed for this
  user'
- 'Auth.SellerNotActive: The MPO is inactive not accessible to login'
- 'Auth.UserNotActive: User is not active, need to complete setup to activate'
- 'Auth.LockedOut: User is locked out due to exceeding the max attempts'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://portal.ordercloud.io
  auth:
    type: oauth2
source_metadata: null
