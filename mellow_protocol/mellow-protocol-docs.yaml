resources:
- name: vaults
  endpoint:
    path: /v1/vaults
    method: GET
- name: defi_protocols
  endpoint:
    path: /v1/defi/protocols
    method: GET
- name: user_vaults
  endpoint:
    path: /v1/users/{user_address}
    method: GET
- name: user_defi_positions
  endpoint:
    path: /v1/defi/users/{user_address}
    method: GET
- name: vaults
  endpoint:
    path: /v1/vaults
    method: GET
- name: defi_protocols
  endpoint:
    path: /v1/defi/protocols
    method: GET
- name: user_vaults
  endpoint:
    path: /v1/users/{user_address}
    method: GET
- name: user_defi_positions
  endpoint:
    path: /v1/defi/users/{user_address}
    method: GET
- name: vaults
  endpoint:
    path: /v1/vaults
    method: GET
    data_selector: object[]
- name: defi_protocols
  endpoint:
    path: /v1/defi/protocols
    method: GET
    data_selector: object[]
- name: vaults
  endpoint:
    path: /v1/vaults
    method: GET
    data_selector: '[]'
- name: defi_protocols
  endpoint:
    path: /v1/defi/protocols
    method: GET
    data_selector: '[]'
- name: user_vaults_positions
  endpoint:
    path: /v1/users/{user_address}
    method: GET
    data_selector: object[]
    params: {}
- name: user_defi_positions
  endpoint:
    path: /v1/defi/users/{user_address}
    method: GET
    data_selector: object[]
    params: {}
- name: user_vaults_positions
  endpoint:
    path: /v1/users/{user_address}
    method: GET
    data_selector: response
    params: {}
- name: user_defi_positions
  endpoint:
    path: /v1/defi/users/{user_address}
    method: GET
    data_selector: response
    params: {}
- name: withdrawal
  endpoint:
    path: /withdrawal
    method: GET
    data_selector: records
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: core_vaults
  endpoint:
    path: /api/v1/core_vaults
    method: GET
    data_selector: vaults
    params: {}
- name: MellowACL
  endpoint:
    path: /core-vaults/architecture/permissions/mellowacl
    method: GET
- name: Verifier
  endpoint:
    path: /core-vaults/architecture/permissions/verifier
    method: GET
- name: BitmaskVerifier
  endpoint:
    path: /core-vaults/architecture/permissions/bitmaskverifier
    method: GET
- name: Consensus
  endpoint:
    path: /core-vaults/architecture/permissions/consensus
    method: GET
- name: DepositQueue
  endpoint:
    path: /depositQueue
    method: POST
    data_selector: depositRecords
- name: RedeemQueue
  endpoint:
    path: /redeemQueue
    method: POST
    data_selector: redeemRecords
- name: Oracle
  endpoint:
    path: /oracle
    method: GET
    data_selector: priceReports
- name: Oracle
  endpoint:
    path: /api/oracle
    method: POST
    data_selector: reports
    params: {}
- name: DepositQueue
  endpoint:
    path: /core-vaults/architecture/queues/depositqueue
- name: RedeemQueue
  endpoint:
    path: /core-vaults/architecture/queues/redeemqueue
- name: SignatureQueue
  endpoint:
    path: /core-vaults/architecture/queues/signaturequeue
- name: SignatureDepositQueue
  endpoint:
    path: /core-vaults/architecture/queues/signaturedepositqueue
- name: SignatureRedeemQueue
  endpoint:
    path: /core-vaults/architecture/queues/signatureredeemqueue
- name: Factory
  endpoint:
    path: /api/factory
    method: POST
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: FeeManager
  endpoint:
    path: /managers/feemanager
    method: GET
- name: RiskManager
  endpoint:
    path: /managers/riskmanager
    method: GET
- name: ShareManager
  endpoint:
    path: /managers/sharemanager
    method: GET
- name: BasicShareManager
  endpoint:
    path: /managers/basicsharemanager
    method: GET
- name: TokenizedShareManager
  endpoint:
    path: /managers/tokenizedsharemanager
    method: GET
- name: oracle
  endpoint:
    path: /oracle/report
    method: POST
    data_selector: reports
    params: {}
- name: Queue
  endpoint:
    path: /core-vaults/architecture/queues/queue
    method: GET
- name: DepositQueue
  endpoint:
    path: /core-vaults/architecture/queues/depositqueue
    method: GET
- name: RedeemQueue
  endpoint:
    path: /core-vaults/architecture/queues/redeemqueue
    method: GET
- name: SignatureQueue
  endpoint:
    path: /core-vaults/architecture/queues/signaturequeue
    method: GET
- name: SignatureDepositQueue
  endpoint:
    path: /core-vaults/architecture/queues/signaturedepositqueue
    method: GET
- name: SignatureRedeemQueue
  endpoint:
    path: /core-vaults/architecture/queues/signatureredeemqueue
    method: GET
- name: MellowSymbioticVault
  endpoint:
    path: /mellow/symbiotic-vault
    method: GET
    data_selector: vaults
    params: {}
- name: WithdrawalQueue
  endpoint:
    path: /mellow/withdrawal-queue
    method: GET
    data_selector: queues
    params: {}
- name: Factory
  endpoint:
    path: /api/factory
    method: GET
    data_selector: entities
    params: {}
- name: BasicRedeemHook
  endpoint:
    path: /core-vaults/architecture/hooks/basicredeemhook
    method: GET
- name: LidoDepositHook
  endpoint:
    path: /core-vaults/architecture/hooks/lidodeposithook
    method: GET
- name: RedirectingDepositHook
  endpoint:
    path: /core-vaults/architecture/hooks/redirectingdeposithook
    method: GET
- name: Bedrock Restaked uniBTC
  endpoint:
    path: /0x08F39b3d75712148dacDB2669C3EAcc7F1152547
    method: GET
    data_selector: records
    params: {}
- name: Re7 Labs Restaked tBTC
  endpoint:
    path: /0x3a828C183b3F382d030136C824844Ea30145b4c7
    method: GET
    data_selector: records
    params: {}
- name: Amphor Restaked BTC
  endpoint:
    path: /0x64047dD3288276d70A4F8B5Df54668c8403f877F
    method: GET
    data_selector: records
    params: {}
- name: Re7 Labs Restaked wBTC
  endpoint:
    path: /0x7F43fDe12A40dE708d908Fb3b9BFB8540d9Ce444
    method: GET
    data_selector: records
    params: {}
- name: Staked iBTC
  endpoint:
    path: /0xE4357bDAE017726eE5E83Db3443bcd269BbF125d
    method: GET
    data_selector: records
    params: {}
- name: Marlin POND LRT
  endpoint:
    path: /0x4d12fA40e9608298be8F62Bd3627C152d8566B49
    method: GET
    data_selector: records
    params: {}
- name: FeeManager
  endpoint:
    path: /core-vaults/architecture/managers/feemanager
    method: GET
- name: RiskManager
  endpoint:
    path: /core-vaults/architecture/managers/riskmanager
    method: GET
- name: ShareManager
  endpoint:
    path: /core-vaults/architecture/managers/sharemanager
    method: GET
- name: BasicShareManager
  endpoint:
    path: /core-vaults/architecture/managers/basicsharemanager
    method: GET
- name: TokenizedShareManager
  endpoint:
    path: /core-vaults/architecture/managers/tokenizedsharemanager
    method: GET
- name: SymbioticAdapter
  endpoint:
    path: /symbiotic/adapter
    method: GET
    data_selector: data
    params: {}
- name: EigenLayerAdapter
  endpoint:
    path: /eigenlayer/adapter
    method: GET
    data_selector: data
    params: {}
- name: EigenLayerWstETHAdapter
  endpoint:
    path: /eigenlayer/wsteth/adapter
    method: GET
    data_selector: data
    params: {}
- name: DefaultCollateral
  endpoint:
    path: /default/collateral
    method: GET
    data_selector: data
    params: {}
- name: IsolatedEigenLayerVault
  endpoint:
    path: /isolated/eigenlayer/vault
    method: GET
    data_selector: data
    params: {}
- name: IsolatedEigenLayerWstETHVault
  endpoint:
    path: /isolated/eigenlayer/wsteth/vault
    method: GET
    data_selector: data
    params: {}
- name: Factory implementation
  endpoint:
    path: /0x0000000397b71C8f3182Fd40D247330D218fdC72
    method: GET
    data_selector: records
- name: Consensus implementation
  endpoint:
    path: /0x0000000167598d2C78E2313fD5328E16bD9A0b13
    method: GET
    data_selector: records
- name: DepositQueue implementation
  endpoint:
    path: /0x00000006dA9f179BFE250Dd1c51cD2d3581930c8
    method: GET
    data_selector: records
- name: FeeManager implementation
  endpoint:
    path: /0x0000000dE74e5D51651326E0A3e1ACA94bEAF6E1
    method: GET
    data_selector: records
- name: Oracle implementation
  endpoint:
    path: /0x0000000F0d3D1c31b72368366A4049C05E291D58
    method: GET
    data_selector: records
- name: ShareManager implementation
  endpoint:
    path: /0xcd3c0F51798D1daA92Fb192E57844Ae6cEE8a6c7
    method: GET
    data_selector: records
- name: RiskManager implementation
  endpoint:
    path: /0x4f6bc03537C6F74E250f57a9a7238087caBF1c6D
    method: GET
    data_selector: records
- name: WhitelistedEthWrapper
  endpoint:
    path: /multi-deployments/whitelistedethwrapper
    method: GET
- name: RatiosStrategy
  endpoint:
    path: /multi-deployments/ratiosstrategy
    method: GET
- name: MultiVault implementation
  endpoint:
    path: /multi-deployments/multivault
    method: GET
- name: Claimer
  endpoint:
    path: /multi-deployments/claimer
    method: GET
- name: Rewards multisig
  endpoint:
    path: /multi-deployments/rewards-multisig
    method: GET
- name: vault
  endpoint:
    path: /mellow-lrt/vault
    method: GET
    data_selector: records
    params: {}
- name: Encapsulate Vault
  endpoint:
    path: /vaults/encapETH
    method: GET
    data_selector: vaults
    params: {}
- name: Fungl
  endpoint:
    path: /vaults/FNGL
    method: GET
    data_selector: vaults
    params: {}
- name: MEV Capital Lidov3 stVault x Kiln
  endpoint:
    path: /vaults/mevkstETH
    method: GET
    data_selector: vaults
    params: {}
- name: XHash Dual-Yield Restake Vault
  endpoint:
    path: /vaults/xstETH
    method: GET
    data_selector: vaults
    params: {}
- name: A41 Vault
  endpoint:
    path: /vaults/a41ETH
    method: GET
    data_selector: vaults
    params: {}
- name: MEV Capital Lidov3 stVault x Alchemy
  endpoint:
    path: /vaults/ALstETH
    method: GET
    data_selector: vaults
    params: {}
- name: Re7 LidoV3 x Luganodes
  endpoint:
    path: /vaults/re7lugeth
    method: GET
    data_selector: vaults
    params: {}
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: Nodes.Guru Vault
  endpoint:
    path: /nodes.guru.vault
    method: GET
- name: HashKey Cloud Restaked ETH
  endpoint:
    path: /hashkey.cloud.restaked.eth
    method: GET
- name: Re7 LidoV3 x Stakin
  endpoint:
    path: /re7.lido.v3.x.stakin
    method: GET
- name: Simply Staking Lido v3 Pre-Deposit Vault x Steakhouse
  endpoint:
    path: /simply.staking.lido.v3.pre.deposit.vault.x.steakhouse
    method: GET
- name: Flow Traders Restaking Vault
  endpoint:
    path: /flow.traders.restaking.vault
    method: GET
- name: ProviVault
  endpoint:
    path: /provi.vault
    method: GET
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: 01node Vault
  endpoint:
    path: /0x3E9582c2Cc32feb56d4338cfba09a24980089199
    method: GET
    data_selector: records
    params: {}
- name: DSRV Vault
  endpoint:
    path: /0xF575F1C3DAd6B47f2045015baE313cA885921C8B
    method: GET
    data_selector: records
    params: {}
- name: Launchnodes Vault
  endpoint:
    path: /0xFA1E351e89Fee843A1EdFb5efD4b3002743e3ed8
    method: GET
    data_selector: records
    params: {}
- name: stakefish Lido v3 Restaked ETH
  endpoint:
    path: /0xb11C95eeB53FF748B6Dd4e2F9f4294F8F4030aF0
    method: GET
    data_selector: records
    params: {}
- name: Stakely x Gauntlet Restaking Plus
  endpoint:
    path: /0xb2Bb0d53Fff7FF771855ad43F80c769860F627bD
    method: GET
    data_selector: records
    params: {}
- name: Kukis Global Vault
  endpoint:
    path: /0xcAfC35fB68DFCD6AF2BC264E687c6c0279284068
    method: GET
    data_selector: records
    params: {}
- name: Cosmostation Vault
  endpoint:
    path: /0xeDB7FA2aD67974C309c14Bb3610eE2E6703B5C04
    method: GET
    data_selector: records
    params: {}
- name: Bedrock Restaked uniBTC
  endpoint:
    path: /path/to/BedrockRestakeduniBTC
    method: GET
    data_selector: records
- name: Re7 Labs Restaked tBTC
  endpoint:
    path: /path/to/Re7LabsRestakedtBTC
    method: GET
    data_selector: records
- name: Amphor Restaked BTC
  endpoint:
    path: /path/to/AmphorRestakedBTC
    method: GET
    data_selector: records
- name: Re7 Labs Restaked wBTC
  endpoint:
    path: /path/to/Re7LabsRestakedwBTC
    method: GET
    data_selector: records
- name: Staked iBTC
  endpoint:
    path: /path/to/StakediBTC
    method: GET
    data_selector: records
- name: Marlin POND LRT
  endpoint:
    path: /path/to/MarlinPONDLRT
    method: GET
    data_selector: records
- name: dvv
  endpoint:
    path: /dvv-deployment
    method: GET
    data_selector: deployment
    params: {}
- name: symbiotic_adapter
  endpoint:
    path: /symbiotic/adapter
    method: GET
- name: eigenlayer_adapter
  endpoint:
    path: /eigenlayer/adapter
    method: GET
- name: erc4626_adapter
  endpoint:
    path: /erc4626/adapter
    method: GET
- name: symbiotic_withdrawal_queue
  endpoint:
    path: /symbiotic/withdrawal_queue
    method: GET
- name: eigenlayer_withdrawal_queue
  endpoint:
    path: /eigenlayer/withdrawal_queue
    method: GET
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: deployments
  endpoint:
    path: /api/v1/deployments
    method: GET
    data_selector: data
    params: {}
- name: SourceCore
  endpoint:
    path: /address/0x24dD1eaBEad7b3cB07b7d162439ec0A4EEC703DF
    method: GET
    data_selector: data
    params: {}
- name: TargetCore
  endpoint:
    path: /address/0x6408a5261578E17f858ADD039dEb72E1952E9Fe9
    method: GET
    data_selector: data
    params: {}
- name: WhitelistedEthWrapper
  endpoint:
    path: /whitelisted-eth-wrapper
    method: GET
    data_selector: data
- name: RatiosStrategy
  endpoint:
    path: /ratios-strategy
    method: GET
    data_selector: data
- name: MultiVault implementation
  endpoint:
    path: /multi-vault-implementation
    method: GET
    data_selector: data
- name: Claimer
  endpoint:
    path: /claimer
    method: GET
    data_selector: data
- name: Rewards multisig
  endpoint:
    path: /rewards-multisig
    method: GET
    data_selector: data
- name: Encapsulate Vault
  endpoint:
    path: /encapsulate_vault
    method: GET
    data_selector: vaults
    params: {}
- name: Fungl
  endpoint:
    path: /fungl
    method: GET
    data_selector: vaults
    params: {}
- name: MEV Capital Lidov3 stVault x Kiln
  endpoint:
    path: /mev_kiln
    method: GET
    data_selector: vaults
    params: {}
- name: XHash Dual-Yield Restake Vault
  endpoint:
    path: /xhash_restake
    method: GET
    data_selector: vaults
    params: {}
- name: A41 Vault
  endpoint:
    path: /a41_vault
    method: GET
    data_selector: vaults
    params: {}
- name: MEV Capital Lidov3 stVault x Alchemy
  endpoint:
    path: /mev_alchemy
    method: GET
    data_selector: vaults
    params: {}
- name: Re7 LidoV3 x Luganodes
  endpoint:
    path: /re7_luganodes
    method: GET
    data_selector: vaults
    params: {}
- name: Protocol Governance parameters
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/governance-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Aave VaultGovernance
  endpoint:
    path: /aave/vault-governance
    method: GET
    data_selector: delayedProtocolParams
    params: {}
- name: UniV3 VaultGovernance
  endpoint:
    path: /univ3/vault-governance
    method: GET
    data_selector: delayedProtocolParams
    params: {}
- name: Yearn VaultGovernance
  endpoint:
    path: /yearn/vault-governance
    method: GET
    data_selector: delayedProtocolParams
    params: {}
- name: ERC20Root VaultGovernance
  endpoint:
    path: /erc20root/vault-governance
    method: GET
    data_selector: strategyParams
    params: {}
- name: Nodes.Guru Vault
  endpoint:
    path: /services/data/vXX.X/sobjects/NodesGuruVault
    method: GET
    data_selector: records
    params: {}
- name: HashKey Cloud Restaked ETH
  endpoint:
    path: /services/data/vXX.X/sobjects/HashKeyCloudRestakedETH
    method: GET
    data_selector: records
    params: {}
- name: Re7 LidoV3 x Stakin
  endpoint:
    path: /services/data/vXX.X/sobjects/Re7LidoV3xStakin
    method: GET
    data_selector: records
    params: {}
- name: Simply Staking Lido v3 Pre-Deposit Vault x Steakhouse
  endpoint:
    path: /services/data/vXX.X/sobjects/SimplyStakingLido
    method: GET
    data_selector: records
    params: {}
- name: Flow Traders Restaking Vault
  endpoint:
    path: /services/data/vXX.X/sobjects/FlowTradersRestakingVault
    method: GET
    data_selector: records
    params: {}
- name: ProviVault
  endpoint:
    path: /services/data/vXX.X/sobjects/ProviVault
    method: GET
    data_selector: records
    params: {}
- name: contracts
  endpoint:
    path: /api/contracts
    method: GET
    data_selector: data
- name: ProtocolGovernance
  endpoint:
    path: /protocolGovernance
    method: GET
    data_selector: records
- name: VaultRegistry
  endpoint:
    path: /vaultRegistry
    method: GET
    data_selector: records
- name: UnitPricesGovernance
  endpoint:
    path: /unitPricesGovernance
    method: GET
    data_selector: records
- name: 01node Vault
  endpoint:
    path: /0x3E9582c2Cc32feb56d4338cfba09a24980089199
    method: GET
    data_selector: records
    params:
      Vault: '[0xE7cAe487F8Da314cCac5F36b829f061983014D65]'
- name: DSRV Vault
  endpoint:
    path: /0xF575F1C3DAd6B47f2045015baE313cA885921C8B
    method: GET
    data_selector: records
    params:
      Vault: '[0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0]'
- name: Launchnodes Vault
  endpoint:
    path: /0xFA1E351e89Fee843A1EdFb5efD4b3002743e3ed8
    method: GET
    data_selector: records
    params:
      Vault: '[0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0]'
- name: stakefish Lido v3 Restaked ETH
  endpoint:
    path: /0xb11C95eeB53FF748B6Dd4e2F9f4294F8F4030aF0
    method: GET
    data_selector: records
    params:
      Vault: '[0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0]'
- name: Stakely x Gauntlet Restaking Plus
  endpoint:
    path: /0xb2Bb0d53Fff7FF771855ad43F80c769860F627bD
    method: GET
    data_selector: records
    params:
      Vault: '[0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0]'
- name: Kukis Global Vault
  endpoint:
    path: /0xcAfC35fB68DFCD6AF2BC264E687c6c0279284068
    method: GET
    data_selector: records
    params:
      Vault: '[0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0]'
- name: Cosmostation Vault
  endpoint:
    path: /0xeDB7FA2aD67974C309c14Bb3610eE2E6703B5C04
    method: GET
    data_selector: records
    params:
      Vault: '[0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0]'
- name: dvv
  endpoint:
    path: /dvv-deployment
    method: GET
    data_selector: value
    params: {}
- name: Mellow Protocol Addresses (Polygon)
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/mellow-protocol-addresses-polygon
    method: GET
- name: Mellow Protocol Addresses (Mainnet)
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/mellow-protocol-addresses-mainnet
    method: GET
- name: Gearbox Fearless Strategy
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/gearbox-fearless-strategy
    method: GET
- name: Tamper Strategy
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/lstrategy
    method: GET
- name: UniV3 Pulse wstETH-USDC
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/univ3-pulse-wsteth-usdc
    method: GET
- name: UniV3 Pulse V2 wstETH-USDC
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/univ3-pulse-v2-wsteth-usdc
    method: GET
- name: Velodrome CL strategies
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/velodrome-cl-strategies
    method: GET
- name: Aerodrome CL strategies
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/mellow-contracts-addresses/aerodrome-cl-strategies
    method: GET
- name: Vault
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/api
    method: GET
    data_selector: vaults
- name: ERC20Root Vault
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/api#erc20rootvault
    method: GET
    data_selector: erc20rootvaults
- name: FRAX Interoperability Vault
  endpoint:
    path: /address/0xBdF7b7bb56C35d439Da87F66B195cdF38777d972
    method: GET
    data_selector: records
    params: {}
- name: MANTA Interoperability Vault
  endpoint:
    path: /address/0x78A80Df6b868a420BBAB605BC8a5cfd8525ea943
    method: GET
    data_selector: records
    params: {}
- name: vaults
  endpoint:
    path: /api/vaults
    method: GET
    data_selector: data
    params: {}
- name: strategies
  endpoint:
    path: /api/strategies
    method: GET
    data_selector: data
    params: {}
- name: amm_position
  endpoint:
    path: /api/amm_position
    method: GET
    data_selector: data
    params: {}
- name: managed_position
  endpoint:
    path: /api/managed_position
    method: GET
    data_selector: data
    params: {}
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: strategies
  endpoint:
    path: /api/v1/strategies
    method: GET
    data_selector: data
    params: {}
- name: Protocol Governance parameters
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/governance-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: rebalance
  endpoint:
    path: /api/v1/rebalance
    method: POST
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /api/v1/deposit
    method: POST
    data_selector: data
    params: {}
- name: withdraw
  endpoint:
    path: /api/v1/withdraw
    method: POST
    data_selector: data
    params: {}
- name: Aave VaultGovernance
  endpoint:
    path: /vaults/aave
    method: GET
    data_selector: delayedProtocolParams
    params: {}
- name: UniV3 VaultGovernance
  endpoint:
    path: /vaults/univ3
    method: GET
    data_selector: delayedProtocolParams
    params: {}
- name: Yearn VaultGovernance
  endpoint:
    path: /vaults/yearn
    method: GET
    data_selector: delayedProtocolParams
    params: {}
- name: ERC20Root VaultGovernance
  endpoint:
    path: /vaults/erc20root
    method: GET
    data_selector: strategyParams
    params: {}
- name: ManagedPositionInfo
  endpoint:
    path: /managedPosition
    method: GET
    data_selector: data
    params: {}
- name: TargetPositionInfo
  endpoint:
    path: /targetPosition
    method: GET
    data_selector: data
    params: {}
- name: DepositParams
  endpoint:
    path: /deposit
    method: POST
    data_selector: data
    params: {}
- name: RebalanceParams
  endpoint:
    path: /rebalance
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: getOraclePrice
  endpoint:
    path: /getOraclePrice
    method: GET
    data_selector: priceInfo
    params:
      pool: address
- name: ensureNoMEV
  endpoint:
    path: /ensureNoMEV
    method: POST
    data_selector: mevCheck
    params:
      pool: address
      params: bytes
- name: validateSecurityParams
  endpoint:
    path: /validateSecurityParams
    method: POST
    data_selector: securityValidation
    params:
      params: bytes
- name: ContractRegistry
  endpoint:
    path: /ContractRegistry
    method: GET
    data_selector: records
- name: ProtocolGovernance
  endpoint:
    path: /ProtocolGovernance
    method: GET
    data_selector: records
- name: VaultRegistry
  endpoint:
    path: /VaultRegistry
    method: GET
    data_selector: records
- name: ChainlinkOracle
  endpoint:
    path: /ChainlinkOracle
    method: GET
    data_selector: records
- name: MellowOracle
  endpoint:
    path: /MellowOracle
    method: GET
    data_selector: records
- name: UniV2Oracle
  endpoint:
    path: /UniV2Oracle
    method: GET
    data_selector: records
- name: UniV3Oracle
  endpoint:
    path: /UniV3Oracle
    method: GET
    data_selector: records
- name: HStrategy
  endpoint:
    path: /HStrategy
    method: GET
    data_selector: records
- name: vaults
  endpoint:
    path: /api/vaults
    method: GET
    data_selector: data
    params: {}
- name: strategies
  endpoint:
    path: /api/strategies
    method: GET
    data_selector: data
    params: {}
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: strategies
  endpoint:
    path: /api/v1/strategies
    method: GET
    data_selector: data
    params: {}
- name: StrategyModule
  endpoint:
    path: /mellow-alm/mellow-alm-toolkit/strategy
    method: GET
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: AmmPosition
  endpoint:
    path: /amm/positions
    method: GET
    data_selector: positions
- name: rebalance_process
  endpoint:
    path: /api/rebalance
    method: POST
    data_selector: data
    params: {}
- name: deposit_process
  endpoint:
    path: /api/deposit
    method: POST
    data_selector: data
    params: {}
- name: withdraw_process
  endpoint:
    path: /api/withdraw
    method: POST
    data_selector: data
    params: {}
- name: points
  endpoint:
    path: /api/points
    method: GET
    data_selector: data
    params: {}
- name: contracts
  endpoint:
    path: /contracts
    method: GET
- name: user_shares
  endpoint:
    path: /user_shares
    method: GET
- name: user_balances
  endpoint:
    path: /user_balances
    method: GET
- name: contracts
  endpoint:
    path: /getContracts
    method: GET
    data_selector: contracts
    params: {}
- name: defi_pools
  endpoint:
    path: /getDeFiPools
    method: GET
    data_selector: defiPools
    params: {}
- name: user_shares
  endpoint:
    path: /getUserShares
    method: GET
    data_selector: userShares
    params: {}
- name: user_balances
  endpoint:
    path: /getBalances
    method: GET
    data_selector: userBalances
    params: {}
- name: points_fees
  endpoint:
    path: /getPointsFees
    method: GET
    data_selector: pointsFees
    params: {}
- name: ManagedPositionInfo
  endpoint:
    path: /managedPositionInfo
    method: GET
    data_selector: info
    params: {}
- name: TargetPositionInfo
  endpoint:
    path: /targetPositionInfo
    method: GET
    data_selector: info
    params: {}
- name: DepositParams
  endpoint:
    path: /depositParams
    method: POST
    data_selector: params
    params: {}
- name: RebalanceParams
  endpoint:
    path: /rebalanceParams
    method: POST
    data_selector: params
    params: {}
- name: ammModule
  endpoint:
    path: /ammModule
    method: GET
    data_selector: address
    params: {}
- name: oracle
  endpoint:
    path: /oracle
    method: GET
    data_selector: address
    params: {}
- name: strategyModule
  endpoint:
    path: /strategyModule
    method: GET
    data_selector: address
    params: {}
- name: positionCount
  endpoint:
    path: /positionCount
    method: GET
    data_selector: count
    params: {}
- name: Vault
  endpoint:
    path: /resources/mellow-lrt-depreciated/vault
    method: GET
    data_selector: vaultData
    params: {}
- name: VaultConfigurator
  endpoint:
    path: /resources/mellow-lrt-depreciated/vaultconfigurator
    method: GET
    data_selector: configuratorData
    params: {}
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: functions
  endpoint:
    path: /vault/functions
    method: GET
    data_selector: functions
    params: {}
- name: events
  endpoint:
    path: /vault/events
    method: GET
    data_selector: events
    params: {}
- name: getOraclePrice
  endpoint:
    path: /getOraclePrice
    method: GET
    data_selector: sqrtPriceX96
    params:
      pool: address
- name: ensureNoMEV
  endpoint:
    path: /ensureNoMEV
    method: POST
    data_selector: result
    params:
      pool: address
      params: bytes
- name: validateSecurityParams
  endpoint:
    path: /validateSecurityParams
    method: POST
    data_selector: validationResult
    params:
      params: bytes
- name: vault_configurator
  endpoint:
    path: /api/vaults/configurator
    method: GET
    data_selector: data
    params: {}
- name: Strategy
  endpoint:
    path: /mellow-alm/mellow-permissionless-vaults/strategies
    method: GET
    data_selector: strategies
    params: {}
- name: Vault
  endpoint:
    path: /resources/vault
    method: GET
- name: amm_position
  endpoint:
    path: /amm/positions
    method: GET
    data_selector: positions
    params: {}
- name: amm_pool
  endpoint:
    path: /amm/pools
    method: GET
    data_selector: pools
    params: {}
- name: AmmPosition
  endpoint:
    path: /amm/positions
    method: GET
    data_selector: positions
    params: {}
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: strategies
  endpoint:
    path: /api/v1/strategies
    method: GET
    data_selector: data
    params: {}
- name: emergency_withdrawal
  endpoint:
    path: /emergency_withdrawal
    method: POST
    data_selector: result
    params: {}
- name: contracts
  endpoint:
    path: /contracts
    method: GET
    data_selector: contracts
- name: user_shares
  endpoint:
    path: /user/shares
    method: GET
    data_selector: shares
- name: user_balances
  endpoint:
    path: /user/balances
    method: GET
    data_selector: balances
- name: vaults
  endpoint:
    path: /v1/vaults
    method: GET
    data_selector: object[]
- name: defi_protocols
  endpoint:
    path: /v1/defi/protocols
    method: GET
    data_selector: object[]
- name: contracts
  endpoint:
    path: /getContracts
    method: POST
    data_selector: contracts
- name: defi_pools
  endpoint:
    path: /getDeFiPools
    method: POST
    data_selector: defiPools
- name: user_shares
  endpoint:
    path: /getUserShares
    method: POST
    data_selector: userShares
- name: user_balances
  endpoint:
    path: /getBalances
    method: POST
    data_selector: userBalances
- name: points_fees
  endpoint:
    path: /getPointsFees
    method: GET
    data_selector: pointsFees
- name: user_vaults_positions
  endpoint:
    path: /v1/users/{user_address}
    method: GET
    data_selector: '[].user_vault_balance'
    params: {}
- name: user_defi_positions
  endpoint:
    path: /v1/defi/users/{user_address}
    method: GET
    data_selector: '[].user_vault_balance'
    params: {}
- name: functions
  endpoint:
    path: /vault/functions
    method: GET
    data_selector: functions
    params: {}
- name: events
  endpoint:
    path: /vault/events
    method: GET
    data_selector: events
    params: {}
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: functions
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: strategies
  endpoint:
    path: /api/v1/strategies
    method: GET
    data_selector: data
    params: {}
- name: oracles
  endpoint:
    path: /api/oracles
    method: GET
    data_selector: data
    params: {}
- name: vaults
  endpoint:
    path: /api/v1/vaults
    method: GET
    data_selector: data
    params: {}
- name: modules
  endpoint:
    path: /api/v1/modules
    method: GET
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /api/v1/deposit
    method: POST
    data_selector: data
- name: withdraw
  endpoint:
    path: /api/v1/withdraw
    method: POST
    data_selector: data
- name: vaults
  endpoint:
    path: /v1/vaults
    method: GET
    data_selector: object[]
- name: defi_protocols
  endpoint:
    path: /v1/defi/protocols
    method: GET
    data_selector: object[]
- name: user_vaults_positions
  endpoint:
    path: /v1/users/{user_address}
    method: GET
    data_selector: '[]'
- name: user_defi_positions
  endpoint:
    path: /v1/defi/users/{user_address}
    method: GET
    data_selector: '[]'
notes:
- Mellow builds a liquid vaults primitive that enables permissionless creation of
  variety of vaults, including Simple LRT, MultiVaults, DVV, Intreroperability Vaults
  and more to come.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Mellow LRT smart contracts has been thoroughly audited by multiple firms specializing
  in smart contract audit and Sherlock community contributors.
- Select the asset you want to deposit. This could be w(ETH) or (w)stETH, a stablecoin,
  or any other supported asset.
- After the deposit is successful, you'll see the number of Vaults tokens allocated
  to you, along with their dollar equivalent on the Vaults page.
- Withdrawals are processed by risk curators within 1-7 days in batches.
- Mellow’s Core Vaults provide structured products onchain.
- Requires setup of connected app in Mellow
- Supports structured financial products
- Uses a time-buffered queuing system to prevent front-running
- Users must call claim function to receive shares
- The Oracle contract is responsible for secure and configurable price reporting for
  supported assets.
- Some objects like Contact may return nulls in deeply nested fields
- Only trusted roles can push prices
- Suspicious reports cannot be accepted without explicit approval
- The Factory contract is a generalized deployment mechanism for creating upgradeable
  proxy instances.
- Requires OAuth2 setup for access.
- Requires OAuth2 setup for accessing resources.
- Uses REST API
- 'Vault address: 0x5E362eb2c0706Bd1d134689eC75176018385430B'
- 'Asset address: 0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0'
- 'VaultAdmin address: 0x9437B2a8cF3b69D782a61f9814baAbc172f72003'
- 'VaultProxyAdmin address: 0x81698f87C6482bF1ce9bFcfC0F103C4A0Adf0Af0'
- 'ProxyAdmin address: 0x8e6c80c41450d3fa7b1fd0196676b99bfb34bf48'
- 'Curator address: 0x9437B2a8cF3b69D782a61f9814baAbc172f72003'
- 'Name: Decentralized Validator Token'
- 'Symbol: DVstETH'
- Facilitates cross-chain restaking
- Some endpoints may have rate limits
- Contract addresses listed for various functionalities.
- To protect the protocol from the governance hijack DDOS attack (set withdraw limit
  to 0), the minimum threshold of 200_000 USD for withdrawLimit is hardcoded.
- The first deposit is supposed to be made by a strategist and is supposed to be relatively
  small.
- 'Maximum different tokens that a vault can manage: 10'
- 'The delay that has to pass for updating a certain class of params: 86400 secs'
- 'The treasury address for protocol fees: protocolTreasury'
- 'If a bit in this mask is set, the permission is allowed for all addresses: 0'
- 'The maximum withdrawal per block: 200000 USD'
- 'Token price estimates: USDC => 10 ^ 6, ETH => 10 ^ 18 / 3000, BTC => 10 ^ 8 / 45000'
- Uses OAuth2 with refresh token — requires setup of connected app in Mellow
- Includes addresses for various roles in the DVV deployment.
- Last updated 1 month ago
- Some API responses may vary based on user permissions
- The minimum threshold of 200_000 USD for withdrawLimit is hardcoded.
- Withdrawals are subject to limits imposed by ProtocolGovernance.
- Make sure to follow the API rate limits.
- Check for specific error codes returned by the API.
- The MALM system is a highly modular framework of smart contracts, deployed on Ethereum
  Virtual Machine (EVM) compatible Layer 2 blockchains.
- Requires OAuth2 authentication setup.
- 'The maximum withdrawal per block: 200_000 USD'
- Requires OAuth2 setup with Mellow Protocol.
- When utilizing the Spot Oracle, it's important to always be aware that the token
  in question could potentially be delisted.
- Requires setup of OAuth2 connected app in Mellow
- Ensure proper permissions are set for the app
- Uses OAuth2 with refresh token — requires setup of connected app in Mellow Protocol
- Addresses of Mellow contracts, deployed on the Polygon chain and on Mainnet.
- Defines essential functions for validating strategy parameters and determining the
  need for and direction of rebalancing within AMM pools.
- Interacts closely with the ICore contract, AMM modules, and oracles to optimize
  liquidity positions.
- The AmmModule is crucial for integrating with AMM protocols, providing a suite of
  functions to validate parameters, calculate liquidity amounts, manage positions,
  and more.
- MALM simplifies the process of injecting liquidity into AMM pools.
- Users can efficiently manage their liquidity positions to earn trading fees.
- Users who deposited before Symbiotic limits were reached will receive the same amount
  of Symbiotic and Mellow points as it was assumed, 1x + 1x of both.
- Users who deposited after Symbiotic limits were reached will start receiving Symbiotic
  points as we will push their deposits into Symbiotic after limits will increase,
  but before that will get 1.5x boost for Mellow points for the time while their liquidity
  is idle into Mellow vaults.
- Points are given to the user are proportional to the total points emission on LRTs
  currently in the pool.
- Some processes may return nulls in deeply nested fields
- Requires setup of OAuth2 client in Mellow Protocol
- Handles AMM positions and their management.
- Requires ownership validation for certain functions.
- Requires setup of connected app in Mellow Protocol
- Some API responses may include deprecated fields
- StrategyModule defines essential functions for validating strategy parameters and
  determining the need for and direction of rebalancing within AMM pools.
- Parameters are first staged (proposed) and then committed (finalized) after a delay.
- Admin-exclusive functions for all parameter changes except `isDepositsLocked`.
- Liquidity under management should more or less equal the remaining liquidity in
  the pool as it may affect price movement.
- MAX_DELAY() returns the maximum permissible delay (365 days).
- MAX_WITHDRAWAL_FEE() Maximum withdrawal fee allowed (5%).
- Requires setup of OAuth2 for access
- Ensure to handle token expiration properly
- Some responses may include nested objects with varying structures
- Ensure compliance with conditions to receive incentives
- Users who deposited after Symbiotic limits were reached will start receiving Symbiotic
  points as we will push their deposits into Symbiotic after limits will increase.
- Requires setup of OAuth2 for API access
- User shares are sorted by block
- Admin functions require special permissions.
- 'Each parameter update involves two steps: Staging and Committing.'
- Parameters each have their own delay values before an update can be committed.
- Staging and committing functions available for various parameters
- Events emitted on staging, committing, and rolling back values
- Some responses may contain null values in certain fields
- Some objects may return nulls in deeply nested fields
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'TooEarly: Minimum time between reports has not passed'
- 'InvalidPrice: Price exceeds maximum absolute deviation'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'TooEarly: The report submission is too early'
- 'InvalidPrice: The price is too far off'
- '401 Unauthorized: Check OAuth credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Endpoint may not exist.'
- 'RATE_LIMIT_EXCEEDED: Reduce frequency of requests'
- 'INVALID_TOKEN: Ensure token is not expired'
- 'INVALID_REQUEST: Ensure all required parameters are included.'
- 'UNAUTHORIZED: Verify your access token is valid.'
- '401 Unauthorized: Check your credentials.'
- '401 Unauthorized: Check your authentication credentials.'
- '401 Unauthorized: Check token validity'
- '429 Too Many Requests: Rate limit exceeded'
- 'Deadline: Raised when the deadline for an operation has passed.'
- 'InvalidState: Indicates an incorrect or unsupported state.'
- 'InvalidLength: Raised when input arrays have mismatched lengths.'
- 'InvalidToken: Invalid or unauthorized token address.'
- 'NonZeroValue: Raised if a value is expected to be zero but isn''t.'
- 'ValueZero: Indicates a zero value where non-zero is required.'
- 'InsufficientLpAmount: Not enough LP tokens for withdrawal.'
- 'InsufficientAmount: Token amount insufficient for withdrawal.'
- 'LimitOverflow: Operation exceeds the defined limits.'
- '401 Unauthorized: Check OAuth credentials'
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify endpoint availability'
- '401 Unauthorized: Check client credentials and token'
- 'AddressZero: Raised if a zero address is passed for a required address.'
- 'InvalidDelay: Delay value exceeds the permissible limits.'
- 'InvalidTimestamp: Timestamp doesn''t match the staging process.'
- 'InvalidWithdrawalFee: Withdrawal fee is out of the acceptable range.'
- 'INVALID_PARAMETER: Check the input parameters for correctness'
- 'UNAUTHORIZED: Verify that your OAuth token is valid'
- 'NOT_FOUND: The requested resource could not be found'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests'
- 'INVALID_AUTH: Check your authentication credentials'
- '404 Not Found: Verify the endpoint URL'
- Gaming the Loyalty Points program — i.e. using the same LRT to generate rewards
  multiple times by selling LRT for ETH to repeat the process is not encouraged.
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: Check parameters in the request body'
- 500 Internal server error
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - MellowACL
  - Verifier
  - BitmaskVerifier
  - Consensus
  - SUBMIT_REPORTS_ROLE
  - ACCEPT_REPORT_ROLE
  - SET_SECURITY_PARAMS_ROLE
  - ADD_SUPPORTED_ASSETS_ROLE
  - REMOVE_SUPPORTED_ASSETS_ROLE
  - OAuthToken
  - AmmModule
  - AdminProxy
  - DeFiContract
  - IDeFiUserShare
  - GetContractsParams
  - GetUserSharesParams
client:
  base_url: https://api.mellow.finance
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
