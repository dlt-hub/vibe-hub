resources:
- name: commands
  endpoint:
    path: /commands
    method: GET
    data_selector: commands
    params: {}
- name: getState
  endpoint:
    path: /getState
    method: GET
    data_selector: status
    params: {}
- name: getQueue
  endpoint:
    path: /getQueue
    method: GET
    data_selector: queue
    params: {}
- name: listplaylists
  endpoint:
    path: /listplaylists
    method: GET
    data_selector: playlists
    params: {}
- name: browse
  endpoint:
    path: /browse
    method: GET
    data_selector: navigation
    params:
      uri: uri
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: navigation
    params:
      query: searchquery
- name: pushNotificationUrls
  endpoint:
    path: /pushNotificationUrls
    method: POST
    data_selector: success
    params: {}
- name: checkNotificationUrls
  endpoint:
    path: /pushNotificationUrls
    method: GET
    data_selector: ''
    params: {}
- name: deleteNotificationUrls
  endpoint:
    path: /pushNotificationUrls
    method: DELETE
    data_selector: ''
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: ''
    params: {}
- name: getSystemVersion
  endpoint:
    path: /getSystemVersion
    method: GET
    data_selector: systemversion
    params: {}
- name: getSystemInfo
  endpoint:
    path: /getSystemInfo
    method: GET
    data_selector: id
    params: {}
- name: tinyAlbumartArtist
  endpoint:
    path: /tinyart/{artist}/large
    method: GET
    data_selector: ''
    params: {}
- name: tinyAlbumartAlbum
  endpoint:
    path: /tinyart/{artist}/{album}/large
    method: GET
    data_selector: ''
    params: {}
- name: tinyAlbumartSourceicon
  endpoint:
    path: /tinyart/?sourceicon={sourceicon}
    method: GET
    data_selector: ''
    params: {}
- name: metadata
  endpoint:
    path: /pluginEndpoint
    method: POST
    data_selector: success
    params: {}
- name: ssh_access
  endpoint:
    path: /dev
    method: GET
    data_selector: ssh
    params: {}
- name: dacs
  endpoint:
    path: /dacs.json
    method: GET
    data_selector: devices
- name: tinkerimage
  endpoint:
    path: /tinkerimage.sh
    method: GET
    data_selector: script
- name: tinkerconfig
  endpoint:
    path: /tinkerconfig.sh
    method: GET
    data_selector: script
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: POST
    data_selector: success
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: POST
    data_selector: success
- name: listPlaylist
  endpoint:
    path: /listPlaylist
    method: GET
    data_selector: pushListPlaylist
- name: addToPlaylist
  endpoint:
    path: /addToPlaylist
    method: POST
    data_selector: success
- name: removeFromPlaylist
  endpoint:
    path: /removeFromPlaylist
    method: POST
    data_selector: success
- name: playPlaylist
  endpoint:
    path: /playPlaylist
    method: POST
    data_selector: success
- name: enqueue
  endpoint:
    path: /enqueue
    method: POST
    data_selector: success
- name: current_play_queue
  endpoint:
    path: /getQueue
    method: GET
    data_selector: pushQueue
- name: remove_from_queue
  endpoint:
    path: /removeFromQueue
    method: POST
    data_selector: ''
- name: add_to_queue
  endpoint:
    path: /addToQueue
    method: POST
    data_selector: ''
- name: move_queue_item
  endpoint:
    path: /moveQueue
    method: POST
    data_selector: ''
- name: add_to_favourites
  endpoint:
    path: /addToFavourites
    method: POST
    data_selector: ''
- name: remove_from_favourites
  endpoint:
    path: /removeFromFavourites
    method: POST
    data_selector: ''
- name: command_line_client
  endpoint:
    path: /volumio/app/plugins/system_controller/volumio_command_line_client/volumio.sh
    method: GET
    data_selector: commands
- name: plugin
  endpoint:
    path: /data/plugins/
    method: GET
    data_selector: plugins
- name: plugin
  endpoint:
    path: /plugins
    method: POST
- name: config
  endpoint:
    path: /config.json
    method: GET
    data_selector: parameters
- name: package
  endpoint:
    path: /package.json
    method: GET
    data_selector: info
- name: Spotify Configuration
  endpoint:
    path: /music_service/spop
    method: saveSpotifyAccount
    data_selector: records
- name: toast_messages
  endpoint:
    path: /plugins/toast-messages
    method: GET
    data_selector: messages
    params: {}
- name: Spotify
  endpoint:
    path: /plugins/music-service
    method: GET
- name: explode_uri
  endpoint:
    path: /plugins/music-service/explode-uri
    method: GET
    data_selector: items
- name: search
  endpoint:
    path: /plugins/music-service/search
    method: GET
    data_selector: items
- name: get_track_info
  endpoint:
    path: /plugins/music-service/get-track-info
    method: GET
    data_selector: items
- name: prefetch
  endpoint:
    path: /plugins/music-service/prefetch
    method: GET
- name: dsp_plugin
  endpoint:
    path: /plugins/dsp-reporting
    method: POST
    data_selector: fusionDSPElementsData
    params: {}
- name: user_interface
  endpoint:
    path: /data/plugins/user_interface/now_playing/ui
    method: POST
    data_selector: uiData
- name: armbian_tool
  endpoint:
    path: /armbian/tool
    method: GET
    data_selector: data
    params: {}
- name: asus_tinkerboard_repo
  endpoint:
    path: /asus/tinkerboard/repo
    method: GET
    data_selector: data
    params: {}
- name: boot.scr
  endpoint:
    path: /boot/volumio-env.txt
    method: GET
    data_selector: records
    params: {}
- name: extlinux.conf
  endpoint:
    path: /boot/extlinux/extlinux.conf
    method: GET
    data_selector: records
    params: {}
- name: platform_folder
  endpoint:
    path: /devices-porting/Saving_Files_To_The_Platform_Folder
    method: GET
    data_selector: files
    params: {}
- name: sparky_image_build
  endpoint:
    path: /build-sparky-image
    method: POST
    data_selector: build
    params:
      type: arm
      device: sparky
      version: <anything to identify>
- name: image_creation
  endpoint:
    path: /scripts/tinkerimage.sh
    method: POST
    data_selector: None
    params: {}
- name: ALSA Contribution Snippet
  endpoint:
    path: /data/configuration/audio_interface/your_plugin/asound/in.out.conf
    method: CREATE
    data_selector: snippet
    params: {}
notes:
- SSH is disabled by default on all versions after 2.199 except first boot.
- To enable SSH, navigate to http://yourvolumioip/dev and click 'enable'.
- 'Volumio stores all compatibility data for I2S DAC in a single file: the dacs.json
  file'
- Tinkerboard does not (yet) support i2s devices, so no need to load sound modules.
- Plugins are meant to be installed by users directly from the Volumio Plugins store.
- Categories name must be lowercase and separated by _.
- Plugin requires valid plugin category selection.
- Plugins can be updated locally using the refresh command.
- Ensure to give proper permissions to file you'll need to edit later on (node runs
  with user volumio)
- 'IMPORTANT THINGS TO NOTICE: Use "echo" to detail what''s going during the install'
- Use the minimum amount of modules needed, and try to avoid modules that need compilation.
- Make sure that ALL plugins effects are removed if the onStop is called.
- Configurations resides in single .json files, pertaining to a core component or
  a specific plugin.
- Do not log every event, but just meaningful events.
- Make sure you remove all console.logs from your plugin before submitting.
- Log only meaningful events (do not overflow logs, this makes troubleshooting harder).
- In the log always report the plugin name, for easier troubleshooting.
- 'Use the minimum amount of logging possible: logs consume a lot of CPU cycles.'
- Every new plugin and all of its subsequent versions will be put in the beta channel.
- Always wrap in try-catch both functions addDSPSignalPathElement and removeDSPSignalPathElement
  to ensure backward compatibility with previous Volumio versions
- The user interface should be placed inside one folder, and the path must be known.
- If the UI cannot be found in the specified uiPath, the UI won't be added.
- It is highly recommended to set up your build environment on a Debian Jessie or
  Ubuntu 16.04 machine.
- A UART-interface is highly recommended to use with your device.
- boot.scr is based on a compiled boot.scr (from boot.cmd) and an optional text file
  to override predefined variables.
- extlinux.conf is located in boot/extlinux and has the required content for configuration.
- The Tinkerboard is a brand new board, it was used as an example and still is WIP.
- You need to fork the volumio build repo from github.
- Plugins must opt-in to providing ALSA contributions by setting the has_alsa_contribution
  property to true in the volumio_info of the plugin's package.json
- Static snippets live inside the plugin in a folder called asound
- Dynamic Contributions should be generated in onVolumioStart and written to the asound
  directory of plugin configuration folder
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: http://volumio.local/api/v1
  resources:
  - name: replace_and_play
    endpoint:
      path: /replaceAndPlay
      method: POST
  - name: add_to_queue
    endpoint:
      path: /addToQueue
      method: POST
  - name: collection_stats
    endpoint:
      path: /collectionstats
      method: GET
  - name: get_zones
    endpoint:
      path: /getzones
      method: GET
source_metadata: null
