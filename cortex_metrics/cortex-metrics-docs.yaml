resources:
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: series
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: labels
  endpoint:
    path: /api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
    data_selector: ''
    params: {}
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
    data_selector: ''
    params: {}
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
    data_selector: ''
    params: {}
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET
    data_selector: ''
    params: {}
- name: template_files
  endpoint:
    path: /configs/templates
    method: GET
    data_selector: ''
    params: {}
- name: set_template_files
  endpoint:
    path: /configs/templates
    method: POST
    data_selector: ''
    params: {}
- name: alertmanager_config
  endpoint:
    path: /configs/alertmanager
    method: GET
    data_selector: ''
    params: {}
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: /api/v1/query_exemplars
    method: GET
    data_selector: null
    params: {}
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: /api/v1/query_exemplars
    method: GET,POST
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: parse_query
  endpoint:
    path: /api/v1/parse_query
    method: GET,POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: series_by_label_matchers
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: index
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: status
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
- name: ready
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenant_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_all_user_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: /api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: /api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: /api/v1/parse_query
    method: GET,POST
- name: series
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: labels
  endpoint:
    path: /api/v1/labels
    method: GET,POST
- name: label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: metric_metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: build_info
  endpoint:
    path: /api/v1/status/buildinfo
    method: GET
- name: tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: rules
  endpoint:
    path: /api/v1/rules
    method: GET
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: rules_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_config
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: delete_alertmanager_tenant_config
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET,POST,DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET,POST
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
    headers:
      X-Prometheus-Remote-Write-Version: 0.1.0
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: series
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: list_rules
  endpoint:
    path: /api/v1/rules
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: index
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: user_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: rule_groups
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: push
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: all_user_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush
  endpoint:
    path: /ingester/flush
    method:
    - GET
    - POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method:
    - GET
    - POST
- name: ingester_ring
  endpoint:
    path: /ingester/ring
    method: GET
- name: all_user_stats_ingester
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method:
    - GET
    - POST
- name: query
  endpoint:
    path: /api/v1/query
    method:
    - GET
    - POST
- name: query_range
  endpoint:
    path: /api/v1/query_range
    method:
    - GET
    - POST
- name: query_exemplars
  endpoint:
    path: /api/v1/query_exemplars
    method:
    - GET
    - POST
- name: format_query
  endpoint:
    path: /api/v1/format_query
    method:
    - GET
    - POST
- name: parse_query
  endpoint:
    path: /api/v1/parse_query
    method:
    - GET
    - POST
- name: series
  endpoint:
    path: /api/v1/series
    method:
    - GET
    - POST
- name: labels
  endpoint:
    path: /api/v1/labels
    method:
    - GET
    - POST
- name: label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: metric_metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: user_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring
  endpoint:
    path: /ruler/ring
    method: GET
- name: rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: rules
  endpoint:
    path: /api/v1/rules
    method: GET
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: rules_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_config
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: delete_alertmanager_config
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: purger_delete_tenant
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: purger_delete_tenant_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenant_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: series
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: labels
  endpoint:
    path: /api/v1/labels
    method: GET,POST
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: query_exemplars
  endpoint:
    path: /api/v1/query_exemplars
    method: GET
    data_selector: ''
    params: {}
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET
- name: exemplar_query
  endpoint:
    path: /api/v1/query_exemplars
    method: GET
- name: get_series_by_label_matchers
  endpoint:
    path: /api/v1/series
    method: GET
- name: get_label_names
  endpoint:
    path: /api/v1/labels
    method: GET
- name: get_label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: /api/v1/query_exemplars
    method: GET,POST
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: parse_query
  endpoint:
    path: /api/v1/parse_query
    method: GET,POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: user_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: /api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: delete_tenant_config
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: user_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: series
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: records
- name: Proposals
  endpoint:
    path: /docs/proposals/
    method: GET
    data_selector: proposals
    params: {}
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof_heap
  endpoint:
    path: /debug/pprof/heap
    method: GET
- name: pprof_block
  endpoint:
    path: /debug/pprof/block
    method: GET
- name: pprof_profile
  endpoint:
    path: /debug/pprof/profile
    method: GET
- name: pprof_trace
  endpoint:
    path: /debug/pprof/trace
    method: GET
- name: pprof_goroutine
  endpoint:
    path: /debug/pprof/goroutine
    method: GET
- name: pprof_mutex
  endpoint:
    path: /debug/pprof/mutex
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: /api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: /api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: /api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: /api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: rules
  endpoint:
    path: /api/v1/rules
    method: GET
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: get_series_by_label_matchers
  endpoint:
    path: /api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: /api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: /api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: /api/v1/read
    method: POST
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
    data_selector: current_template_files
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
    data_selector: current_alertmanager_config
- name: rule_groups
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
    data_selector: rule_groups
- name: rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
    data_selector: rule_group
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: template_files
  endpoint:
    path: /configs/templates
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: index
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: user_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: multitenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: index_page
  endpoint:
    path: /
    method: GET
- name: configuration
  endpoint:
    path: /config
    method: GET
- name: runtime_configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingesters_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: build_information
  endpoint:
    path: <prometheus-http-prefix>/api/v1/status/buildinfo
    method: GET
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: Index
  endpoint:
    path: /
    method: GET
- name: Configuration
  endpoint:
    path: /config
    method: GET
- name: Runtime Configuration
  endpoint:
    path: /runtime_config
    method: GET
- name: Services status
  endpoint:
    path: /services
    method: GET
- name: Readiness probe
  endpoint:
    path: /ready
    method: GET
- name: Metrics
  endpoint:
    path: /metrics
    method: GET
- name: Remote write
  endpoint:
    path: /api/v1/push
    method: POST
- name: OTLP Receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: Distributor ring status
  endpoint:
    path: /distributor/ring
    method: GET
- name: Tenants stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: Ingester Flush blocks
  endpoint:
    path: /ingester/flush
    method:
    - GET
    - POST
- name: Ingester Shutdown
  endpoint:
    path: /ingester/shutdown
    method:
    - GET
    - POST
- name: Ingester tenants stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: Get tenant ingestion stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: Ruler ring status
  endpoint:
    path: /ruler/ring
    method: GET
- name: delete_tenant_config
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: remote_write
  endpoint:
    path: /api/v1/push
    method: POST
- name: otlp_receiver
  endpoint:
    path: /api/v1/otlp/v1/metrics
    method: POST
- name: tenants_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: ha_tracker_status
  endpoint:
    path: /distributor/ha_tracker
    method: GET
- name: flush_blocks
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: ingester_ring_status
  endpoint:
    path: /ingester/ring
    method: GET
- name: ingester_tenants_stats
  endpoint:
    path: /ingester/all_user_stats
    method: GET
- name: ingester_mode
  endpoint:
    path: /ingester/mode
    method: GET,POST
- name: instant_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query
    method: GET,POST
- name: range_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_range
    method: GET,POST
- name: exemplar_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/query_exemplars
    method: GET,POST
- name: format_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/format_query
    method: GET,POST
- name: parse_query
  endpoint:
    path: <prometheus-http-prefix>/api/v1/parse_query
    method: GET,POST
- name: get_series_by_label_matchers
  endpoint:
    path: <prometheus-http-prefix>/api/v1/series
    method: GET,POST
- name: get_label_names
  endpoint:
    path: <prometheus-http-prefix>/api/v1/labels
    method: GET,POST
- name: get_label_values
  endpoint:
    path: <prometheus-http-prefix>/api/v1/label/{name}/values
    method: GET
- name: get_metric_metadata
  endpoint:
    path: <prometheus-http-prefix>/api/v1/metadata
    method: GET
- name: remote_read
  endpoint:
    path: <prometheus-http-prefix>/api/v1/read
    method: POST
- name: get_tenant_ingestion_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: ruler_ring_status
  endpoint:
    path: /ruler/ring
    method: GET
- name: ruler_rules
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: list_rules
  endpoint:
    path: <prometheus-http-prefix>/api/v1/rules
    method: GET
- name: list_alerts
  endpoint:
    path: <prometheus-http-prefix>/api/v1/alerts
    method: GET
- name: list_rule_groups
  endpoint:
    path: /api/v1/rules
    method: GET
- name: get_rule_groups_by_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: GET
- name: get_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: GET
- name: set_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}
    method: POST
- name: delete_rule_group
  endpoint:
    path: /api/v1/rules/{namespace}/{groupName}
    method: DELETE
- name: delete_namespace
  endpoint:
    path: /api/v1/rules/{namespace}
    method: DELETE
- name: delete_tenant_configuration
  endpoint:
    path: /ruler/delete_tenant_config
    method: POST
- name: alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: alertmanager_ring_status
  endpoint:
    path: /multitenant_alertmanager/ring
    method: GET
- name: alertmanager_ui
  endpoint:
    path: /<alertmanager-http-prefix>
    method: GET
- name: alertmanager_delete_tenant_configuration
  endpoint:
    path: /multitenant_alertmanager/delete_tenant_config
    method: POST
- name: get_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: POST
- name: delete_alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: DELETE
- name: tenant_delete_request
  endpoint:
    path: /purger/delete_tenant
    method: POST
- name: tenant_delete_status
  endpoint:
    path: /purger/delete_tenant_status
    method: GET
- name: store_gateway_ring_status
  endpoint:
    path: /store-gateway/ring
    method: GET
- name: compactor_ring_status
  endpoint:
    path: /compactor/ring
    method: GET
- name: get_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: GET
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: get_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: get_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: validate_alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager/validate
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: index
  endpoint:
    path: /
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: runtime_config
  endpoint:
    path: /runtime_config
    method: GET
- name: services_status
  endpoint:
    path: /services
    method: GET
- name: readiness_probe
  endpoint:
    path: /ready
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: distributor_ring_status
  endpoint:
    path: /distributor/ring
    method: GET
- name: ingester_flush
  endpoint:
    path: /ingester/flush
    method: GET,POST
- name: ingester_shutdown
  endpoint:
    path: /ingester/shutdown
    method: GET,POST
- name: query_instant
  endpoint:
    path: /api/v1/query
    method: GET,POST
- name: query_range
  endpoint:
    path: /api/v1/query_range
    method: GET,POST
- name: template_files
  endpoint:
    path: /api/prom/configs/templates
    method: GET
- name: alertmanager_config
  endpoint:
    path: /api/prom/configs/alertmanager
    method: GET
- name: alertmanager_configuration
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: set_template_files
  endpoint:
    path: /api/prom/configs/templates
    method: POST
- name: set_rule_files
  endpoint:
    path: /api/prom/configs/rules
    method: POST
- name: set_alertmanager_config_file
  endpoint:
    path: /api/prom/configs/alertmanager
    method: POST
- name: deactivate_configs
  endpoint:
    path: /api/prom/configs/deactivate
    method: DELETE
- name: restore_configs
  endpoint:
    path: /api/prom/configs/restore
    method: POST
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: store-gateway
  endpoint:
    path: /docs/blocks-storage/store-gateway/
    method: GET
    data_selector: ''
    params: {}
- name: compactor
  endpoint:
    path: /docs/blocks-storage/compactor/
    method: GET
    data_selector: ''
    params: {}
- name: querier
  endpoint:
    path: /docs/blocks-storage/querier/
    method: GET
    data_selector: ''
    params: {}
- name: multitenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
    params: {}
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
    params: {}
- name: distributor_all_user_stats
  endpoint:
    path: /distributor/all_user_stats
    method: GET
- name: debug_fgprof
  endpoint:
    path: /debug/fgprof
    method: GET
- name: ha_tracker
  endpoint:
    path: /ha-tracker
    method: GET
- name: user_stats
  endpoint:
    path: /api/v1/user_stats
    method: GET
- name: chunks
  endpoint:
    path: /api/v1/chunks
    method: GET
- name: multitenant_alertmanager_status
  endpoint:
    path: /multitenant_alertmanager/status
    method: GET
- name: status
  endpoint:
    path: /status
    method: GET
- name: push
  endpoint:
    path: /api/v1/push
    method: POST
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
    params: {}
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
    params: {}
- name: Querier
  endpoint:
    path: /blocks-storage/querier/
    method: GET
- name: Store-gateway
  endpoint:
    path: /blocks-storage/store-gateway/
    method: GET
- name: Compactor
  endpoint:
    path: /blocks-storage/compactor/
    method: GET
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: alertmanager
  endpoint:
    path: /alertmanager
    method: GET
    data_selector: alerts
    params: {}
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: campaign_member
  endpoint:
    params:
      incremental: updated_at
- name: contact
  endpoint:
    params: {}
- name: multitenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: multitenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: alertmanager
  endpoint:
    path: /alertmanager
    method: GET
- name: ruler
  endpoint:
    path: /ruler
    method: GET
- name: ingester_config
  endpoint:
    params:
      flush_period: 1m0s
      retain_period: 5m0s
      max_chunk_idle_time: 5m0s
      max_stale_chunk_idle_time: 2m0s
      flush_op_timeout: 1m0s
      max_chunk_age: 12h0m0s
      chunk_age_jitter: '0'
      concurrent_flushes: 50
      spread_flushes: true
      rate_update_period: 15s
- name: querier_config
  endpoint:
    params:
      max_concurrent: 20
      batch_iterators: true
      ingester_streaming: true
      max_samples: 50000000
      default_evaluation_interval: 1m0s
- name: ruler_config
  endpoint:
    params:
      external_url: ''
      evaluation_interval: 1m0s
      poll_interval: 1m0s
      rule_path: /rules
      alertmanager_url: ''
      enable_alertmanager_discovery: false
      alertmanager_refresh_interval: 1m0s
      enable_alertmanager_v2: false
      notification_queue_capacity: 10000
      notification_timeout: 10s
      enable_sharding: false
      search_pending_for: 5m0s
      flush_period: 1m0s
- name: alertmanager_config
  endpoint:
    params:
      data_dir: data/
      external_url: ''
      poll_interval: 15s
      cluster_bind_address: 0.0.0.0:9094
      cluster_advertise_address: ''
      peer_timeout: 15s
      fallback_config_file: ''
      auto_webhook_root: ''
- name: table_manager_config
  endpoint:
    params:
      poll_interval: 2m0s
      creation_grace_period: 10m0s
      enable_ondemand_throughput_mode: false
      enable_inactive_throughput_on_demand_mode: false
- name: multitenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: table_manager
  endpoint:
    params:
      creation_grace_period: 10m0s
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: records
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: records
- name: rules
  endpoint:
    path: /rules
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: multitenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: table_manager
  endpoint:
    path: /table_manager
    method: GET
    data_selector: records
    params: {}
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: alertmanager
  endpoint:
    path: /alertmanager
    method: GET
- name: prometheus
  endpoint:
    path: /prometheus
    method: GET
- name: metadata
  endpoint:
    path: /api/v1/metadata
    method: GET
- name: ingester_config
  endpoint:
    params:
      flush_period: 1m0s
      retain_period: 5m0s
      max_chunk_idle_time: 5m0s
      max_stale_chunk_idle_time: 2m0s
      flush_op_timeout: 1m0s
      max_chunk_age: 12h0m0s
      chunk_age_jitter: '0'
      concurrent_flushes: 50
      spread_flushes: true
      rate_update_period: 15s
- name: querier_config
  endpoint:
    params:
      max_concurrent: 20
      batch_iterators: true
      ingester_streaming: true
      max_samples: 50000000
      default_evaluation_interval: 1m0s
- name: ruler_config
  endpoint:
    params:
      external_url: ''
      evaluation_interval: 1m0s
      poll_interval: 1m0s
      rule_path: /rules
      alertmanager_url: ''
      enable_alertmanager_discovery: false
      alertmanager_refresh_interval: 1m0s
      enable_alertmanager_v2: false
      notification_queue_capacity: 10000
      notification_timeout: 10s
      enable_sharding: false
      search_pending_for: 5m0s
      flush_period: 1m0s
- name: alertmanager_config
  endpoint:
    params:
      data_dir: data/
      external_url: ''
      poll_interval: 15s
      cluster_bind_address: 0.0.0.0:9094
      cluster_advertise_address: ''
      peer_timeout: 15s
      fallback_config_file: ''
      auto_webhook_root: ''
- name: table_manager_config
  endpoint:
    params:
      poll_interval: 2m0s
      creation_grace_period: 10m0s
      enable_ondemand_throughput_mode: false
      enable_inactive_throughput_mode: false
- name: storage_config
  endpoint:
    params:
      dynamodb_url: ''
- name: tenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
- name: tenant_ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
- name: multitenant_alertmanager_configs
  endpoint:
    path: /multitenant_alertmanager/configs
    method: GET
    data_selector: configs
- name: ruler_rule_groups
  endpoint:
    path: /ruler/rule_groups
    method: GET
    data_selector: rule_groups
- name: ruler
  endpoint:
    path: /ruler
    method: GET
    data_selector: rules
    params: {}
- name: alertmanager
  endpoint:
    path: /alertmanager
    method: GET
    data_selector: alerts
    params: {}
- name: ingester_config
  endpoint:
    path: /ingester
    method: GET
    data_selector: records
    params: {}
- name: querier_config
  endpoint:
    path: /querier
    method: GET
    data_selector: records
    params: {}
- name: ruler_config
  endpoint:
    path: /ruler
    method: GET
    data_selector: records
    params: {}
- name: alertmanager_config
  endpoint:
    path: /alertmanager
    method: GET
    data_selector: records
    params: {}
- name: table_manager_config
  endpoint:
    path: /table-manager
    method: GET
    data_selector: records
    params: {}
- name: storage_config
  endpoint:
    path: /storage
    method: GET
    data_selector: records
    params: {}
- name: rule
  endpoint:
    path: /rules
    method: GET
    data_selector: rules
    params: {}
notes:
- Multi-tenancy can be enabled/disabled via the CLI flag '-auth.enabled'.
- Requires authentication for certain endpoints.
- Multi-tenancy can be enabled/disabled via the CLI flag -auth.enabled or its respective
  YAML config option.
- Requires authentication.
- When multi-tenancy is enabled, endpoints requiring authentication are expected to
  be called with the X-Scope-OrgID HTTP request header set to the tenant ID.
- Multi-tenancy can be enabled/disabled via the CLI flag `-auth.enabled`.
- Multi-tenancy is enabled via CLI flag `-auth.enabled` or YAML config option.
- When multi-tenancy is enabled, the X-Scope-OrgID header must be set to the tenant
  ID.
- Multi-tenancy can be enabled/disabled via the CLI flag -auth.enabled.
- When multi-tenancy is enabled, include X-Scope-OrgID header with tenant ID.
- Multi-tenancy can be enabled/disabled via -auth.enabled CLI flag.
- Cortex can be configured to use local storage or cloud storage (S3, GCS, and Azure).
- Request authentication and authorization are handled by an external reverse proxy.
- Query frontend can also be used with any Prometheus-API compatible service.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Cortex
- Cortex is an OSS licensed project as Apache License 2.0
- When multi-tenancy is enabled, endpoints requiring authentication are expected to
  be called with the `X-Scope-OrgID` HTTP request header set to the tenant ID.
- Multi-tenancy can be enabled/disabled via the CLI flag `-auth.enabled` or its respective
  YAML config option.
- Local file disclosure vulnerability in OpsGenie configuration has been fixed.
- Rename oltp_endpoint to otlp_endpoint to match opentelemetry spec and lib name.
- Log warn level on push requests when they have status code 4xx.
- Change HTTP status code from 503/422 to 499 if a request is canceled.
- This release removes support for chunks storage. See below for more.
- 'Query-Frontend: deprecate `-querier.compress-http-responses` in favour of `-api.response-compression-enabled`.'
- 'Querier: deprecated `-store.max-look-back-period`. You should use `-querier.max-query-lookback`
  instead.'
- 'Blocks storage: increased `-blocks-storage.bucket-store.chunks-cache.attributes-ttl`
  default from `24h` to `168h` (1 week).'
- 'Blocks storage: the config option `-blocks-storage.bucket-store.index-cache.postings-compression-enabled`
  has been deprecated and postings compression is always enabled.'
- 'Ruler: gRPC message size default limits on the Ruler-client side have changed.'
- 'Distributor/Ingester: Provide ability to not overflow writes in the presence of
  a leaving or unhealthy ingester.'
- 'Query-frontend: introduced query statistics logged in the query-frontend when enabled
  via `-frontend.query-stats-enabled=true`.'
- 'Experimental TSDB: added metrics useful to alert on critical conditions of the
  blocks storage.'
- WAL support for chunks is now considered to be production-ready.
- Deprecate `-blocks-storage.tsdb.wal-compression-enabled` flag (use `blocks-storage.tsdb.wal-compression-type`
  instead).
- Change OTLP handler to be consistent with the Prometheus OTLP handler.
- Change all max async concurrency default values `50` to `3`
- Enable Compactor and Alertmanager in target all.
- 'gRPC Client: Expose connection timeout and set default to value to 5s.'
- Enable store gateway zone stable shuffle sharding by default.
- Remove support for chunks storage entirely.
- Remove support for alertmanager and ruler legacy store configuration.
- Disables TSDB isolation.
- Drops support Prometheus 1.x rule format on configdb.
- Removes -ingester.stream-chunks-when-using-blocks experimental flag and stream chunks
  by default when querier.ingester-streaming is enabled.
- 'Memberlist: Expose default configuration values to the command line options.'
- Some files and directories created by Cortex components on local disk now have stricter
  permissions.
- The metric cortex_deprecated_flags_inuse_total has been renamed to deprecated_flags_inuse_total.
- The blocks storage compactor runs a migration task at startup in this version, which
  can take many minutes and use a lot of RAM.
- Turn this off after first run.
- 'OpenStack Swift: the default value for the `-ruler.storage.swift.container-name`
  and `-swift.container-name` config options has changed from `cortex` to empty string.'
- Enforced the HTTP method required by some API endpoints which did (incorrectly)
  allow any method before that.
- TLS configuration for gRPC, HTTP and etcd clients is now marked as experimental.
- Cassandra backend support is now GA (stable).
- Blocks storage is now GA (stable).
- 'Ingester: Removed deprecated untyped record from chunks WAL.'
- Distributor API endpoints are no longer served unless target is set to distributor
  or all.
- Increase the default Cassandra client replication factor to 3.
- 'Blocks storage: removed the support to transfer blocks between ingesters on shutdown.'
- The buckets for the cortex_chunk_store_index_lookups_per_query metric have been
  changed to 1, 2, 4, 8, 16.
- 'Blocks storage: the operation label value getrange has changed into get_range for
  the metrics thanos_store_bucket_cache_operation_requests_total and thanos_store_bucket_cache_operation_hits_total.'
- 'Experimental Delete Series: /api/v1/admin/tsdb/delete_series and /api/v1/admin/tsdb/cancel_delete_request
  purger APIs to return status code 204 instead of 200 for success.'
- 'Experimental blocks storage: The max concurrent queries against the long-term storage
  is now a limit shared across all tenants.'
- Query with no metric name that has previously resulted in HTTP status code 500 now
  returns status code 422 instead.
- The query-frontend now requires the -querier.default-evaluation-interval config
  to be set to the same value of the querier.
- When the querier receives a /series request with a time range older than the data
  stored in the ingester, it now ignores the requested time range and returns known
  series anyway instead of returning an empty response.
- Fixed an edge case leading to an invalid CQL query when querying the index on a
  Cassandra store.
- Increment series per metric when recovering from WAL or transfer.
- Fixed wrong number of arguments for 'mget' command Redis error when a query has
  no chunks to lookup from storage.
- Automatically remove old tmp checkpoints, fixing a potential disk space leak after
  an ingester crashes.
- This experimental blocks storage in Cortex 1.0.0 has a bug which may lead to the
  error cannot iterate chunk for series when running queries.
- Fix potential data corruption in cases of timeout between distributors and ingesters.
- 'Cortex chunks storage has been deprecated and it’s now in maintenance mode: all
  Cortex users are encouraged to migrate to the blocks storage.'
- 'Fix for CVE-2021-31232: Local file disclosure vulnerability when -experimental.alertmanager.enable-api
  is used.'
- FramedSnappy encoding support has been removed from Push and Remote Read APIs.
- 'Ruler: removed the flag `-ruler.evaluation-delay-duration-deprecated` which was
  deprecated in 1.4.0.'
- Some API endpoints require specific HTTP methods.
- TLS configuration for gRPC, HTTP and etcd clients is now marked as experimental.
  These features are not yet fully baked, and we expect possible small breaking changes
  in Cortex 1.5.
- Experimental API changes may affect integration.
- Change default value of `-blocks-storage.bucket-store.index-cache.multilevel.max-async-concurrency`
  from `50` to `3`
- This release removes support for chunks storage.
- Before upgrading to this release, you should also remove any deprecated chunks-related
  configuration.
- Some files and directories created by Cortex components on local disk now have stricter
  permissions, and are only readable by owner, but not group or others.
- Add support for SNS Receiver.
- Cortex now fails fast on startup if unable to connect to the ring backend.
- Multi-tenancy can be enabled/disabled via the CLI flag '-auth.enabled' or its respective
  YAML config option.
- Requires authentication for all endpoints.
- Note the blocks storage compactor runs a migration task at startup in this version,
  which can take many minutes and use a lot of RAM.
- Queries can be federated across multiple tenants.
- The default value of -blocks-storage.bucket-store.sync-interval has been changed
  from 5m to 15m.
- 'Blocks storage: update the default HTTP configuration values for the S3 client
  to the upstream Thanos default values.'
- 'Query-frontend: POST requests whose body size exceeds 10MiB will be rejected.'
- Clarify limitations of the /api/v1/series, /api/v1/labels and /api/v1/label/{name}/values
  endpoints.
- The query-frontend now requires the `-querier.default-evaluation-interval` config
  to be set to the same value of the querier.
- 'Experimental Support Parquet format: Implement parquet converter service to convert
  a TSDB block into Parquet and Parquet Queryable.'
- Implement versioned transactions for writes to DynamoDB ring.
- 'Configsdb: Ruler configs doesn’t work. Remove all configs from postgres database
  that have format Prometheus 1.x rule format before upgrading to v1.14.0.'
- 'Fix for CVE-2021-31232: Local file disclosure vulnerability when -experimental.alertmanager.enable-api
  is used. The HTTP basic auth password_file can be used as an attack vector to send
  any file content via a webhook. The alertmanager templates can be used as an attack
  vector to send any file content because the alertmanager can load any text file
  specified in the templates list.'
- Queries can be federated across multiple tenants. The tenants IDs involved need
  to be specified separated by a | character in the X-Scope-OrgID request header.
- Experimental features may change without notice.
- Some endpoints may have specific requirements for query parameters.
- This release brings the usual mix of bugfixes and improvements.
- 'This experimental blocks storage in Cortex 1.0.0 has a bug which may lead to the
  error cannot iterate chunk for series when running queries. This bug has been fixed
  in #2400. If you’re running the experimental blocks storage, please build Cortex
  from master.'
- Target info metric is enabled by default and can be disabled via -distributor.otlp.disable-target-info=true
  flag
- Convert all attributes to labels is disabled by default and can be enabled via -distributor.otlp.convert-all-attributes=true
  flag
- Upgraded objstore dependency and support Azure Workload Identity Authentication.
- Added connection_string to support authenticating via SAS token.
- Marked msi_resource config as deprecating.
- Local file disclosure vulnerability when `-experimental.alertmanager.enable-api`
  is used.
- Queries can be federated across multiple tenants. The tenants IDs involved need
  to be specified separated by a `|` character in the `X-Scope-OrgID` request header.
- Improved shuffle sharding support in the write path.
- 'Experimental TSDB: fixed chunk data corruption when querying back series using
  the experimental blocks storage.'
- Update Go version to 1.21.3
- The metric `cortex_deprecated_flags_inuse_total` has been renamed to `deprecated_flags_inuse_total`.
- This guide uses `grafana-datasource-docker.yaml` which is specifically configured
  for the single binary Docker Compose deployment. For Kubernetes/microservices mode,
  use `grafana-datasource.yaml` instead.
- The default value for the -blocks-storage.bucket-store.sync-interval has been changed
  from 5m to 15m.
- This guide uses `grafana-datasource-docker.yaml` which is specifically configured
  for the single binary Docker Compose deployment.
- This mode is not recommended or intended for production environments or production
  use.
- Each HTTP request must include a header specifying a tenant ID.
- 'Experimental Ruler: Rule groups persisted to object storage using the experimental
  API have an updated object key encoding to better handle special characters.'
- Internally, some components are based on Thanos, but no Thanos knowledge is required
  in order to run it.
- HA Tracker flags were renamed to provide more clarity
- You can specify “heap ballast” to reduce Go GC Churn
- HA Tracker no longer always makes a request to Consul/Etcd when a request is not
  from the active replica
- Queries are now correctly cancelled by the query-frontend
- target_info metric is enabled by default and can be disabled via -distributor.otlp.disable-target-info=true
  flag
- Some changes include renaming metrics and adding new configuration flags.
- 'Compactor: Added cortex_compactor_runs_interrupted_total to separate compaction
  interruptions from failures.'
- Some features are experimental and may require additional configuration.
- Compactor is now required when running a Cortex cluster with the blocks storage.
- Enable native histogram ingestion via -blocks-storage.tsdb.enable-native-histograms
  flag.
- Support sending native histogram samples to Ingester.
- Zone-awareness replication for time-series now should be explicitly enabled.
- 'Azure Storage: Upgraded objstore dependency and support Azure Workload Identity
  Authentication.'
- 'Experimental: OTLP ingestion.'
- Experimental features may have limitations and could change in future releases.
- Log warn level on push requests when they have status code 4xx. Do not log if status
  is 429.
- Use the default OTEL trace sampler when `-tracing.otel.exporter-type` is set to
  `awsxray`.
- When the querier receives a `/series` request with a time range older than the data
  stored in the ingester, it now ignores the requested time range and returns known
  series anyway instead of returning an empty response.
- Alertmanager now removes local files after Alertmanager is no longer running for
  removed or resharded user.
- Alertmanager now stores local files in per-tenant folders.
- Support for migration to new hierarchy will be removed in Cortex 1.11.
- 'Ruler: deprecated `-ruler.storage.*` CLI flags in favour of `-ruler-storage.*`.
  The deprecated config will be removed in Cortex 1.11.'
- 'Alertmanager: deprecated `-alertmanager.storage.*` CLI flags in favour of `-alertmanager-storage.*`.
  This change doesn’t apply to `alertmanager.storage.path` and `alertmanager.storage.retention`.
  The deprecated config will be removed in Cortex 1.11.'
- 'Blocks storage: removed the config option `-blocks-storage.bucket-store.index-cache.postings-compression-enabled`,
  which was deprecated in Cortex 1.6. Postings compression is always enabled.'
- 'Querier: removed the config option `-store.max-look-back-period`, which was deprecated
  in Cortex 1.6.'
- 'Query Frontend: removed the config option `-querier.compress-http-responses`, which
  was deprecated in Cortex 1.6.'
- 'Alertmanager: Don’t expose cluster information to tenants via the `/alertmanager/api/v1/status`
  API endpoint when operating with clustering enabled.'
- 'Ingester: don’t update internal “last updated” timestamp of TSDB if tenant only
  sends invalid samples.'
- Require explicit flag `-<prefix>.tls-enabled` to enable TLS in GRPC clients.
- Removed `-querier.split-queries-by-day` (deprecated in Cortex 0.4.0). Please use
  `-querier.split-queries-by-interval` instead.
- The chunks pool controlled by `-blocks-storage.bucket-store.max-chunk-pool-bytes`
  is now shared across all tenants.
- Return error code 400 instead of 429 when per-user/per-tenant series/metadata limits
  are reached.
- Add `reason` label to `cortex_compactor_blocks_marked_for_deletion_total` metric.
- The `DELETE /api/v1/alerts` is now idempotent. No error is returned if the alertmanager
  config doesn’t exist.
- Add a separate set of configuration options to configure the ruler storage backend
  under the `-ruler-storage.` flag prefix.
- Add a separate set of configuration options to configure the alertmanager storage
  backend under the `-alertmanager-storage.` flag prefix.
- Adds support to S3 server-side encryption using KMS.
- Enable `@ <timestamp>` modifier in PromQL using the new `-querier.at-modifier-enabled`
  flag.
- 'Query Frontend: deprecate `-querier.compress-http-responses` in favour of `-api.response-compression-enabled`.'
- 'Ruler: gRPC message size default limits on the Ruler-client side have changed:
  limit for outgoing gRPC messages has changed from 2147483647 to 16777216 bytes,
  limit for incoming gRPC messages has changed from 4194304 to 104857600 bytes.'
- 'API: Add GZIP HTTP compression to the API responses. Compression can be enabled
  via `-api.response-compression-enabled`.'
- Added zone-awareness support on queries. When zone-awareness is enabled, queries
  will still succeed if all ingesters in a single zone will fail.
- 'Blocks storage ingester: exported more TSDB-related metrics.'
- Exposed gRPC keepalive policy options by gRPC server.
- Fixed issue where fatal errors and various log messages where not logged.
- Queries can be federated across multiple tenants. The tenants IDs involved need
  to be specified separated by a '|' character in the 'X-Scope-OrgID' request header.
- Dropped 'blank Alertmanager configuration; using fallback' message from Info to
  Debug level.
- Some API endpoints require explicit HTTP methods that were previously more permissive.
- Zone-awareness replication for time-series now should be explicitly enabled in the
  distributor.
- Dropped “blank Alertmanager configuration; using fallback” message from Info to
  Debug level.
- Removed the deprecated CLI flag -config-yaml.
- Enforced the HTTP method required by some API endpoints.
- Renamed CLI flags to configure the network interface names from which automatically
  detect the instance IP.
- Increased default -<prefix>.redis.timeout from 100ms to 500ms.
- 'Shuffle sharding: added support for shuffle-sharding queriers in the query-frontend.'
- 'Shuffle sharding: added support for shuffle-sharding ingesters on the read path.'
- Added OpenStack Swift support to blocks storage.
- Support for Cassandra client SSL certificates.
- 'Experimental TSDB: Series limit per user and per metric now work in TSDB blocks.'
- 'OTLP: Change OTLP handler to be consistent with the Prometheus OTLP handler.'
- Enable consistent reads to Consul.
- Change all max async concurrency default values 50 to 3
- Change default value of -blocks-storage.bucket-store.index-cache.multilevel.max-async-concurrency
  from 50 to 3
- Update the cortex_ingester_inflight_push_requests metric to represent the maximum
  number of inflight requests recorded in the last minute.
- 'Ruler: Add an experimental flag -ruler.query-response-format to retrieve query
  response as a proto format.'
- 'Ruler: Pagination support for List Rules API.'
- 'Query Frontend/Querier: Add protobuf codec -api.querier-default-codec and the option
  to choose response compression type -querier.response-compression.'
- 'Ruler: Experimental: Add ruler.frontend-address to allow query to query frontends
  instead of ingesters.'
- 'Ruler: Minimize chances of missed rule group evaluations that can occur due to
  OOM kills, bad underlying nodes, or due to an unhealthy ruler that appears in the
  ring as healthy. This feature is enabled via -ruler.enable-ha-evaluation flag.'
- 'Store Gateway: Add an in-memory chunk cache.'
- 'Chunk Cache: Support multi level cache and add metrics.'
- 'Distributor: Accept multiple HA Tracker pairs in the same request.'
- 'Ruler: Add support for per-user external labels'
- 'Query Frontend: Support a metadata federated query when -tenant-federation.enabled=true.'
- 'Query Frontend: Support an exemplar federated query when -tenant-federation.enabled=true.'
- 'Ingester/StoreGateway: Add support for cache regex query matchers via -ingester.matchers-cache-max-items
  and -blocks-storage.bucket-store.matchers-cache-max-items.'
- Add TLS configs to consul.
- Add option ingester.disable-chunk-trimming to disable chunk trimming.
- Add blocks-storage.tsdb.wal-compression-type to support zstd wal compression type.
- Added `connection_string` to support authenticating via SAS token.
- Marked `msi_resource` config as deprecating.
- Setting these explicitly to zero will no longer cause the default to be used.
- If the default is desired, then do set the option.
- 'CHANGE: The metric `memberlist_kv_store_value_bytes` has been removed due to values
  no longer being stored in-memory as encoded bytes.'
- 'Blocks storage: compactor is now required when running a Cortex cluster with the
  blocks storage, because it also keeps the bucket index updated.'
- Experimental features may have different behaviors and should be used with caution.
- 'Experimental blocks storage: the store-gateway service is required in a Cortex
  cluster running with the experimental blocks storage.'
- 'Experimental TSDB: removed `-experimental.tsdb.bucket-store.binary-index-header-enabled`
  flag. Now the binary index-header is always enabled.'
- 'Experimental Delete Series: Make delete request cancellation duration configurable.'
- '`target_info` metric is enabled by default and can be disabled via `-distributor.otlp.disable-target-info=true`
  flag'
- Convert all attributes to labels is disabled by default and can be enabled via `-distributor.otlp.convert-all-attributes=true`
  flag
- You can specify the attributes converted to labels via `-distributor.promote-resource-attributes`
  flag. Supported only if `-distributor.otlp.convert-all-attributes=false`
- Timeout for requests to Weave Cloud configs service is 5s
- Add dynamic interval size for query splitting.
- Support Prometheus remote write 2.0.
- Add new `-ruler.query-stats-enabled` which when enabled will report the `cortex_ruler_query_seconds_total`
  as a per-user metric.
- Implemented experimental feature to use gRPC stream connection for push requests.
- Support for percentage based sharding for compactors.
- Allow choosing PromQL engine via header.
- Update the `cortex_ingester_inflight_push_requests` metric to represent the maximum
  number of inflight requests recorded in the last minute.
- Removed the flags `-<prefix>.grpc-use-gzip-compression` which were deprecated in
  1.3.0.
- It's not required to set `-frontend.query-stats-enabled=true` in the querier anymore
  to enable query statistics logging in the query-frontend.
- Block deletion marks are now stored in a per-tenant global markers/ location.
- Configured replica label is now verified against label value length limit.
- The `extend_writes` field in YAML configuration has moved from `lifecycler` to `distributor_config`.
- Deprecated `-cluster.` CLI flags in favor of their `-alertmanager.cluster.` equivalent.
- The default value of `-blocks-storage.bucket-store.sync-interval` has been changed
  from `5m` to `15m`.
- -blocks-storage.s3.http.idle-conn-timeout is set 90 seconds.
- -blocks-storage.s3.http.response-header-timeout is set to 2 minutes.
- -distributor.sharding-strategy CLI flag introduced to explicitly specify sharding
  strategy in write path
- -distributor.zone-awareness-enabled CLI flag should be explicitly enabled for zone-awareness
  replication
- Experimental features may have limitations and require careful testing.
- Add an experimental `tenant-federation.regex-matcher-enabled` flag.
- User discovery is based on scanning block storage.
- Cortex 0.7.0 is a major step forward the upcoming 1.0 release.
- Introduces some breaking changes.
- Cleaned up some configuration options in preparation for the Cortex 1.0.0 release.
- Cortex 0.4.0 is the last version that can *write* denormalised tokens. Cortex 0.5.0
  and above always write normalised tokens.
- Cortex 0.6.0 is the last version that can *read* denormalised tokens. Starting with
  Cortex 0.7.0 only normalised tokens are supported.
- Add support for percentage based sharding for compactors.
- 'Ruler: Add new `-ruler.query-stats-enabled` which when enabled will report the
  `cortex_ruler_query_seconds_total` as a per-user metric.'
- 'Query Frontend: Add `cortex_query_fetched_series_total` and `cortex_query_fetched_chunks_bytes_total`
  per-user counters.'
- 'AlertManager: Add support for SNS Receiver.'
- 'Distributor: Add label `status` to metric `cortex_distributor_ingester_append_failures_total`.'
- 'Queries: Added `present_over_time` PromQL function, also some TSDB optimisations.'
- Add timeout for waiting on compactor to become ACTIVE in the ring.
- Support memcached auto-discovery via `auto-discovery` flag.
- Ensure that a remote storage backend is configured for Alertmanager to store state
  using -alertmanager-storage.backend, and flags related to the backend. Note that
  the local and configdb storage backends are not supported.
- Block deletion marks are now stored in a per-tenant global markers/ location too.
- GZIP HTTP compression can be enabled via -api.response-compression-enabled.
- -distributor.sharding-strategy CLI flag introduced to explicitly specify sharding
  strategy in the write path.
- -distributor.zone-awareness-enabled CLI flag must be explicitly enabled for zone-aware
  replication.
- 'Experimental TSDB: removed -experimental.tsdb.bucket-store.binary-index-header-enabled
  flag. Now the binary index-header is always enabled.'
- 'Experimental Memberlist ring: randomize gossip node names to avoid conflicts when
  running multiple clients on the same host, or reusing host names.'
- TLS server validation is now enabled by default, a new parameter tls_insecure_skip_verify
  can be set to true to skip validation optionally.
- Backporting upgrade to go 1.22.7 to patch CVE-2024-34155, CVE-2024-34156, CVE-2024-34158
- Querying long-term store for labels is always enabled.
- If `native-histograms` feature is enabled in monitoring Prometheus then the metric
  name needs to be updated in your dashboards.
- Cortex 0.7.0 is a major step forward the upcoming 1.0 release. In this release,
  we’ve got 164 contributions from 26 authors.
- Please be aware that Cortex 0.7.0 introduces some breaking changes. You’re encouraged
  to read all the CHANGE entries below before upgrading your Cortex cluster.
- Cortex 0.6.0 is the last version that can *read* denormalised tokens.
- 'Fix for CVE-2021-31232: Local file disclosure vulnerability when -experimental.alertmanager.enable-api
  is used. The HTTP basic auth password_file can be used as an attack vector to send
  any file content via a webhook.'
- -distributor.sharding-strategy CLI flag introduced to explicitly specify sharding
  strategy in the write path
- -experimental.distributor.user-subring-size flag renamed to -distributor.ingestion-tenant-shard-size
- user_subring_size limit YAML config option renamed to ingestion_tenant_shard_size
- -distributor.zone-awareness-enabled CLI flag introduced to explicitly enable zone-awareness
  replication in the distributor
- 'Fix for CVE-2021-31232: Local file disclosure vulnerability when `-experimental.alertmanager.enable-api`
  is used. The HTTP basic auth `password_file` can be used as an attack vector to
  send any file content via a webhook. The alertmanager templates can be used as an
  attack vector to send any file content because the alertmanager can load any text
  file specified in the templates list.'
- The oldest Prometheus version supported in the remote write is 1.7.
- Block deletion marks are now stored in a per-tenant global markers location.
- 'This experimental blocks storage in Cortex 1.0.0 has a bug which may lead to the
  error cannot iterate chunk for series when running queries. This bug has been fixed
  in #2400.'
- WAL support for chunks is now considered to be production-ready
- Ensure that a remote storage backend is configured for Alertmanager to store state
  using `-alertmanager-storage.backend`, and flags related to the backend.
- Cortex 0.4.0 is the last version that can *write* denormalised tokens.
- Cortex 0.5.0 and above always write normalised tokens.
- You can specify the attributes converted to labels via -distributor.promote-resource-attributes
  flag. Supported only if -distributor.otlp.convert-all-attributes=false
- Queries can be federated across multiple tenants. The tenants IDs involved need
  to be specified separated by a '|' character in the X-Scope-OrgID request header.
- 'Blocksconvert – Builder: download plan file locally before processing it.'
- 'Blocksconvert – Cleaner: added new tool for deleting chunks data.'
- 'Blocksconvert – Scanner: support for scanning specific date-range only.'
- 'Blocksconvert – Scanner: metrics for tracking progress.'
- 'Blocksconvert – Builder: retry block upload before giving up.'
- 'Blocksconvert – Scanner: upload plans concurrently.'
- The root level YAML config has changed from tsdb to blocks_storage.
- Metric `cortex_kv_request_duration_seconds` now includes `name` label to denote
  which client is being used as well as the `backend` label to denote the KV backend
  implementation in use.
- Query Frontend now uses Round Robin to choose a tenant queue to service next.
- The biggest change is that WAL support for chunks is now considered to be production-ready!
- The tenants IDs involved need to be specified separated by a `|` character in the
  `X-Scope-OrgID` request header.
- The gRPC streaming for ingesters doesn’t work when using the experimental TSDB blocks
  storage.
- -distributor.sharding-strategy CLI flag introduced to specify sharding strategy.
- -experimental.distributor.user-subring-size flag renamed to -distributor.ingestion-tenant-shard-size.
- user_subring_size limit YAML config option renamed to ingestion_tenant_shard_size.
- -distributor.zone-awareness-enabled CLI flag introduced to enable zone-aware replication.
- -config-yaml flag removed, use -schema-config-file instead.
- -frontend.max-body-size customisable to control max body size for POST requests.
- Experimental features may have limitations and should be used with caution.
- Ensure that a remote storage backend is configured for Alertmanager to store state
  using `-alertmanager-storage.backend`, and flags related to the backend. Note that
  the `local` and `configdb` storage backends are not supported.
- Change all max async concurrency default values from 50 to 3
- Omit empty data, errorType and error fields in API response.
- Add GZIP HTTP compression to the API responses.
- Enabled caching of meta.json attributes.
- Experimental blocks storage requires the store-gateway service.
- Cortex 0.7.0 introduces some breaking changes.
- You’re encouraged to read all the CHANGE entries below before upgrading your Cortex
  cluster.
- Cortex 0.6.0 is the last version that can *read* denormalised tokens. Starting with
  Cortex 0.7.0 only normalised tokens are supported, and ingesters writing denormalised
  tokens to the ring are ignored by distributors.
- -distributor.sharding-strategy CLI flag introduced to specify sharding strategy
  in write path.
- -experimental.distributor.user-subring-size renamed to -distributor.ingestion-tenant-shard-size.
- -distributor.zone-awareness-enabled CLI flag introduced to enable zone-aware replication
  in distributor.
- -config-yaml CLI flag removed, use -schema-config-file instead.
- -compactor.ring.instance-interface renamed to -compactor.ring.instance-interface-names.
- -store-gateway.sharding-ring.instance-interface renamed to -store-gateway.sharding-ring.instance-interface-names.
- -distributor.ring.instance-interface renamed to -distributor.ring.instance-interface-names.
- -ruler.ring.instance-interface renamed to -ruler.ring.instance-interface-names.
- -<prefix>.redis.enable-tls renamed to -<prefix>.redis.tls-enabled.
- enable_tls YAML config option renamed to tls_enabled.
- default -<prefix>.redis.timeout increased from 100ms to 500ms.
- max body size can be customized via -frontend.max-body-size.
- Fixed a bug with `api/v1/query_range` where no responses would return null values
  for `result` and empty values for `resultType.
- Experimental TSDB features are subject to change.
- Be aware that Cortex 0.7.0 introduces some breaking changes.
- Enable Compactor and Alertmanager in target all
- Remove support for chunks storage entirely. If you are using chunks storage on a
  previous version, you must migrate your data on version 1.13.1 or earlier.
- The default value for -blocks-storage.bucket-store.sync-interval has been changed
  from 5m to 15m.
- 'Query-frontend: POST requests whose body size exceeds 10MiB will be rejected. The
  max body size can be customised via -frontend.max-body-size.'
- Some endpoints have limitations regarding the data returned.
- DynamoDB table management requests per second limit.
- DynamoDB rate cap to back off when throttled.
- Experimental features may have limited functionality and require additional configuration.
- 'gRPC Client: Expose connection timeout and set default to value to 5s'
- Exemplars are now emitted for all gRPC calls and many operations tracked by histograms.
- The frontend component now does not cache results if it finds a `Cache-Control`
  header and if one of its values is `no-store`.
- Flags changed with transition to upstream Prometheus rules manager.
- Runtime config is simply a file that is reloaded by Cortex every couple of seconds.
- Cortex now rejects data with duplicate labels.
- 'Experimental: Write-Ahead-Log added in ingesters for more data reliability against
  ingester crashes.'
- The distributor can now drop labels from samples per user via the `distributor.drop-label`
  flag.
- Added support for Microsoft Azure blob storage to be used for storing chunk data.
- Added readiness probe endpoint`/ready` to queriers.
- Added support to store ring tokens to a file and read it back on startup.
- 'Experimental TSDB: Added `/series` API endpoint support with TSDB blocks storage.'
- 'Experimental TSDB: Added TSDB blocks `compactor` component.'
- This is an experimental feature, which can be enabled by setting -tenant-federation.enabled=true
  on all Cortex services.
- -distributor.sharding-strategy CLI flag introduced to explicitly specify which sharding
  strategy should be used in the write path
- -distributor.zone-awareness-enabled CLI flag added to explicitly enable zone-awareness
  replication for time-series
- Removed the deprecated CLI flag -config-yaml; use -schema-config-file instead
- POST requests whose body size exceeds 10MiB will be rejected; max body size can
  be customised via -frontend.max-body-size.
- Shuffle sharding now should be explicitly enabled via -distributor.sharding-strategy
  CLI flag.
- Added shuffle sharding support to ruler.
- Added -<prefix>.redis.tls-insecure-skip-verify flag.
- Experimental features may be subject to change.
- Fixed `wrong number of arguments for 'mget' command` Redis error when a query has
  no chunks to lookup from storage.
- Add new `-ruler.query-stats-enabled` which when enabled will report the `cortex_ruler_query_seconds_total`
  as a per-user metric that tracks the sum of the wall time of executing queries in
  the ruler in seconds.
- Add `cortex_query_fetched_series_total` and `cortex_query_fetched_chunks_bytes_total`
  per-user counters to expose the number of series and bytes fetched as part of queries.
- Files stored by Alertmanager previously are migrated to new hierarchy.
- Support for this migration will be removed in Cortex 1.11.
- Experimental features may be unstable and should be used with caution.
- Update Go version to 1.20.4.
- -distributor.sharding-strategy CLI flag introduced to explicitly specify which sharding
  strategy should be used in the write path.
- -distributor.zone-awareness-enabled CLI flag required to enable zone-awareness replication
  for time-series.
- Cortex 0.4.0 is the last version that can write denormalised tokens.
- Prevent path traversal attack from users able to control the HTTP header `X-Scope-OrgID`.
- 'Ingester: Remove `-querier.query-store-for-labels-enabled` flag. Querying long-term
  store for labels is always enabled.'
- 'Server: Instrument `cortex_request_duration_seconds` metric with native histogram.'
- Ensure that a remote storage backend is configured for Alertmanager to store state
  using -alertmanager-storage.backend, and flags related to the backend.
- It’s not required to set `-frontend.query-stats-enabled=true` in the querier anymore
  to enable query statistics logging in the query-frontend.
- 'Blocks storage: compactor is now required when running a Cortex cluster with the
  blocks storage.'
- 'Blocks storage: block deletion marks are now stored in a per-tenant global markers/
  location.'
- 'HA Tracker: configured replica label is now verified against label value length
  limit (`-validation.max-length-label-value`).'
- 'Distributor: `extend_writes` field in YAML configuration has moved from `lifecycler`
  (inside `ingester_config`) to `distributor_config`.'
- 'Blocks storage: the default value of `-blocks-storage.bucket-store.sync-interval`
  has been changed from `5m` to `15m`.'
- Changed target flag for purger from data-purger to purger.
- The max concurrent queries against the long-term storage is now a limit shared across
  all tenants and not a per-tenant limit anymore.
- query-frontend requires the -querier.default-evaluation-interval config to be set
  to the same value of the querier
- Experimental TSDB returns known series instead of an empty response for time ranges
  older than stored data
- The gRPC streaming for ingesters doesn’t work when using the experimental TSDB blocks
  storage. Please do not enable -querier.ingester-streaming if you’re using the TSDB
  blocks storage.
- The example Kubernetes manifests (stored at k8s/) have been removed due to a lack
  of proper support and maintenance.
- Local file disclosure vulnerability when `-experimental.alertmanager.enable-api`
  is used. The HTTP basic auth `password_file` can be used as an attack vector to
  send any file content via a webhook.
- Allow specifying JAEGER_ENDPOINT instead of sampling server or local agent port.
- Please be aware that Cortex 0.7.0 introduces some breaking changes.
- The gRPC streaming for ingesters doesn’t work when using the experimental TSDB blocks
  storage. Please do not enable `-querier.ingester-streaming` if you’re using the
  TSDB blocks storage.
- Multi level cache backfilling operation becomes async.
- Disable uploading compacted blocks and overlapping compaction in ingester.
- Count the number of rate-limited samples in distributor_samples_in_total.
- Remove certain metrics for the tenant when the ruler deletes the manager for the
  tenant.
- Mark certain flags as deprecated.
- Error response returned by Query Frontend now follows Prometheus API error response
  format.
- 'Ruler: deprecated `-ruler.storage.*` CLI flags in favour of `-ruler-storage.*`.'
- This is an experimental feature.
- Titles:"config_store" has been renamed to "configs".
- '* [BUGFIX] QueryFrontend: fixed a panic (`integer divide by zero`) in the query-frontend.
  The query-frontend now requires the `-querier.default-evaluation-interval` config
  to be set to the same value of the querier.'
- '* [BUGFIX] Experimental TSDB: when the querier receives a `/series` request with
  a time range older than the data stored in the ingester, it now ignores the requested
  time range and returns known series anyway instead of returning an empty response.
  This aligns the behaviour with the chunks storage.'
- '* [BUGFIX] Cassandra: fixed an edge case leading to an invalid CQL query when querying
  the index on a Cassandra store.'
- '* [BUGFIX] Ingester: increment series per metric when recovering from WAL or transfer.'
- '* [BUGFIX] Fixed `wrong number of arguments for ''mget'' command` Redis error when
  a query has no chunks to lookup from storage.'
- '* [BUGFIX] Ingester: Automatically remove old tmp checkpoints, fixing a potential
  disk space leak after an ingester crashes.'
- If you’re running the experimental blocks storage, please build Cortex from master.
- Removed CLI flags support to configure the schema.
- Renamed CLI flag -config-yaml to -schema-config-file.
- Removed CLI flag -store.min-chunk-age in favor of -querier.query-store-after.
- The corresponding YAML config option ingestermaxquerylookback has been renamed to
  query_ingesters_within.
- Deprecated CLI flag -frontend.cache-split-interval in favor of -querier.split-queries-by-interval.
- Renamed the YAML config option defaul_validity to default_validity.
- Removed the YAML config option config_store in favor of store.
- Removed the YAML config root block configdb in favor of configs.
- Removed the fluentd-based billing infrastructure.
- Cortex 0.6.0 is the last version that can read denormalised tokens.
- Before upgrading to this release, you should also remove any deprecated chunks-related
  configuration, as this release will no longer accept that.
- Ensure that a remote storage backend is configured for Alertmanager to store state.
- Add support for Azure blob storage.
- Experimental blocks storage features are mentioned.
- Changes in metric names and configurations are noted.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Ensure the correct X-Scope-OrgID header is set.'
- Invalid metric label names.
- Exceeded max number of labels per metric.
- Timestamp is older/newer than the configured min/max time range.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '400: Bad request'
- '422: Unprocessable entity'
- '500: Internal server error'
- 'HTTP status code 422: Limit errors reported by ingester during query-time.'
- 'ResourceExhausted: Convert gRPC ResourceExhausted status code from store gateway
  to 422 limit error.'
- Fixes a panic in the query-tee when comparing result.
- 'Frontend: Fixes @ modifier functions (start/end) when splitting queries by time.'
- '400: Bad Request'
- '429: Too Many Requests'
- '422: Unprocessable Entity'
- '400: Emit an error with a 400 status code when empty labels are found.'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Server encountered an error'
- '422: Limit errors reported by ingester during query-time now return HTTP status
  code 422.'
- '500 Internal Server Error: Check for issues with the request or server.'
- '422 Unprocessable Entity: Verify the request parameters.'
- 'HTTP status code 422: Limit errors reported by ingester during query-time'
- 'RESOURCE_EXHAUSTED: Convert gRPC ResourceExhausted status code from store gateway
  to 422 limit error'
- '401 Unauthorized: Ensure tenant ID is correctly specified in the header.'
- 'RESOURCE_EXHAUSTED: Check for rate limits or resource usage.'
- '400: return error code 400 instead of 429 when per-user/per-tenant series/metadata
  limits are reached.'
- '422: returning 422 (instead of 500) when query hits max_chunks_per_query limit
  with block storage.'
- '400: Invalid request'
- '404: Not Found'
- 'RESOURCE_EXHAUSTED: Check resource limits or modify requests.'
- '400: Return error code 400 instead of 429 when per-user/per-tenant series/metadata
  limits are reached.'
- '422: Returning 422 (instead of 500) when query hits max_chunks_per_query limit
  with block storage.'
- '400: Emit an error when empty labels are found before the relabelling or label
  dropping process.'
- '401: Unauthorized'
- '400: Invalid samples submitted'
- '429: Per-user/per-tenant limits reached'
- '422: Max chunks per query limit exceeded'
- cannot iterate chunk for series
- '400: Emit an error with a 400 status code when empty labels are found before the
  relabelling or label dropping process.'
- '400: Bad Request - Invalid samples'
- '429: Too Many Requests - Per-user/tenant limits reached'
- '422: Unprocessable Entity - Exceeded max_chunks_per_query limit'
- 'cannot iterate chunk for series: Please build Cortex from master.'
- Query with no metric name that has previously resulted in HTTP status code 500 now
  returns status code 422 instead.
- 'ResourceExhausted: Convert gRPC status code from store gateway to 422 limit error.'
- HTTP status code 500 has been replaced with status code 422 for certain queries.
- 'RESOURCE_EXHAUSTED: Convert gRPC ResourceExhausted status code from store gateway
  to 422 limit error.'
- 'Slow query logging: when using downstream server request parameters were not logged.'
- 'cannot iterate chunk for series: This bug has been fixed in #2400'
- HTTP status code 500 now returns status code 422 instead for invalid queries.
- '400: Bad Request - Check your request parameters'
- '404: Not Found - Verify the endpoint and parameters'
- '500: Internal Server Error - Try again later or check server status'
- The gRPC streaming for ingesters doesn’t work when using the experimental TSDB blocks
  storage. Please do not enable -querier.ingester-streaming if you’re using the TSDB
  blocks storage.
- 'ResourceExhausted: Check resource limits or optimize query.'
- '400 Bad Request: Check your request syntax'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Server encountered an unexpected condition'
- '422 Unprocessable Entity: Limit errors reported by ingester during query-time now
  return HTTP status code 422'
- '404: Not Found - Ensure the endpoint exists'
- '500: Internal Server Error - Check server logs for more details'
- Removed CLI flags support to configure the schema.
- Renamed CLI flag -config-yaml to -schema-config-file.
- Removed CLI flag -store.min-chunk-age in favor of -querier.query-store-after.
- HTTP status code 500 now returns status code 422 instead.
- The gRPC streaming for ingesters doesn’t work when using the experimental TSDB blocks
  storage. Please do not enable `-querier.ingester-streaming` if you’re using the
  TSDB blocks storage.
auth_info:
  mentioned_objects: []
client:
  base_url: https://cortexmetrics.io
  headers:
    Accept: application/json
source_metadata: null
