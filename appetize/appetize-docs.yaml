resources:
- name: create_new_app
  endpoint:
    path: /rest-api/create-new-app
    method: POST
- name: update_existing_app
  endpoint:
    path: /rest-api/update-existing-app
    method: PUT
- name: direct_file_uploads
  endpoint:
    path: /rest-api/direct-file-uploads
    method: POST
- name: delete_app
  endpoint:
    path: /rest-api/delete-app
    method: DELETE
- name: list_apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
- name: usage_summary
  endpoint:
    path: /rest-api/usage-summary
    method: GET
- name: devices_and_os_versions
  endpoint:
    path: /rest-api/devices-and-os-versions/v1
    method: GET
- name: ip_blocks
  endpoint:
    path: /rest-api/ip-blocks/v1
    method: GET
- name: create_app
  endpoint:
    path: /v1/apps
    method: POST
    data_selector: publicKey
- name: apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
    data_selector: records
- name: create_app
  endpoint:
    path: /rest-api/create-new-app
    method: POST
- name: update_app
  endpoint:
    path: /rest-api/update-existing-app
    method: POST
- name: app_builds
  endpoint:
    path: /rest-api/list-apps
    method: GET
- name: create_new_app
  endpoint:
    path: /rest-api/create-new-app
    method: POST
- name: update_existing_app
  endpoint:
    path: /rest-api/update-existing-app
    method: PUT
- name: list_apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
- name: embed_link
  endpoint:
    path: /embed/{buildId}
    method: GET
    data_selector: embed
- name: embed_link
  endpoint:
    path: /embed/{buildId}
    method: GET
- name: share_link
  endpoint:
    path: /apps/{platform}/{appId}
    method: GET
    data_selector: share_link
    params: {}
- name: app_identifier
  endpoint:
    path: /apps/{platform}/{appId}
    method: GET
    data_selector: app_identifier
    params: {}
- name: build_identifier
  endpoint:
    path: /app/{buildId}
    method: GET
    data_selector: build_identifier
    params: {}
- name: query_parameters
  endpoint:
    path: /query_params
    method: GET
    data_selector: parameters
    params: {}
- name: devices_and_os_versions
  endpoint:
    path: /rest-api/devices-and-os-versions
    method: GET
    data_selector: supported_devices
    params: {}
- name: query_parameters
  endpoint:
    path: /query-params
    method: GET
    data_selector: parameters
    params: {}
- name: debug_logs
  endpoint:
    path: /debug_logs
    method: GET
    data_selector: logs
- name: devices_os_versions
  endpoint:
    path: /rest-api/devices-and-os-versions
    method: GET
    data_selector: devices
- name: AppRecorder
  endpoint:
    path: /app/{appId|buildId|publicKey}
    method: GET
    data_selector: actions
- name: network_events
  endpoint:
    path: /network/events
    method: GET
    data_selector: events
- name: location
  endpoint:
    path: /platform/query-params-reference#location
    method: GET
    data_selector: location
    params: {}
- name: AppRecorder
  endpoint:
    path: /app/{appId|buildId|publicKey}
    method: GET
    data_selector: actions
    params: {}
- name: IP Blocks
  endpoint:
    path: /rest-api/ip-blocks
    method: GET
- name: launch_params
  endpoint:
    path: /launch/params
    method: GET
    data_selector: params
    params: {}
- name: location
  endpoint:
    path: /platform/query-params-reference#location
    method: GET
    data_selector: location
- name: auto_grant_permissions
  endpoint:
    path: /features/auto-grant-permissions
    method: GET
- name: Launch Params
  endpoint:
    path: /features/launch-params
    method: GET
    data_selector: params
    params: {}
- name: supported_permissions
  endpoint:
    path: /platform/auto-grant-permissions/supported-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: query_parameter
  endpoint:
    path: /platform/auto-grant-permissions/query-parameter
    method: GET
    data_selector: parameter
    params:
      grantPermissions: 'true'
- name: javascript_sdk
  endpoint:
    path: /platform/auto-grant-permissions/javascript-sdk
    method: GET
    data_selector: config
    params:
      grantPermissions: 'true'
- name: reserved_device_request
  endpoint:
    path: /request/reserved_device
    method: POST
    data_selector: data
    params:
      buildId: application build identifier
      deviceType: device that is going to be reserved
      OSVersion: operating system version for the device
- name: access_reserved_device
  endpoint:
    path: /access/reserved_device
    method: GET
    data_selector: data
- name: role_assignments
  endpoint:
    path: /account/role-assignments
    method: GET
    data_selector: roles
    params: {}
- name: providers
  endpoint:
    path: /account/providers
    method: GET
    data_selector: providers
    params: {}
- name: apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
    data_selector: records
- name: usage_summary
  endpoint:
    path: /rest-api/usage-summary
    method: GET
    data_selector: records
- name: reserved_devices
  endpoint:
    path: /rest-api/devices-and-os-versions
    method: GET
    data_selector: devices
    params: {}
- name: SAML Configuration
  endpoint:
    path: /account/single-sign-on/saml
    method: GET
    data_selector: configuration
    params: {}
- name: role_assignments
  endpoint:
    path: /account/single-sign-on/role-assignments
    method: GET
    data_selector: roles
    params: {}
- name: providers
  endpoint:
    path: /account/single-sign-on/providers
    method: GET
    data_selector: providers
    params: {}
- name: session_history
  endpoint:
    path: /account/reporting/session-history
    method: GET
    data_selector: session_logs
- name: app_settings
  endpoint:
    path: /account/single-sign-on/saml
    method: GET
    data_selector: settings
    params: {}
- name: session_history
  endpoint:
    path: /session/history
    method: GET
    data_selector: sessions
- name: Appetize Admin
  endpoint:
    path: /account/single-sign-on/azure-active-directory
    method: POST
    data_selector: roles
    params:
      role: appetize_admin
- name: Appetize Developer
  endpoint:
    path: /account/single-sign-on/azure-active-directory
    method: POST
    data_selector: roles
    params:
      role: appetize_developer
- name: usage_summary
  endpoint:
    path: /rest-api/usage-summary
    method: GET
- name: session_history
  endpoint:
    path: /account/reporting/session-history
    method: GET
    data_selector: session logs
    params: {}
- name: session_history
  endpoint:
    path: /session/history
    method: GET
    data_selector: reports
- name: usage_summary
  endpoint:
    path: /rest-api/usage-summary
    method: GET
- name: session
  endpoint:
    path: /startSession
    method: POST
    data_selector: session
    params: {}
- name: embed_app
  endpoint:
    path: /embed/<BuildId|PublicKey>
    method: GET
- name: element
  endpoint:
    path: /api/elements
    method: GET
    data_selector: elements
- name: session
  endpoint:
    path: /startSession
    method: POST
    data_selector: sessionId
- name: device_commands
  endpoint:
    path: /javascript-sdk/automation/device-commands
    method: GET
    data_selector: records
- name: touch_interactions
  endpoint:
    path: /javascript-sdk/automation/touch-interactions
    method: GET
    data_selector: records
- name: apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
    data_selector: records
    params: {}
- name: client
  endpoint:
    path: /javascript-sdk/api-reference/initialization
    method: GET
    data_selector: client
    params: {}
- name: client
  endpoint:
    path: /javascript-sdk/api-reference/client
    method: GET
- name: playAction
  endpoint:
    path: /session/playAction
    method: POST
- name: playActions
  endpoint:
    path: /session/playActions
    method: POST
- name: waitForAnimations
  endpoint:
    path: /session/waitForAnimations
    method: POST
- name: waitForEvent
  endpoint:
    path: /session/waitForEvent
    method: POST
- name: waitForTimeout
  endpoint:
    path: /session/waitForTimeout
    method: POST
- name: waitUntilReady
  endpoint:
    path: /session/waitUntilReady
    method: POST
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: sessionData
- name: session
  endpoint:
    path: /waitForEvent
    method: GET
    data_selector: event
    params: {}
- name: ios
  endpoint:
    path: ./tests/ios
    method: GET
- name: android
  endpoint:
    path: ./tests/android
    method: GET
- name: record_tests
  endpoint:
    path: /testing/record-tests
    method: GET
    data_selector: tests
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: Appetize Native Browser Test
  endpoint:
    path: /testing/web-tests-on-mobile-browsers
    method: GET
    data_selector: config
    params: {}
- name: apps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: data
- name: update_existing_app
  endpoint:
    path: /rest-api/update-existing-app
    method: POST
- name: list_apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
- name: devices
  endpoint:
    path: /rest-api/devices-and-os-versions
    method: GET
- name: apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
- name: update_app
  endpoint:
    path: /{app_publicKey}
    method: POST
    data_selector: response
    params: {}
- name: apps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: records
- name: create_new_app
  endpoint:
    path: /v1/apps
    method: POST
    data_selector: null
    params: {}
- name: update_existing_app
  endpoint:
    path: /v1/apps/PUBLICKEY
    method: POST
    data_selector: null
    params: {}
- name: update_existing_app
  endpoint:
    path: /rest-api/update-existing-app
    method: POST
    data_selector: records
- name: create_new_app
  endpoint:
    path: /rest-api/create-new-app
    method: POST
    data_selector: records
- name: delete_app
  endpoint:
    path: /rest-api/delete-app
    method: DELETE
    data_selector: records
- name: list_apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
    data_selector: records
- name: usage_summary
  endpoint:
    path: /rest-api/usage-summary
    method: GET
    data_selector: records
- name: delete_app
  endpoint:
    path: /v1/apps/{app_publicKey}
    method: DELETE
    data_selector: No content
    params:
      publicKey: string
- name: update_existing_app
  endpoint:
    path: /v1/apps/{app_publicKey}
    method: POST
    data_selector: publicKey
    params:
      publicKey: string
- name: apps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: data
    params:
      nextKey: string
- name: apps_all
  endpoint:
    path: /v1/apps/all
    method: GET
    data_selector: data
    params: {}
- name: app
  endpoint:
    path: /v1/apps/{app_publicKey}
    method: GET
    data_selector: publicKey
    params: {}
- name: app_group
  endpoint:
    path: /v1/apps/{appgroup_publicKey}
    method: GET
    data_selector: publicKey
    params: {}
- name: create_new_app
  endpoint:
    path: /v1/apps
    method: POST
    data_selector: app
    params: {}
- name: update_existing_app
  endpoint:
    path: /v1/apps/PUBLICKEY
    method: POST
    data_selector: app
    params: {}
- name: delete_app
  endpoint:
    path: /v1/apps
    method: DELETE
    data_selector: app
    params: {}
- name: usage_summary
  endpoint:
    path: /v1/usageSummary
    method: GET
    data_selector: data
    params:
      nextKey: string
      startMonth: string
- name: available_devices
  endpoint:
    path: /v2/service/devices
    method: GET
    data_selector: ''
- name: delete_app
  endpoint:
    path: /v1/apps/{app_publicKey}
    method: DELETE
    data_selector: No content
    params:
      publicKey: string
- name: devices_and_os_versions
  endpoint:
    path: /rest-api/devices-and-os-versions
    method: GET
- name: available_devices
  endpoint:
    path: /available-devices
    method: GET
    data_selector: ios
    params: {}
- name: apps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: data
    params:
      nextKey: nextKey
- name: apps_all
  endpoint:
    path: /v1/apps/all
    method: GET
    data_selector: data
    params: {}
- name: app_group
  endpoint:
    path: /v1/apps/{appgroup_publicKey}
    method: GET
    data_selector: publicKey
    params: {}
- name: ip_blocks
  endpoint:
    path: /v2/service/ips
    method: GET
    data_selector: ipv4
    params: {}
- name: usage_summary
  endpoint:
    path: /v1/usageSummary
    method: GET
    data_selector: data
    params:
      nextKey: nextKey
      startMonth: startMonth
- name: ip_blocks
  endpoint:
    path: /ip-blocks
    method: GET
    data_selector: ipv4
    params:
      format: json
- name: devices
  endpoint:
    path: /v2/service/devices
    method: GET
    data_selector: ''
- name: devices_and_os_versions
  endpoint:
    path: /rest-api/devices-and-os-versions
    method: GET
    data_selector: devices
    params: {}
- name: available_devices
  endpoint:
    path: /available-devices
    method: GET
    data_selector: ios
    params: {}
- name: ip_blocks
  endpoint:
    path: /v2/service/ips
    method: GET
    data_selector: ipv4
    params: {}
- name: apps
  endpoint:
    path: /rest-api/list-apps
    method: GET
    data_selector: records
    params: {}
- name: ip_blocks
  endpoint:
    path: /ip-blocks
    method: GET
    data_selector: ipv4
    params:
      format: json
- name: unlock_device
  endpoint:
    path: /guides-and-samples/swipe-a-pattern-to-unlock-an-android-device
    method: POST
    data_selector: session
    params: {}
- name: font_sizes_android
  endpoint:
    path: /rest-api/android/font_sizes
    method: GET
    data_selector: font_sizes
    params: {}
- name: font_sizes_ios
  endpoint:
    path: /rest-api/ios/font_sizes
    method: GET
    data_selector: font_sizes
    params: {}
- name: unlock_device
  endpoint:
    path: /guides-and-samples/swipe-a-pattern-to-unlock-an-android-device
    method: POST
    data_selector: session
    params: {}
- name: app_pinning
  endpoint:
    path: /rest-api/app-pinning
    method: POST
    data_selector: response
    params: {}
- name: font_scale_android
  endpoint:
    path: /rest-api/devices-and-os-versions/v1
    method: GET
    data_selector: font_scales
    params: {}
- name: font_scale_ios
  endpoint:
    path: /rest-api/devices-and-os-versions/v1
    method: GET
    data_selector: font_scales
    params: {}
notes:
- Disables streaming for this app.
- Some optional parameters include timeout, timeLimit, and maxConcurrent.
- Easily manage your apps and builds on Appetize
- Apps Dashboard provides an overview of all your uploaded apps.
- Simultaneous installation of applications with the same App Identifier is not possible.
- App Build Permissions will override Organization Session Default Permissions.
- App Level Permissions can also be applied when uploading the app via REST API.
- Default App Session Timeout is 2 minutes of inactivity.
- It is recommended not to include osVersion as a query parameter when embedding the
  app.
- If you are making use of our JavaScript SDK, we recommend starting the session programmatically
  using client.startSession() instead as this may cause the session to start before
  the SDK is ready.
- Default app session will end after 2 minutes of inactivity.
- With query parameters on Appetize, users can easily switch between different device
  and operating system versions, languages, and many other options in order to customize
  their experience
- A dynamic, up-to-date list of all the devices and operating systems we support can
  be retrieved via our REST API
- By default, a user needs to be authenticated to view network traffic using the built-in
  intercept proxy.
- By default, a user needs to be authenticated to view debug logs for their app.
- Users can record and replay interactions with Appetize Devices using AppRecorder.
- Current support is limited to unauthenticated HTTP Proxies.
- Users can easily record and replay their interactions with Appetize Devices.
- Recordings capture the running application's user interface elements.
- The use of AppLinks and Universal Links may be affected if our network traffic monitor
  feature is enabled.
- iOS only supports setting the language at the app level.
- Android keyboard updates automatically based on the language specified.
- The maximum file size for uploading media is 50 MB.
- Appetize supports simulating device location for running and testing location-based
  applications easily.
- Automatically grants all required app runtime permissions to provide users with
  a seamless experience.
- Custom Branding is only available on our Premium and Enterprise plans.
- Appetize uses industry standard Let's Encrypt for SSL/TLS configuration of your
  domain.
- Custom data can be passed to mobile apps while running in Appetize.
- Data needs to be an URL-Encoded JSON Object.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Eliminate the hassle of manual permission grants.
- Feature only available on Premium and Enterprise plans.
- Loading time is extremely fast for reserved devices.
- Uses OAuth2
- On our Enterprise plans, you can take advantage of our Single Sign-On (SSO) integrations
  for seamless user management on Appetize.
- Single Sign-on is only available on our Enterprise plans.
- Once SSO is enabled for your account, all user access and role assignments are managed
  entirely by your SSO provider.
- Uses OAuth2 with refresh token — requires setup of connected app in Appetize
- Check the scopes configuration of your authorization server, and verify there is
  a scope called 'groups'. If not, add a scope named 'groups'.
- We will also need your Metadata URI, often called 'Discovery URL'.
- This feature is only available on our Premium and Enterprise plans.
- Please ensure that the user's email address is sent as the username in the SAML
  response.
- Please create group assignments for 'appetize_developer' and 'appetize_admin', and
  assign to users appropriately.
- Appetize supports regular username and password logins by default.
- Appetize supports Azure Active Directory as an SSO provider, using the SAML protocol.
- Appetize support Google Workspace as an SSO provider, using the SAML protocol.
- Contact us with any questions!
- Ensure that the user's email address is sent as the username in the SAML response.
- Create group assignments for appetize_developer and appetize_admin.
- Please have the entity ID (usually appetizeio-saml) and the Assertion Consumer Service
  URL (looks like https://appetize.io/sso/example/cb) you received from Appetize support.
- All reports are downloaded in UTC (Coordinated Universal Time) times.
- Some company's security policies might restrict network access.
- Appetize provides reports on a wide range of activities and fields to give users
  insight into what's happening within their instance.
- The Public Cloud option uses Appetize's shared cloud environment, offering a flexible
  and affordable way to manage iOS and Android devices.
- The Private Cloud option gives you a dedicated instance managed by Appetize on separate
  hardware, offering enhanced privacy and security.
- Self-Hosting lets enterprises manage their infrastructure using their own on-premises
  hardware or cloud services like AWS.
- Not all fields may be populated in reports.
- The base URL can be changed with a data-appetize-url attribute
- While many users enjoy hassle-free access to Appetize without any network adjustments,
  certain corporate security protocols may restrict connections.
- For most users there is no need for any network configuration to be able to use
  Appetize.
- Public Cloud offers a flexible and affordable way to manage iOS and Android devices.
- Private Cloud provides enhanced privacy and security with dedicated instances.
- Self-Hosting allows enterprises to manage their infrastructure using their own hardware.
- Best practices recommend adding accessibility identifiers.
- Interactions wait up to 10 seconds to find the element.
- The device can be interacted with programmatically through our API.
- This is useful for scenarios such as logging in a user at the start of a session,
  or writing tests.
- Best practices recommend adding accessibility identifiers to aid automation.
- Session management for interacting with device sessions
- Screenshot tests are fragile by nature as any change in the UI could cause it to
  fail.
- All tests in a test suite will run serially using the same session.
- You may run multiple test suites in parallel so long as your Appetize account has
  capacity for concurrent sessions.
- This is an experimental feature and may change or be removed in the future
- Designed for web tests, features like network logging and DOM inspection will not
  work for Appetize
- You can change the configuration for a test suite with test.use.
- The Playwright Trace Viewer allows you to review the playback of your test.
- Features like network logging and DOM inspection will not work for Appetize.
- Use the field `file` to upload from your local file-system instead of the `url`
  field.
- All other field names stay the same.
- To **delete a field**, pass an **empty string** (e.g., `-F "field="`).
- '`appPermissions` (normally a nested object in JSON) should be flattened.'
- To delete a field, pass an empty string (e.g., `-F "field="`).
- '`appPermissions` should be flattened.'
- Get the list of available devices and operating systems.
- We recommend using version 2 of this endpoint.
- Recommended approach for retrieving all apps is through the paginated version of
  the query.
- Get IP blocks for Appetize streaming servers. These are the IPs from which your
  running apps will be making network calls.
- Obtain explicit user consent before performing any impersonation activities.
- Impersonate users only when necessary to verify or troubleshoot reported issues.
- Automating the sign-in flow refers to the process of enabling your mobile application
  to perform the sign-in or authentication process automatically, without requiring
  manual intervention from the user.
- Automate mobile app screenshots effortlessly using Appetize - Save time on releases,
  better quality assurance, improved customer support and more.
- App Pinning is currently only available on Android devices
- Automating the sign-in flow improves user satisfaction by reducing manual input.
- Dynamic font size testing is integral to crafting an inclusive and user-friendly
  app experience.
- For the latest up to date list of iOS font scales, see their documentation.
- Automates mobile app screenshots effortlessly using Appetize
- Developers can automatically generate the required images for all their app features
  on all the supported device types and in the correct locale and language.
- OAuth2 implementation is required for access
- Cross-document messaging API is no longer receiving updates.
- Added support for the x-api-key header in both v1 and v2 API authentication.
- Some objects like Contact may return nulls in deeply nested fields
errors:
- '400 Bad Request: Ensure all required fields are included.'
- '401 Unauthorized: Ensure the API key is valid.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'Unknown Builds: If a build cannot be correctly processed, it will be added to the
  Unknown Builds page.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Ensure group assignments are passed in the SAML response as an attribute named 'groups'.
- Contact us to learn more about SSO integration.
- N/A - leave blank or same as ACS
- 'TIMEOUT: Interaction took too long to find the element.'
- '400: Bad Request - Often missing a required parameter.'
- '401: Unauthorized - No valid API token provided.'
- '404: Not Found - No app found for publicKey specified.'
- '500, 502, 503, 504: Server error - something went wrong on our server.'
- 200 OK
- 401 Unauthorized
- '200 OK: No content'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API token validity'
- '200 OK: Successful response'
- '401 Unauthorized: Invalid or missing API key'
auth_info:
  mentioned_objects: []
client:
  base_url: https://appetize.io
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
