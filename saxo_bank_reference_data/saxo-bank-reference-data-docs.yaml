resources:
- name: countries
  endpoint:
    path: /v1/countries
    method: GET
    data_selector: data
    params: {}
- name: cultures
  endpoint:
    path: /v1/cultures
    method: GET
    data_selector: data
    params: {}
- name: currencies
  endpoint:
    path: /v1/currencies
    method: GET
    data_selector: data
    params: {}
- name: exchanges
  endpoint:
    path: /v1/exchanges
    method: GET
    data_selector: data
    params: {}
- name: languages
  endpoint:
    path: /v1/languages
    method: GET
    data_selector: data
    params: {}
- name: timezones
  endpoint:
    path: /v1/timezones
    method: GET
    data_selector: data
    params: {}
- name: instruments
  endpoint:
    path: /v1/instruments
    method: GET
    data_selector: data
    params: {}
- name: instruments_details
  endpoint:
    path: /v1/instruments/details
    method: GET
    data_selector: data
    params: {}
- name: exchanges_by_id
  endpoint:
    path: /v1/exchanges/{ExchangeId}
    method: GET
    data_selector: data
    params: {}
- name: contract_option_spaces
  endpoint:
    path: /v1/instruments/contractoptionspaces/{OptionRootId}
    method: GET
    data_selector: data
    params: {}
- name: instruments_details_by_uic
  endpoint:
    path: /v1/instruments/details/{Uic}{AssetType}
    method: GET
    data_selector: data
    params: {}
- name: futures_spaces
  endpoint:
    path: /v1/instrument/futuresspaces/{ContinousFuturesUic}
    method: GET
    data_selector: data
    params: {}
- name: instruments
  endpoint:
    path: /ref/v1/instruments
    method: GET
    data_selector: records
- name: instruments_details
  endpoint:
    path: /ref/v1/instruments/details/{Uic}{AssetType}
    method: GET
    data_selector: Data
- name: contractoptionspaces
  endpoint:
    path: /ref/v1/instruments/contractoptionspaces/{OptionRootId}
    method: GET
    data_selector: Data
- name: futuresspaces
  endpoint:
    path: /ref/v1/instruments/futuresspaces/{Uic}
    method: GET
    data_selector: Elements
- name: exchanges
  endpoint:
    path: /openapi/ref/v1/exchanges
    method: GET
    data_selector: Data
    params: {}
- name: prices_subscriptions
  endpoint:
    path: /trade/v1/prices/subscriptions
    method: POST
    data_selector: Arguments
    params:
      RefreshRate: 1000
- name: reset_subscriptions
  endpoint:
    path: /trade/v1/prices/subscriptions
    method: DELETE
    data_selector: ReferenceId
    params: {}
- name: Account Values
  endpoint:
    path: /sim/openapi/hist/v3/positions/{clientKey}
    method: GET
    data_selector: Data
    params:
      MockDataId: '001'
      StandardPeriod: '1'
- name: Historical Report Data - Aggregated Amounts
  endpoint:
    path: /sim/openapi/hist/v3/positions/{clientKey}
    method: GET
    data_selector: Data
    params:
      MockDataId: '001'
- name: Historical Report Data - Bookings
  endpoint:
    path: /sim/openapi/hist/v3/positions/{clientKey}
    method: GET
    data_selector: Data
    params:
      MockDataId: '001'
- name: Historical Report Data - Trades
  endpoint:
    path: /sim/openapi/hist/v3/positions/{clientKey}
    method: GET
    data_selector: Data
    params:
      MockDataId: '001'
- name: Format
  endpoint:
    path: /openapi/learn/price-formatting
    method: GET
    data_selector: Format
    params: {}
- name: clients
  endpoint:
    path: /openapi/port/v1/clients/{ClientKey}
    method: GET
    data_selector: PositionNettingProfile
- name: positions
  endpoint:
    path: /port/v1/positions
    method: GET
- name: netpositions
  endpoint:
    path: /port/v1/netpositions
    method: GET
- name: orders
  endpoint:
    path: /trade/v2/orders
    method: POST
- name: exercise_position
  endpoint:
    path: /trade/v1/positions/{positionid}/exercise
    method: POST
- name: balances
  endpoint:
    path: /port/v1/balances
    method: GET
- name: positions
  endpoint:
    path: /port/v1/positions
    method: GET
- name: netpositions
  endpoint:
    path: /port/v1/netpositions
    method: GET
- name: closedpositions
  endpoint:
    path: /port/v1/closedpositions
    method: GET
- name: balances
  endpoint:
    path: /port/balances
    method: GET
- name: exercise
  endpoint:
    path: /trade/v1/positions/exercise
    method: POST
- name: account_values
  endpoint:
    path: /openapi/referencedocs/hist/v3/accountvalues
    method: GET
- name: historical_positions
  endpoint:
    path: /openapi/referencedocs/hist/v3/historicalpositions
    method: GET
- name: performance
  endpoint:
    path: /openapi/referencedocs/hist/v4/performance
    method: GET
- name: unsettled_amounts
  endpoint:
    path: /openapi/referencedocs/hist/v1/unsettledamounts
    method: GET
- name: Performance Timeseries
  endpoint:
    path: /hist/v4/performance/timeseries
    method: GET
- name: Performance Summary
  endpoint:
    path: /hist/v4/performance/summary
    method: GET
- name: performance_timeseries
  endpoint:
    path: /hist/v4/performance/timeseries
    method: GET
    data_selector: Balance, Benchmark, TimeWeighted
    params:
      ClientKey: '{YourClientKey}'
      FromDate: '2022-05-08'
      ToDate: '2022-05-17'
      FieldGroups: TimeWeighted_Accumulated,Balance_AccountValue
- name: performance_summary
  endpoint:
    path: /hist/v4/performance/timeseries
    method: GET
    data_selector: TradeSummary
    params:
      ClientKey: '{ClientKey}'
      FromDate: '2022-05-08'
      ToDate: '2022-05-17'
      FieldGroups: TradeSummary
- name: unsettled_amounts
  endpoint:
    path: /hist/v1/unsettledamounts
    method: GET
- name: unsettled_amounts_instruments
  endpoint:
    path: /hist/v1/unsettledamounts/instruments
    method: GET
- name: unsettled_amounts_exchanges
  endpoint:
    path: /hist/v1/unsettledamounts/exchanges
    method: GET
- name: unsettled_amounts_exchanges_exchangeId
  endpoint:
    path: /hist/v1/unsettledamounts/exchanges/{ExchangeId}
    method: GET
- name: currency_breakdown
  endpoint:
    path: /hist/v1/unsettledamounts
    method: GET
- name: currency_breakdown_instruments
  endpoint:
    path: /hist/v1/unsettledamounts/instruments
    method: GET
- name: exchange_breakdown
  endpoint:
    path: /hist/v1/unsettledamounts/exchanges
    method: GET
- name: exchange_breakdown_by_id
  endpoint:
    path: /hist/v1/unsettledamounts/exchanges/{ExchangeId}
    method: GET
- name: exchanges
  endpoint:
    path: /ref/v1/exchanges/{ExchangeId}
    method: GET
    data_selector: ExchangeId
    params: {}
- name: unsettled_amounts
  endpoint:
    path: /hist/v1/unsettledamounts/exchanges/{ExchangeId}
    method: GET
    data_selector: ExchangeId
    params:
      ClientKey: '{ClientKey}'
- name: Cash Transfers
  endpoint:
    path: /openapi/learn/cash-transfers
- name: Prebooked Funds
  endpoint:
    path: /openapi/learn/prebooked-funds
- name: Cash Withdrawal
  endpoint:
    path: /openapi/learn/cash-withdrawal
- name: Securities Transfers
  endpoint:
    path: /openapi/learn/securities-transfers
- name: cash_transfer
  endpoint:
    path: /atr/v1/partner/cashtransfers
    method: POST
    data_selector: transfer_response
- name: cash_transfer_status
  endpoint:
    path: /atr/v1/partner/cashtransfers/{TransactionId}
    method: GET
    data_selector: transfer_status
- name: previous_cash_transfers
  endpoint:
    path: /atr/v1/cashtransfers
    method: GET
    data_selector: previous_transfers
- name: withdrawal_limits
  endpoint:
    path: /atr/v1/cashmanagement/withdrawallimits
    method: GET
    data_selector: Data
    params: {}
- name: beneficiary_instructions
  endpoint:
    path: /atr/v1/cashmanagement/beneficiaryinstructions
    method: GET
    data_selector: Data
    params: {}
- name: withdrawals
  endpoint:
    path: /atr/v1/cashmanagement/withdrawals
    method: POST
    data_selector: ''
    params: {}
- name: prebooked_funds
  endpoint:
    path: /atr/v1/parner/prebookedfunds
    method: POST
- name: brokers
  endpoint:
    path: /securitiestransfers/brokers/
    method: GET
    data_selector: Data
    params:
      CountryCode: DK
- name: submit_transfer_request
  endpoint:
    path: /securitiestransfers/transfers/
    method: POST
    data_selector: ''
    params: {}
- name: securities_transfer
  endpoint:
    path: /openapi/atr/v1/securitiestransfers/interaccounttransfer
    method: POST
    data_selector: UniqueReference
    params: {}
- name: transfer_status
  endpoint:
    path: /openapi/atr/v1/securitiestransfers/interaccounttransfer/
    method: GET
    data_selector: Status
    params:
      UniqueReference: t0001
- name: chart
  endpoint:
    path: /openapi/learn/chart
    method: GET
    data_selector: Data
- name: Account Statement
  endpoint:
    path: /openapi/client-reporting/account-statement
    method: GET
- name: Portfolio Report
  endpoint:
    path: /openapi/client-reporting/portfolio-report
    method: GET
- name: Trade Details
  endpoint:
    path: /openapi/client-reporting/trade-details
    method: GET
- name: Trades Executed
  endpoint:
    path: /openapi/client-reporting/trades-executed
    method: GET
- name: Account Statement
  endpoint:
    path: /openapi/learn/account-statement
    method: GET
    data_selector: AccountID, posting date, Value date, product detail, Net Change,
      Cash Balance
    params: {}
- name: Trade Details
  endpoint:
    path: /openapi/trade
    method: GET
    data_selector: pdf
    params:
      TradeId: specific_trade_id
      Filtertype: filter_type
      FilterValue: filter_value
- name: trades_executed
  endpoint:
    path: /trades/executed
    method: GET
    data_selector: trades
- name: signups
  endpoint:
    path: /cm/v1/signups
    method: POST
    data_selector: response
    params: {}
- name: signups_options
  endpoint:
    path: /cm/v2/signups/options
    method: GET
    data_selector: options
    params: {}
- name: signups_status
  endpoint:
    path: /cm/v1/signups/status
    method: GET
    data_selector: status
    params: {}
- name: complete_application
  endpoint:
    path: /cm/v1/signups/completeapplication
    method: POST
    data_selector: response
    params: {}
- name: initiate_verification
  endpoint:
    path: /cm/v1/signups/verification/initiate
    method: POST
    data_selector: response
    params: {}
- name: onboarding_pdf
  endpoint:
    path: /cm/v1/signups/onboardingpdf
    method: GET
    data_selector: pdf
    params: {}
- name: signups_status
  endpoint:
    path: /signups/status
    method: GET
- name: signups_options
  endpoint:
    path: /signups/options
    method: POST
- name: signups
  endpoint:
    path: /signups
    method: POST
- name: signups_attachments
  endpoint:
    path: /signups/attachments
    method: POST
- name: signups_verification_initiate
  endpoint:
    path: /signups/verification/initiate/{clientkey}
    method: POST
- name: complete_application
  endpoint:
    path: /cm/v1/signups/completeapplication
    method: POST
- name: application_status
  endpoint:
    path: /cm/signups/v1/status
    method: GET
- name: onboarding_pdf_documents
  endpoint:
    path: /onboarding/pdf
    method: GET
- name: Audit OrderActivities
  endpoint:
    path: /openapi/learn/audit-orderactivities
    method: GET
- name: Partner Support Cases
  endpoint:
    path: /openapi/learn/partner-support-cases
    method: GET
- name: Reports
  endpoint:
    path: /openapi/learn/reports
    method: GET
- name: order_activities
  endpoint:
    path: /cs/v1/audit/orderactivities
    method: GET
    data_selector: Data
    params:
      EntryType: All
- name: order_activities
  endpoint:
    path: /cs/v1/audit/orderactivities
    method: GET
    data_selector: Data
    params:
      IncludeSubAccounts: 'true'
      EntryType: All
- name: support_cases
  endpoint:
    path: /support/cases/{CaseId}
    method: PATCH
- name: internal_comment
  endpoint:
    path: /support/cases/{CaseId}/internalcomment
    method: POST
- name: note
  endpoint:
    path: /support/cases/{CaseId}/note
    method: POST
- name: close_case
  endpoint:
    path: /support/cases/{CaseId}
    method: PUT
- name: redirect_case
  endpoint:
    path: /support/cases/{CaseId}
    method: PATCH
- name: trades
  endpoint:
    path: /trades
    method: GET
    data_selector: trades
    params:
      ClientKey: mandatory
      FromDate: mandatory
      ToDate: mandatory
      AccountGroupKey: optional
      AccountKey: optional
      TradeId: mandatory
- name: bookings
  endpoint:
    path: /bookings
    method: GET
    data_selector: bookings
    params:
      ClientKey: mandatory
      FromDate: mandatory
      ToDate: mandatory
      AccountGroupKey: optional
      AccountKey: optional
      FilterType: mandatory
      FilterValue: mandatory
- name: aggregated_amounts
  endpoint:
    path: /aggregated_amounts
    method: GET
    data_selector: aggregated_amounts
    params: {}
- name: aggregated_amounts
  endpoint:
    path: /openapi/learn/aggregated-amounts
    method: GET
    data_selector: data
    params: {}
- name: aggregated_amounts
  endpoint:
    path: /openapi/learn/reports/aggregated-amounts
    method: GET
- name: trades
  endpoint:
    path: /openapi/learn/trade/trades-executed
    method: GET
- name: bookings
  endpoint:
    path: /openapi/learn/bookings
    method: GET
- name: trades
  endpoint:
    path: /trades
    method: GET
    data_selector: trades
- name: bookings
  endpoint:
    path: /bookings
    method: GET
    data_selector: bookings
- name: events
  endpoint:
    path: /corporate-actions/events
    method: GET
- name: holdings
  endpoint:
    path: /corporate-actions/holdings
    method: GET
- name: elections
  endpoint:
    path: /corporate-actions/elections
    method: POST
- name: standing_instructions
  endpoint:
    path: /corporate-actions/standing-instructions
    method: GET
- name: proxy_voting
  endpoint:
    path: /corporate-actions/proxy-voting
    method: GET
- name: active_events
  endpoint:
    path: /openapi/ca/v2/events
    method: GET
    data_selector: Data
    params:
      EventStatus: Active
- name: past_events
  endpoint:
    path: /openapi/ca/v2/events
    method: GET
    data_selector: Data
    params:
      EventStatus: Past
- name: upcoming_events
  endpoint:
    path: /openapi/ca/v2/events
    method: GET
    data_selector: Data
    params:
      EventStatus: Upcoming
- name: create_election
  endpoint:
    path: /openapi/ca/v2/elections
    method: PUT
    data_selector: null
    params: {}
- name: cancel_election
  endpoint:
    path: /openapi/ca/v2/elections
    method: PUT
    data_selector: null
    params: {}
- name: holdings
  endpoint:
    path: /holdings
    method: GET
    data_selector: Data
    params:
      EventId: '8740953'
      IncludeSubAccounts: 'true'
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: Data
    params:
      EventStatus: Active
      IncludeSubAccounts: 'true'
- name: standinginstructions
  endpoint:
    path: /standinginstructions
    method: POST
    data_selector: Data
- name: delete_standing_instruction
  endpoint:
    path: /standinginstructions
    method: DELETE
    data_selector: null
    params:
      StandingInstructionIds: '534366'
- name: Events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: events
  endpoint:
    path: /events/
    method: GET
    data_selector: Data
- name: activities
  endpoint:
    path: /ens/v1/activities/
    method: GET
    data_selector: events
- name: subscriptions
  endpoint:
    path: /ens/v1/activities/subscriptions
    method: POST
    data_selector: subscription
- name: account_depreciation_events
  endpoint:
    path: /openapi/account_depreciation_events
    method: GET
    data_selector: Data
    params: {}
- name: account_funding_event
  endpoint:
    path: /openapi/event/account-funding-events
    method: GET
    data_selector: Data
- name: AdvisoryModelRebalance
  endpoint:
    path: /openapi/advisory-model-rebalance
    method: POST
    data_selector: Data
- name: corporate_action_events
  endpoint:
    path: /openapi/learn/corporate-action-events
    method: GET
    data_selector: events
- name: margin_call_event
  endpoint:
    path: /openapi/margin-call-events
    method: GET
    data_selector: Data
- name: position_depreciation_event
  endpoint:
    path: /openapi/learn/position-depreciation-events
    method: GET
    data_selector: Data
    params: {}
- name: PositionEvent
  endpoint:
    path: /position/events
    method: GET
    data_selector: Data
- name: SecurityTransfers
  endpoint:
    path: /openapi/learn/security-transfer-events
    method: GET
    data_selector: Data
- name: instrument_documents
  endpoint:
    path: /mkt/v1/instruments/{uic}/{assettype}/documents/recommended/
    method: GET
    data_selector: DocumentDetails
    params:
      DocumentType: KIIDs,PRIIP_KIDs
- name: document_pdf
  endpoint:
    path: /mkt/instruments/{uic}/{assetType}/documents/pdf/
    method: GET
    data_selector: pdf document
    params:
      DocumentType: KIIDs
      LanguageCode: en
- name: Accounts
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=accounts
    method: GET
- name: Balances
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=balances
    method: GET
- name: Clients
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=clients
    method: GET
- name: Closed Positions
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=closedpositions
    method: GET
- name: Exposure
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=exposure
    method: GET
- name: NetPositions
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=netpositions
    method: GET
- name: Orders
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=orders
    method: GET
- name: Positions
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=positions
    method: GET
- name: Users
  endpoint:
    path: /openapi/referencedocs/service?apiVersion=v1&serviceGroup=portfolio&service=users
    method: GET
- name: balances
  endpoint:
    path: /v1/balances
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: records
    params: {}
- name: account_details
  endpoint:
    path: /accounts/{accountkey}
    method: GET
    data_selector: ClientKey
- name: client_details
  endpoint:
    path: /clients/{clientkey}
    method: GET
    data_selector: ClientKey
- name: underlying_accounts
  endpoint:
    path: /accounts/
    method: GET
    params:
      IncludeSubAccounts: 'true'
- name: users
  endpoint:
    path: /users/{userkey}
    method: GET
    data_selector: ClientKey
    params: {}
- name: me
  endpoint:
    path: /users/me
    method: GET
    data_selector: ClientKey
    params: {}
- name: clients
  endpoint:
    path: /clients/
    method: GET
    data_selector: ClientKey
    params:
      OwnerKey: '{OwnerKey}'
- name: positions
  endpoint:
    path: /port/v1/positions
    method: GET
    params:
      ClientKey: '{clientkey}'
- name: closed_positions
  endpoint:
    path: /port/v1/closedpositions
    method: GET
    params:
      ClientKey: '{clientkey}'
      AccountKey: '{accountkey}'
- name: orders
  endpoint:
    path: /port/v1/orders
    method: GET
    params:
      ClientKey: '{clientkey}'
      Status: Working
- name: net_positions
  endpoint:
    path: /port/v1/netpositions/subscriptions/active
    method: POST
    data_selector: Arguments
    params: {}
- name: positions
  endpoint:
    path: /port/v1/positions/subscriptions/active
    method: POST
    data_selector: Arguments
    params: {}
- name: delete_position_subscription
  endpoint:
    path: /port/v1/positions/subscriptions/123456789/2
    method: DELETE
    data_selector: ''
    params: {}
- name: Appropriateness
  endpoint:
    path: /reg/v3/mifid/appropriateness
    method: GET
    data_selector: records
- name: QnASections
  endpoint:
    path: /reg/v3/mifid/qnasections
    method: GET
    data_selector: records
- name: FinancialOverview
  endpoint:
    path: /reg/v3/mifid/financialoverview
    method: GET
    data_selector: records
- name: InvestmentProfiles
  endpoint:
    path: /reg/v3/mifid/investmentprofiles
    method: GET
    data_selector: records
- name: AccountInvestmentProfiles
  endpoint:
    path: /reg/v3/mifid/accountinvestmentprofiles
    method: GET
    data_selector: records
- name: account_investment_profiles
  endpoint:
    path: /reg/v3/mifid/accountinvestmentprofiles
    method: GET
    data_selector: records
    params: {}
- name: session_capabilities
  endpoint:
    path: /root/v1/sessions/capabilities
    method: GET
    data_selector: ''
    params: {}
- name: monitor_session_events
  endpoint:
    path: /root/v1/sessions/events/subscriptions/active
    method: POST
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /root/v1/subscriptions/{context_id}
    method: DELETE
- name: feature_availability
  endpoint:
    path: /root/v1/features/availability
    method: GET
    data_selector: features
- name: prices
  endpoint:
    path: /trade/v1/prices
    method: GET
- name: orders
  endpoint:
    path: /trade/v1/orders
    method: POST
- name: messages
  endpoint:
    path: /trade/v1/messages
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: acknowledge_message
  endpoint:
    path: /messages/seen/{message_id}
    method: PUT
- name: trade_confirmation
  endpoint:
    path: /trade/confirmation
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /trade/v2/orders
    method: POST
    data_selector: Order
    params: {}
- name: infoprices
  endpoint:
    path: /trade/v1/infoprices
    method: GET
    data_selector: Quote
    params: {}
- name: order_placement
  endpoint:
    path: /trade/v2/orders
    method: POST
- name: InstrumentDetails
  endpoint:
    path: /openapi/ref/v1/instruments/details/211/CfdOnStock
    method: GET
    data_selector: SupportedStrategies
- name: AlgoStrategies
  endpoint:
    path: /openapi/ref/v1/algostrategies/With%20Volume
    method: GET
    data_selector: Parameters
- name: orders
  endpoint:
    path: /openapi/port/v1/orders
    method: GET
    data_selector: Data
- name: order_details
  endpoint:
    path: /openapi/port/v1/orders/{ClientKey}/{OrderId}/details
    method: GET
    data_selector: AlgoOrderDetails
- name: place_order
  endpoint:
    path: /openapi/trade/v2/orders
    method: POST
    data_selector: AlgoOrderData
- name: patch_order
  endpoint:
    path: /openapi/trade/v2/orders
    method: PATCH
    data_selector: AlgoOrderData
- name: options_board
  endpoint:
    path: /options/board
    method: GET
    data_selector: Expiries
    params: {}
- name: options_chain_subscription
  endpoint:
    path: /trade/v1/optionschain/subscriptions/active
    method: POST
    data_selector: Snapshot
    params:
      RefreshRate: 5000
- name: move_resize_window
  endpoint:
    path: /trade/v1/optionschain/subscriptions/active/<contextid>/<referenceid>
    method: PATCH
    data_selector: Expiries
    params:
      MaxStrikesPerExpiry: 17
- name: reset_at_the_money
  endpoint:
    path: /trade/v1/subscriptions/<contextId>/<referenceId>/ResetATM
    method: PUT
    data_selector: none
    params: {}
- name: multi_leg_defaults
  endpoint:
    path: /trade/v2/orders/multileg/defaults/
    method: GET
    params:
      AccountKey: zlE1Jm-x97p5WwV7-91GkA==
      OptionRootId: '309'
      OptionsStrategyType: Straddle
- name: multileg_prices
  endpoint:
    path: /prices/multileg
    method: POST
    data_selector: Legs
    params:
      AccountKey: zlE1Jm-x97p5WwV7-wOGkA==
- name: multileg_subscription
  endpoint:
    path: /prices/multileg/subscription
    method: POST
    data_selector: Arguments
    params:
      AccountKey: zlE1Jm-x97p5WwV7-wOGkA==
- name: order_precheck
  endpoint:
    path: /orders/multileg/precheck
    method: POST
    data_selector: Orders
    params:
      AccountKey: zlE1Jm-x97p5WwV7-wOGkA==
      OrderDuration:
        DurationType: DayOrder
      OrderType: Limit
      ManualOrder: true
- name: order_place
  endpoint:
    path: /orders/multileg
    method: POST
    data_selector: Orders
    params:
      AccountKey: zlE1Jm-x97p5WwV7-wOGkA==
      OrderType: Limit
      ManualOrder: true
- name: order_change
  endpoint:
    path: /orders/multileg
    method: PATCH
    data_selector: Orders
    params:
      AccountKey: zlE1Jm-z97p5WwV7-9OGkA==
- name: order_cancel
  endpoint:
    path: /orders/multileg/{OrderId}
    method: DELETE
    data_selector: ''
    params:
      AccountKey: zlE1Jm-d97p5WwV7-9OGkA==
- name: Prices
  endpoint:
    path: /trade/v1/infoprices
    method: GET
    data_selector: records
- name: InfoPrices
  endpoint:
    path: /trade/v1/infoprices
    method: GET
    data_selector: records
- name: OptionChain
  endpoint:
    path: /trade/v1/optionschain
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /openapi/trade/v1/prices/subscriptions/active
    method: GET
    data_selector: Arguments
    params: {}
- name: infoprices
  endpoint:
    path: /openapi/trade/v1/infoprices/list
    method: GET
    data_selector: Data
    params: {}
- name: allocation_keys
  endpoint:
    path: /trade/v1/allocationkeys
    method: POST
    data_selector: allocationKey
    params: {}
- name: block_trade_orders
  endpoint:
    path: /trade/v1/orders
    method: POST
    data_selector: order
    params: {}
- name: allocation_keys
  endpoint:
    path: /trade/v1/allocationkeys
    method: POST
    data_selector: AllocationKeyId
- name: orders
  endpoint:
    path: /trade/v2/orders
    method: POST
    data_selector: OrderId
- name: pre_check_order
  endpoint:
    path: /trade/v2/orders/precheck
    method: POST
    data_selector: PreTradeDisclaimers
    params: {}
- name: disclaimer_service
  endpoint:
    path: /dm/v2/disclaimers
    method: GET
    data_selector: Data
    params: {}
- name: register_response
  endpoint:
    path: /dm/v2/disclaimers/responses
    method: POST
    data_selector: ''
    params: {}
- name: Account History
  endpoint:
    path: /openapi/referencedocs/hist
    method: GET
- name: Asset Transfers
  endpoint:
    path: /openapi/referencedocs/atr
    method: GET
- name: Chart
  endpoint:
    path: /openapi/referencedocs/chart
    method: GET
- name: Client Management
  endpoint:
    path: /openapi/referencedocs/cm
    method: GET
- name: Client Reporting
  endpoint:
    path: /openapi/referencedocs/cr
    method: GET
- name: Client Services
  endpoint:
    path: /openapi/referencedocs/cs
    method: GET
- name: Corporate Actions
  endpoint:
    path: /openapi/referencedocs/ca
    method: GET
- name: Disclaimer Management
  endpoint:
    path: /openapi/referencedocs/dm
    method: GET
- name: Ens
  endpoint:
    path: /openapi/referencedocs/ens
    method: GET
- name: Market Overview
  endpoint:
    path: /openapi/referencedocs/mkt
    method: GET
- name: Partner Integration
  endpoint:
    path: /openapi/referencedocs/partnerintegration
    method: GET
- name: Portfolio
  endpoint:
    path: /openapi/referencedocs/port
    method: GET
- name: Reference Data
  endpoint:
    path: /openapi/referencedocs/ref
    method: GET
- name: Regulatory Services
  endpoint:
    path: /openapi/referencedocs/reg
    method: GET
- name: Root Services
  endpoint:
    path: /openapi/referencedocs/root
    method: GET
- name: Trading
  endpoint:
    path: /openapi/referencedocs/trade
    method: GET
- name: Value Add
  endpoint:
    path: /openapi/referencedocs/vas
    method: GET
- name: EOD File Changes
  endpoint:
    path: /institutional/EOD
    method: GET
    data_selector: files
    params: {}
notes:
- Instrument availability and details may change between accounts.
- Market data restrictions apply.
- All OpenAPI end points require that the calling application pass a valid OpenAPI
  access token.
- None of the information contained herein constitutes an offer to purchase or sell
  a financial instrument or to make any investments.
- Saxo Bank A/S and its group companies do not take into account your personal investment
  objectives or financial situation.
- The OpenAPI Explorer requires a developer account.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- OpenAPI only supports gzip & deflate compression.
- Authorization header should be set with a valid Bearer token for accessing OpenAPI
  services.
- Some firewalls and proxies are known to block PUT, PATCH, and DELETE requests.
- With OpenAPI supporting the HTTP 2 protocol, there is no longer a tangible benefit
  to batching requests.
- Batching can be applied to resources that belong to the same service group.
- Batch request requires content-type header set as 'multipart/mixed' and a boundary
  parameter.
- Request should be sent in exactly the same structure as shown above.
- Sessions are important to understand in relation to session capabilities.
- Streaming uses a plain WebSocket connection with data in binary frames.
- Access token must be sent in the Authorization header for WebSocket connections.
- When creating or deleting subscriptions, ensure to follow the proper order to avoid
  throttling limits.
- All calls to OpenAPI are subject to rate limiting.
- The OpenAPI on Simulation may be at a higher version number than the OpenAPI on
  the live environment.
- One-day tokens obtained through the Developer Portal are only authorized for the
  simulation environment.
- All Saxo Bank's OpenAPI endpoints require that the calling application includes
  an OpenAPI access token.
- If your application needs access to an API beyond the lifetime of a single access
  token, it can either go through the complete login flow again or use a refresh token
  to request a new access token.
- Server-side web apps should use the 'Authorization Code Grant' flow.
- This type of authentication is only available to select partners upon request.
- This authentication flow is suitable for server-to-server integrations where authentication
  needs to be done without human intervention.
- Especially the X-Correlation value is extremely important for us to locate your
  request, which is the first step of the troubleshoot.
- Saxo Bank offers trading in many different asset classes as well as a very configurable
  platform.
- Not all order and duration types are supported for all asset types.
- Trades in accordance with the recommendations in an analysis, especially, but not
  limited to, leveraged investments such as foreign exchange trading and investment
  in derivatives, can be very speculative and may result in losses as well as profits.
- OpenApi access requires specific permission.
- Prices delivered and received by OpenAPI are always represented by decimal numbers.
- 'In the format structure the values means the following: Decimals can be anything
  from 0 and up. Takes on a special meaning for prices quoted in fractions.'
- Positions may not be netted if there are active related orders, such as GTC orders,
  but will still be 'squared' if the opposing positions have the same size.
- Opposing positions are netted end of day and will be available as positions in the
  /port/v1/positions and /port/v1/netpositions resources.
- Netted positions are not moved to closed positions. The /port/v1/closedpositions
  resource will therefore return an empty array even if a position is squared.
- It is not possible to place orders related to an individual position.
- P/L on closed and open margin positions are separated.
- Make sure to understand core business concepts before diving into specifics.
- This is a BETA version. It is currently only made available to select partners.
- The structure, and granularity of each endpoint's response varies, to support various
  use cases.
- Transaction requests are typically completed within less than 1000ms.
- The maximum amount that can be withdrawn depends on multiple factors, including
  cash reserved for margin positions or open orders.
- The only property needed to request the withdrawal is the 'BeneficiaryInstructionId'
  value.
- This functionality is only available to approved Introducing Brokers.
- This endpoint is primarily intended for IBs and requires special permissions to
  access.
- This endpoint is in BETA and only available to select partners
- The UniqueReference provided on the request has to be unique across all transfers
  requested within the last X weeks
- The chart response may include a Data field containing an array of samples along
  with convenience information in other fields.
- We are currently not able to provide chart data for the asset types shown in italics
  to 3rd party applications.
- All report endpoints can return a PDF file, and some can also return an XLS.
- 'To request a PDF version, add ''Accept: application/pdf'' header.'
- 'To request an XLS version, add ''Accept: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet''
  header.'
- This resource returns PDF/Excel version. It contains information about account statement
  of a client or an account.
- Disclaimer - None of the information contained herein constitutes an offer to purchase
  or sell a financial instrument or to make any investments.
- This resource returns only PDF version, about a specific trade.
- Information is updated once per day at the end of a processing cycle.
- Only Switzerland501 and Switzerland901 document types are allowed for onboarding
  pdf documents.
- Resources are not designed to support bulk replication of trade data in an enterprise
  setup.
- Set $top between 200 and 500 for limiting the size of entries in the response.
- The __nextPoll field contains a URL with the next skiptoken for subsequent requests.
- This feature is only available to individual partners upon request and after explicit
  configuration.
- Access is assigned to a particular user at the top level in a partner structure.
- Each trade includes both an InstrumentSymbol and an UnderlyingInstrumentSymbol.
- Commissions and BookedAmounts are provided in USD.
- AmountTypeNames are subject to change which means Filtering should be done based
  on AmountTypeId
- Mifid 2 only asks that amounts are broken down into high level categories.
- It is easier to do the breakdown upfront.
- To get the cost as a percentage of the average account values, divide the total
  cost in Quarter by the average account value.
- The settlement note is a legal requirement from Pre mifid 2, enhanced with Mifid2
  around costs.
- A top level client can query /events and /holdings to get information about affected
  clients and events.
- By default the information will not include the ability to vote.
- A separate agreement with Broadridge is required to allow clients to vote on upcoming
  events.
- Saxo will attempt to find a language translation which matches what the user has
  set in the user settings in their trading platform
- The cache of available past events is a maximum of 3 calendar days in the streaming
  based subscription and 14 calendar days in the GET ens/v1/activities endpoint.
- Message to indicate that an account has depreciated beyond a limit as specified
  by MIFID II regulations. Only sent for configured client segments.
- A funding event is sent when money is added or deducted from an account.
- Message to indicate some event related to an advisory model.
- Messages to indicate events related to corporate actions.
- The levels at which margin calls and stop outs are triggered are defined in a margin
  profile, configured by Saxo's staff.
- Message to indicate that a position has depreciated beyond a limit as specified
  by MIFID II regulations.
- Only sent for configured client segments.
- Cash deposits and withdrawals are not included in position notifications. Instead
  they are reported as funding events.
- The PositionEvent field describes the position event such as Deleted, New, OptionExercised,
  OptionExpired, and Updated.
- Messages to indicate events related to Security Transfers.
- Currently only exposes access to KIIDs and PRIIP_KIDs documents subject to license
  agreements.
- Functionality is only available in the LIVE environment.
- Calculation currency is determined by the requested entity.
- Some fields may be included or omitted depending on your settings.
- Only relevant fields are returned for users.
- UserKey may be the same as ClientKey.
- All Netpositions are collapsed by default.
- Only a limited amount of simultaneous Position subscriptions are allowed.
- Currently this functionality is only available to select partners after special
  agreement.
- This functionality is only available in the LIVE environment.
- If the request only specifies the account, the endpoint will only return what has
  specifically been set for the account.
- If the request includes EntityType and EntityKey query parameters, the endpoint
  will return a combination of the general investment profile for the entity and account-specific
  preferences.
- Only one session (per user) can have the upgraded trade level of FullTradingAndChat
  and only one session can have the upgraded data level of Premium.
- If the trade level or data level is upgraded for one session associated with a user,
  all other sessions associated with the same user will have their trade or data level
  demoted to the default level.
- The response is always a 202 Accepted, which means that the deletions will be done
  eventually.
- 'If available, the endpoints behave as documented; if disabled Service Unavailable
  (HTTP status code: 503) is returned.'
- 'OpenAPI provides three different price resources: InfoPrices, Prices, and OptionsChain.'
- The orders endpoint supports amending existing orders and canceling orders.
- Message to indicate changes to orders or positions.
- It is possible to place orders on all asset types except for Fx Options.
- The order placement endpoint follows the general rules for http request/response
- The order placement endpoint follows the general rules for http request/response
  as outlined in the documentation.
- The /orders endpoint attempts to wait until the order request has been successfully
  placed with and accepted by the broker.
- If a response has not been received from the broker within 60 seconds the /orders
  endpoint will return with a 202 (Accepted), an OrderId and an ErrorCode of 'TradeNotCompleted'.
- It is recommended to monitor the state of the /port/v1/orders endpoint to make sure
  you have the precise status of your open orders.
- The parameters going into an algo order depend on the chosen strategy.
- All parameters regardless of datatype expect non-null values, as null is considered
  equivalent to the argument not being provided.
- You cannot change the strategy or order type of an order after it has been placed.
- The options board subscription supports StockOption, StockIndexOption, and FuturesOption.
- The minimum refreshrate for an OptionsChain subscription is 2000ms.
- If the total number of strikes exceeds the fixed limit of 100 strikes, the request
  will fail.
- Multi-leg orders are only supported on the trade/v2/orders endpoint.
- It is recommended to only ask for the field groups needed.
- The Quote field group cannot be deselected by explicitly providing something else
  in the request.
- If an expiry date is a bank holiday, the API will use the next following bank day
  as expiry date.
- Block trading is only possible on specially configured accounts.
- Allocation keys are intended to simplify the management of trades across multiple
  accounts.
- Uses API keys for authentication.
- Allocation keys can be defined for both one-time and active distributions.
- Pre-trade disclaimers must be accepted before placing an order.
- Saxo Bank A/S and, or - its group companies (“Saxo Bank”) do not take into account
  your personal investment objectives or financial situation.
- The simulation account has a limited lifetime of 20 days.
- Connection can be established via VPN as well as cross connect in LD4 and LD5 centers.
- The FIX session runs continuously from 5:00:00 AEST Monday to 17:00:00 EST/EDT Friday
  with no daily sequence number reset.
- Sequence numbers must be reset on weekends (at the first logon after the weekend).
- Clients can connect to Saxo's FIX API at any time during general opening hours.
  Log off can happen at any time.
- Clients will soon be required to complete an Appropriateness Test (APT) for the
  products they wish to trade.
- Blocking disclaimers will prevent trades if clients are not authorized, often due
  to incomplete appropriateness tests.
- The add-in closely follows the structure and syntax of the OpenAPI and is primarily
  intended to port functionality to Excel.
- Advanced knowledge of APIs is not required to start building applications in Excel.
- The OpenAPI for Excel add-in is required to use the Excel snippets provided in each
  tutorial in this series.
- It is recommended to practice with the included Excel snippets in the simulation
  environment.
errors:
- '404: The instrument does not exist or access is denied.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'HTTP status code 405: Method not allowed due to firewalls and proxies.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '429: Too many requests'
- '500: Internal service error'
- '503: Service Unavailable'
- '500 Internal Server Error: Structure of the request is not correct.'
- '400 Bad Request: The context id is missing. The specified context id is not correctly
  formatted.'
- '401 Unauthorized: The access token was not sent as part of the connection request.
  The access token has an invalid format. The access token has expired.'
- '409 Conflict: The client session already has a WebSocket connection with the same
  context id.'
- '426 Upgrade Required: The WebSocket version is different from 13.'
- '429 Too Many Requests: The client session already has the allowed number of WebSocket
  connections.'
- 429 - Too Many Requests
- 403 - Access Denied
- 409 - Conflict
- 'Failed: The transfer failed. Contract Saxo for an explanation.'
- 'Pending: The transfer request has been received but not processed.'
- 'Successful: The transfer request has been processed.'
- 201 - Created
- 200 - OK
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '202 No Body: Indicates that the upgrade will be done eventually.'
- 'Race condition: When multiple sessions for the same user request capabilities,
  the last one wins.'
- '503 Service Unavailable: Feature is disabled.'
- '400 Bad Request: Check the order parameters for correctness'
- '401 Unauthorized: Ensure valid authentication credentials'
- '404 Not Found: Verify the endpoint path'
- 'OrderRelatedPositionMissMatch: Usually happens when a related order is placed on
  a different account from the position or the position does not exist'
- 'PriceExceedsAggressiveTolerance: Can occur when placing a limit order where the
  condition for the order is already met by a huge distance'
- 'TooFarFromMarket: Can occur when placing a limit order where the condition for
  the order is unlikely to be met'
- 'OnWrongSideOfMarket: Occurs when relating an order to a position, and the order''s
  target price is on the wrong side of the current market price'
- 'PriceNotInTickSizeIncrements: Occurs when an order price does not confirm to tick
  size or formatting rules'
- '400 - Bad Request: The request is invalid.'
- '400 - Bad Request: Amount must be same for all orders'
- 'OrderNotPlaced: Order not placed as other order in request was rejected'
- 'TooFarFromEntryOrder: Order price is too far from the entry order'
- '202 - Accepted: Your trade request could not be completed at this time'
- 'OtherError: This represents a long collection of errors which all occur very seldom.'
- 'CouldNotCompleteRequest: The operation could not be completed and we will not disclose
  further details as to why.'
- '400 Bad Request: One or more properties of the request are invalid!'
- 'InvalidModelState: Uic must be greater than 0'
- '400 Bad Request: Check the request parameters for allocation keys.'
- '404 Not Found: The specified allocation key does not exist.'
- '403 Forbidden: The account is not configured for block trading.'
- '401 Unauthorized: Recheck API keys or permissions'
- '400 Bad Request: Check the format of the request and required fields.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://gateway.saxobank.com/sim/openapi
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
