resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: US equities
  endpoint:
    path: /data/us_equities
    method: GET
    data_selector: records
    params: {}
- name: trades
  endpoint:
    path: /trades
    method: GET
    data_selector: records
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: databases
  endpoint:
    path: /databases
    method: GET
    data_selector: databases
    params: {}
- name: dates
  endpoint:
    path: /databases/{database}/dates
    method: GET
    data_selector: dates
    params: {}
- name: last_date
  endpoint:
    path: /databases/{database}/last_date
    method: GET
    data_selector: last_date
    params: {}
- name: symbols
  endpoint:
    path: /symbols
    method: GET
    data_selector: symbols
- name: time_series
  endpoint:
    path: /time_series
    method: GET
    data_selector: data
    params:
      tick_type: TRD
- name: trade_data
  endpoint:
    path: /trade_data
    method: GET
    data_selector: records
    params: {}
- name: trade_data
  endpoint:
    path: /trade_data
    method: GET
    data_selector: records
- name: quote_data
  endpoint:
    path: /quote_data
    method: GET
    data_selector: records
- name: nbbo_data
  endpoint:
    path: /nbbo_data
    method: GET
    data_selector: records
- name: ticks
  endpoint:
    path: /api/sources/ticks
    method: GET
    data_selector: records
- name: tick
  endpoint:
    path: /api/sources/tick
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ticks
  endpoint:
    path: /ticks
    method: GET
    data_selector: records
    params: {}
- name: trades
  endpoint:
    path: /services/data/vXX.X/sobjects/Trade
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trades
  endpoint:
    path: /trades
    method: GET
    data_selector: records
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: records
    params: {}
- name: ObSnapshot
  endpoint:
    path: /api/order_book/snapshot
    method: GET
    data_selector: records
    params: {}
- name: ObSnapshotWide
  endpoint:
    path: /api/order_book/snapshot_wide
    method: GET
    data_selector: records
    params: {}
- name: ObSnapshotFlat
  endpoint:
    path: /api/order_book/snapshot_flat
    method: GET
    data_selector: records
    params: {}
- name: book_imbalance
  endpoint:
    path: /ObSnapshotWide
    method: GET
    data_selector: ''
    params:
      tick_type: PRL_FULL
      max_levels: 3
      running: true
- name: imbalance_stats
  endpoint:
    path: /agg
    method: GET
    data_selector: ''
    params: {}
- name: book_sweep
  endpoint:
    path: /book/sweep
    method: GET
    data_selector: records
    params: {}
- name: market_by_order
  endpoint:
    path: /market/by_order
    method: GET
    data_selector: records
    params:
      show_full_detail: 'True'
- name: tick_data
  endpoint:
    path: /api/tick_data
    method: GET
    data_selector: records
- name: trd
  endpoint:
    path: /data/trd
    method: GET
    data_selector: records
    params: {}
- name: US_COMP_SAMPLE_TRD
  endpoint:
    path: /api/run
    method: POST
    data_selector: data
    params:
      tick_type: TRD
- name: mapping
  endpoint:
    path: /api/join
    method: POST
    data_selector: data
    params: {}
- name: trades
  endpoint:
    path: /api/v1/trades
    method: GET
    data_selector: records
    params:
      symbol_date: '2023-02-02'
- name: corporate_actions
  endpoint:
    path: /oqd/sources/CorporateActions
    method: GET
    data_selector: records
- name: OHLCV
  endpoint:
    path: /oqd/ohlcv
    method: GET
    data_selector: records
    params:
      exch: USCOMP
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: US_COMP_SAMPLE
  endpoint:
    path: /onetick/query
    method: GET
    data_selector: trd
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: databases
  endpoint:
    path: otp.databases
    method: GET
    data_selector: database_name
    params: {}
- name: dates
  endpoint:
    path: otp.databases()['SOME_DB'].dates()
    method: GET
    data_selector: dates
    params: {}
- name: tick_types
  endpoint:
    path: otp.databases()['DEMO_L1'].tick_types()
    method: GET
    data_selector: tick_types
    params: {}
- name: schema
  endpoint:
    path: otp.databases()['SOME_DB'].schema(tick_type='TRD')
    method: GET
    data_selector: schema
    params: {}
- name: symbols
  endpoint:
    path: databases['SOME_DB'].symbols(tick_type='TRD', date=otp.dt(2003, 12, 1))
    method: GET
    data_selector: symbols
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /path/to/data/source
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trades
  endpoint:
    params:
      start: otp.dt(2022, 3, 1)
      end: otp.dt(2022, 3, 2)
- name: trades
- name: quotes
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trades
  endpoint:
    path: /DataSource
    method: GET
    data_selector: records
    params:
      db: US_COMP
      tick_type: TRD
      date: otp.dt(2023, 3, 1)
- name: symbols
  endpoint:
    path: /Symbols
    method: GET
    data_selector: records
    params:
      db: US_COMP
      pattern: AAA%
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tick_data
  endpoint:
    path: /api/tick_data
    method: GET
    data_selector: records
    params: {}
- name: tick_generator
  endpoint:
    path: /api/tick_generator
    method: GET
    data_selector: records
    params: {}
- name: add_field
  endpoint:
    path: /api/add_field
    method: POST
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tick_data
  endpoint:
    path: /services/data/v1.165/tick_data
    method: GET
    data_selector: records
    params: {}
- name: test_simple
  endpoint:
    path: /project-folder/tests/test_simple.py
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cur_dir
  endpoint:
    path: /path/to/cur_dir
    method: GET
    data_selector: records
- name: par_dir
  endpoint:
    path: /path/to/par_dir
    method: GET
    data_selector: records
- name: keep_generated_dir
  endpoint:
    path: /path/to/keep_generated_dir
    method: GET
    data_selector: records
- name: f_session
  endpoint:
    path: /path/to/f_session
    method: GET
    data_selector: records
- name: c_session
  endpoint:
    path: /path/to/c_session
    method: GET
    data_selector: records
- name: m_session
  endpoint:
    path: /path/to/m_session
    method: GET
    data_selector: records
- name: otq_path
  endpoint:
    path: /path/to/otq_path
    method: GET
    data_selector: records
- name: default_tz
  endpoint:
    path: /path/to/default_tz
    method: GET
    data_selector: records
- name: default_start_time
  endpoint:
    path: /path/to/default_start_time
    method: GET
    data_selector: records
- name: default_end_time
  endpoint:
    path: /path/to/default_end_time
    method: GET
    data_selector: records
- name: default_symbol
  endpoint:
    path: /path/to/default_symbol
    method: GET
    data_selector: records
- name: default_database
  endpoint:
    path: /path/to/default_database
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_retrieval
  endpoint:
    path: /services/data/vXX.X/dataRetrieval
    method: GET
    data_selector: records
    params: {}
- name: tick_data
  endpoint:
    path: /api/tick
    method: GET
    data_selector: records
- name: ohlc_data
  endpoint:
    path: /api/ohlc
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: DataFile
  endpoint:
    path: /DataFile
    method: GET
    data_selector: records
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /data_source
    method: GET
    data_selector: records
    params:
      db: US_COMP
      tick_type: TRD
      symbols: AAPL
      date: '2022-03-02'
      max_back_ticks_to_prepend: 2
      back_to_first_tick: '1'
      keep_first_tick_timestamp: ORIGIN_TIMESTAMP
- name: schema
  endpoint:
    path: /schema
    method: GET
    data_selector: schema
    params: {}
- name: FindSnapshotSymbols
  endpoint:
    path: /FindSnapshotSymbols
    method: GET
    data_selector: symbols
    params:
      snapshot_name: VALUE
      snapshot_storage: memory
      pattern: '%'
      show_original_symbols: false
      discard_on_match: false
- name: some_cache
  endpoint:
    method: GET
- name: parquet_file
  endpoint:
    path: /path/to/parquet/file
    method: GET
- name: ReadSnapshot
  endpoint:
    path: /otp.ReadSnapshot
    method: GET
    data_selector: records
- name: snapshot_list
  endpoint:
    path: /ShowSnapshotList
    method: GET
    data_selector: SNAPSHOT_NAME
    params:
      snapshot_storage: all
- name: symbology_mapping
  endpoint:
    path: /otp/symbology_mapping
    method: GET
- name: symbols
  endpoint:
    path: /symbols
    method: GET
    data_selector: records
    params: {}
- name: tick
  endpoint:
    path: /api/ticks
    method: POST
    data_selector: data
- name: ticks
  endpoint:
    path: /ticks
    method: GET
- name: add_fields
  endpoint:
    path: /Source/add_fields
    method: POST
    data_selector: fields
    params: {}
- name: add_prefix
  endpoint:
    path: /otp.Source.add_prefix
    method: GET
    data_selector: None
    params: {}
- name: add_suffix
  endpoint:
    path: /Source/add_suffix
    method: POST
    data_selector: Source
    params: {}
- name: aggregation
  endpoint:
    path: /Source/agg
    method: POST
    data_selector: result
    params: {}
- name: cache
  endpoint:
    path: /source/cache
    method: POST
- name: character_present
  endpoint:
    path: /Source/character_present
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: corp_actions
  endpoint:
    path: /corp_actions
    method: POST
    data_selector: records
    params: {}
- name: count
  endpoint:
    path: /count
    method: GET
    data_selector: ticks
    params: {}
- name: time_series_diff
  endpoint:
    path: /source/diff
    method: POST
    data_selector: result
- name: drop
  endpoint:
    path: /otp/Source/drop
    method: POST
    data_selector: none
    params: {}
- name: dump
  endpoint:
    path: /Source/dump
    method: GET
    data_selector: columns
    params: {}
- name: estimate_ts_delay
  endpoint:
    path: /estimate_ts_delay
    method: POST
    data_selector: output
    params:
      smallest_time_granularity_msec: 1
      max_ts_delay_msec: 1000
      bucket_time: end
      groups_to_display: all
- name: Source
  endpoint:
    path: /execute
    method: POST
    data_selector: operations
    params:
      inplace: false
- name: EXP_TW_AVERAGE
  endpoint:
    path: /Source/exp_tw_average
    method: GET
    data_selector: records
    params: {}
- name: exp_w_average
  endpoint:
    path: /otp/Source/exp_w_average
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Ticks
  endpoint:
    path: /otp/Ticks
    method: POST
    data_selector: records
    params: {}
- name: find_value_for_percentile
  endpoint:
    path: /find_value_for_percentile
    method: GET
- name: ticks
  endpoint:
    path: /ticks
    method: GET
    data_selector: ticks
    params:
      n: 5
- name: high_ticks
  endpoint:
    path: /high_ticks
    method: GET
    data_selector: ticks
    params: {}
- name: implied_vol
  endpoint:
    path: /implied_vol
    method: GET
    data_selector: VALUE
    params:
      interest_rate: '0.05'
      option_type_field: OPTION_TYPE
      strike_price_field: STRIKE_PRICE
      days_till_expiration_field: DAYS_TILL_EXPIRATION
- name: insert_at_end
  endpoint:
    path: /otp/Source/insert_at_end
    method: POST
    data_selector: source
    params:
      propagate_ticks: true
      delimiter_name: AT_END
      inplace: false
- name: data_quality_event
  endpoint:
    path: /insert_data_quality_event
    method: POST
    data_selector: data_quality
    params:
      insert_before: true
      inplace: false
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: insert_tick
  endpoint:
    path: Source.insert_tick
    method: INSERT
    data_selector: ticks
    params: {}
- name: join_with_collection
  endpoint:
    path: /otp/Source/join_with_collection
    method: GET
    data_selector: Source
- name: join_with_query
  endpoint:
    method: POST
- name: join_with_snapshot
  endpoint:
    path: /otp/Source/join_with_snapshot
    method: POST
- name: last_ticks
  endpoint:
    path: /Source/last
    method: GET
    data_selector: ticks
    params:
      n: 1
      running: false
      bucket_interval: 0
      bucket_time: end
- name: trades
  endpoint:
    params:
      quote_delay: 0.3
      show_quote_fields: true
- name: linear_regression
  endpoint:
    path: /linear_regression
    method: POST
    data_selector: output
    params:
      running: false
      all_fields: false
      bucket_interval: 0
      bucket_time: end
      bucket_units: seconds
      end_condition_per_group: false
      boundary_tick_bucket: new
- name: low_time
  endpoint:
    path: /otp/source/low_time
    method: GET
    data_selector: records
    params: {}
- name: meta_fields
  endpoint:
    path: /meta_fields
    method: GET
- name: mkt_activity
  endpoint:
    path: /mkt_activity
    method: GET
    data_selector: MKT_ACTIVITY
    params: {}
- name: modify_symbol_name
  endpoint:
    path: /modify_symbol_name
    method: POST
    data_selector: Source
    params: {}
- name: multi_portfolio_price
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ob_num_levels
  endpoint:
    path: /ob_num_levels
    method: GET
    data_selector: data
    params:
      max_initialization_days: 1
- name: ob_size
  endpoint:
    path: /ob_size
    method: GET
    data_selector: records
- name: ob_snapshot
  endpoint:
    path: /ob_snapshot
    method: GET
    data_selector: records
    params:
      max_levels: 1
- name: ob_snapshot_flat
  endpoint:
    path: /services/data/vXX.X/sobjects/ob_snapshot_flat
    method: GET
    data_selector: records
    params:
      max_levels: 1
- name: ob_snapshot_wide
  endpoint:
    path: /sources/order_book/ob_snapshot_wide
    method: GET
    data_selector: records
    params:
      max_levels: 1
- name: ob_summary
  endpoint:
    path: /ob_summary
    method: GET
    data_selector: summary
    params:
      max_levels: 1
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ob_vwap
  endpoint:
    path: /ob_vwap
    method: GET
- name: percentile
  endpoint:
    path: /Source/percentile
    method: GET
    data_selector: records
- name: pnl_realized
  endpoint:
    path: /pnl_realized
    method: GET
    data_selector: results
    params:
      computation_method: fifo
      output_field_name: PNL_REALIZED
      size_field: SIZE
      price_field: PRICE
      buy_sell_flag_field: BUY_SELL_FLAG
- name: ticks
  endpoint:
    path: /source/point_in_time
    method: POST
    data_selector: data
    params: {}
- name: Order book sources
  endpoint:
    path: /sources/order_book/root.html
    method: GET
    data_selector: records
    params: {}
- name: portfolio_price
  endpoint:
    path: /portfolio_price
    method: GET
    data_selector: records
    params: {}
- name: ranking
  endpoint:
    path: /Source/ranking
    method: GET
    data_selector: records
    params: {}
- name: return_ep
  endpoint:
    path: /return_ep
    method: GET
    data_selector: data
    params:
      bucket_interval: 0
- name: save_snapshot
  endpoint:
    path: /otp.Source.save_snapshot
    method: POST
    data_selector: snapshot_data
    params:
      snapshot_name: VALUE
      snapshot_storage: memory
      default_db: CEP_SNAPSHOT
      expected_symbols_per_time_series: 1000
      num_ticks: 1
      reread_prevention_level: 1
      expected_groups_per_symbol: 10
      keep_snapshot_after_query: false
      allow_concurrent_writers: false
      remove_snapshot_upon_start: null
- name: Order book sources
  endpoint:
    path: /sources/order_book/root.html
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: show_symbol_name_in_db
  endpoint:
    path: /show_symbol_name_in_db
    method: POST
    data_selector: SYMBOL_NAME_IN_DB
    params:
      inplace: 'False'
- name: sink
  endpoint:
    path: /sink
    method: POST
    data_selector: None
    params:
      inplace: 'True'
- name: skip_bad_tick
  endpoint:
    path: /skip_bad_tick
    method: POST
    data_selector: result
    params:
      field: field
      discard_on_match: false
      jump_threshold: 2.0
      num_neighbor_ticks: 5
      use_absolute_values: false
      inplace: false
- name: ticks
  endpoint:
    path: /ticks
    method: GET
    data_selector: data
    params: {}
- name: standardized_moment
  endpoint:
    path: /standardized_moment
    method: GET
- name: ticks
  endpoint:
    path: /ticks
    method: GET
    data_selector: ticks
    params:
      n: '5'
- name: time_filter
  endpoint:
    path: Source.time_filter
    method: GET
    data_selector: ticks
    params:
      discard_on_match: false
      start_time: 0
      end_time: 0
      day_patterns: ''
      timezone: utils.default
      end_time_tick_matches: false
      inplace: false
- name: Ticks
  endpoint:
    path: /otp/Ticks
    method: POST
    data_selector: records
- name: virtual_ob
  endpoint:
    path: /virtual_ob
    method: POST
    data_selector: output
    params:
      quote_source_fields: null
      quote_timeout: null
      show_full_detail: false
      output_book_format: ob
      inplace: false
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Column.__getitem__
  endpoint:
    path: /onetick.py/Column/__getitem__
    method: GET
    data_selector: Operation
    params: {}
- name: fillna
  endpoint:
    path: /otp/Operation/fillna
    method: POST
    data_selector: value
    params: {}
- name: map
  endpoint:
    path: /otp/Operation/map
    method: GET
    data_selector: records
    params: {}
- name: round
  endpoint:
    path: /Operation/round
    method: GET
    data_selector: results
    params:
      precision: int
- name: TickDeque
  endpoint:
    path: /tick_deque
    method: GET
- name: _TickDequeTick
  endpoint:
    path: /onetick.py/core/_internal/_state_objects/_TickDequeTick
    method: GET
    data_selector: records
- name: TickList
  endpoint:
    path: /tick_list
    method: GET
    data_selector: records
- name: TickListTick
  endpoint:
    path: /tick_list_tick
    method: GET
    data_selector: tick object
- name: TickSet
  endpoint:
    path: /state/tick_set
    method: GET
    data_selector: tick_set
- name: TickSetTick
  endpoint:
    path: /tick_set_tick
    method: GET
    data_selector: tick_set
    params: {}
- name: tick_set_unordered
  endpoint:
    path: /tick_set_unordered
    method: GET
    data_selector: parameters
    params:
      insertion_policy: oldest
      key_fields: B
      max_distinct_keys: 5
- name: Ticks
  endpoint:
    path: /api/ticks
    method: GET
    data_selector: records
    params: {}
- name: join
  endpoint:
    path: /otp/join
    method: POST
    data_selector: data
    params: {}
- name: time_series_ticks
  endpoint:
    path: /join_by_time
    method: POST
    data_selector: ticks
    params: {}
- name: Data Source
  endpoint:
    params:
      tick_type: TRD
- name: qcut
  endpoint:
    path: /otp/qcut
    method: GET
    data_selector: object
    params: {}
- name: average
  endpoint:
    path: /otp/agg/average
    method: GET
    data_selector: results
    params: {}
- name: correlation
  endpoint:
    path: /otp/agg/correlation
    method: GET
    data_selector: results
    params: {}
- name: distinct
  endpoint:
    path: /otp/agg/distinct
    method: GET
    data_selector: ticks
    params: {}
- name: exp_tw_average
  endpoint:
    path: /otp/agg/exp_tw_average
    method: GET
    data_selector: records
    params: {}
- name: exp_w_average
  endpoint:
    path: /otp/agg/exp_w_average
    method: GET
    data_selector: records
    params: {}
- name: first
  endpoint:
    path: /otp/agg/first
    method: POST
    data_selector: data
    params: {}
- name: first_tick
  endpoint:
    path: /first_tick
    method: GET
    data_selector: ticks
    params:
      n: 1
      running: false
      bucket_interval: 0
      bucket_time: end
      bucket_units: seconds
      end_condition_per_group: false
      boundary_tick_bucket: new
      groups_to_display: all
      keep_timestamp: true
- name: first_time
  endpoint:
    path: /otp/agg/first_time
    method: GET
    data_selector: results
    params: {}
- name: high_tick
  endpoint:
    path: /agg/high_tick
    method: GET
    data_selector: records
    params: {}
- name: high_time
  endpoint:
    path: /agg/high_time
    method: GET
- name: implied_vol
  endpoint:
    path: /otp/agg/implied_vol
    method: GET
    data_selector: VALUE
    params: {}
- name: last_tick
  endpoint:
    path: /agg/last_tick
    method: GET
    data_selector: ticks
    params:
      n: 1
      running: false
      bucket_interval: 0
      bucket_time: end
      bucket_units: null
      end_condition_per_group: false
      boundary_tick_bucket: new
      groups_to_display: all
      keep_timestamp: true
      time_series_type: event_ts
- name: last_time
  endpoint:
    path: /otp/agg/last_time
    method: GET
    data_selector: records
    params: {}
- name: linear_regression
  endpoint:
    path: /otp/agg/linear_regression
    method: POST
- name: low_tick
  endpoint:
    path: /otp/agg/low_tick
    method: GET
    data_selector: data
    params: {}
- name: low_time
  endpoint:
    path: /otp/agg/low_time
    method: GET
    data_selector: results
- name: max
  endpoint:
    path: /otp/agg/max
    method: GET
    data_selector: records
    params: {}
- name: multi_portfolio_price
  endpoint:
    path: /path/to/multi_portfolio_price
    method: GET
    data_selector: records
    params:
      portfolios_query: some_query.otq::portfolios_query
      weight_field_name: WEIGHT
      portfolios_query_params:
        PORTFOLIO_1_NAME: CUSTOM_NAME
      symbols:
      - US_COMP::AAPL
      - US_COMP::MSFT
      - US_COMP::ORCL
- name: ob_num_levels
  endpoint:
    path: /ob_num_levels
    method: GET
    data_selector: results
- name: ob_size
  endpoint:
    path: /otp/agg/ob_size
    method: GET
    data_selector: results
- name: ob_snapshot
  endpoint:
    path: /ob_snapshot
    method: GET
    data_selector: records
    params:
      max_levels: 1
- name: ob_snapshot_flat
  endpoint:
    path: /otp/agg/ob_snapshot_flat
    method: GET
    data_selector: data
    params:
      max_levels: 1
- name: ob_snapshot_wide
  endpoint:
    path: /otp/agg/ob_snapshot_wide
    method: GET
    data_selector: records
    params:
      max_levels: 1
- name: ob_summary
  endpoint:
    path: /otp/agg/ob_summary
    method: GET
    data_selector: records
    params:
      max_levels: 1
- name: ob_vwap
  endpoint:
    path: /agg/ob_vwap
    method: GET
    data_selector: records
    params:
      bucket_interval: 0
      max_initialization_days: 1
- name: option_price
  endpoint:
    path: /otp/agg/option_price
    method: GET
    data_selector: results
    params: {}
- name: option_price_put
  endpoint:
    path: /otp/agg/option_price
    method: POST
    data_selector: VALUE
    params: {}
- name: option_price_call
  endpoint:
    path: /otp/agg/option_price
    method: POST
    data_selector: VALUE
    params: {}
- name: percentile
  endpoint:
    path: /percentile
    method: GET
    data_selector: results
    params: {}
- name: ranking
  endpoint:
    path: /otp/agg/ranking
    method: GET
    data_selector: records
    params: {}
- name: return
  endpoint:
    path: /agg/return_ep
    method: GET
    data_selector: RETURN
- name: tw_average
  endpoint:
    path: /otp/agg/tw_average
    method: GET
    data_selector: results
- name: variance
  endpoint:
    path: /otp/agg/variance
    method: GET
    data_selector: results
- name: vwap
  endpoint:
    path: /vwap
    method: GET
    data_selector: results
    params: {}
- name: main_directory
  endpoint:
    path: /opt/one_market_data/one_tick
    method: GET
- name: meta_fields
  endpoint:
    path: /meta_fields
    method: GET
    data_selector: fields
    params: {}
- name: some_query
  endpoint:
    path: /otqs/some.otq::some_query
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: locator
  endpoint:
    path: /path/to/locator
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- webapi extra is needed to install additional dependencies required for making web-connection
  to the OneTick server.
- For customers with an on-prem server installation of OneTick.
- Uses the default installation method (WebAPI).
- The OneTick server should be restarted after configuration is set.
- If you have a local OneTick installation and PYTHONPATH pointing to it, you need
  to unset PYTHONPATH to avoid conflicts.
- The easiest way is to create or log-in to account on https://www.onetick.com/cloud-services/
- Uses OAuth2 with client ID and client secret for authentication
- Requires setup of account on https://www.onetick.com/cloud-services/
- All filtering is done in OneTick not in Python, which is much more efficient and
  lets us work with much bigger data sets.
- Aggregation operations support grouping.
- Requires setup of connected app in OneTick API
- Some data may return nulls in deeply nested fields
- It’s best to use the GMT time zone when working with OQD data.
- Most of the time you’ll be looking for composite.
- Using of data inspection not recommended in complex production queries.
- DB.dates method loads time ranges for database as one year chunks.
- Rendering function supports graphs with nested queries
- The schema deduction takes place in the constructor of the `onetick.py.DataSource`,
  and it is enabled by default when the db parameter is specified.
- It is strongly recommended to explicitly disable the schema deduction mechanism
  and specify the schema manually for production cases.
- The interval can also be specified using the date parameter of the otp.DataSource.
- Default value for concurrency is onetick.py.configuration.Config.default_concurrency
- Default value for batch_size is onetick.py.configuration.Config.default_batch_size
- It also installs the pytest package and the necessary dependencies.
- Some objects may return nulls in deeply nested fields
- Uses pytest for testing functionalities
- Common fixtures are available for testing
- 'The plugin adds a custom --keep-generated flag to pytest that allows to control
  the lifetime of generated resources during tests: config files for otp.Session,
  databases, OTQ queries, etc.'
- This flag handles only folders and files that are created using the otp.TmpFile
  and otp.TmpDir correspondingly.
- In code your set or otp.config['show_stack_info'] or the OTP_SHOW_STACK_INFO env
  variable to enable this option
- In tests your could use the --show-stack-trace option
- You can also gather performance metrics for all queries made in a session.
- Uses OAuth2 with refresh token — requires setup of connected app in OneTick
- Default value for logging parameter is WARNING
- In case logging level is specified, the logging system is set up to print log to
  the standard error stream (stderr)
- Each request to Ray server needs to be done in initialized context
- It is necessary to shutdown your Ray connection after usage
- Commands in this guide are expected to be run on Linux.
- Some changes must be made to run them on Windows.
- Install Ray using pip install "ray[default]==2.9.0"
- To run Ray server, use ray start --head --dashboard-host=<your_server_ip> --node-ip-address=<your_server_ip>
- Open ports 10001 and 8265 for Ray server
- Use ray.init("ray://<your_server_ip>:10001") to connect from client machines
- You cannot use custom/imported modules inside remote functions - compute all arguments
  before calling remote function.
- Ray instance is isolated from global Internet.
- Run only `onetick.py` specific code to reduce Ray instance resource (memory, CPU)
  consumption.
- You cannot use file pointers as arguments - call remote functions with file content
  as argument.
- 'If you run Python script with you facing the error ImportError: We can’t import
  onetick.query, because we can’t find it and related libraries in the PYTHONPATH.'
- Re-check your IP in whitelist.
- Check your connection, is it allowed to have outcoming connection on 10001 port.
- Check your connection certificates files are downloaded and corresponding environment
  variables are set.
- Test your gRPC-connection by Python script.
- Separate installation page for remote Cloud Server usage through WebAPI.
- Added WebAPI support through onetick.query_webapi module
- Earlier the Symbols returned symbols with a database prefix, but we introduce a
  keep_db flag and default value broke backward-compatibility. Set default to True
  to keep compatibility
- Note that query start time is inclusive, but query end time is not, meaning that
  ticks with timestamps equal to the query end time will not be included.
- Double quotes are not supported in CSV files for escaping quotes in strings
- Continuous event processing (CEP) of the data file is currently supported only for
  the JSON format.
- Default time assigned to ticks is query end time.
- Default schema policy is tolerant unless specified otherwise.
- ODBC source supported only on OneTick versions starting from release 1.24
- In order for this method to have reasonable performance, the set of queried timestamps
  has to be relatively small.
- Reads ticks for a specified symbol name and snapshot name from global memory storage
  or from a memory mapped file.
- 'Ticks with an empty symbol name are saved under CEP_SNAPSHOT:: symbol name.'
- Default snapshot_storage parameter is 'all'.
- Parameter `symbol_date` must be set in `otp.run` for this source to work.
- Columns can’t be renamed if their resulting name will be equal to existing column
  name.
- Parameters columns and ignore_columns can’t be used at the same time.
- Aggregation can be calculated in a sliding window.
- If all_fields=True, an output tick is generated only for arrival events.
- Cache will be created only for current session.
- Returns the number of ticks in the query.
- Result is a single value – number of ticks.
- If bucket_interval is set to 0 a single bucket for the entire interval is created.
- Bucket interval can also be set with integer OnetickParameter or symbol parameter.
- Deprecated since version 1.14.5.
- This EP requires a time series of ticks, having the PRICE and OPTION_PRICE attributes.
- OPTION_TYPE must have either CALL value, or PUT.
- You should update schema manually, if you want to use fields from snapshot in onetick-py
  query description before its execution.
- If you set default_fields_for_outer_join parameter, schema will be guessed from
  default fields values.
- Aggregation can be calculated as a sliding window or non-overlapping intervals
- If bucket_interval is set to 0, a single bucket for the entire interval is created
- Default bucket_units is seconds
- When applying mkt_activity() to aggregated data, session flags may change during
  the aggregation bucket.
- This EP supports only seconds as bucket_interval.
- Specifies if the aggregation will be calculated as a sliding window.
- The query will not go back resulting number of days if it finds initial book state
  earlier.
- When set, max_initialization_days parameter takes precedence over the configuration
  parameter BOOKS.MAX_INITIALIZATION_DAYS.
- Controls application of bucket_end_condition in groups.
- By default the number of milliseconds is used as an offset.
- Offset may be positive or negative.
- Ranking running aggregation.
- Sorts a series of ticks over a bucket interval using a specified set of tick fields
  specified in `rank_by`.
- By default symbol errors are not showed, use this method to see them.
- Sorts ticks by columns.
- Order to sort by can be specified as ascending or descending.
- Ticks’ timestamps are changed automatically so they fit into original time range.
- In case parameters max_delay_of_original_timestamp or max_delay_of_new_timestamp
  are specified this method automatically uses modify_query_times method, affecting
  the start or end time of the query thus possibly changing some logic of the nodes
  placed higher in the graph.
- Also there are some limitations on using this method in the graph, e.g. this method
  can’t be used in the diamond pattern and can’t be used twice in the same graph.
- This method does not save anything. It adds instruction in query to save.
- Input must not have field ‘time’ as that field will also be added by the EP in the
  resulting file(s)
- By default the text is written to the standard output
- Output file can also be specified
- The size of the type is not specified and may vary across different systems.
- Most commonly it’s a 2-byte type with allowed values from -32768 to 32767.
- If you try to set value with length x to string[y] and x > y, value will be truncated
  to y length.
- class otp.string is a child of python’s str class, so every object passed to constructor
  is converted to string.
- Most commonly it’s a 8-byte type with allowed values from 0 to 2**64 - 1.
- Note that arithmetic operations may result in overflow.
- Class otp.datetime is used for representing date with time in onetick-py.
- This class should only be created with `onetick.py.state.tick_deque()` function
  and should be added to the `onetick.py.Source.state_vars()` dictionary.
- This class should only be created with `onetick.py.state.tick_list()` function and
  should be added to the `onetick.py.Source.state_vars()` dictionary.
- Defines a state tick set with parameters such as insertion_policy and key_fields.
- Can be used in per-tick script
- Can be used in source columns operations
- Event processor adds SYMBOL_NAME and SOURCE fields to ticks.
- join does some internal optimization in case of using time-based on conditions.
- Default joining logic is outer join with the first source as the leader.
- Adjusts values using corporate actions information loaded into OneTick from the
  reference data file.
- To use it, location of reference database must be specified via OneTick configuration.
- Weight decay is controlled by the decay parameter.
- bucket_units defaults to seconds if not specified.
- 'Default: False'
- Default behavior is non-running mode with a single bucket for the entire interval.
- Aggregation buckets guide provides examples for parameters.
- Some functions may be not supported in `query_fun`.
- Requires a time series of ticks, having the PRICE and OPTION_PRICE attributes.
- This function returns the maximum value of the input column.
- Aggregation will be calculated as a sliding window if running is True.
- If bucket_interval is set to 0, a single bucket for the entire interval is created.
- Aggregates summary statistics for one or both sides of an order book
- This aggregation requires several parameters to compute the option price.
- EXPIRATION_DATE is in YYYYMMDD format, a string in case of a symbol parameter and
  an integer in case of a tick attribute.
- NUMBER_OF_STEPS should be specified in case of Cox-Ross-Rubinstein method.
- Default number of quantiles is 2
- Running aggregation defaults to False
- Default bucket interval is 0
- seconds bucket unit doesn’t take into account daylight-saving time of the timezone,
  so you may not get expected results when using, for example, 24 * 60 * 60 seconds
  as bucket interval.
- Returns time weighted average of input field
- Implements variance aggregation
- Get current OneTick build number
- Callbacks are executed sequentially, so make sure they don’t take too much time
  to execute.
- By default, this directory will be deleted automatically after all references to
  it are gone.
- By default, this file will be deleted automatically after all references to it are
  gone.
- Base path where temporary files are created could be set using the ONE_TICK_TMP_DIR.
- It is allowed to have only one alive session instance in the process.
- If config file is not set then temporary is generated.
- This class can only be used to create database on the local machine.
- Database is created by using/creating a directory in the local filesystem and adding
  entries to the OneTick locator and ACL local files.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'ValueError: It is allowed to use only one of `columns` or `ignore_columns` parameters
  at a time'
- 'AttributeError: Column XX already exists, please, use another suffix'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Source
client:
  base_url: https://rest.cloud.onetick.com
  auth:
    type: oauth2
    token_url: https://cloud-auth.parent.onetick.com/realms/OMD/protocol/openid-connect/token
    client_id: __FILL_IN__
    client_secret: __FILL_IN__
  headers:
    Accept: application/json
source_metadata: null
