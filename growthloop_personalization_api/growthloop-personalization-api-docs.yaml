resources:
- name: audience_list
  endpoint:
    path: /v1/audiences
    method: GET
    data_selector: audiences
- name: audience_profile
  endpoint:
    path: /v1/audiences
    method: GET
    data_selector: audience_profile
    params:
      identifier: insert_id_here
- name: audience_list
  endpoint:
    path: /v1/audiences
    method: GET
    data_selector: audiences
- name: audience_profile
  endpoint:
    path: /v1/audiences
    method: GET
    data_selector: audiences
- name: audience_exports
  endpoint:
    path: /reference/get_api-public-exports
    method: GET
- name: audiences
  endpoint:
    path: /reference/get_api-public-audiences
    method: GET
- name: audience_exports
  endpoint:
    path: /api/public/exports
    method: GET
- name: audiences
  endpoint:
    path: /api/public/audiences
    method: GET
- name: audience_exports
  endpoint:
    path: /reference/get_api-public-exports
    method: GET
- name: audiences
  endpoint:
    path: /reference/get_api-public-audiences
    method: GET
- name: audience_exports
  endpoint:
    path: /api/public/exports
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: audience_exports
  endpoint:
    path: /reference/get_api-public-exports
    method: GET
- name: audiences
  endpoint:
    path: /reference/get_api-public-audiences
    method: GET
- name: audience_export
  endpoint:
    path: /api/public/exports/{id}
    method: GET
- name: audience_exports
  endpoint:
    path: /api/public/exports
    method: GET
- name: list_audience_exports
  endpoint:
    path: /api/public/exports
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: audience_export_snapshot
  endpoint:
    path: /api/public/exports/{id}/snapshot
    method: POST
    data_selector: object
    params: {}
- name: audience_export
  endpoint:
    path: /api/public/exports/{id}
    method: GET
    data_selector: data
- name: audience_exports
  endpoint:
    path: /api/public/exports
    method: GET
    data_selector: data
- name: audiences
  endpoint:
    path: /api/public/audiences
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: audience_export_snapshot
  endpoint:
    path: /api/public/exports/{id}/snapshot
    method: POST
    data_selector: object
    params:
      team_id: integer
- name: create_audience
  endpoint:
    path: /api/public/audiences
    method: POST
- name: list_audiences
  endpoint:
    path: /api/public/audiences
    method: GET
- name: audiences
  endpoint:
    path: /api/public/audiences
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: audience
  endpoint:
    path: /api/public/audiences/{id}
    method: GET
    data_selector: data
    params: {}
- name: create_audience
  endpoint:
    path: /api/public/audiences
    method: POST
- name: update_audience
  endpoint:
    path: /api/public/audiences/{id}
    method: PATCH
- name: audience
  endpoint:
    path: /api/public/audiences/{id}
    method: GET
    data_selector: data
    params: {}
- name: audiences
  endpoint:
    path: /api/public/audiences/{id}/breakdowns/{field}
    method: GET
    data_selector: data
    params: {}
- name: update_audience
  endpoint:
    path: /api/public/audiences/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: persona_brief
  endpoint:
    path: /api/public/audiences/{id}/persona_brief
    method: GET
    data_selector: data
    params:
      team_id: integer
- name: audience_breakdowns
  endpoint:
    path: /api/public/audiences/{id}/breakdowns/{field}
    method: GET
- name: dataset_groups
  endpoint:
    path: /api/public/dataset_groups
    method: GET
    data_selector: data
    params:
      page_number: '1'
- name: persona_brief
  endpoint:
    path: /api/public/audiences/{id}/persona_brief
    method: GET
    data_selector: data
    params: {}
- name: dataset_group
  endpoint:
    path: /api/public/dataset_groups/{id}
    method: GET
    data_selector: data
- name: list_dataset_groups
  endpoint:
    path: /api/public/dataset_groups
    method: GET
    data_selector: data
- name: dataset_groups
  endpoint:
    path: /api/public/dataset_groups
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: destinations
  endpoint:
    path: /api/public/destinations
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: dataset_group
  endpoint:
    path: /api/public/dataset_groups/{id}
    method: GET
    data_selector: data
    params: {}
- name: destinations
  endpoint:
    path: /api/public/destinations/{id}
    method: GET
- name: update_journey_node
  endpoint:
    path: /api/public/journeys/{id}/nodes/{key}
    method: PATCH
- name: destinations
  endpoint:
    path: /api/public/destinations
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: destinations
  endpoint:
    path: /api/public/destinations/{id}
    method: GET
- name: journeys
  endpoint:
    path: /api/public/journeys
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: update_journey_node
  endpoint:
    path: /api/public/journeys/{id}/nodes/{key}
    method: PATCH
- name: journey
  endpoint:
    path: /api/public/journeys
    method: POST
    data_selector: data
    params: {}
- name: journeys
  endpoint:
    path: /api/public/journeys
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: journey
  endpoint:
    path: /api/public/journeys/{id}
    method: GET
    data_selector: data
    params: {}
- name: journey
  endpoint:
    path: /api/public/journeys
    method: POST
- name: journeys
  endpoint:
    path: /api/public/journeys/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: dataset_groups
  endpoint:
    path: /api/public/dataset_groups
    method: GET
    data_selector: data
    params:
      page_number: '1'
      per_page: '100'
- name: journey
  endpoint:
    path: /api/public/journeys/{id}
    method: GET
    data_selector: data
    params:
      team_id: integer
- name: journey
  endpoint:
    path: /api/public/journeys/{id}
    method: PATCH
    data_selector: data
- name: destinations
  endpoint:
    path: /api/public/destinations
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: dataset_groups
  endpoint:
    path: /api/public/dataset_groups
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: update_journey_node
  endpoint:
    path: /api/public/journeys/{id}/nodes/{key}
    method: PATCH
    data_selector: data
    params: {}
- name: destinations
  endpoint:
    path: /api/public/destinations
    method: GET
    data_selector: data
    params:
      page_number: 1
      per_page: 100
- name: update_journey_node
  endpoint:
    path: /api/public/journeys/{id}/nodes/{key}
    method: PATCH
- name: flywheel_system
  endpoint:
    path: /create/schema/flywheel_system
    method: POST
- name: signal_snapshots
  endpoint:
    path: /create/schema/signal_snapshots
    method: POST
- name: connection_metadata
  endpoint:
    path: /api/2.0/sql/warehouses
    method: GET
    data_selector: connection_details
- name: audience
  endpoint:
    path: /api/public/audiences
    method: GET
    data_selector: records
- name: page_events
  endpoint:
    path: /events/page
    method: POST
    data_selector: payload
- name: flywheel_system
  endpoint:
    path: /create/schema/flywheel_system
    method: POST
    data_selector: schema
    params: {}
- name: signal_snapshots
  endpoint:
    path: /create/schema/signal_snapshots
    method: POST
    data_selector: schema
    params: {}
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: event
    params: {}
- name: identify
  endpoint:
    path: /identify
    method: POST
    data_selector: traits
    params: {}
- name: group
  endpoint:
    path: /group
    method: POST
    data_selector: traits
    params: {}
- name: connection_metadata
  endpoint:
    path: /sql_warehouses
    method: GET
    data_selector: connection_details
- name: page_events
  endpoint:
    path: /events/page
    method: POST
    data_selector: events
- name: Salesforce CRM
  endpoint:
    path: /reference/get_api-public-audiences
    method: GET
    data_selector: audience_data
    params: {}
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: events
- name: identify
  endpoint:
    path: /identify
    method: POST
    data_selector: events
- name: group
  endpoint:
    path: /group
    method: POST
    data_selector: events
- name: FLYWHEEL_SYSTEM
  endpoint:
    method: CREATE
    data_selector: table
    params: {}
- name: Salesforce CRM
  endpoint:
    path: /api/v1/salesforce
    method: GET
- name: raw_salesforce_import_6
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
    params: {}
- name: dataset_groups
  endpoint:
    path: /api/v1/dataset_groups
    method: GET
    data_selector: data
    params: {}
- name: FLYWHEEL_SYSTEM
  endpoint:
    path: /services/data/vXX.X/sobjects/FLYWHEEL_SYSTEM
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: models
- name: customer_details
  endpoint:
    path: /api/v1/customer_details
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: Dataset
  endpoint:
    path: /datasets
    method: POST
- name: customer_details
  endpoint:
    path: /customer_details
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: Computed Fields
  endpoint:
    path: /api/computed_fields
    method: POST
    data_selector: results
    params: {}
- name: Dataset Groups
  endpoint:
    path: /dataset-groups
    method: POST
    data_selector: data
    params: {}
- name: Audiences
  endpoint:
    path: /audiences
    method: POST
    data_selector: data
    params: {}
- name: computed_field
  endpoint:
    path: /computed_fields
    method: POST
    data_selector: computed_fields
- name: MinimumAudienceRequirements
  endpoint:
    path: /audience/minimum-requirements
    method: GET
    data_selector: audience_requirements
    params: {}
- name: Dataset Group
  endpoint:
    path: /datasets/groups
    method: POST
    data_selector: data
    params: {}
- name: Audiences
  endpoint:
    path: /audiences
    method: POST
    data_selector: data
    params: {}
- name: Journeys
  endpoint:
    path: /journeys
    method: POST
    data_selector: data
    params: {}
- name: audiences
  endpoint:
    path: /api/audiences
    method: POST
    data_selector: audiences
- name: custom_attributes
  endpoint:
    path: /reference/custom-attributes
    method: GET
    data_selector: attributes
    params: {}
- name: default_filters
  endpoint:
    path: /docs/setup-default-filters
    method: GET
- name: audience
  endpoint:
    path: /api/audience
    method: POST
    data_selector: audience_data
- name: audience_export
  endpoint:
    path: /api/audience/export
    method: GET
    data_selector: export_data
- name: audience_exports
  endpoint:
    path: /api/public/audiences
    method: GET
    data_selector: exports
    params: {}
- name: audience_exports
  endpoint:
    path: /api/audience_exports
    method: POST
    data_selector: data
    params: {}
- name: default_filters
  endpoint:
    path: /docs/setup-default-filters
    method: GET
    data_selector: filters
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: GET
    data_selector: audience_data
- name: journey
  endpoint:
    path: /journeys
    method: GET
    data_selector: journey_data
- name: audience_exports
  endpoint:
    path: /api/v1/audiences/exports
    method: GET
    data_selector: exports
    params: {}
- name: trigger_export
  endpoint:
    path: /api/v1/audiences/exports/{export_id}/trigger
    method: POST
    data_selector: export
    params: {}
- name: audience
  endpoint:
    path: /api/v1/audience
    method: POST
    data_selector: audience_data
- name: campaign_evaluation
  endpoint:
    path: /api/v1/campaign_evaluation
    method: GET
    data_selector: evaluation_data
- name: audience
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: audiences
    params: {}
- name: campaign_evaluation
  endpoint:
    path: /api/campaigns/evaluation
    method: GET
    data_selector: evaluations
    params: {}
- name: journeys
  endpoint:
    path: /api/journeys
    method: GET
    data_selector: journeys
- name: GrowthLoop Generated Fields
  endpoint:
    path: /growthloop/generated-fields
    method: GET
    data_selector: fields
    params: {}
- name: CRM Actions
  endpoint:
    path: /docs/crm-journeys
    method: GET
    data_selector: records
- name: health_checks
  endpoint:
    path: /api/v1/health_checks
    method: GET
    data_selector: data
    params: {}
- name: realtime_event
  endpoint:
    path: /realtime/events
    method: POST
    data_selector: event
    params: {}
- name: source_connection
  endpoint:
    path: /source/connections
    method: POST
    data_selector: connection
    params: {}
- name: journey_state
  endpoint:
    path: /docs/real-time-journeys
    method: GET
    data_selector: records
    params: {}
- name: journey_live_viewer
  endpoint:
    path: /journeys/live-viewer
    method: GET
    data_selector: users_in_process
    params: {}
- name: journey_activity_tracker
  endpoint:
    path: /journeys/activity-tracker
    method: GET
    data_selector: steps_processed
    params: {}
- name: journey_data_cloud
  endpoint:
    path: /journeys/data-cloud
    method: GET
    data_selector: journey_state
    params: {}
- name: journey
  endpoint:
    path: /api/journeys
    method: POST
    data_selector: journey_data
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: GET
- name: crm_action
  endpoint:
    path: /crm/actions
    method: POST
    data_selector: actions
    params: {}
- name: audience_export
  endpoint:
    path: /api/audience/export
    method: POST
    data_selector: audience
- name: custom_attributes
  endpoint:
    path: /docs/custom-attributes
    method: GET
    data_selector: custom_attributes
- name: audience_export
  endpoint:
    path: /exports/audience
    method: POST
    data_selector: exported_audience
    params: {}
- name: real_time_events
  endpoint:
    path: /api/realtime/events
    method: POST
    data_selector: events
- name: BigQuery
  endpoint:
    path: /docs/bigquery-destination
    method: GET
- name: journey_state
  endpoint:
    path: /journey/state
    method: GET
    data_selector: records
- name: journey
  endpoint:
    path: /journeys
    method: GET
    data_selector: journeys
    params: {}
- name: destination_info
  endpoint:
    path: /destinations
    method: POST
    data_selector: destination
    params: {}
- name: audience_export
  endpoint:
    path: /audiences/export
    method: POST
- name: audience_export
  endpoint:
    path: /audiences/export
    method: POST
    data_selector: exported_audience
- name: audience_export
  endpoint:
    path: /audiences/export
    method: POST
    data_selector: export_data
    params: {}
- name: anonymous_user_data
  endpoint:
    path: /anonymous_user_data
    method: POST
    data_selector: data
    params: {}
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
    data_selector: export
    params: {}
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
    data_selector: export
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: POST
    data_selector: audience
    params: {}
- name: audiences
  endpoint:
    path: /bigquery/audiences
    method: POST
    data_selector: audience_records
- name: audiences
  endpoint:
    path: /api/v3/exported_audiences
    method: POST
    data_selector: audience
    params: {}
- name: audience_export
  endpoint:
    path: /api/v1/audiences/export
    method: POST
    data_selector: exported_audience
    params: {}
- name: Google Cloud Storage Destination
  endpoint:
    path: /api/v1/destinations/gcs
    method: POST
    data_selector: data
    params: {}
- name: audience_export
  endpoint:
    path: /audiences/export
    method: POST
    data_selector: exports
- name: audience_segments
  endpoint:
    path: /api/intercom
    method: POST
- name: audience_export
  endpoint:
    path: /api/audiences/export
    method: POST
- name: klaviyo_destination
  endpoint:
    path: /destination/klaviyo
    method: POST
    data_selector: result
    params: {}
- name: audience_export
  endpoint:
    path: /audience/export
    method: POST
    data_selector: audiences
    params: {}
- name: audience
  endpoint:
    path: /path/to/audience/endpoint
    method: POST
- name: audience_export
  endpoint:
    path: /audiences/export
    method: POST
    data_selector: export
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: POST
    data_selector: data
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: POST
    data_selector: audience_data
- name: MetaRouter Setup
  endpoint:
    path: /docs/getting-started-with-metarouter
    method: GET
    data_selector: events
    params: {}
- name: Pixel ID
  endpoint:
    path: /business/help/314143995668266?id=1205376682832142
    method: GET
    data_selector: pixel_id
    params: {}
- name: audience_segment
  endpoint:
    path: /path/to/audience/segment
    method: POST
    data_selector: audience_segment
    params: {}
- name: maropost_destination
  endpoint:
    path: /api/v1/destinations
    method: POST
    data_selector: destination
    params: {}
- name: audience_export
  endpoint:
    path: /audiences/export
    method: POST
    data_selector: results
    params: {}
- name: audience_export
  endpoint:
    path: /audiences
    method: POST
    data_selector: exported_audience
    params: {}
- name: Google Cloud Storage Setup
  endpoint:
    path: /google-cloud-storage
    method: POST
    data_selector: destination_info
    params: {}
- name: Azure Blob Storage
  endpoint:
    path: /destinations/azure/blob/storage
    method: POST
    data_selector: results
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: POST
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
- name: audience_segments
  endpoint:
    path: /audience_segments
    method: POST
- name: audience_export
  endpoint:
    path: /api/audience/export
    method: POST
- name: Klaviyo
  endpoint:
    path: /api/destinations/klaviyo
    method: POST
    data_selector: data
    params: {}
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
- name: audience
  endpoint:
    path: /api/v1/audiences
    method: POST
    data_selector: audience_data
- name: audience
  endpoint:
    path: /audiences
    method: POST
- name: audience_export
  endpoint:
    path: /api/audience/export
    method: POST
- name: audience_export
  endpoint:
    path: /audiences/export
    method: POST
    data_selector: data
    params: {}
- name: audience_export
  endpoint:
    path: /api/export
    method: POST
    data_selector: data
    params: {}
- name: export_audience
  endpoint:
    path: /v1/audiences/export
    method: POST
- name: audience_export
  endpoint:
    path: /services/data/vXX.X/exports
    method: POST
    data_selector: records
- name: Maropost Destination
  endpoint:
    path: /destinations/maropost
    method: POST
    data_selector: result
    params: {}
- name: GrowthLoop Syncs
  endpoint:
    path: /subscribers/data-extensions
    method: GET
    data_selector: audiences
- name: audience_export
  endpoint:
    path: /api/pardot/audience/export
    method: POST
    data_selector: response
    params:
      username: '{{ dlt.secrets[''salesforce_username''] }}'
      password: '{{ dlt.secrets[''salesforce_password''] }}'
      security_token: '{{ dlt.secrets[''salesforce_security_token''] }}'
      business_account_id: '{{ dlt.secrets[''business_account_id''] }}'
- name: Azure Blob Storage
  endpoint:
    path: /api/azure/blob/storage
    method: POST
    data_selector: audience_segments
    params: {}
- name: audiences
  endpoint:
    path: /audiences
    method: POST
- name: NPI List
  endpoint:
    path: /Buyer/#/setup/npilist
    method: GET
- name: destination_info
  endpoint:
    path: /docs/snowflake-destination
    method: POST
    data_selector: destination_info
    params: {}
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
    data_selector: audience
    params: {}
- name: audiences
  endpoint:
    path: /api/audiences
    method: POST
    data_selector: audience
    params: {}
- name: audiences
  endpoint:
    path: /audiences
    method: POST
    data_selector: audiences
- name: Custom Audience Import
  endpoint:
    path: /custom-audience-import
    method: POST
- name: Tealium
  endpoint:
    path: /api/tealium
    method: POST
    data_selector: audiences
    params: {}
- name: audience_export
  endpoint:
    path: /api/v1/audience/export
    method: POST
- name: crm_segments
  endpoint:
    path: /crm/segments
    method: POST
    data_selector: data
    params: {}
- name: audience_export
  endpoint:
    path: /audience_export
    method: POST
    data_selector: data
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: POST
    data_selector: audience_data
    params: {}
- name: audience_export
  endpoint:
    path: /destinations/pardot
    method: POST
    data_selector: audience
    params: {}
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
    data_selector: audience
    params: {}
- name: export
  endpoint:
    path: /api/v3/marketing/lists
    method: POST
- name: audience_segments
  endpoint:
    path: /sftp/audience_segments
    method: POST
    data_selector: audiences
- name: signals
  endpoint:
    path: /signals
    method: POST
- name: Conversion
  endpoint:
    path: /facebook/conversions
    method: POST
- name: audience_export
  endpoint:
    path: /destinations/snowflake
    method: POST
    data_selector: destination_info
    params: {}
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
    data_selector: audience
    params: {}
- name: conversion_events
  endpoint:
    path: /google-ads/conversions
    method: POST
    data_selector: conversion
    params: {}
- name: audiences
  endpoint:
    path: /api/audiences
    method: POST
- name: conversion
  endpoint:
    method: POST
- name: Tealium Destination
  endpoint:
    path: /tealium/destination
    method: POST
- name: Conversion
  endpoint:
    path: /microsoft-ads/bing-offline-conversions
    method: POST
    data_selector: conversionData
    params: {}
- name: CRM Segment
  endpoint:
    path: /api/segments
    method: POST
    data_selector: segment
    params: {}
- name: audience_export
  endpoint:
    path: /export/audience
    method: POST
    data_selector: exported_audiences
- name: Conversion
  endpoint:
    path: /v5/events-create/
    method: POST
    data_selector: events
    params: {}
- name: conversion_events
  endpoint:
    path: /conversion_events
    method: POST
    data_selector: events
- name: Web Event
  endpoint:
    method: POST
    data_selector: data
- name: event
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: profile_attribute
  endpoint:
    path: /users/track
    method: POST
    data_selector: users
- name: purchase
  endpoint:
    path: /purchase
    method: POST
    data_selector: purchases
- name: Contacts
  endpoint:
    path: /contacts/v1/contact
    method: POST
    data_selector: contacts
    params: {}
- name: Companies
  endpoint:
    path: /companies/v2/companies
    method: POST
    data_selector: companies
    params: {}
- name: Deals
  endpoint:
    path: /deals/v1/deal
    method: POST
    data_selector: deals
    params: {}
- name: Tickets
  endpoint:
    path: /tickets/v1/ticket
    method: POST
    data_selector: tickets
    params: {}
- name: Line Items
  endpoint:
    path: /line_items/v1/line_item
    method: POST
    data_selector: line_items
    params: {}
- name: Event
  endpoint:
    path: /events
    method: POST
    data_selector: records
- name: User
  endpoint:
    path: /users
    method: POST
    data_selector: records
- name: conversion
  endpoint:
    path: /facebook-conversions
    method: POST
- name: Lead
  endpoint:
    path: /rest/v1/leads.json
    method: POST
    data_selector: lead
    params: {}
- name: Custom Objects
  endpoint:
    path: /rest/v1/customobjects.json
    method: POST
    data_selector: customObject
    params: {}
- name: conversion_events
  endpoint:
    path: /google-ads/conversions
    method: POST
    data_selector: conversion_events
- name: Data Extension
  endpoint:
    path: /services/data/vXX.X/sobjects/DataExtension
    method: GET
    data_selector: records
- name: Visitors
  endpoint:
    path: /api/visitors
    method: POST
    data_selector: data
    params: {}
- name: conversion
  endpoint:
    path: /campaign-manager-360/conversions
    method: POST
    data_selector: conversion
    params: {}
- name: Conversion
  endpoint:
    path: /microsoft-ads/bing/offline-conversions
    method: POST
    data_selector: conversionData
    params: {}
- name: Conversion
  endpoint:
    path: /v5/events-create
    method: POST
    data_selector: records
- name: Audience overlap
  endpoint:
    path: /docs/audience-overlap
    method: GET
    data_selector: records
    params: {}
- name: Billing
  endpoint:
    path: /docs/billing
    method: GET
    data_selector: records
    params: {}
- name: Paid media measurement
  endpoint:
    path: /docs/paid-media-measurement
    method: GET
    data_selector: records
    params: {}
- name: Identity resolution
  endpoint:
    path: /docs/identity-resolution
    method: GET
    data_selector: records
    params: {}
- name: Attribution
  endpoint:
    path: /docs/attribution
    method: GET
    data_selector: records
    params: {}
- name: Campaign insights
  endpoint:
    path: /docs/campaign-insights
    method: GET
    data_selector: records
    params: {}
- name: Customer 360
  endpoint:
    path: /docs/customer-360
    method: GET
    data_selector: records
    params: {}
- name: conversion_events
  endpoint:
    path: /api/conversions
    method: POST
    data_selector: events
- name: audiences
  endpoint:
    path: /v1/audiences
    method: GET
    data_selector: data
    params: {}
- name: Web Event
  endpoint:
    path: /gateway/docs/index
    method: POST
    data_selector: records
    params: {}
- name: Event
  endpoint:
    path: /events
    method: POST
    data_selector: records
- name: Profile Attribute
  endpoint:
    path: /users/track
    method: POST
    data_selector: records
- name: Purchase
  endpoint:
    path: /purchases
    method: POST
    data_selector: records
- name: audience_snapshots
  endpoint:
    path: /audience_snapshots
    method: POST
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts/v1/contact
    method: POST
    data_selector: contacts
- name: companies
  endpoint:
    path: /companies/v2/companies
    method: POST
    data_selector: companies
- name: deals
  endpoint:
    path: /deals/v1/deal
    method: POST
    data_selector: deals
- name: tickets
  endpoint:
    path: /tickets/v1/ticket
    method: POST
    data_selector: tickets
- name: line_items
  endpoint:
    path: /line_items/v1/line_item
    method: POST
    data_selector: line_items
- name: Event
  endpoint:
    path: /api/events
    method: POST
    data_selector: event
    params: {}
- name: User
  endpoint:
    path: /api/users
    method: POST
    data_selector: user
    params: {}
- name: Lead
  endpoint:
    path: /rest/v1/leads.json
    method: GET
    data_selector: leads
- name: Custom Objects
  endpoint:
    path: /rest/v1/customobjects.json
    method: GET
    data_selector: customObjects
- name: Visitors
  endpoint:
    path: /syncs/tealium/visitors
    method: POST
    data_selector: records
    params:
      update_rule: Upsert
- name: processing_logs
  endpoint:
    path: /logs/access
    method: GET
    data_selector: logs
    params: {}
- name: user_activity_logs
  endpoint:
    path: /user_activity_logs
    method: GET
    data_selector: logs
    params: {}
- name: S3
  endpoint:
    path: /bring-your-own-bucket
    method: POST
    data_selector: bucket
    params: {}
- name: GCS
  endpoint:
    path: /bring-your-own-bucket
    method: POST
    data_selector: bucket
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: POST
    data_selector: audiences
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: POST
    data_selector: campaigns
    params: {}
- name: SMS_EVENT
  endpoint:
    path: /path/to/sms_event
    method: GET
- name: WHATSAPP_EVENT
  endpoint:
    path: /path/to/whatsapp_event
    method: GET
- name: IN_APP_MESSAGE_EVENT
  endpoint:
    path: /path/to/in_app_message_event
    method: GET
- name: EMAIL_EVENT
  endpoint:
    path: /path/to/email_event
    method: GET
- name: CONTENT_CARD_EVENT
  endpoint:
    path: /path/to/content_card_event
    method: GET
- name: PUSH_NOTIFICATION_EVENT
  endpoint:
    path: /path/to/push_notification_event
    method: GET
- name: snapshot_metadata
  endpoint:
    path: /snapshotting_audience_id_metadata
    method: GET
    data_selector: records
- name: snapshot_history
  endpoint:
    path: /snapshotting_audience_id_snapshot_history
    method: GET
    data_selector: records
- name: delta_history
  endpoint:
    path: /snapshotting_audience_id_delta_history
    method: GET
    data_selector: records
- name: unloaded_deltas
  endpoint:
    path: /snapshotting_audience_id_unloaded_deltas
    method: GET
    data_selector: records
- name: audiences
  endpoint:
    path: /services/data/vXX.X/sobjects/Audience
    method: GET
    data_selector: records
- name: email_alerts
  endpoint:
    path: /email-alerts
    method: GET
- name: GrowthLoop Audience
  endpoint:
    path: /services/data/vXX.X/sobjects/GrowthLoopAudience
    method: GET
    data_selector: records
    params: {}
- name: Email Studio
  endpoint:
    path: /services/data/vXX.X/sobjects/EmailStudio
    method: GET
    data_selector: records
    params: {}
- name: User Activity Logs
  endpoint:
    path: /user-activity-logs
    method: GET
    data_selector: activities
    params: {}
- name: Syncs
  endpoint:
    path: /api/syncs
    method: POST
    data_selector: syncs
    params: {}
- name: CRM Audiences
  endpoint:
    path: /api/crm_audiences
    method: POST
    data_selector: audiences
    params: {}
- name: CRM Ingest
  endpoint:
    path: /api/crm_ingest
    method: POST
    data_selector: ingest
    params: {}
- name: audience
  endpoint:
    path: /api/audiences
    method: POST
    data_selector: audiences
    params: {}
- name: campaign
  endpoint:
    path: /api/campaigns
    method: POST
    data_selector: campaigns
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
    params: {}
- name: audience
  endpoint:
    path: /api/audience
    method: POST
    data_selector: audiences
    params: {}
- name: campaign
  endpoint:
    path: /api/campaigns
    method: POST
    data_selector: campaigns
    params: {}
- name: SMS_EVENT
  endpoint:
    path: /api/sms_event
    method: GET
- name: WHATSAPP_EVENT
  endpoint:
    path: /api/whatsapp_event
    method: GET
- name: IN_APP_MESSAGE_EVENT
  endpoint:
    path: /api/in_app_message_event
    method: GET
- name: EMAIL_EVENT
  endpoint:
    path: /api/email_event
    method: GET
- name: CONTENT_CARD_EVENT
  endpoint:
    path: /api/content_card_event
    method: GET
- name: PUSH_NOTIFICATION_EVENT
  endpoint:
    path: /api/push_notification_event
    method: GET
- name: audience
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: audiences
- name: campaign
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: campaigns
notes:
- Access is controlled using an API key.
- Pass an Authorization header with a value of Bearer base64_encoded_api_key when
  making requests.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 'The API key is then provided to the API in the following format: ''Bearer token=your_secret,
  access_key=your_key'''
- GrowthLoop can sync specific objects and columns to your destination as attributes.
- GrowthLoop can sync audiences to your destination.
- GrowthLoop can sequence multiple communications with customers across several destinations
  with journey orchestration.
- Recommended to use OAuth Service Principle for authentication.
- If your connection failed in the first try, give it one more try before contacting
  support.
- Uses OAuth2 with refresh token — requires setup of connected app in GrowthLoop
- By default, your website will begin sending Page Events to the Event Processing
  Service.
- Page events are sent on page visits by users in the page table.
- Amazon Redshift clusters must be publicly accessible.
- Create schema flywheel_system in the Amazon Redshift cluster’s database.
- Events are stored in Data Cloud for consumption by GrowthLoop.
- If your connection failed in the first try (after a few minutes), give it one more
  try before you contact our team.
- All tables you are looking to join together into a dataset group need to be in the
  same dataset.
- You can connect tables from different datasets, as long as the joins exist within
  the same dataset.
- Automatically begins collecting Page Events once the SDK is installed
- Page events are sent on page visits by users in the page table
- Easy Button empowers organizations to ingest data from popular sources directly
  into your Data Cloud and immediately activate it across all channels.
- The storage integration must be named `FLYWHEEL_APP_GCP`. If it is named anything
  else, the connection will not work.
- Create a GCP Service Account
- Configure GCP Permissions
- Create a BQ dataset to store snapshots
- Connect your BigQuery to the GrowthLoop App
- GrowthLoop automatically updates your Source Connection schemas every day.
- Easy Button supports ingestion and modeling of Salesforce CRM data.
- Estimated time to set up:<15 minutes
- Once you see the status as 'Active', this indicates the raw data has been synced
  to your data warehouse
- Datasets are direct mirrors of tables or views in your data cloud.
- No data is copied, and there is no latency between data readiness in your data cloud
  and its appearance in GrowthLoop.
- Data should not have to leave your data cloud to run your identity process.
- GrowthLoop identity module is optimized to help organizations quickly configure
  match rules, run the identity process, evaluate results and repeat.
- Datasets are a direct mirror of tables/views in your data cloud.
- Ensure Customer Unique ID is included in all datasets.
- Configure your dataset in GrowthLoop for activation.
- 'Runs in your Data Cloud: Data should not have to leave your data cloud to run your
  identity process.'
- 'Deterministic Matching: For identity projects it is important to start with exact
  deterministic matching on user attributes people understand (ie. email, phone, date
  of birth, name, address).'
- 'Rapid Testing: GrowthLoop identity module is optimized to help organizations quickly
  configure match rules, run the identity process, evaluate results and repeat.'
- 'Persistent Keys: GrowthLoop provides a persistent identifier on every golden record.'
- 'Transparency: Your identity solution should be fully transparent. GrowthLoop produces
  tables at each step in the process that your team can see in your data cloud to
  understand what happens at every step.'
- 'Always On: GrowthLoop Identity is an always-on process that will match new records
  so they become available to your team quickly.'
- GrowthLoop accepts any type of table in your data cloud for activation.
- You can add multiple Transaction Datasets to GrowthLoop to create audiences on each.
- Computed Fields are stored as views in your data cloud.
- Users can leverage Computed Fields as personalization attributes in audience and
  journey building.
- GrowthLoop audiences serves as your composable audience management system.
- Your ingested campaigns are automatically tied to their corresponding audiences
  in GrowthLoop.
- Give GrowthLoop up to 30 minutes to properly connect all the ingested data to their
  corresponding audiences.
- Minimum Audience size configurations are set on the Dataset Group level.
- Only Owners and Admins can review and approve audiences.
- Dataset Groups are a way to group a set of tables or models in GrowthLoop.
- Users can select a Dataset Group when creating audiences or journeys.
- If you experience any issues, please reach out to us at support@growthloop.com,
  and we’ll be in touch shortly to help resolve the matter!
- Default settings configured by admins may vary and the datasets connected are unique
  to each organization.
- New features may have also been released after this tutorial was created.
- The fastest way to build an audience is through our Visual Audience Builder or Marve
  Studio.
- By default these values will be set to 0, meaning any audience with any number of
  qualified members will have reporting and exporting capabilities.
- Custom attributes can be added to audiences for tracking and linking internal concepts.
- Labels and values cannot have spaces but can use underscores.
- Users can only submit audiences for approval.
- Selecting Yes will create a campaign for this audience in your Salesforce instance.
  To do so, you must have Marketing User Privileges assigned to your Salesforce username.
- Need a refresher on what an audience is?
- If you schedule an audience export with a daily frequency at a specific date and
  time, all future exports will also run at that time unless changed.
- Common Approaches to Treatment/Control Split include using a Global Control Group
  methodology upon request.
- You must have Marketing User Privileges assigned to your Salesforce username to
  create a campaign.
- The service is fully automated, eliminating the need for manual intervention.
- It offers cost savings as it only evaluates audiences when explicitly activated
  and for a specified time period.
- We usually recommend 5-10 of your most commonly used attributes to be designated
  as default fields.
- GrowthLoop has developed Enhanced Match Rate to increase your paid media match rates.
- GrowthLoop Generated Fields provide additional metadata for audience exports.
- For exports to the Snowflake destination, removals will not appear in the 'Removed'
  column, meaning all exported records are logged as 'Added,' even if they were previously
  removed and re-added.
- GrowthLoop continuously monitors every dataset connected to your account and automatically
  keeps an eye on every live audience export.
- Uses Random Assignment for treatment/control group assignment.
- Global Control Group can be implemented upon request.
- Ensure proper tagging for audience organization.
- Real-time Audience Exports are only available for audiences built on a Snowflake
  source connection.
- The service is fully automated, compatible with various data warehouses.
- The settings for Audience Sharing are in the organization panel.
- You need to have editor access to the audience to share it.
- GrowthLoop Generated Fields provide added context to audience exports.
- This API enables actions on CRM objects.
- Supports Account, Contact, Lead, and Opportunity objects.
- GrowthLoop continuously monitors all connected datasets.
- Custom attributes allow you to tag each customer as they pass through journey nodes.
- Once you've created your desired audiences, you can target them across different
  marketing channels such as Email, Facebook, Google Adwords, and more with a couple
  clicks.
- Whenever you publish a journey, a journey 'state table' is written back to your
  data warehouse.
- It is important to note, that any journeys modified after publish will be re-published.
- You can only switch the schedule from manual mode to any other schedule and never
  to manual mode from another schedule.
- Journey schedule options include One Time, Always On, and Recurring Scheduled.
- GrowthLoop supports every major marketing and sales destination.
- Adobe typically processes batch exports within minutes to a few hours.
- CRM Match Object types include Account, Contact, Lead, Opportunity.
- Access Token must have either Audience Modification or All Access roles granted.
- Ensure you have an S3 bucket created for GrowthLoop to land audience exports.
- Ensure you have created an IAM user, and attached a policy that provides access
  to the S3 bucket.
- You must have an Attentive SFTP account set up.
- Unlike snapshotting, in which multiple tables are written back to the data warehouse
  for each audience, there is only one state table written back for each journey.
- The journey state table is created within the same schema as your snapshotting tables.
- The naming convention for a journey state table is 'journey_[journey id]'.
- The journey ID can be found in the GrowthLoop UI beneath the title of a journey.
- The state table is updated based on the journey run frequency configured as part
  of the journey settings.
- Access to a BigQuery Data warehouse
- Google Cloud service account (and its account key saved as a JSON file)
- You have a limit of 10 keys per service account.
- The new key file will automatically download to your computer as a JSON file.
- GrowthLoop stores journey state tables directly in your data cloud.
- You don’t need to whitelist the IP for the API key.
- To view the account's settings page with the Client ID and Auth Token, log in to
  your Community account.
- Some objects like Contact may return nulls in deeply nested fields
- Only users in the Admin role can grant access.
- You must have a registered Adobe Experience Platform (AEP) account.
- You must create a project in the Adobe Developer Console and add the Experience
  Platform API to it.
- When creating a Campaign with your business account, you will have the option to
  select Manual Placements, allowing you to direct your ads to Facebook, Instagram,
  and/or Messenger, amongst other customizations.
- 'To sync audiences from GrowthLoop to Airship, the Access Token must have one of
  the following roles granted: Audience Modification or All Access.'
- Airship will only accept values in UUID format.
- Requires setup of MetaRouter on your website or application to capture user activities.
- Include your Facebook Pixel ID in the FB Pixel field for this connection to work.
- Wait for approximately 1 hour after you export your audience to see a new event.
- You must have an Attentive SFTP account set up to proceed with configuration.
- Get in touch with your Google account manager to enable audience lists via GCS for
  your network.
- Expect up to a 24-hour delay from segment creation to batch upload availability.
- Google Ads automatically removes users from Customer Match lists after 540 days
  unless the list is updated.
- Save your JSON key file in a safe and memorable place - this key is not recoverable.
- Ensure your Workspace Admin has enabled GrowthLoop on your AllowList of apps.
- You also need to ensure your Google Ads representative has turned on 'Customer Match'.
- You don’t need to whitelist the IP.
- If your customers are based in EEA (Economic European Area) or UK, we highly recommend
  you map the required consent fields to their corresponding columns on your Users
  dataset.
- Create a Google Cloud Storage service account and save its account key as a JSON
  file
- Ensure the service account has the Editor role for managing the bucket
- Mapping Phone, Date of Birth, and State is mandatory for the export process.
- A security credential that will auto-populate.
- Marketers can always change the frequency of an export, but this sets the default.
- OAUTH Token should be automatically populated when redirected to the GrowthLoop
  App.
- When creating a Campaign with your business account, you will have the option to
  select Manual Placements, allowing you to direct your ads to Facebook, Instagram,
  and/or Messenger.
- LiveRamp Activation handles both the file upload via SFTP and the delivery of your
  audience to the selected destination.
- LiveRamp typically takes 12–72 hours to ingest the audience, depending on the size
  of the file.
- This connection only handles the file upload - you’ll choose where to activate those
  audiences later from within your LiveRamp account.
- File ingestion can take anywhere from 12-72 hours for it to be loaded into your
  LiveRamp audience and ready for distribution.
- Setup requires MetaRouter integration with your website or application.
- Ensure to have your Pixel ID ready from your Facebook account.
- Test keys (prefixed with test) are used in the test environment for free trial and
  development purposes, while live keys (prefixed with live) are used in the production
  environment for actual mailing and verification.
- Mailchimp requires us to send all audience segments to the same ‘Audience’ list
  in Mailchimp, instead of breaking out into different lists as it typical for other
  email clients.
- Save the base URL without the '/rest' part for the instance URL.
- Ensure your Workspace Admin has first enabled GrowthLoop on your AllowList of apps.
- GrowthLoop can only connect to Microsoft Ads child accounts, not manager (MCC) accounts.
- GrowthLoop configures exports to Microsoft Ads so that users stay in the audience
  indefinitely. There's no expiration unless you manually remove them.
- GrowthLoop supports array columns as match fields.
- MessageGears supports picking up audiences that are exported to a data warehouse.
- Ensure that your data is in a format that MessageGears will accept.
- Assign your service account the Editor role
- Automatically populated Access Token and Refresh Token by Hubspot
- GrowthLoop exports audiences as a Contact object type
- PulsePoint lists cannot exceed 1 million unique NPIs.
- GrowthLoop automatically dedupes before each export, but exports larger than this
  must be split into separate audiences or reduced to avoid export errors.
- You should use your LinkedIn account that has access to the Ads account you would
  like to setup as a destination.
- The sync frequency and internal pipeline operations will impact how quickly your
  audience appears in LinkedIn Ads after being exported.
- Your Qualtrics account must be whitelisted for Early Access Program access.
- 'Confirm that your API Token has the following scopes: read:mailing_list_contacts,
  write:mailing_list_contacts, write:contact_transactions.'
- Your Reddit Ads Account must be whitelisted for Custom Audience API access.
- Only Email Address is supported for match fields.
- Sailthru restricts you to a maximum of 100 Primary Lists.
- Connecting Salesforce as an audience destination requires a security token specific
  to your Salesforce account.
- Requires Maropost account ID and API key.
- Ensure that all API permissions boxes are checked in SFMC.
- Subdomain is a part of the authentication base URI.
- If you don’t remove the “/rest” part of the base URL, your connection will not work.
- Make sure your API Key is handy and it has full access or at least Marketing permissions.
- You can choose to authenticate using either Username & Password or an SSH Key
- If your SSH key is password-protected, enter the password here.
- Access token and Refresh Token automatically populate when logging into Pinterest
  Ads Manager via GrowthLoop.
- An audience needs at least 1,000 users to be targeted.
- PulsePoint lists cannot exceed 1 million unique NPIs. GrowthLoop automatically dedupes
  before each export.
- Requires Snowflake warehouse, database, schema, and table names
- Requires Snowflake account ID, username, role, passphrase, and private key
- StackAdapt only supports adding users to a CRM audience via their API. At this time,
  it's not possible to remove users from an audience once they've been added.
- It can take up to 1-3 days for the audience to fully populate.
- If you experience any issues when connecting to Tealium, please reach out to support@growthloop.com
- 'The Trade Desk CRM supports 2 fields as match fields: Email & Phone number.'
- If the Salesforce URL begins with 'test', check the Dev Environment box.
- Make sure you have an account.
- Have your First Party Data Key and Advertiser ID ready.
- Mapping more fields leads to a higher match rate.
- TikTok customer file audiences expire after 12 months of inactivity.
- Ensure that all boxes are checked to provide the necessary API permissions.
- You can find the required information in SFMC where you configured the API integration.
- 'Sync Frequency: Daily or Hourly'
- Pardot requires a Salesforce username, password, and security token for authentication.
- The username and password credentials are Viant partner credentials specific to
  GrowthLoop and your Viant account, these are not regular Viant user credentials.
- Audience data may take up to 24 hours to populate.
- SendGrid requires at least one user identifier for each export
- You can choose to authenticate using either Username & Password or an SSH Key.
- Users with roles such as Owner, Admin, or Manager can view and create API keys.
- Uses OAuth2 for authentication.
- Only the 'Insert only' option is supported for syncing.
- Experiencing any issues when connecting and/or exporting to Taboola? Reach out to
  us at support@growthloop.com and we’ll be in touch shortly to help resolve the matter!
- If Floodlight Activity ID is set in the destination setup, you don't need to map
  it.
- GrowthLoop will convert any provided timestamp format into Unix epoch time in microseconds.
- Uploading conversions requires a 2-hour wait after creating the goal.
- Failures can occur if the conversion dates are not within the last 90 days and not
  formatted in Coordinated Universal Time.
- Marketers can always change the frequency of an export to TheTradeDesk, but this
  sets the default.
- Requires setup of Conversion Access Token in Pinterest Ads Manager.
- Syncs require a Snapchat Ads Manager account and API Key.
- TikTok supports only the Insert update rule for syncing data.
- Create a Braze API Key with User Data, Purchases, and Events permissions.
- Token & Token Secret should be automatically populated when redirected to the GrowthLoop
  App.
- HubSpot enforces daily and per-second API rate limits. If your sync exceeds the
  daily limit (typically 1 million records for Enterprise plans), it may take multiple
  days to complete.
- Only users with roles such as Owner, Admin, or Manager can view and create API keys.
- Experiencing any issues configuring Syncs to Iterable? Reach out to us at support@growthloop.com
  and we’ll be in touch shortly!
- If you experience any issues when connecting to or creating syncs to Facebook (Meta)
  Conversions, please reach out to support@growthloop.com
- Ensure you have an active Marketo account and have configured it as a destination.
- The 'Insert only' operation is supported for syncing.
- GCLID is recommended for matching source records.
- SFMC requires both Email and Subscriber Key to be mapped.
- Upsert is the only supported mode for syncing data.
- Must have Profile ID and Floodlight Activity ID ready.
- GrowthLoop will convert timestamp format into Unix epoch time in microseconds.
- Uploading conversions requires a 2-hour wait after creating the goal. Failure to
  wait may result in offline conversion data not being applied.
- Failures can occur if the conversion dates are not within the last 90 days and not
  formatted in Coordinated Universal Time (e.g., 2020-04-30T17:02:35.6853793Z).
- Requires a Pinterest Ads Manager account and a Conversion Access Token.
- In order to unlock additional modules, please contact our Support Team.
- Requires a Snapchat Ads Manager account and a Conversion API Key.
- Web event data should include protocol in the URL.
- Syncs require a TikTok Ads Manager account and a Pixel Code.
- Create Braze API Key with User Data, Purchases, and Events permissions.
- Ensure API URL is the REST Endpoint for your Braze instance.
- Retention policies ensure older audience memberships are automatically cleaned up,
  keeping your warehouse organized and cost-efficient.
- Make sure they pick the Sign Up tab.
- Most SSO integrations are done via SAML.
- Ensure you have an active Iterable account and have configured it as a destination.
- Export triggers snapshotting when an audience is exported
- Snapshots are only created when an audience is exported
- Currently supports audience export failure notifications, invalid destination connection
  credentials notifications, dataset update failure notifications, and audience ready
  for review notifications.
- Make sure you've set up SFMC user permissions, created an API integration, and configured
  data extension permissions.
- If you experience any issues when connecting to or creating syncs to SFMC Data Extensions,
  please reach out to us at support@growthloop.com.
- Upsert is the only supported mode.
- Logs will be written to the `batch_errors` directory within your bucket.
- If you have any questions or would like to enable any of these add-ons for your
  org, please contact support@growthloop.com.
- These are helpful to notify your team of successes and failures in particular audiences,
  syncs, and journeys.
- It is also helpful to ensure your dataset health and destination connections are
  always operational.
- Generative Marketing will become your team's marketing assistant to enable them
  10x the number of campaign experiments they run each year.
- Audit Logs tab is only accessible to the Admin & Owner user roles.
- Event logs go back 1 year or 365 days.
- Marve must be enabled for each Dataset Group you would like to use it with.
- Marve was designed to be privacy-centric from the ground up.
- Marve does not train on individual row data within your datasets that are connected
  to GrowthLoop.
- Marve is available in Limited Beta today.
- Configuring retention policies in GrowthLoop is a simple yet powerful way to manage
  audience memberships in your warehouse.
- By implementing retention policies, you can save on data storage costs, keep your
  warehouse organized, and ensure that only the most relevant audience data is retained.
- Custom roles are available on GrowthLoop Enterprise plan
- Most of our SSO integrations are done via SAML.
- GrowthLoop audiences can be sent to Braze for campaigns.
- Braze supports various types of campaigns including Email, SMS, Push, and Content
  Cards.
- Exports only create snapshots when an audience is exported.
- Snapshotting requires an active data warehouse connection with read/write access.
- GrowthLoop integrates seamlessly with Salesforce Marketing Cloud.
- Utilizes data from various sources for effective audience targeting.
- Some objects may return nulls in deeply nested fields
- The GrowthLoop platform was designed to query your data in place, so your data never
  leaves your data cloud.
- GrowthLoop only temporarily stages audience or segment membership into a staging
  storage bucket to allow our export service to sync the members to various marketing
  platforms.
- These buckets also have a TTL of 7 days.
- Requires valid credentials to access data in Iterable.
- Requires setup of Braze connected app
- Ensure audience names are unique to avoid conflicts
- GrowthLoop supercharges Salesforce Marketing Cloud by unlocking the power of your
  entire modern data stack.
- With Salesforce sunsetting their Audience Builder, GrowthLoop steps in as a great
  alternative for Marketing Cloud.
- GrowthLoop wants to help increase the efficacy, while reducing the management headaches,
  of CRM systems.
- Ensure proper user attributes are mapped for personalized campaigns.
- GrowthLoop was built to integrate seamlessly with Iterable.
errors:
- '404: not found'
- '422: unprocessable_entity'
- 422 User and Audience not found
- 404 not found
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your OAuth token.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the parameters sent in the request.'
- '401 Unauthorized: Ensure the authentication token is valid.'
- '404 Not Found: Verify the Export ID or endpoint path.'
- Global Control Group may lead to small control groups for reliable comparisons.
- 'Low Match Rate: Unable to target a majority of your target audience.'
- 'Export ID not found: Check the provided Export ID'
- 'Unauthorized: Ensure valid authentication credentials'
- 'INVALID_REQUEST: Check the request parameters for correctness.'
- 'USER_NOT_FOUND: Ensure the user is part of the audience.'
- '500 Internal Server Error: Try again later or contact support'
- Your criteria could be relying on a field that doesn't exist anymore
- Your match or additional fields on destination nodes might be invalid
- Your custom attribute formulas could be referencing fields that don't exist in the
  new entry audience
- '400 Bad Request: Check your input data for errors.'
- '401 Unauthorized: Verify your API Token and permissions.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Recheck Salesforce username, password, or security token.'
- 'Invalid Pixel ID: Ensure the Pixel ID is correct and corresponds to the selected
  Ad Account.'
- 'Error connecting to Google Ads: Ensure your credentials are correct.'
- If you experience any issues when connecting to Google Campaign Manager 360 Conversions,
  please reach out to support@growthloop.com
- Conversion dates must be within the last 90 days and formatted in UTC.
- 'INVALID_REQUEST: Check API key and endpoint URL.'
- 'UNAUTHORIZED: Ensure API key has correct permissions.'
- '400 Bad Request: Check your request format or parameters.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Ensure the endpoint exists.'
- If you experience issues when connecting to or creating syncs to Google Ads Conversions,
  please reach out to support@growthloop.com.
- '401 Unauthorized: Check service account permissions.'
- '400 Bad Request: Review required fields for conversion sync.'
- Conversion dates must be within the last 90 days
- Conversion data not formatted in UTC
- 'Invalid API Key: Check the Conversion API Key in Snapchat Ads Manager.'
- 'Missing Pixel ID: Ensure the Pixel ID is correctly set up in Events Manager.'
- '401 Unauthorized: Check your Pixel Code or TikTok Ads Manager account.'
- '401 Unauthorized: Check API Key permissions.'
- '429 Too Many Requests: Throttle your requests.'
- Recheck OAuth scopes or token expiration
- '401 Unauthorized: Verify API key and permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Recheck your API key or OAuth token.'
- '400 Bad Request: Check request format and parameters'
- '401 Unauthorized: Verify OAuth token and permissions'
- '404 Not Found: Confirm endpoint path and resource existence'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify the endpoint and resource.'
- '500 Internal Server Error: Retry the request after some time.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Custom Role
  - Auth0
client:
  base_url: https://www.growthloop.com
  auth:
    type: oauth2
source_metadata: null
