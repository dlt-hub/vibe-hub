resources:
- name: users
  endpoint:
    path: /users.list
    method: GET
    data_selector: members
    params: {}
- name: conversations
  endpoint:
    path: /conversations.list
    method: GET
    data_selector: channels
    params: {}
- name: files_info
  endpoint:
    path: /files.info
    method: GET
- name: reminders
  endpoint:
    path: /reminders.list
    method: GET
- name: chat_update
  endpoint:
    path: /chat.update
    method: POST
- name: files.upload
  endpoint:
    path: /api/files.upload
    method: POST
    data_selector: file
- name: chat.postMessage
  endpoint:
    path: /api/chat.postMessage
    method: POST
    data_selector: message
- name: block_actions
  endpoint:
    path: /reference/interaction-payloads/block_actions-payload
    method: GET
- name: message_actions
  endpoint:
    path: /reference/interaction-payloads/shortcuts-interaction-payload#message_actions
    method: GET
- name: view_closed
  endpoint:
    path: /reference/interaction-payloads/view-interactions-payload#view_closed
    method: GET
- name: view_submission
  endpoint:
    path: /reference/interaction-payloads/view-interactions-payload#view_submission
    method: GET
- name: event_authorizations
  endpoint:
    path: /apps.event.authorizations.list
    method: GET
    data_selector: authorizations
- name: reaction_added
  endpoint:
    path: /events/reaction_added
    method: POST
    data_selector: event
- name: app_rate_limited
  endpoint:
    path: /events/app_rate_limited
    method: POST
    data_selector: event
- name: Admin Oversight API
  endpoint:
    path: /admins/admin-oversight-api
    method: GET
    data_selector: records
- name: Audit Logs API
  endpoint:
    path: /admins/audit-logs-api
    method: GET
    data_selector: records
- name: Legal Holds API
  endpoint:
    path: /admins/legal-holds-api
    method: GET
    data_selector: records
- name: SCIM API
  endpoint:
    path: /admins/scim-api
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /chat.postMessage
    method: POST
    data_selector: message
    params: {}
- name: ephemeral_messages
  endpoint:
    path: /chat.postEphemeral
    method: POST
    data_selector: ephemeral_message
    params: {}
- name: Admin Oversight API
  endpoint:
    path: /admins/admin-oversight-api
    method: GET
- name: Audit Logs API
  endpoint:
    path: /admins/audit-logs-api
    method: GET
- name: Legal Holds API
  endpoint:
    path: /admins/legal-holds-api
    method: GET
- name: SCIM API
  endpoint:
    path: /admins/scim-api
    method: GET
- name: Admin Oversight API
  endpoint:
    path: /admins/admin-oversight-api
    method: GET
- name: Audit Logs API
  endpoint:
    path: /admins/audit-logs-api
    method: GET
- name: Legal Holds API
  endpoint:
    path: /admins/legal-holds-api
    method: GET
- name: SCIM API
  endpoint:
    path: /admins/scim-api
    method: GET
- name: blocks
  endpoint:
    path: /block-kit/blocks
    method: GET
    data_selector: blocks
- name: block elements
  endpoint:
    path: /block-kit/block-elements
    method: GET
    data_selector: elements
- name: chat.postMessage
  endpoint:
    path: /chat.postMessage
    method: POST
    data_selector: message
    params: {}
- name: chat.postEphemeral
  endpoint:
    path: /chat.postEphemeral
    method: POST
    data_selector: message
    params: {}
- name: openid_userinfo
  endpoint:
    path: /api/openid.connect.userInfo
    method: GET
    data_selector: ''
    params: {}
- name: app_home
  endpoint:
    path: /surfaces/app-home
    method: GET
    data_selector: content
    params: {}
- name: canvases
  endpoint:
    path: /surfaces/canvases
    method: GET
    data_selector: content
    params: {}
- name: lists
  endpoint:
    path: /surfaces/lists
    method: GET
    data_selector: content
    params: {}
- name: messages
  endpoint:
    path: /surfaces/messages
    method: GET
    data_selector: content
    params: {}
- name: modals
  endpoint:
    path: /surfaces/modals
    method: GET
    data_selector: content
    params: {}
- name: split_view
  endpoint:
    path: /surfaces/split-view
    method: GET
    data_selector: content
    params: {}
- name: Admin Oversight API
  endpoint:
    path: /admins/admin-oversight-api
    method: GET
- name: Audit Logs API
  endpoint:
    path: /admins/audit-logs-api
    method: GET
- name: Legal Holds API
  endpoint:
    path: /admins/legal-holds-api
    method: GET
- name: SCIM API
  endpoint:
    path: /admins/scim-api
    method: GET
- name: App Home
  endpoint:
    path: /surfaces/app-home
    method: GET
- name: Canvases
  endpoint:
    path: /surfaces/canvases
    method: GET
- name: Lists
  endpoint:
    path: /surfaces/lists
    method: GET
- name: Messages
  endpoint:
    path: /surfaces/messages
    method: GET
- name: Modals
  endpoint:
    path: /surfaces/modals
    method: GET
- name: Split view
  endpoint:
    path: /surfaces/split-view
    method: GET
- name: views.publish
  endpoint:
    path: /views.publish
    method: POST
    data_selector: view
    params: {}
- name: app_home_opened
  endpoint:
    path: /events/app_home_opened
    method: GET
    data_selector: event
    params: {}
- name: app_home
  endpoint:
    path: /app_home
    method: GET
    data_selector: app_home_data
    params: {}
- name: canvases
  endpoint:
    path: /conversations.canvases.create
    method: POST
    data_selector: ok
    params: {}
- name: files_list
  endpoint:
    path: /files.list
    method: GET
    params:
      types: canvas
- name: views.open
  endpoint:
    path: /views.open
    method: POST
    data_selector: view
    params: {}
- name: views.update
  endpoint:
    path: /views.update
    method: POST
    data_selector: view
    params: {}
- name: views.push
  endpoint:
    path: /views.push
    method: POST
    data_selector: view
    params: {}
- name: block_actions
  endpoint:
    path: /reference/interaction-payloads/block_actions
    method: GET
- name: view_submission
  endpoint:
    path: /reference/interaction-payloads/view-interactions-payload#view_submission
    method: GET
- name: view_closed
  endpoint:
    path: /reference/interaction-payloads/view-interactions-payload#view_closed
    method: GET
- name: views.update
  endpoint:
    path: /reference/methods/views.update
    method: POST
- name: views.push
  endpoint:
    path: /reference/methods/views.push
    method: POST
- name: modal_submission
  endpoint:
    path: /views.open
    method: POST
    data_selector: result
- name: chat_postMessage
  endpoint:
    path: /chat.postMessage
    method: POST
    data_selector: message
    params: {}
- name: chat_postEphemeral
  endpoint:
    path: /chat.postEphemeral
    method: POST
    data_selector: ephemeral_message
    params: {}
- name: openid_connect_userInfo
  endpoint:
    path: /api/openid.connect.userInfo
    method: GET
    data_selector: user_info
    params: {}
- name: Button
  endpoint:
    path: /reference/block-kit/block-elements/button-element
    method: GET
- name: Checkboxes
  endpoint:
    path: /reference/block-kit/block-elements/checkboxes-element
    method: GET
- name: Date picker
  endpoint:
    path: /reference/block-kit/block-elements/date-picker-element
    method: GET
- name: Datetime picker
  endpoint:
    path: /reference/block-kit/block-elements/datetime-picker-element
    method: GET
- name: Email input
  endpoint:
    path: /reference/block-kit/block-elements/email-input-element
    method: GET
- name: File input
  endpoint:
    path: /reference/block-kit/block-elements/file-input-element
    method: GET
- name: Image
  endpoint:
    path: /reference/block-kit/block-elements/image-element
    method: GET
- name: Multi-select menu
  endpoint:
    path: /reference/block-kit/block-elements/multi-select-menu-element
    method: GET
- name: Number input
  endpoint:
    path: /reference/block-kit/block-elements/number-input-element
    method: GET
- name: Overflow menu
  endpoint:
    path: /reference/block-kit/block-elements/overflow-menu-element
    method: GET
- name: Plain-text input
  endpoint:
    path: /reference/block-kit/block-elements/plain-text-input-element
    method: GET
- name: Radio button group
  endpoint:
    path: /reference/block-kit/block-elements/radio-button-group-element
    method: GET
- name: Rich text input
  endpoint:
    path: /reference/block-kit/block-elements/rich-text-input-element
    method: GET
- name: Select menu
  endpoint:
    path: /reference/block-kit/block-elements/select-menu-element
    method: GET
- name: Time picker
  endpoint:
    path: /reference/block-kit/block-elements/time-picker-element
    method: GET
- name: URL input
  endpoint:
    path: /reference/block-kit/block-elements/url-input-element
    method: GET
- name: Workflow button
  endpoint:
    path: /reference/block-kit/block-elements/workflow-button-element
    method: GET
- name: views.publish
  endpoint:
    path: /views.publish
    method: POST
    data_selector: view
- name: app_home_opened
  endpoint:
    path: /events/app_home_opened
    method: GET
    data_selector: event
- name: canvases
  endpoint:
    path: /conversations.canvases.create
    method: POST
    data_selector: ok
    params: {}
- name: canvas_edit
  endpoint:
    path: /conversations.canvases.edit
    method: POST
    data_selector: ok
    params: {}
- name: files_list
  endpoint:
    path: /api/files.list
    method: GET
    data_selector: files
    params:
      types: canvas
- name: views_open
  endpoint:
    path: /views.open
    method: POST
    data_selector: ok
- name: modal_submission
  endpoint:
    path: /views.open
    method: POST
    data_selector: result
    params: {}
- name: message_posting
  endpoint:
    path: /chat.postMessage
    method: POST
    data_selector: result
    params: {}
- name: send_message
  endpoint:
    path: /chat.postMessage
    method: POST
- name: send_ephemeral_message
  endpoint:
    path: /chat.postEphemeral
    method: POST
- name: Blocks
  endpoint:
    path: /reference/block-kit/blocks
    method: GET
    data_selector: blocks
    params: {}
notes:
- Requires OAuth2 setup for access.
- Make sure to handle rate limits appropriately.
- The Slack CLI documentation has gone open source.
- Ensure to set up OAuth scopes properly for API access.
- The minimum supported PowerShell version as of this release is `v6.0`.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Authorization headers are now required for most Web API requests involving file
  URLs.
- Tokens may no longer be passed in the query string for apps created after Feb 24,
  2021.
- As of January 4th, 2016, authorization headers are now required for most Web API
  requests involving file URLs.
- Authorization headers are required for most Web API requests involving file URLs.
- Use rtm.connect to establish your connections alongside Web API methods to build
  your app's understanding of the users, channels, and conversations within a team.
- Incoming webhooks either work or they don't, resulting in HTTP 500 errors for malformed
  requests or non-existent destination channels.
- Uses OAuth2 with refresh token — requires setup of Slack app
- Some API methods may have rate limits that need to be considered
- The minimum supported PowerShell version as of this release is v6.0.
- We updated the Linux/macOS installation script to support a CLI version param, -v.
- We added a -d flag to bypass Deno installation in the Linux/macOS installation script.
- We updated the Windows installation script to include Alias, Version, SkipDeno,
  and SkipGit flags.
- We now suggest Windows users open a new terminal after installation to add the Slack
  CLI to the user's environment PATH.
- We bumped minimum required Deno version to 1.31.1.
- Tokens may no longer be passed in the query string for apps created after February
  24, 2021.
- Keep your tokens secret and safe
- Some objects like Contact may return nulls in deeply nested fields
- Your app might need different tokens depending on the actions you want to perform
  or for installations to multiple workspaces.
- AI runs in Slack’s trusted boundary, and upholds the security practices and compliance
  standards that customers expect from Slack itself.
- Use the Slack CLI to manage your app's entire lifecycle.
- Developer sandboxes let you play around with platform features outside of a production
  environment.
- The Events API is recommended over the RTM API for most use cases.
- You can subscribe to only the event types you want.
- Expect a new outer payload on events that includes a compact 'authorizations' field.
- Keep tokens secret and safe.
- Use Socket Mode for listening to events without exposing an endpoint.
- Blocks can be used within all app surfaces.
- Apps can include up to 50 blocks in each message, and 100 blocks in modals or Home
  tabs.
- Customer data is not used to train large language models (LLMs)
- AI features are available across all paid Slack plans
- GovSlack is FedRAMP High authorized and runs in an AWS GovCloud data center operated
  by U.S. personnel.
- GovSlack is currently pursuing DoD SRG IL4 compliance certification with DISA.
- Slack provides several tools to aid you in your quest to creating Slack apps.
- The Slack platform extends Workflow Builder by providing an avenue to write custom
  workflow steps.
- Requires setup of Slack app and scopes for messaging
- Ephemeral messages are user-specific and not retrievable
- The App Home is not available for apps created with the Deno Slack SDK.
- The Events API leverages Slack's existing object-driven OAuth scope system to control
  access to events.
- Authorize users for your Event Consumer app through the standard OAuth flow.
- Workflows are a subset of Slack apps with unique abilities and restrictions.
- You can create workflows without any code in the developer-adjacent Workflow Builder.
- 'Newly created apps are automatically opted into the new form of events: a single,
  truncated `authorizations` field with one authorization shown.'
- Maintain a response success rate of at least 5% of events per 60 minutes to prevent
  automatic disabling.
- We strongly recommend you only use the Signing Secret from now on.
- Apps that use platform AI features bring another layer to app interactivity by providing
  a space to integrate your app with your chosen LLM.
- Interactivity covers the ways users can initiate interaction with Slack apps, including
  slash commands and shortcuts.
- Messages can be sent to various types of conversations including public channels,
  private channels, and direct messages.
- Ephemeral messages are temporary and only visible to one user.
- Uses OAuth2 based on OpenID Connect standard
- 'Use a border-radius of: Min: 4px, Max: height of the button'
- Apps created using the Deno Slack SDK are Slack-hosted, and apps created using the
  Bolt framework are self-hosted.
- Uses OAuth2 with refresh token — requires setup of connected app in Slack
- Some fields may return nulls in certain scenarios
- Ensure the app has the necessary OAuth scopes for Home tab functionality.
- The app must subscribe to message.im events to respond to messages.
- Deep linking syntax available for navigating users to App Home.
- Currently, Block Kit is not supported in canvases.
- Canvas tables have a limit of 300 cells per table; this may be any number of rows
  or columns that add up to that limit.
- A modal can hold up to 3 views at a time in a view stack.
- You must include the submit field when defining your view if using input blocks.
- Apps must return a required acknowledgment response back to the HTTP request that
  sent the payload.
- Requires a trigger_id to use views.push.
- Uses OAuth2 for authentication
- Slack creates a unique string for your app and shares it with you.
- Signing secrets replace the old verification tokens.
- Ephemeral messages do not persist across sessions.
- Uses OAuth 2.0 with OpenID Connect — requires setup of a Slack app
- Requires `chat:write` and `im:history` permission scopes for Messages tab.
- Canvas tables have a limit of 300 cells per table.
- Your data is your data. Customer data never leaves Slack.
- Trigger ID must be used quickly as it expires after 3 seconds.
- Your app can optionally receive a notification if a user clicks on the *Cancel*
  or *x* buttons.
- Uses OAuth2 for authentication.
- Modals are intended for short-term interaction.
- Apps can send messages in the Messages tab without listening for a reply back from
  a user.
- Interactivity invites and inspires action and reaction.
- Users never have to depart from the comfort of Slack to get things done.
- Customer data is not used to train large language models (LLMs).
- AI features are available across all paid Slack plans.
errors:
- 'invalid_auth: Check your authentication credentials.'
- 'not_authed: No authentication token provided.'
- 'invalid_auth: Invalid authentication credentials'
- 'channel_not_found: The specified channel does not exist'
- 'INVALID_AUTH: Check your token or credentials'
- 'rate_limited: Reduce the frequency of requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'too_many_attachments: Limit the number of message attachments per message to 100'
- 'HTTP 500: Indicates general server error for incoming webhooks.'
- 'rate_limited: Throttle API calls to avoid hitting limits'
- 'invalid_auth: Check the validity of your OAuth token'
- 'not_allowed: Ensure the app has the necessary permissions'
- 'too_many_attachments: Limit the number of message attachments per message to 100.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'too_many_attachments: Limit number of message attachments to 100'
- 'app_rate_limited: Your app has been rate-limited; respond to events with an HTTP
  200 OK to avoid further issues.'
- 'invalid_auth: Check the authentication token'
- 'channel_not_found: Verify the channel ID'
- 'not_in_channel: The app is not a member of the channel'
- 'app_rate_limited: When rate limited, your Request URL will receive a special app
  event.'
- 'REQUEST_LIMIT_EXCEEDED: Event deliveries currently max out at 30,000 per workspace/team
  per app per 60 minutes.'
- 'invalid_auth: Check if the authentication token is valid.'
- 'channel_not_found: Ensure the channel ID is correct.'
- 'rate_limited: Reduce the frequency of API calls.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Check client_id and client_secret'
- 'invalid_auth: Check your authentication credentials'
- 'access_denied: Ensure that the app has the necessary permissions'
- 'ratelimited: Slow down your request rate'
- 'invalid_auth: The token is invalid or expired.'
- 'access_denied: The app does not have permission to perform the action.'
- '400 Bad Request: Check if the required fields are filled correctly'
- 'invalid_auth: The authentication token is invalid.'
- 'view_not_found: The view identifier is not valid.'
- 'view_limit_exceeded: You''ve reached the limit of opened views.'
- 'channel_not_found: The channel specified is invalid or does not exist'
- 'invalid_request: The request is missing a required parameter'
- 'unauthorized_client: Client is not authorized'
- 'invalid_grant: The provided authorization grant is invalid'
- 'not_in_channel: The bot is not in the channel'
- 'channel_not_found: The specified channel could not be found'
- 'canvas_not_found: The specified canvas could not be found'
- 'invalid_auth: The access token is invalid.'
- 'view_not_found: The view associated with the provided view_id does not exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthAccessToken
  - AppCredentials
  - App-Level Tokens
  - Bot User OAuth Token
  - OAuthToken
  - App
  - OAuth permission scopes
  - bot
  - Signing Secret
  - OpenID Connect
  - verification tokens
  - openid
  - profile
  - email
client:
  base_url: https://slack.com/api
  auth:
    type: oauth2
source_metadata: null
