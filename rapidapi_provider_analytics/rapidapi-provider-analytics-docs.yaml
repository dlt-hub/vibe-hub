resources:
- name: traffic_analytics
  endpoint:
    path: /analytics/traffic
    method: GET
- name: user_analytics
  endpoint:
    path: /analytics/user
    method: GET
- name: revenue_analytics
  endpoint:
    path: /analytics/revenue
    method: GET
- name: raw_logs
  endpoint:
    path: /logs/raw
    method: GET
- name: alerts
  endpoint:
    path: /analytics/alerts
    method: POST
- name: email_notifications
  endpoint:
    path: /emails/sent
    method: GET
    data_selector: emails
    params: {}
- name: email_types
  endpoint:
    path: /emails/types
    method: GET
    data_selector: emails
    params: {}
- name: API Calls
  endpoint:
    path: /api_calls
    method: GET
- name: transaction_history
  endpoint:
    path: /developer/billing/transaction-history
    method: GET
    data_selector: transaction_records
    params: {}
- name: subscriptions_usage
  endpoint:
    path: /developer/billing/subscriptions-and-usage
    method: GET
    data_selector: usage_records
    params: {}
- name: transaction_history
  endpoint:
    path: /developer/billing/transaction-history
    method: GET
    data_selector: transaction_data
- name: subscriptions_usage
  endpoint:
    path: /developer/billing/subscriptions-and-usage
    method: GET
    data_selector: usage_data
- name: topics
  endpoint:
    path: /kafka/topics
    method: GET
    data_selector: records
- name: produce_records
  endpoint:
    path: /kafka/produce
    method: POST
    data_selector: records
- name: view_records
  endpoint:
    path: /kafka/consume
    method: GET
    data_selector: records
- name: Transfer API project ownership
  endpoint:
    path: /transfer-api-project
    method: POST
- name: Delete API project
  endpoint:
    path: /delete-api-project
    method: DELETE
- name: subscribers
  endpoint:
    path: /users
    method: GET
    data_selector: subscribers
    params: {}
- name: subusers
  endpoint:
    path: /subusers
    method: POST
    data_selector: subaccount
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: plans
  endpoint:
    path: /hub/listing/plans
    method: GET
    data_selector: plans
- name: transactions
  endpoint:
    path: /hub/listing/transactions
    method: GET
    data_selector: transactions
- name: Intellectual Property Enforcement Program
  endpoint:
    path: /report
    method: POST
    data_selector: response
    params: {}
- name: spotlight
  endpoint:
    path: /spotlights
    method: GET
    data_selector: spotlights
- name: spotlight
  endpoint:
    path: /spotlights
    method: GET
    data_selector: spotlights
    params: {}
- name: OAS Metadata
  endpoint:
    path: /api/oas/metadata
    method: POST
- name: volume
  endpoint:
    path: /volume
    method: GET
    data_selector: aggregations
    params: {}
- name: errors
  endpoint:
    path: /errors
    method: GET
    data_selector: aggregations
    params: {}
- name: latency
  endpoint:
    path: /latency
    method: GET
    data_selector: aggregations
    params: {}
- name: time_periods
  endpoint:
    path: /analytics/time_periods
    method: GET
    data_selector: time_periods
    params: {}
- name: Admin Analytics
  endpoint:
    path: /docs/graphql-platform-api-examples-administration
    method: GET
- name: calls
  endpoint:
    path: /calls
    method: POST
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: array
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: data
    params: {}
- name: Amazon API Gateway
  endpoint:
    path: /docs/amazon-api-gateway-analytics-integration
    method: GET
- name: Apigee
  endpoint:
    path: /docs/apigee-integration
    method: GET
- name: Azure API Management
  endpoint:
    path: /docs/azure-api-management-analytics-integration
    method: GET
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: array of objects
- name: FaultRules
  endpoint:
    path: /FaultRules
    method: POST
    data_selector: default-fault
    params: {}
- name: GET Echo
  endpoint:
    path: https://echo.paw.cloud
    method: GET
- name: GET Echo
  endpoint:
    path: /
    method: GET
- name: POST Echo
  endpoint:
    path: /GET Echo Copy
    method: POST
    data_selector: response
    params:
      testQueryParameter: myQueryValue
- name: Default Session
  endpoint:
    path: /sessions/default
    method: GET
    data_selector: session_data
- name: Add Session
  endpoint:
    path: /sessions/add
    method: POST
    data_selector: new_session
- name: Add Cookie
  endpoint:
    path: /sessions/cookie/add
    method: POST
    data_selector: new_cookie
- name: Delete Cookie
  endpoint:
    path: /sessions/cookie/delete
    method: DELETE
    data_selector: deleted_cookie
- name: Default Session
  endpoint:
    path: /add-session
    method: POST
    data_selector: session
    params: {}
- name: Add Cookie
  endpoint:
    path: /add-cookie
    method: POST
    data_selector: cookie
    params: {}
- name: Delete Cookie
  endpoint:
    path: /delete-cookie
    method: DELETE
    data_selector: cookie
    params: {}
- name: Loop ForEach
  endpoint:
    path: /loop/foreach
    method: GET
    data_selector: items
    params: {}
- name: Set Variable
  endpoint:
    path: /set/variable
    method: POST
    data_selector: result
    params: {}
- name: Logic If
  endpoint:
    path: /logic/if
    method: POST
    data_selector: outcome
    params: {}
- name: Code Run
  endpoint:
    path: /code/run
    method: POST
    data_selector: executionResult
    params: {}
- name: Faker Generate
  endpoint:
    path: /faker/generate
    method: POST
    data_selector: fakeData
    params: {}
- name: Execute Child Test
  endpoint:
    path: /execute/child/test
    method: POST
    data_selector: childTestResult
    params: {}
- name: Loop ForEach
  endpoint:
    path: /loop/foreach
    method: GET
    data_selector: steps
    params: {}
- name: Set Variable
  endpoint:
    path: /set/variable
    method: GET
    data_selector: steps
    params: {}
- name: Logic If
  endpoint:
    path: /logic/if
    method: GET
    data_selector: steps
    params: {}
- name: Code Run
  endpoint:
    path: /code/run
    method: GET
    data_selector: steps
    params: {}
- name: Faker Generate
  endpoint:
    path: /faker/generate
    method: GET
    data_selector: steps
    params: {}
- name: Execute Child Test
  endpoint:
    path: /execute/child/test
    method: GET
    data_selector: steps
    params: {}
- name: categories
  endpoint:
    path: /getCategories
    method: GET
- name: executions
  endpoint:
    path: /executions
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: sms_alert
  endpoint:
    path: /create/sms_alert
    method: POST
    data_selector: alert
    params: {}
- name: Create Request
  endpoint:
    path: /webhook/create
    method: POST
    data_selector: request
    params: {}
- name: Edit Request
  endpoint:
    path: /webhook/edit
    method: PUT
    data_selector: request
    params: {}
- name: Reset
  endpoint:
    path: /webhook/reset
    method: DELETE
    data_selector: request
    params: {}
- name: test_trigger_webhook
  endpoint:
    path: /settings/test_trigger_webhook
    method: POST
- name: test_status
  endpoint:
    path: /statusURL
    method: GET
- name: create_request
  endpoint:
    path: /create/request
    method: POST
    data_selector: request_data
- name: edit_request
  endpoint:
    path: /edit/request
    method: POST
    data_selector: request_data
- name: reset
  endpoint:
    path: /reset
    method: POST
    data_selector: reset_data
- name: test_trigger_webhook
  endpoint:
    path: /settings/test/trigger
    method: POST
    data_selector: response
    params: {}
- name: test_status
  endpoint:
    path: /status/{executionId}
    method: GET
    data_selector: status
    params: {}
- name: test_analytics
  endpoint:
    path: /docs/test-analytics
    method: GET
- name: test_results
  endpoint:
    path: /docs/test-results
    method: GET
- name: api_dashboard
  endpoint:
    path: /docs/testing-dashboard
    method: GET
- name: api_performance
  endpoint:
    path: /docs/testing-performance
    method: GET
- name: test_results
  endpoint:
    path: /results
    method: GET
    data_selector: results
    params: {}
- name: execution_report
  endpoint:
    path: /execution-report
    method: GET
    data_selector: execution_report
    params: {}
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: executions
    params: {}
- name: execution_report
  endpoint:
    path: /execution/report
    method: GET
    data_selector: report
    params: {}
- name: internal_apis
  endpoint:
    path: /internal/apis
    method: GET
- name: external_apis
  endpoint:
    path: /external/apis
    method: GET
- name: third_party_apis
  endpoint:
    path: /third-party/apis
    method: GET
- name: organization
  endpoint:
    path: /organization
    method: GET
    data_selector: data
    params: {}
- name: team
  endpoint:
    path: /team
    method: GET
    data_selector: data
    params: {}
- name: Create Team
  endpoint:
    path: /create-team
    method: POST
    data_selector: team
    params: {}
- name: Edit Team
  endpoint:
    path: /edit-team
    method: PUT
    data_selector: team
    params: {}
- name: Manage Team Members
  endpoint:
    path: /manage-team-members
    method: PATCH
    data_selector: members
    params: {}
- name: API Collections
  endpoint:
    path: /organization/api/collections
    method: GET
    data_selector: collections
- name: Custom Branding
  endpoint:
    path: /organization/custom/branding
    method: GET
    data_selector: branding
- name: team_subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: usage_details
  endpoint:
    path: /api/usage
    method: GET
    data_selector: usage
    params: {}
- name: Create New Team
  endpoint:
    path: /create-team
    method: POST
    data_selector: team
    params: {}
- name: Edit Team
  endpoint:
    path: /edit-team
    method: PUT
    data_selector: team
    params: {}
- name: subscribed_apis
  endpoint:
    path: /transactions/subscribed_apis
    method: GET
- name: published_apis
  endpoint:
    path: /transactions/published_apis
    method: GET
- name: org_subscriptions
  endpoint:
    path: /transactions/org_subscriptions
    method: GET
- name: organization_api_collections
  endpoint:
    path: /organization/api/collections
    method: GET
    data_selector: collections
- name: custom_branding
  endpoint:
    path: /organization/custom/branding
    method: GET
    data_selector: branding
- name: Approve API Public Request
  endpoint:
    path: /approvals/api/public
    method: POST
- name: Join Organization Request
  endpoint:
    path: /organizations/join
    method: POST
- name: Approve Join Request
  endpoint:
    path: /organizations/approve_join
    method: POST
- name: inbox_messages
  endpoint:
    path: /inbox/messages
    method: GET
    data_selector: messages
- name: approving_requests_to_make_api_public
  endpoint:
    path: /approvals/make-api-public
    method: POST
- name: request_to_join_organization
  endpoint:
    path: /organizations/join
    method: POST
- name: approving_requests_to_join_organization
  endpoint:
    path: /organizations/approve-join
    method: POST
- name: organization_audit_logs
  endpoint:
    path: /audit_trails
    method: GET
    data_selector: logs
    params: {}
- name: audit_logs
  endpoint:
    path: /audit_trails
    method: GET
    data_selector: logs
    params: {}
- name: Governance
  endpoint:
    path: /api/governance
    method: GET
    data_selector: governance_data
    params: {}
- name: Billing
  endpoint:
    path: /api/billing
    method: GET
    data_selector: billing_data
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: results
  endpoint:
    path: /top-results/view-all
    method: GET
    data_selector: results
- name: approvals
  endpoint:
    path: /admin/approvals
    method: GET
- name: audit_trails
  endpoint:
    path: /audit_trails
    method: GET
    data_selector: logs
- name: approvals
  endpoint:
    path: /admin/approvals
    method: GET
    data_selector: requests
    params: {}
- name: event_logs
  endpoint:
    path: /events/logs
    method: POST
    data_selector: event
    params: {}
- name: event_types
  endpoint:
    path: /events
    method: GET
    data_selector: events_triggered
    params: {}
- name: Event Logs
  endpoint:
    path: /events/logs
    method: POST
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /docs/admin-panel-audit-trails
    method: GET
    data_selector: events
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: user_status
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: organization_details
  endpoint:
    path: /organization
    method: GET
    data_selector: organizations
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: data
    params: {}
- name: category
  endpoint:
    path: /api/categories
    method: GET
    data_selector: categories
- name: tag
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: API collections
  endpoint:
    path: /collections
    method: GET
    data_selector: data
    params: {}
- name: category
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
    params: {}
- name: Assets
  endpoint:
    path: /docs/assets
    method: GET
    data_selector: assets
    params: {}
- name: Global Navigation
  endpoint:
    path: /docs/global-navigation
    method: GET
    data_selector: global_navigation
    params: {}
- name: Hub CSS
  endpoint:
    path: /docs/hub-css
    method: GET
    data_selector: hub_css
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: Hub Strings
  endpoint:
    path: /docs/hub-strings
    method: GET
    data_selector: indexPage
    params: {}
- name: lambda_function
  endpoint:
    path: /your-endpoint-path
    method: POST
    data_selector: body
    params: {}
- name: API Hub Page Title
  endpoint:
    path: /hub
    method: POST
    data_selector: SEO configuration
    params: {}
- name: SEO Configuration
  endpoint:
    path: /hub
    method: POST
    data_selector: SEO Configurations
    params: {}
- name: invoice_billing
  endpoint:
    path: /billing/invoice
    method: GET
    data_selector: monthly_aggregated_quota_usage_reports
    params: {}
- name: stripe_billing
  endpoint:
    path: /billing/stripe
    method: POST
    data_selector: connection_status
    params:
      publishable_key: your_publishable_key
      secret_key: your_secret_key
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: Environment User roles
  endpoint:
    path: /roles/environment
    method: GET
    data_selector: permissions
    params: {}
- name: Organization User roles
  endpoint:
    path: /roles/organization
    method: GET
    data_selector: permissions
    params: {}
- name: Team User roles
  endpoint:
    path: /roles/team
    method: GET
    data_selector: permissions
    params: {}
- name: Organization roles
  endpoint:
    path: /roles/organization-role
    method: GET
    data_selector: permissions
    params: {}
- name: Environment User roles
  endpoint:
    path: /roles/environment
    method: GET
    data_selector: permissions
    params: {}
- name: Organization User roles
  endpoint:
    path: /roles/organization
    method: GET
    data_selector: permissions
    params: {}
- name: Team User roles
  endpoint:
    path: /roles/team
    method: GET
    data_selector: permissions
    params: {}
- name: Organization roles
  endpoint:
    path: /roles/organization_roles
    method: GET
    data_selector: permissions
    params: {}
- name: login_options
  endpoint:
    path: /api/login-options
    method: GET
    data_selector: loginMethods
- name: login_options
  endpoint:
    path: /admin/settings/login-options
    method: GET
- name: custom_domain_setup
  endpoint:
    path: /set-up-a-custom-domain
    method: GET
    data_selector: records
- name: ping
  endpoint:
    path: graphQL
    method: POST
    data_selector: ping
    params: {}
- name: ping
  endpoint:
    path: /
    method: POST
    data_selector: data.ping
- name: api
  endpoint:
    path: /
    method: POST
    data_selector: data.api
    params: {}
- name: apis
  endpoint:
    path: /
    method: POST
    data_selector: data.apis
    params: {}
- name: api
  endpoint:
    path: /
    method: POST
    data_selector: data.api
    params: {}
- name: apis
  endpoint:
    path: /
    method: POST
    data_selector: data.apis
    params: {}
- name: searchApis
  endpoint:
    path: /
    method: POST
    data_selector: data.searchApis
    params: {}
- name: exportOpenApi
  endpoint:
    path: /
    method: POST
    data_selector: data.exportOpenApi
    params: {}
- name: apiVersions
  endpoint:
    path: /
    method: POST
    data_selector: data.apiVersions
    params: {}
- name: api
  endpoint:
    path: /apis
    method: POST
    data_selector: data
    params: {}
- name: graphql example
  endpoint:
    path: /createApi
    method: POST
    data_selector: id
- name: updateGraphQLSchema
  endpoint:
    path: /updateGraphQLSchema
    method: POST
    data_selector: data
    params:
      input:
        endpointId: apiendpoint_YOUR ENDPOINT ID OBTAINED FROM query.apiVersions
- name: createGqlApiVersions
  endpoint:
    path: /createGqlApiVersions
    method: POST
    data_selector: data
    params:
      gqlApiVersionCreateInput:
        api: YOUR API ID
        name: v3
        introspectionCallUrl: YOUR BASE URL
        isIntrospectionCall: true
- name: updateGraphQLSchema
  endpoint:
    path: /updateGraphQLSchema
    method: POST
    data_selector: data
    params:
      input:
        endpointId: apiendpoint_YOUR ENDPOINT ID OBTAINED FROM query.apiVersions
- name: createGqlApiVersions
  endpoint:
    path: /createGqlApiVersions
    method: POST
    data_selector: data
    params:
      gqlApiVersionCreateInput:
        api: YOUR API ID
        name: v3
        introspectionCallUrl: YOUR BASE URL
        isIntrospectionCall: true
- name: createApisFromSpecs
  endpoint:
    path: /createApisFromSpecs
    method: POST
    data_selector: apiId
    params: {}
- name: updateApisFromSpecs
  endpoint:
    path: /updateApisFromSpecs
    method: POST
    data_selector: apiId
    params: {}
- name: tutorials
  endpoint:
    path: /tutorials
    method: query
    data_selector: nodes
    params:
      apiId: api_b766b545-cd34-4b8a-8ec9-0e994cf6ed80
      versionId: apiversion_1de8cd3a-94ec-45f0-b193-8d6f9a04dcd4
- name: create_tutorial
  endpoint:
    path: /createTutorial
    method: mutation
    data_selector: id
    params:
      apiId: api_b766b545-cd34-4b8a-8ec9-0e994cf6ed80
      versionId: apiversion_1de8cd3a-94ec-45f0-b193-8d6f9a04dcd4
      title: Tutorial 2
      content: '**Tutorial** content.'
      published: true
- name: delete_tutorial
  endpoint:
    path: /deleteTutorial
    method: mutation
    data_selector: tutorial
    params:
      apiId: api_b766b545-cd34-4b8a-8ec9-0e994cf6ed80
      versionId: apiversion_1de8cd3a-94ec-45f0-b193-8d6f9a04dcd4
      slug: tutorial-2
- name: tutorials
  endpoint:
    path: /tutorials
    method: GET
    data_selector: nodes
- name: create_tutorial
  endpoint:
    path: /createTutorial
    method: POST
    data_selector: id
- name: delete_tutorial
  endpoint:
    path: /deleteTutorial
    method: POST
    data_selector: id
- name: tutorial
  endpoint:
    path: /tutorials
    method: mutation
    data_selector: createTutorial
    params: {}
- name: tutorials
  endpoint:
    path: /graphql
    method: POST
    data_selector: tutorials.nodes
    params:
      apiId: api_b766b545-cd34-4b8a-8ec9-0e994cf6ed80
      apiVersion: apiversion_1de8cd3a-94ec-45f0-b193-8d6f9a04dcd4
- name: create_tutorial
  endpoint:
    path: /graphql
    method: POST
    data_selector: createTutorial.id
    params:
      apiId: api_b766b545-cd34-4b8a-8ec9-0e994cf6ed80
      apiVersion: apiversion_1de8cd3a-94ec-45f0-b193-8d6f9a04dcd4
- name: update_tutorial
  endpoint:
    path: /graphql
    method: POST
    data_selector: updateTutorial.id
    params:
      apiId: api_b766b545-cd34-4b8a-8ec9-0e994cf6ed80
      apiVersion: apiversion_1de8cd3a-94ec-45f0-b193-8d6f9a04dcd4
- name: delete_tutorial
  endpoint:
    path: /graphql
    method: POST
    data_selector: deleteTutorial
    params:
      apiId: api_b766b545-cd34-4b8a-8ec9-0e994cf6ed80
      apiVersion: apiversion_1de8cd3a-94ec-45f0-b193-8d6f9a04dcd4
- name: generateAssetUploadUrl
  endpoint:
    path: /
    method: POST
    data_selector: data.generateAssetUploadUrl
    params: {}
- name: updateAssetUploaded
  endpoint:
    path: /
    method: POST
    data_selector: data.updateAssetUploaded
    params: {}
- name: updateAsset
  endpoint:
    path: /
    method: POST
    data_selector: data.updateAsset
    params: {}
- name: deleteAsset
  endpoint:
    path: /
    method: POST
    data_selector: data.deleteAsset
    params: {}
- name: generateAssetUploadUrl
  endpoint:
    path: /
    method: POST
    data_selector: data.generateAssetUploadUrl
    params: {}
- name: updateAssetUploaded
  endpoint:
    path: /
    method: POST
    data_selector: data.updateAssetUploaded
    params: {}
- name: updateAsset
  endpoint:
    path: /
    method: POST
    data_selector: data.updateAsset
    params: {}
- name: createDocumentation
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: createDocumentation
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: updateApiVersions
  endpoint:
    path: /docs/papi-gql-examples-rest-apis#update-an-api
    method: POST
    data_selector: updateApiVersions
    params: {}
- name: api_versions
  endpoint:
    path: /api-versions
    method: POST
    data_selector: nodes
    params: {}
- name: create_api_versions
  endpoint:
    path: /create-api-versions
    method: POST
    data_selector: createApiVersions
    params: {}
- name: create_gql_api_versions
  endpoint:
    path: /create-gql-api-versions
    method: POST
    data_selector: createGqlApiVersions
    params: {}
- name: updateApiVersions
  endpoint:
    path: /docs/papi-gql-examples-rest-apis#update-an-api
    method: POST
    data_selector: updateApiVersions
    params: {}
- name: createApi
  endpoint:
    path: /createApi
    method: POST
    data_selector: createApi
    params: {}
- name: updateApi
  endpoint:
    path: /updateApi
    method: POST
    data_selector: updateApi
    params: {}
- name: readAPI
  endpoint:
    path: /readAPI
    method: GET
    data_selector: api
    params: {}
- name: Get API by external custom ID
  endpoint:
    path: /apis
    method: GET
    data_selector: edges.node
    params:
      externalCustomId: my-custom-id-01
- name: createApi
  endpoint:
    path: /api/create
    method: POST
    data_selector: createApi
    params: {}
- name: updateApi
  endpoint:
    path: /api/update
    method: POST
    data_selector: updateApi
    params: {}
- name: readAPI
  endpoint:
    path: /api/read
    method: GET
    data_selector: api
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: nodes
    params: {}
- name: Get API by external custom ID
  endpoint:
    path: /apis
    method: GET
    data_selector: edges
    params:
      externalCustomIds: my-custom-id-01
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: nodes
    params: {}
- name: billing_plan_versions
  endpoint:
    path: /billingPlanVersions
    method: query
    data_selector: nodes
    params:
      where:
        apiId: api_81eaf459-fd5f-4239-ae64-ab9f06559888
- name: create_external_gateway_api_subscription
  endpoint:
    path: /createExternalGatewayApiSubscription
    method: mutation
    data_selector: id
    params:
      input:
        apiId: api_6040d9e7-3d00-43d5-bc51-b7e10c3348ea
- name: delete_subscription
  endpoint:
    path: /deleteSubscription
    method: mutation
    data_selector: ''
    params:
      id: '4460204'
- name: billing_plan_versions
  endpoint:
    path: /graphql
    method: POST
    data_selector: billingPlanVersions.nodes
    params:
      where:
        apiId: api_81eaf459-fd5f-4239-ae64-ab9f06559888
      pagination:
        first: '50'
- name: create_external_gateway_api_subscription
  endpoint:
    path: /graphql
    method: POST
    data_selector: createExternalGatewayApiSubscription
    params:
      input:
        apiId: api_6040d9e7-3d00-43d5-bc51-b7e10c3348ea
- name: delete_subscription
  endpoint:
    path: /graphql
    method: POST
    data_selector: deleteSubscription
    params:
      id: '4460204'
- name: generateFile
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.generateFile
    params: {}
- name: getFileDetails
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.getFileDetails
    params: {}
- name: getFileDetails
  endpoint:
    path: /getFileDetails
    method: GET
    data_selector: getFileDetails
    params: {}
- name: generateFile
  endpoint:
    path: /generateFile
    method: POST
    data_selector: data
    params:
      actionName: SUBSCRIPTIONS
      from: '2023-09-01T00:00:00.000Z'
      to: '2023-09-30T23:59:59.999Z'
- name: getFileDetails
  endpoint:
    path: /getFileDetails
    method: GET
    data_selector: data
    params: {}
- name: apiFollowers
  endpoint:
    path: /apiFollowers
    method: POST
    data_selector: apiFollowers
    params: {}
- name: readAPI
  endpoint:
    path: /api
    method: POST
    data_selector: api
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: users
    params: {}
- name: getFileDetails
  endpoint:
    path: /getFileDetails
    method: POST
    data_selector: getFileDetails
    params: {}
- name: following_apis
  endpoint:
    path: /followingApis
    method: GET
    data_selector: nodes
    params:
      userId: '7344547'
- name: add_follower
  endpoint:
    path: /createApiFollowers
    method: POST
    data_selector: id
    params:
      ApiFollowerCreateInput:
        apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
- name: delete_follower
  endpoint:
    path: /deleteApiFollowers
    method: POST
    data_selector: null
    params:
      ApiFollowerDeleteInput:
        apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
- name: announcements
  endpoint:
    path: /api/announcements
    method: POST
    data_selector: announcements
    params: {}
- name: api_followers
  endpoint:
    path: /apiFollowers
    method: POST
    data_selector: apiFollowers.nodes
    params:
      where:
        apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
      orderBy:
        fields:
          fieldName: ID
          by: DESC
      pagination:
        first: 10
- name: read_api
  endpoint:
    path: /readAPI
    method: POST
    data_selector: api
    params:
      apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
- name: followed_apis
  endpoint:
    path: /users
    method: POST
    data_selector: users.followedApis
    params:
      where:
        email: '[SOME EMAIL]'
- name: user_apps
  endpoint:
    path: /graphql
    method: POST
    data_selector: user.ProjectACLs.Project
    params: {}
- name: create_app
  endpoint:
    path: /graphql
    method: POST
    data_selector: createProject
    params: {}
- name: following_apis
  endpoint:
    path: /followingApis
    method: GET
    data_selector: nodes
    params:
      userId: '7344547'
- name: add_follower
  endpoint:
    path: /createApiFollowers
    method: POST
    data_selector: id
    params:
      ApiFollowerCreateInput:
        apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
- name: delete_follower
  endpoint:
    path: /deleteApiFollowers
    method: POST
    data_selector: ''
    params:
      ApiFollowerDeleteInput:
        apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
- name: api_announcements
  endpoint:
    path: /api/announcements
    method: POST
    data_selector: announcements
    params: {}
- name: applicationAuthorizations
  endpoint:
    path: /applicationAuthorizations
    method: POST
    data_selector: applicationAuthorizations
    params:
      projectId: '2646677'
- name: applicationAuthorization
  endpoint:
    path: /applicationAuthorization
    method: POST
    data_selector: applicationAuthorization
    params:
      authId: '5307813'
- name: createApplicationAuthorization
  endpoint:
    path: /createApplicationAuthorization
    method: POST
    data_selector: createApplicationAuthorization
    params:
      projectId: '4510967'
      name: my new key
      authorizationType: RAPIDAPI
- name: updateApplicationAuthorization
  endpoint:
    path: /updateApplicationAuthorization
    method: POST
    data_selector: updateApplicationAuthorization
    params:
      id: '9051946'
      name: my new name
- name: deleteApplicationAuthorization
  endpoint:
    path: /deleteApplicationAuthorization
    method: POST
    data_selector: deleteApplicationAuthorization
    params:
      id: '9051946'
- name: list_user_apps
  endpoint:
    path: /graphql
    method: POST
    data_selector: user.ProjectACLs.Project
    params:
      id: '5713300'
- name: create_app
  endpoint:
    path: /graphql
    method: POST
    data_selector: createProject
    params:
      project:
        projectOwner: YOUR_TEAM_ID_or_USER_ID
        projectName: YOUR_APPLICATION_NAME
        description: YOUR_APPLICATION_DESCRIPTION
- name: user
  endpoint:
    path: /users
    method: POST
    data_selector: users
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: apps
    params: {}
- name: applicationAuthorizations
  endpoint:
    path: /applicationAuthorizations
    method: GET
    data_selector: applicationAuthorizations
    params:
      projectId: '2646677'
- name: createApplicationAuthorization
  endpoint:
    path: /createApplicationAuthorization
    method: POST
    data_selector: createApplicationAuthorization
    params:
      input:
        projectId: '4510967'
        name: my new key
        authorizationType: RAPIDAPI
- name: updateApplicationAuthorization
  endpoint:
    path: /updateApplicationAuthorization
    method: POST
    data_selector: updateApplicationAuthorization
    params:
      input:
        id: '9051946'
        name: my new name
- name: deleteApplicationAuthorization
  endpoint:
    path: /deleteApplicationAuthorization
    method: POST
    data_selector: deleteApplicationAuthorization
    params:
      id: '9051946'
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users
    method: POST
    data_selector: data.users
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data.apps
    params: {}
- name: User
  endpoint:
    path: /users
    method: POST
    data_selector: data
    params: {}
- name: ApplicationAuthorization
  endpoint:
    path: /createApplicationAuthorization
    method: POST
    data_selector: data
    params: {}
- name: DeleteApplicationAuthorization
  endpoint:
    path: /deleteApplicationAuthorization
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: YOUR URL FROM SAMPLE CODE
    method: POST
    data_selector: data.users.nodes
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
    params: {}
- name: createApp
  endpoint:
    path: /createApp
    method: POST
    data_selector: data
    params: {}
- name: deleteApp
  endpoint:
    path: /deleteApp
    method: DELETE
    data_selector: data
    params: {}
- name: createAuth
  endpoint:
    path: /createApplicationAuthorization
    method: POST
- name: getUserByEmail
  endpoint:
    path: /users
    method: POST
- name: deleteAuth
  endpoint:
    path: /deleteApplicationAuthorization
    method: POST
- name: user_details
  endpoint:
    path: /docs/user-management
    method: GET
    data_selector: user
    params: {}
- name: multiple_users
  endpoint:
    path: /docs/user-management
    method: GET
    data_selector: users
    params:
      where:
        limit: 50
        offset: 0
        term: ''
        order: createdAt,ASC
        byField: id,name,email,username
        filters: {}
- name: organization_users
  endpoint:
    path: /docs/organizations-gql-platform-api
    method: GET
    data_selector: paginatedTeamUsersByOrganizationIdV2
    params:
      orgId: 5755578
      pagingArgs:
        offset: 0
        limit: 1000
        orderBy: id
        orderDirection: desc
- name: team_details
  endpoint:
    path: /docs/organizations-gql-platform-api
    method: GET
    data_selector: team
    params:
      id: '6631475'
- name: configured_roles
  endpoint:
    path: /docs/roles
    method: GET
    data_selector: roles
    params:
      where:
        roleLevels:
        - USER_ENVIRONMENT
- name: users
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.users.nodes
- name: create_organization
  endpoint:
    path: /createOrganization
    method: POST
    data_selector: createOrganization
    params: {}
- name: organization_details
  endpoint:
    path: /organization
    method: GET
    data_selector: organization
    params:
      id: ORG_ID
- name: user_details
  endpoint:
    path: /graphql
    method: POST
    data_selector: user
    params:
      id: ID!
- name: multiple_users
  endpoint:
    path: /graphql
    method: POST
    data_selector: users
    params:
      where:
        limit: 50
        offset: 0
        term: ''
        order: createdAt,ASC
        byField: id,name,email,username
        filters: {}
- name: organization_users
  endpoint:
    path: /graphql
    method: POST
    data_selector: paginatedTeamUsersByOrganizationIdV2
    params:
      orgId: Int!
      pagingArgs:
        offset: 0
        limit: 1000
        orderBy: id
        orderDirection: desc
- name: team_details
  endpoint:
    path: /graphql
    method: POST
    data_selector: team
    params:
      id: ID!
- name: configured_roles
  endpoint:
    path: /graphql
    method: POST
    data_selector: roles
    params:
      where:
        roleLevels:
        - USER_ENVIRONMENT
- name: getOrg
  endpoint:
    path: /organizations
    method: POST
    data_selector: organization
    params:
      id: '5755578'
      whereRoles:
        roleLevels:
        - ORGANIZATION
      papiWhere:
        roleLevels:
        - TEAM_ENVIRONMENT
      whereOrgTeam:
        orgId: '5755578'
        parentId: '5755578'
      defaultRoleWhere:
        roleLevels:
        - USER_ORGANIZATION
- name: Organizations
  endpoint:
    path: /organizations
    method: POST
    data_selector: organizations
    params:
      where:
        userId: YOUR_USER_ID
- name: UpdateOrganization
  endpoint:
    path: /organizations/update
    method: POST
    data_selector: updateOrganization
    params:
      input:
        organizationId: ORG_ID
        seats: 35
        thumbnail: https://rapidapi.com/cdn/images?url=https://rapidapi-prod-apis.s3.amazonaws.com/abab68f8-9131-40db-861c-3b971503e4c2.png
- name: DeleteOrganization
  endpoint:
    path: /organizations/delete
    method: POST
    data_selector: deleteOrganization
    params:
      id: int
- name: create_organization
  endpoint:
    path: /createOrganization
    method: POST
    data_selector: createOrganization
    params: {}
- name: organization_details
  endpoint:
    path: /organization
    method: GET
    data_selector: organization
    params:
      id: ORG_ID
- name: categories
  endpoint:
    path: /categories
    method: POST
    data_selector: categoriesV2
    params: {}
- name: tag_definitions
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.tagDefinitions.edges
    params: {}
- name: collections
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.collections.data
    params: {}
- name: getOrg
  endpoint:
    path: /organizations
    method: POST
    data_selector: organization
    params:
      id: '5755578'
      whereRoles:
        roleLevels:
        - ORGANIZATION
      papiWhere:
        roleLevels:
        - TEAM_ENVIRONMENT
      whereOrgTeam:
        orgId: '5755578'
        parentId: '5755578'
      defaultRoleWhere:
        roleLevels:
        - USER_ORGANIZATION
- name: Organizations
  endpoint:
    path: /organizations
    method: POST
    data_selector: organizations
    params:
      where:
        userId: YOUR_USER_ID
- name: getGateways
  endpoint:
    path: getGateways
    method: POST
    data_selector: gatewayInstances.nodes
    params: {}
- name: createGatewayInstance
  endpoint:
    path: createGatewayInstance
    method: POST
    data_selector: createGatewayInstance
    params: {}
- name: updateGatewayInstance
  endpoint:
    path: updateGatewayInstance
    method: POST
    data_selector: updateGatewayInstance
    params: {}
- name: deleteGatewayInstance
  endpoint:
    path: deleteGatewayInstance
    method: POST
    data_selector: null
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: POST
    data_selector: categoriesV2
    params: {}
- name: tag_definitions
  endpoint:
    path: /query
    method: POST
    data_selector: data.tagDefinitions.edges
    params: {}
- name: collections
  endpoint:
    path: /query
    method: POST
    data_selector: data.collections.data
    params: {}
- name: getGWTemplates
  endpoint:
    path: /getGWTemplates
    method: POST
    data_selector: gatewayTemplates.nodes
    params: {}
- name: createTemplate
  endpoint:
    path: /createTemplate
    method: POST
    data_selector: createGatewayTemplate
    params: {}
- name: updateTemplate
  endpoint:
    path: /updateTemplate
    method: POST
    data_selector: updateGatewayTemplate
    params: {}
- name: deleteTemplate
  endpoint:
    path: /deleteTemplate
    method: POST
    data_selector: deleteGatewayTemplate
    params: {}
- name: getGateways
  endpoint:
    path: getGateways
    method: POST
    data_selector: nodes
    params: {}
- name: createGatewayInstance
  endpoint:
    path: createGWInstance
    method: POST
    data_selector: createGatewayInstance
    params: {}
- name: updateGatewayInstance
  endpoint:
    path: updateGWInstance
    method: POST
    data_selector: updateGatewayInstance
    params: {}
- name: deleteGatewayInstance
  endpoint:
    path: deleteGWInstance
    method: POST
    data_selector: deleteGatewayInstance
    params: {}
- name: apiTrafficAnalyticsSummary
  endpoint:
    path: /apiTrafficAnalyticsSummary
    method: POST
    data_selector: data.apiTrafficAnalyticsSummary
    params:
      where:
        apiIds:
        - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
        fromDate: '2024-03-21T07:00:00.000Z'
        toDate: '2024-03-28T22:53:09.586Z'
        timeOffset: 0
        resolution: DAYS
- name: getGWTemplates
  endpoint:
    path: /gatewayTemplates
    method: GET
    data_selector: nodes
    params: {}
- name: createTemplate
  endpoint:
    path: /createGatewayTemplate
    method: POST
    data_selector: createGatewayTemplate
    params: {}
- name: updateTemplate
  endpoint:
    path: /updateGatewayTemplate
    method: POST
    data_selector: updateGatewayTemplate
    params: {}
- name: deleteTemplate
  endpoint:
    path: /deleteGatewayTemplate
    method: POST
    data_selector: null
    params: {}
- name: apiTrafficAnalytics
  endpoint:
    path: /apiTrafficAnalytics
    method: POST
    data_selector: data.apiTrafficAnalytics
    params:
      where:
        fromDate: '2024-02-16T00:00:00.000Z'
        toDate: '2024-03-23T19:27:55.232Z'
        resolution: DAYS
- name: apiTrafficAnalyticsSummary
  endpoint:
    path: /apiTrafficAnalyticsSummary
    method: POST
    data_selector: data.apiTrafficAnalyticsSummary
    params:
      where:
        apiIds:
        - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
        fromDate: '2024-03-21T07:00:00.000Z'
        toDate: '2024-03-28T22:53:09.586Z'
        timeOffset: 0
        resolution: DAYS
- name: apiTrafficAnalyticsFacets
  endpoint:
    path: /apiTrafficAnalyticsFacets
    method: POST
    data_selector: apiTrafficAnalyticsFacets
    params: {}
- name: apiTrafficAnalytics
  endpoint:
    path: /apiTrafficAnalytics
    method: POST
    data_selector: data.apiTrafficAnalytics
    params:
      where:
        fromDate: '2024-02-16T00:00:00.000Z'
        toDate: '2024-03-23T19:27:55.232Z'
        resolution: DAYS
- name: requestLogsByEntity
  endpoint:
    path: /apiTrafficLogs
    method: POST
    data_selector: requestLogsByEntity
    params:
      fromDate: '2023-01-10T19:48:15.350Z'
      toDate: '2023-01-17T19:48:15.350Z'
      offset: 10
      limit: 10
      orderBy: callTime
      orderDir: desc
      filters:
        apiIds:
        - api_6024cb01-90f9-4e84-a756-3768a35808da
- name: projectLogsByEntity
  endpoint:
    path: /apiTrafficLogs
    method: POST
    data_selector: projectLogsByEntity
    params:
      projectId: 61784bcd6deb162134b9659d
      fromDate: '2024-03-16T00:00:00.000Z'
      toDate: '2024-04-15T20:39:38.206Z'
      offset: 0
      limit: 10
      orderBy: callTime
      orderDir: desc
      filters:
        projectIds:
        - 61784bcd6deb162134b9659d
      showDeleted: true
      timeOffset: 0
- name: apiTrafficAnalyticsFacets
  endpoint:
    path: /apiTrafficAnalyticsFacets
    method: POST
    data_selector: data.apiTrafficAnalyticsFacets
    params:
      fromDate: '2024-03-22T07:00:00.000Z'
      toDate: '2024-03-29T21:37:06.457Z'
      apiIds:
      - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
- name: apiTrafficAnalyticsLogs
  endpoint:
    path: /apiTrafficAnalyticsLogs
    method: POST
    data_selector: apiTrafficAnalyticsLogs
    params:
      where:
        apiIds:
        - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
        fromDate: '2024-03-23T07:00:00.000Z'
        toDate: '2024-03-30T22:46:09.121Z'
        timeOffset: 0
      orderBy:
      - by: DESC
        fieldName: DATE_TIME
      pagination:
        first: 10
        after: ''
- name: requestLogsByEntity
  endpoint:
    path: /graphql
    method: POST
    data_selector: requestLogsByEntity
    params:
      fromDate: '2023-01-10T19:48:15.350Z'
      toDate: '2023-01-17T19:48:15.350Z'
      offset: 10
      limit: 10
      timeOffset: 0
      orderBy: callTime
      orderDir: desc
- name: getHubMetrics
  endpoint:
    path: /getHubMetrics
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: '2024-03-19T00:00:00.000Z'
        toDate: '2024-03-26T13:48:27.535Z'
- name: getApiMetrics
  endpoint:
    path: /getApiMetrics
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: 1710658800
        toDate: 1711436399
        excludeProtected: true
- name: apiTrafficAnalyticsLogs
  endpoint:
    path: /apiTrafficAnalyticsLogs
    method: POST
    data_selector: nodes
    params:
      where:
        apiIds:
        - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
        fromDate: '2024-03-23T07:00:00.000Z'
        toDate: '2024-03-30T22:46:09.121Z'
        timeOffset: 0
      orderBy:
      - by: DESC
        fieldName: DATE_TIME
      pagination:
        first: 10
        after: ''
- name: logPayloadByRequestIdWithLoggingRestrictions
  endpoint:
    path: /logPayloadByRequestIdWithLoggingRestrictions
    method: POST
    data_selector: reqbody
    params:
      requestId: 8c3d64b72726fe465d833a5c189e1d7401408690ecb8769c2518daddeacc6486
      callTime: Fri, 29 Mar 2024 22:54:33 GMT
      apiId: api_28f03d6e-955e-4f13-bed8-f574ff7530a2
- name: governance_metrics
  endpoint:
    path: /metrics
    method: POST
    data_selector: data.metrics
    params:
      where:
        fromDate: 1710806400
        toDate: 1711460907
        excludeProtected: true
- name: billing_metrics
  endpoint:
    path: /metrics
    method: POST
    data_selector: data.metrics
    params:
      where:
        fromDate: 1710658800
        toDate: 1711436399
        excludeProtected: true
- name: HubMetrics
  endpoint:
    path: /metrics
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: '2024-03-19T00:00:00.000Z'
        toDate: '2024-03-26T13:48:27.535Z'
- name: ApiMetrics
  endpoint:
    path: /metrics
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: 1710658800
        toDate: 1711436399
        excludeProtected: true
- name: audit_login
  endpoint:
    path: /auditLogin
    method: POST
    data_selector: auditLogin
    params:
      userId: String
      from: Int
- name: admin_audit_logs
  endpoint:
    path: /adminAuditLogs
    method: POST
    data_selector: adminAuditLogs
    params:
      pagination:
        after: String
        first: Int
      orderBy:
        sortingFields:
        - fieldName: CREATED_AT
          order: DESC
      where:
        query: String
- name: event_logs
  endpoint:
    path: /eventLogs
    method: POST
    data_selector: eventLogs
    params:
      query: Update
- name: event_config
  endpoint:
    path: /eventConfig
    method: POST
    data_selector: eventConfig
    params: {}
- name: governance_metrics
  endpoint:
    path: /metrics/governance
    method: GET
    data_selector: data.metrics
    params:
      where:
        fromDate: 1710806400
        toDate: 1711460907
        excludeProtected: true
- name: billing_metrics
  endpoint:
    path: /metrics/billing
    method: GET
    data_selector: data.metrics
    params:
      where:
        fromDate: 1710658800
        toDate: 1711436399
        excludeProtected: true
- name: user_login_audit_logs
  endpoint:
    path: /auditLogin
    method: POST
    data_selector: auditLogin
    params:
      userId: '5713300'
      from: 0
- name: environment_audit_logs
  endpoint:
    path: /adminAuditLogs
    method: POST
    data_selector: adminAuditLogs
    params:
      pagination:
        after: ''
        first: 10
      orderBy:
        sortingFields:
        - fieldName: CREATED_AT
          order: DESC
      where:
        query: ''
- name: event_logs
  endpoint:
    path: /events/logs
    method: GET
    data_selector: eventLogs
    params: {}
- name: event_config
  endpoint:
    path: /events/config
    method: GET
    data_selector: eventConfig
    params: {}
- name: apis
  endpoint:
    path: /apis
    method: POST
    data_selector: edges
    params:
      pagination:
        first: 5
- name: apis
  endpoint:
    path: /apis
    method: POST
    data_selector: data
    params: {}
- name: Create API
  endpoint:
    path: /v1/apis
    method: POST
    data_selector: data
    params: {}
- name: Update API
  endpoint:
    path: /v1/apis/{apiId}
    method: PUT
    data_selector: data
    params: {}
- name: Delete API
  endpoint:
    path: /v1/apis/{apiId}
    method: DELETE
    data_selector: data
    params: {}
- name: create_collection
  endpoint:
    path: /collections/create
    method: POST
    data_selector: response
    params: {}
- name: update_collection
  endpoint:
    path: /collections/update
    method: PUT
    data_selector: response
    params: {}
- name: Create API with RapidAPI OpenApi metadata file
  endpoint:
    path: /v1/apis/rapidapi-file/admin
    method: POST
    data_selector: response
    params: {}
- name: delete_collection
  endpoint:
    path: /collections/{collectionID}
    method: DELETE
    data_selector: null
    params: {}
- name: Create API
  endpoint:
    path: /apis
    method: POST
    data_selector: api
    params: {}
- name: Update API
  endpoint:
    path: /apis/{apiId}
    method: PUT
    data_selector: api
    params:
      apiId: unique identifier for the API
- name: Delete API
  endpoint:
    path: /apis/{apiId}
    method: DELETE
    data_selector: api
    params:
      apiId: unique identifier for the API
- name: create_collection
  endpoint:
    path: /api/collections/create
    method: POST
    data_selector: collection
    params: {}
- name: update_collection
  endpoint:
    path: /api/collections/update
    method: PUT
    data_selector: collection
    params: {}
- name: delete_collection
  endpoint:
    path: /collections/{collectionID}
    method: DELETE
    data_selector: null
    params: {}
- name: get_all_collections
  endpoint:
    path: /collections
    method: GET
    data_selector: null
    params: {}
- name: API
  endpoint:
    path: /GetAPI
    method: GET
- name: Teams
  endpoint:
    path: /GetTeams
    method: GET
- name: Subscription
  endpoint:
    path: /GetUserSubscription
    method: GET
- name: API Version Docs
  endpoint:
    path: /GetAPIVersionDoc
    method: GET
- name: API Developers
  endpoint:
    path: /GetAPIDevelopers
    method: GET
- name: Apps
  endpoint:
    path: /GetApp
    method: GET
- name: Version Tag
  endpoint:
    path: /GetAPIVersionTag
    method: GET
- name: Users
  endpoint:
    path: /GetUsers
    method: GET
- name: Organization
  endpoint:
    path: /GetOrganization
    method: GET
- name: app_keys
  endpoint:
    path: /get-all-app-keys
    method: GET
- name: Get API
  endpoint:
    path: /api/get
    method: GET
- name: Get Analytics
  endpoint:
    path: /api/get/analytics
    method: GET
- name: Get Subscriptions
  endpoint:
    path: /api/get/subscriptions
    method: GET
- name: Get API Subscriptions
  endpoint:
    path: /api/get/api_subscriptions
    method: GET
- name: Update Team
  endpoint:
    path: /teams/update
    method: PUT
- name: Get Team
  endpoint:
    path: /teams/get
    method: GET
- name: Delete Team
  endpoint:
    path: /teams/delete
    method: DELETE
- name: Get Users for a Team
  endpoint:
    path: /teams/get/users
    method: GET
- name: Get Teams
  endpoint:
    path: /teams/get/all
    method: GET
- name: Remove Team User
  endpoint:
    path: /teams/remove/user
    method: DELETE
- name: Add Team User
  endpoint:
    path: /teams/add/user
    method: POST
- name: Create Team
  endpoint:
    path: /teams/create
    method: POST
- name: Get User Subscription
  endpoint:
    path: /subscriptions/get/user
    method: GET
- name: Get User Subscription Analytics
  endpoint:
    path: /subscriptions/get/user/analytics
    method: GET
- name: Delete Subscriptions
  endpoint:
    path: /subscriptions/delete
    method: DELETE
- name: Get User Subscriptions
  endpoint:
    path: /subscriptions/get/user/all
    method: GET
- name: Create Subscriptions
  endpoint:
    path: /subscriptions/create
    method: POST
- name: Get API Version Doc
  endpoint:
    path: /api/version/get
    method: GET
- name: Create API Version Doc
  endpoint:
    path: /api/version/create
    method: POST
- name: Delete API Version Doc
  endpoint:
    path: /api/version/delete
    method: DELETE
- name: Update API Version Doc
  endpoint:
    path: /api/version/update
    method: PUT
- name: Un-invite API Developers
  endpoint:
    path: /developers/uninvite
    method: DELETE
- name: Invite API Developers
  endpoint:
    path: /developers/invite
    method: POST
- name: Get API Developers
  endpoint:
    path: /developers/get
    method: GET
- name: Get App Analytics
  endpoint:
    path: /apps/get/analytics
    method: GET
- name: Delete App
  endpoint:
    path: /apps/delete
    method: DELETE
- name: Create App
  endpoint:
    path: /apps/create
    method: POST
- name: Update App
  endpoint:
    path: /apps/update
    method: PUT
- name: Get App
  endpoint:
    path: /apps/get
    method: GET
- name: Get User App
  endpoint:
    path: /apps/get/user
    method: GET
- name: Delete API Version Tag
  endpoint:
    path: /api/version/tag/delete
    method: DELETE
- name: Get API Version Tag
  endpoint:
    path: /api/version/tag/get
    method: GET
- name: Add API Version Tag
  endpoint:
    path: /api/version/tag/add
    method: POST
- name: Get API Version Tag
  endpoint:
    path: /api/version/tag/get
    method: GET
- name: Update User
  endpoint:
    path: /users/update
    method: PUT
- name: Delete User
  endpoint:
    path: /users/delete
    method: DELETE
- name: Get User Teams
  endpoint:
    path: /users/get/teams
    method: GET
- name: Create User
  endpoint:
    path: /users/create
    method: POST
- name: Get Users
  endpoint:
    path: /users/get/all
    method: GET
- name: Get User
  endpoint:
    path: /users/get
    method: GET
- name: Delete Organization
  endpoint:
    path: /organization/delete
    method: DELETE
- name: Get Organization
  endpoint:
    path: /organization/get
    method: GET
- name: Create Organization
  endpoint:
    path: /organization/create
    method: POST
- name: Update Organization
  endpoint:
    path: /organization/update
    method: PUT
- name: Get Organization Audit Log
  endpoint:
    path: /organization/get/audit/log
    method: GET
- name: app_keys
  endpoint:
    path: /get/all/app/keys
    method: GET
- name: users
  endpoint:
    path: /admin/users
    method: GET
    data_selector: data
    params: {}
- name: user_teams
  endpoint:
    path: /admin/users/{userId}/teams
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
    params: {}
- name: app_details
  endpoint:
    path: /apps/{projectId}
    method: GET
    data_selector: data
    params: {}
- name: apps_and_authorizations
  endpoint:
    path: /example/reading-a-users-apps-and-authorizations
    method: GET
    data_selector: records
- name: Create App
  endpoint:
    path: /Create App
    method: POST
    data_selector: appId
    params: {}
- name: Update App
  endpoint:
    path: /Update App
    method: PUT
    data_selector: 204 Success
    params: {}
- name: update_application_authorization
  endpoint:
    path: /mutation.updateApplicationAuthorization
    method: POST
- name: delete_app
  endpoint:
    path: /DELETE/App
    method: DELETE
- name: delete_application_authorization
  endpoint:
    path: /mutation.deleteApplicationAuthorization
    method: POST
- name: list_all_apis
  endpoint:
    path: /example/using/rest/platform/api/listing/all/apis
    method: GET
- name: users
  endpoint:
    path: /admin/users
    method: GET
    data_selector: data
    params: {}
- name: user_teams
  endpoint:
    path: /admin/users/{userId}/teams
    method: GET
    data_selector: data
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
    params: {}
- name: app_details
  endpoint:
    path: /apps/{projectId}
    method: GET
    data_selector: data
    params: {}
- name: app_authorizations
  endpoint:
    path: /applications
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: admin/users
    method: GET
    data_selector: data
    params:
      limit: '5000'
- name: organizations
  endpoint:
    path: admin/organizations
    method: GET
    data_selector: data
    params:
      limit: '200'
      status: ACTIVE
- name: teams
  endpoint:
    path: organizations/{orgID}/teams
    method: GET
    data_selector: data
    params: {}
- name: apis
  endpoint:
    path: apis
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: admin/users
    method: GET
    params:
      limit: '5000'
- name: organizations
  endpoint:
    path: admin/organizations
    method: GET
    params:
      limit: '200'
      status: ACTIVE
- name: teams
  endpoint:
    path: organizations/{orgID}/teams
    method: GET
- name: apis
  endpoint:
    path: apis
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculatedStatistics
  endpoint:
    path: /calculatedStatistics
    method: POST
    data_selector: data.calculatedStatistics
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculatedStatistics
  endpoint:
    path: /calculatedStatistics
    method: POST
    data_selector: data.calculatedStatistics
    params:
      apiIds:
      - ''
      fromDate: '2022-12-06T08:06:18.548Z'
      toDate: '2023-01-05T08:06:18.549Z'
      resolution: days
      timeOffset: 0
notes:
- An API hub provides a centralized catalog for helping developers, product managers,
  IT, and API creators to find, manage, and connect to all APIs — using a single key
  and SDK.
- The RapidAPI Enterprise Hub is branded with a company’s identity and enables organizations
  to create new efficiencies, accelerating the software development process.
- A user can be both an API builder and consumer.
- Additionally, a user can belong to multiple organizations and teams.
- Deployment with Rapid Runtime and third-party gateways is recommended.
- When utilizing only third-party API gateways, monetization of an API is no longer
  available.
- Integrations are built utilizing the Platform API.
- Flexibility on whether to implement Analytics or API Policy Provisioning first.
- Currently, RapidAPI supports text message (SMS) or authenticator app verification.
- Popular APIs are ranked based on user engagement and performance metrics.
- Ensure to include the API key in the header for authentication
- Users may see different links and icons based on their permissions.
- Changing your email address or password is only possible if your password is managed
  by RapidAPI. These options are not available for single sign-on options such as
  Login with Google.
- Changing your email address or password is only possible if your password is managed
  by RapidAPI.
- These options are not available for single sign-on options such as Login with Google.
- Updated 4 months ago
- An account is required to test APIs, integrate them into your application, and track
  analytics.
- It is extremely important to know how close you are to the quota limit for your
  subscription.
- You can learn more about the different types of API pricing and how billing works
  here
- API supports various notification types for different events.
- A lot of APIs have a BASIC free plan, which means you can use that plan to test
  the API for free as long as you stay within the quota limits.
- Certain fields on the API's listing page are automatically populated.
- API providers may create new versions of an API.
- For Enterprise Hub customers, this page only applies if you are using the Rapid
  Runtime in your requests to API endpoints.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Does not include periods with 0 calls
- Advanced searching and filtering enables users to narrow down results by categories,
  collections, tags, and more.
- Developer Dashboard is where you can see all of your apps, locate API keys, view
  analytics, and manage billing settings.
- If you opt to have multiple projects under a single RapidAPI account, keep in mind
  that pricing is based on account-wide usage.
- Centralized communication with API providers in the inbox.
- For information on the Approvals tab of the Developer Dashboard, Connecting to an
  API.
- If the total amount of an invoice is less than 50 US cents, then a charge to the
  credit card on file will not occur.
- Worried that you or your team might go over your quota for the month on either internal
  or external APIs?
- To delete your credit card, you must first remove all subscriptions from your account.
- The history list is stored in a browser cookie. This means that the history is only
  applicable for the current browser.
- Only the query and variables are saved in history. Other values such as context,
  headers, and files are not saved in the history.
- The maximum value allowed for viewing records is 100, which is also the default.
- GraphQL APIs have a different architectural style than other common types of APIs,
  such as REST APIs.
- Each GraphQL API typically has a single HTTP POST endpoint.
- The history list is stored in a browser cookie.
- API consumers can request OAuth2 credentials from an Environment Admin
- The Environment Admin can approve or reject the request and add the credentials
  via the GraphQL Platform API
- Authorization credentials are stored securely by Rapid in a storage vault.
- An Authorization can be used for multiple APIs that use the same gateway.
- The My APIs Inbox is a single location to send and receive messages for all your
  API projects.
- If your API is configured to not use the Rapid Runtime, Announcements may not function
  as expected for your API.
- API consumers can request OAuth2 credentials from an Environment Admin.
- Environment Admin can approve or reject requests and add credentials via the GraphQL
  Platform API.
- If you have an API description file, it is strongly suggested to import it to populate
  many details.
- Use markdown for long descriptions to display correctly under the short description.
- 'You can import the data in the following formats: OpenAPI, Postman Collection,
  GraphQL Schema, Kafka.'
- API consumers can see the new group order in the API listing.
- Markdown is accepted in descriptions for endpoints.
- Multiple status code mocking is a feature only available to enterprise customers.
- The optional long description is displayed under the short description on the Endpoints
  tab of the API listing. Here you can provide any information that your API consumers
  may find beneficial.
- The link to the API's terms of use on the About tab of an API listing.
- Transformations work on targets like Header, Body, Query parameter, Form field.
- For the add action, you can select from Static, Variable, or Template types.
- To modify the endpoints in a group, expand the group by clicking the dropdown icon
  on the left.
- You can drag and drop endpoints to a new location.
- You can use the Copy link to the right of the endpoint to duplicate it.
- You can use the Move to dropdown to move the endpoint to a different group.
- To delete a group, select the checkbox to the left of the group name and then click
  the Delete button.
- For rapidapi.com users, all APIs are automatically configured to (and must) use
  the Rapid Runtime.
- The **remap** action moves a value from a source to a target.
- 'Transformations work on the following targets: Header, Body, Query parameter, Form
  field.'
- For security reasons, you should protect your API and block requests coming from
  outside the Rapid infrastructure.
- The Rapid Runtime adds an `X-RapidAPI-Proxy-Secret` header to every request.
- Threat protection is disabled by default for an API.
- Request schema validation is disabled by default.
- Request size includes the entire request line, including any body.
- If left empty or configured as 0, the default value is applied.
- Remapping a field in the body of the request to a new header.
- For rapidapi.com users, all APIs are automatically configured to use the Rapid Runtime.
- Gateway DNS value will automatically be set to rapidapi.com and can not be changed.
- Headers sent to API consumers include X-RapidAPI-Proxy-Secret, X-RapidAPI-User,
  X-RapidAPI-Subscription, X-RapidAPI-Version, X-Forwarded-For, X-Forwarded-Host,
  x-rapidapi-host.
- Threat protection protects your API from SQL or JavaScript injection attacks.
- Request schema validation uses the Rapid Runtime to protect your API from being
  sent query parameters and/or headers that are not defined in the API's specification.
- Currently, the Custom Token feature is in private beta. Please contact our team
  at https://support.rapidapi.com/ to request access.
- Transformations allow you to add, remap, or remove headers, query parameters, or
  bodies in API requests and API responses.
- This functionality uses the Rapid Runtime. If you are an Enterprise Hub customer
  and your API does not use the Rapid Runtime, this page does not apply.
- 'Transformations work on the following keys: Header, Body, Form field, Query parameter.'
- Requires a master account for managing sub-users.
- This feature is available on Enterprise Hubs only.
- Assets are available to any API consumer that has access to the API listing.
- Use the search area to search for users or teams by name.
- Be sure to click Free Users to view them.
- Custom Token feature is in private beta
- The unique custom token is always hidden from the developer
- This feature is available on Enterprise Hubs only (not rapidapi.com).
- This feature is available via Studio and the GraphQL Platform API only.
- Plans can be public or private.
- API consumers receive emails when they reach 85% and 100% of quota for the month.
- To create or edit a private plan for your API, you can access Studio and select
  the team that owns the API.
- Once a user or organization has been invited to use a private plan, they can subscribe
  to the private plan in the API listing's Pricing tab.
- 'For enterprise customers: If your API is configured to not use the Rapid Runtime,
  plans are usually not used for the API.'
- Free APIs do not require a developer to subscribe to your API on Rapid to use it.
- Free API plans are limited to 1000 requests per hour and 500K requests per month.
- Occasionally, a developer will have a bug in their code that causes large accidental
  overages. Rapid can not forgive an overage without explicit permission from the
  API Provider.
- The more custom quotas that you have, the more likely a developer may become confused
  about your API's usage. This can result in fewer subscriptions and/or more disputed
  overage fees.
- API providers can create up to four public plans (named BASIC, PRO, ULTRA, and MEGA)
  per API and many private plans per API.
- Currently, the Provider Dashboard must be used to configure approval workflows for
  plans.
- Users will then be sent an email invitation and can click Accept Your Invitation
  in order to begin using the private plan.
- If your API includes monetization, you can view and download transactions with your
  API consumers using the Hub Listing > Monetize > Transactions tab.
- Free APIs are limited to 1000 requests per hour and 500K requests per month.
- Minimum price for non-free API plans must be set if the request limit exceeds 500K
  requests per month.
- Each RapidAPI user gets a single, multi-API key.
- Keep pricing clear and transparent from the beginning.
- The more custom quotas that you have, the more likely a developer may become confused
  about your API's usage.
- Add a RapidAPI badge to your website and docs to let users connect to your API.
- Rapid currently only pays out API providers via PayPal.
- If you do not add a PayPal address to your account, there is unfortunately no way
  for us to send you money!
- We do not refund any overage without your explicit permission.
- Rapid incorporates an industry-standard credit card verification and anti-fraud
  solution to prevent fraudulent charges.
- Rapid makes several attempts to collect a payment before failing and cancelling
  a user's subscription.
- A final payment is deemed to have occurred when the applicable credit card company
  or bank has fully settled the payment.
- Rapid takes a flat 20% marketplace fee on all payments made through the API Hub.
- Under GDPR, Rapid is a data processor.
- If you need to have Rapid sign a DPA with your company, please contact us at gdpr@rapidapi.com.
- This page is for informational purposes only and isn't a substitute for legal advice
  about your specific situation.
- When you create an API version, its version status will automatically be set to
  Draft
- When you set the version status to Active, you are given the option of clicking
  the Current checkbox
- Only a single Active version can be set as the Current version
- Deprecated versions of APIs are only visible to personal or team contexts that have
  previously used the deprecated version
- Deleting API versions is currently not supported
- Adding a GraphQL API is nearly the same process as adding a REST API.
- Currently, RapidAPI supports the Topic Name strategy as the Subject Name Strategy.
- Testing of SOAP APIs is not supported. It is assumed that API consumers have other
  tools to test SOAP APIs.
- Monetization and API gateway features are not supported.
- Other tabs in Studio (Requests, Tests, Analytics) are not supported for SOAP APIs.
- Spotlights are publicly accessible
- Files uploaded in Spotlights are stored in public AWS S3 buckets
- Spotlights are publicly accessible.
- Files uploaded in Spotlights are stored in public AWS S3 buckets.
- Markdown is supported in the Tutorial Content section.
- Wide images will display best as banner images.
- Ensure to include the X-RapidAPI-Key in the header for authentication
- Explains the types of aggregations available on analytics pages for each of the
  main dimensions (volume/error/latency), and how they are calculated.
- Analytics can be analyzed for different time periods and resolutions depending on
  the subscription level.
- If you are an environment admin, you can view analytics for your entire Hub in the
  Dashboard tab of the Admin Panel.
- Use the GraphQL Platform API to obtain analytics
- You can view and analyze all your API call history going back up to 1 year.
- You can break down traffic by App, API, Endpoint, and time directly in the platform,
  or export the raw logs.
- This feature is currently in preview and may experience issues.
- By default, logs sent are anonymous.
- If you have a custom DNS your setup might be slightly different, please contact
  your technical account manager if you are not sure how to proceed.
- If you API already has access logs in a different format your setup might be slightly
  different, please contact customer support if you are not sure how to proceed.
- This Apigee proxy is now configured to forward logs to the Platform Analytics API
  for each API call it receives.
- By design, Apigee does not call the postflow steps when an error is returned from
  the service.
- The X-RapidAPI-Key is a header that is used to authenticate requests to Rapid APIs.
- The APP ID can be found in the Developer Dashboard (My Apps) when expanding an app
  listing.
- This feature is currently in preview and you may experience issues.
- Branching allows you or your team to create a separate version of the requests for
  long-term, troubleshooting, or experimental purposes.
- The branch name should contain only letters, digits, and a dash (-) while being
  3 to 30 characters long.
- You can delete a variable by selecting the three vertical dots to the right of the
  variable and selecting Delete.
- By default, a session called Default Session is created in your Main branch.
- A session can store multiple cookies.
- API supports importing requests from OpenAPI 3.0.3 and Postman collections.
- Some sub-tabs may not be populated if there is no data of that sub-tab type in the
  request.
- Uses OAuth2 with refresh token — requires setup of connected app in rapidapi.com
- Supports entering a custom key for headers.
- 'There are three ways to create a test for your API: Request Generator, Visual Editor
  (Drag-and-Drop), Code Editor.'
- Assert steps are color-coded green in the visual editor.
- Specific test scenarios may require you to pull information directly from your database
  into RapidAPI Testing.
- An Environment is a context created in RapidAPI to simplify running the same test
  on different deployments.
- Environment variables are available for all the tests in an API Project.
- Environment variables are accessible throughout an entire API Project.
- Environment variables can be used in multiple API tests.
- Within an environment, you can create environment variables and environment secrets.
- Environment variables are accessible throughout an entire API Project, allowing
  different values in development and staging environments.
- You can find the URL for the API from the RapidAPI Hub.
- Requires an API key for authentication
- Each test you create will have test-specific settings you can edit, including test
  details, test variables, CI/CD integration, and timeout.
- You can execute tests locally by installing and running Rapid Testing workers on
  your machine.
- Frequency less than 2000 ms may get 429 (rate limiting) errors.
- Learn how to validate JSON Schema.
- Learn how to chain requests.
- Learn how to loop over results.
- Learn how to set variables.
- Learn how to execute custom code in a test.
- Learn how to use JSON Web Tokens (JWT).
- Learn how to create fake data in tests.
- Frequency less than 2000 ms may result in 429 (rate limiting) errors.
- You may get an array back from an API and wish to check some property in each array
  element.
- The ability to run code at any point within your test definition already gives you
  a lot of flexibility to manipulate data, get the current date, etc.
- There are instances where built in JS functions is just not enough.
- JWT Encode and Decode steps are available for testing workflows.
- The function takes one argument — context, which is an object holding all the variables
  in the test flow.
- Current allowed libraries are assert and crypto.
- JWT Encode and Decode steps can be used in testing workflows.
- 'Supports multiple categories of fake data including: name, address, company, images,
  phone number, date, time, and more.'
- API monitoring is the practice of observing the performance, availability, and accuracy
  of your APIs over time.
- You can schedule a test to reoccur at regular intervals.
- This can help you monitor the API's performance over time.
- A child test allows you to define a set of test steps once, and call those steps
  in multiple tests that need them.
- Daily email summaries to an organization will send a daily email summary to every
  member of that organization.
- Creating a master test to execute all other tests in your API Project can ensure
  that all endpoints and functionalities are working correctly together.
- You can configure the test retry and alerts in the Failures & Alerts section of
  your API Project's Testing Settings.
- Toggling on the 'Retry on failure' input number times will cause the test to automatically
  re-execute, the inputted number of times, after the first failure.
- You can create email alerts to notify you when your API project's test(s) encounters
  or recovers from an error.
- International country codes are supported for phone numbers.
- Since these configurations are made at the API Project level, they will apply to
  every test within the API Project.
- Redirects are blocked in webhook alerts
- Using triple brackets for JSON data ensures that the JSON payload does not get interpreted
  as an HTML entity.
- The test trigger webhook is asynchronous.
- To view the results of the test, a second request must be sent to the statusURL.
- There are multiple ways to view analytics for your tests and API performance.
- The Results page displays the results for each execution of the test.
- An Execution Report is generated after every test execution.
- The Results page helps sort your test executions by various criteria.
- API Hub for Teams is a feature of rapidapi.com.
- Do not need a credit card on file if you are creating an Organization with 5 or
  fewer seats.
- Billing is based on the total number of seats (RapidAPI User Accounts) within the
  Organization.
- The number of users you can add to an organization or team is currently uncapped.
- The first five users in an organization are free, and every additional seat is $10
  per month.
- Supports management of both internal and external APIs
- Allows setting up a single billing profile for API subscriptions
- Active Directory Integration allows automation of user management.
- To access the Organization Dashboard, your role must be Admin for the organization.
- To import from GitHub, you must log into GitHub as an admin and provide the read:org
  and user:email scopes.
- The number of organizations or teams you can create is currently uncapped.
- Admins can customize the Organization Homepage
- Allows org admins to create and manage teams within the organization.
- Supports bulk team member import via Manage Teammates tab.
- Admin Users are automatically added to all of the Teams within the Org.
- Admins can order the custom collections by dragging the rows up or down in the collections
  table.
- Bulk team member import is supported.
- The Transactions tab is mostly related to teams on rapidapi.com.
- Org Subscriptions tab shows invoices related to the number of users in your organization.
- Enterprise Hub customers who monetize their APIs would also use this tab.
- Payout Preference is necessary for receiving payments for published APIs.
- Once an API is public, it will not automatically be shown on the main API Hub page.
  An environment admin must add the API to a Collection.
- This feature must be enabled by an organization admin on the Organization Settings
  page.
- Logs include organization-related audit logs for governance and compliance.
- This feature must be enabled by an Admin on the Organization Settings page.
- Payout Preference is a payment you receive for any published APIs.
- Requires setup of environment administrator access to view the Admin Panel.
- Requests must be approved by admins before you are added to the Organization.
- Search term insights is a beta feature with partial functionality.
- Data is generally updated with a delay of up to 20 minutes.
- This section only applies if you are monetizing APIs using Stripe on your Hub.
- The View All tab includes up to 1000 of the most recent results.
- APIs can be managed through the Admin Panel
- Requires appropriate permissions to access APIs
- The Analytics and usage tab displays call volume, error rate, and latency.
- You can filter analytics by specific API consumers, API versions, HTTP methods,
  HTTP response codes and/or geographic locations.
- Your Enterprise Hub may not be configured to use this exact user approval process.
  Speak with your RapidAPI representative for approval configuration options.
- The Audit Trails tab only lists logs for changes made in the Admin Panel by environment
  admins.
- Your Enterprise Hub configuration may be different
- You must add a callback URL to begin seeing events
- The RapidAPI Enterprise Hub includes a secret key passed in the x-rapidapi-webhook-secret
  header
- Audit Trails tab only lists logs for changes made in the Admin Panel by environment
  admins.
- Users are uniquely identified by email address.
- User statuses include ACTIVE, DEACTIVATED, DELETED, and PENDING.
- User status can be ACTIVE, DEACTIVATED, DELETED, or PENDING.
- An API can appear in multiple collections
- APIs in a collection must be public
- View organization information using the Organizations tab of the Admin Panel.
- The search box can be used to search by organization name or by an email address
  of an organization administrator.
- CSS rules do not apply to an iFrame in the API listing pages.
- Store your custom CSS in version control
- Store your custom JSON in version control
- API providers can configure one or more alternative gateways in the Admin Panel.
- CSS rules do not apply to an iFrame in the API listing pages (the ones with the
  Test Endpoint button).
- You must have configured a code template before adding an API gateway.
- CORS error messages are only displayed in the browser's console. Make sure to check
  there for error messages.
- Each API gateway configured in Rapid has a Status. While in use, the gateway's Status
  is set to 'Active'.
- A gateway may only be edited when it is inactive.
- The response to your actual endpoint method must include the Access-Control-Allow-Origin
  response header with the value set to your Enterprise Hub URL.
- An Environment Admin can add or modify HTML tags for most pages in the Enterprise
  Hub.
- You could include any non-obvious details about the configuration.
- The response to your actual endpoint method must include the `Access-Control-Allow-Origin`
  response header with the value set to your Enterprise Hub URL.
- An Environment Admin can customize HTML title tags for most pages in the Enterprise
  Hub.
- If invoice billing is enabled, Rapid provides monthly aggregated quota usage reports.
- You are responsible for processing payment on invoices with invoice billing.
- If invoice billing is enabled in your Enterprise Hub, Rapid provides monthly aggregated
  quota usage reports to your enterprise.
- With invoice billing, Rapid will not process billing. You will be responsible for
  processing payment on these invoices.
- Roles specify what users can see and do in the Hub given certain contexts.
- Roles in RapidAPI enable your enterprise to specify fine-tuned control over things
  like performing administrative tasks, creating organizations and creating APIs.
- Each user is assigned one Environment User role, one Organization User role for
  each organization they are a member of, and one Team User role for each team they
  are a member of.
- New users are automatically given the default role unless otherwise specified.
- Environment Administrators are not automatically members of organizations.
- Multiple login options can be configured
- Email and password login method is managed by Rapid
- Users can log in with various SSO methods including SAML, Google, Facebook, GitHub,
  OpenID Connect, Wsfed.
- Email and password login method can be disabled but not deleted.
- This feature may need to be enabled on your Enterprise Hub.
- Because of the way DNS works, it can take a while before it's possible to verify
  that you've created the DNS records correctly.
- This process normally only takes a few minutes, and rarely takes more than an hour
  if you've created the records correctly, soon after starting the Custom Domain creation
  flow.
- It's extremely unlikely to take longer than 24h. If that happens, start over, or
  contact support.
- This feature may need to be enabled on your Enterprise Hub. Please contact your
  Rapid representative to enable it.
- You can't host your API Hub at the "root" of a domain.
- To restrict access to publishing & subscribing to APIs, you can use the API Publishing
  Approval feature.
- The Platform API is for Enterprise Hub customers only.
- Operation types include queries and mutations.
- Requires valid x-rapidapi-key for access.
- The GraphQL Platform API is available only to Enterprise Hub customers.
- Requires setup of RapidAPI access.
- The API must be assigned a category.
- An environment admin can update any API on the Hub using their personal account
  as the calling context.
- This example uses GitHub Actions and NodeJS, but you can use the same techniques
  for other CI/CD tools (such as Jenkins) or programming languages (such as C#).
- To create an API in a team context, you must include the x-rapidapi-identity-key
  header parameter.
- Creating a SOAP API without a WSDL file is possible by initially using any simple
  WSDL file and replacing it later.
- Updating the WSDL file for a SOAP API using the GraphQL Platform API in the playground.
- You must specify the API version ID to upload assets.
- Asset ID is required to update or delete an asset.
- Environment variables are used for sensitive information.
- External custom IDs are available programmatically using the REST and GraphQL Platform
  APIs.
- Only users with environment admin permissions can add or update an externalCustomId.
- Only users with environment admin permissions can add or update an externalCustomId
  using the updateApi mutation.
- Currently, you must execute this query from your Personal Account (not a team account).
- Date range for file generation cannot be larger than 31 days.
- Data is only available for the most recent 90 days.
- Limit of 10 successful calls to generateFile per calendar month.
- Additional consideration is needed to allow using this process in conjunction with
  API plans that include hard limits.
- The date range can not be larger than 31 days.
- There will be a limitation of 10 successful calls to `generateFile` per calendar
  month.
- This query only works if you are an Environment Admin.
- Currently requires execution from a Personal Account.
- API Announcements can be created via Studio - My APIs Inbox
- This query only works for the current user. You currently can not list another user's
  apps using this query.
- Requires X-RapidAPI-Key from a team with enterprise access to the platform API
- To create a non-Rapid authorization, you must specify the gateway ID.
- Requires enterprise access to the Platform API
- Requires setup of connected app in API
- Users need no access to the Platform API
- Authorization may be deleted immediately after creation if configured
- To call the query from a team context, include the API key from your personal account
  in the x-rapidapi-identity-key header.
- Requires setup of connected app in rapidapi
- On-behalf-of functionality is used
- This query only works if you are an Environment Admin. Currently, you must execute
  this query from your Personal Account (not a team account).
- To query by a user's email, include the email in the where input.
- To query by a user's user name, include the username in the where input.
- To query by one or more user id, include the userIds in the where input.
- Must execute queries from personal account for admin access
- Pagination is required for user queries
- This query requires that the user is an Environment Admin.
- The x-rapidapi-identity-key must be the Personal Account key of an org admin.
- Requires the user to be an Environment Admin.
- The 'resolution' field is mandatory and must be larger than the date range.
- Users of the GraphQL Platform API must have Personal Contexts (Accounts) enabled
  in their Environment User Role.
- Logins using a browser cookie are not listed in this audit log.
- Pagination uses 'first' and 'after' fields for queries.
- Use arguments to narrow searches and order results
- On-behalf-of functionality is not currently implemented in the GraphQL Platform
  API.
- Currently, the GraphQL Platform API is limited to 10 requests per minute per user.
- Enterprise Hub customers only
- It is highly recommended that enterprise customers use the GraphQL Platform API
  instead of the REST Platform API
- It is highly recommended that enterprise customers use the GraphQL Platform API
  instead of the REST Platform API.
- Deleting an API is permanent and cannot be undone.
- Endpoints require Environment Admin Access to the Platform API
- Use the second endpoint if you have environment admin access to create an API on
  behalf of another entity.
- Please note that deleting a collection is not reversible.
- You must have Enterprise Access to the Platform API to use the 'on-behalf-of' functionality.
- If you are calling an endpoint, such as Get All Teams, on-behalf-of of an org admin,
  that org admin must have their Personal Context enabled.
- Requires Environment Admin Access to the Platform API for certain endpoints.
- Deleting a collection is not reversible.
- If you don't see the optional header, please contact your Rapid representative.
- The Get all App Keys endpoint currently is used only to obtain X-RapidAPI-Key values.
- You can use the on-behalf-of header with Get All Apps.
- X-RapidAPI-Keys only
- If your API uses Authorizations, use the GraphQL Platform API to read and write
  them
- Requires setup of connected app in api
- The X-RapidAPI-Key is automatically created when creating the app.
- Example only — provided as is and not supported by Rapid's support team.
- Some fields may return nulls in deeply nested structures
- Admin access is required for certain operations like creating or updating apps on
  behalf of other users or teams.
- The key used must have Environment Access to the REST Platform API.
- Example only
- New Environment Admin capabilities were introduced.
- Improved Discovery Page Customization.
- 'Single Sign-On (SSO) Enhancement: In Enterprise Hubs where users authenticate with
  SSO, you can now capture the user’s Name attribute to be used in the profile on
  the hub.'
- The GraphQL Platform API and documentation have been updated to include queries
  that Environment Admins can use to programmatically read aggregate metrics from
  an Enterprise Hub.
- The GraphQL Platform API and documentation have been updated to include queries
  related to obtaining API request/response logs.
- The GraphQL Platform API and documentation have been updated to include queries
  related to obtaining single API and aggregate API request analytics from API consumer,
  API provider, and/or admin perspectives.
- Enterprise Hub customers can monetize APIs using their own Stripe account.
- The GraphQL Platform API and documentation has been updated to include queries that
  Environment Admins can use to programmatically read aggregate metrics from an Enterprise
  Hub.
- If you host your own login button to the Enterprise Hub, previously by default the
  logged in user will be taken to the `/hub` page (the main API Hub page). We have
  added the ability to directly log in to other pages, such as the Organization Homepage
  or the Developer Dashboard (Apps), using the `referral` URL query parameter in the
  button's link.
- If your enterprise would prefer to bill API consumers using your existing billing
  system, Rapid makes it easy for you to export subscription and usage data as CSV
  files.
- For environment admins, the user experience has been improved for configuring and
  enabling login options (such as Okta login) on your Enterprise Hub.
- Rapid sends emails to users on your behalf, such as when they are invited to join
  an organization.
- Enterprise Hub customers now have the option to monetize APIs on their Enterprise
  Hub using their own Stripe account.
- An exciting new beta feature called Search Term Insights is available in Enterprise
  Hubs.
- The GraphQL Platform API has been updated to include more queries and mutations.
- If you host your own login button to the Enterprise Hub, previously by default the
  logged in user will be taken to the /hub page (the main API Hub page).
- We have added the ability to directly log in to other pages, such as the Organization
  Homepage or the Developer Dashboard (Apps), using the referral URL query parameter
  in the button's link.
- If your enterprise would prefer to bill API consumers using your existing billing
  system, Rapid makes is easy for you to export subscription and usage data as CSV
  files.
- Some objects like Contact may return nulls in deeply nested fields
- GraphQL APIs that are listed on the hub use a new API playground.
- Configuring additional API security has moved to the Security tab for individual
  endpoints.
- OAuth 2 PASSWORD grant type is now supported.
- Environment admins can deactivate and reactivate users using the Admin Panel.
- Added examples for creating apps and authorizations programmatically.
- APIs now support authorizations of type BEARER.
- APIs now support OAuth2 password grant types.
- Support for Header and Basic authentication for API Access Provisioning (Preview).
- Support for the WS-Federation login method.
- During September of 2023, configuring additional API security (such as OAuth) will
  move from the Hub Listing > Gateway tab of Studio to the Hub Listing > Definitions
  > Security tab.
- Your company's custom API ID can be associated with Rapid's API ID, allowing you
  to search for an API in Rapid using your custom ID.
- SOAP APIs now support multiple versions. Previously, only a single version was supported.
- New GraphQL API provides access to API traffic metrics.
- Studio includes a new Docs tab (inside the Hub Listing menu) with a visual editor
  that can be used to add README information to the About tab of an API's listing.
- 'New Log Forwarding Options Page: A new page that explains the three different methods
  for displaying API logs.'
- Seven new widgets on the Admin Panel Dashboard for API traffic.
- 'API OAuth Flow: Fixed an issue where an error would occur after trying to list
  an API that uses OAuth2 client credentials.'
- 'New Authorization Types: Additional authorization types have been released to meet
  the needs of diverse customers, including OAuth Client Credentials, Authorization
  Code, Basic Authorization, and Header Authorization.'
- New Log Forwarding Options require setup with a RapidAPI representative
- Admin Dashboard widgets provide insights into API traffic and consumer engagement
errors:
- '401 Unauthorized: Check API key validity.'
- '403 Forbidden: Insufficient permissions for the requested operation.'
- '401 Unauthorized: Check your API key'
- '429 Too Many Requests: You have reached your rate limit'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: bad request'
- '413: Request size exceeds limit'
- '504: Response takes longer than the specified timeout value'
- '504: Gateway Timeout'
- '400: an error occurred'
- '429 Too Many Requests: Exceeding request limits.'
- '429 Too Many Requests: Exceeding rate limit.'
- '429 Too Many Requests: Exceeds rate limits.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- If you think there is a processing error on our side, reach out to support at https://support.rapidapi.com/
- '401 Unauthorized: Check your API key or authentication details.'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Try again later'
- fault.name = "ErrorResponseCode"
- 200 OK
- '200 OK: Successful response'
- This action will fail the test
- On Error alerts are sent after a selected number of consecutive test failures (including
  retries).
- To help reduce alert fatigue you can set a limit to the frequency of On Error alerts
  during a failure state.
- You have reached your rate limit for the Beta version, please wait and try again.
- '429 Too Many Requests: Rate limit reached, please wait and try again.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- If the user is the only org admin for an organization, they cannot be deactivated.
- '401 Unauthorized: User must be approved to access the Hub.'
- '404 Not Found: User not found.'
- Cannot disable the last login option that is enabled
- '401 Unauthorized: Check your API key or authentication method.'
- '400 Bad Request: Ensure your query syntax is correct.'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Verify the API ID or endpoint.'
- 'API_NOT_FOUND: Check if the API ID is correct.'
- 'INVALID_API_KEY: Ensure the API key is correct.'
- '401 Unauthorized: You must be an Environment Admin to execute this query.'
- 'REQUEST_LIMIT_EXCEEDED: Limit of successful calls exceeded for the month.'
- 'REQUEST_LIMIT_EXCEEDED: Limit of 10 successful calls to `generateFile` per calendar
  month exceeded.'
- '404 Not Found: Check the endpoint URL'
- '401 Unauthorized: Verify API key and access'
- '404 Not Found: Check user ID or app ID'
- '401 Unauthorized: Recheck API key'
- 'User not found: Check user email'
- 'Authorization not created: Check app ID and user access'
- '404 Not Found: Check the URL or resource identifier'
- '403 Forbidden: Verify permissions or authentication'
- '429 Too Many Requests: Your code should include retry attempts to account for this
  rate limit.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API keys or user permissions'
- '204 Success: Indicates that the update is successful.'
- '401 Unauthorized: Recheck API key or token expiration'
- '204 Success: Update was successful.'
- '401 Unauthorized: Ensure proper authorization is provided.'
- 'REQUEST_OR_RESPONSE_BODY_FAILED_PROCESSING: occurs when using the REST PAPI create
  and update API version ASYNC endpoints.'
- 'Too many requests: error would appear when updating an APIs definition.'
- 'REQUEST_OR_RESPONSE_BODY_FAILED_PROCESSING: Error in processing request or response
  body'
- 'Too many requests: Rate limit exceeded'
auth_info:
  mentioned_objects:
  - Environment Admin
  - Authorization
  - Environment Variable
  - File
  - Form URL-Encoded
  - HMAC Signature
  - HTTP Basic Auth
  - HTTP Token Auth
  - Multipart Body
  - Nonce
  - OAuth 1
  - Consumer Key
  - Consumer Secret
  - Token
  - Token Secret
  - Signature Method
  - Client ID
  - Client Secret
  - Authorization URL
  - Access Token URL
  - Callback URL
  - Scope
  - Refresh Token
  - Token Prefix
  - OAuth 2
  - ApiCreateInput
  - ApiVersion
  - ApiWhereInput
  - SearchApiWhereInput
  - x-rapidapi-identity-key
  - RAPID_API_ID
  - RAPID_API_KEY
  - RAPID_IDENTITY_KEY
  - RAPID_GQL_HOST
  - OauthToken
  - AuthProvider
  - x-rapidapi-key
  - NamedCredential
  - UserWhereInput
  - User
  - ProjectCreateInput
client:
  base_url: https://rapidapi.com
  headers:
    Accept: application/json
source_metadata: null
