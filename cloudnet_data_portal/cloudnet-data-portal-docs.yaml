resources:
- name: sites
  endpoint:
    path: /api/sites
    method: GET
    data_selector: Site[]
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: Product[]
    params: {}
- name: product_variables
  endpoint:
    path: /api/products/variables
    method: GET
    data_selector: ProductVariables[]
    params: {}
- name: instruments
  endpoint:
    path: /api/instruments
    method: GET
    data_selector: Instrument[]
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: Model[]
    params: {}
- name: files_by_uuid
  endpoint:
    path: /api/files/UUID
    method: GET
    data_selector: File
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: File[]
    params: {}
- name: sites
  endpoint:
    path: /api/sites
    method: GET
    data_selector: Site[]
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: Product[]
- name: product_variables
  endpoint:
    path: /api/products/variables
    method: GET
    data_selector: ProductVariables[]
- name: instruments
  endpoint:
    path: /api/instruments
    method: GET
    data_selector: Instrument[]
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: Model[]
- name: files_uuid
  endpoint:
    path: /api/files/UUID
    method: GET
    data_selector: File
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: File[]
- name: model_file
  endpoint:
    path: /api/model-files
    method: GET
    data_selector: ModelFile[]
- name: visualization
  endpoint:
    path: /api/visualizations
    method: GET
    data_selector: Visualization[]
- name: raw_file
  endpoint:
    path: /api/raw-files
    method: GET
    data_selector: Upload[]
- name: raw_model_file
  endpoint:
    path: /api/raw-model-files
    method: GET
    data_selector: ModelUpload[]
- name: metadata_upload
  endpoint:
    path: /upload/metadata/
    method: POST
    data_selector: metadata
    params: {}
- name: data_upload
  endpoint:
    path: /upload/data/<md5>
    method: PUT
    data_selector: file
    params: {}
- name: calibration
  endpoint:
    path: /api/calibration
    method: GET
    data_selector: data
    params: {}
- name: calibration_update
  endpoint:
    path: /api/calibration
    method: PUT
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /api/cloudnet/files
    method: GET
    data_selector: records
- name: dimensions
  endpoint:
    path: /api/cloudnet/dimensions
    method: GET
    data_selector: records
- name: variables
  endpoint:
    path: /api/cloudnet/variables
    method: GET
    data_selector: records
- name: model_files
  endpoint:
    path: /api/model-files
    method: GET
    data_selector: ModelFile[]
    params: {}
- name: visualizations_uuid
  endpoint:
    path: /api/visualizations/UUID
    method: GET
    data_selector: Visualization
    params: {}
- name: visualizations
  endpoint:
    path: /api/visualizations
    method: GET
    data_selector: Visualization[]
    params: {}
- name: raw_files
  endpoint:
    path: /api/raw-files
    method: GET
    data_selector: Upload[]
    params: {}
- name: raw_model_files
  endpoint:
    path: /api/raw-model-files
    method: GET
    data_selector: ModelUpload[]
    params: {}
- name: metadata_upload
  endpoint:
    path: /upload/metadata/
    method: POST
    data_selector: ''
    params: {}
- name: data_upload
  endpoint:
    path: /upload/data/<md5>
    method: PUT
    data_selector: ''
    params: {}
- name: calibration
  endpoint:
    path: /api/calibration
    method: GET
    data_selector: data
    params: {}
- name: calibration_update
  endpoint:
    path: /api/calibration
    method: PUT
    data_selector: data
    params: {}
- name: global_attributes
  endpoint:
    path: /global_attributes
    method: GET
    data_selector: attributes
- name: compulsory_variables
  endpoint:
    path: /compulsory_variables
    method: GET
    data_selector: variables
notes:
- One or more parameters must be issued for the files endpoint.
- For dates that do not have calibration data set, the previous calibration data are
  returned.
- Updating the calibration database is currently done by the CLU personnel only.
- Files should use the netCDF4 classic file format.
- Filenames should not contain underscores; hyphens should be used.
- Filenames should contain only the characters [`-_.a-z0-9`]. Spaces are forbidden.
errors:
- '400 Bad Request: One or more of the parameters must be issued.'
- '400 Bad Request: A query without any valid parameters.'
- '404: One or more of the specified products were not found'
- '400 Bad Request: There was a problem in handling the request. Check request headers
  and content type.'
- '401 Unauthorized: Problem in authentication. Check credentials.'
- '409 Conflict: Metadata for this file already exists, and the file has been received.
  Do not attempt file submission.'
- '422 Unprocessable Entity: Problem in handling metadata body. Check that the metadata
  JSON is correct.'
- '200 OK: Metadata creation was successful.'
- '201 Created: File was received successfully.'
- '200 OK: File already exists, doing nothing.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://cloudnet.fmi.fi
  headers:
    Accept: application/json
source_metadata: null
