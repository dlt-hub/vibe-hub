resources:
- name: tickets
  endpoint:
    path: /v1/spaces/test-1/tickets
    method: GET
    data_selector: records
- name: milestones
  endpoint:
    path: /api/v1/milestones
    method: GET
    data_selector: milestones
    params: {}
- name: milestones
  endpoint:
    path: /api/v1/milestones
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: tickets
- name: ticket_metrics
  endpoint:
    path: /api/ticket_metrics
    method: GET
- name: ticket_metrics
  endpoint:
    path: /api/v1/ticket_metrics
    method: GET
    data_selector: metrics
- name: tickets
  endpoint:
    path: /tickets
    method: POST
    data_selector: ticket
    params: {}
- name: closed_tickets_by_user
  endpoint:
    path: /closed_tickets_by_user
    method: GET
    data_selector: records
- name: tickets_by_status
  endpoint:
    path: /tickets_by_status
    method: GET
    data_selector: records
- name: tickets_by_priority
  endpoint:
    path: /tickets_by_priority
    method: GET
    data_selector: records
- name: calendar
  endpoint:
    path: /calendar
    method: GET
    data_selector: records
- name: related_tickets
  endpoint:
    path: /related_tickets
    method: GET
    data_selector: records
- name: time_reports
  endpoint:
    path: /time_reports
    method: GET
    data_selector: records
- name: spaces
  endpoint:
    path: /spaces
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: GET
- name: activity_report
  endpoint:
    path: /activity_report
    method: GET
- name: kill_rate_chart
  endpoint:
    path: /kill_rate_chart
    method: GET
- name: closed_tickets_by_user
  endpoint:
    path: /closed_tickets_by_user
    method: GET
    data_selector: records
- name: tickets_by_status
  endpoint:
    path: /tickets_by_status
    method: GET
    data_selector: records
- name: tickets_by_priority
  endpoint:
    path: /tickets_by_priority
    method: GET
    data_selector: records
- name: calendar
  endpoint:
    path: /calendar
    method: GET
    data_selector: records
- name: related_tickets
  endpoint:
    path: /related_tickets
    method: GET
    data_selector: records
- name: time_reports
  endpoint:
    path: /time_reports
    method: GET
    data_selector: records
- name: email_events
  endpoint:
    path: /api/v1/email_events
    method: GET
    data_selector: events
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
- name: standup_reports
  endpoint:
    path: /standup_reports
    method: GET
- name: code_commits
  endpoint:
    path: /code_commits
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: GET
- name: files
  endpoint:
    path: /files
    method: GET
- name: wiki
  endpoint:
    path: /wiki
    method: GET
- name: team
  endpoint:
    path: /team
    method: GET
- name: ftp_deploy
  endpoint:
    path: /ftp_deploy
    method: GET
- name: git_push
  endpoint:
    path: /git_push
    method: GET
- name: git_diffs
  endpoint:
    path: /git_diffs
    method: GET
- name: github_connector
  endpoint:
    path: /github_connector
    method: GET
- name: ssh_actions
  endpoint:
    path: /ssh_actions
    method: GET
- name: snippets
  endpoint:
    path: /snippets
    method: GET
- name: svn_diffs
  endpoint:
    path: /svn_diffs
    method: GET
- name: follower
  endpoint:
    path: /follower
    method: GET
- name: mentions
  endpoint:
    path: /mentions
    method: GET
- name: bang_mentions
  endpoint:
    path: /bang_mentions
    method: GET
- name: avoid_my_own_changes
  endpoint:
    path: /avoid_my_own_changes
    method: GET
- name: accepted_card_types
  endpoint:
    path: /api/payment/accepted_card_types
    method: GET
    data_selector: card_types
- name: unsupported_payment_methods
  endpoint:
    path: /api/payment/unsupported_methods
    method: GET
    data_selector: unsupported_methods
- name: troubleshooting_payment_issues
  endpoint:
    path: /api/payment/troubleshooting
    method: GET
    data_selector: troubleshooting_issues
- name: security_scan
  endpoint:
    path: /security_scan
    method: POST
- name: support_ticket
  endpoint:
    path: /support/tickets
    method: POST
    data_selector: ticket
    params: {}
- name: support_ticket
  endpoint:
    path: /support/tickets
    method: POST
    data_selector: ticket
    params: {}
- name: webhook
  endpoint:
    path: /space/settings/tools/webhook
    method: POST
- name: webhook
  endpoint:
    path: /webhook
    method: POST
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
    params: {}
- name: standup_report
  endpoint:
    path: /standup/report
    method: GET
    data_selector: reports
    params: {}
- name: activity_report
  endpoint:
    path: /activity/report
    method: GET
    data_selector: activity
    params: {}
- name: SAML Consumer URL
  endpoint:
    path: /p/saml/consume
    method: POST
- name: Space Settings
  endpoint:
    path: /space/settings
    method: GET
    data_selector: settings
    params: {}
- name: Email Alert Settings
  endpoint:
    path: /space/email_alert_settings
    method: GET
    data_selector: alert_settings
    params: {}
- name: Security Settings
  endpoint:
    path: /space/security
    method: GET
    data_selector: security
    params: {}
- name: space
  endpoint:
    path: /spaces
    method: GET
    data_selector: spaces
    params: {}
- name: repository
  endpoint:
    path: /repositories
    method: GET
    data_selector: repositories
    params: {}
- name: spaces
  endpoint:
    path: /api/v1/spaces
    method: GET
    data_selector: spaces
- name: stream
  endpoint:
    path: /spaces/project_name/stream.rss
    method: GET
- name: stream_events
  endpoint:
    path: /spaces/project_name/stream.rss
    method: GET
    data_selector: events
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: user_group
  endpoint:
    path: /api/user_groups
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v1/users
    method: DELETE
- name: remote_repo
  endpoint:
    path: /git/remotes
    method: GET
    data_selector: remotes
- name: merge_request
  endpoint:
    path: /merge_requests
    method: GET
    data_selector: merge_requests
- name: inline_comments
  endpoint:
    path: /inline_comments
    method: GET
    data_selector: inline_comments
- name: user_accounts
  endpoint:
    path: /user_accounts
    method: GET
    data_selector: users
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
- name: workspace
  endpoint:
    path: /services/data/vXX.X/sobjects/Workspace
    method: POST
    data_selector: records
    params:
      name: main
      root: D:\p4\Assembla_demo
- name: stream
  endpoint:
    path: /services/data/vXX.X/sobjects/Stream
    method: GET
    data_selector: records
    params:
      select: Mainline
- name: repository
  endpoint:
    path: /git
    method: GET
    data_selector: repositories
- name: P4 Repository
  endpoint:
    path: /add/new/P4Repository
    method: POST
    data_selector: repository
    params: {}
- name: remote_repo
  endpoint:
    path: /portfolio/space.space_name.git
    method: GET
- name: large_file_support
  endpoint:
    path: /large-file-support
    method: GET
    data_selector: files
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: permissions
  endpoint:
    path: /P4Admin/Permissions
    method: GET
    data_selector: permissions
    params: {}
- name: user_groups
  endpoint:
    path: /P4Admin/UsersAndGroups
    method: GET
    data_selector: groups
    params: {}
- name: Backups
  endpoint:
    path: /api/backups
    method: GET
    data_selector: backups
- name: Disk Storage
  endpoint:
    path: /api/storage
    method: GET
    data_selector: storage
- name: User Accounts
  endpoint:
    path: /api/users
    method: GET
    data_selector: users
- name: repository
  endpoint:
    path: /user/edit/edit_git_settings
    method: POST
    data_selector: repository
    params: {}
- name: repository_dump
  endpoint:
    path: /repository/dump
    method: GET
    data_selector: dump_file
    params: {}
- name: externals_definitions
  endpoint:
    path: /svn/externals
    method: GET
    data_selector: externals
    params: {}
- name: svn_repository
  endpoint:
    path: /svn/repos
    method: GET
    data_selector: repositories
    params: {}
- name: workspace
  endpoint:
    path: /services/data/vXX.X/workspace
    method: POST
    data_selector: records
    params: {}
- name: TestRail Integration
  endpoint:
    path: /api
    method: GET
- name: merge_request
  endpoint:
    path: /spaces/{your_space_name}/merge_requests
    method: GET
- name: protected_directories
  endpoint:
    path: /protected/directories
    method: GET
    data_selector: directories
- name: log_message
  endpoint:
    path: /svn/log
    method: POST
    data_selector: log
    params: {}
- name: TestRail Entities
  endpoint:
    path: /api/v2/get_cases/{project_id}
    method: GET
    data_selector: cases
- name: LDAP Server Settings
  endpoint:
    path: /ldap/settings
    method: POST
    data_selector: settings
    params: {}
- name: github_repo
  endpoint:
    path: /api/github/repos
    method: POST
    data_selector: data
    params: {}
- name: github_pull_request
  endpoint:
    path: /api/github/pull_requests
    method: GET
    data_selector: data
    params: {}
- name: merge_request
  endpoint:
    path: /spaces/{your_space_name}/merge_requests
    method: GET
    data_selector: merge_requests
- name: repository
  endpoint:
    path: /api/repositories
    method: POST
    data_selector: repository_info
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ldap_settings
  endpoint:
    path: /settings/ldap
    method: POST
    data_selector: settings
    params: {}
notes:
- Sprints are a predetermined period of time at the end of which a complete and potentially
  releasable product should be completed.
- Task estimates are important for organizing a backlog.
- Milestones can be organized into Current, Backlog, or None types
- Uses OAuth2 with refresh token — requires setup of connected app in Assembla
- Use OAuth2 with refresh token — requires setup of connected app in Assembla
- Ensure to handle ticket statuses and properties correctly as they are customizable.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- You must have Delete permissions in space that has tickets you want to move. If
  not, only the Copy option is available.
- You must have Edit permissions in the space to which you want to move tickets.
- You must have Delete permissions in space that has tickets you want to move.
- You cannot un-follow a ticket to which you are assigned. You first need to be un-assigned.
  When you are assigned a ticket, the follower star is red.
- You cannot un-follow a ticket to which you are assigned. You first need to be un-assigned.
- If you choose a lot of tickets to update, it might take some time to update them
  all.
- Requires an Owner role to view metrics.
- Requires a valid user role to access metrics.
- Only users with Owner role permissions can add and edit tags.
- Members can propose new tags to be approved by space owners.
- A 15Mb limit exists on files attached per email.
- Only owners are able to import a CSV file into Assembla.
- The CSV file is expected to be in Unicode format, specifically UTF-8 without BOM.
- 15Mb limit exists on files attached per email
- Requires setup of connected app in Assembla
- You can use your project prefix in API calls, so you do not need to pass the space-name
  parameter if using a ticket ID with a prefix.
- Allows relating tickets between spaces within the same portfolio
- Supports time report visibility by user
- Require two-factor authentication for even more secure logins.
- You can remove a connected account at any time by clicking Disable.
- Email notifications are turned off for all space events except for the Follower
  event.
- Uses cookies to track your devices.
- If Google 2FA is required for users in your portfolio, that authentication method
  will be preferred.
- If you use SSO to log into Assembla, you will not have a password to enable two-factor
  authentication.
- If backups don't work for you, make sure that your plan includes them. Not every
  plan has access to Amazon S3 Backups.
- Backups to Amazon S3 do not include data from Perforce depots.
- Users with Account Payer permissions can add or update payment details at account
  page
- Automatically scans commits for hardcoded passwords and access keys.
- AlphaScan enables users to maintain their source code’s security by finding and
  alerting managers and administrators of hardcoded passwords and access keys left
  in their source code.
- The Code Security Scanner enables users to maintain their source code’s security
  by finding and alerting managers and administrators of hardcoded passwords and access
  keys left in the source code.
- Weekly code scan requires enabling in the Security Scan tab
- Five free identified vulnerabilities per weekly scan for all users
- For inline frame to work, the URL must be an https URL. For http URLs, turn on the
  option, Open in a new window.
- All Assembla customers have access to five free identified vulnerabilities in each
  weekly scan.
- To receive unlimited vulnerability results, you must have an active subscription
  enabled with Kiuwan.
- Customers can create support tickets only via email and not from the Assembla UI.
- You can add an autoresponder email to your customers, which they receive when they
  create a support ticket.
- Allows non-Team members to submit tickets directly via email or Web
- You can restrict access to other tools
- The Remote path folder must exist and be empty when you deploy for the first time.
- The user account in the Login field must exist on the server and must have write
  permissions.
- Do not modify the content in the remote folder manually. The FTP tool must manage
  the content.
- If you change the remote path after deployment, you should manually copy the content
  from the remote folder listed as the previous Remote Path into the remote folder
  now listed as the Remote Path, or the deploy will fail.
- At this time, we do not have a check in place to prevent duplicate server configs,
  but trying to use duplicate servers breaks the deploy of both servers.
- Yes, you can have up to 50 FTP servers per space.
- Not all plans allow for access to the Webhooks Tool.
- If you subscribe to Code Commits and Git Push, it generates one push event and one
  or more commit events.
- Assembla’s API can control the SSH tool with the same capabilities as the web interface
- If you subscribe to Code Commits and Git Push, it generates one push event and one
  or more commit events because multiple commits can push at once.
- Assembla’s API can control the SSH tool with the same capabilities as the web interface.
- You can upload files only from your local machine. Importing from Dropbox, Google
  Drive, or other Cloud locations is not supported.
- Files can only be uploaded from local machine. Importing from Dropbox, Google Drive,
  or other Cloud locations is not supported.
- IDp is using SAML version 2.0.
- Audience URL in SAML response matches your portfolio home URL.
- SAML Response only contains a single Assertion (encrypted or not).
- SessionNotOnOrAfter attribute of the AttributeStatement is valid.
- Response contains a valid SubjectConfirmation.
- 'When OpenSSL returns the error: Error (20): Unable to Get Local User Certificate,
  the program was unable to verify the certificate’s issuer or the topmost certificate
  of a provided chain.'
- 'This can happen for a few reasons: The certificate chain or certificate wasn’t
  provided by the other side or was self-signed. The root certificate is not in the
  local database of trusted root certificates. The local database of trusted root
  certificates was not given or queried by OpenSSL.'
- Having problems uploading a file? It’s possible that your firewall is blocking Filestack
  API calls.
- Possible firewall blocking Filestack API calls.
- Contact your network department to update firewall settings.
- Spaces are set to private by default.
- Code review is integral to the development of high-quality software.
- Ensure the proper OAuth2 setup for accessing the API.
- Assembla offers 20+ tools to customize and accelerate your project.
- Integrate Assembla merge requests with your CI/CD tools via our built-in Jenkins
  integration (Git repos only) or Assembla API to show whether the changes pass or
  fail.
- Users can be invited to both portfolio and specific spaces.
- If you have any questions or need assistance, please email us at support@assembla.com.
- For performance reasons, this is currently limited to only one level of sharing.
- Only Managers can create, edit, or delete user groups.
- You can change permissions only for members. Owners retain their ALL permissions.
- You must be an Admin for that space to access security settings.
- Make sure you click Save Changes before leaving the page.
- Account deletion is irreversible
- Non-member access can be set as View, Edit, All, or None.
- SSH creates a secure connection from your computer to Assembla, making sure that
  only authorized persons can commit to your repository.
- Generate and upload SSH key to Assembla Profile
- To import a private Bitbucket repository that requires authentication credentials,
  use your Bitbucket username as normal. For the password, generate an App password
  by opening your Settings, navigating to the App passwords page, and clicking the
  Create app password button.
- You will need to create a personal access token in Github.
- Make sure you give your token access to your repos by checking the first scope box
  labeled 'repo'.
- Allows upvoting and downvoting of merge requests
- Inline comments can be added to specific lines of code
- Git LFS supports integration of large binary files into Git workflows.
- If you receive a permission denied error, it means that the server is rejecting
  your Git connection.
- Some users may received pre-receive hook declined errors when pushing a large number
  of tags.
- The number of tags surpasses the buffer size available for processing hooks.
- Some users may receive an error that their Git push was rejected.
- 'The Smart HTTP protocol in Git uses Transfer-Encoding: chunked in POST requests
  when it contains packed objects greater than 1 MB in size.'
- Some proxy servers do not support this transfer encoding by default.
- Pushing large amounts of data may require a higher http.postBuffer setting on your
  Git client.
- Check your Git outbound proxy configuration and unset it by setting client_max_body_size
  0 to allow users to push repositories of any size.
- Exporting your data may take up to a few hours depending on your Perforce depot
  size.
- Only one backup process may be in progress for each Perforce depot.
- Attention! When started (even if canceled), you cannot run another backup for this
  depot in the next 48 hours.
- Logoff timeout may be set only for the group, not individual users.
- Non-Perforce users are tracked and billed completely separately from regular Perforce
  users.
- Permissions should still be managed as usual.
- CSAs cannot delete Super Admin user accounts.
- CSAs cannot delete Essential groups.
- You need at least Manager access in the Assembla portfolio.
- You need administrative access to your Perforce instance.
- One Perforce depot may be connected to only one Assembla space.
- All of the access rights are managed solely on the Perforce Helix Core side
- Users present in a depot, who are not registered in the given Assembla Portfolio
  by email, will have their Assembla accounts created.
- Assembla portfolio users who don’t have access to Helix Core Depot are not able
  to see any content of the connected Helix Core depots.
- Make sure you've added a P4 tool to your Assembla Space.
- Should you have any questions, don't hesitate to reach out to us at support@assembla.com
- Uses basic authentication — enter your Assembla server and username.
- Make sure you are pointing to the right repository.
- If you see an error about some files that can't be created because they already
  exist, edit UNLINK =>1 to UNLINK =>0 in p42svn.pl.
- You cannot remove yourself from the space of which you are a Payer.
- Account deletion is irreversible.
- Do not enter the path to your workspace, only the name of your workspace.
- Assembla needs to know your public SSH key to make the secure connection.
- If you are logging in using SSO, 2FA, or MFA, then you need an API Secret key.
- Uses SSH for Git operations
- Assembla's Perforce implementation works only with stream depots.
- Use your Bitbucket username and an App password for authentication.
- You can control P4V variable from the server using the p4 property command.
- If P4V is set to never check for updates, users need to manually refresh P4V using
  the following steps.
- When you install Perforce, it asks you to select a path for your workspace. Make
  sure to use the same workspace directory while setting the variables.
- If you are having issues with a caret (^) in your URL, replace each caret with "%5E"
- Merge requests can be created by selecting a From and To branch.
- Comments can be added and marked as resolved.
- Requires username and password for SVN checkout
- Git LFS uses reference pointers within small text files to point to large files
  stored on Assembla servers.
- The general recommendation is to not allow Git repositories larger than 1GB.
- For dump files larger than 200 MB, ensure to use a direct download URL.
- In order to enable a secure connection, you must provide your public key to Assembla.
- Some objects like Contact may return nulls in deeply nested fields
- To access to this page, you must be an owner or a member with ALL permissions.
- Permissions apply to all users in the repository.
- To exempt certain users from the default protections settings you set, you must
  whitelist them by adding their usernames under Grant permissions to.
- Accounts used to run this feature must have space owner and portfolio manager permissions.
- When started (even if canceled), you cannot run another backup for this depot in
  the next 48 hours.
- Yes, it is possible to create a branch from any revision.
- Manage access permissions & logoff timeouts in your Perforce depot
- Non-Perforce users are tracked and billed separately from regular Perforce users.
- Contact Customer Support for restoration from a backup.
- You can quickly increase storage capacity by 25GB.
- Uses SSH for authentication
- SSH keys must be uploaded to Assembla account
- Before attempting this task, make sure your user account is an owner or has all
  permissions.
- Externals definitions use absolute URLs
- Working copies created by externals definitions are not connected to the primary
  working copy
- Assembla portfolio users who don’t have access to Helix Core Depot are not able
  to see any content of the connected Helix Core depots
- SVN integration requires a valid Assembla account
- Some features may vary based on user permissions
- Follow the instructions to find 'P4HOST' value and how to apply it.
- Assembla highly recommends customers to use SVN 1.12+ based clients for the best
  experience.
- If you are using an outdated, pre-1.12 client, you should consider upgrading otherwise
  SVN stability suffers significantly.
- P4V now should be viewable.
- By default, you cannot edit the log message property (svn:log) once it is committed.
- Your TestRail account must be connected to your Assembla account to enable the integration.
- API keys must be generated for authentication.
- If any perl package is not installed and you see errors while exporting your p4
  repo, you will have to install them.
- The Build Status page is hidden by default and must be enabled by an Assembla Admin.
- This is a paid add-on. The Trello integration can be enabled through the payer's
  account page or by contacting support@assembla.com.
- Every Space can have only one Slack channel associated with it.
- Each Space can have either a different Slack channel or the same Slack channel associated
  with it.
- Integration with JIRA allows creation and modification of JIRA issues from within
  Assembla.
- Users can search their JIRA issues using JQL or plain text.
- GitHub integration will only appear if it has been paid for and enabled from the
  payer's account page.
- Currently changing the encoding for individual depots is not supported on Assembla
  On-Demand Perforce implementation.
- This plugin works with GIT repositories only.
- If you are hosted in the Assembla EU zone, you will need to make sure that Assembla
  host reads https://eu-app.assembla.com
- 4.1 runs on OS X 10.11 and later.
- The source code and collaboration platform.
- If you are having issues with a caret (^) in your URL, replace each caret with '%5E'
- The adoption of sandboxing means that it is not possible to migrate all the user’s
  data from previous versions of Cornerstone.
- Cornerstone 3 can co-exist with previous versions. No preferences or configuration
  data are shared between the versions.
- Requires entering username and password for authentication.
- Selecting the SSH protocol from the Assembla Cloud Service tab will disable the
  username/password fields as they aren't needed
- If you check out a working copy from within the app, it should connect that working
  copy to the proper repository based on the REPO_NAME setting.
- To access to this page, you must be an owner or a member with ALL permissions
- If the Disable commit events box is checked, the stream is not updated on commits.
- Make sure the feed you are using is in NuGet.config.
- For restore tasks, use the service connection that has basic authentication configured.
- For push, make sure to use the NuGet push task.
- To exempt certain users from the default protections settings you set, you must
  whitelist them.
- Ensure npm login (or npm adduser) was executed successfully
- Ensure the .npmrc file contains authentication info for the feed you are publishing
  to
- Ensure always-auth is set to true for this registry
- Users can lock multiple files at once by selecting those files with the check box
  to the right of the screen.
- Stealing a lock allows one user to remove the lock from a file and then immediately
  lock it again in their own name.
- Breaking a lock allows a user to unlock a file that was not locked by them.
- MyGet adopts the SemVer2 spec, which is why you don't see those particular package
  versions using the default v2 endpoints.
- If you are having issues with a caret (^) in your URL, replace each caret with "%5E".
- Generate ssh keys using 'ssh-keygen -t rsa'
- Upload public key to the SSH Keys Settings page in Assembla profile
- Modify ssh config for subversion.assembla.com
- Use your PuTTY connection profile name from Step 4 in the URL of repository field
- At MyGet, we try to process 95% of uploads within 2 minutes, 98% within 5 minutes.
- During busy times of the day there may be an occasional delay of up to 30 minutes.
- The package is too large according to your subscription quota. Please verify before
  asking support, as you can often simply resolve it by upgrading your subscription
  plan or adjusting retention policies on your feed to free up some space.
- The total size of the packages that are pending upload (through the web UI) is too
  large.
- The package is simply too large (as in Gb's of size) and our servers reject it.
- Feed or subscription quota has been exceeded - your current subscription plan has
  reached its quota.
- An externals definition can’t point to relative paths, such as .../../skins/myskin.
  It can point only to absolute URLs
- The working copies created by the externals definition are not connected to the
  primary working copy, so to commit changes you’ve made in one or more external working
  copy, you must run `svn commit` explicitly on those working copies. In other words,
  committing on the primary working copy does not recurse into any external ones.
- Because externals definitions use absolute URLs, moving or copying a directory to
  which they are attached does not affect what gets checked out as an external working
  copy. But, the relative local target subdirectory does move with the renamed directory.
- If you need to re-parent your working copy (using `svn switch --relocate` ), then
  externals definitions are not also re-parented.
- SVN integration requires correct setup of credentials in Unreal Engine 4
- Requires separate login and authentication to access.
- Perform modification using svnadmin setlog method by referring to the repository's
  location on the filesystem.
- TestRail API must be enabled in account settings.
- LDAP settings can be configured during the installation process or from the Settings
  menu of the install console page.
- To configure your LDAP Server Settings, select Enable LDAP and then fill out the
  required information in the form.
- Because this feature is hidden by default, an Assembla Admin must enable the functionality
  through the feature flags.
- It's important to note that every Space can have only one Slack channel associated
  with it.
- Integration with JIRA allows for creation and modification of JIRA issues from within
  Assembla.
- GitHub integration requires authorization.
- Owner permissions are needed to add organization repos.
- With a valid annual subscription, all future updates to Cornerstone can be downloaded
  for no additional charge.
- Cornerstone is sandboxed, restricting access to certain configurations.
- Subversion 1.6 support was removed.
- Cornerstone 3 can co-exist with previous versions.
- Requires username and password for authentication
- 'SemVer2 package versions can be recognized by either one of the following properties
  (or any combination thereof): a numeric identifier in release label of the package
  version or a dependency version, or a metadata part in the package version.'
- Older v2 NuGet clients do not support these, and official NuGet client support was
  added in v4.3.0.
- SemVer2 package versions are hidden by default on NuGet's v2 OData endpoints.
- MyGet adopts that spec, which is why you don't see those particular package versions
  using the default v2 endpoints.
- Visual Studio's NuGet client is notoriously bad at remembering credentials, even
  when you tell it to remember credentials.
- Make sure to check no autocomplete features are overwriting credentials when editing
  a build source.
errors:
- '429 Too Many Requests: Exceeded rate limit of 240 requests per minute'
- '422 Unprocessable Entity: Data cannot be processed or validation error'
- '404 Not Found: Resource cannot be found'
- '403 Forbidden: Cannot authorize'
- '500 Internal Server Error: Unknown server error'
- '404 Not Found: Check endpoint URL or resource availability'
- '401 Unauthorized: Verify authentication details'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check your API permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '500 Internal Server Error: Retry the request after a short delay.'
- '401 Unauthorized: Check user permissions.'
- Make sure your FTP credentials are correct.
- Try setting 'Active' and 'Passive' modes, and then run a test deploy to see if it
  works.
- Decrease number of concurrent connections to 5 or 3.
- Set up path from absolute (/trunk) to a folder containing small amount of files
  (like /trunk/folder).
- FTP deploy fails with number of max retries exceeded
- '422 Unprocessable Entity: Data you sent to the server cannot be processed, or a
  validation error occurred.'
- '404 Not Found: Resource cannot be found.'
- '403 Forbidden Request: Cannot authorize.'
- '500 Internal Server Error: Server is experiencing an unknown error.'
- '429 Too Many Requests: Exceeded the rate limit.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Check OAuth token.'
- '404 Not Found: Check the endpoint URL'
- '401 Unauthorized: Verify authentication credentials'
- pre-receive hook declined
- Git push was rejected due to transfer encoding issues.
- Proxy server may be causing early disconnect.
- 'cannot submit from non-stream client: Ensure you are using a stream depot.'
- Submit aborted -- fix problems then use 'p4 submit -c 1543' ....
- Unable to connect to the server perforce.assembla.com:1666 as user [*]
- Experiencing very slow connection speed when trying to upload to a P4 depot on my
  space
- 'W150002: Use --force with svn add to resolve'
- 'Git push rejected due to Transfer-Encoding: chunked issue.'
- Proxy server may cause early disconnect.
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Repository does not exist'
- 'general communications error: Verify the system configuration and authentication
  information.'
- 'repository mismatch error: Verify the repository name.'
- 'authorization failure: Follow the prompts to set up Travis-CI.'
- A branch cannot be merged if Global Config user.name Value and Global Config user.email
  Value are not set.
- '403 Forbidden: Response status code does not indicate success.'
- 'svn: warning: W160035: Path ''/tree.jpg is already locked by user ''sally'' in
  filesystem ''/var/svn/repos/db'''
- '413 RequestEntityTooLarge: Usually, the response is enriched with more details
  about the cause of the exception.'
- 'Authentication failed: Check your credentials'
- 'Repository not found: Verify the repository URL'
- 'Commit failed: Ensure you have proper permissions'
- '401 Unauthorized: Check API key and permissions'
- 'general communications error: please verify that the system has the correct configuration
  and any related authentication information.'
- 'repository mismatch error: please verify the repository name.'
- 'authorization failure: please follow the prompts to set up Travis-CI.'
- '403 Forbidden: Check permissions for accessing repos.'
- '401 Unauthorized: Reauthorize GitHub integration.'
- '413 RequestEntityTooLarge: The package is too large according to your subscription
  quota'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://app.assembla.com
  auth:
    type: oauth2
source_metadata: null
