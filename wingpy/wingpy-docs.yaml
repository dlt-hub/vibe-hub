resources:
- name: device_health
  endpoint:
    path: /dna/intent/api/v1/device-health
    method: GET
    data_selector: response
- name: device_detail
  endpoint:
    path: /dna/intent/api/v1/device-detail
    method: GET
    data_selector: response
    params:
      identifier: uuid
- name: device_health
  endpoint:
    path: /dna/intent/api/v1/device-health
    method: GET
    data_selector: response
    params: {}
- name: device_detail
  endpoint:
    path: /dna/intent/api/v1/device-detail
    method: GET
    data_selector: response
    params: {}
- name: device_health
  endpoint:
    path: /dna/intent/api/v1/device-health
    method: GET
    data_selector: response
    params: {}
- name: device_detail
  endpoint:
    path: /dna/intent/api/v1/device-detail
    method: GET
    data_selector: response
    params: {}
- name: tenants
  endpoint:
    path: /api/class/fvTenant.json
    method: GET
    data_selector: imdata
- name: create_tenant
  endpoint:
    path: /api/mo/uni/tn-TestTenant.json
    method: POST
    data_selector: response
- name: update_tenant
  endpoint:
    path: /api/mo/uni/tn-TestTenant.json
    method: PATCH
    data_selector: response
- name: delete_tenant
  endpoint:
    path: /api/mo/uni/tn-TestTenant.json
    method: DELETE
    data_selector: response
- name: single_tenant
  endpoint:
    path: /api/mo/uni/tn-TestTenant.json
    method: GET
    data_selector: imdata
- name: epgs_for_tenant
  endpoint:
    path: /api/mo/uni/tn-TestTenant/ap-App.json
    method: GET
    data_selector: imdata
- name: network_device
  endpoint:
    path: /dna/intent/api/v1/network-device/
    method: GET
    data_selector: response
- name: global_credential
  endpoint:
    path: /dna/intent/api/v2/global-credential
    method: POST
    data_selector: response
- name: task_status
  endpoint:
    path: /dna/intent/api/v1/tasks/{task_id}
    method: GET
    data_selector: response
- name: devices
  endpoint:
    path: /api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords
    method: GET
    data_selector: devices
- name: host
  endpoint:
    path: /api/fmc_config/v1/domain/{domainUUID}/object/hosts
    method: POST
    data_selector: host
- name: update_host
  endpoint:
    path: /api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}
    method: PUT
    data_selector: update_host
- name: get_host
  endpoint:
    path: /api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}
    method: GET
    data_selector: host
- name: delete_host
  endpoint:
    path: /api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}
    method: DELETE
    data_selector: delete_host
- name: fabrics
  endpoint:
    path: /fabrics
    method: POST
    data_selector: fabrics
- name: fabric_by_id
  endpoint:
    path: /fabrics/{fabricId}
    method: GET
    data_selector: fabric
- name: update_fabric
  endpoint:
    path: /fabrics/{fabricId}
    method: PUT
    data_selector: description
- name: bulk_create_vrfs
  endpoint:
    path: /fabrics/{fabricId}/vrfs
    method: POST
    data_selector: status_code
- name: get_all_vrfs
  endpoint:
    path: /fabrics/{fabricId}/vrfs
    method: GET
    data_selector: vrfs
- name: delete_fabric
  endpoint:
    path: /fabrics/{fabricId}
    method: DELETE
    data_selector: status_code
- name: endpoint
  endpoint:
    path: /api/v1/endpoint
    method: GET
    data_selector: records
- name: get_organization_details
  endpoint:
    path: /organizations/{organizationId}
    method: GET
- name: update_organization
  endpoint:
    path: /organizations/{organizationId}
    method: PUT
- name: get_all_networks
  endpoint:
    path: /organizations/{organizationId}/networks
    method: GET
- name: create_network
  endpoint:
    path: /organizations/{organizationId}/networks
    method: POST
- name: delete_network
  endpoint:
    path: /networks/{networkId}
    method: DELETE
- name: fabrics
  endpoint:
    path: /api/v1/manage/fabrics
    method: GET
- name: specific_fabric
  endpoint:
    path: /api/v1/manage/fabrics/{fabricName}
    method: GET
- name: add_switch_credentials
  endpoint:
    path: /api/v1/manage/credentials/switches
    method: POST
- name: replace_deployment_freeze_status
  endpoint:
    path: /api/v1/manage/fabrics/{fabricName}/deploymentFreeze
    method: PUT
- name: update_tenant
  endpoint:
    path: /mso/api/v1/tenants/{tenantId}
    method: PATCH
- name: remove_dashboard
  endpoint:
    path: /dashboards/{name}
    method: DELETE
- name: fvTenant
  endpoint:
    path: /api/class/fvTenant.json
    method: GET
    data_selector: items
- name: network_device
  endpoint:
    path: /dna/intent/api/v1/network-device
    method: GET
- name: get_all
  endpoint:
    path: /get_all
    method: GET
- name: get_all_statistics
  endpoint:
    path: /get_all_statistics
    method: GET
    params:
      page_size: 10000
- name: get_all_configuration
  endpoint:
    path: /get_all_configuration
    method: GET
    params:
      page_size: 50
- name: configuration
  endpoint:
    path: /get_all_configuration
    method: GET
    data_selector: data
    params:
      offset: 1
      limit: 50
- name: get_all
  endpoint:
    path: /api/fmc_config/v1/domain/{domainUUID}/object/hosts
    method: GET
    data_selector: items
- name: CiscoMerakiDashboard
  endpoint:
    path: /api/v1/endpoint
    method: GET
    data_selector: records
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: systemResources_summary
  endpoint:
    path: /systemResources/summary
    method: GET
- name: RequestLogEntry
  endpoint:
    path: /scheduling/RequestLogEntry
    method: GET
- name: RequestThrottler
  endpoint:
    path: /scheduling/RequestThrottler
    method: GET
- name: TaskRunner
  endpoint:
    path: /scheduling/TaskRunner
    method: GET
- name: logger
  endpoint:
    path: /wingpy.logger
    method: GET
- name: log_exception
  endpoint:
    path: /wingpy.logger.log_exception
    method: GET
- name: log_to_file
  endpoint:
    path: /wingpy.logger.log_to_file
    method: GET
- name: set_logging_level
  endpoint:
    path: /wingpy.logger.set_logging_level
    method: GET
notes:
- The default logging level is WARNING.
- Authentication happens when you first make a request to the API.
- Be careful not to log sensitive information in production environments.
- Automatically handles session management for you. Including token refresh and session
  persistence.
- Comprehensive error handling with clear exceptions for common issues.
- Built-in support for rate limiting and retry logic. No more HTTP 429 errors!
- Simplified authentication process with support for multiple methods.
- Automatically handles pagination for large datasets.
- The client raises UnsupportedMethodError for unsupported HTTP methods (e.g., PATCH).
- Authentication and token refresh are handled automatically, but you can call catalyst.authenticate()
  to force re-authentication.
- Instantiating without a token or with an invalid token raises a ValueError or returns
  a 401 response.
- ISE supports both OpenAPI and ERS endpoints, bulk operations, and advanced filtering.
- The client automatically handles paging for large datasets.
- Meraki Dashboard has a few endpoints that are not suited for concurrency.
- Authentication will automatically be carried out just-in-time.
- Username and password must be provided either as argument or environment variable.
- Catalyst Center base_url must be provided either as argument or environment variable.
- Base URL must end with /dataservice
- FMC base_url, username and password must be provided either as arguments or environment
  variables
- Uses OAuth2 authentication
- Abstract methods for API requests (GET, POST, PUT, DELETE, PATCH) are defined but
  not implemented.
- Most API interaction can be optimized by utilizing concurrency while also adapting
  to rate limits.
- Default severity level for logging exceptions is 'ERROR'.
errors:
- 'AuthenticationFailure: Raised if authentication fails (e.g., wrong credentials).'
- 'InvalidEndpointError: Raised if you use an unsupported or invalid endpoint.'
- 'ValueError: Raised for invalid API endpoint paths or if required arguments/environment
  variables are missing.'
- 'UnsupportedMethodError: Raised if you call a method not supported by a client.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'InvalidEndpointError: Raised for unsupported operations'
- 'UnsupportedMethodError: for unsupported HTTP methods (e.g., PATCH)'
- 'ValueError: raised when instantiating without a token or with an invalid token'
- '401 response: returned for invalid token'
- '503 Service Unavailable: Try again later.'
- 'ValueError: When base_url, username or password is missing'
- 'ValueError: When base_url does not end with /dataservice'
- 'httpx.TimeoutException: Raise if HTTP response takes longer than the specified
  timeout'
- 'httpx.HTTPStatusError: Raise if the number of failed HTTP attempts exceeds retries'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'AuthenticationFailure: Raised when API authentication fails.'
- 'InvalidEndpointError: Raised when the specified API endpoint path is not valid
  for use in a URL.'
- 'InvalidResponseError: Raised when the API returned an invalid or unexpected HTTP
  response.'
- 'MissingPathParameterError: Raised when a required path parameter is missing for
  URL construction.'
- 'URLNetlocError: Raised when the provided base URL does not include a valid network
  location.'
- 'URLPathError: Raised when the provided base URL ends with a forward slash (/).'
- 'URLSchemaError: Raised when the provided base URL does not include a valid schema
  (http or https).'
- 'UnexpectedPayloadError: Raised when the API returned payload with unexpected data
  structure.'
- 'UnsupportedMethodError: Raised when the an unsupported HTTP method is used on a
  client instance.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://httpbin.org
  headers:
    Authorization: Bearer my_token
source_metadata: null
