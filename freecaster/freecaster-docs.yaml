resources:
- name: s3upload
  endpoint:
    path: /s3upload
    method: POST
    data_selector: data
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: data
- name: s3upload
  endpoint:
    path: /s3upload
    method: POST
    data_selector: data
- name: s3upload_complete
  endpoint:
    path: /s3upload/complete
    method: POST
    data_selector: data
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: access_token
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params:
      filter[published]: 'true'
      page[number]: 0
      page[size]: 15
      sort: -published_at
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params: {}
- name: create_live
  endpoint:
    path: /api/lives
    method: POST
    data_selector: data
    params: {}
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params: {}
- name: create_clip
  endpoint:
    path: /api/videos/{videoUuid}/clip
    method: POST
    data_selector: data
    params: {}
- name: list_chapters
  endpoint:
    path: /api/videos/{videoUuid}/chapters
    method: GET
    data_selector: data
    params:
      sort: -published_at
      page[number]: 0
      page[size]: 15
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params: {}
- name: list_subtitles
  endpoint:
    path: /api/videos/{videoUuid}/subtitles
    method: GET
    data_selector: data
    params: {}
- name: transcripts
  endpoint:
    path: /api/videos/{videoUuid}/transcripts
    method: GET
    data_selector: data
    params:
      filter[locale]: ''
      page[number]: 0
      page[size]: 15
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: data
    params:
      sort: -published_at
      page[number]: 0
      page[size]: 15
- name: Delete Client Roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params:
      clientUuid: string <uuid>
- name: List Player Configs
  endpoint:
    path: /api/player_configs
    method: GET
    data_selector: data
- name: List Player Displays
  endpoint:
    path: /api/player_displays
    method: GET
    data_selector: data
- name: player_display_fields
  endpoint:
    path: /api/player_displays/{playerDisplayUuid}/fields
    method: GET
- name: player_skins
  endpoint:
    path: /api/player_skins
    method: GET
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
- name: s3upload
  endpoint:
    path: /s3upload
    method: POST
    data_selector: data
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params:
      clientUuid: string <uuid>
- name: list_player_watermarks
  endpoint:
    path: /api/player_watermarks
    method: GET
    data_selector: data
- name: list_jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: data
- name: list_webhooks
  endpoint:
    path: /api/webhooks
    method: GET
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params:
      clientUuid: ce3a9d5f-08f8-4a1a-ada8-cb96dd119fb5
- name: clipping_completed_webhook
  endpoint:
    path: /webhook/clipping.completed
    method: POST
    data_selector: data
    params: {}
- name: s3upload
  endpoint:
    path: /s3upload
    method: POST
    data_selector: data
    params:
      multipart: false
- name: s3upload_complete
  endpoint:
    path: /s3upload/complete
    method: POST
    data_selector: data
- name: clipping_completed
  endpoint:
    path: /clipping/completed
    method: POST
    data_selector: data
    params: {}
- name: clipping_failed
  endpoint:
    path: /clipping/failed
    method: POST
    data_selector: data
    params: {}
- name: clipping_started
  endpoint:
    path: /clipping/started
    method: POST
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params:
      filter[published]: true
      page[number]: 0
- name: poster
  endpoint:
    path: /poster
    method: POST
    data_selector: poster
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: content
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
- name: create_live
  endpoint:
    path: /api/lives
    method: POST
    data_selector: data
- name: tenant
  endpoint:
    path: /tenant
    method: GET
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
- name: list_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params: {}
- name: create_clip
  endpoint:
    path: /api/videos/{videoUuid}/clip
    method: POST
    data_selector: data
    params: {}
- name: list_chapters
  endpoint:
    path: /api/videos/{videoUuid}/chapters
    method: GET
    data_selector: data
    params:
      sort: -published_at
      page[number]: 0
      page[size]: 15
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: clients
  endpoint:
    path: /api/clients
    method: GET
    data_selector: data
- name: client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params: {}
- name: list_subtitles
  endpoint:
    path: /api/videos/{videoUuid}/subtitles
    method: GET
    data_selector: data
    params:
      filter[locale]: string
      page[number]: integer
      page[size]: integer
- name: client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params:
      clientUuid: string <uuid>
- name: player
  endpoint:
    path: /embed/VIDEO_ID.html
    method: GET
    data_selector: playerInstance
    params: {}
- name: transcripts
  endpoint:
    path: /api/videos/{videoUuid}/transcripts
    method: GET
    data_selector: data
    params:
      filter[locale]: ''
      page[number]: 0
      page[size]: 15
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: data
    params:
      sort: -published_at
      page[number]: 0
      page[size]: 15
- name: delete_client_roles
  endpoint:
    path: /clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params:
      clientUuid: string <uuid>
- name: list_player_configs
  endpoint:
    path: /player_configs
    method: GET
    data_selector: data
    params: {}
- name: list_player_displays
  endpoint:
    path: /player_displays
    method: GET
    data_selector: data
    params: {}
- name: player_display
  endpoint:
    path: /player_displays/{playerDisplayUuid}/fields
    method: GET
    data_selector: data
- name: player_skin
  endpoint:
    path: /player_skins
    method: GET
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params: {}
- name: list_player_watermarks
  endpoint:
    path: /api/player_watermarks
    method: GET
    data_selector: data
    params: {}
- name: list_jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: data
    params:
      sort: -created_at
      page[number]: 0
      page[size]: 15
- name: list_webhooks
  endpoint:
    path: /api/webhooks
    method: GET
    data_selector: data
    params: {}
- name: clipping_event
  endpoint:
    path: /clipping/events
    method: POST
    data_selector: event_name
    params: {}
- name: poster
  endpoint:
    path: /poster.created
    method: POST
    data_selector: poster
    params: {}
- name: content
  endpoint:
    path: /content.updated
    method: POST
    data_selector: content
    params: {}
- name: tenant
  endpoint:
    path: /tenant
    method: GET
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
- name: list_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: clients
  endpoint:
    path: /api/clients
    method: GET
    data_selector: data
- name: client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
- name: delete_client_roles
  endpoint:
    path: /api/clients/{clientUuid}/relationships/roles
    method: DELETE
    data_selector: data
    params:
      clientUuid: string <uuid>
- name: player_instance
  endpoint:
    path: /embed/VIDEO_ID.html
    method: GET
    data_selector: player
    params: {}
- name: player_properties
  endpoint:
    path: /api/player/properties
    method: GET
    data_selector: properties
- name: player_methods
  endpoint:
    path: /api/player/methods
    method: GET
    data_selector: methods
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: channels
  endpoint:
    path: /api/v1/channels
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /api/v1/videos
    method: GET
    data_selector: records
notes:
- Rate limiting is enforced at 120 requests per minute by default to prevent abuse
- For files larger than 5GB, use multipart upload
- Rate limiting is enforced at 120 requests per minute by default to prevent abuse.
- Use multipart uploads for files larger than 100MB
- Multipart uploads are supported for files larger than 5GB.
- Signed URLs expire after 30 minutes.
- The player does not track statistics by default. To enable analytics, set the `stats`
  attribute to `true`.
- Obtaining user consent is mandatory under GDPR.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- User must have the cockpit role to access the platform.
- The player does not track statistics by default.
- Uses cookies and local storage for necessary functionality and analytics
- Supports single sign-on (SSO) with SAML 2.0, OpenID Connect, OAuth 2.0
errors:
- '401 Unauthorized: Unauthenticated'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401: Unauthenticated'
- 401 Unauthenticated
- '401 Unauthenticated: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Ensure token is valid.'
- '404 Not Found: Check the endpoint URL.'
- '400 Bad Request: Verify request payload.'
- 'Invalid Event Name: Ensure event_name matches one of the supported types'
- 'Invalid URL: URL must be accessible and return 2xx status codes'
- 'Webhook Delivery Failures: Platform will retry failed deliveries with exponential
  backoff'
- 'Timeout Issues: Webhook endpoints should respond within 30 seconds'
- '401 Unauthenticated: Recheck authentication credentials'
- '401 Unauthenticated: Check your access token.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
auth_info:
  mentioned_objects:
  - SAML 2.0
  - OpenID Connect
  - OAuth 2.0
  - Users
  - Cockpit
  - Live Admin
  - Live Editor
  - Live Viewer
  - VOD Admin
  - VOD Editor
  - VOD Viewer
  - Clipping
  - Stats Viewer
  - access-token
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.freecaster.com
  auth:
    type: access-token
source_metadata: null
