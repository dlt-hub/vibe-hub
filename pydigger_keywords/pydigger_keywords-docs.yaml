resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: gifs
  endpoint:
    path: /gifs
    method: GET
    data_selector: data
    params: {}
- name: trending_gifs
  endpoint:
    path: /gifs/trending
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /keyword/user
    method: GET
- name: command
  endpoint:
    path: /keyword/commands
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /v1/devices
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: instagram-feed
  endpoint:
    path: /v1/users/self/media/recent
    method: GET
    data_selector: data
    params: {}
- name: instagram-user-photos
  endpoint:
    path: /v1/users/self/media/recent
    method: GET
    data_selector: data
    params: {}
- name: instagram-stories
  endpoint:
    path: /v1/users/self/media/recent
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /v1/users/self
    method: GET
    data_selector: data
    params: {}
- name: media
  endpoint:
    path: /v1/users/self/media/recent
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_media
  endpoint:
    path: /me/media
    method: GET
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /keyword/contact
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: pets
  endpoint:
    path: /v1/pets
    method: GET
    data_selector: pets
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: orders
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/v3/assets
    method: GET
    data_selector: assets
- name: vulnerabilities
  endpoint:
    path: /api/v3/vulnerabilities
    method: GET
    data_selector: vulnerabilities
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_media
  endpoint:
    path: /me/media
    method: GET
    data_selector: data
    params:
      fields: id,caption,media_type,media_url,thumbnail_url,timestamp
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params:
      fields: id,username,account_type,media_count
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: exchange_rates
  endpoint:
    path: /v1/exchange-rates
    method: GET
- name: currencies
  endpoint:
    path: /v1/currencies
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: currency_rates
  endpoint:
    path: /keyword/get currency rates api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_media
  endpoint:
    path: /v1/users/self/media/recent
    method: GET
    data_selector: data
- name: user_profile
  endpoint:
    path: /v1/users/self
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pages
  endpoint:
    path: /v1/pages
    method: GET
    data_selector: results
- name: databases
  endpoint:
    path: /v1/databases
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /v12.0/{{phone_number_id}}/messages
    method: POST
    data_selector: messages
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: authentication
  endpoint:
    path: /visier/authentication
    method: POST
    data_selector: token
- name: data
  endpoint:
    path: /visier/data
    method: GET
    data_selector: records
- name: data_export
  endpoint:
    path: /api/v1/data/export
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: user_data
  endpoint:
    path: /v1/user/data
    method: GET
    data_selector: users
    params:
      incremental: last_updated
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: data
    params: {}
- name: anime
  endpoint:
    path: /api/anime
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ip_address
  endpoint:
    path: /?format=json
    method: GET
    data_selector: ip
- name: budgets
  endpoint:
    path: /budgets
    method: GET
    data_selector: data.budgets
- name: transactions
  endpoint:
    path: /budgets/{budget_id}/transactions
    method: GET
    data_selector: data.transactions
- name: expense
  endpoint:
    path: /services/data/vXX.X/sobjects/Expense
    method: GET
    data_selector: records
    params: {}
- name: data_point
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /vX/customers/{customer_id}/campaigns
    method: GET
    data_selector: results
- name: ad_group
  endpoint:
    path: /vX/customers/{customer_id}/adGroups
    method: GET
    data_selector: results
- name: song_lyrics
  endpoint:
    path: /v1/lyrics
    method: GET
    data_selector: response.lyrics
    params: {}
- name: search
  endpoint:
    path: /v1/search
    method: GET
    data_selector: response.hits
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: post
  endpoint:
    path: /api/v1/posts
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /v1/devices
    method: GET
    data_selector: items
- name: meetings
  endpoint:
    path: /v1/meetings
    method: GET
    data_selector: items
- name: market_data
  endpoint:
    path: /api/v2/market_data
    method: GET
- name: user_info
  endpoint:
    path: /api/v2/user_info
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /orders/v0/orders
    method: GET
    data_selector: payload.orders
    params: {}
- name: products
  endpoint:
    path: /catalog/v0/items
    method: GET
    data_selector: payload.items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data
  endpoint:
    path: /services/data/vXX.X/data
    method: GET
    data_selector: records
- name: earnings call transcripts
  endpoint:
    path: /keyword/earnings call transcripts
    method: GET
    data_selector: records
    params: {}
- name: earnings call transcript api
  endpoint:
    path: /keyword/earnings call transcript api
    method: GET
    data_selector: records
    params: {}
- name: courses
  endpoint:
    path: /courses
    method: GET
    data_selector: results
    params: {}
- name: instructors
  endpoint:
    path: /instructors
    method: GET
    data_selector: results
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: order
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: financial_statements
  endpoint:
    path: /data/v1/financial_statements
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: insider_trading_data
  endpoint:
    path: /data/v1/insider_trading
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_data
  endpoint:
    path: /v1/user/data
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /v1/payment
    method: POST
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: balance
  endpoint:
    path: /0/private/Balance
    method: POST
    data_selector: result
    params: {}
- name: trade_history
  endpoint:
    path: /0/private/TradesHistory
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: purple_air_data
  endpoint:
    path: /v1/data
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: spanish_bible_search
  endpoint:
    path: /services/data/vXX.X/sobjects/SpanishBibleSearch
    method: GET
    data_selector: records
    params: {}
- name: english_bible_search
  endpoint:
    path: /services/data/vXX.X/sobjects/EnglishBibleSearch
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: fortnite shop
  endpoint:
    path: /fortnite/shop
    method: GET
- name: fortnite api
  endpoint:
    path: /fortnite/api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: /v1.0/devices
    method: GET
    data_selector: body
- name: status
  endpoint:
    path: /v1.0/status
    method: GET
    data_selector: body
- name: articles
  endpoint:
    path: /v1/articles
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /api/v3/account
    method: GET
    data_selector: account
    params: {}
- name: order
  endpoint:
    path: /api/v3/order
    method: POST
    data_selector: order
    params: {}
- name: resource_name
  endpoint:
    path: /services/data/vXX.X/sobjects/Resource
    method: GET
    data_selector: records
    params: {}
- name: attendee
  endpoint:
    path: /calendars/{calendarId}/events
    method: GET
    data_selector: items
- name: conferences
  endpoint:
    path: /calendars/{calendarId}/events
    method: GET
    data_selector: items
- name: integration
  endpoint:
    path: /api/v1/integration
    method: GET
    data_selector: records
- name: odds
  endpoint:
    path: /v1/odds
    method: GET
    data_selector: odds
    params: {}
- name: games
  endpoint:
    path: /v1/games
    method: GET
    data_selector: games
    params: {}
- name: market
  endpoint:
    path: /api/v1/market
    method: GET
    data_selector: data
- name: ticker
  endpoint:
    path: /api/v1/ticker
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sensor_data
  endpoint:
    path: /v1/sensors
    method: GET
    data_selector: data
- name: vulnerability
  endpoint:
    path: /vuln/data-feeds
    method: GET
    data_selector: vulnerabilities
- name: exchange_rates
  endpoint:
    path: /api/v1/exchange_rates
    method: GET
    data_selector: rates
- name: transaction_history
  endpoint:
    path: /api/v1/transaction_history
    method: GET
    data_selector: transactions
- name: subscribers
  endpoint:
    path: /services/data/vXX.X/sobjects/Subscribers
    method: GET
    data_selector: records
- name: data reader
  endpoint:
    path: /services/data/vXX.X/sobjects/DataReader
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /v3/company/{{company_id}}/customer
    method: GET
    data_selector: Customer
    params:
      incremental: lastUpdated
- name: invoice
  endpoint:
    path: /v3/company/{{company_id}}/invoice
    method: GET
    data_selector: Invoice
    params: {}
- name: email validation
  endpoint:
    path: /services/data/vXX.X/sobjects/EmailValidation
    method: GET
    data_selector: records
    params: {}
- name: titles
  endpoint:
    path: /keyword/
    method: GET
    data_selector: titles
    params: {}
- name: boards
  endpoint:
    path: /v1/boards/
    method: GET
    data_selector: data
    params: {}
- name: pins
  endpoint:
    path: /v1/pins/
    method: GET
    data_selector: data
    params: {}
- name: data intake
  endpoint:
    path: /data/intake
    method: POST
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /data/analytics
    method: GET
    data_selector: records
    params: {}
- name: soxai_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SoxaiData
    method: GET
    data_selector: records
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: vessels
  endpoint:
    path: /vessels
    method: GET
- name: tubes
  endpoint:
    path: /tubes
    method: GET
- name: your_resource_name
  endpoint:
    path: /your/endpoint/path
    method: GET
    data_selector: records
    params: {}
- name: stocks
  endpoint:
    path: /tiingo/daily
    method: GET
    data_selector: data
- name: prompts
  endpoint:
    path: /v1/prompts
    method: GET
    data_selector: data
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: data
    params: {}
- name: example_resource
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: value
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: value
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: items
- name: queries
  endpoint:
    path: /queries
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: customers
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: markets
  endpoint:
    path: /markets
    method: GET
    data_selector: markets
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sms
  endpoint:
    path: /api/v1/send
    method: POST
    data_selector: data
    params:
      incremental: timestamp
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: rarbg-api
  endpoint:
    path: /api/v1/torrents
    method: GET
    data_selector: data
    params: {}
- name: rarbg-cli
  endpoint:
    path: /api/v1/cli
    method: POST
    data_selector: result
    params: {}
- name: red_list
  endpoint:
    path: /keyword/red list
    method: GET
- name: iucn
  endpoint:
    path: /keyword/iucn
    method: GET
- name: top_headlines
  endpoint:
    path: /v2/top-headlines
    method: GET
    data_selector: articles
- name: everything
  endpoint:
    path: /v2/everything
    method: GET
    data_selector: articles
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stock-data
  endpoint:
    path: /v1/finance/stock
    method: GET
    data_selector: data
- name: bank_of_ghana_exchange_rates
  endpoint:
    path: /keyword/bank_of_ghana_exchange_rates
    method: GET
    data_selector: records
- name: bank_of_ghana
  endpoint:
    path: /keyword/bank_of_ghana
    method: GET
    data_selector: records
- name: digital_thread
  endpoint:
    path: /keyword/digital_thread
    method: GET
    data_selector: records
- name: machine_tool
  endpoint:
    path: /keyword/machine_tool
    method: GET
    data_selector: records
- name: jobs
  endpoint:
    path: /api/v1/jobs
    method: GET
    data_selector: data
    params:
      updated_after: last_updated
- name: items
  endpoint:
    path: /api/v1/items
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: customers
- name: ads
  endpoint:
    path: /v10.0/act_{ad_account_id}/ads
    method: GET
    data_selector: data
    params: {}
- name: ad_insights
  endpoint:
    path: /v10.0/act_{ad_account_id}/insights
    method: GET
    data_selector: data
    params: {}
- name: real_estate
  endpoint:
    path: /services/data/v1/properties
    method: GET
    data_selector: properties
    params: {}
- name: flight
  endpoint:
    path: /api/flight
    method: GET
    data_selector: flights
    params: {}
- name: airport
  endpoint:
    path: /api/airport
    method: GET
    data_selector: airports
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: verses
  endpoint:
    path: /v3/passage/text
    method: GET
    data_selector: data
- name: references
  endpoint:
    path: /v3/passage/references
    method: GET
    data_selector: data
- name: myfile
  endpoint:
    path: /services/data/vXX.X/sobjects/MyFile
    method: GET
    data_selector: records
- name: google drive
  endpoint:
    path: /services/data/vXX.X/sobjects/GoogleDrive
    method: GET
    data_selector: records
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: bangla_tts
  endpoint:
    path: /bangla_tts
    method: POST
    data_selector: output
    params: {}
- name: radiojavan_api
  endpoint:
    path: /api/v1
    method: GET
    data_selector: data
    params: {}
- name: characters
  endpoint:
    path: /api/v1/characters
    method: GET
    data_selector: data
    params: {}
- name: episodes
  endpoint:
    path: /api/v1/episodes
    method: GET
    data_selector: data
    params: {}
- name: students
  endpoint:
    path: /api/v1/students
    method: GET
    data_selector: data
- name: teachers
  endpoint:
    path: /api/v1/teachers
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /method/users.get
    method: GET
    data_selector: response
- name: friends
  endpoint:
    path: /method/friends.get
    method: GET
    data_selector: response
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      part: snippet,contentDetails,statistics
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: items
    params:
      part: snippet,contentDetails
- name: networks
  endpoint:
    path: /networks
    method: GET
    data_selector: data
- name: facilities
  endpoint:
    path: /facilities
    method: GET
    data_selector: data
- name: starred
  endpoint:
    path: /keyword/starred
    method: GET
- name: github starred
  endpoint:
    path: /keyword/github starred
    method: GET
- name: helloword
  endpoint:
    path: /keyword/helloword
    method: GET
- name: mathmodule
  endpoint:
    path: /keyword/mathmodule
    method: GET
- name: mylibrary
  endpoint:
    path: /keyword/mylibrary
    method: GET
- name: pythonlibrary
  endpoint:
    path: /keyword/pythonlibrary
    method: GET
- name: ehcarts
  endpoint:
    path: /keyword/ehcarts
    method: GET
- name: bibpy
  endpoint:
    path: /keyword/bibpy
    method: GET
- name: pager
  endpoint:
    path: /keyword/pager
    method: GET
- name: catwallpaper
  endpoint:
    path: /keyword/catwallpaper
    method: GET
- name: phishing_report
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
- name: malicious_url
  endpoint:
    path: /malicious-urls
    method: GET
    data_selector: urls
- name: ndc2_data
  endpoint:
    path: /keyword/ndc2_data
    method: GET
    data_selector: records
- name: propensity_data
  endpoint:
    path: /keyword/propensity_data
    method: GET
    data_selector: records
- name: prescriptions_data
  endpoint:
    path: /keyword/prescriptions_data
    method: GET
    data_selector: records
- name: messari
  endpoint:
    path: /keyword/messari
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: DescribeDomainList
  endpoint:
    path: /DescribeDomainList
    method: GET
    data_selector: domains
    params:
      Offset: 0
      Limit: 20
- name: CreateDomain
  endpoint:
    path: /CreateDomain
    method: POST
    data_selector: domain
    params: {}
- name: DeleteDomain
  endpoint:
    path: /DeleteDomain
    method: DELETE
    data_selector: result
    params: {}
- name: DescribeRecordList
  endpoint:
    path: /DescribeRecordList
    method: GET
    data_selector: records
    params: {}
- name: DescribeRecordLineList
  endpoint:
    path: /DescribeRecordLineList
    method: GET
    data_selector: recordLines
    params: {}
- name: DescribeDomainAnalytics
  endpoint:
    path: /DescribeDomainAnalytics
    method: GET
    data_selector: analytics
    params: {}
- name: DescribeSubdomainAnalytics
  endpoint:
    path: /DescribeSubdomainAnalytics
    method: GET
    data_selector: subdomainAnalytics
    params: {}
- name: abstract_gui
  endpoint:
    path: /packages/98/09/d82be67ce63380f36000b80668a8d39efbb276314445717ac0b446d1d3e4/abstract_gui-0.1.63.88.tar.gz
    method: GET
- name: audit
  endpoint:
    path: /audit
    method: GET
    data_selector: results
- name: reentrancy
  endpoint:
    path: /reentrancy
    method: GET
    data_selector: results
- name: netkiller_chart
  endpoint:
    path: /packages/netkiller_chart-0.3.1.tar.gz
    method: GET
    data_selector: downloads
    params: {}
- name: gantt
  endpoint:
    path: /path/to/gantt
    method: GET
    data_selector: records
- name: mindmap
  endpoint:
    path: /path/to/mindmap
    method: GET
    data_selector: records
- name: evaluations
  endpoint:
    path: /eval-factory
    method: GET
    data_selector: available_tasks
- name: evaluations
  endpoint:
    path: /evaluations
    method: GET
    data_selector: results
- name: transcription
  endpoint:
    path: /asr
    method: GET
    data_selector: results
    params: {}
- name: Dataset
  endpoint:
    path: /Dataset
    method: POST
    data_selector: results
- name: evaluation_tasks
  endpoint:
    path: /eval-factory/ls
    method: GET
    data_selector: tasks
- name: judge
  endpoint:
    path: /v1
    method: GET
    data_selector: records
    params:
      url: http://localhost:8001/v1
- name: model_endpoint
  endpoint:
    path: https://integrate.api.nvidia.com/v1/chat/completions
    method: GET
- name: evaluation_tasks
  endpoint:
    path: /eval-factory/ls
    method: GET
    data_selector: tasks
- name: document
  endpoint:
    path: /extract_content
    method: POST
    data_selector: extractions
- name: extractions
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: document
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: evaluation
  endpoint:
    path: /eval-factory/run_eval
    method: POST
    data_selector: results
    params: {}
- name: evaluations
  endpoint:
    path: /eval-factory/run_eval
    method: POST
    data_selector: results
    params: {}
- name: setup
  endpoint:
    path: /setup.py
    method: GET
    data_selector: url
    params: {}
- name: pyproject
  endpoint:
    path: /pyproject.toml
    method: GET
    data_selector: project_urls.repository
    params: {}
- name: scrape
  endpoint:
    path: /scrape
    method: POST
    data_selector: results
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: results
- name: scheduling_algorithm
  endpoint:
    path: /run_modular_scheduling_algorithm
    method: POST
    data_selector: result
    params: {}
- name: off_days_distribution
  endpoint:
    path: off_days_distribution_YYYY_MM_timestamp.txt
- name: calendar_information
  endpoint:
    path: month_calendar_info_YYYY_MM_timestamp.txt
- name: scheduler
  endpoint:
    path: /modular_scheduling
    method: POST
    data_selector: result
    params: {}
- name: scheduling
  endpoint:
    path: /run_modular_scheduling_algorithm
    method: POST
    data_selector: result
    params: {}
- name: scheduling_algorithm
  endpoint:
    path: /scheduling_algorithm
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params: {}
- name: dca-single
  endpoint:
    path: /dca-single
    method: GET
    data_selector: records
    params: {}
- name: dca-many
  endpoint:
    path: /dca-many
    method: GET
    data_selector: records
    params: {}
- name: rf2t-single
  endpoint:
    path: /rf2t-single
    method: GET
    data_selector: records
    params: {}
- name: af2-single
  endpoint:
    path: /af2-single
    method: GET
    data_selector: records
    params: {}
- name: af2-many
  endpoint:
    path: /af2-many
    method: GET
    data_selector: records
    params: {}
- name: mcpServers
  endpoint:
    path: /mcpServers
    method: GET
    data_selector: terminal-toolkit
    params: {}
- name: shell_exec
  endpoint:
    path: /shell_exec
    method: POST
    data_selector: result
- name: shell_view
  endpoint:
    path: /shell_view
    method: POST
    data_selector: result
- name: shell_wait
  endpoint:
    path: /shell_wait
    method: POST
    data_selector: result
- name: shell_write_to_process
  endpoint:
    path: /shell_write_to_process
    method: POST
    data_selector: result
- name: shell_kill_process
  endpoint:
    path: /shell_kill_process
    method: POST
    data_selector: result
- name: ask_user_for_help
  endpoint:
    path: /ask_user_for_help
    method: POST
    data_selector: result
- name: shell_exec
  endpoint:
    path: /terminal-toolkit-mcp
    method: POST
    data_selector: result
    params: {}
- name: configuration
  endpoint:
    path: /reference/configuration/
    method: GET
    data_selector: options
- name: mkdocs_network_graph_plugin
  endpoint:
    path: /mkdocs_network_graph_plugin-1.0.0.tar.gz
    method: GET
    data_selector: null
    params: {}
- name: mkdocs-network-graph-plugin
  endpoint:
    path: /pypi/mkdocs-network-graph-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-graph-plugin
  endpoint:
    path: /pypi/mkdocs-graph-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-image-gallery-plugin
  endpoint:
    path: /pypi/mkdocs-image-gallery-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-platform-plugin
  endpoint:
    path: /pypi/mkdocs-platform-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-copy-to-llm
  endpoint:
    path: /pypi/mkdocs-copy-to-llm
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-pages-json-plugin
  endpoint:
    path: /pypi/mkdocs-pages-json-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-statistics-plugin
  endpoint:
    path: /pypi/mkdocs-statistics-plugin
    method: GET
    data_selector: records
    params: {}
- name: pyodide-mkdocs-theme
  endpoint:
    path: /pypi/pyodide-mkdocs-theme
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-addresses
  endpoint:
    path: /pypi/mkdocs-addresses
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-tale
  endpoint:
    path: /pypi/mkdocs-tale
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-video2-plugin
  endpoint:
    path: /pypi/mkdocs-video2-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-dracula-theme
  endpoint:
    path: /pypi/mkdocs-dracula-theme
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-ai-summary-wcowin
  endpoint:
    path: /pypi/mkdocs-ai-summary-wcowin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-print-site-plugin
  endpoint:
    path: /pypi/mkdocs-print-site-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-llmstxt-md
  endpoint:
    path: /pypi/mkdocs-llmstxt-md
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-panzoom-plugin
  endpoint:
    path: /pypi/mkdocs-panzoom-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-authors-plugin
  endpoint:
    path: /pypi/mkdocs-authors-plugin
    method: GET
    data_selector: records
    params: {}
- name: mkapi
  endpoint:
    path: /pypi/mkapi
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-freetext
  endpoint:
    path: /pypi/mkdocs-freetext
    method: GET
    data_selector: records
    params: {}
- name: mkdocstrings
  endpoint:
    path: /pypi/mkdocstrings
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-network-graph-plugin
  endpoint:
    path: /pypi/mkdocs-network-graph-plugin
    method: GET
- name: mkdocs-graph-plugin
  endpoint:
    path: /pypi/mkdocs-graph-plugin
    method: GET
- name: drf-apischema
  endpoint:
    path: /pypi/drf-apischema
    method: GET
- name: pyx-core
  endpoint:
    path: /pypi/pyx-core
    method: GET
- name: mosheh
  endpoint:
    path: /pypi/mosheh
    method: GET
- name: doorstop-edit
  endpoint:
    path: /pypi/doorstop-edit
    method: GET
- name: pyexecmd
  endpoint:
    path: /pypi/pyexecmd
    method: GET
- name: hike
  endpoint:
    path: /pypi/hike
    method: GET
- name: mdxify
  endpoint:
    path: /pypi/mdxify
    method: GET
- name: aiohttp-docs
  endpoint:
    path: /pypi/aiohttp-docs
    method: GET
- name: squishie
  endpoint:
    path: /pypi/squishie
    method: GET
- name: drf-to-mkdoc
  endpoint:
    path: /pypi/drf-to-mkdoc
    method: GET
- name: mkdocs-platform-plugin
  endpoint:
    path: /pypi/mkdocs-platform-plugin
    method: GET
- name: ansible-doctor
  endpoint:
    path: /pypi/ansible-doctor
    method: GET
- name: llmswap
  endpoint:
    path: /pypi/llmswap
    method: GET
- name: fastapi-docshield
  endpoint:
    path: /pypi/fastapi-docshield
    method: GET
- name: jarkdown
  endpoint:
    path: /pypi/jarkdown
    method: GET
- name: mkdocs-copy-to-llm
  endpoint:
    path: /pypi/mkdocs-copy-to-llm
    method: GET
- name: sphinx-filter-tabs
  endpoint:
    path: /pypi/sphinx-filter-tabs
    method: GET
- name: engineering-memory-bank
  endpoint:
    path: /pypi/engineering-memory-bank
    method: GET
- name: process
  endpoint:
    path: /processes
    method: GET
    data_selector: process_list
- name: windows_service
  endpoint:
    path: /services
    method: GET
    data_selector: services_list
- name: cpu_times
  endpoint:
    path: /cpu_times
    method: GET
    data_selector: cpu_times
- name: virtual_memory
  endpoint:
    path: /virtual_memory
    method: GET
    data_selector: virtual_memory
- name: disk_partitions
  endpoint:
    path: /disk_partitions
    method: GET
    data_selector: disk_partitions
- name: net_io_counters
  endpoint:
    path: /net_io_counters
    method: GET
    data_selector: net_io_counters
- name: sensors_temperatures
  endpoint:
    path: /sensors_temperatures
    method: GET
    data_selector: sensors_temperatures
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: process
  endpoint:
    path: /process
    method: GET
    data_selector: records
- name: windows_service
  endpoint:
    path: /windows_service
    method: GET
    data_selector: records
- name: setuptools
  endpoint:
    path: /pypi/setuptools/json
    method: GET
    data_selector: info
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: grid_tables
  endpoint:
    path: /grid_tables
    method: GET
    data_selector: records
    params: {}
- name: simple_grid
  endpoint:
    path: /simple_grid
    method: GET
    data_selector: records
    params: {}
- name: rounded_grid
  endpoint:
    path: /rounded_grid
    method: GET
    data_selector: records
    params: {}
- name: heavy_grid
  endpoint:
    path: /heavy_grid
    method: GET
    data_selector: records
    params: {}
- name: mixed_grid
  endpoint:
    path: /mixed_grid
    method: GET
    data_selector: records
    params: {}
- name: double_grid
  endpoint:
    path: /double_grid
    method: GET
    data_selector: records
    params: {}
- name: fancy_grid
  endpoint:
    path: /fancy_grid
    method: GET
    data_selector: records
    params: {}
- name: tomli_w
  endpoint:
    path: /pypi/tomli-w/json
    method: GET
    data_selector: info
    params: {}
- name: bibtex_entry
  endpoint:
    path: /generate
    method: GET
    data_selector: output
    params:
      id: ''
- name: dataset
  endpoint:
    path: /api/v1/dataset
    method: POST
    data_selector: response.data
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: POST
    data_selector: response
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: solr_connection
  endpoint:
    path: /solr/mycore
    method: GET
    data_selector: records
    params:
      host: localhost
      port: '8983'
- name: tutorials
  endpoint:
    path: /tutorials
    method: GET
- name: examples
  endpoint:
    path: /examples
    method: GET
- name: api_reference
  endpoint:
    path: /docs
    method: GET
- name: glossary
  endpoint:
    path: /glossary
    method: GET
- name: torch_package
  endpoint:
    path: https://files.pythonhosted.org/packages/ae/95/ae26263aceb3d57b821179f827d0e321373ed49423e603dd5906ab14a730/torch-2.8.0-cp39-none-macosx_11_0_arm64.whl
    method: GET
    data_selector: downloads
    params: {}
- name: torch-2.8.0-cp312-none-macosx_11_0_arm64
  endpoint:
    path: https://files.pythonhosted.org/packages/be/66/5c9a321b325aaecb92d4d1855421e3a055abd77903b7dab6575ca07796db/torch-2.8.0-cp312-none-macosx_11_0_arm64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp313-cp313-manylinux_2_28_aarch64
  endpoint:
    path: https://files.pythonhosted.org/packages/10/4e/469ced5a0603245d6a19a556e9053300033f9c5baccf43a3d25ba73e189e/torch-2.8.0-cp313-cp313-manylinux_2_28_aarch64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp313-cp313-manylinux_2_28_x86_64
  endpoint:
    path: https://files.pythonhosted.org/packages/16/82/3948e54c01b2109238357c6f86242e6ecbf0c63a1af46906772902f82057/torch-2.8.0-cp313-cp313-manylinux_2_28_x86_64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp313-cp313t-macosx_14_0_arm64
  endpoint:
    path: https://files.pythonhosted.org/packages/de/69/8b7b13bba430f5e21d77708b616f767683629fc4f8037564a177d20f90ed/torch-2.8.0-cp313-cp313t-macosx_14_0_arm64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp313-cp313t-manylinux_2_28_aarch64
  endpoint:
    path: https://files.pythonhosted.org/packages/15/0e/8a800e093b7f7430dbaefa80075aee9158ec22e4c4fc3c1a66e4fb96cb4f/torch-2.8.0-cp313-cp313t-manylinux_2_28_aarch64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp313-cp313t-manylinux_2_28_x86_64
  endpoint:
    path: https://files.pythonhosted.org/packages/4a/15/5e488ca0bc6162c86a33b58642bc577c84ded17c7b72d97e49b5833e2d73/torch-2.8.0-cp313-cp313t-manylinux_2_28_x86_64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp313-cp313t-win_amd64
  endpoint:
    path: https://files.pythonhosted.org/packages/b4/a8/6a04e4b54472fc5dba7ca2341ab219e529f3c07b6941059fbf18dccac31f/torch-2.8.0-cp313-cp313t-win_amd64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp313-cp313-win_amd64
  endpoint:
    path: https://files.pythonhosted.org/packages/e3/54/941ea0a860f2717d86a811adf0c2cd01b3983bdd460d0803053c4e0b8649/torch-2.8.0-cp313-cp313-win_amd64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp39-cp39-manylinux_2_28_aarch64
  endpoint:
    path: https://files.pythonhosted.org/packages/5b/b0/a321f27270049baa12f5c3fb0d6ceea005634787e3af9a8d75dce8306b0a/torch-2.8.0-cp39-cp39-manylinux_2_28_aarch64.whl
    method: GET
    data_selector: filename
    params: {}
- name: torch-2.8.0-cp39-cp39-win_amd64
  endpoint:
    path: https://files.pythonhosted.org/packages/b9/dc/1f1f621a2839508dfea2bfe67352ae/torch-2.8.0-cp39-cp39-win_amd64.whl
    method: GET
    data_selector: filename
    params: {}
- name: safetensors_installation
  endpoint:
    path: /install
    method: GET
    data_selector: installation
    params: {}
- name: safetensors_usage_numpy
  endpoint:
    path: /usage/numpy
    method: GET
    data_selector: usage_numpy
    params: {}
- name: safetensors_usage_torch
  endpoint:
    path: /usage/torch
    method: GET
    data_selector: usage_torch
    params: {}
- name: safetensors_developing
  endpoint:
    path: /developing
    method: GET
    data_selector: developing
    params: {}
- name: safetensors_testing
  endpoint:
    path: /testing
    method: GET
    data_selector: testing
    params: {}
- name: libquadmath
  endpoint:
    path: /scipy/.dylibs/libquadmath*.so
    method: GET
    data_selector: records
    params: {}
- name: OpenBLAS
  endpoint:
    path: /scipy/.dylibs/libopenblas*.so
    method: GET
    data_selector: records
    params: {}
- name: LAPACK
  endpoint:
    path: /scipy/.dylibs/libopenblas*.so
    method: GET
    data_selector: records
    params: {}
- name: download
  endpoint:
    path: /packages/6e/1f/91144ba78dccea567a6466262922786ffc97be1e9b06ed9574ef0edc11e1/scipy-1.11.4.tar.gz
    method: GET
- name: citation
  endpoint:
    path: /citation
    method: GET
    data_selector: citation_data
    params: {}
- name: tqdm
  endpoint:
    path: /tqdm
    method: GET
    data_selector: records
- name: tqdm
  endpoint:
    path: /pypi/tqdm/json
    method: GET
    data_selector: info
- name: progress_bar
  endpoint:
    path: /progress_bar
    method: GET
    data_selector: records
    params: {}
- name: pytest_wheel
  endpoint:
    path: /packages/6b/77/7440a06a8ead44c7757a64362dd22df5760f9b12dc5f11b6188cd2fc27a0/pytest-8.3.3-py3-none-any.whl
    method: GET
    data_selector: ''
    params: {}
- name: pytest_tar_gz
  endpoint:
    path: /packages/8b/6c/62bbd536103af674e227c41a8f3dcd022d591f6eed5facb5a0f31ee33bbc/pytest-8.3.3.tar.gz
    method: GET
    data_selector: ''
    params: {}
- name: libquadmath
  endpoint:
    path: /dylibs/libquadmath*.so
    method: GET
    data_selector: files
    params: {}
- name: libquadmath
  endpoint:
    path: /libquadmath
    method: GET
    data_selector: dynamically linked to files compiled with gcc
    params: {}
- name: nbdev-apl
  endpoint:
    path: /pypi/nbdev-apl
    method: GET
- name: nbdev-django
  endpoint:
    path: /pypi/nbdev-django
    method: GET
- name: nbdev-sphinx
  endpoint:
    path: /pypi/nbdev-sphinx
    method: GET
- name: nbdev-scipy
  endpoint:
    path: /pypi/nbdev-scipy
    method: GET
- name: nbdev-pytorch
  endpoint:
    path: /pypi/nbdev-pytorch
    method: GET
- name: nbdev-pandas
  endpoint:
    path: /pypi/nbdev-pandas
    method: GET
- name: nbdev-numpy
  endpoint:
    path: /pypi/nbdev-numpy
    method: GET
- name: nbdev-stdlib
  endpoint:
    path: /pypi/nbdev-stdlib
    method: GET
- name: potentiostat-data-parser
  endpoint:
    path: /pypi/potentiostat-data-parser
    method: GET
- name: textplumber
  endpoint:
    path: /pypi/textplumber
    method: GET
- name: onprem
  endpoint:
    path: /pypi/onprem
    method: GET
- name: dialoghelper
  endpoint:
    path: /pypi/dialoghelper
    method: GET
- name: monsterui
  endpoint:
    path: /pypi/monsterui
    method: GET
- name: msglm
  endpoint:
    path: /pypi/msglm
    method: GET
- name: plash-cli
  endpoint:
    path: /pypi/plash-cli
    method: GET
- name: cjm-tqdm-capture
  endpoint:
    path: /pypi/cjm-tqdm-capture
    method: GET
- name: circadian
  endpoint:
    path: /pypi/circadian
    method: GET
- name: cjm-fasthtml-byok
  endpoint:
    path: /pypi/cjm-fasthtml-byok
    method: GET
- name: cjm-fasthtml-tailwind
  endpoint:
    path: /pypi/cjm-fasthtml-tailwind
    method: GET
- name: qgear
  endpoint:
    path: /pypi/qgear
    method: GET
- name: nbdev-sphinx
  endpoint:
    path: /pypi/nbdev-sphinx
    method: GET
    data_selector: urls
    params: {}
- name: users
  endpoint:
    path: /v_user
    method: GET
    data_selector: data
- name: create_user
  endpoint:
    path: /create_user
    method: POST
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: create_user
  endpoint:
    path: /create_user
    method: POST
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: create_user
  endpoint:
    path: /createUser
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: create_user
  endpoint:
    path: /create_user
    method: POST
    data_selector: data
- name: fraiseql
  endpoint:
    path: /pypi/fraiseql
    method: GET
- name: neutronapi
  endpoint:
    path: /pypi/neutronapi
    method: GET
- name: fastapi-csrf-protect
  endpoint:
    path: /pypi/fastapi-csrf-protect
    method: GET
- name: niteco.opal-rest-tool
  endpoint:
    path: /pypi/niteco.opal-rest-tool
    method: GET
- name: mmrl
  endpoint:
    path: /pypi/mmrl
    method: GET
- name: pyHexScaffold
  endpoint:
    path: /pypi/pyHexScaffold
    method: GET
- name: wordatlas
  endpoint:
    path: /pypi/wordatlas
    method: GET
- name: runmero
  endpoint:
    path: /pypi/runmero
    method: GET
- name: fastapi-fsp
  endpoint:
    path: /pypi/fastapi-fsp
    method: GET
- name: lhs-global-service-fastapi
  endpoint:
    path: /pypi/lhs-global-service-fastapi
    method: GET
- name: csv-server
  endpoint:
    path: /pypi/csv-server
    method: GET
- name: routelit
  endpoint:
    path: /pypi/routelit
    method: GET
- name: bijux-cli
  endpoint:
    path: /pypi/bijux-cli
    method: GET
- name: docmaplabs
  endpoint:
    path: /pypi/docmaplabs
    method: GET
- name: envsmith
  endpoint:
    path: /pypi/envsmith
    method: GET
- name: neutronapi-test-aaron
  endpoint:
    path: /pypi/neutronapi-test-aaron
    method: GET
- name: seliseblocks-genesis
  endpoint:
    path: /pypi/seliseblocks-genesis
    method: GET
- name: fastapi-agentrouter
  endpoint:
    path: /pypi/fastapi-agentrouter
    method: GET
- name: xiaohongshu-automation
  endpoint:
    path: /pypi/xiaohongshu-automation
    method: GET
- name: mcp-security-framework
  endpoint:
    path: /pypi/mcp-security-framework
    method: GET
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users/<int:user_id>
    method: GET
    data_selector: records
- name: docs
  endpoint:
    path: /docs
    method: GET
- name: openapi_spec
  endpoint:
    path: /openapi.json
    method: GET
- name: swagger_ui
  endpoint:
    path: /
    method: GET
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params:
      page: 1
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: user
    params: {}
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /posts
    method: GET
- name: users
  endpoint:
    path: /users
    method: POST
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: user
  endpoint:
    path: /users/<int:user_id>
    method: GET
    data_selector: user
    params:
      user_id: user_id
      include: profile
- name: openapi_spec
  endpoint:
    path: /openapi.json
    method: GET
- name: swagger_ui
  endpoint:
    path: /
    method: GET
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: user
  endpoint:
    path: /<int:user_id>
    method: GET
    data_selector: response
    params:
      user_id: user_id
      include: include
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: user
  endpoint:
    path: /users/<int:user_id>
    method: GET
    params:
      user_id:
        required: true
      include:
        schema:
          type: array
          items:
            type: string
            enum:
            - profile
            - posts
- name: openapi_spec
  endpoint:
    path: /openapi.json
    method: GET
- name: swagger_ui
  endpoint:
    path: /
    method: GET
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: spec
  endpoint:
    path: /spec
    method: GET
- name: user
  endpoint:
    path: /users/<int:user_id>
    method: GET
    data_selector: response
    params:
      user_id: user_id
      include: include
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: docs
  endpoint:
    path: /docs/openapi.json
    method: GET
- name: swagger_ui
  endpoint:
    path: /
    method: GET
- name: posts
  endpoint:
    path: /posts
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: data
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
- name: Confluence
  endpoint:
    path: /rest/api/content
    method: POST
    data_selector: results
- name: Jira
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
- name: Bitbucket
  endpoint:
    path: /rest/api/1.0/projects
    method: GET
    data_selector: values
- name: Confluence
  endpoint:
    path: /rest/api/content
    method: POST
    data_selector: results
- name: Jira
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
- name: Bitbucket
  endpoint:
    path: /rest/api/1.0/projects
    method: GET
    data_selector: values
- name: ServiceDesk
  endpoint:
    path: /rest/servicedeskapi/request
    method: GET
    data_selector: requests
- name: Insight
  endpoint:
    path: /rest/insight/1.0/object
    method: GET
    data_selector: objects
- name: Xray
  endpoint:
    path: /rest/raven/1.0/test
    method: GET
    data_selector: tests
- name: Bamboo
  endpoint:
    path: /rest/api/latest/elastic
    method: GET
    data_selector: configurations
- name: requests
  endpoint:
    path: /requests
    method: GET
    data_selector: records
    params: {}
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    data_selector: weather
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: create_issue
  endpoint:
    path: /create_issue
    method: POST
    data_selector: issues
    params: {}
- name: get_customers
  endpoint:
    path: /customers
    method: GET
    params:
      last_modified_after: '2023-01-01'
- name: list_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: get_customers
  endpoint:
    path: /customers
    method: GET
    params:
      last_modified_after: '2023-01-01'
- name: create_contact
  endpoint:
    path: /contacts
    method: POST
- name: get_weather
  endpoint:
    path: /weather
    method: GET
    params:
      q: London
      appid: YOUR_API_KEY
- name: list_items
  endpoint:
    path: /items
    method: GET
- name: create_item
  endpoint:
    path: /items
    method: POST
- name: search
  endpoint:
    path: /recherche
    method: GET
    data_selector: ads
    params:
      text: maison
      page: 1
      limit: 35
      limit_alu: 0
      sort: NEWEST
      ad_type: OFFER
      category: IMMOBILIER
      owner_type: ALL
      search_in_title_only: true
      square:
      - 200
      - 400
      price:
      - 300000
      - 700000
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: data
    params:
      page: 1
      per_page: 10
- name: vendor
  endpoint:
    path: /create_vendor
    method: POST
    data_selector: vendor
    params:
      user_id: 123
- name: product
  endpoint:
    path: /create_product
    method: POST
    data_selector: product
    params:
      vendor_id: 456
- name: balance
  endpoint:
    path: /get_balance
    method: GET
    data_selector: balance
    params:
      user_id: 123
- name: expense
  endpoint:
    path: /create_expense
    method: POST
    data_selector: expense
    params:
      user_id: 123
- name: python_dateutil_wheel
  endpoint:
    path: /python_dateutil-2.9.0.post0-py2.py3-none-any.whl
    method: GET
    data_selector: ''
    params: {}
- name: python_dateutil_tar
  endpoint:
    path: /python-dateutil-2.9.0.post0.tar.gz
    method: GET
    data_selector: ''
    params: {}
- name: hook
  endpoint:
    path: /hooks
    method: GET
    data_selector: hooks
    params: {}
- name: Account
  endpoint:
    path: /django-bulk-hooks
    method: GET
    data_selector: records
    params: {}
- name: Account
  endpoint:
    path: /bulk_operations/account
    method: POST
    data_selector: records
- name: mail-cleaner
  endpoint:
    path: /pypi/mail-cleaner/json
    method: GET
    data_selector: urls
- name: drf-apischema
  endpoint:
    path: /pypi/drf-apischema
    method: GET
    data_selector: records
- name: microsoft-kiota-bundle
  endpoint:
    path: /pypi/microsoft-kiota-bundle
    method: GET
- name: microsoft-kiota-serialization-multipart
  endpoint:
    path: /pypi/microsoft-kiota-serialization-multipart
    method: GET
- name: microsoft-kiota-serialization-text
  endpoint:
    path: /pypi/microsoft-kiota-serialization-text
    method: GET
- name: drf-apischema
  endpoint:
    path: /pypi/drf-apischema
    method: GET
- name: lance-namespace-urllib3-client
  endpoint:
    path: /pypi/lance-namespace-urllib3-client
    method: GET
- name: katana-openapi-client
  endpoint:
    path: /pypi/katana-openapi-client
    method: GET
- name: ez-code-generator
  endpoint:
    path: /pypi/ez-code-generator
    method: GET
- name: aiohttp-docs
  endpoint:
    path: /pypi/aiohttp-docs
    method: GET
- name: schemathesis
  endpoint:
    path: /pypi/schemathesis
    method: GET
- name: django-revolution
  endpoint:
    path: /pypi/django-revolution
    method: GET
- name: hostinger-api
  endpoint:
    path: /pypi/hostinger-api
    method: GET
- name: alibabacloud-tea-openapi
  endpoint:
    path: /pypi/alibabacloud-tea-openapi
    method: GET
- name: swagger-plugin-for-sphinx
  endpoint:
    path: /pypi/swagger-plugin-for-sphinx
    method: GET
- name: kubernetes-asyncio
  endpoint:
    path: /pypi/kubernetes-asyncio
    method: GET
- name: lark-oapi
  endpoint:
    path: /pypi/lark-oapi
    method: GET
- name: d361api
  endpoint:
    path: /pypi/d361api
    method: GET
- name: esmerald
  endpoint:
    path: /pypi/esmerald
    method: GET
- name: stopments
  endpoint:
    path: /pypi/stopments
    method: GET
- name: cheshirecat-python-sdk
  endpoint:
    path: /pypi/cheshirecat-python-sdk
    method: GET
- name: mcp-kit
  endpoint:
    path: /pypi/mcp-kit
    method: GET
- name: openwisp-users
  endpoint:
    path: /pypi/openwisp-users
    method: GET
    data_selector: summary
- name: OlsrParser
  endpoint:
    path: url
    method: GET
- name: NetJsonParser
  endpoint:
    path: url
    method: GET
- name: BatmanParser
  endpoint:
    path: file
    method: GET
- name: Bmx6Parser
  endpoint:
    path: url
    method: GET
- name: CnmlParser
  endpoint:
    path: url
    method: GET
- name: OpenvpnParser
  endpoint:
    path: url
    method: GET
- name: WireguardParser
  endpoint:
    path: url
    method: GET
- name: ZeroTierParser
  endpoint:
    path: url
    method: GET
- name: OlsrParser
  endpoint:
    path: /path/to/olsr
    method: GET
    data_selector: data
    params: {}
- name: NetJsonParser
  endpoint:
    path: /path/to/netjson
    method: GET
    data_selector: data
    params: {}
- name: BatmanParser
  endpoint:
    path: /path/to/batman
    method: GET
    data_selector: data
    params: {}
- name: Bmx6Parser
  endpoint:
    path: /path/to/bmx6
    method: GET
    data_selector: data
    params: {}
- name: CnmlParser
  endpoint:
    path: /path/to/cnml
    method: GET
    data_selector: data
    params: {}
- name: OpenvpnParser
  endpoint:
    path: /path/to/openvpn
    method: GET
    data_selector: data
    params: {}
- name: WireguardParser
  endpoint:
    path: /path/to/wireguard
    method: GET
    data_selector: data
    params: {}
- name: ZeroTierParser
  endpoint:
    path: /path/to/zerotier
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: languages
  endpoint:
    path: /zibanu/django/api/services/language
    method: GET
    data_selector: languages
- name: timezones
  endpoint:
    path: /zibanu/django/api/services/timezone
    method: GET
    data_selector: response
- name: error_messages
  endpoint:
    path: /zibanu/django/utils/error_messages
    method: GET
    data_selector: messages
    params: {}
- name: code_generator
  endpoint:
    path: /zibanu/django/utils/code_generator
    method: GET
    data_selector: codes
    params: {}
- name: mail
  endpoint:
    path: /zibanu/django/utils/mail
    method: GET
    data_selector: emails
    params: {}
- name: date_time
  endpoint:
    path: /zibanu/django/utils/date_time
    method: GET
    data_selector: date_times
    params: {}
- name: request_utils
  endpoint:
    path: /zibanu/django/utils/request_utils
    method: GET
    data_selector: requests
    params: {}
- name: user
  endpoint:
    path: /zibanu/django/utils/user
    method: GET
    data_selector: users
    params: {}
- name: timezone_list
  endpoint:
    path: /api/timezones
    method: GET
    data_selector: timezones
- name: adjango
  endpoint:
    path: /pypi/adjango/json
    method: GET
    data_selector: records
    params: {}
- name: payment_verification
  endpoint:
    path: /verify/<int:order_id>/<str:payment_method>/
    method: GET
    data_selector: response
- name: freeradius
  endpoint:
    path: /user/rest-api.html
    method: GET
- name: staticfiles
  endpoint:
    path: /django-manifeststaticfiles-enhanced
    method: GET
- name: produto
  endpoint:
    path: /api/products/info/
    method: GET
    data_selector: info
- name: clientes_search
  endpoint:
    path: /api/clientes/search/
    method: GET
    data_selector: results
    params: {}
- name: searchable_dropdown
  endpoint:
    path: /api/clientes/search/
    method: GET
    data_selector: results
- name: produto_info
  endpoint:
    path: /api/products/info/
    method: GET
    data_selector: info
    params:
      id: produto_id
- name: searchable_dropdown
  endpoint:
    path: /api/clientes/search/
    method: GET
    data_selector: results
    params: {}
- name: produto_info
  endpoint:
    path: /api/produtos/info/
    method: GET
    data_selector: results
    params: {}
- name: produto
  endpoint:
    path: /api/products/info/
    method: GET
    data_selector: info
    params:
      id: produto_id
- name: activities_info
  endpoint:
    path: /api/activities/info/
    method: GET
    data_selector: results
    params: {}
- name: products_info
  endpoint:
    path: /api/products/info/
    method: GET
    data_selector: results
    params: {}
- name: produto
  endpoint:
    path: /api/products/info/
    method: GET
    data_selector: info
    params: {}
- name: development
  endpoint:
    ajax_timeout: 10000
    delay: 500
- name: production
  endpoint:
    ajax_timeout: 3000
    delay: 200
    cache_results: true
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: produto
  endpoint:
    path: /api/produtos/info/
    method: GET
- name: produto_info
  endpoint:
    path: /api/produtos/info/
    method: GET
    data_selector: info
    params:
      id: produto_id
- name: SearchableDropdown
  endpoint:
    path: /api/clientes/search/
    method: GET
    data_selector: results
- name: SearchableDropdownWithInfo
  endpoint:
    path: /api/produtos/info/
    method: GET
    data_selector: product_info
- name: django-searchable-dropdown
  endpoint:
    path: /pypi/django-searchable-dropdown
    method: GET
- name: django-tomselect
  endpoint:
    path: /pypi/django-tomselect
    method: GET
- name: bfprt
  endpoint:
    path: /pypi/bfprt
    method: GET
- name: circuitpython-rotaryselect
  endpoint:
    path: /pypi/circuitpython-rotaryselect
    method: GET
- name: ezsam
  endpoint:
    path: /pypi/ezsam
    method: GET
- name: graphicstatus
  endpoint:
    path: /pypi/graphicstatus
    method: GET
- name: django-multiselectfield
  endpoint:
    path: /pypi/django-multiselectfield
    method: GET
- name: reflex-dynoselect
  endpoint:
    path: /pypi/reflex-dynoselect
    method: GET
- name: VGAtil
  endpoint:
    path: /pypi/VGAtil
    method: GET
- name: redis_keys
  endpoint:
    path: /admin/redis/
    method: GET
    data_selector: keys
    params: {}
- name: redis_instance
  endpoint:
    path: /admin/redis/
    method: GET
- name: redis_keys
  endpoint:
    path: /admin/redis/
    method: GET
    data_selector: keys
    params: {}
- name: instances
  endpoint:
    path: /admin/redis/
    method: GET
    data_selector: instances
- name: redis_package
  endpoint:
    path: /redis-6.3.0.tar.gz
    method: GET
    data_selector: urls
- name: redis_commands
  endpoint:
    path: /commands
    method: GET
    data_selector: commands
    params: {}
- name: pytest-xdist
  endpoint:
    path: /pypi/pytest-xdist
    method: GET
- name: dixa-api-client
  endpoint:
    path: /pypi/dixa-api-client
    method: GET
- name: requests-ai-validator
  endpoint:
    path: /pypi/requests-ai-validator
    method: GET
- name: geoserver-rest-by-bda
  endpoint:
    path: /pypi/geoserver-rest-by-bda
    method: GET
- name: llm-api-client
  endpoint:
    path: /pypi/llm-api-client
    method: GET
- name: strongdm
  endpoint:
    path: /pypi/strongdm
    method: GET
- name: aspose-barcode-cloud
  endpoint:
    path: /pypi/aspose-barcode-cloud
    method: GET
- name: g4f
  endpoint:
    path: /pypi/g4f
    method: GET
- name: werk24
  endpoint:
    path: /pypi/werk24
    method: GET
- name: unitoken
  endpoint:
    path: /pypi/unitoken
    method: GET
- name: test-rest-api
  endpoint:
    path: /pypi/test-rest-api
    method: GET
- name: niteco.opal-rest-tool
  endpoint:
    path: /pypi/niteco.opal-rest-tool
    method: GET
- name: ivybloom
  endpoint:
    path: /pypi/ivybloom
    method: GET
- name: monday-client
  endpoint:
    path: /pypi/monday-client
    method: GET
- name: firecrawl
  endpoint:
    path: /pypi/firecrawl
    method: GET
- name: firecrawl-py
  endpoint:
    path: /pypi/firecrawl-py
    method: GET
- name: pydevelop-docs
  endpoint:
    path: /pypi/pydevelop-docs
    method: GET
- name: pygpt-net
  endpoint:
    path: /pypi/pygpt-net
    method: GET
- name: bdns-fetch
  endpoint:
    path: /pypi/bdns-fetch
    method: GET
- name: mindzie-api
  endpoint:
    path: /pypi/mindzie-api
    method: GET
- name: vibrationview-api
  endpoint:
    path: /pypi/vibrationview-api
    method: GET
- name: agents
  endpoint:
    path: /v1/agents
    method: GET
- name: analytics
  endpoint:
    path: /v1/analytics
    method: GET
- name: contact_endpoints
  endpoint:
    path: /v1/contact_endpoints
    method: GET
- name: conversations
  endpoint:
    path: /v1/conversations
    method: GET
- name: custom_attributes
  endpoint:
    path: /v1/custom_attributes
    method: GET
- name: end_users
  endpoint:
    path: /v1/end_users
    method: GET
- name: queues
  endpoint:
    path: /v1/queues
    method: GET
- name: tags
  endpoint:
    path: /v1/tags
    method: GET
- name: teams
  endpoint:
    path: /v1/teams
    method: GET
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /users/
    method: GET
- name: responses
  endpoint:
    path: /v1/responses
    method: POST
    data_selector: data
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
- name: responses
  endpoint:
    path: /v1/responses
    method: POST
    data_selector: output_text
- name: chat.completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: message
- name: batches
  endpoint:
    path: /messages/batches
    method: POST
    data_selector: batch
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: data
    params: {}
- name: batches
  endpoint:
    path: /messages/batches
    method: POST
    data_selector: data
    params: {}
- name: generate
  endpoint:
    path: /barcode/generate/{barcodeType}
    method: GET
- name: generate_body
  endpoint:
    path: /barcode/generate-body
    method: POST
- name: generate_multipart
  endpoint:
    path: /barcode/generate-multipart
    method: POST
- name: recognize
  endpoint:
    path: /barcode/recognize
    method: GET
- name: recognize_base64
  endpoint:
    path: /barcode/recognize-body
    method: POST
- name: recognize_multipart
  endpoint:
    path: /barcode/recognize-multipart
    method: POST
- name: scan
  endpoint:
    path: /barcode/scan
    method: GET
- name: scan_base64
  endpoint:
    path: /barcode/scan-body
    method: POST
- name: scan_multipart
  endpoint:
    path: /barcode/scan-multipart
    method: POST
- name: generate_barcode
  endpoint:
    path: /barcode/generate/{barcodeType}
    method: GET
- name: generate_body_barcode
  endpoint:
    path: /barcode/generate-body
    method: POST
- name: generate_multipart_barcode
  endpoint:
    path: /barcode/generate-multipart
    method: POST
- name: recognize_barcode
  endpoint:
    path: /barcode/recognize
    method: GET
- name: recognize_body_barcode
  endpoint:
    path: /barcode/recognize-body
    method: POST
- name: recognize_multipart_barcode
  endpoint:
    path: /barcode/recognize-multipart
    method: POST
- name: scan_barcode
  endpoint:
    path: /barcode/scan
    method: GET
- name: scan_body_barcode
  endpoint:
    path: /barcode/scan-body
    method: POST
- name: scan_multipart_barcode
  endpoint:
    path: /barcode/scan-multipart
    method: POST
- name: interference_api
  endpoint:
    path: /v1
    method: GET
- name: interference_api
  endpoint:
    path: /v1
    method: GET
- name: g4f
  endpoint:
    path: /pypi/g4f
    method: GET
- name: g4f
  endpoint:
    path: /pypi/g4f
    method: GET
    data_selector: records
- name: pygpt-net
  endpoint:
    path: /pypi/pygpt-net
    method: GET
    data_selector: records
- name: llmswap
  endpoint:
    path: /pypi/llmswap
    method: GET
    data_selector: records
- name: dazllm
  endpoint:
    path: /pypi/dazllm
    method: GET
    data_selector: records
- name: mindsite
  endpoint:
    path: /pypi/mindsite
    method: GET
    data_selector: records
- name: Commify
  endpoint:
    path: /pypi/Commify
    method: GET
    data_selector: records
- name: gpt-command-line
  endpoint:
    path: /pypi/gpt-command-line
    method: GET
    data_selector: records
- name: pyaskit
  endpoint:
    path: /pypi/pyaskit
    method: GET
    data_selector: records
- name: puter
  endpoint:
    path: /pypi/puter
    method: GET
    data_selector: records
- name: token-vision
  endpoint:
    path: /pypi/token-vision
    method: GET
    data_selector: records
- name: textfromimage
  endpoint:
    path: /pypi/textfromimage
    method: GET
    data_selector: records
- name: spicejack
  endpoint:
    path: /pypi/spicejack
    method: GET
    data_selector: records
- name: odaia
  endpoint:
    path: /pypi/odaia
    method: GET
    data_selector: records
- name: jgwill-odaia
  endpoint:
    path: /pypi/jgwill-odaia
    method: GET
    data_selector: records
- name: readmeai
  endpoint:
    path: /pypi/readmeai
    method: GET
    data_selector: records
- name: shuttleai
  endpoint:
    path: /pypi/shuttleai
    method: GET
    data_selector: records
- name: g4fu
  endpoint:
    path: /pypi/g4fu
    method: GET
    data_selector: records
- name: terminalgpt
  endpoint:
    path: /pypi/terminalgpt
    method: GET
    data_selector: records
- name: theosgpt
  endpoint:
    path: /pypi/theosgpt
    method: GET
    data_selector: records
- name: ChatGPTAutomation
  endpoint:
    path: /pypi/ChatGPTAutomation
    method: GET
    data_selector: records
- name: pycryptodome
  endpoint:
    path: /packages/13/52/13b9db4a913eee948152a079fe58d035bd3d1a519584155da8e786f767e6/pycryptodome-3.21.0.tar.gz
    method: GET
    data_selector: null
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params:
      q: somequery
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: books
  endpoint:
    path: /books
    method: GET
    data_selector: results
    params:
      max_results: 10
      page: 1
      backend: auto
- name: text_search
  endpoint:
    path: /text
    method: GET
    data_selector: results
    params:
      max_results: 10
      region: us-en
      safesearch: moderate
      timelimit: null
      page: 1
      backend: auto
- name: image_search
  endpoint:
    path: /images
    method: GET
    data_selector: results
    params:
      max_results: 10
      region: us-en
      safesearch: moderate
      timelimit: null
      page: 1
      backend: auto
- name: video_search
  endpoint:
    path: /videos
    method: GET
    data_selector: results
    params:
      max_results: 10
      region: us-en
      safesearch: moderate
      timelimit: null
      page: 1
      backend: auto
- name: news_search
  endpoint:
    path: /news
    method: GET
    data_selector: results
    params:
      max_results: 10
      region: us-en
      safesearch: moderate
      timelimit: null
      page: 1
      backend: auto
- name: book_search
  endpoint:
    path: /books
    method: GET
    data_selector: results
    params:
      max_results: 10
      region: us-en
      safesearch: moderate
      timelimit: null
      page: 1
      backend: auto
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: results
    params:
      query: sun
      region: us-en
      safesearch: 'off'
      timelimit: m
      page: 1
      backend: auto
- name: books
  endpoint:
    path: /books
    method: GET
    data_selector: results
    params:
      query: sea wolf jack london
      page: 1
      backend: auto
- name: text_search
  endpoint:
    path: /text
    method: GET
    data_selector: results
    params:
      query: text
      region: us-en
      safesearch: moderate
      timelimit: null
      max_results: 10
      page: 1
      backend: auto
- name: image_search
  endpoint:
    path: /images
    method: GET
    data_selector: results
    params:
      query: images
      region: us-en
      safesearch: moderate
      timelimit: null
      max_results: 10
      page: 1
      backend: auto
- name: video_search
  endpoint:
    path: /videos
    method: GET
    data_selector: results
    params:
      query: videos
      region: us-en
      safesearch: moderate
      timelimit: null
      max_results: 10
      page: 1
      backend: auto
- name: news_search
  endpoint:
    path: /news
    method: GET
    data_selector: results
    params:
      query: news
      region: us-en
      safesearch: moderate
      timelimit: null
      max_results: 10
      page: 1
      backend: auto
- name: book_search
  endpoint:
    path: /books
    method: GET
    data_selector: results
    params:
      query: books
      max_results: 100
- name: meta_data
  endpoint:
    path: /api/meta_data
    method: GET
    data_selector: data
- name: technical_drawings
  endpoint:
    path: /api/technical_drawings
    method: POST
    data_selector: data
- name: products
  endpoint:
    path: /products/1
    method: GET
- name: async_tests
  endpoint:
    path: /async/tests
    method: GET
    data_selector: tests
    params: {}
- name: test
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products/1
    method: GET
- name: logger_errors
  endpoint:
    path: /logger_errors
    method: GET
    data_selector: errors
    params: {}
- name: unexpected_errors
  endpoint:
    path: /unexpected_errors
    method: GET
    data_selector: errors
    params: {}
- name: test-rest-api
  endpoint:
    path: /pypi/test-rest-api
    method: GET
- name: wingpy
  endpoint:
    path: /pypi/wingpy
    method: GET
- name: datakorea
  endpoint:
    path: /pypi/datakorea
    method: GET
- name: pydtc
  endpoint:
    path: /pypi/pydtc
    method: GET
- name: idms
  endpoint:
    path: /pypi/idms
    method: GET
- name: ParsedOperation
  endpoint:
    path: /rest-tools
    method: GET
    data_selector: operations
- name: get_users
  endpoint:
    path: /rest-tools/get_users
    method: POST
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: workflows
  endpoint:
    path: /workflows
    method: POST
    data_selector: workflows
- name: boards
  endpoint:
    path: /boards
    method: GET
- name: items
  endpoint:
    path: /items
    method: GET
- name: project_setup
  endpoint:
    path: /setup-general
    method: POST
    data_selector: result
    params: {}
- name: autoapi_dirs
  endpoint:
    path: /autoapi_dirs
    method: GET
    data_selector: directories
- name: pydevelop-docs
  endpoint:
    path: /pypi/pydevelop-docs
    method: GET
    data_selector: records
    params: {}
- name: librovore
  endpoint:
    path: /pypi/librovore
    method: GET
    data_selector: records
    params: {}
- name: gitbuilding-qaqc-server
  endpoint:
    path: /pypi/gitbuilding-qaqc-server
    method: GET
    data_selector: records
    params: {}
- name: doc-lsp
  endpoint:
    path: /pypi/doc-lsp
    method: GET
    data_selector: records
    params: {}
- name: readmebro
  endpoint:
    path: /pypi/readmebro
    method: GET
    data_selector: records
    params: {}
- name: mkdocs-material
  endpoint:
    path: /pypi/mkdocs-material
    method: GET
    data_selector: records
    params: {}
- name: reslate-finesse
  endpoint:
    path: /pypi/reslate-finesse
    method: GET
    data_selector: records
    params: {}
- name: wads
  endpoint:
    path: /pypi/wads
    method: GET
    data_selector: records
    params: {}
- name: code-doc-gen
  endpoint:
    path: /pypi/code-doc-gen
    method: GET
    data_selector: records
    params: {}
- name: gitscribe-mcp
  endpoint:
    path: /pypi/gitscribe-mcp
    method: GET
    data_selector: records
    params: {}
- name: zerodoc-gen
  endpoint:
    path: /pypi/zerodoc-gen
    method: GET
    data_selector: records
    params: {}
- name: sphinxcontrib-paverutils
  endpoint:
    path: /pypi/sphinxcontrib-paverutils
    method: GET
    data_selector: records
    params: {}
- name: sphinx-packaging
  endpoint:
    path: /pypi/sphinx-packaging
    method: GET
    data_selector: records
    params: {}
- name: gjalla
  endpoint:
    path: /pypi/gjalla
    method: GET
    data_selector: records
    params: {}
- name: docu-lite-kit
  endpoint:
    path: /pypi/docu-lite-kit
    method: GET
    data_selector: records
    params: {}
- name: sbom2doc
  endpoint:
    path: /pypi/sbom2doc
    method: GET
    data_selector: records
    params: {}
- name: annize
  endpoint:
    path: /pypi/annize
    method: GET
    data_selector: records
    params: {}
- name: docu-lite
  endpoint:
    path: /pypi/docu-lite
    method: GET
    data_selector: records
    params: {}
- name: pyrefdev
  endpoint:
    path: /pypi/pyrefdev
    method: GET
    data_selector: records
    params: {}
- name: prometheous
  endpoint:
    path: /pypi/prometheous
    method: GET
    data_selector: records
    params: {}
- name: pydevelop-docs
  endpoint:
    path: /pypi/pydevelop-docs
    method: GET
- name: file-conversor
  endpoint:
    path: /pypi/file-conversor
    method: GET
- name: mkdocs-ultralytics-plugin
  endpoint:
    path: /pypi/mkdocs-ultralytics-plugin
    method: GET
- name: nonebot-plugin-docs
  endpoint:
    path: /pypi/nonebot-plugin-docs
    method: GET
- name: essentials-openapi
  endpoint:
    path: /pypi/essentials-openapi
    method: GET
- name: html-for-docx
  endpoint:
    path: /pypi/html-for-docx
    method: GET
- name: mkdocs-publisher
  endpoint:
    path: /pypi/mkdocs-publisher
    method: GET
- name: inline-reference
  endpoint:
    path: /pypi/inline-reference
    method: GET
- name: docsig
  endpoint:
    path: /pypi/docsig
    method: GET
- name: sphinx-markdown-builder
  endpoint:
    path: /pypi/sphinx-markdown-builder
    method: GET
- name: sphinx-js
  endpoint:
    path: /pypi/sphinx-js
    method: GET
- name: dbt2pdf
  endpoint:
    path: /pypi/dbt2pdf
    method: GET
- name: mkdocs-xrepos-plugin
  endpoint:
    path: /pypi/mkdocs-xrepos-plugin
    method: GET
- name: mkdocs-multirepo-azdevops-plugin
  endpoint:
    path: /pypi/mkdocs-multirepo-azdevops-plugin
    method: GET
- name: pytkdocs
  endpoint:
    path: /pypi/pytkdocs
    method: GET
- name: mkdocs-multirepo-plugin
  endpoint:
    path: /pypi/mkdocs-multirepo-plugin
    method: GET
- name: APIFixer
  endpoint:
    path: /pypi/APIFixer
    method: GET
- name: ethbinductor
  endpoint:
    path: /pypi/ethbinductor
    method: GET
- name: ethbind
  endpoint:
    path: /pypi/ethbind
    method: GET
- name: gen-readme
  endpoint:
    path: /pypi/gen-readme
    method: GET
- name: profile
  endpoint:
    path: /user
    method: GET
- name: user
  endpoint:
    path: /users/{username}
    method: GET
- name: repositories
  endpoint:
    path: /users/{username}/repos
    method: GET
- name: repository
  endpoint:
    path: /repos/{owner}/{repo}
    method: GET
- name: issues
  endpoint:
    path: /repos/{owner}/{repo}/issues
    method: GET
- name: pull_requests
  endpoint:
    path: /repos/{owner}/{repo}/pulls
    method: GET
- name: Mouse And Keyboard
  endpoint:
    path: /mouse_keyboard
    method: GET
    data_selector: capabilities
    params: {}
- name: Web Search
  endpoint:
    path: /web_search
    method: GET
    data_selector: results
    params:
      provider: Google
- name: Serial port / USB
  endpoint:
    path: /serial_usb
    method: GET
    data_selector: commands
    params: {}
- name: Context history
  endpoint:
    path: /context_history
    method: GET
    data_selector: context_items
    params: {}
- name: Crontab / Task scheduler
  endpoint:
    path: /crontab
    method: GET
    data_selector: tasks
    params: {}
- name: Image Generation
  endpoint:
    path: /image_generation
    method: GET
    data_selector: generated_images
    params: {}
- name: Experts
  endpoint:
    path: /experts
    method: GET
    data_selector: expert_list
    params: {}
- name: Vision
  endpoint:
    path: /vision
    method: GET
    data_selector: vision_capabilities
    params: {}
- name: Mailer
  endpoint:
    path: /mailer
    method: GET
    data_selector: email_commands
    params: {}
- name: Real Time
  endpoint:
    path: /real_time
    method: GET
    data_selector: time_info
    params: {}
- name: System Prompt Extra
  endpoint:
    path: /system_prompt_extra
    method: GET
    data_selector: extra_prompts
    params: {}
- name: Voice Control
  endpoint:
    path: /voice_control
    method: GET
    data_selector: voice_commands
    params: {}
- name: Google
  endpoint:
    path: /google
    method: GET
    data_selector: google_services
    params: {}
- name: Facebook
  endpoint:
    path: /facebook
    method: GET
    data_selector: facebook_services
    params: {}
- name: Slack
  endpoint:
    path: /slack
    method: GET
    data_selector: slack_services
    params: {}
- name: Telegram
  endpoint:
    path: /telegram
    method: GET
    data_selector: telegram_services
    params: {}
- name: X/Twitter
  endpoint:
    path: /twitter
    method: GET
    data_selector: twitter_services
    params: {}
- name: CSV Files
  endpoint:
    params:
      concat_rows: true
      encoding: utf-8
- name: HTML Files
  endpoint:
    params:
      tag: section
      ignore_no_id: false
- name: Image (vision)
  endpoint:
    params:
      keep_image: false
      local_prompt: 'Question: describe what you see in this image. Answer:'
      api_prompt: Describe what you see in this image
      api_model: gpt-4-vision-preview
      api_tokens: 1000
- name: IPYNB Notebook files
  endpoint:
    params:
      parser_config: null
      concatenate: false
- name: Markdown files
  endpoint:
    params:
      remove_hyperlinks: true
      remove_images: true
- name: PDF documents
  endpoint:
    params:
      return_full_document: false
- name: Video/Audio
  endpoint:
    params:
      model_version: base
- name: XML files
  endpoint:
    params:
      tree_level_split: 0
- name: Bitbucket
  endpoint:
    params:
      username: null
      api_key: null
      extensions_to_skip: []
- name: ChatGPT Retrieval
  endpoint:
    params:
      endpoint_url: null
      bearer_token: null
      retries: null
      batch_size: 100
- name: Google Calendar
  endpoint:
    params:
      credentials_path: credentials.json
      token_path: token.json
- name: Google Docs
  endpoint:
    params:
      credentials_path: credentials.json
      token_path: token.json
- name: Google Drive
  endpoint:
    params:
      credentials_path: credentials.json
      token_path: token.json
      pydrive_creds_path: creds.txt
      client_config: {}
- name: Google Gmail
  endpoint:
    params:
      credentials_path: credentials.json
      token_path: token.json
      use_iterative_parser: false
      max_results: 10
      results_per_page: null
- name: Google Keep
  endpoint:
    params:
      credentials_path: keep_credentials.json
- name: Google Sheets
  endpoint:
    params:
      credentials_path: credentials.json
      token_path: token.json
- name: GitHub Issues
  endpoint:
    params:
      token: null
      verbose: false
- name: GitHub Repository
  endpoint:
    params:
      token: null
      verbose: false
      concurrent_requests: 5
      timeout: 5
      retries: 0
      filter_dirs_include: null
      filter_dirs_exclude: null
      filter_file_ext_include: null
      filter_file_ext_exclude: null
- name: Microsoft OneDrive
  endpoint:
    params:
      client_id: null
      client_secret: null
      tenant_id: consumers
- name: Sitemap (XML)
  endpoint:
    params:
      html_to_text: false
      limit: 10
- name: SQL Database
  endpoint:
    params:
      uri: null
      scheme: null
      host: null
      port: null
      user: null
      password: null
      dbname: null
- name: Twitter/X posts
  endpoint:
    params:
      bearer_token: null
      num_tweets: 100
- name: serial_port
  endpoint:
    path: /serial
    method: POST
    data_selector: commands
    params: {}
- name: files
  endpoint:
    path: /data
    method: GET
    data_selector: files
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: images
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: documents
- name: notepad
- name: painter
- name: calendar
- name: assistants
  endpoint:
    path: assistants.json
    method: GET
- name: attachments
  endpoint:
    path: attachments.json
    method: GET
- name: config
  endpoint:
    path: config.json
    method: GET
- name: models
  endpoint:
    path: models.json
    method: GET
- name: cache
  endpoint:
    path: cache
    method: GET
- name: capture
  endpoint:
    path: capture
    method: GET
- name: css
  endpoint:
    path: css
    method: GET
- name: history
  endpoint:
    path: history
    method: GET
- name: idx
  endpoint:
    path: idx
    method: GET
- name: img
  endpoint:
    path: img
    method: GET
- name: locale
  endpoint:
    path: locale
    method: GET
- name: data
  endpoint:
    path: data
    method: GET
- name: presets
  endpoint:
    path: presets
    method: GET
- name: upload
  endpoint:
    path: upload
    method: GET
- name: db
  endpoint:
    path: db.sqlite
    method: GET
- name: app_log
  endpoint:
    path: app.log
    method: GET
- name: context_history
  endpoint:
    path: /context/history
    method: GET
    data_selector: records
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: event_data
- name: custom_loader
  endpoint:
    path: /loaders
    method: GET
    data_selector: loader_data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: custom_llm
  endpoint:
    path: /llm
    method: POST
    data_selector: llm
- name: custom_vector_store
  endpoint:
    path: /vector_store
    method: POST
    data_selector: vector_store
- name: Microsoft Azure Text-To-Speech
  endpoint:
    path: /services/cognitive-services/text-to-speech
    method: POST
    data_selector: data
    params:
      azure_api_key: '{{ dlt.secrets[''azure_api_key''] }}'
      azure_region: eastus
      azure_voice_en: en-US-AriaNeural
      azure_voice_pl: pl-PL-AgnieszkaNeural
- name: Google Text-To-Speech
  endpoint:
    path: /v1/text:synthesize
    method: POST
    data_selector: audioContent
    params:
      google_api_key: '{{ dlt.secrets[''google_api_key''] }}'
      google_voice: ''
      language_code: ''
- name: Eleven Labs Text-To-Speech
  endpoint:
    path: /v1/text-to-speech
    method: POST
    data_selector: audio
    params:
      eleven_labs_api_key: '{{ dlt.secrets[''eleven_labs_api_key''] }}'
      eleven_labs_voice: ''
      eleven_labs_model: ''
- name: get_email_body
  endpoint:
    path: /get_email_body
    method: POST
    data_selector: email_body
    params: {}
- name: pygpt-net
  endpoint:
    path: /pypi/pygpt-net
    method: GET
- name: odaia
  endpoint:
    path: /pypi/odaia
    method: GET
- name: jgwill-odaia
  endpoint:
    path: /pypi/jgwill-odaia
    method: GET
- name: fastapi-key-auth
  endpoint:
    path: /pypi/fastapi-key-auth
    method: GET
- name: ayudasestado-busqueda
  endpoint:
    path: /ayudasestado/busqueda
    method: GET
    data_selector: records
    params:
      num-pages: N
      pageSize: N
- name: organos
  endpoint:
    path: /organos
    method: GET
    data_selector: records
    params: {}
- name: concesiones-busqueda
  endpoint:
    path: /concesiones/busqueda
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: investigations
  endpoint:
    path: /investigations
    method: GET
    data_selector: investigations
- name: notebooks
  endpoint:
    path: /notebooks
    method: GET
    data_selector: notebooks
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: investigations
  endpoint:
    path: /investigations
    method: GET
    data_selector: investigations
- name: notebooks
  endpoint:
    path: /notebooks
    method: GET
    data_selector: notebooks
- name: blocks
  endpoint:
    path: /blocks
    method: GET
    data_selector: blocks
- name: dashboards
  endpoint:
    path: /dashboards
    method: GET
    data_selector: dashboards
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: investigations
  endpoint:
    path: /investigations
    method: GET
- name: notebooks
  endpoint:
    path: /notebooks
    method: GET
- name: blocks
  endpoint:
    path: /blocks
    method: GET
- name: dashboards
  endpoint:
    path: /dashboards
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: investigations
  endpoint:
    path: /investigations
    method: GET
- name: notebooks
  endpoint:
    path: /notebooks
    method: GET
- name: blocks
  endpoint:
    path: /blocks
    method: GET
- name: dashboards
  endpoint:
    path: /dashboards
    method: GET
- name: execution
  endpoint:
    path: /execution
    method: GET
- name: boto3-stubs
  endpoint:
    path: /project/boto3-stubs
    method: GET
    data_selector: records
    params: {}
- name: DynamoDBClient
  endpoint:
    path: /client
    method: GET
    data_selector: records
- name: DynamoDBServiceResource
  endpoint:
    path: /resource
    method: GET
    data_selector: records
- name: CognitoIdentityProviderClient
  endpoint:
    path: /client/cognito-idp
    method: GET
    data_selector: records
- name: fscribe
  endpoint:
    path: /fscribe
    method: GET
    data_selector: summary
    params: {}
- name: documentation
  endpoint:
    path: /mosheh.json
    method: GET
    data_selector: documentation
    params: {}
- name: documentation
  endpoint:
    path: /pypi/mosheh/json
    method: GET
    data_selector: projectName
    params: {}
- name: documentation
  endpoint:
    path: /pypi/mosheh/json
    method: GET
    data_selector: records
    params: {}
- name: mosheh_package
  endpoint:
    path: /mosheh-2.0.4.tar.gz
    method: GET
    data_selector: url
- name: mosheh
  endpoint:
    path: /pypi/mosheh
    method: GET
- name: drf-to-mkdoc
  endpoint:
    path: /pypi/drf-to-mkdoc
    method: GET
- name: mkdocs-material
  endpoint:
    path: /pypi/mkdocs-material
    method: GET
- name: markdown-mermaid-cli
  endpoint:
    path: /pypi/markdown-mermaid-cli
    method: GET
- name: mkdocs-mcp-plugin
  endpoint:
    path: /pypi/mkdocs-mcp-plugin
    method: GET
- name: mkdocs-ultralytics-plugin
  endpoint:
    path: /pypi/mkdocs-ultralytics-plugin
    method: GET
- name: mkdocs-mermaid-to-svg
  endpoint:
    path: /pypi/mkdocs-mermaid-to-svg
    method: GET
- name: neoteroi-mkdocs
  endpoint:
    path: /pypi/neoteroi-mkdocs
    method: GET
- name: mkdocs-bpmn-js
  endpoint:
    path: /pypi/mkdocs-bpmn-js
    method: GET
- name: astdoc
  endpoint:
    path: /pypi/astdoc
    method: GET
- name: vexy-mkdocs-output-as-input
  endpoint:
    path: /pypi/vexy-mkdocs-output-as-input
    method: GET
- name: vexy-mkdocs-strip-number-prefix
  endpoint:
    path: /pypi/vexy-mkdocs-strip-number-prefix
    method: GET
- name: mkdocs-publisher
  endpoint:
    path: /pypi/mkdocs-publisher
    method: GET
- name: markdown-kroki
  endpoint:
    path: /pypi/markdown-kroki
    method: GET
- name: markdown-exec
  endpoint:
    path: /pypi/markdown-exec
    method: GET
- name: markitecture
  endpoint:
    path: /pypi/markitecture
    method: GET
- name: frequenz-repo-config
  endpoint:
    path: /pypi/frequenz-repo-config
    method: GET
- name: mkdocs-include-markdown-plugin
  endpoint:
    path: /pypi/mkdocs-include-markdown-plugin
    method: GET
- name: mkdocs-embed-file-plugin
  endpoint:
    path: /pypi/mkdocs-embed-file-plugin
    method: GET
- name: mkdocs-material-with-iconpacks
  endpoint:
    path: /pypi/mkdocs-material-with-iconpacks
    method: GET
- name: plugin_development
  endpoint:
    path: /yt-dlp/plugins
    method: GET
    data_selector: plugins
    params: {}
- name: embedding_yt_dlp
  endpoint:
    path: /yt-dlp/embed
    method: GET
    data_selector: embedding
    params: {}
- name: sponsorblock
  endpoint:
    path: /sponsorblock
    method: GET
- name: youtube
  endpoint:
    path: /youtube
    method: GET
- name: generic
  endpoint:
    path: /generic
    method: GET
    data_selector: records
- name: youtubepot-webpo
  endpoint:
    path: /youtubepot-webpo
    method: GET
    data_selector: records
- name: youtubetab
  endpoint:
    path: /youtubetab
    method: GET
    data_selector: records
- name: vikichannel
  endpoint:
    path: /vikichannel
    method: GET
    data_selector: records
- name: niconicochannelplus
  endpoint:
    path: /niconicochannelplus
    method: GET
    data_selector: records
- name: tiktok
  endpoint:
    path: /tiktok
    method: GET
    data_selector: records
- name: jiocinema
  endpoint:
    path: /jiocinema
    method: GET
    data_selector: records
- name: release_files
  endpoint:
    path: /releases/latest/download/yt-dlp
    method: GET
    data_selector: downloads
    params: {}
- name: video
  endpoint:
    path: /download/video
    method: GET
    data_selector: video_data
- name: format_selection
  endpoint:
    path: /format/selection
    method: GET
    data_selector: formats
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: video_data
- name: player_client
  endpoint:
    path: youtube:player_client
    method: GET
- name: smart-terminal-ai
  endpoint:
    path: /pypi/smart-terminal-ai
    method: GET
- name: codeflow-cli
  endpoint:
    path: /pypi/codeflow-cli
    method: GET
- name: gto
  endpoint:
    path: /pypi/gto
    method: GET
- name: bijux-cli
  endpoint:
    path: /pypi/bijux-cli
    method: GET
- name: claude-statusline
  endpoint:
    path: /pypi/claude-statusline
    method: GET
- name: pytoma
  endpoint:
    path: /pypi/pytoma
    method: GET
- name: developer-tools-mcp
  endpoint:
    path: /pypi/developer-tools-mcp
    method: GET
- name: llmswap
  endpoint:
    path: /pypi/llmswap
    method: GET
- name: devhub-tools
  endpoint:
    path: /pypi/devhub-tools
    method: GET
- name: pacc-cli
  endpoint:
    path: /pypi/pacc-cli
    method: GET
- name: loggerXio
  endpoint:
    path: /pypi/loggerXio
    method: GET
- name: ai-rulez
  endpoint:
    path: /pypi/ai-rulez
    method: GET
- name: lgtm-ai
  endpoint:
    path: /pypi/lgtm-ai
    method: GET
- name: emolog
  endpoint:
    path: /pypi/emolog
    method: GET
- name: storm-checker
  endpoint:
    path: /pypi/storm-checker
    method: GET
- name: blobify
  endpoint:
    path: /pypi/blobify
    method: GET
- name: lmstrix
  endpoint:
    path: /pypi/lmstrix
    method: GET
- name: llm-code-context-generator
  endpoint:
    path: /pypi/llm-code-context-generator
    method: GET
- name: dkb
  endpoint:
    path: /pypi/dkb
    method: GET
- name: smart-commits-ai
  endpoint:
    path: /pypi/smart-commits-ai
    method: GET
- name: stats
  endpoint:
    path: /stats
    method: GET
    data_selector: records
- name: books
  endpoint:
    path: /books
    method: GET
    data_selector: records
- name: docs
  endpoint:
    path: /docs
    method: GET
    data_selector: records
- name: about
  endpoint:
    path: /about
    method: GET
    data_selector: records
- name: things
  endpoint:
    path: /{user_id}/things
    method: GET
- name: things
  endpoint:
    path: /{user_id}/things
    method: GET
- name: things
  endpoint:
    path: /{user_id}/things
    method: POST
- name: things
  endpoint:
    path: /{user_id}/things
    method: GET
- name: tasks
  endpoint:
    path: /tasks.py
    method: GET
    data_selector: tasks
    params: {}
- name: tasks
  endpoint:
    path: /tasks.py
    method: GET
    data_selector: tasks
    params: {}
- name: devhub-tools
  endpoint:
    path: /pypi/devhub-tools
    method: GET
    data_selector: records
- name: api-mocker
  endpoint:
    path: /pypi/api-mocker
    method: GET
    data_selector: records
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: records
- name: player_stats
  endpoint:
    path: /api/v1/player_stats
    method: GET
    data_selector: players
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: records
- name: economy
  endpoint:
    path: /economy
    method: GET
    data_selector: records
- name: weather
  endpoint:
    path: /weather
    method: GET
    data_selector: records
- name: venue
  endpoint:
    path: /venue
    method: GET
    data_selector: records
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: records
- name: social
  endpoint:
    path: /social
    method: GET
    data_selector: records
- name: coach
  endpoint:
    path: /coach
    method: GET
    data_selector: records
- name: umpire
  endpoint:
    path: /umpire
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: geocode
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      sensor: 'false'
- name: weather_forecast
  endpoint:
    path: /forecast
    method: GET
    data_selector: responses
    params:
      latitude: 52.54
      longitude: 13.41
      hourly:
      - temperature_2m
      - precipitation
      - wind_speed_10m
      current:
      - temperature_2m
      - relative_humidity_2m
- name: weather_forecast
  endpoint:
    path: /v1/forecast
    method: GET
    data_selector: responses
    params:
      latitude: 52.54
      longitude: 13.41
      hourly:
      - temperature_2m
      - precipitation
      - wind_speed_10m
      current:
      - temperature_2m
      - relative_humidity_2m
- name: page
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: parse
    params:
      action: parse
      format: json
- name: page_summary
  endpoint:
    path: ?action=query&prop=extracts&titles=Ostrava&explaintext=1&exsectionformat=wiki
    method: GET
- name: extracts
  endpoint:
    path: /w/api.php?action=query&prop=extracts
    method: GET
    data_selector: extracts
    params: {}
- name: socks
  endpoint:
    path: /
    method: GET
    data_selector: traffic
notes:
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires an API key for access.
- Uses OAuth2 with refresh token - requires setup of connected app in Wink
- Some data may be subject to rate limits
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires user authentication and permissions for access.
- Requires Instagram account and app setup.
- Rate limits apply to API calls.
- Requires permissions for user media access
- Rate limits are enforced by the API
- Ensure to handle rate limits specified in the API documentation.
- Requires API key for access
- Some endpoints may have rate limits
- Rate limits are enforced on API calls
- Requires user permission for accessing media.
- Rate limits apply to the API calls.
- API key required for all requests
- Requires user authentication to access user data
- Rate limits apply to API calls
- Requires API key for authentication
- Some API endpoints may have rate limits
- Ensure to have the WhatsApp Business Account set up before using the API.
- Requires OAuth2 authentication for access
- OAuth2 with refresh token required for authentication
- Ensure the client has the correct permissions for data access
- Requires user authentication before accessing data
- Uses OAuth2 with refresh token — requires setup of connected app in qualys
- Some objects may return nulls in deeply nested fields
- API key must be included in the header for every request
- Requires an API key for authentication
- All endpoints return data in a JSON format
- Uses OAuth2 with refresh token — requires setup of connected app in Exotel
- Requires OAuth2 setup and correct token management
- Uses OAuth2 with refresh token - requires setup of credentials in Google Cloud Console.
- Uses OAuth2 with refresh token
- Be aware of rate limits when making API calls
- Tokens are valid for 1 hour and can be refreshed.
- Requires API key for authentication.
- Requires Amazon Seller Central account
- Use of API may be subject to Amazon's policies
- Requires OAuth2 setup with Udemy
- Rate limits apply on API calls
- Ensure to handle token expiration and refresh appropriately.
- Rate limits may apply based on API usage.
- Requires OAuth2 authentication.
- Check for rate limits on API requests.
- API has rate limits that should be considered when designing integrations.
- Requires setup of connected app in Magento
- Some endpoints may return limited data based on user permissions
- Uses OAuth2 with refresh token.
- Requires setup of connected app in SEC portal
- Some data may be delayed in reporting
- Requires user permission for data access.
- Requires proper API key and secret for access
- Requires API key and signature for authentication.
- Ensure to include valid API key in the request header.
- Requires OAuth2 setup to access user and event data.
- Ensure to enable the API in the SwitchBot app settings.
- Ensure valid API key is provided in headers.
- API key is required for all requests.
- Requires authentication setup
- Requires OAuth2 setup with Google API Console
- Integration requires proper OAuth setup.
- API may have rate limits on request frequency.
- API key is required for all requests
- API requires an API key for access.
- Requires an API key for access
- API supports real-time data retrieval.
- Requires OAuth2 setup for token management
- Be aware of rate limits for API calls
- Requires user authentication for accessing boards and pins.
- This API requires an API key for access.
- Requires setup of connected app in Visier
- Ensure correct scopes are set for API access
- Requires user authorization for certain actions
- Requires setup of connected app in pulse.eco
- Requires a valid OAuth2 token for access
- Rate limits may apply based on account type
- Requires Azure AD application registration.
- API supports various data formats including JSON and CSV.
- Requires OAuth2 authentication setup
- API may have rate limits
- Requires a valid OAuth token for access
- Rate limits may apply
- Requires OAuth2 authentication with an access token
- Ensure the client has the correct scopes to access required endpoints
- Rate limits apply based on the subscription plan.
- API rate limits apply, check the documentation for details.
- Requires setup of OAuth2 credentials in the API dashboard
- Requires setup of OAuth2 in Zoho Developer Console
- Requires a valid Facebook app and access tokens to function.
- Requires OAuth2 setup with Trulia API
- Requires OAuth2 setup with flightaware account.
- Ensure to check API limits.
- Requires setup of connected app in school-mosreg
- Requires user authentication to access user-specific data.
- Uses OAuth2 with refresh token — requires setup of Google Cloud project
- Rate limits apply for API calls
- Pentest tool for bypassing restricted access using various techniques
- Obtain SecretId and SecretKey from Tencent Cloud Console
- Default region is optional
- The Abstract GUI module provides a dynamic and abstract approach to manage PySimpleGUI
  windows and events.
- Installation via pip by running the command pip install abstract_gui.
- You can install this module via pip by running the command `pip install abstract_gui`.
- AI-powered smart contract security analysis framework
- Chainlit is now community-maintained.
- As of May 1st 2025, the original Chainlit team has stepped back from active development.
- Requires Python >=3.12
- No Travis.
- No coveralls.
- All the Rapid APIs we use have free tier usage. You need to subscribe to those API
  providers in order to have the executable test environment setup but it will be
  free of charge!
- Uses API key for authentication if the endpoint is protected
- Ensure your dataset follows the expected structure
- Uses Bearer token for authentication - set as environment variable
- FFmpeg is required and must be installed before using WhisperLiveKit
- For HTTPS support, use 'wss://' instead of 'ws://' in WebSocket URL
- Modular serialisation and management package for handling the running of functions
  on remote machines
- This module abstracts away so of the formatting of the logging module so that the
  code it is added to doesn't have to be verbose.
- This modules is mainly used in my personal projects and therefore the abstractions
  are what I find most useful.
- Both the model under test and the judge model must be deployed locally before running
  evaluations.
- Each evaluation requires its own judge model to be deployed by the user, e.g. on
  http://localhost:8001.
- Both models should be accessible via HTTP API endpoints
- You need to authenticate to the Hugging Face Hub as some datasets or models might
  need to be downloaded during evaluation.
- Model must be deployed as an endpoint with a NIM-compatible API.
- Uses API key for authentication.
- Supports various evaluation tasks.
- Uses environment variables for configuration.
- 'Common markers used in this repo include: smoke, mcp, plugin, e2e, regression,
  ui.'
- Access to the required CodeMie environment and credentials
- Some useful PyTorch models, circa 2025
- This project is in active development. The API is subject to change and breaking
  changes may occur. Package may not work until first stable release (1.0.0).
- LNURL implementation for Python.
- 'Developers can force strict RFC3986 validation for the URLs that the library encodes/decodes,
  using this env var: LNURL_STRICT_RFC3986 = "0" by default (False)'
- 'If you see an error like: ''ruffit'' is not recognized as the name of a cmdlet,
  function, script file, or operable program.'
- This usually means the Python Scripts directory is not in your PATH, or you are
  not in the correct virtual environment.
- The Vital Python library provides access to the Vital API from applications written
  in Python.
- To ensure future compatibility, avoid exhaustive matching on enum values.
- NVIDIA Eval Factory utilize a client-server communication architecture to interact
  with the model.
- The model must be deployed as an endpoint with a NIM-compatible API.
- This project is licensed under the terms of the MIT license
- Go to your account settings to verify that your API key have admin permissions.
- If you are using macOS you will need to open a virtual environment for your project
  first.
- Wind-AE is a forward model that solves the energy conservation, momentum conservation,
  and ionization equilibrium equations at the substellar point.
- Wind-AE requires Python >=3.13
- 'Warning: currently only PostgreSQL is supported'
- A comprehensive and intelligent employee scheduling system designed specifically
  for Network Operations Centers (NOC) and similar 24/7 operations.
- Install the package from PyPI using pip.
- Built with advanced constraint programming using Google OR-Tools.
- Uses advanced optimization algorithms for scheduling
- Automatically considers employee availability and cultural requirements
- No employee data is stored permanently
- All processing happens locally or on your secure servers
- Generated schedules can be exported and deleted from the algorithm
- No external data transmission required
- Uses advanced constraint programming using Google OR-Tools.
- Requires python>=3.10
- An Open-Source Library for Frequency-Domain Differentiable Audio Processing
- Crypto-Pandas can be installed on Python 3.11~3.13.
- Requires Python 3.8+ and pipx installed on your system.
- A CLI tool to generate a FastAPI project with a Repo-Service-Controller architecture.
- Requires Python 3.8+.
- A package for accessing and analysing MalariaGEN data.
- No requirements were recorded.
- Predicting protein-protein interactions and structures from multiple sequence alignments.
- This is a standalone MCP (Model Context Protocol) server that exports the CAMEL
  Terminal Toolkit functionality.
- Execute shell commands in managed sessions
- Create and manage multiple shell sessions
- Restrict dangerous operations and enforce working directory boundaries
- Uses MCP protocol to execute shell commands safely.
- A MkDocs plugin to generate an interactive graph of your documentation.
- Designed for Material for MkDocs themes.
- APScheduler is not a daemon or service itself, nor does it come with any command
  line tools.
- Add support for UTF-8 in unquoted values
- Add support for trailing comments
- Add backslashes support in values
- Add support for newlines in values
- Drop Python 3.3 support
- Requests officially supports Python 3.9+.
- Rich is a Python library for rich text and beautiful formatting in the terminal.
- Rich works with Linux, macOS and Windows.
- Rich works with Linux, macOS and Windows. True color / emoji works with new Windows
  Terminal, classic terminal is limited to 16 colors.
- Rich requires Python 3.8 or later.
- Rich works with Linux, macOS and Windows. True color / emoji works with new Windows
  Terminal, classic terminal is limited to 16 colors. Rich requires Python 3.8 or
  later.
- Cross-platform library for retrieving information on running processes and system
  utilization.
- Compatible with Python 2.7.
- Cross-platform lib for process and system monitoring in Python.
- cryptography is a package which provides cryptographic recipes and primitives to
  Python developers.
- Supports Python 3.7+ and PyPy3 7.3.11+.
- Easily download, build, install, upgrade, and uninstall Python packages
- Collection of utilities for publishing packages on PyPI
- There is no warranty for the program, to the extent permitted by applicable law.
- This program is distributed in the hope that it will be useful, but without any
  warranty.
- This project is in maintenance mode. Projects using Python 3.9 or later are best
  served by using the timezone functionality now included in core Python and packages
  that work with it such as tzdata.
- Offsets from UTC are rounded to the nearest whole minute, so timezones such as Europe/Amsterdam
  pre 1937 will be up to 30 seconds out.
- Projects using Python 3.9 or later should be using the support now included as part
  of the standard library, and third party packages work with it such as tzdata.
- This library differs from the documented Python API for tzinfo implementations;
  if you want to create local wallclock times you need to use the localize() method
  documented in this document.
- Projects using Python 3.9 or later should be using the support now included as part
  of the standard library.
- hex-conversion needs a working and accessible objcopy
- elf-supports needs shepherd-core[elf] installs pwntools-elf-only
- A library that allows you to easily mock out tests based on AWS infrastructure
- A performant type checker for Python
- Pyre can analyze codebases with millions of lines of code incrementally
- By default, any fields in your dataclass that use `default` or `default_factory`
  will have the values filled with the provided default, if the corresponding field
  is missing from the JSON you're decoding.
- This library provides a simple API for encoding and decoding dataclasses to and
  from JSON.
- 'Performance note: .schema() is not cached (it generates the schema on every call),
  so if you have a nested Data Class you may want to save the result to a variable
  to avoid re-generation of the schema on every usage.'
- LibCST requires Python 3.9+
- We recommend installing the latest stable release from PyPI
- LibCST parses Python 3.0 -> 3.13 source code as a CST tree that keeps all formatting
  details.
- It's useful for building automated refactoring (codemod) applications and linters.
- LibCST requires Python 3.9+ and can be easily installed using most common Python
  packaging tools.
- Type system extensions for use with the pyre type checker
- Pretty-print tabular data in Python, a library and a command-line utility.
- python-tabulate is a library and a command-line utility for pretty-printing tabular
  data in Python.
- Pretty-print tabular data
- Tomli is a Python library for parsing TOML.
- It is fully compatible with TOML v1.0.0.
- A version of Tomli, the `tomllib` module, was added to the standard library in Python
  3.11 via PEP 680.
- Requires Python >=3.9
- Requires Python 3.8.
- pyvoicelib requires Python 3.6+.
- Requires email and password for authentication.
- All the methods defined in Dataset will return response, error, and message.
- Since version 2.0 ftw.solr no longer depends on collective.solr. Instead it provides
  it's own Solr integration using Solr's REST API.
- ftw.solr requires Apache Solr 7.0 or higher.
- By default, ftw.solr will do full text extraction by passing the blob's filesystem
  path to the Solr Cell extract handler.
- Defining the host is optional and defaults to http://localhost:59999
- 'Fixed header: From version 2.1, the header is fixed (always visible)'
- 'Dashboard table sticky header: From version 2.22, the table header is sticky'
- From version 2.1, the header is fixed (always visible)
- From version 2.22, the table header is sticky (will be sticked to the page header
  when scrolling down)
- Parameter-Efficient Fine-Tuning (PEFT) methods enable efficient adaptation of large
  pretrained models.
- Parameter-Efficient Fine-Tuning (PEFT) methods enable efficient adaptation of large
  pretrained models to various downstream applications by only fine-tuning a small
  number of (extra) model parameters instead of all the model's parameters.
- DeepSpeed support is experimental for now.
- Tensors and Dynamic neural networks in Python with strong GPU acceleration
- PyTorch is a Python package that provides tensor computation with strong GPU acceleration.
- You can pass PYTHON_VERSION=x.y make variable to specify which Python version is
  to be used by Miniconda, or leave it unset to use the default.
- You can also pass the CMAKE_VARS="..." environment variable to specify additional
  CMake variables to be passed to CMake during the build.
- 'PyTorch is a Python package that provides two high-level features: Tensor computation
  (like NumPy) with strong GPU acceleration and Deep neural networks built on a tape-based
  autograd system.'
- Three-pointers to get you started
- For more complex fixes, such as adding a new module and docstrings for the new module,
  you might need to install torch from source
- PyTorch is designed to be intuitive, linear in thought, and easy to use.
- You can reuse your favorite Python packages such as NumPy, SciPy, and Cython to
  extend PyTorch when needed.
- Should be enough to install this library locally.
- 'Installation via pip: pip install safetensors'
- 'For local development: pip install .[dev]'
- 'For testing: pytest -sv tests/'
- 'bitsandbytes has the following minimum requirements for all platforms: Python 3.9+'
- Fundamental algorithms for scientific computing in Python
- Requires Python version >=3.9
- This program is free software; you can redistribute it and/or modify it under the
  terms of the GNU Library General Public License.
- This software is provided by the copyright holders and contributors 'as is' and
  any express or implied warranties are disclaimed.
- Libquadmath is free software; you can redistribute it and/or modify it under the
  terms of the GNU Library General Public License.
- SciPy is built to work with NumPy arrays and provides many user-friendly and efficient
  numerical routines.
- SciPy is built to work with NumPy arrays.
- Installation instructions can be found on the official website.
- State-of-the-art pretrained models for inference and training
- Supports Python 3.9+ and various ML frameworks
- Transformers acts as the model-definition framework for state-of-the-art machine
  learning models in text, computer vision, audio, video, and multimodal model, for
  both inference and training.
- There are over 1M+ Transformers model checkpoints on the Hugging Face Hub you can
  use.
- Custom information can be displayed and updated dynamically on tqdm bars with the
  desc and postfix arguments.
- Uses Python version >=3.7.
- This is a work in progress.
- Instantly make your loops show a smart progress meter
- Overhead is low -- about 60ns per iteration
- Instantly make your loops show a smart progress meter - just wrap any iterable with
  tqdm(iterable), and you're done!
- tqdm works on any platform (Linux, Windows, Mac, FreeBSD, NetBSD, Solaris/SunOS),
  in any console or in a GUI, and is also friendly with IPython/Jupyter notebooks.
- tqdm supports integration with pandas, Keras, Dask, and Jupyter.
- 'pytest: simple powerful testing with Python'
- Python 3.8+ or PyPy3
- The pytest framework makes it easy to write small tests, yet scales to support complex
  functional testing for applications and libraries.
- Fundamental package for array computing in Python
- 'This binary distribution of NumPy also bundles the following software:'
- This file is part of the libquadmath library.
- NumPy is the fundamental package for scientific computing with Python.
- Libquadmath is free software; you can redistribute it and/or modify it under the
  terms of the GNU Library General Public License as published by the Free Software
  Foundation; either version 2.1 of the License, or (at your option) any later version.
- YAML is a data serialization format designed for human readability and interaction
  with scripting languages.
- '🤗 Datasets is a lightweight library providing two main features: one-line dataloaders
  for many public datasets and efficient data pre-processing.'
- HuggingFace community-driven open-source library of datasets
- XProf requires access to the Internet to load the Google Chart library.
- Some charts and tables may be missing if you run TensorBoard entirely offline on
  your local machine, behind a corporate firewall, or in a datacenter.
- XProf requires access to the Internet to load the Google Chart library
- Selenium Wire is no longer being maintained.
- Disable connection persistence by default due to side effects in certain cases.
- Close connection on error rather than send 502 response to permit browser retry.
- Use SHA256 digest when creating site certificates to fix Chrome HSTS security errors.
- '**Selenium Wire is no longer being maintained. Thank you for your support and all
  your contributions.**'
- Extends Selenium to give you the ability to inspect requests made by the browser.
- Captured requests and responses are stored in the system temp folder by default.
- Using a SOCKS proxy is the same as using an HTTP based one but you set the scheme
  to socks5.
- Authentication is handled by botocore, see Boto3 documentation.
- You may have errors due to improperly formatted configuration.
- Utility functions from Rubin Observatory Data Management for the Legacy Survey of
  Space and Time (LSST).
- Astropy is licensed under a 3-clause BSD style license
- Python helpers to limit the number of threads used in the threadpool-backed of common
  native libraries used for scientific computing and data science.
- Uses Python helpers to limit the number of threads used in the threadpool-backed
  of common native libraries used for scientific computing and data science
- Matplotlib is a comprehensive library for creating static, animated, and interactive
  visualizations in Python.
- This package provides sample loggers.
- Aligned is still in active development, so changes are likely.
- Open edX Events from Hooks Extensions Framework
- Open edX Events from Hooks Extensions Framework.
- The Open edX Events component is a Python library which doesn't need independent
  deployment.
- EventsMetadata minorversion is now fully optional, and doesn't need to be supplied
  when initializing to get the default of 0.
- nbdev docs lookup for Dyalog APL
- nbdev docs lookup for the python standard library, scipy, pandas, numpy, django,
  pytorch, sphinx, and APL.
- nbdev docs lookup for scipy
- This is a routelit library that provides a Python builder API that maps to a React
  client powered by Mantine components.
- A Flask adapter for the RouteLit framework, enabling seamless integration of RouteLit's
  reactive UI components with Flask web applications
- The Textplumber library is intended to make it easier to build text classification
  pipelines with Sci-kit learn.
- Textplumber is in active development.
- Many of Textplumber’s pipeline components require a SpaCy language model.
- 'WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT!'
- Production-ready GraphQL API framework for PostgreSQL with CQRS, JSONB optimization,
  and type-safe mutations.
- '4-100x Faster: Pre-compiled queries outperform traditional GraphQL servers.'
- 'Zero Network Overhead: Built-in PostgreSQL caching eliminates external cache dependencies.'
- 'True Multi-tenancy: Complete isolation with per-tenant cache and domain versioning.'
- All views must return data in a JSONB column
- FraiseQL requires PostgreSQL 14+ with JSONB support.
- CamelForge enables database-native camelCase transformation for small queries.
- Production-ready GraphQL API framework for PostgreSQL with CQRS
- FraiseQL is a Python framework that generates GraphQL APIs by connecting Python
  type definitions to PostgreSQL database views and functions.
- FraiseQL is optimized for PostgreSQL's advanced features.
- Production-ready GraphQL API framework for PostgreSQL with CQRS, JSONB optimization,
  and type-safe mutations
- If you encounter errors during API calls, the client will raise appropriate exceptions
  (e.g., PermissionError for authentication issues, requests.exceptions.HTTPError
  for API errors).
- If you want to get objects from demo or dev, you must use a client.
- You can find your API key on https://www.data.gouv.fr/fr/admin/me/ (don't forget
  to change the prefix to get the key from the right environment).
- Uses API key for authentication
- If you want to get objects from demo or dev, you must use a client
- A modern, high-performance Python web framework built for async applications.
- NeutronAPI provides everything you need to build robust APIs quickly.
- NeutronAPI provides comprehensive OpenAPI 3.0 and Swagger support.
- Documentation hosting is completely optional and under your control
- Documentation hosting is completely optional and under your control.
- 'NeutronAPI provides everything you need to build robust APIs quickly: universal
  dependency injection, comprehensive type support, database models with migrations,
  background tasks, and an intuitive command-line interface.'
- Designed for performance, developer experience, and production readiness.
- NeutronAPI includes comprehensive OpenAPI 3.0 and Swagger support with automatic
  spec generation.
- NeutronAPI provides a modern, high-performance Python web framework built for async
  applications.
- 'Best practice: store your secret key as an environment variable PAYSTACK_SECRET_KEY.'
- Confluence Cloud needs to be used via token parameter.
- The traditional jql method is deprecated for Jira Cloud users.
- OAuth 2 is generally simpler than OAuth 1 but comes in more flavours.
- This project provides first-class OAuth library support for Requests.
- This library adds optional Kerberos/GSSAPI authentication support and supports mutual
  authentication.
- Uses Kerberos authentication
- Requires setup of Kerberos libraries
- JMESPath allows you to declaratively specify how to extract elements from a JSON
  document.
- urllib3 is a powerful, user-friendly HTTP client for Python.
- Requires Python >=3.9.
- ApiLinker defaults to no request/response encryption and recommends HTTPS and provider-recommended
  authentication.
- Uses environment variable for API keys
- Uses YAML configuration format.
- Supports multiple authentication methods.
- Never hardcode credentials in your code or configuration files. Always use environment
  variables or secure credential stores.
- For OAuth flows, ensure credentials are stored securely and token refresh is handled
  properly.
- Use HTTPS endpoints whenever possible to protect data in transit.
- Python documentation generator
- This extension allows you to use Python 3 annotations for documenting acceptable
  argument types and return value types of functions.
- Type hints (PEP 484) support for the Sphinx autodoc extension
- Sphinx AutoAPI is a Sphinx extension for generating complete API documentation without
  needing to load, run, or import the project being documented.
- AutoAPI finds and generates documentation by parsing source code.
- HTTPX requires Python 3.8+.
- Typer is a library for building CLI applications that users will love using and
  developers will love creating.
- Typer, build great CLIs. Easy to code. Based on Python type hints.
- Bump `pydantic-core` to `v2.27.0`
- Data validation using Python type hints
- Fast and extensible, Pydantic plays nicely with your linters/IDE/brain
- Don't allow customization of `SchemaGenerator` until interface is more stable
- Remove guarding check on `computed_field` with `field_serializer`
- Bump pydantic-core to v2.27.0
- Don't allow customization of SchemaGenerator until interface is more stable
- Removed guarding check on `computed_field` with `field_serializer`
- Data validation using Python type hints.
- Fast and extensible, Pydantic plays nicely with your linters/IDE/brain.
- croniter provides iteration for the datetime object with a cron like format
- Be sure to init your croniter instance with a TZ aware datetime for this to work!
- lbc is not affiliated with, endorsed by, or in any way associated with Leboncoin
  or its services. Use at your own risk.
- A Python toolkit for advanced data processing and API interactions
- PySocks/SocksiPy only supports HTTP proxies that use CONNECT tunneling. Certain
  HTTP proxies may not work with this library.
- 'Warning: PySocks/SocksiPy only supports HTTP proxies that use CONNECT tunneling.'
- An API token from https://wokwi.com/dashboard/ci is required.
- Supports filtering, sorting, and pagination.
- Default pagination starts at page 1 with a page size of 10.
- A Python API client for interacting with the ProperProt API.
- Library for one API for many git forges. (e.g. GitHub, GitLab, Pagure).
- 'Multiple Authentication Methods: Support for client credentials, authorization
  code flow, and personal tokens.'
- Support for client credentials, authorization code flow, and personal tokens
- Supports multiple authentication methods including Personal Token.
- Extensions to the standard Python datetime module
- dateutil can be installed from PyPI using pip (note that the package name is different
  from the importable name)
- Requires Python version !=3.0.*,!=3.1.*,!=3.2.*,>=2.7
- An extremely fast Python linter and code formatter, written in Rust.
- Ruff aims to be orders of magnitude faster than alternative tools while integrating
  more functionality behind a single, common interface.
- Ruff is available as ruff on PyPI.
- Ruff can be used to replace Flake8, Black, isort, pydocstyle, pyupgrade, autoflake,
  and more.
- 'Free software: MIT license'
- Hook-style hooks for Django bulk operations like bulk_create and bulk_update.
- Uses a declarative hook system for Django bulk operations.
- Bulk operations are optimized for performance
- The HookModelMixin automatically provides BulkHookManager
- Django's bulk methods bypass signals and save(). This package fills that gap with
  hooks that behave consistently across creates/updates/deletes.
- Bulk hooks for Django bulk operations and individual model lifecycle events.
- Bulk operations trigger hooks consistently across creates, updates, and deletes.
- Handle and sanitize HTML & text emails
- Enable transaction wrapping for APIs
- Enable SQL logging
- Indent SQL queries
- Use method docstring as summary and description
- Show permissions in description
- If True, request_body and response will be empty by default if the view is action
  decorated
- Caution! It is allowed only Python >= 3.9 due to typing.
- An efficient search engine for encrypted fields in Django querysets, with support
  for parallel processing, smart batching, and result caching.
- Ideal for scenarios where you need to search data that is encrypted in the database,
  providing high performance even on large datasets.
- asgiref requires Python 3.8 or higher.
- Foreign Function Interface for Python calling C code.
- A high-level Python web framework that encourages rapid development and clean, pragmatic
  design.
- Implementation of user management and multi-tenancy for OpenWISP (built with python
  & django).
- Uses the popular networkx library under the hood
- Netdiff is a simple abstraction layer for parsing network topology data of open
  source dynamic routing protocols or any other networking software which has knowledge
  about the topology of a network.
- Requires setup of application in the App Portal
- No Warranty for the Program, to the extent permitted by applicable law.
- The GNU Affero General Public License is designed specifically to ensure that, in
  such cases, the modified source code becomes available to the community.
- A command-line tool for installing Lino in different environments.
- 'Project homepage: https://gitlab.com/lino-framework/getlino'
- 'Documentation: https://getlino.lino-framework.org/'
- 'Zibanu para Django está conformado por los siguientes paquetes: Paquete de API
  de Zibanu para Django, Paquete de Base de Datos de Zibanu para Django, Paquete de
  Marco de Trabajo REST de Zibanu para Django, Paquete de Plantillas de Zibanu para
  Django, Paquete de Utilidades de Zibanu para Django.'
- Servicio REST para listar las zonas horarias disponibles.
- Zibanu library for django projects
- Django-security-logger is library for logging input and output request. The library
  provides throttling security mechanism.
- NONE OF THE PARAMETERS ARE REQUIRED
- ADjango is a comprehensive library that enhances Django development with Django
  REST Framework (DRF) and Celery integration.
- Coverage 70%
- Uses asynchronous programming features
- Users attempting to make a payment via Paystack and Flutterwave must have a valid
  email address.
- OpenWISP RADIUS provides a web interface to a freeradius database
- Sign up for Yandex SmartCaptcha.
- Install with pip install django-yandex-captcha.
- Configure Yandex SmartCaptcha credentials in settings.py.
- This package includes several improvements to Django's `ManifestStaticFilesStorage`.
- Enhanced ManifestStaticFilesStorage for Django
- This package includes several improvements to Django's ManifestStaticFilesStorage
- Uma biblioteca Django completa para criar dropdowns pesquisáveis e customizáveis
  com funcionalidades avançadas.
- Busca em tempo real nas opções
- 'Suporte AJAX: Busca dinâmica em modelos Django'
- Suporte a seleção de múltiplas opções
- AJAX é utilizado para carregar informações do produto.
- Biblioteca Django para criar dropdowns pesquisáveis e customizáveis
- A biblioteca é distribuída sob a licença MIT.
- Biblioteca Django completa para criar dropdowns pesquisáveis e customizáveis.
- Suporte a múltiplas seleções e busca dinâmica via AJAX.
- Suporte AJAX para busca dinâmica em modelos Django
- API requires the product ID to be provided in the request.
- 'Compatibilidade: Django 2.2+ e Python 3.7+'
- Utiliza AJAX para carregamento dinâmico de dados
- Habilitar modo debug
- Verificar dropdowns inicializados
- Verificar configurações
- 'Compatibilidade: Django 2.2+ e Python 3.7+.'
- ID do produto não fornecido
- Produto não encontrado
- Esta biblioteca é distribuída sob a licença MIT.
- Includes a Django library for creating searchable dropdowns
- A Django Admin panel for browsing and inspecting Redis keys
- This application does not actually introduce any model or migrations
- No postgres/mysql models or changes required.
- This application does not actually introduce any model or migrations.
- redis-py 6.1.0 will be the last version to support Python 3.8, as it has reached
  end of life.
- redis-py 6.1.0 will be the last version of redis-py to support Python 3.8, as it
  has reached end of life.
- pytest-django allows you to test your Django project/applications with the pytest
  testing tool.
- For compatibility with older versions, use previous pytest-django releases.
- pytest xdist plugin for distributed testing, most importantly across multiple CPUs
- A simple, correct Python build frontend
- Write your documentation in Markdown and create a professional static site for your
  Open Source or commercial project in minutes – searchable, customizable, more than
  60 languages, for all devices.
- Material for MkDocs automatically adapts to perfectly fit the available screen estate,
  no matter the type or size of the viewing device.
- Python API Client for Dixa
- AI feedback is provided in English for universal compatibility and clarity.
- AI validation built into the request
- Works seamlessly with popular testing frameworks
- Webhook verification is optional but encouraged.
- The official Python library for the openai API
- Uses REST API
- The Azure API shape differs from the core API shape which means that the static
  types for responses / params won't always be correct.
- Uses OAuth2.
- The OpenAI Python library provides convenient access to the OpenAI REST API from
  any Python 3.8+ application.
- API Key should be stored in a .env file
- Library provides support for both synchronous and asynchronous usage.
- The official Python library for the anthropic API
- Requires Python 3.8+
- This library provides convenient access to the Anthropic REST API from any Python
  3.8+ application.
- We do not recommend setting a large `max_tokens` values without using streaming.
- Some networks may drop idle connections after a certain period of time, which can
  cause the request to fail or timeout without receiving a response from Anthropic.
- Package for GeoServer rest API updated by Daniil Balabanov
- Makes working with XML feel like you are working with JSON
- A Python helper library for efficiently managing concurrent, rate-limited API requests
  to LLM providers via LiteLLM.
- To use these SDKs, you will need Client Id and Client Secret which can be looked
  up at Aspose Cloud Dashboard (free registration in Aspose Cloud is required for
  this).
- There is free quota available.
- To use these SDKs, you will need Client Id and Client Secret.
- Certifi does not support any addition/removal or other modification of the CA trust
  store content.
- PyCryptodome is a self-contained Python package of low-level cryptographic primitives.
- It supports Python 2.7, Python 3.6 and newer, and PyPy.
- Supports both client and server side of HTTP protocol.
- Supports both client and server Web-Sockets out-of-the-box and avoids Callback Hell.
- Provides Web-server with middleware and pluggable routing.
- Async http client/server framework (asyncio)
- Werkzeug doesn't enforce any dependencies.
- It can be used to build all sorts of end user applications such as blogs, wikis,
  or bulletin boards.
- FastAPI depends on Pydantic and Starlette.
- Independent TechEmpower benchmarks show FastAPI applications running under Uvicorn
  as one of the fastest Python frameworks available.
- Uvicorn is an ASGI web server implementation for Python.
- Supports HTTP/1.1 and WebSockets.
- A simple framework for building complex web applications.
- Python bindings for the Brotli compression library
- License is GNU Affero General Public License Version 3
- No warranty for the program, to the extent permitted by applicable law.
- If you cannot convey a covered work so as to satisfy simultaneously your obligations
  under this License and any other pertinent obligations, then you may not convey
  it at all.
- This module is fully asynchronous.
- Uses fresh profile on each run, cleans up on exit.
- This package provides next level webscraping and browser automation using a relatively
  simple interface.
- This is the official successor of the Undetected-Chromedriver python package.
- The MarkItDown library is a utility tool for converting various files to Markdown.
- Convert WSGI app to ASGI app or ASGI app to WSGI app.
- Pure Python. Only depend on the standard library.
- This library is for educational purposes only.
- A metasearch library that aggregates results from diverse web search services.
- The library considers duplicate providers.
- Some backends may be temporarily unavailable due to ratelimiting.
- The Werk24 Python Client requires a commercial Werk24 license to use.
- The Werk24 Python Client requires a commercial license to use.
- Pint is a Python package to define, operate and manipulate physical quantities.
- It runs in Python 3.9+ with no other dependency.
- An implementation of the WebSocket Protocol (RFC 6455 & 7692)
- Built on top of asyncio, Python's standard asynchronous I/O framework
- Asynchronous Test Framework
- Fast, lightweight, and intuitive Python framework for testing REST APIs
- Developers can make errors while coding
- General error exception messages will increase the time to find and fix these issues
- test_rest_api provides short & precise errors with exact traceback info
- Here we are purposefully making unexpected errors in tests
- Lightweight, intuitive, and beginner-friendly framework for testing REST APIs.
- Flexible authentication - Support for API keys, OAuth2, Bearer tokens
- Currently supports OpenAPI 3.x (not 2.x/Swagger)
- Authentication mapping may need customization for complex schemes
- Browser OAuth recommended for authentication
- Respects monday.com API rate limits and query complexity limits.
- Automatic handling of API rate limits and query limits following monday.com's rate
  limit policies.
- All methods provided by the MondayClient are asynchronous and should be awaited.
- Automatically handles API rate limits and query limits.
- Get an API key from firecrawl.dev
- Set the API key as an environment variable named FIRECRAWL_API_KEY or pass it as
  a parameter to the Firecrawl class.
- Zero-configuration setup for beautiful, professional documentation.
- Universal Python documentation generator with 40+ Sphinx extensions pre-configured.
- Automatically detects your project type and structure
- Configures 40+ Sphinx extensions
- Transform any Python project into beautiful, professional documentation with zero
  configuration.
- PyDevelop-Docs automatically detects your project structure and generates a complete
  Sphinx documentation setup with modern themes, extensive features, and intelligent
  API documentation.
- Currently in beta for some modes.
- The application is free, open-source, and runs on PCs with Linux, Windows 10, Windows
  11 and Mac.
- PyGPT uses the user's API key - to use the GPT models, you must have a registered
  OpenAI account and your own API key.
- When the Computer use tool is selected for an expert or when the computer-use model
  is chosen, all other tools will not be available for that model.
- Ollama models are not supported in this mode.
- Plugins works best with GPT-4 models.
- Please use autonomous mode with caution! - this mode, when connected with other
  plugins, may produce unexpected results!
- Setting the iterations option to 0 activates an infinity loop which can generate
  a large number of requests and cause very high token consumption, so use this option
  with caution!
- Configuration files are located in the user's work directory.
- The application requires an active API key that must be input into the program.
- Docker must be installed and running to use IPython in sandbox mode.
- Always remember to enable the + Tools option to allow execute commands from the
  plugins.
- Uses voice control features for accessibility.
- Use Responses API instead of ChatCompletions API in Agent mode.
- Use Responses API instead of ChatCompletions API in Experts mode (master).
- Use Responses API instead of ChatCompletions API for Expert instances (slave models).
- The application requires a registered OpenAI account and an active API key.
- Currently in beta.
- Image generation requires plugin enabled.
- Starting from version 2.5.97, you can assign and use Experts in all of the agent
  types.
- Use Docker to run IPython in sandbox mode.
- Supports token usage calculation for improved control.
- The application requires a registered OpenAI account and your own API key.
- Local models do not require any API keys.
- 'Configuration files are located in the user''s work directory within the following
  subdirectory: {HOME_DIR}/.config/pygpt-net/'
- When using Computer use mode, do not enable the Mouse and Keyboard plugin as it
  is already connected.
- Use IPython in sandbox mode requires Docker to be installed.
- Added beta support for disabled people and voice control.
- Voice control can be activated globally or by using the Voice control (inline) plugin.
- Custom data loaders must inherit from BaseLoader
- Custom plugins and LLM wrappers can be passed directly to the launcher
- Requires setup of connected app in OpenAI
- Local models do not require any API keys
- To use IPython in sandbox mode, Docker must be installed on your system.
- 'Default: False'
- 'Default: chat.'
- 'Default: True'
- The data loader must be an instance of `pygpt_net.provider.loaders.base.BaseLoader`.
- You can review the code of the built-in loaders in `pygpt_net.provider.loaders`
  and use them as examples when creating a custom loader.
- The application requires the user's own API key to use the GPT models.
- Use data loaders from LlamaIndex for file reading (`read_file` command).
- If enabled, model will be able to index file or directory using LlamaIndex (persistent
  index).
- Automatically append current working directory to `sys_exec` command.
- Both OpenAI TTS and OpenAI Whisper use the same single API key provided for the
  OpenAI API, with no additional keys required.
- SMTP Host is required for email service setup.
- 'SMTP Port (Inbox) default: 995.'
- 'SMTP Port (Outbox) default: 465.'
- API keys are required for various models and APIs.
- Manual configuration files are located in the user's work directory.
- You can overwrite CSS and locales with your own files.
- This application is not officially associated with OpenAI.
- Users are reminded to be mindful of token usage.
- This tool implements 30 out of 46 total API endpoints.
- Recommended to test commands with small datasets before large-scale usage.
- Multiple Authentication Methods - API Key, Bearer Token, and Azure AD support
- Automatic pagination for large result sets
- 'Supports multiple authentication methods: API Key, Bearer Token, and Azure AD'
- Supports multiple authentication methods including API Key, Bearer Token, and Azure
  AD.
- Automatic pagination for large result sets.
- This code is designed to work with VibrationVIEW software, which is a commercial
  product. Users of this Software must have a valid license for VibrationVIEW software
  to use this Software for its intended purpose.
- Requires Windows operating system (compatible with Windows 10 and Windows 11)
- VibrationVIEW software installed
- VibrationVIEW automation option (VR9604) - OR - VibrationVIEW may be run in Simulation
  mode without any additional hardware or software
- Python 3.7 or higher required
- Binary releases are no longer supported.
- You should install pywin32 via pip.
- The docs are a long and sad story, but there's now an online version of the helpfile
  that ships with the installers.
- Feel free to open issues for all bugs (or suspected bugs) in pywin32.
- There is a post-install script which should not be run inside virtual environments.
- Type annotations for boto3 Route53RecoveryControlConfig 1.40.14 service generated
  with mypy-boto3-builder 8.11.0
- Both type checking and code completion should now work. No explicit type annotations
  required, write your boto3 code as usual.
- Type annotations for boto3 Route53RecoveryControlConfig 1.40.14 compatible with
  VSCode, PyCharm, Emacs, Sublime Text, mypy, pyright and other tools.
- Type annotations for boto3 SageMaker 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Type annotations for boto3 PinpointSMSVoiceV2 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Type annotations for boto3 EKS 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Type annotations for boto3 DynamoDB 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Type annotations for boto3 DynamoDB 1.40.14 compatible with various IDEs.
- Type annotations for boto3 KinesisAnalyticsV2 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Due to slow PyCharm performance on `Literal` overloads (issue PY-40997), it is recommended
  to use [types-boto3-lite] until the issue is resolved.
- Due to slow PyCharm performance on Literal overloads (issue PY-40997), it is recommended
  to use types-boto3-lite until the issue is resolved.
- If you experience slow performance and high CPU usage, try to disable PyCharm type
  checker and use mypy or pyright instead.
- Due to slow PyCharm performance on `Literal` overloads (issue PY-40997), it is recommended
  to use [types-boto3-lite](https://pypi.org/project/types-boto3-lite/) until the
  issue is resolved.
- If you experience slow performance and high CPU usage, try to disable `PyCharm`
  type checker and use [mypy](https://github.com/python/mypy) or [pyright](https://github.com/microsoft/pyright)
  instead.
- 'To continue using `PyCharm` type checker, you can try to replace `types-boto3`
  with [types-boto3-lite](https://pypi.org/project/types-boto3-lite/):'
- Type annotations for boto3 Route53RecoveryControlConfig 1.40.14 compatible with
  various IDEs.
- Both type checking and code completion should now work. No explicit type annotations
  required, write your `boto3` code as usual.
- Due to slow PyCharm performance on `Literal` overloads (issue PY-40997), it is recommended
  to use types-boto3-lite until the issue is resolved.
- Type annotations for boto3 PinpointSMSVoiceV2 1.40.14 compatible with various IDEs.
- Type annotations for boto3 KinesisAnalyticsV2 service generated with mypy-boto3-builder
- Type annotations for boto3 KinesisAnalyticsV2 compatible with various IDEs.
- Type annotations for boto3 CognitoIdentityProvider 1.40.14 service generated with
  mypy-boto3-builder 8.11.0
- Type annotations for boto3 CognitoIdentityProvider compatible with various IDEs.
- Type annotations for boto3 Detective 1.40.14 compatible with various IDEs and tools.
- Type annotations for boto3 Detective 1.40.14 compatible with various IDEs.
- Generated with mypy-boto3-builder 8.11.0.
- Generated with mypy-boto3-builder 8.11.0
- Type annotations for boto3 EKS 1.40.14 compatible with VSCode, PyCharm, Emacs, Sublime
  Text, mypy, pyright and other tools.
- Type annotations for boto3 DataZone 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Due to slow PyCharm performance on Literal overloads, it is recommended to use types-boto3-lite
  until the issue is resolved.
- Fully automated mypy-boto3-builder carefully generates type annotations for each
  service.
- Type annotations for boto3 Detective 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Type annotations for boto3 Detective 1.40.14 compatible with various IDEs
- Type annotations for boto3 BedrockRuntime 1.40.14 compatible with various IDEs.
- Type annotations for boto3 BedrockRuntime 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Type annotations for boto3 Billing 1.40.14 service generated with mypy-boto3-builder
  8.11.0
- Type annotations for boto3 Billing 1.40.14
- Type annotations for boto3 CognitoIdentityProvider 1.40.14 compatible with various
  IDEs.
- Modern terminal HTTP/TCP latency monitoring tool with real-time visualization.
- Supports HTTP and TCP protocols.
- Uses Bearer tokens and basic auth support.
- Cross-platform CLI tool to analyze and summarize project structures with SOLID design
  patterns
- Mosheh, automatic and elegant documentation of Python code with MkDocs.
- Designed for modern Python — fully type-hint-aware and built using the latest Python
  best practices.
- Designed for modern Python — fully type-hint-aware and built using the latest Python
  best practices
- Easy to embed into CI/CD pipelines or project scaffolds for automatic documentation
  generation
- No advanced knowledge required — document any Python codebase effortlessly
- Automatic and elegant documentation of Python code with MkDocs.
- Requires Python version >=3.12.
- A command-line tool that draws basic graphs in the terminal.
- Requires Python 3.7+, install from PyPI project
- Some links in this document will not work since this is a copy of the README.md
  from Github
- You may also use --update-to <repository> (<owner>/<repository>) to update to a
  channel on a completely different repository. Be careful with what repository you
  are updating to though, there is no verification done for binaries from different
  repositories.
- You can configure yt-dlp by placing any supported command line option in a configuration
  file.
- Python versions 3.9+ (CPython) and 3.11+ (PyPy) are supported.
- Options in a configuration file are just the same options aka switches used in regular
  command line calls; thus there must be no whitespace after - or --.
- You can use --ignore-config if you want to disable all configuration files for a
  particular yt-dlp run.
- yt-dlp supports only Python 3.9+ and will remove support for more versions as they
  become EOL
- The default output template is %(title)s [%(id)s].%(ext)s
- The upload dates extracted from YouTube are in UTC
- Thumbnail embedding in mp4 is done with mutagen if possible
- The simplest usage of -o is not to set any template arguments when downloading a
  single file, like in yt-dlp -o funny_video.flv "https://some/video".
- Uses special format selectors for downloading.
- Deprecation warnings regarding format selection behavior.
- Metadata modification happens before format selection, post-extraction and other
  post-processing operations.
- Some fields may be added or changed during these steps, overriding your changes.
- A feature-rich command-line audio/video downloader with support for thousands of
  sites.
- Due to post-processing (i.e. merging etc.), the actual output filename might differ.
- Options in a configuration file are just the same options aka switches used in regular
  command line calls; thus there must be no whitespace after - or --
- Supports logging in with OAuth
- Cookies can be automatically extracted from all major web browsers
- A feature-rich command-line audio/video downloader
- Requires Python versions 3.9+ (CPython) and 3.11+ (PyPy) are supported.
- Uses Python and PyInstaller for building standalone executables.
- Requires specific dependencies for optional features.
- 'Download time range: Videos can be downloaded partially based on either timestamps
  or chapters using `--download-sections`'
- 'Split video by chapters: Videos can be split into multiple files based on chapters
  using `--split-chapters`'
- To use or redistribute the dependencies, you must agree to their respective licensing
  terms.
- yt-dlp is a feature-rich command-line audio/video downloader with support for thousands
  of sites.
- Supports multiple downloaders for different protocols.
- Can specify arguments for external downloaders.
- None of the aforementioned meta fields are guaranteed to be present since this solely
  depends on the metadata obtained by the particular extractor.
- Some sequences are not guaranteed to be present, since they depend on the metadata
  obtained by a particular extractor.
- This is free and unencumbered software released into the public domain.
- Getting your API key requires logging in and creating a new API key on the Morph
  Cloud website.
- A Python SDK and CLI tool for creating, managing, and interacting with Morph Cloud
  VMs.
- Requires an account on Morph Cloud and an API key.
- Set your API key as an environment variable
- Set your API key as an environment variable.
- 'Set your API key as an environment variable: export MORPH_API_KEY="your-api-key"'
- Requires Python 3.11+.
- Lean, plug-in-driven CLI kernel
- A CLI tool to scaffold Python projects with uv
- Uses MIT License
- Run and track processes in background
- This tool supports Python 3.7 and above. Python 2.X is not supported.
- This tool is distributed under the MIT license.
- This tool supports Python 3.7 and above.
- This tool is incompatible with the AWS cloudformation-cli package due to the name
  clash.
- HCLI Core supports HTTP Basic Authentication.
- HCLI Core API Key (HCOAK) Authentication.
- HCLI Core implements a trusted integration model.
- 3rd party HCLIs running via HCLI Core MUST be trusted not to interfere with HCLI
  Core.
- Falcon is a minimalist ASGI/WSGI framework for building mission-critical REST APIs
  and microservices.
- This API only supports responses encoded as JSON.
- This API only supports requests encoded as JSON.
- Falcon is designed for building mission-critical REST APIs and microservices.
- It supports CPython 3.8+ and PyPy 3.8+.
- Falcon follows the REST architectural style with a focus on reliability, correctness,
  and performance.
- Aliens have attacked our base! We will be back as soon as we fight them off. We
  appreciate your patience.
- On some networked filesystems it might be needed to force a os.fsync() before closing
  the file so it's actually written before another client reads the file.
- Huckle requires bash with access to man pages, Python and pip.
- Supports various authentication and/or passthrough per CLI configuration.
- An old cache (pinned urls) can sometimes yield unexpected failures.
- A command line tool for managing and configuring Dexmate robot interfaces. Provides
  utilities for robot management, connection discovery, and interface configuration.
- Uses Python 3.8 or higher
- Zero dependencies
- Make sure you have a tasks.py file defined in the root of your repo.
- A magical, zero dependency, easy to use task runner with an original name.
- Taskr can be used from any sub directory of the project.
- The Swiss Army Knife for Developers - A comprehensive CLI toolkit
- 'Open source: Apache 2.0 licensed'
- The documentation provides various statistics related to player performance in sports.
- This library uses very aggressive caching due to the large data requirements.
- sportsball aims to be a library for pulling in historical information about previous
  sporting games in a standardised fashion for easy data processing.
- It's very recommended that the user uses proxies defined in the `PROXIES` environment
  variable.
- Powerful data structures for data analysis, time series, and statistics
- Python software and documentation are licensed under the Python Software Foundation
  License Version 2
- 'The source code is currently hosted on GitHub at: https://github.com/pandas-dev/pandas'
- Binary installers for the latest released version are available at the Python Package
  Index (PyPI) and on Conda.
- The official documentation is hosted on PyData.org
- A persistent cache for python requests
- Joblib has no mandatory dependencies besides Python (supported versions are 3.7+).
- Joblib has an optional dependency on Numpy (at least version 1.6.1) for array manipulation.
- Joblib includes its own vendored copy of loky for process management.
- Joblib can efficiently dump and load numpy arrays but does not require numpy to
  be installed.
- Joblib has an optional dependency on python-lz4 as a faster alternative to zlib
  and gzip for compressed serialization.
- Joblib has an optional dependency on psutil to mitigate memory leaks in parallel
  worker processes.
- This library provides a Python API for functionality provided by the Arrow C++ libraries,
  along with tools for Arrow integration and interoperability with pandas, NumPy,
  and other software in the Python ecosystem.
- Geocoder is a simple and consistent geocoding library.
- Many online providers such as Google & Bing have geocoding services.
- Python 3.6+.
- Data is transferred using FlatBuffers for efficiency.
- Uses FlatBuffers for data transfer, optimized for long time-series data.
- Function calls are necessary to access attributes due to FlatBuffers format.
- Instead of using JSON, the API client uses FlatBuffers to transfer data.
- You can also supply a list of latitude and longitude coordinates to get data for
  multiple locations.
- nba_api requires Python 3.7+ along with the requests and numpy packages.
- While pandas is not required, it is required to work with Pandas DataFrames.
- This is a python package for looking up the corresponding timezone for given coordinates
  on earth entirely offline.
- This library uses a dataset optimized for the primary use case of timezone determination
  for current/future time calculations.
- extruct is a library for extracting embedded metadata from HTML markup.
- The command line tool depends on requests, which is not installed by default when
  you install extruct.
- Requires at least Python 3.9 to install because it's using IntEnum.
- Uses HTTPS directly instead of HTTP to avoid redirect
- Unmaintained (2024-01-02)
- Python 3.8 to 3.12 supported.
- PySocks/SocksiPy only supports HTTP proxies that use CONNECT tunneling.
- Certain HTTP proxies may not work with this library.
- PySocks lets you send traffic through SOCKS and HTTP proxy servers.
- Python module which allows you to specify timeouts when calling any existing function.
- Also provides support for stoppable-threads
- Supports non-Gregorian calendar systems.
- Testing code might return different values depending on the environment's current
  date and time.
- 'Fixes: PytzUsageWarning'
- 'Improvements: Avoid repeated loop over timezones, Proofread README.rst'
- A high-level API to automate web browsers
- cChardet is high speed universal character encoding detector.
- lxml is a Pythonic, mature binding for the libxml2 and libxslt libraries.
- Running easy_install lxml==dev will install lxml from https://github.com/lxml/lxml/tarball/master#egg=lxml-dev
  if you have an appropriate version of Cython installed.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check API key and permissions'
- '404 Not Found: Verify endpoint and parameters'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint URL'
- '429 Too Many Requests: Throttle your requests'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Recheck OAuth token.'
- '404 Not Found: Resource does not exist.'
- '400 Bad Request: Invalid parameters.'
- '401 Unauthorized: Check token validity.'
- '429 Too Many Requests: Rate limit exceeded.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid access token'
- '403 Forbidden: Insufficient permissions'
- '429 Too Many Requests: You have exceeded your request rate limit.'
- '401 Unauthorized: Invalid API key.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key'
- '429 Too Many Requests: Reduce the frequency of your requests'
- '401 Unauthorized: Check your API key'
- '429 Too Many Requests: Rate limit exceeded'
- 'OAuthException: Invalid access token.'
- '400 Bad Request: Check the request parameters.'
- '403 Forbidden: The request is understood, but it has been refused.'
- '401 Unauthorized: Check API key'
- '404 Not Found: Check endpoint path'
- '403 Forbidden: Access denied for the requested resource'
- '401 Unauthorized: Invalid or expired access token'
- '401 Unauthorized: Invalid token'
- '400 Bad Request: Check for missing parameters or formatting issues.'
- '401 Unauthorized: Verify the access token and permissions.'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Invalid client credentials'
- '401 Unauthorized: Check OAuth token validity'
- '403 Forbidden: Verify user permissions'
- '500 Internal Server Error: Retry the request later'
- '401 Unauthorized: Check API key validity'
- '404 Not Found: Ensure the endpoint is correct'
- '401 Unauthorized: Check your credentials and token validity'
- 'INVALID_ARGUMENT: Check the request parameters for correctness.'
- 'NOT_FOUND: The requested resource was not found.'
- 'UNAUTHENTICATED: Check OAuth credentials and permissions.'
- '401 Unauthorized: Check your token and permissions'
- '404 Not Found: Verify the endpoint and resource'
- '401 Unauthorized: Verify your credentials and token.'
- '403 Forbidden: Check your permissions.'
- '400 Bad Request: Check your request parameters.'
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Retry after some time'
- '403 Forbidden: Check your access permissions'
- '401 Unauthorized: Recheck OAuth token validity'
- '401 Unauthorized: Validate API key or token.'
- '429 Too Many Requests: Slow down request rate.'
- 'RATE_LIMIT_EXCEEDED: Slow down requests.'
- '401 Unauthorized: Validate your credentials.'
- '401 Unauthorized: Check your API key.'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Check your API keys'
- '401 Unauthorized: Verify your authentication token.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- '401 Unauthorized: Check API key and secret'
- '401 Unauthorized: Check client credentials'
- 'EAPI: General API error'
- 'EOrder: Invalid order'
- 'ETrade: Invalid trade'
- '401 Unauthorized: Check API key validity.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Invalid API key or insufficient permissions.'
- '400 Bad Request: Check the parameters of your request.'
- '401 Unauthorized: API key is invalid or missing.'
- '400 Bad Request: Verify request parameters.'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Ensure the API key is valid.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Invalid API key'
- 'INVALID_TOKEN: Ensure that the token is valid and not expired'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of API calls per minute'
- '403 FORBIDDEN: Check user permissions for the requested resource'
- 'INVALID_TOKEN: Check the validity of the provided token.'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests made in a short period.'
- '401 Unauthorized: Check token validity'
- '404 Not Found: Verify endpoint exists'
- '403 Forbidden: Check your API key or permissions'
- '404 Not Found: Verify the endpoint and parameters'
- '429 Too Many Requests: Reduce the frequency of requests'
- '401 Unauthorized: Invalid or expired token'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Check endpoint path and parameters'
- '401 Unauthorized: Check API key.'
- '401 Unauthorized: Check your API key or token'
- '403 Forbidden: You do not have permission to access this resource'
- 'INVALID_TOKEN: Recheck OAuth tokens'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls'
- '400 BAD REQUEST: Verify request parameters'
- 'OAuthException: Invalid OAuth access token.'
- '100: Invalid parameter.'
- '401 Unauthorized: Check client ID and secret'
- '401 Unauthorized: Check your API key and permissions.'
- '401 Unauthorized: Check API key and permissions'
- '404 Not Found: Verify the passage reference'
- '403 Forbidden: Check your API key.'
- '5: User authorization failed'
- '10: User is banned'
- '100: Invalid parameter'
- '404 Not Found: Verify resource identifier'
- '401 Unauthorized: Check OAuth token'
- '404 Not Found: Check the endpoint URL'
- 'Invalid API key: Check your API key and try again.'
- '401 Unauthorized: Ensure the API key is set correctly.'
- 'ApiError: Handle any API related error'
- '401 Unauthorized: Check API key or authentication setup.'
- 'Invalid input: Ensure input parameters are correct.'
- 'API error: Handle exceptions with retry logic.'
- An executable named `terminal-toolkit-mcp` is not provided
- MCP Connection Failed
- Permission Denied Errors
- Tool Parameter Validation Errors
- IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT
  HOLDER BE LIABLE TO YOU FOR DAMAGES.
- No 'male' voice found. Using default system voice.
- speech_recognition or pyaudio ImportError
- Microphone not working
- Python version error
- '400 Bad Request: Check the request syntax.'
- No warranty for the program, to the extent permitted by applicable law.
- 'Consoles in general: require support for carriage return (CR, \r)'
- 'Nested progress bars: require support for moving cursors up to the previous line'
- 'Windows: may require the Python module colorama'
- IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'DUPLICATE_EMAIL: Email already exists'
- 'PermissionError: for authentication issues'
- 'requests.exceptions.HTTPError: for API errors'
- 'ValidationError: User ID is required'
- 'NotFound: User not found'
- '400: Validation error'
- '404: User not found'
- '401 Unauthorized: Check your credentials and permissions.'
- '401 Unauthorized: Client authentication failures will be communicated to the caller
  by returning the 401 response.'
- '401 Unauthorized: Client authentication failures'
- 'ImportError: Make sure ApiLinker is installed (`pip install apilinker`)'
- 'API Key errors: Register for a free API key at the service you''re using'
- 'Connection errors: Check your internet connection and API endpoint URL'
- 'TypeError: Make sure you''re passing the correct data types to functions'
- 'ConnectionError: Failed to establish connection to api.example.com'
- 'AuthenticationError: Invalid credentials'
- 'KeyError: ''Field not found in source data: user_profile'''
- 'ValueError: Invalid data for transformer ''iso_to_timestamp'''
- Fix `NameError` when using `validate_call` with PEP 695 on a class
- Fix `IncEx` type alias definition
- '403 Forbidden: Try reducing the request frequency or using a clean proxy.'
- 'Sent invalid data: Unexpected data has been received from the server.'
- 'Connection closed unexpectedly: The proxy server unexpectedly closed the connection.'
- 'Bad proxy type: The type of the proxy supplied to the set_proxy function was not
  one of SOCKS4/SOCKS5/HTTP.'
- 'Bad input: The connect() method was called with bad input parameters.'
- 'Sent invalid data: unexpected data has been received from the server.'
- 'Bad input: The connect() method is called with bad input parameters.'
- 'Authentication is required: This will happen if you use a SOCKS5 server which requires
  authentication without providing a username/password.'
- 'All offered authentication methods were rejected: This will happen if the proxy
  requires a special authentication method which is not supported by this module.'
- 'Unknown username or invalid password: Self descriptive.'
- 'Invalid pagination parameters: Ensure ''page'' is >=1 and ''per_page'' is between
  1 and 100.'
- 'ValueError: Account cannot have negative balance'
- 'ValueError: Cannot set negative balance'
- No requirements were recorded.
- '403 PermissionDenied: Check user permissions'
- '404 NotFound: Verify the requested resource exists'
- '405 MethodNotAllowed: Check if the HTTP method is supported'
- '406 NotAcceptable: Ensure the requested format is supported'
- '400 ParseError: Check the request data format'
- 'authentication_failed: Authentication failed'
- 'method_not_allowed: Method not allowed'
- 'not_acceptable: Not acceptable'
- 'not_found: Not found'
- 'parse_error: Parse error'
- 'permission_denied: Permission denied'
- 'unsupported_media_type: Unsupported media type'
- 'invalid: Invalid'
- 'FIELD_REQUIRED: El campo es obligatorio'
- 'CREATE_ERROR: No se ha creado el registro.'
- 'UPDATE_ERROR: El registro no ha sido actualizado.'
- 'NOT_FOUND: No hay coincidencia de registros.'
- 'DELETE_ERROR: El registro no se puede eliminar.'
- 'DATA_REQUIRED: Los datos requeridos no se encuentran.'
- 'DATABASE_ERROR: Error en la base de datos.'
- 'DATA_REQUEST_NOT_FOUND: Datos requeridos en la solicitud no encontrados.'
- 'NOT_CONTROLLED: Excepción no controlada.'
- Debugging errors in development due to the static tag not using the manifest file
- '400: ID do produto não fornecido'
- '404: Produto não encontrado'
- '404 Not Found: Verifique o ID do recurso solicitado'
- '400 Bad Request: Dados inválidos na requisição'
- 'ID do produto não fornecido: Verifique se o ID foi enviado na requisição'
- 'Produto não encontrado: Verifique se o ID é válido'
- ID do produto não fornecido
- Produto não encontrado
- 'Unauthorized: Recheck your permissions or admin access.'
- Redis server not running on 127.0.0.1:6379
- 'AssertionError: ❌ AI validation failed: Schema validation issues found.'
- 'AssertionError: AI validation failed: Schema validation issues found.'
- '400: BadRequestError'
- '401: AuthenticationError'
- '403: PermissionDeniedError'
- '404: NotFoundError'
- '422: UnprocessableEntityError'
- '429: RateLimitError'
- '>=500: InternalServerError'
- 'N/A: APIConnectionError'
- '400: Bad Request'
- '401: Authentication Error'
- '403: Permission Denied'
- '404: Not Found'
- '422: Unprocessable Entity'
- '429: Rate Limit'
- '>=500: Internal Server Error'
- 'APITimeoutError: Thrown on timeout.'
- 'General Error: Developers can make errors while coding'
- HTTP errors (4xx, 5xx) are captured and included in responses
- Invalid OpenAPI specs raise ValueError with details
- Missing required parameters are logged as warnings
- Network errors are logged and re-raised as HTTPException
- '401 Unauthorized: Check OAuth access'
- 'MondayAPIError: Raised when an error occurs during API communication with monday.com'
- 'PaginationError: Raised when item pagination fails during a request'
- 'QueryFormatError: Raised when there is a query formatting error'
- 'ComplexityLimitExceeded: Raised when the complexity limit and max retries are exceeded'
- 'MutationLimitExceeded: Raised when the mutation limit and max retries are exceeded'
- 'PermissionError: [Errno 13] Permission denied: ''/etc/httpd/conf/mime.types'''
- 'Error loading Python lib libpython3.10.so.1.0: dlopen: /lib/x86_64-linux-gnu/libm.so.6:
  version GLIBC_2.35 not found'
- 'Logging levels: By default, all errors and exceptions are logged to the file: {HOME_DIR}/.config/pygpt-net/app.log'
- Voice command recognition works based on a model, so you don't have to worry about
  saying things perfectly.
- 'ERR_VALIDACION: El parámetro ''vpd'' indica un portal no válido.'
- 'ERR_VALIDACION: Invalid parameter'
- 'NotFoundError: Project not found'
- 'AuthenticationError: Authentication failed'
- 'ValidationError: Invalid request'
- 'RateLimitError: Rate limit exceeded'
- 'ServerError: Server error'
- 'MindzieAPIException: API error'
- MindzieAPIException
- AuthenticationError
- NotFoundError
- ValidationError
- RateLimitError
- ServerError
- 'Invalid requirement: Must specify a version.'
- 'Package not found: Check the package name and version.'
- 'No video formats error: Useful for extracting metadata even if the videos are not
  actually available for download.'
- '401 Unauthorized: Recheck API key or authentication.'
- '401 Unauthorized: Recheck API key.'
- No good handling of control over request and response in cli code which can lead
  to exceptions and empty response client side.
- The hfm sample HCLI fails disgracefully when copying a remote file name that doesn't
  exist (server error).
- 'Empty request body: A valid JSON document is required.'
- 'Malformed JSON: Could not decode the request body. The JSON was incorrect or not
  encoded as UTF-8.'
- 'Request body is too large: The size of the request is too large. The body must
  not exceed 65536 bytes in length.'
- 'Missing thing: A thing must be submitted in the request body.'
- 'Service Outage: Aliens have attacked our base! We will be back as soon as we fight
  them off. We appreciate your patience.'
- 'HTTP 400: Bad Request - A valid JSON document is required.'
- 'HTTP 404: Not Found - The requested resource could not be found.'
- 'HTTP 500: Internal Server Error - An unexpected error has occurred.'
- 'Service Outage: Aliens have attacked our base! We will be back as soon as we fight
  them off.'
- 'Auth token required: Please provide an auth token as part of the request.'
- 'Authentication required: The provided auth token is not valid. Please request a
  new token and try again.'
- 'Sent invalid data: Unexpected data received from the server.'
- 'Connection closed unexpectedly: Proxy server closed the connection.'
- 'Bad proxy type: The type of the proxy specified was not valid.'
- 'Bad proxy type: The type of the proxy supplied to the set_proxy function was not
  valid.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - User
  - Media
  - InstagramGraphAPI
  - OAuthToken
  - App
  - WhatsApp Business Account
  - SPAPI OAuth 2.0
  - OauthClient
  - Authorization
  - OAuth2
  - OAuth2Client
  - RefreshToken
  - API-Key
  - API-Sign
  - Token
  - AuthorizationCode
  - Oauth2Token
  - ClientSecret
  - ApiKey
  - Dataset
  - API
  - Application
  - Middleware
  - Confluence
  - Jira
  - Bitbucket
  - ServiceDesk
  - Insight
  - Xray
  - Bamboo
  - HTTPKerberosAuth
  - PersonalToken
  - ClientCredentials
  - Client Id
  - Client Secret
  - oauth2
  - API Keys
  - AuthType
  - Session
  - SageMakerClient
  - hco
  - HTTP Basic Auth
  - HCLI Core API Key Authentication (HCOAK)
  - Oauth2
client:
  base_url: https://files.pythonhosted.org
  headers:
    Accept: application/json
source_metadata: null
