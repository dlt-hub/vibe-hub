resources:
- name: expand_image
  endpoint:
    path: /v1/flux-pro-1.0-expand
    method: POST
    data_selector: id
    params: {}
- name: expand_image
  endpoint:
    path: /v1/flux-pro-1.0-expand
    method: POST
    data_selector: id
    params: {}
- name: prompting_guide
  endpoint:
    path: /guides/prompting_summary
    method: GET
    data_selector: records
- name: get_result
  endpoint:
    path: /v1/get_result
    method: GET
    data_selector: result
    params:
      id: string
- name: get_result
  endpoint:
    path: /v1/get_result
    method: GET
    data_selector: result
    params:
      id: string
- name: flux-kontext-pro
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: result
    params: {}
- name: flux-kontext-max
  endpoint:
    path: /v1/flux-kontext-max
    method: POST
    data_selector: result
    params: {}
- name: flux-pro-1.1-ultra
  endpoint:
    path: /v1/flux-pro-1.1-ultra
    method: POST
    data_selector: result
    params: {}
- name: flux-pro-1.1
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: result
    params: {}
- name: flux-pro
  endpoint:
    path: /v1/flux-pro
    method: POST
    data_selector: result
    params: {}
- name: flux-dev
  endpoint:
    path: /v1/flux-dev
    method: POST
    data_selector: result
    params: {}
- name: image_generation
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: result.sample
- name: flux_kontext_pro
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: id
    params: {}
- name: image_generation
  endpoint:
    path: /kontext/generate
    method: POST
    data_selector: data
    params: {}
- name: image_generation
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: id
    params: {}
- name: poll_result
  endpoint:
    path: '{polling_url}'
    method: GET
    data_selector: status
    params: {}
- name: image_generation
  endpoint:
    path: /generate/image
    method: POST
    data_selector: output
    params:
      prompt: string
      aspect_ratio: '1:1'
      seed: null
      prompt_upsampling: false
      safety_tolerance: 2
      output_format: jpeg
      webhook_url: null
      webhook_secret: null
- name: flux_kontext_pro
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: id
    params: {}
- name: flux-kontext-pro
  endpoint:
    path: /flux-kontext-pro
    method: POST
    data_selector: results
    params:
      required:
        prompt: string
        input_image: string
      optional:
        aspect_ratio: string
        seed: integer
        prompt_upsampling: boolean
        safety_tolerance: integer
        output_format: string
        webhook_url: string
        webhook_secret: string
- name: flux_kontext_pro
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: result
    params: {}
- name: image_generation
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: result.sample
- name: polling_result
  endpoint:
    path: '{polling_url}'
    method: GET
    data_selector: status
- name: flux_kontext_pro
  endpoint:
    path: /flux-kontext-pro
    method: POST
    data_selector: result
    params: {}
- name: flux_pro_1_1_ultra
  endpoint:
    path: /v1/flux-pro-1.1-ultra
    method: POST
    data_selector: result.sample
    params: {}
- name: image_generation
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: result.sample
- name: flux_fill
  endpoint:
    path: /v1/flux-pro-1.0-fill
    method: POST
    data_selector: result.sample
- name: poll_results
  endpoint:
    path: ${polling_url}
    method: GET
    data_selector: result
- name: image_generation
  endpoint:
    path: /v1/flux-pro-1.1-ultra
    method: POST
    data_selector: result.sample
- name: flux_pro_fill
  endpoint:
    path: /v1/flux-pro-1.0-fill
    method: POST
    data_selector: result
    params: {}
- name: poll_results
  endpoint:
    path: /polling_url
    method: GET
    data_selector: result
    params: {}
- name: finetune
  endpoint:
    path: /v1/finetune
    method: POST
    data_selector: result
    params: {}
- name: finetune_progress
  endpoint:
    path: /v1/get_result
    method: GET
    data_selector: result
    params: {}
- name: my_finetunes
  endpoint:
    path: /v1/my_finetunes
    method: GET
    data_selector: result
    params: {}
- name: finetune_details
  endpoint:
    path: /v1/finetune_details
    method: GET
    data_selector: result
    params: {}
- name: delete_finetune
  endpoint:
    path: /v1/delete_finetune
    method: POST
    data_selector: result
    params: {}
- name: finetune_inference
  endpoint:
    path: /v1/{endpoint}
    method: POST
    data_selector: result
    params: {}
- name: finetuned_inference
  endpoint:
    path: /v1/flux-pro-1.1-ultra-finetuned
    method: POST
    data_selector: result
    params: {}
- name: polling_result
  endpoint:
    path: /v1/get_result
    method: GET
    data_selector: result
    params: {}
- name: finetune
  endpoint:
    path: /v1/finetune
    method: POST
    data_selector: finetune_id
- name: finetune_progress
  endpoint:
    path: /v1/get_result
    method: GET
    data_selector: status
- name: finetune_inference
  endpoint:
    path: /v1/flux-pro-1.1-ultra-finetuned
    method: POST
    data_selector: result
- name: flux_pro_1.1
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: result
    params: {}
- name: finetuned_inference
  endpoint:
    path: /v1/flux-pro-1.1-ultra-finetuned
    method: POST
    data_selector: id
    params: {}
- name: polling_result
  endpoint:
    path: /v1/get_result
    method: GET
    data_selector: result.sample
    params: {}
- name: image_generation
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: result
    params: {}
- name: flux_pro
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: result
    params: {}
- name: flux_pro
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: result
    params: {}
- name: flux_kontext_pro
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: id
    params: {}
- name: flux_kontext_pro
  endpoint:
    path: /v1/flux-kontext-pro
    method: POST
    data_selector: id
- name: flux_kontext_max
  endpoint:
    path: /v1/flux-kontext-max
    method: POST
    data_selector: id
    params: {}
- name: generate_image
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: id
- name: flux_kontext_max
  endpoint:
    path: /v1/flux-kontext-max
    method: POST
    data_selector: id
    params: {}
- name: generate_image
  endpoint:
    path: /v1/flux-pro
    method: POST
    data_selector: null
    params: {}
- name: generate_image
  endpoint:
    path: /v1/flux-pro-1.1
    method: POST
    data_selector: id
- name: generate_image
  endpoint:
    path: /v1/flux-dev
    method: POST
    data_selector: id
- name: generate_image
  endpoint:
    path: /flux-pro
    method: POST
    data_selector: id
    params: {}
- name: generate_image
  endpoint:
    path: /v1/flux-pro-1.1-ultra
    method: POST
    data_selector: id
- name: flux_dev
  endpoint:
    path: /v1/flux-dev
    method: POST
    data_selector: id
- name: flux-pro-1.0-fill
  endpoint:
    path: /v1/flux-pro-1.0-fill
    method: POST
    data_selector: id
    params: {}
- name: generate_image_flux_pro
  endpoint:
    path: /v1/flux-pro-1.1-ultra
    method: POST
    data_selector: id
- name: flux_pro_1_0_fill
  endpoint:
    path: /v1/flux-pro-1.0-fill
    method: POST
    data_selector: id
- name: flux_pro_1_0_canny
  endpoint:
    path: /v1/flux-pro-1.0-canny
    method: POST
    data_selector: id
    params: {}
- name: generate_image_flux_canny
  endpoint:
    path: /v1/flux-pro-1.0-canny
    method: POST
    data_selector: id
    params: {}
- name: generate_image_flux_pro_1_depth
  endpoint:
    path: /v1/flux-pro-1.0-depth
    method: POST
    data_selector: id
- name: finetune
  endpoint:
    path: /v1/finetune
    method: POST
    data_selector: <any>
    params: {}
- name: flux_pro_1.0_depth
  endpoint:
    path: /v1/flux-pro-1.0-depth
    method: POST
    data_selector: id
    params: {}
- name: generate_image_finetune
  endpoint:
    path: /v1/flux-pro-finetuned
    method: POST
    data_selector: id
- name: finetune
  endpoint:
    path: /v1/finetune
    method: POST
    data_selector: <any>
- name: flux_pro_1_0_depth_finetuned
  endpoint:
    path: /v1/flux-pro-1.0-depth-finetuned
    method: POST
    data_selector: id
    params: {}
- name: flux_pro_finetuned
  endpoint:
    path: /v1/flux-pro-finetuned
    method: POST
    data_selector: id
- name: flux_pro_1.0_canny_finetuned
  endpoint:
    path: /v1/flux-pro-1.0-canny-finetuned
    method: POST
    data_selector: id
    params: {}
- name: flux_pro_1_0_depth_finetuned
  endpoint:
    path: /v1/flux-pro-1.0-depth-finetuned
    method: POST
    data_selector: id
    params: {}
- name: flux_pro_1_0_fill_finetuned
  endpoint:
    path: /v1/flux-pro-1.0-fill-finetuned
    method: POST
    data_selector: id
    params: {}
- name: generate_image_with_flux_canny
  endpoint:
    path: /v1/flux-pro-1.0-canny-finetuned
    method: POST
    data_selector: id
    params: {}
- name: flux_pro_1_1_ultra_finetuned
  endpoint:
    path: /v1/flux-pro-1.1-ultra-finetuned
    method: POST
    data_selector: id
    params: {}
- name: flux_pro_1.0_fill_finetuned
  endpoint:
    path: /v1/flux-pro-1.0-fill-finetuned
    method: POST
    data_selector: id
    params: {}
- name: delete_finetune
  endpoint:
    path: /v1/delete_finetune
    method: POST
    data_selector: status
- name: flux_pro_1_1_ultra_finetuned
  endpoint:
    path: /v1/flux-pro-1.1-ultra-finetuned
    method: POST
    data_selector: null
- name: finetune_details
  endpoint:
    path: /v1/finetune_details
    method: GET
    data_selector: finetune_details
    params:
      finetune_id: string
- name: delete_finetune
  endpoint:
    path: /v1/delete_finetune
    method: POST
    data_selector: status
- name: my_finetunes
  endpoint:
    path: /v1/my_finetunes
    method: GET
    data_selector: finetunes
- name: finetune_details
  endpoint:
    path: /v1/finetune_details
    method: GET
    data_selector: finetune_details
    params:
      finetune_id: required
- name: my_finetunes
  endpoint:
    path: /v1/my_finetunes
    method: GET
    data_selector: finetunes
notes:
- Required range for top, bottom, left, right is 0 to 2048.
- Required range for steps is 15 to 50.
- Guidance strength required range is 1.5 to 100.
- Number of pixels to expand on each side can be between 0 and 2048.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in bfl
- Some objects may return nulls in deeply nested fields
- Test it in our playground or read our editing guide to get the most out of it.
- Some objects like Contact may return nulls in deeply nested fields
- Credits are available immediately after payment.
- Deprecated endpoints include flux-pro-1.0 and finetuning API.
- Always use the polling_url returned in responses when using the global endpoint.
- Our signed URLs are only valid for 10 minutes.
- Finetuning is available for FLUX 1.1 [pro] and FLUX.1 [pro] models only. FLUX.1
  Kontext [pro] does not support finetuning.
- When using the global or regional endpoints, you must use the polling_url returned
  in the response for checking request status.
- Simple REST API integration with [pro] and [max].
- Ensure BFL_API_KEY is set
- Our signed URLs are only valid for 10 minutes. Please retrieve your result within
  this timeframe.
- Default aspect ratio is 1:1 for images generated.
- Requires both a text prompt and an input image to work
- Our signed URLs are only valid for 10 minutes
- Requires both a text prompt and an input image to work.
- 'Enable Raw mode by setting ''raw'': true in your API request for more authentic,
  natural-looking results.'
- A successful response will be a json object containing the result.
- 'Enable Raw mode by setting "raw": true in your API request for more authentic,
  natural-looking results.'
- Uses API key for authentication — requires setup of API account
- Finetuning operations must use region-specific endpoints and cannot use the global
  or multi-cluster regional endpoints.
- You can only run inference on finetuned models in the same region where they were
  trained.
- Always use the polling_url returned in responses when using the primary global endpoint.
- Always use the polling_url returned in responses when using the global endpoint
- Generated images expire after 10 minutes and become inaccessible
- Always use the polling_url returned in responses
- Generated images expire after 10 minutes
- Use a company email address that will persist beyond individual employee tenure
- Consider generic addresses like api-admin@company.com or tech@company.com
- We currently don’t support separate usage monitoring or permissions assignment per
  API key
- Monitoring and billing is specific to one respective API account
- Always use the polling_url returned in responses when using the primary global endpoint
- We recommend separating environments (dev, staging, prod) via separate BFL API accounts.
- Maximum prompt token is 512 tokens.
- Input images can be Base64 encoded or URLs.
- Output format can be 'jpeg' or 'png'.
- Output format for the generated image can be 'jpeg' or 'png'.
- Tolerance level for input and output moderation is between 0 and 6.
- 'Required string length for webhook_url: 1 - 2083'
- 'Tolerance level for input and output moderation: 0 <= x <= 6'
- Width and height must be multiples of 32 and within the range of 256 to 1440.
- Width and height must be multiples of 32.
- Width and height must be multiples of 32 and in the range of 256 to 1440.
- Mask can be applied to alpha channel or submitted as a separate image.
- The endpoint verifies that the dimensions of the mask match the original image.
- x-key is required in the header for authorization.
- Dimensions of the mask must match the original image.
- Requires an API key for authorization
- Default steps for image generation is 50. Range is 15 to 50.
- Output format can be 'jpeg' or 'png'. Default is 'jpeg'.
- Safety tolerance level is between 0 and 6, with 0 being most strict.
- Use a Base64-encoded ZIP file for training images.
- Webhook URL is optional for notifications.
- Number of steps for the image generation process must be between 15 and 50.
- Guidance strength for the image generation process must be between 1 and 100.
- Safety tolerance level must be between 0 and 6.
- Default finetune strength is 1.1
- Default number of steps is 40
- Default guidance scale is 2.5
- Output format can be jpeg or png
- Base64-encoded ZIP file containing training images and, optionally, corresponding
  captions.
- Webhook URL is optional for receiving notifications
- The API requires an API key for authorization.
- Required fields include finetune_id, prompt, control_image.
errors:
- '422: Unprocessable Entity'
- '422: Validation error, check input parameters.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '422: Task not found'
- '429: Rate limit exceeded'
- '402: Out of credits'
- '429: Rate limit exceeded, must wait until previous tasks finish.'
- '402: Out of credits, visit the site to buy additional credits.'
- 'Generation failed: Check API key and request parameters'
- '400 Bad Request: Check the prompt and parameters.'
- '401 Unauthorized: Ensure API key is valid.'
- '429 Too Many Requests: Throttle your requests.'
- 'Generation failed: Check your API key and request format.'
- 'Generation failed: $result'
- Polling for result status failed
- '401 Unauthorized: Check your API key'
- 'Error: Generation failed'
- 'Error: Polling failed'
- 'Rate limit exceeded: Reduce request frequency.'
- 'Failed: Generation failed'
- '401 Unauthorized: Check API key'
- '401 Unauthorized: Recheck API key or token expiration'
- 'Finetune request failed: Check API key and ensure ZIP file is present'
- 'Finetune progress failed: Ensure valid finetune_id is provided'
- 'Finetune inference failed: Check finetune_id and ensure API key is valid'
- '429: Rate limit exceeded, wait and retry'
- '402: Insufficient credits. Please add credits to your account.'
- '402: Insufficient credits, please add credits to your account'
- '400 - Bad Request: There was an issue with the format or content of your request.
  Check your request parameters and ensure all required fields are properly formatted.'
- '402 - Payment Required: Your account has insufficient credits or your payment method
  needs to be updated. Add credits to your account to continue using the API.'
- '403 - Forbidden: Your API key does not have permission to access the specified
  resource.'
- '422 - Unprocessable Entity: The request you sent contains invalid request body
  or parameters.'
- '429 - Too Many Requests: You’ve exceeded the rate limits for your account.'
- '500 - Internal Server Error: An unexpected error occurred on our servers.'
- '503 - Service Unavailable: Our service is temporarily unavailable, typically due
  to maintenance or high load. Try again in a few moments.'
- '200: Successful Response'
- '422: Validation Error'
- '422: Validation error, check request parameters'
- '422: Invalid input data'
- '200: Successful response'
- '422: Unprocessable entity'
- '422: Validation errors in the request body.'
- '422: Validation error for request data'
- '422: Validation error'
- '422: Validation error for request parameters'
- '422: <any>'
- '422: Error in request'
- '422: Validation errors in the request body'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.bfl.ai
  auth:
    type: apikey
    location: header
    header_name: x-key
  headers:
    Content-Type: application/json
source_metadata: null
