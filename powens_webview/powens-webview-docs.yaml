resources:
- name: add_connection_flow
  endpoint:
    path: /{lang}/connect
    method: GET
    params:
      domain: example.biapi.pro
      client_id: client_id
      redirect_uri: redirect_uri
- name: re_auth_flow
  endpoint:
    path: /{lang}/reconnect
    method: GET
    params:
      domain: example.biapi.pro
      client_id: client_id
      redirect_uri: redirect_uri
      code: code
      connection_id: connection_id
- name: manage_connections_flow
  endpoint:
    path: /{lang}/manage
    method: GET
    params:
      domain: example.biapi.pro
      client_id: client_id
      code: code
- name: validate_payment_flow
  endpoint:
    path: /{lang}/payment
    method: GET
    params:
      domain: example.biapi.pro
      client_id: client_id
      redirect_uri: redirect_uri
      code: code
      payment_id: payment_id
- name: bank_transfer
  endpoint:
    path: /2.0/auth/webview/{lang}/transfer
    method: GET
    params:
      client_id: ''
      redirect_uri: ''
      code: ''
      state: ''
      transfer_id: ''
- name: accounts
  endpoint:
    path: /api/accounts
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: data
- name: account_ownerships
  endpoint:
    path: /users/me/account_ownerships
    method: GET
    data_selector: account_ownerships
- name: account_ownerships_by_connection
  endpoint:
    path: /users/me/connections/{connectionId}/account_ownerships
    method: GET
    data_selector: account_ownerships
- name: investments
  endpoint:
    path: /api/investments
    method: GET
    data_selector: data
- name: pockets
  endpoint:
    path: /api/pockets
    method: GET
    data_selector: data
- name: market_orders
  endpoint:
    path: /api/market-orders
    method: GET
    data_selector: data
- name: loan_amortizations
  endpoint:
    path: /api/loan-amortizations
    method: GET
    data_selector: data
- name: investments
  endpoint:
    path: /users/me/investments
    method: GET
    data_selector: investments
- name: investment_history
  endpoint:
    path: /users/me/investments/{investmentId}/history
    method: GET
    data_selector: investmentvalues
- name: unit_value_history
  endpoint:
    path: /users/me/investments/{investmentId}/security/history
    method: GET
    data_selector: history
- name: pockets
  endpoint:
    path: /users/me/investments/{investmentId}/pockets
    method: GET
    data_selector: pockets
- name: market_orders
  endpoint:
    path: /users/me/accounts/{accountId}/marketorders
    method: GET
    data_selector: marketorders
- name: loan_amortizations
  endpoint:
    path: /users/me/accounts/{accountId}/amortizations
    method: GET
    data_selector: loanamortizations
- name: subscriptions
  endpoint:
    path: /users/me/subscriptions
    method: GET
    data_selector: subscriptions
- name: documents
  endpoint:
    path: /users/me/documents
    method: GET
    data_selector: documents
- name: advisory
  endpoint:
    path: /users/me/advisory
    method: GET
    data_selector: periods
- name: user_indicator
  endpoint:
    path: /users/me/indicators
    method: GET
    data_selector: indicators
- name: webhook_events
  endpoint:
    path: /api/webhook/events
    method: POST
    data_selector: events
    params: {}
- name: aggregator_screens
  endpoint:
    path: /services/data/v1/aggregator_screens
    method: GET
    data_selector: screens
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: auth_token_init
  endpoint:
    path: /2.0/auth/init
    method: POST
- name: auth_token_code
  endpoint:
    path: /2.0/auth/token/code
    method: GET
- name: auth_token_access
  endpoint:
    path: /2.0/auth/token/access
    method: POST
- name: auth_token_revoke
  endpoint:
    path: /2.0/auth/token
    method: DELETE
- name: auth_token_renew
  endpoint:
    path: /2.0/auth/renew
    method: POST
- name: auth_service_token
  endpoint:
    path: /2.0/auth/token
    method: POST
- name: list_users
  endpoint:
    path: /2.0/users
    method: GET
- name: get_user
  endpoint:
    path: /2.0/users/{userId}
    method: GET
- name: delete_user
  endpoint:
    path: /2.0/users/{userId}
    method: DELETE
- name: connectors
  endpoint:
    path: /2.0/connectors
    method: GET
- name: connector
  endpoint:
    path: /2.0/connectors/{connectorUuid}
    method: GET
- name: update_connector
  endpoint:
    path: /2.0/connectors/{connectorUuid}
    method: PUT
- name: batch_enable_disable_connectors
  endpoint:
    path: /2.0/connectors
    method: PATCH
- name: list_connector_sources
  endpoint:
    path: /2.0/connectors/{connectorUuid}/sources
    method: GET
- name: get_connector_source
  endpoint:
    path: /2.0/connectors/{connectorUuid}/sources/{sourceId}
    method: GET
- name: update_connector_source
  endpoint:
    path: /2.0/connectors/{connectorUuid}/sources/{sourceId}
    method: PUT
- name: payment_settings
  endpoint:
    path: /api/payment_settings
    method: GET
    data_selector: payment_settings
    params: {}
- name: create_connection
  endpoint:
    path: /2.0/users/{userId}/connections
    method: POST
- name: list_connections
  endpoint:
    path: /2.0/users/{userId}/connections
    method: GET
- name: get_connection
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}
    method: GET
- name: update_connection
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}
    method: POST
- name: sync_connection
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}
    method: PUT
- name: delete_connection
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}
    method: DELETE
- name: list_sources
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}/sources
    method: GET
- name: get_connection_source
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}/sources/{sourceId}
    method: GET
- name: update_connection_source
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}/sources/{sourceId}
    method: POST
- name: list_logs
  endpoint:
    path: /2.0/users/{userId}/connections/{connectionId}/logs
    method: GET
- name: Connection
  endpoint:
    path: /api-reference/user-connections/connections
    method: GET
    data_selector: connections
- name: ConnectionSource
  endpoint:
    path: /api-reference/user-connections/connectionsources
    method: GET
    data_selector: sources
- name: bank_accounts
  endpoint:
    path: /api/v1/bank_accounts
    method: GET
- name: bank_transactions
  endpoint:
    path: /api/v1/bank_transactions
    method: GET
- name: invoices
  endpoint:
    path: /api/v1/invoices
    method: GET
- name: investments
  endpoint:
    path: /api/v1/investments
    method: GET
    data_selector: records
- name: market_orders
  endpoint:
    path: /api/v1/market-orders
    method: GET
    data_selector: records
- name: pockets
  endpoint:
    path: /api/v1/pockets
    method: GET
    data_selector: records
- name: loan_amortizations
  endpoint:
    path: /api/v1/loan-amortizations
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
- name: document_types
  endpoint:
    path: /api/v1/document-types
    method: GET
- name: connection_identity
  endpoint:
    path: /api/v1/connection-identity
    method: GET
- name: configuration
  endpoint:
    path: /2.0/config
    method: GET
- name: configuration_logs
  endpoint:
    path: /2.0/config/logs
    method: GET
- name: certificate
  endpoint:
    path: /2.0/certificate/{type}
    method: GET
- name: create_client_application
  endpoint:
    path: /clients
    method: POST
- name: list_client_applications
  endpoint:
    path: /clients
    method: GET
- name: get_client_application
  endpoint:
    path: /clients/{clientAppId}
    method: GET
- name: update_client_application
  endpoint:
    path: /clients/{clientAppId}
    method: PUT
- name: delete_client_application
  endpoint:
    path: /clients/{clientAppId}
    method: DELETE
- name: update_client_logo
  endpoint:
    path: /clients/{clientAppId}/logo
    method: POST
notes:
- If you don't provide a code, a new anonymous user will be created before a connection
  is added.
- Requires OAuth2 authentication setup.
- You must use secure HTTPS protocol, or an app-specific scheme.
- Wealth extends the scope to all other accounts (loans, savings accounts, market
  accounts, life insurances, retirement savings, company savings).
- Wealth offers a complete view of the end-user's patrimonial assets.
- Our system is able to resolve captcha automatically, but this feature is disabled
  by default.
- Real-time revenue-checking solution for better credit decisions.
- Allows online credit providers to evaluate their clients' financial profiles in
  an instant based on categorized transactions.
- Webhooks are triggered after you ask for a specific action through the API and after
  a background synchronization (every 24h by default).
- Webhook requests are emitted immediately at creation (when the related event occurs).
- Replace YOUR_DOMAIN with your actual Powens domain, without the .biapi.pro extension.
- Replace CLIENT_ID with your client application ID.
- This API is under construction and may have limited functionality.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Welcome to the webview demonstration of our API
- Uses OAuth2 with refresh token â€” requires setup of connected app in Powens
- Webhooks allow us to push real-time updates directly to you, ensuring a smoother
  and more efficient integration.
- Rate limiting ensures fair resource allocation and protecting both sandbox and production
  environments.
- This endpoint does not require authentication.
- As of Sept. 2023, the only supported validation mechanism is webauth.
- Requests require a user token for authentication.
- Deleting a connection results in permanent data loss.
- Some objects may return nulls in deeply nested fields
- API allows access to documents and related metadata.
errors:
- '400: Bad request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not found'
- '409: Conflict'
- '500: Internal server error'
- '503: Service unavailable'
- '401 Unauthorized: Invalid credentials or token expired.'
- SCARequired
- webauthRequired
- additionalInformationNeeded
- decoupled
- validating
- actionNeeded
- passwordExpired
- wrongpass
- rateLimiting
- websiteUnavailable
- bug
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'connectionLocked: For all services in relation with a sub-connection resource,
  this error indicates that the connection is in a readonly state.'
- 'missingParameter: A required parameter was omitted in the request.'
- 'invalidValue: The request is invalid, because of an unacceptable parameter or body
  property. Details are provided in the description.'
- 'methodNotAllowed: An API endpoint was called with an unsupported HTTP method.'
- 'bug: Other codes'
- 'Rate limiting: 30 call/min'
- '400: Bad Request Invalid credentials'
- '204: No Content Connection details'
- '200: OK List of connections'
- '400 Bad request: Error code when the request is invalid, e.g. the supplied parameters
  are incorrect.'
- '401 Unauthorized: Error code when the service requires authentication and the proper
  header was incorrectly provided.'
- '403 Forbidden: Error code when an authentication token with insufficient scope
  was provided to access an endpoint.'
- '404 Not found: Error code when the route was incorrect, or the resource is unknown
  for the provided authorization scope.'
- '409 Conflict: Error code when a request could not be honored because of a conflicting
  state with the API.'
- '500 Internal servor error: Error code for failures related to internal bugs.'
- '503 Service unavailable: Error code when our API is temporarily down for maintenance.'
auth_info:
  mentioned_objects:
  - auth_provider
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.powens.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.powens.com/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
