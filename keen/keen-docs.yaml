resources:
- name: incident_history
  endpoint:
    path: /history
    method: GET
    data_selector: incidents
    params: {}
- name: events
  endpoint:
    path: /events/purchases
    method: POST
    data_selector: key
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events/COLLECTION_NAME
    method: DELETE
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: created
    params:
      api_key: WRITE_KEY
- name: collections
  endpoint:
    path: /projects/PROJECT_ID/events
    method: GET
    data_selector: events
    params:
      api_key: READ_KEY
- endpoint:
    method: GET
- endpoint:
    method: PUT
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: ''
    params: {}
- name: event_collection
  endpoint:
    path: /projects/PROJECT_ID/events/COLLECTION_NAME
    method: GET
    data_selector: ''
    params:
      api_key: READ_KEY
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: results
    params:
      api_key: WRITE_KEY
- name: purchases
  endpoint:
    path: /events/purchases
    method: POST
    data_selector: created
    params:
      api_key: WRITE_KEY
- name: level_ups
  endpoint:
    path: /events/level_ups
    method: POST
    data_selector: created
    params:
      api_key: WRITE_KEY
- name: logins
  endpoint:
    path: /events/logins
    method: POST
    data_selector: created
    params:
      api_key: WRITE_KEY
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params:
      timeframe: this_7_days
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
    data_selector: result
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
    data_selector: result
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: created
- name: retrieve_access_key
  endpoint:
    path: /projects/PROJECT_ID/access_keys
    method: GET
    data_selector: access_key
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events/COLLECTION_NAME
    method: GET
    data_selector: null
    params:
      api_key: READ_KEY
- name: keys
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: null
    params: {}
- name: event_update
  endpoint:
    path: /events/update
    method: PUT
- name: event_count
  endpoint:
    path: /events/count
    method: GET
- name: count_unique
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/count_unique
    method: GET
    params:
      api_key: READ_KEY
      event_collection: COLLECTION_NAME
      target_property: TARGET_PROPERTY
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: create_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: POST
- name: get_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: GET
- name: update_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: PUT
- name: delete_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: DELETE
- name: access_keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: create_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: POST
- name: get_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
- name: update_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: PUT
- name: delete_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: DELETE
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params:
      timeframe: this_7_days
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: POST
    data_selector: result
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: GET
    data_selector: result
    params: {}
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
    params: {}
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: events
    params: {}
- name: collections
  endpoint:
    path: /projects/PROJECT_ID/events
    method: GET
    data_selector: collections
    params: {}
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: POST
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
- name: event_collections
  endpoint:
    path: /projects/PROJECT_ID/events/COLLECTION_NAME
    method: GET
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: records
- name: ip_to_geo
  endpoint:
    input:
      ip: property.containing.ip_address
      remove_ip_property: true
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: events
- name: access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: update_events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: PUT
    data_selector: response
    params: {}
- name: revoke_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: POST
    data_selector: response
    params: {}
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
- name: full_form_event_data
  endpoint:
    method: GET
- name: property_update
  endpoint:
    method: PUT
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
- name: event_collections
  endpoint:
    path: /projects/PROJECT_ID/events/COLLECTION_NAME
    method: GET
- name: multi_analysis
  endpoint:
    path: /projects/PROJECT_ID/queries/multi_analysis
    method: POST
- name: saved_query
  endpoint:
    method: PUT
    params:
      query: Parameters for the query you want to save
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: geo_filter
  endpoint:
    path: /projects/PROJECT_ID/queries/count
    method: POST
    data_selector: results
    params: {}
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params:
      timeframe: this_7_days
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
    data_selector: result
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
- name: saved_query
  endpoint:
    path: /projects/PROJECT_ID/queries/saved/QUERY_NAME
    method: PUT
    data_selector: null
    params: {}
- name: count
  endpoint:
    path: /projects/PROJECT_ID/queries/count
    method: POST
    data_selector: null
    params: {}
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
- name: projects
  endpoint:
    path: /organizations/ORG_ID/projects
    method: GET
- name: keys
  endpoint:
    path: /projects/PROJECT_ID/keys
    method: GET
- name: saved_queries
  endpoint:
    path: /projects/PROJECT_ID/queries/saved
    method: GET
- name: datasets
  endpoint:
    path: /projects/PROJECT_ID/datasets
    method: GET
- name: extractions
  endpoint:
    path: /projects/PROJECT_ID/queries/extraction
    method: POST
- name: access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
    params: {}
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: saved queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: saved_query_definition
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: GET
    data_selector: result
    params: {}
- name: queries
  endpoint:
    path: /projects/PROJECT_ID/queries
    method: GET
    data_selector: result
    params: {}
- name: saved_queries
  endpoint:
    path: /projects/PROJECT_ID/queries/saved
    method: GET
    data_selector: result
    params: {}
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params: {}
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
    params: {}
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
    data_selector: result
    params: {}
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
    data_selector: result
    params: {}
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params: {}
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: POST
    data_selector: result
    params: {}
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
    data_selector: result
    params: {}
- name: cached_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved/QUERY_NAME
    method: PUT
    data_selector: result
    params: {}
- name: cached_datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets/DATASET_NAME
    method: PUT
    data_selector: result
    params: {}
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: result
- name: queries
  endpoint:
    path: /projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: count
  endpoint:
    path: /projects/PROJECT_ID/queries/count
    method: POST
    data_selector: result
    params:
      timeframe: this_7_days
- name: multi_analysis
  endpoint:
    path: /projects/PROJECT_ID/queries/multi_analysis
    method: POST
    data_selector: result
- name: funnel
  endpoint:
    path: /projects/PROJECT_ID/queries/funnel
    method: POST
    data_selector: result
- name: saved_queries
  endpoint:
    path: /projects/PROJECT_ID/queries/saved
    method: GET
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: result
- name: queries
  endpoint:
    path: /projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: saved_queries
  endpoint:
    path: /projects/PROJECT_ID/queries/saved
    method: GET
    data_selector: result
- name: extraction_request
  endpoint:
    path: /extraction/request
    method: POST
    data_selector: results
    params:
      query: ''
      index_by: ''
      display_name: ''
- name: property_update
  endpoint:
    path: /property/update
    method: PUT
    data_selector: results
    params:
      property_name: ''
      property_value: ''
      upsert_property: false
- name: count
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/count
    method: POST
    data_selector: result
    params:
      event_collection: COLLECTION_NAME
      timeframe: this_14_days
- name: count_unique
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/count_unique
    method: POST
    data_selector: result
    params:
      event_collection: COLLECTION_NAME
      target_property: TARGET_PROPERTY
      timeframe: this_7_days
- name: funnel
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/funnel
    method: POST
    data_selector: result
- name: select_unique
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/select_unique
    method: POST
    data_selector: result
    params:
      event_collection: COLLECTION_NAME
      target_property: TARGET_PROPERTY
      timeframe: this_7_days
- endpoint:
    method: GET
- endpoint:
    method: HEAD
- endpoint:
    method: POST
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params: {}
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: POST
    data_selector: result
    params: {}
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
    data_selector: result
    params: {}
- name: cached_query
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved/QUERY_NAME
    method: PUT
    data_selector: ''
    params:
      refresh_rate: 43200
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params: {}
- name: queries
  endpoint:
    path: /projects/PROJECT_ID/queries
    method: GET
    data_selector: result
    params: {}
- name: saved_queries
  endpoint:
    path: /projects/PROJECT_ID/queries/saved
    method: GET
    data_selector: result
    params: {}
- name: datasets
  endpoint:
    path: /projects/PROJECT_ID/datasets/DATASET_NAME
    method: PUT
    data_selector: response
    params: {}
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events/COLLECTION_NAME
    method: DELETE
- name: projects
  endpoint:
    path: /organizations/ORG_ID/projects
    method: GET
    data_selector: projects
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
- name: update_project
  endpoint:
    path: /organizations/ORG_ID/projects/PROJECT_ID
    method: POST
    data_selector: updated_project
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: GET
    data_selector: result
    params:
      incremental: updated_at
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
    params: {}
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: create_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: POST
- name: delete_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: DELETE
- name: get_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: create_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: POST
- name: get_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
- name: update_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: POST
- name: delete_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: DELETE
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: create_saved_query
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved/QUERY_NAME
    method: PUT
- name: get_saved_query
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved/QUERY_NAME
    method: GET
- name: update_saved_query
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved/QUERY_NAME
    method: PUT
- name: delete_saved_query
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved/QUERY_NAME
    method: DELETE
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: GET
    data_selector: result
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
    data_selector: result
- name: access_key
  endpoint:
    path: /keys/CUSTOM_KEY
    method: GET
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: POST
    data_selector: result
    params: {}
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
    params: {}
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
    data_selector: result
    params: {}
- name: funnel
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/funnel
    method: POST
    data_selector: result
    params: {}
- name: access_key
  endpoint:
    path: /projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
    data_selector: key
- name: titles
  endpoint:
    method: POST
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: projects
  endpoint:
    path: /3.0/organizations/{ORG_ID}/projects
    method: GET
- name: queries
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/queries
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/keys
    method: GET
- name: datasets
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/datasets
    method: GET
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: create_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: POST
- name: get_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: GET
- name: update_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: PUT
- name: delete_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: DELETE
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: create_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: POST
- name: get_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
- name: update_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: PUT
- name: delete_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: DELETE
- name: extraction
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: count_query
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/count
    method: POST
- name: saved_queries
  endpoint:
    path: /queries/saved
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: extraction
  endpoint:
    path: /queries/extraction
    method: POST
- name: projects
  endpoint:
    path: /organizations/ORG_ID/projects
    method: GET
- name: delete_collection
  endpoint:
    path: /projects/PROJECT_ID/events/COLLECTION_NAME
    method: DELETE
    params:
      api_key: MASTER_KEY
- name: projects
  endpoint:
    path: /organizations/ORG_ID/projects
    method: GET
- name: events
  endpoint:
    path: /projects/PROJECT_ID/events/COLLECTION_NAME
    method: GET
- name: queries
  endpoint:
    path: /projects/PROJECT_ID/queries/extraction
    method: POST
- name: events
  endpoint:
    method: PUT
- name: extraction_request
  endpoint:
    method: GET
- name: extraction_request_post
  endpoint:
    method: POST
- name: projects
  endpoint:
    path: /organizations/ORG_ID/projects
    method: GET
- name: access_keys
  endpoint:
    path: /projects/PROJECT_ID/keys
    method: GET
- name: datasets
  endpoint:
    path: /projects/PROJECT_ID/datasets
    method: GET
- name: extraction
  endpoint:
    path: /projects/PROJECT_ID/queries/extraction
    method: POST
- name: saved_queries
  endpoint:
    path: /projects/PROJECT_ID/queries/saved
    method: GET
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events/COLLECTION_NAME
    method: GET
- name: extractions
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/extraction
    method: POST
- name: access_keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: POST
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
    data_selector: projects
- name: create_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: POST
- name: get_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: GET
- name: delete_project
  endpoint:
    path: /3.0/organizations/ORG_ID/projects/PROJECT_ID
    method: DELETE
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: create_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: POST
- name: get_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: GET
- name: update_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: POST
- name: revoke_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY/revoke
    method: POST
- name: unrevoke_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY/unrevoke
    method: POST
- name: delete_access_key
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys/CUSTOM_KEY
    method: DELETE
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: GET
    data_selector: result
    params:
      timeframe: this_7_days
- name: queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries
    method: GET
    data_selector: result
- name: cached_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/cached
    method: GET
    data_selector: result
- name: datasets
  endpoint:
    path: /3.0/projects/PROJECT_ID/datasets
    method: GET
    data_selector: result
- name: access_keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
    data_selector: keys
- name: update_events
  endpoint:
    method: PUT
- name: projects
  endpoint:
    path: /3.0/organizations/ORG_ID/projects
    method: GET
- name: keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events/COLLECTION_NAME
    method: DELETE
- name: wardrobe
  endpoint:
    path: /wardrobe
    method: POST
- name: events
  endpoint:
    path: /3.0/projects/PROJECT_ID/events
    method: GET
    data_selector: result
    params:
      timeframe: this_7_days
- name: saved_queries
  endpoint:
    path: /3.0/projects/PROJECT_ID/queries/saved
    method: GET
- name: access_keys
  endpoint:
    path: /3.0/projects/PROJECT_ID/keys
    method: GET
- name: projects
  endpoint:
    path: /organizations/ORG_ID/projects
    method: GET
- name: projects
  endpoint:
    path: /3.0/organizations/{ORG_ID}/projects
    method: GET
- name: create_project
  endpoint:
    path: /3.0/organizations/{ORG_ID}/projects
    method: POST
- name: get_project
  endpoint:
    path: /3.0/organizations/{ORG_ID}/projects/{PROJECT_ID}
    method: GET
- name: update_project
  endpoint:
    path: /3.0/organizations/{ORG_ID}/projects/{PROJECT_ID}
    method: PUT
- name: delete_project
  endpoint:
    path: /3.0/organizations/{ORG_ID}/projects/{PROJECT_ID}
    method: DELETE
- name: keys
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/keys
    method: GET
- name: create_access_key
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/keys
    method: POST
- name: get_access_key
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/keys/{CUSTOM_KEY}
    method: GET
- name: update_access_key
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/keys/{CUSTOM_KEY}
    method: PUT
- name: delete_access_key
  endpoint:
    path: /3.0/projects/{PROJECT_ID}/keys/{CUSTOM_KEY}
    method: DELETE
- name: purchases
  endpoint:
    path: /projects/PROJECT_ID/events/purchases
    method: POST
    data_selector: result
- name: purchases_count
  endpoint:
    path: /projects/PROJECT_ID/queries/count
    method: GET
    data_selector: result
- name: purchases_average
  endpoint:
    path: /projects/PROJECT_ID/queries/average
    method: GET
    data_selector: result
- name: event
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Some actions may return errors, especially ones that use access keys.
- Master Key can be used to authenticate any API call.
- Write Key is specifically for writing data.
- Read Key is for querying and extracting data.
- Uses API Keys for authentication.
- Most operations require a Master Key.
- The Master Key is the most powerful API Key of all. It can be used to authenticate
  any API call, and is required to perform various administrative functions.
- Queries are rate limited at 200/minute.
- Be cautious with deletes and updates as they are irreversible.
- Each project will have its own set of API Keys, which can be retrieved from the
  overview page of your project.
- Access Keys provide granular control over data access.
- Currently not supported by this SDK.
- When loading events in bulk, we recommend batches of 5,000 events or less.
- JSON objects passed as query string parameters need to be URL encoded.
- Be cautious with delete and update operations as they are irreversible.
- Each project has its own set of API Keys.
- The Master Key is required for administrative functions.
- Rate limits are enforced at the project level.
- Ensure to handle rate limits appropriately.
- The API uses the ISO-8601 format for timestamps.
- Cached Queries reduce average query response time down to milliseconds.
- Cached Datasets allow retrieving results indexed by properties.
- Deletion of projects or events is a hard delete and cannot be undone.
- The Master Key is the most powerful API Key of all.
- Deleting a project puts it in an inactive state and removes it from the admin interface.
- Ensure you have the correct permissions for the API keys used.
- Cached Queries can be created to optimize performance on frequently accessed queries.
- Access Keys provide fine-grained control over user permissions.
- Geo filtering can't be used in combination with a Group By request.
- Keen supports various authentication methods including API keys.
- Ensure to handle rate limits when making requests.
- Cached Queries are a way to reduce average query response time.
- Access Keys control access to your projects and can be customized.
- Cached Queries reduce response time to milliseconds.
- Access Keys enhance query security and data control.
- Timezone parameter adjusts analysis to local definition of 'today'.
- Funnels are limited to 2 million unique actors per request.
- API supports both synchronous and asynchronous data extraction.
- All API requests must be authenticated with a valid key.
- Cached Queries reduce average query response time to milliseconds.
- Access Keys control access to projects.
- Retrieves an Access Key definition using Master Key.
- API supports multiple authentication mechanisms including API keys and OAuth.
- Ensure to handle rate limiting as per API guidelines.
- Cached Queries can take up to 48 hours to complete.
- Access Keys require proper permissions to access data.
- Rate limits are enforced on a per project basis.
- Ensure to use the correct API key for authentication.
- Rate limiting is enforced at 200 queries per minute.
- Extracting data has a limit of 100,000 events per request.
- Rate limits are enforced at 200 requests per minute.
- Cached Queries reduce average query response time.
- Cached Datasets allow for results indexed by properties.
- let us know you're waiting!
- Uses API keys for authentication.
- Data is organized by event collections.
- Cached Queries can be turned on by updating saved queries with a refresh_rate.
- Geo filtering can only be applied to properties that exist in the event.
- Ensure to setup the project ID and keys properly.
- API supports both absolute and relative timeframes.
- You can filter and group results based on specified criteria.
- Query Caching can be enabled on any Saved Query
- Includes various endpoints for events, queries, and saved queries.
- Cached Datasets are currently in Early Release.
- Funnels are not currently supported by Cached Datasets, but funnels do work with
  Cached Queries.
- If you have a saved query that is being cached, you will need to have 'cached_queries'
  permitted.
- Deleting a project is a hard delete operation and cannot be undone.
- Rate limit for DELETE and PUT requests is 10/minute.
- When using filters in queries, ensure the property names match those in the event
  collection.
- Rate limits apply to both queries and extractions.
- Ensure proper handling of sensitive data when using Access Keys.
- Access Keys control access to your projects and can enhance requests with options.
- Cached Queries are a way to get instant results.
- Cached Datasets allow retrieval of results indexed by properties.
- Deletion and updates are irreversible.
- Deleting a project causes a project’s removal forever.
- Keen API supports rate limiting.
- Requires setup of connected app in API
- Be cautious with rate limits for queries and extractions
- Rate limiting is applied to API calls.
- Be cautious with DELETE requests as they are irreversible.
- Deleting and updating events should be done sparingly, not as a matter of routine.
- Ensure to use the correct organization and project IDs when making requests.
- Rate limiting applies to certain operations; be mindful of the rate limits to avoid
  being throttled.
- Be cautious with DELETE operations as they are irreversible.
- Ensure that filters for deletions are correctly set.
- Access Keys provide controlled access to data.
- Use caution when deleting projects or access keys as these actions are irreversible.
- Uses Master API Key for authentication.
- Use the Authorization header to pass the API Key.
- Rate limits are enforced on queries and deletes.
- Deletion operations are irreversible.
- Use caution when deleting projects or events.
- Rate limiting is enforced at the project level.
- Always check the response for rate limit headers to avoid exceeding limits.
- Use filters effectively to refine the data retrieved from queries.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Keen offers pre-configured, fully-managed data infrastructure with data streaming
  and analytics capability—all accessible via an API for faster development.
- None of our websites, applications or services are intended for children. Please
  do not submit information about yourself using our websites if you are under 13.
- Keen processes personal information only for the purposes for which it was collected
  and in accordance with this Policy or any applicable service-specific privacy notice.
- Keen may modify these Services Terms at any time.
- If a modification or suspension materially and adversely affects your use of the
  Services, you may terminate the Agreement.
- Never give your Master Key to anybody.
- Keen requires a Write Key to write data.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '429: Too many requests, see Rate Limiting'
- '500: Internal Server Error'
- '503: Service Unavailable'
- 504 - Timeout
- '401 Unauthorized: The API Key is invalid.'
- '403 Forbidden: The API Key is not allowed to run this request.'
- '404 Not Found: The requested resource was not found.'
- 429 Too many requests, see Rate Limiting.
- '500 Internal Server Error: Something went wrong on our end.'
- '503 Service Unavailable: Our service is temporarily offline.'
- '504: Timeout'
- '400 Bad Request: Missing or invalid parameters.'
- '401 Unauthorized: API key is invalid.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Invalid API Key.'
- '401 Unauthorized: Recheck API key or token expiration'
- '429: Too Many Requests'
- '400: Bad Request - Missing or invalid parameters.'
- '401: Unauthorized - The API Key is invalid.'
- '429: Too many requests, see Rate Limiting.'
- '403: Forbidden - The API Key is not allowed to run this request.'
- '404: Not Found - The requested resource was not found.'
- '429: Too many requests - See Rate Limiting.'
- '500: Internal Server Error - Something went wrong on our end.'
- '503: Service Unavailable - Our service is temporarily offline.'
- '200 - OK: Successful request'
- '429: Too many requests - Rate limiting hit.'
- '401 Unauthorized: The API key is invalid.'
- '403 Forbidden: The API key is not allowed to run this request.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key or token.'
- '403 Forbidden: API key does not have permission to access this resource.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Check authorization header'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Invalid API key or insufficient permissions.'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: Something went wrong on the server.'
- '401 Unauthorized: Recheck API key'
- '400: Bad Request - Invalid parameters.'
- '401: Unauthorized - Invalid API Key.'
- '404: Not Found - Resource does not exist.'
- '429: Too Many Requests - Rate limit exceeded.'
- '400 Bad Request: Check for missing or invalid parameters.'
- '401 Unauthorized: Verify API key or token.'
- '403 Forbidden: Access denied for the requested resource.'
- '429: Too many requests - Rate limit exceeded.'
- 429 Too many requests, see Rate Limiting
- '429: Too many requests'
- '401 Unauthorized: Recheck Master Key validity'
- '400: Bad Request - Check your request parameters.'
- '401: Unauthorized - Check your API key.'
- '429: Too many requests - see Rate Limiting.'
- '400 Bad Request: Invalid parameters provided.'
- '401 Unauthorized: Invalid API key.'
- '401: Unauthorized - API key is invalid.'
- '403: Forbidden - API key does not have permission for this action.'
- '404: Not Found - Requested resource was not found.'
- '500: Internal Server Error - Something went wrong on the server.'
- '400: Bad Request - Invalid parameters provided.'
- '401: Unauthorized - Invalid API key.'
- '429: Too many requests - Rate limiting has been applied.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Check your API key or access permissions.'
- '404 Not Found: Ensure the resource you''re trying to access exists.'
- '429 Too Many Requests: You''ve hit the rate limit for this API.'
- '503: Service Unavailable - Service is temporarily offline.'
- 204 - No Content
- 200 - OK
- '403: Forbidden - Access to the requested resource is denied.'
- '401 Unauthorized: Check your API key.'
- '504 Timeout: Query took too long to execute.'
- '400: Bad Request - Check request format and parameters.'
- '401: Unauthorized - Check API key or token.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Project or key not found.'
- '500 Internal Server Error: An error occurred on the server.'
- '429 Too many requests: Rate limit exceeded.'
- '503 Service Unavailable: The service is temporarily offline.'
- '504 Timeout: Your query did not complete in the time allowed.'
- '400: Bad Request - Check your query parameters.'
- '401: Unauthorized - Check your API Key.'
- '404: Not Found - The requested resource does not exist.'
- '404: Not Found - The specified resource was not found.'
- '403: Forbidden - You do not have permission to perform this action.'
- '400: Bad Request - Check query parameters or payload.'
- If at any time you would like to unsubscribe from receiving future emails, reply
  to the email with the subject line ‘Unsubscribe’ to be removed from future emails.
auth_info:
  mentioned_objects:
  - PROJECT_ID
  - MASTER_KEY
  - READ_KEY
  - WRITE_KEY
  - AccessKey
  - Query
  - Dataset
  - Project
  - User
  - organization_key
  - master_key
  - access_key
  - SavedQuery
  - CachedDataset
  - AccessKeys
  - Organization
  - CachedQuery
  - ProjectID
  - MasterKey
  - ReadKey
  - API Key
  - OrganizationKey
  - OAuthToken
  - AuthProvider
  - NamedCredential
  - EventCollection
  - Authorization
  - Master Key
  - OauthToken
client:
  base_url: https://your-instance.api-name.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  headers:
    Content-Type: application/json
    Accept: application/json
  paginator:
    page_size_param: pageSize
    default_page_size: 200
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
source_metadata: null
