resources:
- name: auth_configs
  endpoint:
    path: /api/v3/auth_configs
    method: GET
- name: risk_data
  endpoint:
    path: /api/v1/riskdata
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: mcp_servers
  endpoint:
    path: /api/v3/mcp/servers
    method: POST
    data_selector: id
- name: risk_data
  endpoint:
    path: /v1/risk-data
    method: GET
    data_selector: data
    params: {}
- name: connection
  endpoint:
    path: /connection/create
    method: POST
    data_selector: connection_id
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: result
    params: {}
- name: tools
  endpoint:
    path: /api/tools
    method: GET
    data_selector: tools
- name: connected_accounts
  endpoint:
    path: /api/connected_accounts
    method: GET
    data_selector: accounts
- name: triggers
  endpoint:
    path: /triggers
    method: GET
    data_selector: active_triggers
    params: {}
- name: current_user_session
  endpoint:
    path: /api/v3/auth/session/info
    method: GET
    data_selector: project
    params: {}
- name: mcp_server
  endpoint:
    path: /mcp/server
    method: POST
    data_selector: server
    params: {}
- name: tool_router
  endpoint:
    path: /tool/router
    method: POST
    data_selector: session
    params: {}
- name: GMAIL_SEND_EMAIL
  endpoint:
    path: /gmail/send
    method: POST
- name: GOOGLECALENDAR_EVENTS_LIST
  endpoint:
    path: /calendar/events
    method: GET
- name: GITHUB_LIST_STARGAZERS
  endpoint:
    path: /repos/composiohq/composio/stargazers
    method: GET
- name: GOOGLEDRIVE_UPLOAD_FILE
  endpoint:
    path: /drive/upload
    method: POST
- name: GOOGLEDRIVE_DOWNLOAD_FILE
  endpoint:
    path: /drive/download
    method: GET
- name: HACKERNEWS_GET_LATEST_POSTS
  endpoint:
    path: /tools/HACKERNEWS_GET_LATEST_POSTS
    method: GET
    data_selector: records
- name: GITHUB_LIST_REPOSITORY_ISSUES
  endpoint:
    path: /tools/GITHUB_LIST_REPOSITORY_ISSUES
    method: GET
    data_selector: records
- name: NOTION
  endpoint:
    method: GET
    data_selector: parameters
- name: user_management
  endpoint:
    path: /api/user_management
    method: GET
- name: triggers
  endpoint:
    path: /triggers
    method: POST
    data_selector: trigger
    params: {}
- name: create_server
  endpoint:
    path: /docs/mcp-server-management#create-a-server
    method: POST
    data_selector: server
    params: {}
- name: list_servers
  endpoint:
    path: /docs/mcp-server-management#list-servers
    method: GET
    data_selector: servers
    params: {}
- name: get_server_details
  endpoint:
    path: /docs/mcp-server-management#get-server-details
    method: GET
    data_selector: server
    params: {}
- name: update_server
  endpoint:
    path: /docs/mcp-server-management#update-a-server
    method: PUT
    data_selector: updated
    params: {}
- name: delete_server
  endpoint:
    path: /docs/mcp-server-management#delete-a-server
    method: DELETE
    data_selector: result
    params: {}
- name: generate_user_urls
  endpoint:
    path: /docs/mcp-server-management#generate-user-urls
    method: POST
    data_selector: instance
    params: {}
- name: mcp_servers
  endpoint:
    path: /api/partner/lemon/apps/list
    method: GET
    data_selector: items
    params: {}
- name: COMPOSIO_SEARCH_TOOLS
  endpoint:
    path: /tool/search
    method: POST
    data_selector: tools
- name: COMPOSIO_CREATE_PLAN
  endpoint:
    path: /tool/create_plan
    method: POST
    data_selector: plan
- name: COMPOSIO_MANAGE_CONNECTIONS
  endpoint:
    path: /tool/manage_connections
    method: POST
    data_selector: connections
- name: COMPOSIO_MULTI_EXECUTE_TOOL
  endpoint:
    path: /tool/multi_execute
    method: POST
    data_selector: execution_results
- name: COMPOSIO_REMOTE_WORKBENCH
  endpoint:
    path: /tool/remote_workbench
    method: POST
    data_selector: workbench_results
- name: COMPOSIO_REMOTE_BASH_TOOL
  endpoint:
    path: /tool/remote_bash
    method: POST
    data_selector: bash_results
- name: triggers
  endpoint:
    path: /triggers_types
    method: GET
- name: active_triggers
  endpoint:
    path: /trigger_instances/active
    method: GET
- name: tools
  endpoint:
    path: /tools
    method: GET
- name: auth_configs
  endpoint:
    path: /auth_configs
    method: GET
- name: connected_accounts
  endpoint:
    path: /connected_accounts
    method: GET
- name: triggers_types
  endpoint:
    path: /api/v3/triggers_types
    method: GET
- name: triggers_types_list_enum
  endpoint:
    path: /api/v3/triggers_types/list/enum
    method: GET
- name: trigger_info
  endpoint:
    path: /api/v3/triggers_types/{slug}
    method: GET
- name: active_trigger_instances
  endpoint:
    path: /api/v3/trigger_instances/active
    method: GET
- name: upsert_trigger_instance
  endpoint:
    path: /api/v3/trigger_instances/{slug}/upsert
    method: POST
- name: delete_trigger_instance
  endpoint:
    path: /api/v3/trigger_instances/manage/{triggerId}
    method: DELETE
- name: switch_trigger_instance_status
  endpoint:
    path: /api/v3/trigger_instances/manage/{triggerId}
    method: PATCH
- name: auth_config
  endpoint:
    path: /api/v3/auth_configs/:nanoid
    method: GET
    data_selector: id
- name: auth_configs
  endpoint:
    path: /api/v3/auth_configs/:nanoid
    method: DELETE
notes:
- Ensure `COMPOSIO_API_KEY` is set as an environment variable
- Don’t forget to set your COMPOSIO_API_KEY and OPENAI_API_KEY in your environment
  variables.
- Requires OAuth2 setup with specific permissions
- Rate limits apply to API calls
- Ensure you have Python 3.8+.
- Make sure to set the retrieved COMPOSIO_API_KEY as an environment variable in your
  development environment.
- Legacy version — no longer updated. Switch to latest docs
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses managed authentication for integrated apps like GitHub.
- Securely connect your AI agents to user accounts on external apps
- Composio uses Integrations (app config), Entities (your users), and Connections
  (the secure link between them) to simplify authenticated interactions for your AI
  agents.
- Composio uses the default ID 'default'. This is suitable only for single-user scripts,
  personal testing.
- Make sure to set the use_composio_oauth_app / useComposioAuth flag to False!
- Legacy version — no longer updated.
- SSE support will be deprecated soon. Use latest protocol.
- Legacy version — no longer updated. Switch to latest docs.
- Requires approval for API access.
- Data may vary based on subscription level.
- Composio provides managed authentication for Gmail.
- Each user maintains their own Gmail connection.
- Requires user authentication via OAuth2
- Ensure proper scopes are set for API access
- Requires API key for access
- Session isolation is supported
- Authorize tools securely on behalf of a specific user, with fine-grained access
  control.
- Different AI frameworks expect tools to be formatted in their specific way.
- Auth configs are reusable
- Different authentication methods require different auth configs
- Modifying or rewriting the tool description to better fit your use case.
- Modifiers are called after the tool is executed by the LLM.
- Useful for modifying or truncating the output of the tool.
- Custom tools are stored in memory and are not persisted
- They need to be recreated when the application restarts
- Toolkit-based tools require a valid connected account with the specified toolkit
- The authorized redirect URI is https://backend.composio.dev/api/v3/toolkits/auth/callback
- Never use ‘default’ as an User ID in production with users. This could expose other
  users’ data
- 'Data isolation: Composio ensures complete isolation between User IDs. Users cannot
  access another ID’s connections or data.'
- Triggers are scoped to specific users.
- Composio MCP servers only support Streamable HTTP transport.
- Access to curated MCP servers for all supported toolkits
- No infrastructure management or custom config required
- Tool Router is an experimental feature.
- Your debugging info is tied to your project and it helps us trace what happened
  and debug the issue faster.
- New SDKs are in a preview release.
- The old SDKs are no longer actively maintained but will continue to work for the
  foreseeable future.
- Auth configs store the configuration required for authentication with a given toolkit.
errors:
- '400: Bad Request Error'
- '401: Unauthorized Error'
- '404: Not Found Error'
- '500: Internal Server Error'
- '403 Forbidden: Check API permissions'
- '500 Internal Server Error: Retry after a short delay'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '900: Bad Request: The auth request was malformed or missing required parameters.
  Review the authentication documentation and ensure all required parameters are provided.'
- '901: Internal Server Error: An error occurred in the authentication service. Retry
  the authentication request. If the issue persists, contact support.'
- '902: Unauthorized: Authentication credentials are invalid or expired. Refresh your
  authentication credentials or re-authenticate.'
- '903: No Cookie: Required authentication cookie is missing. Ensure cookies are enabled
  and the authentication flow is completed properly.'
- '904: Invalid Project Access: User does not have access to the requested project.
  Verify you have the correct permissions for this project or contact your administrator.'
- '905: Validation Error: Authentication request failed validation. Check that all
  authentication parameters meet the required format and constraints.'
- '906: No Auth Provided: No authentication credentials were provided. Include valid
  authentication credentials in your request.'
- '300: Bad Request: Auth configuration request was invalid. Review the auth configuration
  documentation and correct the request format.'
- '301: Validation Error: Auth configuration failed validation. Ensure all configuration
  values meet the required criteria.'
- '302: Not Found: Auth configuration not found. Create the auth configuration first
  or verify the configuration ID.'
- '400: Toolkit Not Enabled: The requested toolkit is not enabled. Enable the toolkit
  in your dashboard or contact support for access.'
- '401: Toolkit Not Found: The requested toolkit does not exist. Verify the toolkit
  name is correct or browse available toolkits.'
- '402: Internal Server Error: Toolkit service encountered an error. Retry the request.
  If the issue persists, contact support.'
- '500: Bad Request: Security provider request was invalid. Review the security provider
  documentation and correct the request.'
- '501: Encryption Error: Failed to encrypt data. Check your encryption keys and parameters.
  Contact support if needed.'
- '502: Decryption Error: Failed to decrypt data. Verify your decryption keys are
  correct and the data format is valid.'
- '503: Signing Error: Failed to sign data. Check your signing credentials and data
  format.'
- '600: Bad Request: Connected account request was invalid. Review the connected account
  API documentation and correct the request.'
- '601: Internal Server Error: Connected account service error. Retry the operation.
  If it fails repeatedly, contact support.'
- '602: Invalid Auth Scheme: Authentication scheme is not valid. Use a supported authentication
  scheme for this integration.'
- '603: Invalid App Schema: Application schema is invalid. Verify your app configuration
  matches the required schema.'
- '604: OAuth1 Request Token Error: Failed to get OAuth1 request token. Check your
  OAuth1 credentials and callback URL configuration.'
- '605: JWT Token Error: JWT token is invalid or expired. Refresh your JWT token or
  re-authenticate.'
- '606: Resource Not Found: Connected account not found. Verify the connected account
  ID is correct and the account exists.'
- '800: Validation Error: API key validation failed. Check that your API key format
  is correct and not corrupted.'
- '801: Invalid API Key: The provided API key is invalid. Generate a new API key from
  your dashboard and update your application.'
- '802: Unauthorized: API key does not have required permissions. Check your API key
  permissions in the dashboard or contact your administrator.'
- '803: Cannot Fetch API Keys: Failed to retrieve API keys. Try refreshing the page
  or contact support if the issue persists.'
- '804: No API Keys Found: No API keys found for the user. Generate an API key from
  your dashboard first.'
- '1141: Auth Config Not Found: MCP authentication configuration not found. Set up
  MCP authentication configuration first.'
- '1142: Validation Error: MCP request failed validation. Review your MCP request
  format and ensure all required fields are provided.'
- '1143: Resource Not Found: MCP resource not found. Verify the MCP resource ID is
  correct and the resource exists.'
- '1144: Partner Already Exists: MCP partner already exists. Use the existing partner
  or choose a different identifier.'
- '1200: Bad Request: Trigger instance request was invalid. Review the trigger configuration
  and ensure all parameters are correct.'
- '1201: Internal Server Error: Trigger instance service error. Retry the operation.
  Contact support if the issue continues.'
- '1202: Trigger Instance Gone: The trigger instance has been deleted. Create a new
  trigger instance or verify the correct trigger ID.'
- '1203: Resource Not Found: Trigger instance not found. Verify the trigger instance
  ID is correct and the trigger exists.'
- '1300: Unable To Verify Token: JWT token verification failed. Ensure your JWT token
  is valid and not expired. Re-authenticate if necessary.'
- '1301: Invalid Token: JWT token is malformed or invalid. Generate a new JWT token
  through the proper authentication flow.'
- '1700: Bad State: Tool authentication is in an invalid state. Reset the authentication
  flow and try again.'
- '1701: Not Implemented: Tool authentication method not implemented. Use a supported
  authentication method for this tool.'
- '1702: Bad Request: Tool authentication request was invalid. Review the authentication
  parameters and ensure they’re correctly formatted.'
- '1703: Unreachable: Tool authentication service is unreachable. Check your network
  connection and retry. The service may be temporarily down.'
- '1704: Bad Callback State: OAuth callback state is invalid. Restart the OAuth flow
  to generate a new valid state parameter.'
- '1705: Failed OAuth2 Token Exchange: OAuth2 token exchange failed. Verify your OAuth2
  configuration and credentials are correct.'
- '1706: Bad Connected Account State: Connected account is in an invalid state. Reconnect
  the account through the proper authentication flow.'
- '1800: Tool Not Found: The requested tool does not exist. Verify the tool name is
  correct or browse available tools in your dashboard.'
- '1801: Execution Error: Tool execution failed. Check your tool parameters and try
  again. Review the tool documentation for proper usage.'
- '1802: Unauthorized: Not authorized to execute the tool. Ensure you have the necessary
  permissions to use this tool.'
- '1803: Connected Account Not Found: Required connected account not found. Connect
  the required account first before using this tool.'
- '1804: Failed To Get Authorization: Authorization retrieval failed. Re-authenticate
  the connected account and try again.'
- '1805: No API Key Found: Required API key not found. Configure the required API
  key for this integration.'
- '1806: Connected Account Gone: The connected account has been deleted. Reconnect
  the account or use a different connected account.'
- '1800: Bad Request: Project request was invalid. Review the project API documentation
  and correct your request format.'
- '1801: Internal Server Error: Project service encountered an error. Retry the operation.
  If it continues to fail, contact support.'
- '1802: Project Gone: The project has been deleted. Verify the project ID is correct
  or create a new project.'
- '1803: Resource Not Found: Project resource not found. Ensure the project resource
  exists and you have access to it.'
- '1900: Internal Service Error: Error occurred in Internal service while listing
  tools. Retry the request. If the issue persists, contact support.'
- '1901: Cursor Error: Invalid cursor for pagination. Use a valid pagination cursor
  or start from the beginning.'
- '2000: Member Not Found: Team member not found. Verify the member ID is correct
  and the member exists in your team.'
- '2001: Member Already Exists: Team member already exists. The member is already
  part of the team. No action needed.'
- '2100: Session Not Found: CLI session not found. Restart your CLI session or re-authenticate.'
- '2101: User Not Found: CLI user not found. Verify your user credentials and re-authenticate
  if necessary.'
- '2200: Resource Not Found: Organization resource not found. Verify the organization
  ID is correct and you have access to it.'
- '403 Forbidden: Check if your API key is valid.'
- '404 Not Found: Verify the endpoint path.'
- '404: No connected account found for the user id'
- 'Invalid credentials: Check GMAIL_CLIENT_ID and GMAIL_CLIENT_SECRET'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Retry the request'
- '403: Forbidden Error'
- '401 Unauthorized: Check API key validity'
- '400 Bad Request: Review request parameters'
- 400 Bad Request Error
- 401 Unauthorized Error
- 404 Not Found Error
- 500 Internal Server Error
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - Entity
  - Connection
  - connected_account_id
  - AuthConfigs
  - ConnectedAccounts
  - Tools
  - Composio
  - MCPClient
  - authConfigId
client:
  base_url: https://app.composio.dev
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
