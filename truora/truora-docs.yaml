resources:
- name: validation
  endpoint:
    path: /validations
    method: GET
    data_selector: validations
- name: custom_type
  endpoint:
    path: /v1/config
    method: POST
- name: create_check
  endpoint:
    path: /v1/checks
    method: POST
    data_selector: data
    params: {}
- name: settings
  endpoint:
    path: /v1/settings
    method: POST
- name: continuous_checks
  endpoint:
    path: /v1/continuous-checks
    method: POST
- name: validation
  endpoint:
    path: /validations
    method: GET
    data_selector: validations
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: create_pdf
  endpoint:
    path: /v1/checks/{check_id}/pdf
    method: POST
- name: get_pdf
  endpoint:
    path: /v1/checks/{check_id}/pdf
    method: GET
- name: create_batch
  endpoint:
    path: /v1/batches
    method: POST
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /v1/engagement/chat/{chat_id}
    method: GET
    data_selector: records
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
- name: contact_properties
  endpoint:
    path: /v1/contact-properties
    method: POST
    data_selector: created
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
- name: identity_validation_process
  endpoint:
    path: /v1/processes
    method: POST
- name: validation
  endpoint:
    path: /validations
    method: GET
    data_selector: '{}'
- name: validation
  endpoint:
    path: /validations
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: customers_query
  endpoint:
    path: /v1/customers/query
    method: POST
- name: update_customer_tags
  endpoint:
    path: /v1/customers/{customer_id}/tags
    method: PUT
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: POST
    data_selector: '{}'
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: enrollment
  endpoint:
    path: /v1/enrollments
    method: POST
    data_selector: enrollment
    params: {}
- name: validation
  endpoint:
    path: /validations
    method: GET
    data_selector: validations
- name: validations
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: validation
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /v1/status
    method: GET
    data_selector: {}
- name: validation
  endpoint:
    path: /validation
    method: GET
    data_selector: records
    params: {}
- name: validations
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: validation_id
- name: background_checks
  endpoint:
    path: /v1/checks
    method: POST
    data_selector: check_id
- name: custom_type
  endpoint:
    path: /v1/config
    method: POST
    data_selector: custom_type_id
- name: check_created
  endpoint:
    path: /webhooks/check_created
    method: POST
    data_selector: variables
- name: check_started
  endpoint:
    path: /webhooks/check_started
    method: POST
    data_selector: variables
- name: check_delayed
  endpoint:
    path: /webhooks/check_delayed
    method: POST
    data_selector: variables
- name: check_finished
  endpoint:
    path: /webhooks/check_finished
    method: POST
    data_selector: variables
- name: check_decision_variables_finished
  endpoint:
    path: /webhooks/check_decision_variables_finished
    method: POST
    data_selector: variables
- name: User initiated conversation (inbound)
  endpoint:
    path: /user_initiated_conversation
    method: GET
    data_selector: records
- name: Inbound message sent (Outbound)
  endpoint:
    path: /inbound_message_sent
    method: POST
    data_selector: records
- name: Inbound message accepted (Outbound)
  endpoint:
    path: /inbound_message_accepted
    method: POST
    data_selector: records
- name: Inbound message cancelled (Outbound)
  endpoint:
    path: /inbound_message_cancelled
    method: POST
    data_selector: records
- name: Truconnect process started
  endpoint:
    path: /truconnect_process_started
    method: POST
    data_selector: records
- name: Truconnect process succeeded
  endpoint:
    path: /truconnect_process_succeeded
    method: POST
    data_selector: records
- name: Truconnect process failed
  endpoint:
    path: /truconnect_process_failed
    method: POST
    data_selector: records
- name: Identity flow created
  endpoint:
    path: /identity_flow_created
    method: POST
    data_selector: records
- name: Identity flow updated
  endpoint:
    path: /identity_flow_updated
    method: POST
    data_selector: records
- name: Identity flow deleted
  endpoint:
    path: /identity_flow_deleted
    method: DELETE
    data_selector: records
- name: Identity flow cloned
  endpoint:
    path: /identity_flow_cloned
    method: POST
    data_selector: records
- name: identity_flow_restored
  endpoint:
    path: /identity/flow/restored
    method: POST
    data_selector: records
    params: {}
- name: identity_process_created
  endpoint:
    path: /identity/process/created
    method: POST
    data_selector: records
    params: {}
- name: identity_process_succeeded
  endpoint:
    path: /identity/process/succeeded
    method: POST
    data_selector: records
    params: {}
- name: identity_process_failed
  endpoint:
    path: /identity/process/failed
    method: POST
    data_selector: records
    params: {}
- name: step_succeeded
  endpoint:
    path: /step/succeeded
    method: POST
    data_selector: records
    params: {}
- name: overwritten_failure
  endpoint:
    path: /overwritten/failure
    method: POST
    data_selector: records
    params: {}
- name: overwritten_success
  endpoint:
    path: /overwritten/success
    method: POST
    data_selector: records
    params: {}
- name: face_recognition_created
  endpoint:
    path: /face/recognition/created
    method: POST
    data_selector: records
    params: {}
- name: document_validation_succeeded
  endpoint:
    path: /document/validation/succeeded
    method: POST
    data_selector: records
    params: {}
- name: document_validation_failed
  endpoint:
    path: /document/validation/failed
    method: POST
    data_selector: records
    params: {}
- name: Get Check
  endpoint:
    path: /guides/check_type_person_guide/#get-check
    method: GET
    data_selector: labels
- name: Master Client Permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
    params: {}
- name: Roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: Members
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: processes
  endpoint:
    path: /v1/processes/
    method: GET
    params:
      search: account_id
- name: Create Validation Account
  endpoint:
    path: /v1/accounts
    method: POST
- name: Get Account
  endpoint:
    path: /v1/accounts/{{account_id}}
    method: GET
- name: List Validation Accounts
  endpoint:
    path: /v1/accounts
    method: GET
- name: Get Account Validations
  endpoint:
    path: /v1/accounts/{{account_id}}/validations
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: check_types
  endpoint:
    path: /check_types
    method: GET
    data_selector: check_types
- name: scores
  endpoint:
    path: /scores
    method: GET
    data_selector: scores
- name: checks
  endpoint:
    path: /v1/checks
    method: POST
    data_selector: check
    params:
      user_authorized: 'true'
      force_creation: 'true'
      type: person
      national_id: '10000000'
      country: CO
- name: check_details
  endpoint:
    path: /v1/checks/{check_id}/details
    method: GET
    data_selector: check
- name: check_status
  endpoint:
    path: /v1/checks/{check_id}
    method: GET
    data_selector: check
- name: create_check
  endpoint:
    path: /v1/checks
    method: POST
    params:
      type: Person
      force_creation: 'false'
      user_authorized: 'true'
      country: ALL
      national_id: '[Required]'
- name: get_check
  endpoint:
    path: /v1/checks/{{check_id}}
    method: POST
    params: {}
- name: get_check_details
  endpoint:
    path: /v1/checks/{{check_id}}/details
    method: POST
    params: {}
- name: check
  endpoint:
    path: /v1/checks
    method: POST
    data_selector: check
    params: {}
- name: check_details
  endpoint:
    path: /v1/checks/{{check_id}}/details
    method: POST
    data_selector: ''
    params:
      start_key: start_key
- name: create_check
  endpoint:
    path: /v1/checks
    method: POST
    params:
      type: company
      force_creation: 'false'
      user_authorized: 'true'
      country: CO
      tax_id: '[Required]'
      company_name: '[Optional]'
- name: get_check
  endpoint:
    path: /v1/checks/{{check_id}}
    method: POST
    params: {}
- name: get_check_details
  endpoint:
    path: /v1/checks/{{check_id}}/details
    method: POST
    params:
      start_key: '[Optional]'
      report_id: '[Optional]'
- name: background_check
  endpoint:
    path: /background_checks
    method: GET
    data_selector: results
- name: pdf
  endpoint:
    path: /v1/checks/{{check_id}}/pdf
    method: GET
    data_selector: summary
- name: variables
  endpoint:
    path: /v1/checks/{{check_id}}/variables
    method: GET
    data_selector: variables
- name: attachments
  endpoint:
    path: /v1/checks/{{check_id}}/attachments
    method: GET
    data_selector: files
- name: custom_type_creation
  endpoint:
    path: /v1/config
    method: POST
    data_selector: response
    params: {}
- name: background_check_batch
  endpoint:
    path: /api/background_checks/batch
    method: POST
- name: create_batch
  endpoint:
    path: /v1/batches
    method: POST
    data_selector: batch_id
- name: upload_file
  endpoint:
    path: '{{file_upload_link}}'
    method: PUT
    data_selector: code
- name: start_batch
  endpoint:
    path: /v1/batches/{{batch_id}}/start
    method: POST
    data_selector: message
- name: get_batch
  endpoint:
    path: /v1/batches/{{batch_id}}
    method: GET
    data_selector: status
- name: request_batch_report
  endpoint:
    path: /v1/batches/{{batch_id}}/report
    method: POST
    data_selector: format
- name: get_batch_report
  endpoint:
    path: /v1/batches/{{batch_id}}/report
    method: GET
    data_selector: batch_report_url
- name: Get Settings
  endpoint:
    path: /v1/settings
    method: GET
    data_selector: settings
    params: {}
- name: Configure Settings
  endpoint:
    path: /v1/settings
    method: POST
    data_selector: settings
    params: {}
- name: checks
  endpoint:
    path: /checks/
    method: GET
- name: continuous_checks
  endpoint:
    path: /continuous-checks/
    method: GET
- name: behavior
  endpoint:
    path: /behavior/
    method: GET
- name: reports
  endpoint:
    path: /reports/
    method: GET
- name: counters
  endpoint:
    path: /counters/
    method: GET
- name: config
  endpoint:
    path: /config/
    method: GET
- name: consumer_requests
  endpoint:
    path: /consumer-requests/
    method: GET
- name: feedback
  endpoint:
    path: /feedback/
    method: GET
- name: history_reports
  endpoint:
    path: /history-reports/
    method: GET
- name: metrics
  endpoint:
    path: /metrics/
    method: GET
- name: account
  endpoint:
    path: /account/
    method: GET
- name: hooks
  endpoint:
    path: /hooks/
    method: GET
- name: api_keys
  endpoint:
    path: /api-keys/
    method: GET
- name: api_keys_versions
  endpoint:
    path: /api-keys-versions/
    method: GET
- name: Generate Integration Token
  endpoint:
    path: /v1/api-keys
    method: POST
    data_selector: api_key
    params:
      key_type: web
      grant: digital-identity
      api_key_version: '1'
      country: ALL
- name: Get Process Status
  endpoint:
    path: /v1/processes/{{process_id}}/result
    method: GET
    data_selector: process_id
    params: {}
- name: Create Enrollment
  endpoint:
    path: /v1/enrollments
    method: POST
    data_selector: response
    params:
      type: face-recognition
      user_authorized: 'true'
- name: Get Enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: GET
    data_selector: response
    params: {}
- name: Delete Enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: DELETE
    data_selector: response
    params: {}
- name: update_flow
  endpoint:
    path: /v1/flows/{{web_flow_id}}
    method: POST
    data_selector: config
- name: get_flow
  endpoint:
    path: /v1/flows/{{web_flow_id}}
    method: GET
    data_selector: flow
    params: {}
- name: validations
  endpoint:
    path: /v1/validations/{validation_id}
    method: GET
    data_selector: validation
    params:
      show_details: 'true'
- name: download_process_pdf
  endpoint:
    path: /v1/processes/{process_id}/pdf
    method: GET
    data_selector: file_status
    params: {}
- name: geolocation_result
  endpoint:
    path: /processes/{process_id}/result
    method: GET
    data_selector: geolocation_device
- name: manual_review
  endpoint:
    path: /manual_review
    method: GET
    data_selector: documents
    params: {}
- name: processes
  endpoint:
    path: /v1/processes/
    method: GET
- name: process_result
  endpoint:
    path: /v1/processes/{process_id}/result
    method: GET
- name: validation_details
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: GET
    params:
      show_details: 'true'
- name: validation_creation
  endpoint:
    path: /validation/creation
    method: POST
    data_selector: validation_id
    params: {}
- name: get_perform_validation
  endpoint:
    path: /validation/{validation_id}
    method: GET
    data_selector: validation_status
    params: {}
- name: create_identity
  endpoint:
    path: /v1/processes/
    method: POST
    data_selector: process_id
- name: verification_steps
  endpoint:
    path: /verification/steps
    method: GET
    data_selector: steps
    params: {}
- name: steps
  endpoint:
    path: /identity/steps
    method: GET
    data_selector: steps
- name: current_step_data
  endpoint:
    path: /identity/current_step_data
    method: GET
    data_selector: current_step_data
- name: verification_output
  endpoint:
    path: /identity/verification_output
    method: GET
    data_selector: verification_output
- name: process_steps
  endpoint:
    path: /v1/processes/{process_id}
    method: GET
    data_selector: Success
    params: {}
- name: current_step_data
  endpoint:
    path: /current_step_data
    method: GET
    data_selector: current_step_data
- name: example_process_steps
  endpoint:
    path: /example/process/steps
    method: GET
    data_selector: steps
    params: {}
- name: identity_verification
  endpoint:
    path: /identity/verification
    method: GET
    data_selector: identity_verification_names
    params: {}
- name: process
  endpoint:
    path: /v1/processes/{process_id}
    method: GET
- name: verify_identity
  endpoint:
    path: /v1/processes/{process_id}
    method: POST
    data_selector: response
    params: {}
- name: current_step_data
  endpoint:
    path: /verify_identity/current_step_data
    method: GET
    data_selector: current_step_data
- name: document_validation
  endpoint:
    path: /v1/processes/{process_id}
    method: GET
    data_selector: current_step_data
    params: {}
- name: upload_document_photo_front
  endpoint:
    path: '{{document_front}}'
    method: PUT
    data_selector: response
    params: {}
- name: upload_document_photo_back
  endpoint:
    path: '{{document_back}}'
    method: PUT
    data_selector: response
    params: {}
- name: identity_verification
  endpoint:
    path: /verify-identity/steps
    method: GET
    data_selector: steps
- name: record_face_photo_liveness
  endpoint:
    path: /v1/processes/{process_id}
    method: GET
    data_selector: current_step_data
    params: {}
- name: record_face_video_liveness
  endpoint:
    path: /v1/processes/{process_id}
    method: GET
    data_selector: current_step_data
    params: {}
- name: face_video
  endpoint:
    path: /face_video
    method: PUT
    data_selector: ''
    params: {}
- name: identity_verification
  endpoint:
    path: /v1/processes/{process_id}
    method: GET
    data_selector: ''
    params: {}
- name: identity_verification
  endpoint:
    path: /api/identity_verification
    method: POST
    data_selector: identity_verification_names
    params: {}
- name: validation
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: GET
    data_selector: validation_status
    params:
      show_details: 'true'
- name: create_validation
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: validation_id
    params:
      type: document-validation
      user_authorized: 'true'
      country: CO
      document_type: national-id
      retry_of_id: '{{ validation_id }}'
- name: get_validation
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: GET
    data_selector: validation_status
    params:
      show_details: 'true'
- name: get_enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: GET
    data_selector: status
    params: {}
- name: delete_enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: DELETE
    data_selector: message
    params: {}
- name: create_validation
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: validation_id
    params:
      type: face-recognition
      user_authorized: 'true'
      account_id: '{{account_id}}'
      threshold: 0.65
- name: create_enrollment
  endpoint:
    path: /v1/enrollments
    method: POST
    data_selector: enrollment_id
    params:
      confirmation: none
      account_id: '{{account_id}}'
- name: get_enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: GET
    data_selector: status
- name: upload_image
  endpoint:
    path: '{{file_upload_link}}'
    method: PUT
    data_selector: message
- name: enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: GET
    data_selector: records
- name: validation
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: records
- name: get_validation
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: GET
    data_selector: records
- name: create_validation
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: POST
    data_selector: validation_id
    params: {}
- name: get_enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: GET
    data_selector: status
    params: {}
- name: get_validation
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: GET
    data_selector: validation_status
    params:
      show_details: 'true'
- name: create_validation
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: POST
    data_selector: validation_id
    params: {}
- name: get_enrollment
  endpoint:
    path: /v1/enrollments/{{enrollment_id}}
    method: GET
    data_selector: account_id
    params: {}
- name: get_validation
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: GET
    data_selector: validation_id
    params:
      show_details: 'true'
- name: enrollment
  endpoint:
    path: /v1/enrollments
    method: POST
    data_selector: records
- name: validation
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: records
- name: update_config
  endpoint:
    path: /config
    method: PUT
- name: get_config
  endpoint:
    path: /config
    method: GET
- name: delete_config
  endpoint:
    path: /config
    method: DELETE
- name: config
  endpoint:
    path: /v1/config
    method: DELETE
    data_selector: ''
    params:
      validator: document-validation
- name: General Parameters
  endpoint:
    path: /general_parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Document Version Config
  endpoint:
    path: /document_version_config
    method: GET
    data_selector: configurations
    params: {}
- name: document-validation
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: null
    params:
      validator: document-validation
      timeout: 250
      allowed_retries: 3
      country: CO
      document_type: national-id
      document_version: co_national-id-2000
      validation_method.data-consistency.status: disabled
      validation_method.manual-review.status: enabled
- name: face-recognition
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: face-recognition
    params: {}
- name: config
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: phone-verification
    params:
      validator: phone-verification
      timeout: 600
      allowed_retries: 3
      custom_name: ACME
- name: get_config
  endpoint:
    path: /v1/config
    method: GET
    data_selector: phone-verification
    params: {}
- name: delete_config
  endpoint:
    path: /v1/config
    method: DELETE
    data_selector: phone-verification
    params:
      validator: phone-verification
- name: email-verification
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: email-verification
    params: {}
- name: create_validation
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: validation_id
    params:
      type: government
      account_id: «value»
      redirect_url: https://www.truora.com/redirect
      user_authorized: 'true'
      nuip: '1234567892'
- name: get_validation
  endpoint:
    path: /v1/validations/{validation_id}
    method: GET
    data_selector: validation_id
    params: {}
- name: flow_template
  endpoint:
    path: /api/flow_template
    method: POST
    data_selector: result
    params: {}
- name: chatbot_results
  endpoint:
    path: /v1/processes/{process_id}/result
    method: GET
    data_selector: process_id
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: Create user validation
  endpoint:
    path: /create_user_validation
    method: POST
- name: Validate code
  endpoint:
    path: /validate_code
    method: POST
- name: outbound_message
  endpoint:
    path: /api/v1/outbound_messages
    method: POST
    data_selector: data
- name: whatsapp_flow
  endpoint:
    path: /api/v1/whatsapp_flows
    method: POST
    data_selector: data
- name: list_outbounds
  endpoint:
    path: /v1/whatsapp/outbounds
    method: GET
    data_selector: records
    params:
      line: required
- name: get_outbound_message
  endpoint:
    path: /v1/whatsapp/outbounds/{outbound_id}
    method: GET
    data_selector: records
- name: send_outbound_message
  endpoint:
    path: /v1/whatsapp/outbounds/send
    method: POST
    data_selector: records
- name: post_image_url
  endpoint:
    path: /your-endpoint-url
    method: POST
    data_selector: image
    params: {}
- name: create_validation
  endpoint:
    path: /v1/validations
    method: POST
    data_selector: validation_id
- name: get_validation_result
  endpoint:
    path: /v1/validations/{{validation_id}}
    method: GET
    data_selector: details
- name: api_keys
  endpoint:
    path: /v1/api-keys
    method: POST
    data_selector: api_key
    params:
      key_type: web
      grant: digital-identity
      country: ALL
- name: inbound_message
  endpoint:
    path: /v1/whatsapp/inbounds
    method: POST
    data_selector: ''
    params: {}
- name: outbound_message
  endpoint:
    path: /v1/whatsapp/outbounds
    method: POST
    data_selector: ''
    params: {}
- name: send_outbound_message
  endpoint:
    path: /v1/whatsapp/outbounds/send
    method: POST
    data_selector: ''
    params: {}
- name: custom_type
  endpoint:
    path: /v1/config
    method: POST
- name: create_check
  endpoint:
    path: /v1/checks
    method: POST
    data_selector: check
    params:
      user_authorized: 'true'
      force_creation: 'true'
      type: person
      national_id: '10000000'
      country: CO
- name: check_status
  endpoint:
    path: /v1/checks/{check_id}
    method: GET
    data_selector: check
- name: check_details
  endpoint:
    path: /v1/checks/{check_id}/details
    method: GET
    data_selector: check
- name: datasets
  endpoint:
    path: /checks/datasets_scores_types/
    method: GET
    data_selector: datasets
    params: {}
- name: check_types
  endpoint:
    path: /checks/datasets_scores_types/
    method: GET
    data_selector: check_types
    params: {}
- name: scores
  endpoint:
    path: /checks/datasets_scores_types/
    method: GET
    data_selector: scores
    params: {}
- name: settings
  endpoint:
    path: /v1/settings
    method: GET
    data_selector: settings
    params: {}
- name: configure_settings
  endpoint:
    path: /v1/settings
    method: POST
    data_selector: settings
    params: {}
- name: create_check
  endpoint:
    path: /v1/checks
    method: POST
    data_selector: check
    params:
      user_authorized: 'true'
      force_creation: 'true'
      type: person
      national_id: ''
      country: ''
- name: check_result
  endpoint:
    path: /v1/checks/{{check_id}}
    method: GET
    data_selector: check
    params: {}
- name: check_details
  endpoint:
    path: /v1/checks/{{check_id}}/details
    method: GET
    data_selector: ''
    params: {}
- name: document-validation
  endpoint:
    path: /v1/config
    method: DELETE
    data_selector: document-validation
    params:
      validator: document-validation
- name: general_parameters
  endpoint:
    path: /general-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: document_version_config
  endpoint:
    path: /document-version-config
    method: GET
    data_selector: config
    params: {}
- name: document-validation
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: document-validation
    params:
      validator: document-validation
      timeout: 250
      allowed_retries: 3
      country: CO
      document_type: national-id
      document_version: co_national-id-2000
      validation_method.data-consistency.status: disabled
      validation_method.manual-review.status: enabled
- name: config
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: response
    params: {}
- name: get_config
  endpoint:
    path: /v1/config
    method: GET
    data_selector: response
    params: {}
- name: delete_config
  endpoint:
    path: /v1/config
    method: DELETE
    data_selector: response
    params: {}
- name: email-verification
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: email-verification
    params: {}
- name: phone-verification
  endpoint:
    path: /v1/config
    method: PUT
    data_selector: phone-verification
    params: {}
- name: phone-verification
  endpoint:
    path: /v1/config
    method: GET
    data_selector: phone-verification
    params: {}
- name: phone-verification
  endpoint:
    path: /v1/config
    method: DELETE
    data_selector: phone-verification
    params:
      validator: phone-verification
notes:
- Ensure proper authorization with the Truora-API-Key in the header.
- Validation results can include various failure statuses such as declined, expired,
  or system_error.
- You must generate a unique token (api_key) for each identity validation process,
  even if performed by the same user.
- Set the Truora-API-Key header to the value of the generated token (api_key) required
  before making this request.
- Validation account ID
- Validation creation date is in RFC3339 format
- Declined reason is only visible if failure_status is declined.
- Validation status can be pending, success, or failure.
- Describes the reason why the validation was rejected.
- Defines the reason why the validation failed.
- Validation accounts simplify user identification across multiple Truora validators.
- The timeout for all validators defaults to 300 seconds.
- The Config Validators parameters are global to your account and will affect all
  validations performed across it.
- However, validations performed in a Flow will prioritize the configuration in the
  Validator Block of your flow.
- Learn how to generate API Keys to perform the integration with Truora
- Webhook configuration requires an understanding of APIs and authentication schemes
- Credentials are safely encrypted and stored in services
- The webhook will send its response payload in JWT format to the specified endpoint.
- The truora.roles permission, which allows your account to manage user roles and
  permissions internally, is not enabled by default.
- You must have Full Access permissions to create a member.
- Each account can have up to 45 members.
- You must have Full Access permissions to manage members.
- Deleting or disabling a member will prevent them from accessing your Truora account.
- Only Account IDs matching the regex pattern [a-zA-Z0-9_.-]+ are supported.
- Once you have set up your second authentication factor, please keep in mind that
  every time you log in to the Truora platform, you will need to have your mobile
  phone nearby.
- Enter your company/account name (all lowercase, no spaces or punctuation), your
  e-mail username and password, and press Get in.
- Currently, we only support the RS256 algorithm to sign the JWT
- After changing your Public key in your Truora Account, the previous key will be
  available for 5 minutes.
- Please be aware that for this process, Truora must provide information that you
  will use in certain steps, and later, you will need to supply information to complete
  the process. Before starting, please contact your sales representative or reach
  out to the support line.
- Checks that end in error status will not be charged.
- Mandatory authorization for background checks.
- Check status will initially be 'not_started'.
- The Check type Person verifies national_id in multiple databases of public and legal
  entities in the LATAM region.
- Available only in some countries. If you would like to get more information, please
  contact us through WhatsApp.
- Company checks are country-specific, with different datasets and scores for each
  country.
- The links expire every 15 minutes, after that time you will have to make a new query
  to the attachments endpoint.
- The total weights of the datasets must always equal 1. Any sum greater or lower
  than 1 will result in a creation failure.
- If you want to use a custom type in Document Validation, add the dataset `dataset_document_validation`
  with a weight of 0.
- If you want to learn how to do this process via API, consult the Background Checks
  Batch via API guide.
- This type of search may take up to 2 hours to complete.
- The file_upload_link has an expiration time of 30 minutes.
- You can upload files with a maximum of 1000 records each.
- These settings will affect all check types performed in your client account.
- The identity process expiration time has a shelf life of 15 min by default.
- Web Integration Tokens have a 2 hours shelf life by default
- Remember also you can customize your web flow.
- Enrollment status will initially be pending with the reason set to waiting_file_upload
  until the reference image is successfully uploaded.
- If your company requires enrollment without validation, request authorization from
  the support team.
- The config parameters you will see in the Config Validator Guide are global parameters
  for your account and will affect all the validations across your account.
- If you set Whatsapp as the OTP delivery method, you must have your own WABA line
  and Activate it.
- Ensure the web_flow_id matches the flow_id value in the JSON body of the request.
- Flow configuration via API requires good understanding of APIs and authentication
  schemes.
- Manual Review may be triggered if fraud is detected via risk signals.
- ALL refers only to passport document type.
- Any refers to non categorized by country.
- Whenever a validation expires in the validation process, the API provides an expired
  reason to indicate the specific reason for the expiration.
- 'If the PDF has not been requested before, the API will return a 202 Accepted with
  ''file_status'': ''requested'''
- 'While the pdf is being generated, the API will return 202 Accepted with ''file_status'':
  ''in_progress'''
- When the pdf is ready, the API responds with 302 Found, automatically redirecting
  to the PDF file
- A Web Integration Token has a 2 hours shelf life by default.
- Truora API Key is different from the api_key token in your Process Link.
- Web Integration Tokens have a 2 hours shelf life by default.
- You must create a Truora API key to perform an integration.
- Create a Truora API Key to perform an integration.
- Web Integration Token is required for using the SDK.
- Only add the permissions that your application will use.
- Providing a phone number is mandatory for the user when the automatic recovery option
  is enabled.
- Users must grant location permissions at the beginning of the verification process.
- If VPN usage restriction is enabled and a VPN is detected, the process will block
  until the user turns off the VPN.
- The maximum time limit for manual review is 24 hours.
- You must have the identity.processes.override.status permission to override process
  status.
- Truora will not be responsible for any misuse of this feature.
- This block must precede any other verification blocks.
- Only for Colombia the NIT field is mandatory
- In case you obtain your users’ agreement in any other way and do not want this verification
  to be shown, please contact us so that we can consider whether your process meets
  the requirements and consider making it optional for you.
- The maximum expiration time you can set is 1440 minutes (24 hours). If you don’t
  set it, the default expiration time is 120 minutes (2 hours).
- A higher value for the percentage of similarity may increase friction with the end-user,
  resulting in decreased customer conversion, while a lower value might increase conversion
  but reduce the rigor of the validation.
- A validation account is recommended for tracking validations.
- A unique api_key must be generated for each identity verification process.
- Some steps may require retries based on user input.
- Consider using Truora’s ready-to-use Digital Identity Web Integration before implementing
  your own front-end.
- This guide is intended only for advanced users who require full control over their
  front-end.
- Ingresa tu correo electrónico, enviaremos un código de seguridad.
- enable_file_upload is true for document verification.
- manual_review is disabled for document verification.
- Uses OAuth2 with refresh token
- Enable file upload is true.
- Retries are set to 2.
- Face threshold is 0.65.
- Timeout is 300 seconds.
- Liveness type is passive.
- The process requires multiple steps, including face photo and video liveness validation.
- The status of a process always begins as pending, and updates to either success
  or failure when the process completes.
- Links of the uploaded document pictures are valid for 15 minutes
- Supported formats for document upload are JPEG, JPG, and PNG, with a maximum allowed
  size of 30MB.
- PDF format is allowed when 'document_type' is set to 'invoice' (Only allowed for
  Mexico).
- If the body parameter 'confirmation' is set to 'none', no validation will be needed
  for a successful enrollment.
- The threshold is set to 0.65 by default.
- By default, the user will have 2 retries to enter the code.
- Enrollment status will be pending until the reference image is successfully uploaded.
- If the validation status is success, it indicates that the user’s face was not found
  in any collection of reported faces.
- Validations performed in a Flow will prioritize the configuration in the Validator
  Block of your flow.
- If the type parameter is omitted, all configurations will be reset to their default
  values.
- The config feature allows you to customize various parameters to enhance or adjust
  the behavior of the Document Validator.
- When a validation is executed, these parameters override the default configuration.
- The retry feature is only available when passive liveness is enabled in the Face
  Validation process.
- Parameters include timeout and allowed_retries which can be customized.
- Please save the validation_id and session_id value from the response, as you will
  need it in subsequent steps.
- Having a WABA Line is essential to use our Whatsapp Customer Engagement platform.
- The approval process for Outbound Messages (Message Templates) by Meta can take
  from 5 minutes to 5 business days.
- The process expiration time has a shelf life of 2 hours by default and its maximum
  shelf life is 24 hours.
- An approved Outbound Message is the only permitted method for initiating contact
  with customers.
- Message approval can take anywhere from 5 minutes up to 5 business days.
- The config parameters are global parameters for your account and will affect all
  the validations across your account.
- Currently, only API key authentication is supported.
- If the request fails, the chat ends, notifying the user with 'User not found'.
- If the Validation status is not success, the chat ends notifying the user with 'Login
  Failed'.
- The Conversation Type of your Outbound message must be set to Flow to allow it triggering
  a flow.
- The image URLs you receive in your WhatsApp flow are typically hosted on AWS S3
  and are time-sensitive. These URLs usually expire after a predefined period of 15
  minutes.
- To start using electronic signature as a validator, it is essential to configure
  the Zapsign integration in your Truora account.
- Users must grant explicit permission to receive Outbound Messages.
- The total weights of the datasets must always equal 1.
- The Truora API Key generated will be used for authentication, which will allow you
  to perform API calls and access Truora´s Services.
- When a check enters the delayed status, depending on the country, it can take up
  to 3 days to finish.
- API requires valid Truora API-Key for authentication.
- The API returns a response in JSON format.
- Omitting the type parameter will reset all configurations to their default values.
- Allows customization of document validation parameters.
- Retry feature is only available when passive liveness is enabled in the Face Validation
  process.
errors:
- validation_not_performed
- input_file_not_uploaded
- pending_validation_methods
- manual_review_expired
- declined
- expired
- system_error
- 400 (Bad Request)
- 429 (Too Many Requests)
- '404: Resource not found'
- '401: Unauthorized'
- 'failed: Validation process completed successfully but the subject did not pass
  the validation.'
- 'expired: Validation took too long to have a result.'
- 'system_error: An error occurred while processing the validation.'
- 401 (Unauthorized)
- 404 (Not Found)
- 401 Unauthorized
- 'declined: The process was completed successfully but the subject did not pass the
  validation.'
- 'expired: The validation took too long to have a result.'
- 403 (Forbidden)
- 'declined: The process was completed successfully but the subject did not pass the
  validation'
- 'expired: The validation took too long to have a result'
- 'system_error: An error occurred while processing the validation'
- 'declined: Process completed but subject did not pass validation.'
- 'system_error: Error occurred while processing the validation.'
- 'system_error: Error occurred while processing the validation'
- 'expired: Validation took too long to have a result'
- 'declined: Subject did not pass the validation'
- 'declined: process was completed successfully but the subject did not pass the validation.'
- 'expired: validation took too long to have a result.'
- 'system_error: an error occurred while processing the validation.'
- Common errors in Truora's identity verification process.
- '400 Bad Request: Check the parameters provided.'
- '401 Unauthorized: Ensure the API key is valid.'
- '404 Not Found: Check ID may be incorrect.'
- 'Invalid request: invalid check_type config'
- '10200: Successfully uploaded'
- '201: Created'
- '403 - Forbidden: Insufficient permissions'
- '200 - Pending status: waiting_file_upload'
- 'Unauthorized: Check your API key.'
- 'input_file_not_uploaded: Indicates that the user did not upload all the files necessary
  to perform the validation.'
- 'manual_review_expired: Indicates that the validation time ended before manual review
  was performed.'
- 'pending_validation_methods: Indicates that the validation time ended and there
  are still pending subvalidations.'
- 'document_validation_not_started: Indicates that the user did not take the necessary
  steps to initialize the document validation.'
- 'invoice_validation_not_started: Indicates that the user did not take the necessary
  steps to initialize the invoice validation.'
- 'face_validation_not_started: Indicates that the user did not take the necessary
  steps to initialize the face validation.'
- 'validation_not_performed: Indicates that the user did not take the necessary steps
  to finish the validation.'
- 'email_validation_not_started: Indicates that the user did not take the necessary
  steps to initialize the email validation.'
- 'phone_validation_not_started: Indicates that the user did not take the necessary
  steps to initialize the phone validation.'
- 'electronic_signature_validation_not_started: Indicates that the user did not take
  the necessary steps to initialize the electronic signature validation.'
- 'geolocation_not_provided: Indicates that the user did not provide the necessary
  geolocation information.'
- 'data_authorization_not_provided: Indicates that the user did not provide the necessary
  data authorization information.'
- '202 Accepted: Requested'
- '202 Accepted: In Progress'
- '302 Found: Redirect to PDF URL'
- The process id provided to the api resource is wrong.
- It often happens that you generate a temporary API key and create a process with
  this API key, and then generate a new temporary API key and try to access the data
  of the previously created process with this last API key. This is not allowed by
  our system, if the process is created with a temporary API key, all actions of this
  process must be performed with this same API key or with the main API key of the
  customer.
- It may also happen that you are trying to access the process data with an expired
  temporary API key. It is recommended that the temporary API key is only used for
  users to complete the process from a browser and that the customer accesses the
  process data through their primary API key.
- My user cannot perform the process because the browser shows `unauthorized`? This
  may occur because the process was started too late which means that the user’s temporary
  API key is expired, in this case it will be necessary to generate a new temporary
  API key, if the error persists please contact our support team.
- My users cannot perform the process because they have problems with the camera?
  This may happen because the device has incompatibilities with the browser and can
  not use the camera, in this case it is recommended to suggest the user to try from
  another browser or enable the native camera option.
- 'INVALID_INPUT: Check the input format and required fields.'
- 'remaining_retries: 0'
- 'timeout: 300'
- '200 - Request successful: Indicates the request was processed successfully.'
- '200 - Request successful: Successfully uploaded'
- '403 - Forbidden: Insufficient permissions: missing access to validations.face_recognition.enrollments.delete'
- '400 Bad Request: Check required parameters'
- '401 Unauthorized: Ensure valid Truora API-Key'
- '404 Not Found: Verify enrollment_id or validation_id'
- 'phone_number_out_of_coverage: The phone number is out of coverage.'
- 'phone_number_not_found: The phone number was not found.'
- '200 - Pending Status: Indicates the enrollment or validation is still in progress.'
- '200 - Success: Indicates the operation was successful.'
- '200 - Failure: Indicates the operation failed due to the validation process.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check parameter values and format.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Verify API key and permissions.'
- Business Account locked
- Image file format not supported
- Invalid media size
- Invalid media URL
- Invalid parameter value in outbound template
- Invalid parameter
- Invalid WhatsApp number
- It was not possible to confirm success or failure in the message sending
- Media upload error
- Message failed to send due to an unknown error
- Message sent to already expired WhatsApp session
- Number of parameters provided does not match expected number of parameters
- Param text cannot have new-line/tab characters or more than 4 consecutive spaces
- Phone number not found in Whatsapp
- Receiver is incapable of receiving this message
- Recipient is not a valid WhatsApp user
- Request to specified media URL failed
- Send template message failed
- Something went wrong
- Spam Rate limit hit
- Templated messaging is disabled or Whatsapp session is already expired
- The amount of messages sent by this WABA exceeds its 24h limit
- User not opted in and inactive
- User WA version does not support message
- User’s number is part of an experiment
- WhatsApp Account does not exist
- Your WhatsApp business account has been locked.
- Unable to deliver message. Confirm with the recipient that they agree to be contacted
  by you over WhatsApp and are using the latest version of WhatsApp
- Invalid user phone number
- User phone number is duplicated
- Message undeliverable
- Wrong number format
- 'Invalid request: conversation already in progress (10400)'
- 'User not found: The specified username does not exist.'
- 'Login Failed: The provided OTP Code is incorrect.'
- '401 Unauthorized: Recheck API key or permissions'
- '400 Bad Request: Check required parameters when creating a check.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.validations.truora.com
  auth:
    type: apikey
    location: header
    header_name: Truora-API-Key
source_metadata: null
