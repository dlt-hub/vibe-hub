resources:
- name: accounts
  endpoint:
    path: /accounts.csv
    method: GET
    data_selector: records
- name: terms
  endpoint:
    path: /terms.csv
    method: GET
    data_selector: records
- name: courses
  endpoint:
    path: /courses.csv
    method: GET
    data_selector: records
- name: sections
  endpoint:
    path: /sections.csv
    method: GET
    data_selector: records
- name: enrollments
  endpoint:
    path: /enrollments.csv
    method: GET
    data_selector: records
- name: group_categories
  endpoint:
    path: /group_categories.csv
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /groups.csv
    method: GET
    data_selector: records
- name: groups_membership
  endpoint:
    path: /groups_membership.csv
    method: GET
    data_selector: records
- name: differentiation_tag_sets
  endpoint:
    path: /differentiation_tag_sets.csv
    method: GET
    data_selector: records
- name: differentiation_tags
  endpoint:
    path: /differentiation_tags.csv
    method: GET
    data_selector: records
- name: differentiation_tag_membership
  endpoint:
    path: /differentiation_tag_membership.csv
    method: GET
    data_selector: records
- name: xlists
  endpoint:
    path: /xlists.csv
    method: GET
    data_selector: records
- name: user_observers
  endpoint:
    path: /user_observers.csv
    method: GET
    data_selector: records
- name: admins
  endpoint:
    path: /admins.csv
    method: GET
    data_selector: records
- name: logins
  endpoint:
    path: /logins.csv
    method: POST
    data_selector: records
    params: {}
- name: change_sis_id
  endpoint:
    path: /change_sis_id.csv
    method: POST
    data_selector: records
    params: {}
- name: courses
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.course
    params: {}
- name: files
  endpoint:
    path: /api/v1/users/self/files
    method: POST
    data_selector: upload_url
- name: available_reports
  endpoint:
    path: /method/account_reports/available_reports
    method: GET
- name: create_report
  endpoint:
    path: /method/account_reports/create
    method: POST
- name: index_reports
  endpoint:
    path: /method/account_reports/index
    method: GET
- name: show_report
  endpoint:
    path: /method/account_reports/show
    method: GET
- name: destroy_report
  endpoint:
    path: /method/account_reports/destroy
    method: DELETE
- name: abort_report
  endpoint:
    path: /method/account_reports/abort
    method: POST
- name: favorites
  endpoint:
    path: /method.favorites.add_favorite_groups
    method: POST
- name: course_favorites
  endpoint:
    path: /method.favorites.remove_favorite_course
    method: DELETE
- name: group_favorites
  endpoint:
    path: /method.favorites.remove_favorite_groups
    method: DELETE
- name: reset_course_favorites
  endpoint:
    path: /method.favorites.reset_course_favorites
    method: POST
- name: reset_group_favorites
  endpoint:
    path: /method.favorites.reset_groups_favorites
    method: POST
- name: rubric_associations
  endpoint:
    path: /method/rubric_associations
    method: DELETE
- name: scores
  endpoint:
    path: /method/lti/ims/scores
    method: CREATE
- name: recipients
  endpoint:
    path: /method/search/recipients
- name: courses
  endpoint:
    path: /method/search/all_courses
- name: course_sections
  endpoint:
    path: /method/sections/index
- name: kaltura_config
  endpoint:
    path: /method/services_api/show_kaltura_config
- name: sis_import_errors
  endpoint:
    path: /method/sis_import_errors_api/index
- name: sis_imports
  endpoint:
    path: /method/sis_imports_api/index
- name: assignments
  endpoint:
    path: /method/sis_api/sis_assignments
- name: submissions
  endpoint:
    path: /method/submissions/create
- name: users
  endpoint:
    path: /method/users/api_index
- name: custom_data
  endpoint:
    path: /method/custom_data/set_data
- name: course_nicknames
  endpoint:
    path: /method/course_nicknames/index
- name: webhook_subscriptions
  endpoint:
    path: /method/lti/subscriptions_api/create
- name: what_if_grades
  endpoint:
    path: /method/what_if_grades_api/update
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
    data_selector: AccountCalendar
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
    data_selector: AccountNotification
- name: reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: Report
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
- name: settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: environment_settings
- name: permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
- name: accounts
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: account
    params: {}
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
    data_selector: user
    params: {}
- name: bulk_update_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
    data_selector: user
    params: {}
- name: restore_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id/restore
    method: PUT
    data_selector: user
    params: {}
- name: create_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: POST
    data_selector: account
    params: {}
- name: get_department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/activity
    method: GET
    data_selector: activity
    params: {}
- name: get_department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/grades
    method: GET
    data_selector: grades
    params: {}
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/statistics
    method: GET
    data_selector: statistics
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
    data_selector: activity
- name: course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
    data_selector: assignments
- name: student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
    data_selector: student_summaries
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: appointment_groups
- name: single_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: GET
    data_selector: appointment_group
- name: create_appointment_group
  endpoint:
    path: /api/v1/appointment_groups
    method: POST
    data_selector: appointment_group
- name: update_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: PUT
    data_selector: appointment_group
- name: delete_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: DELETE
    data_selector: appointment_group
- name: list_user_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/users
    method: GET
    data_selector: users
- name: list_student_group_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/groups
    method: GET
    data_selector: groups
- name: get_next_appointment
  endpoint:
    path: /api/v1/appointment_groups/next_appointment
    method: GET
    data_selector: next_appointment
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: Assignment
    params: {}
- name: assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
- name: bulk_update_assignment_dates
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
- name: list_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
- name: get_single_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: GET
- name: delete_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: POST
    data_selector: assignment_overrides
    params: {}
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
    data_selector: authentication_providers
    params: {}
- name: authentication_provider_restore
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id/restore
    method: PUT
- name: sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: GET
- name: update_sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: PUT
- name: authentication_audit_logins
  endpoint:
    path: /api/v1/audit/authentication/logins/:login_id
    method: GET
- name: authentication_audit_accounts
  endpoint:
    path: /api/v1/audit/authentication/accounts/:account_id
    method: GET
- name: authentication_audit_users
  endpoint:
    path: /api/v1/audit/authentication/users/:user_id
    method: GET
- name: blackout_dates
  endpoint:
    path: /api/v1/accounts/:account_id/blackout_dates
    method: GET
- name: create_blackout_date
  endpoint:
    path: /api/v1/accounts/:account_id/blackout_dates
    method: POST
- name: update_blackout_date
  endpoint:
    path: /api/v1/accounts/:account_id/blackout_dates/:id
    method: PUT
- name: delete_blackout_date
  endpoint:
    path: /api/v1/accounts/:account_id/blackout_dates/:id
    method: DELETE
- name: block_editor_templates
  endpoint:
    path: /api/v1/courses/:course_id/block_editor_templates
    method: GET
- name: blueprint_templates
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id
    method: GET
- name: associated_courses
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/associated_courses
    method: GET
- name: update_associations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/update_associations
    method: PUT
- name: queue_migration
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: POST
- name: unsynced_changes
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/unsynced_changes
    method: GET
- name: blueprint_template_migration_details
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations/:id/details
    method: GET
- name: blueprint_subscriptions
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions
    method: GET
- name: blueprint_subscriptions_migrations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions/:subscription_id/migrations
    method: GET
- name: blueprint_import
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions/:subscription_id/migrations/:id
    method: GET
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
- name: user_calendar_events
  endpoint:
    path: /api/v1/users/:user_id/calendar_events
    method: GET
- name: create_calendar_event
  endpoint:
    path: /api/v1/calendar_events
    method: POST
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
    data_selector: calendar_event
    params: {}
- name: delete_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: DELETE
    data_selector: cancel_reason
    params: {}
- name: save_enabled_account_calendars
  endpoint:
    path: /api/v1/calendar_events/save_enabled_account_calendars
    method: POST
    data_selector: mark_feature_as_seen
    params: {}
- name: set_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: POST
    data_selector: timetables
    params: {}
- name: get_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: GET
    data_selector: ''
    params: {}
- name: create_or_update_events
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable_events
    method: POST
    data_selector: events
    params: {}
- name: experience_summary
  endpoint:
    path: /api/v1/career/experience_summary
    method: GET
    data_selector: ''
    params: {}
- name: switch_experience
  endpoint:
    path: /api/v1/career/switch_experience
    method: POST
    data_selector: experience
    params: {}
- name: switch_role
  endpoint:
    path: /api/v1/career/switch_role
    method: POST
    data_selector: role
    params: {}
- name: list_collaborations
  endpoint:
    path: /api/v1/courses/:course_id/collaborations
    method: GET
    data_selector: ''
    params: {}
- name: list_members_of_collaboration
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
    data_selector: ''
    params: {}
- name: list_potential_members
  endpoint:
    path: /api/v1/courses/:course_id/potential_collaborators
    method: GET
    data_selector: ''
    params: {}
- name: list_comm_messages
  endpoint:
    path: /api/v1/comm_messages
    method: GET
    data_selector: ''
    params: {}
- name: list_user_communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
    data_selector: ''
    params: {}
- name: create_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
    data_selector: ''
    params: {}
- name: delete_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_push_token
  endpoint:
    path: /api/v1/users/self/communication_channels/push
    method: DELETE
    data_selector: ''
    params: {}
- name: list_conferences
  endpoint:
    path: /api/v1/courses/:course_id/conferences
    method: GET
    data_selector: ''
    params: {}
- name: conferences
  endpoint:
    path: /api/v1/conferences
    method: GET
    data_selector: conferences
    params:
      state: live
- name: content_exports
  endpoint:
    path: /api/v1/courses/:course_id/content_exports
    method: GET
    data_selector: ContentExport
- name: content_migrations
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: GET
    data_selector: ContentMigration
- name: migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
    data_selector: MigrationIssue
- name: content_migrations
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations/:id
    method: PUT
- name: migrators
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations/migrators
    method: GET
- name: selective_data
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations/:id/selective_data
    method: GET
- name: asset_id_mapping
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/asset_id_mapping
    method: GET
- name: csp_settings
  endpoint:
    path: /api/v1/courses/:course_id/csp_settings
    method: GET
- name: content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares
    method: POST
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: batches
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: status
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: status
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
    data_selector: conversation
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/messages
    method: POST
    data_selector: message
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
- name: find_recipients
  endpoint:
    path: /api/v1/conversations/find_recipients
    method: GET
- name: unread_count
  endpoint:
    path: /api/v1/conversations/unread_count
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_courses
  endpoint:
    path: /api/v1/users/:user_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_progress
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/progress
    method: GET
    data_selector: progress
    params: {}
- name: create_course
  endpoint:
    path: /api/v1/courses
    method: POST
    data_selector: course
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses/:course_id
    method: GET
    data_selector: data
- name: students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
    data_selector: data
- name: recent_students
  endpoint:
    path: /api/v1/courses/:course_id/recent_students
    method: GET
    data_selector: data
- name: course_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: PUT
    data_selector: settings
- name: student_view_student
  endpoint:
    path: /api/v1/courses/:course_id/student_view_student
    method: GET
    data_selector: user
- name: single_course
  endpoint:
    path: /api/v1/courses/:id
    method: GET
    data_selector: course
- name: update_course
  endpoint:
    path: /api/v1/courses/:id
    method: PUT
    data_selector: course
- name: batch_update_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: PUT
    data_selector: progress
- name: reset_course
  endpoint:
    path: /api/v1/courses/:course_id/reset_content
    method: POST
    data_selector: course
- name: effective_due_dates
  endpoint:
    path: /api/v1/courses/:course_id/effective_due_dates
    method: GET
    data_selector: due_dates
- name: effective_due_dates
  endpoint:
    path: /api/v1/courses/:course_id/effective_due_dates
    method: GET
- name: permissions
  endpoint:
    path: /api/v1/courses/:course_id/permissions
    method: GET
- name: bulk_user_progress
  endpoint:
    path: /api/v1/courses/:course_id/bulk_user_progress
    method: GET
- name: dismiss_migration_limitation_message
  endpoint:
    path: /api/v1/courses/:id/dismiss_migration_limitation_message
    method: POST
- name: course_copy_status
  endpoint:
    path: /api/v1/courses/:course_id/course_copy/:id
    method: GET
- name: copy_course_content
  endpoint:
    path: /api/v1/courses/:course_id/course_copy
    method: POST
- name: custom_gradebook_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: GET
- name: create_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: POST
- name: update_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: PUT
- name: delete_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: DELETE
- name: reorder_custom_gradebook_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/reorder
    method: POST
- name: list_entries_for_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data
    method: GET
- name: update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data/:user_id
    method: PUT
- name: bulk_update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_column_data
    method: PUT
- name: create_developer_key_account_binding
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings
    method: POST
- name: list_developer_keys
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: GET
- name: create_developer_key
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: POST
- name: update_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: PUT
- name: delete_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: DELETE
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: DiscussionTopic
- name: create_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
    data_selector: DiscussionTopic
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
    data_selector: DiscussionTopic
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
- name: get_single_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
    data_selector: DiscussionTopic
- name: find_last_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: GET
    data_selector: summary
- name: find_or_create_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: POST
    data_selector: summary
- name: disable_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/disable
    method: PUT
- name: summary_feedback
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/:summary_id/feedback
    method: POST
- name: view_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/view
    method: GET
- name: post_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: POST
- name: duplicate_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/duplicate
    method: POST
- name: list_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
- name: add_reply
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: POST
- name: list_entry_replies
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: GET
- name: mark_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
- name: mark_all_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/read_all
    method: PUT
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
- name: discussion_topics_read_all
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: PUT
- name: discussion_topics_unread_all
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: DELETE
- name: discussion_entry_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: PUT
- name: discussion_entry_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: DELETE
- name: discussion_entry_rating
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/rating
    method: POST
- name: subscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: PUT
- name: unsubscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: DELETE
- name: create_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: POST
- name: update_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: PUT
- name: delete_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: DELETE
- name: list_enrollment_terms
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: GET
- name: retrieve_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: GET
- name: list_enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
- name: user_enrollments
  endpoint:
    path: /api/v1/users/:user_id/enrollments
    method: GET
    data_selector: enrollments
    params: {}
- name: enrollment_by_id
  endpoint:
    path: /api/v1/accounts/:account_id/enrollments/:id
    method: GET
    data_selector: enrollment
    params:
      id: required
- name: create_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
    data_selector: enrollment
    params:
      enrollment[user_id]: required
      enrollment[type]: required
      enrollment[enrollment_state]: invited
- name: bulk_enrollment
  endpoint:
    path: /api/v1/accounts/:account_id/bulk_enrollment
    method: POST
    data_selector: bulk_enrollment
    params: {}
- name: delete_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
    data_selector: enrollment
    params:
      task: optional
- name: error_report
  endpoint:
    path: /api/v1/error_reports
    method: POST
    data_selector: error
    params: {}
- name: epub_export
  endpoint:
    path: /api/v1/courses/:course_id/epub_exports
    method: POST
    data_selector: EpubExport
    params: {}
- name: show_epub_export
  endpoint:
    path: /api/v1/courses/:course_id/epub_exports/:id
    method: GET
    data_selector: EpubExport
    params: {}
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: external_tools
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools
    method: POST
    data_selector: tool
    params: {}
- name: visible_course_nav_tools
  endpoint:
    path: /api/v1/external_tools/visible_course_nav_tools
    method: GET
    data_selector: tools
    params:
      context_codes[]: course_123
- name: list_favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
    data_selector: courses
    params: {}
- name: list_favorite_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: GET
    data_selector: groups
    params: {}
- name: favorites_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: POST
    data_selector: Favorite
    params: {}
- name: favorites_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: POST
    data_selector: Favorite
    params: {}
- name: remove_favorite_course
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: DELETE
    data_selector: Favorite
    params: {}
- name: remove_favorite_group
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: DELETE
    data_selector: Favorite
    params: {}
- name: reset_course_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: DELETE
    data_selector: Favorite
    params: {}
- name: reset_group_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: DELETE
    data_selector: Favorite
    params: {}
- name: list_features
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
    data_selector: Feature
    params: {}
- name: list_enabled_features
  endpoint:
    path: /api/v1/courses/:course_id/features/enabled
    method: GET
    data_selector: Feature
    params: {}
- name: get_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: GET
    data_selector: FeatureFlag
    params: {}
- name: set_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: PUT
    data_selector: FeatureFlag
    params:
      state: 'on'
- name: remove_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: DELETE
    data_selector: FeatureFlag
    params: {}
- name: get_quota_information
  endpoint:
    path: /api/v1/courses/:course_id/files/quota
    method: GET
    data_selector: quota
    params: {}
- name: list_files
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: GET
    data_selector: File
    params: {}
- name: get_file
  endpoint:
    path: /api/v1/files/:id
    method: GET
    data_selector: File
    params: {}
- name: files
  endpoint:
    path: /api/v1/files/:id
    method: DELETE
    params:
      replace: 'true'
- name: icon_metadata
  endpoint:
    path: /api/v1/files/:id/icon_metadata
    method: GET
- name: reset_verifier
  endpoint:
    path: /api/v1/files/:id/reset_verifier
    method: POST
- name: folders
  endpoint:
    path: /api/v1/folders/:id/folders
    method: GET
- name: all_folders
  endpoint:
    path: /api/v1/courses/:course_id/folders
    method: GET
- name: media_folder
  endpoint:
    path: /api/v1/courses/:course_id/folders/media
    method: GET
- name: grade_change_audit
  endpoint:
    path: /api/v1/audit/grade_change
    method: GET
    data_selector: GradeChangeEvent
    params: {}
- name: grade_change_by_assignment
  endpoint:
    path: /api/v1/audit/grade_change/assignments/:assignment_id
    method: GET
    data_selector: GradeChangeEvent
    params: {}
- name: grade_change_by_course
  endpoint:
    path: /api/v1/audit/grade_change/courses/:course_id
    method: GET
    data_selector: GradeChangeEvent
    params: {}
- name: grade_change_by_student
  endpoint:
    path: /api/v1/audit/grade_change/students/:student_id
    method: GET
    data_selector: GradeChangeEvent
    params: {}
- name: grade_change_by_grader
  endpoint:
    path: /api/v1/audit/grade_change/graders/:grader_id
    method: GET
    data_selector: GradeChangeEvent
    params: {}
- name: days_in_gradebook_history
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/days
    method: GET
    data_selector: Day
    params: {}
- name: details_for_date_in_gradebook_history
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/:date
    method: GET
    data_selector: Grader
    params: {}
- name: list_submissions
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/:date/graders/:grader_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: SubmissionHistory
    params: {}
- name: list_uncollated_submission_versions
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: SubmissionVersion
    params: {}
- name: list_grading_period_sets
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: GET
    data_selector: GradingPeriodGroup
    params: {}
- name: create_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: POST
    data_selector: GradingPeriodGroup
    params: {}
- name: update_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: PATCH
    data_selector: GradingPeriod
    params: {}
- name: delete_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: DELETE
    data_selector: GradingPeriod
    params: {}
- name: list_grading_periods
  endpoint:
    path: /api/v1/accounts/:account_id/grading_periods
    method: GET
    data_selector: GradingPeriod
    params: {}
- name: get_single_grading_period
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: GET
    data_selector: GradingPeriod
    params: {}
- name: update_single_grading_period
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: PUT
    data_selector: GradingPeriod
    params: {}
- name: delete_grading_period
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: DELETE
    data_selector: GradingPeriod
    params: {}
- name: batch_update_grading_periods
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/batch_update
    method: PATCH
    data_selector: GradingPeriod
    params: {}
- name: create_new_grading_standard
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards
    method: POST
    data_selector: GradingStandard
    params: {}
- name: list_grading_standards
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards
    method: GET
    data_selector: GradingStandard
    params: {}
- name: grading_standards
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards
    method: GET
- name: group_categories
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: GET
- name: groups_in_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id/groups
    method: GET
- name: users_in_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id/users
    method: GET
- name: group_memberships
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: GET
    data_selector: memberships
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: groups
- name: inst_access_tokens
  endpoint:
    path: /api/v1/inst_access_tokens
    method: POST
- name: jwts
  endpoint:
    path: /api/v1/jwts
    method: POST
- name: late_policy
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: GET
- name: line_items
  endpoint:
    path: /api/lti/courses/:course_id/line_items
    method: GET
- name: live_assessment_results
  endpoint:
    path: /api/v1/courses/:course_id/live_assessments/:assessment_id/results
    method: POST
- name: live_assessments
  endpoint:
    path: /api/v1/courses/:course_id/live_assessments
    method: GET
    data_selector: assessments
- name: user_logins
  endpoint:
    path: /api/v1/users/:user_id/logins
    method: GET
    data_selector: logins
- name: lti_registrations
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations
    method: GET
    data_selector: registrations
- name: lti_registrations
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations
    method: POST
    data_selector: registration
- name: media_tracks
  endpoint:
    path: /api/v1/media_objects/:media_object_id/media_tracks
    method: GET
    data_selector: media_tracks
- name: media_attachments_tracks
  endpoint:
    path: /api/v1/media_attachments/:attachment_id/media_tracks
    method: GET
    data_selector: media_tracks
- name: media_tracks
  endpoint:
    path: /api/v1/media_attachments/:attachment_id/media_tracks
    method: PUT
    data_selector: MediaTracks
    params: {}
- name: media_objects
  endpoint:
    path: /api/v1/media_objects
    method: GET
    data_selector: MediaObject
    params: {}
- name: moderated_students
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/moderated_students
    method: GET
    data_selector: User
    params: {}
- name: provisional_grades
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/status
    method: GET
    data_selector: provisional_grades
    params:
      student_id: student_id
- name: module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: POST
    data_selector: ModuleItem
    params: {}
- name: module_item_sequence
  endpoint:
    path: /api/v1/courses/:course_id/module_item_sequence
    method: GET
    data_selector: ModuleItemSequence
    params: {}
- name: notification_preferences
  endpoint:
    path: /api/v1/users/self/communication_channels/:type/:address/notification_preferences/:notification
    method: PUT
    data_selector: notification_preferences
    params:
      notification_preferences[frequency]: Required
- name: outcome_groups
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups
    method: GET
    data_selector: outcome_groups
    params: {}
- name: outcome_link
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: POST
    data_selector: outcome_link
    params: {}
- name: outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id/outcomes/:outcome_id
    method: PUT
- name: subgroup
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id/subgroups
    method: POST
- name: outcome_imports
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports
    method: POST
- name: outcome_rollups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_rollups
    method: GET
    data_selector: rollups
    params: {}
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: GET
    data_selector: Outcome
    params: {}
- name: outcome_alignments
  endpoint:
    path: /api/v1/courses/:course_id/outcome_alignments
    method: GET
    data_selector: OutcomeAlignments
    params: {}
- name: front_page
  endpoint:
    path: /api/v1/courses/:course_id/front_page
    method: GET
    data_selector: Page
    params: {}
- name: pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
    data_selector: Page
    params: {}
- name: planner_items
  endpoint:
    path: /api/v1/planner/items
    method: GET
    data_selector: items
    params: {}
- name: planner_notes
  endpoint:
    path: /api/v1/planner_notes
    method: GET
    data_selector: notes
    params: {}
- name: planner_overrides
  endpoint:
    path: /api/v1/planner/overrides
    method: GET
    data_selector: overrides
    params: {}
- name: planner_overrides
  endpoint:
    path: /api/v1/planner/overrides
    method: POST
    data_selector: planner_override
    params: {}
- name: poll_sessions
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions
    method: GET
    data_selector: poll_sessions
    params: {}
- name: poll_choices
  endpoint:
    path: /api/v1/polls/:poll_id/poll_choices
    method: GET
    data_selector: poll_choices
    params: {}
- name: polls
  endpoint:
    path: /api/v1/polls
    method: GET
    data_selector: polls
    params: {}
- name: outcome_proficiency
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_proficiency
    method: GET
    data_selector: proficiency
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
- name: new_quizzes_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/new_quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
- name: quiz_extensions
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/extensions
    method: POST
    data_selector: quiz_extensions
- name: quiz_ip_filters
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/ip_filters
    method: GET
    data_selector: quiz_ip_filters
- name: quiz_groups
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups
    method: POST
    data_selector: quiz_groups
- name: quiz_questions
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions
    method: GET
    data_selector: quiz_questions
- name: quiz_reports
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/reports
    method: GET
    data_selector: quiz_reports
- name: quiz_statistics
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/statistics
    method: GET
    data_selector: quiz_statistics
- name: quiz_submission_events
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: POST
    data_selector: quiz_submission_events
- name: quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions
    method: GET
    data_selector: quiz_submissions
- name: quiz_submission_questions
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions
    method: GET
    data_selector: quiz_submission_questions
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
    data_selector: quiz
- name: quiz_results
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:line_item_id/results
    method: GET
    data_selector: results
- name: roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: roles
- name: roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: POST
    data_selector: roles
- name: deactivate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: DELETE
    data_selector: role
- name: activate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id/activate
    method: POST
    data_selector: role
- name: update_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: PUT
    data_selector: role
- name: rubrics
  endpoint:
    path: /api/v1/accounts/:account_id/rubrics
    method: GET
    data_selector: rubrics
- name: get_single_rubric
  endpoint:
    path: /api/v1/accounts/:account_id/rubrics/:id
    method: GET
    data_selector: rubric
- name: rubric_used_locations
  endpoint:
    path: /api/v1/accounts/:account_id/rubrics/:id/used_locations
    method: GET
- name: rubric_upload
  endpoint:
    path: /api/v1/courses/:course_id/rubrics/upload
    method: POST
- name: rubric_import
  endpoint:
    path: /api/v1/accounts/:account_id/rubrics/upload
    method: POST
- name: rubric_upload_template
  endpoint:
    path: /api/v1/rubrics/upload_template
    method: GET
- name: rubric_upload_status
  endpoint:
    path: /api/v1/courses/:course_id/rubrics/upload/:id
    method: GET
- name: rubric_assessment_create
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments
    method: POST
- name: rubric_assessment_update
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments/:id
    method: PUT
- name: rubric_assessment_destroy
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments/:id
    method: DELETE
- name: rubric_association_create
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations
    method: POST
- name: rubric_association_update
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations/:id
    method: PUT
- name: rubric_association_destroy
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations/:id
    method: DELETE
- name: lti_scores_create
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:line_item_id/scores
    method: POST
- name: find_recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
- name: all_courses
  endpoint:
    path: /api/v1/search/all_courses
    method: GET
    data_selector: courses
    params: {}
- name: course_sections
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: GET
    data_selector: sections
    params: {}
- name: create_course_section
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: POST
    data_selector: section
    params: {}
- name: crosslist_section
  endpoint:
    path: /api/v1/sections/:id/crosslist/:new_course_id
    method: POST
    data_selector: section
    params: {}
- name: uncrosslist_section
  endpoint:
    path: /api/v1/sections/:id/crosslist
    method: DELETE
    data_selector: section
    params: {}
- name: update_section
  endpoint:
    path: /api/v1/sections/:id
    method: PUT
    data_selector: section
    params: {}
- name: get_section_info
  endpoint:
    path: /api/v1/courses/:course_id/sections/:id
    method: GET
    data_selector: section
    params: {}
- name: delete_section
  endpoint:
    path: /api/v1/sections/:id
    method: DELETE
    data_selector: section
    params: {}
- name: kaltura_config
  endpoint:
    path: /api/v1/services/kaltura
    method: GET
    data_selector: kaltura
    params: {}
- name: start_kaltura_session
  endpoint:
    path: /api/v1/services/kaltura_session
    method: POST
    data_selector: ks
    params: {}
- name: sis_import_errors
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/errors
    method: GET
    data_selector: errors
    params: {}
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: GET
    data_selector: imports
    params: {}
- name: import_sis_data
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
    data_selector: import
    params: {}
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
    data_selector: null
    params: {}
- name: sis_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id
    method: GET
    data_selector: null
    params: {}
- name: restore_states
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/restore_states
    method: PUT
    data_selector: null
    params: {}
- name: abort_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/abort
    method: PUT
    data_selector: null
    params: {}
- name: abort_all_pending_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/abort_all_pending
    method: PUT
    data_selector: null
    params: {}
- name: sis_assignments
  endpoint:
    path: /api/sis/accounts/:account_id/assignments
    method: GET
    data_selector: null
    params: {}
- name: disable_post_to_sis
  endpoint:
    path: /api/sis/courses/:course_id/disable_post_to_sis
    method: PUT
    data_selector: null
    params: {}
- name: smart_search
  endpoint:
    path: /api/v1/courses/:course_id/smartsearch
    method: GET
    data_selector: null
    params: {}
- name: edit_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: PUT
    data_selector: null
    params: {}
- name: delete_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: DELETE
    data_selector: null
    params: {}
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/files
    method: POST
    data_selector: null
    params: {}
- name: submit_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions
    method: POST
    data_selector: null
    params: {}
- name: submissions
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: submissions
- name: submission_create
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions
    method: POST
    data_selector: submission
- name: submission_update
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions/:user_id
    method: PUT
    data_selector: submission
- name: gradeable_students
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/gradeable_students
    method: GET
- name: bulk_update_grades
  endpoint:
    path: /api/v1/courses/:course_id/submissions/update_grades
    method: POST
- name: mark_submission_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/read
    method: PUT
- name: mark_bulk_submissions_read
  endpoint:
    path: /api/v1/courses/:course_id/submissions/bulk_mark_read
    method: PUT
- name: mark_submission_item_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/read/:item
    method: PUT
- name: clear_unread_status
  endpoint:
    path: /api/v1/courses/:course_id/submissions/:user_id/clear_unread
    method: PUT
- name: rubric_assessments_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/rubric_assessments/read
    method: GET
- name: mark_rubric_assessments_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/rubric_assessments/read
    method: PUT
- name: document_annotations_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/document_annotations/read
    method: GET
- name: mark_document_annotations_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/document_annotations/read
    method: PUT
- name: submission_summary
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submission_summary
    method: GET
- name: list_available_tabs
  endpoint:
    path: /api/v1/accounts/:account_id/tabs
    method: GET
- name: update_tab
  endpoint:
    path: /api/v1/courses/:course_id/tabs/:tab_id
    method: PUT
- name: list_temporary_enrollment_pairings
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: GET
- name: get_single_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: GET
- name: new_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/new
    method: GET
- name: create_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: POST
- name: delete_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: DELETE
- name: list_linked_observees
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: GET
- name: list_linked_observers
  endpoint:
    path: /api/v1/users/:user_id/observers
    method: GET
- name: add_observee_with_credentials
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: POST
- name: observees
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: POST
- name: observee_info
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: GET
- name: observer_info
  endpoint:
    path: /api/v1/users/:user_id/observers/:observer_id
    method: GET
- name: add_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: PUT
- name: remove_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: DELETE
- name: create_observer_pairing_code
  endpoint:
    path: /api/v1/users/:user_id/observer_pairing_codes
    method: POST
- name: list_users_in_account
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: GET
- name: activity_stream_summary
  endpoint:
    path: /api/v1/users/self/activity_stream/summary
    method: GET
- name: todo_items
  endpoint:
    path: /api/v1/users/self/todo
    method: GET
- name: todo_item_count
  endpoint:
    path: /api/v1/users/self/todo_item_count
    method: GET
- name: upcoming_events
  endpoint:
    path: /api/v1/users/self/upcoming_events
    method: GET
- name: missing_submissions
  endpoint:
    path: /api/v1/users/:user_id/missing_submissions
    method: GET
- name: ignore_stream_item
  endpoint:
    path: /api/v1/users/self/activity_stream/:id
    method: DELETE
- name: ignore_all_stream_items
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: DELETE
- name: create_file
  endpoint:
    path: /api/v1/users/self/files
    method: POST
- name: user_files
  endpoint:
    path: /api/v1/users/:user_id/files
    method: POST
- name: user_details
  endpoint:
    path: /api/v1/users/:id
    method: GET
- name: create_user
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: POST
- name: self_register_user
  endpoint:
    path: /api/v1/accounts/:account_id/self_registration
    method: POST
- name: update_user_settings
  endpoint:
    path: /api/v1/users/:id/settings
    method: PUT
- name: get_custom_colors
  endpoint:
    path: /api/v1/users/:id/colors
    method: GET
- name: update_custom_color
  endpoint:
    path: /api/v1/users/:id/colors/:asset_string
    method: PUT
- name: update_text_editor_preference
  endpoint:
    path: /api/v1/users/:id/text_editor_preference
    method: PUT
- name: update_files_ui_version_preference
  endpoint:
    path: /api/v1/users/:id/files_ui_version_preference
    method: PUT
- name: get_dashboard_positions
  endpoint:
    path: /api/v1/users/:id/dashboard_positions
    method: GET
- name: update_dashboard_positions
  endpoint:
    path: /api/v1/users/:id/dashboard_positions
    method: PUT
- name: users
  endpoint:
    path: /api/v1/users/:id
    method: PUT
    data_selector: User
    params: {}
- name: user_sessions
  endpoint:
    path: /api/v1/users/:id/sessions
    method: DELETE
    data_selector: sessions
    params: {}
- name: mobile_sessions
  endpoint:
    path: /api/v1/users/mobile_sessions
    method: DELETE
    data_selector: mobile_sessions
    params: {}
- name: merge_user
  endpoint:
    path: /api/v1/users/:id/merge_into/:destination_user_id
    method: PUT
    data_selector: User
    params: {}
- name: split_user
  endpoint:
    path: /api/v1/users/:id/split
    method: POST
    data_selector: User
    params: {}
- name: graded_submissions
  endpoint:
    path: /api/v1/users/:id/graded_submissions
    method: GET
    data_selector: graded_submissions
    params: {}
- name: user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
    data_selector: Profile
    params: {}
- name: user_avatars
  endpoint:
    path: /api/v1/users/:user_id/avatars
    method: GET
    data_selector: avatars
    params: {}
- name: page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
    data_selector: page_views
    params: {}
- name: custom_data
  endpoint:
    path: /api/v1/users/:user_id/custom_data
    method: PUT
    data_selector: data
    params:
      ns: string
      data: JSON
- name: course_nicknames
  endpoint:
    path: /api/v1/users/self/course_nicknames
    method: GET
    data_selector: CourseNickname
    params: {}
- name: what_if_grades
  endpoint:
    path: /api/v1/submissions/:id/what_if_grades
    method: PUT
    data_selector: grades
    params: {}
- name: reset_what_if_grades
  endpoint:
    path: /api/v1/courses/:course_id/what_if_grades/reset
    method: PUT
    data_selector: submission
    params: {}
- name: access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens
    method: POST
- name: show_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: GET
- name: update_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: PUT
- name: delete_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: DELETE
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
    data_selector: AccountCalendar
    params:
      search_term: ''
- name: single_account_calendar
  endpoint:
    path: /api/v1/account_calendars/:account_id
    method: GET
    data_selector: AccountCalendar
    params: {}
- name: account_calendars
  endpoint:
    path: /api/v1/accounts/:account_id/account_calendars
    method: GET
- name: visible_calendars_count
  endpoint:
    path: /api/v1/accounts/:account_id/visible_calendars_count
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
    data_selector: notifications
    params:
      include_past: boolean
      include_all: boolean
      show_is_closed: boolean
- name: show_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: GET
    data_selector: notification
- name: create_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: notification
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: subject
    params:
      account_notification[subject]: Required
      account_notification[message]: Required
      account_notification[start_at]: Required
      account_notification[end_at]: Required
- name: update_account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: PUT
    data_selector: subject
    params: {}
- name: close_account_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: DELETE
    data_selector: remove
    params: {}
- name: available_reports
  endpoint:
    path: /account_reports/available_reports
    method: GET
    data_selector: reports
- name: start_report
  endpoint:
    path: /account_reports/create
    method: POST
    data_selector: report
- name: index_reports
  endpoint:
    path: /account_reports/index
    method: GET
    data_selector: reports
- name: status_report
  endpoint:
    path: /account_reports/show
    method: GET
    data_selector: report
- name: delete_report
  endpoint:
    path: /account_reports/destroy
    method: DELETE
    data_selector: report
- name: abort_report
  endpoint:
    path: /account_reports/abort
    method: POST
    data_selector: report
- name: available_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: report
    params: {}
- name: start_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: POST
    data_selector: Report
    params: {}
- name: index_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: GET
    data_selector: Report
    params: {}
- name: status_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: GET
    data_selector: Report
    params: {}
- name: delete_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: DELETE
    data_selector: Report
    params: {}
- name: abort_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id/abort
    method: PUT
    data_selector: Report
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: subaccounts
  endpoint:
    path: /api/v1/sub_accounts
    method: POST
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: account
    params: {}
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
    params: {}
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: environment
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
    params: {}
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: terms_of_service
    params: {}
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: help_links
    params: {}
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: account
    params: {}
- name: active_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PATCH
    data_selector: account
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
- name: delete_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: DELETE
- name: update_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
- name: restore_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id/restore
    method: PUT
- name: create_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: POST
- name: delete_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts/:id
    method: DELETE
- name: account
  endpoint:
    path: /api/lti/accounts/:account_id
    method: GET
    data_selector: Account
- name: list_account_admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
    data_selector: admins
- name: make_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
    data_selector: admin
- name: remove_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
    data_selector: admin
- name: list_my_admin_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self_roles
    method: GET
    data_selector: roles
- name: self_admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self
    method: GET
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/activity
    method: GET
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/grades
    method: GET
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/statistics
    method: GET
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
- name: course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
- name: student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
    data_selector: ''
- name: student_activity
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/activity
    method: GET
    data_selector: ''
- name: student_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/assignments
    method: GET
    data_selector: ''
- name: student_communication
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/communication
    method: GET
    data_selector: ''
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
    data_selector: ExternalFeed
- name: create_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: POST
    data_selector: ExternalFeed
- name: delete_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: DELETE
- name: delete_external_feed_course
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds/:external_feed_id
    method: DELETE
- name: delete_external_feed_group
  endpoint:
    path: /api/v1/groups/:group_id/external_feeds/:external_feed_id
    method: DELETE
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: announcements
    params:
      context_codes[]: course_123
- name: scopes
  endpoint:
    path: /api/v1/accounts/:account_id/scopes
    method: GET
    data_selector: scopes
- name: appointment_groups
  endpoint:
    path: /appointment_groups
    method: GET
    data_selector: appointment_groups
- name: appointment_groups
  endpoint:
    path: /appointment_groups
    method: GET
    data_selector: records
    params:
      scope: reservable
- name: create_appointment_group
  endpoint:
    path: /appointment_groups
    method: POST
- name: get_single_appointment_group
  endpoint:
    path: /appointment_groups/:id
    method: GET
- name: update_appointment_group
  endpoint:
    path: /appointment_groups/:id
    method: PUT
- name: delete_appointment_group
  endpoint:
    path: /appointment_groups/:id
    method: DELETE
- name: list_user_participants
  endpoint:
    path: /appointment_groups/:id/users
    method: GET
- name: list_student_group_participants
  endpoint:
    path: /appointment_groups/:id/groups
    method: GET
- name: get_next_appointment
  endpoint:
    path: /appointment_groups/next_appointment
    method: GET
- name: assignment_extensions
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/extensions
    method: POST
    data_selector: assignment_extensions
    params: {}
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: GET
    data_selector: AssignmentGroup
    params: {}
- name: create_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: POST
    data_selector: AssignmentGroup
    params: {}
- name: edit_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: PUT
    data_selector: AssignmentGroup
    params: {}
- name: destroy_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: DELETE
    data_selector: AssignmentGroup
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/assignments
    method: GET
- name: assignment_overrides
  endpoint:
    path: /api/v1/assignment_overrides
    method: GET
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: list_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id/assignments
    method: GET
- name: user_assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
- name: student_group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
- name: single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
- name: edit_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id
    method: PUT
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: assignment
    params: {}
- name: bulk_update
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
    data_selector: assignments
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
    data_selector: overrides
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: POST
- name: assignment_overrides_update
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: PUT
- name: authentication_providers
  endpoint:
    path: /authentication_providers
    method: GET
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: GET
- name: create_authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: POST
- name: update_authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: PUT
- name: delete_authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: DELETE
- name: restore_authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id/restore
    method: PUT
- name: sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: GET
- name: update_sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: PUT
- name: sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: PUT
    data_selector: SSOSettings
- name: authentication_events_by_login
  endpoint:
    path: /api/v1/audit/authentication/logins/:login_id
    method: GET
    params:
      start_time: DateTime
      end_time: DateTime
- name: authentication_events_by_account
  endpoint:
    path: /api/v1/audit/authentication/accounts/:account_id
    method: GET
    params:
      start_time: DateTime
      end_time: DateTime
- name: authentication_events_by_user
  endpoint:
    path: /api/v1/audit/authentication/users/:user_id
    method: GET
    params:
      start_time: DateTime
      end_time: DateTime
- name: list_blackout_dates
  endpoint:
    path: /courses/:course_id/blackout_dates
    method: GET
- name: get_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates/:id
    method: GET
- name: new_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates/new
    method: GET
- name: create_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates
    method: POST
- name: block_editor_templates
  endpoint:
    path: /api/v1/courses/:course_id/block_editor_templates
    method: GET
    params:
      sort: name
      order: asc
      drafts: true
- name: blueprint_template
  endpoint:
    path: /master_courses/master_templates.show
    method: GET
    data_selector: template
    params: {}
- name: blueprint_migration
  endpoint:
    path: /master_courses/master_templates.migrations_show
    method: GET
    data_selector: migration
    params: {}
- name: blueprint_restriction
  endpoint:
    path: /master_courses/master_templates.restrict_item
    method: POST
    data_selector: restrictions
    params: {}
- name: blueprint_templates
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id
    method: GET
- name: associated_courses
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/associated_courses
    method: GET
- name: update_associations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/update_associations
    method: PUT
- name: migrations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: POST
- name: unsynced_changes
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/unsynced_changes
    method: GET
- name: blueprint_subscriptions
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions
    method: GET
- name: bookmarks
  endpoint:
    path: /api/v1/users/self/bookmarks
    method: GET
    data_selector: Bookmark
- name: create_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks
    method: POST
    data_selector: Bookmark
- name: get_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: GET
    data_selector: Bookmark
- name: update_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: PUT
    data_selector: Bookmark
- name: delete_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: DELETE
    data_selector: Bookmark
- name: delete_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: DELETE
- name: brand_variables
  endpoint:
    path: /api/v1/brand_variables
    method: GET
    data_selector: variables
    params: {}
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
    data_selector: events
- name: user_calendar_events
  endpoint:
    path: /api/v1/users/:user_id/calendar_events
    method: GET
    data_selector: events
- name: create_calendar_event
  endpoint:
    path: /api/v1/calendar_events
    method: POST
    data_selector: event
- name: single_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: GET
    data_selector: event
- name: reserve_time_slot
  endpoint:
    path: /api/v1/calendar_events/:id/reservations
    method: POST
    data_selector: reservation
- name: update_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
    data_selector: event
- name: update_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
- name: delete_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: DELETE
- name: save_enabled_account_calendars
  endpoint:
    path: /api/v1/calendar_events/save_enabled_account_calendars
    method: POST
- name: set_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: POST
- name: get_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: GET
- name: set_course_timetable_events
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable_events
    method: POST
- name: experience_summary
  endpoint:
    path: /api/v1/career/experience_summary
    method: GET
    data_selector: ExperienceSummary
- name: switch_experience
  endpoint:
    path: /api/v1/career/switch_experience
    method: POST
    data_selector: experience
- name: switch_role
  endpoint:
    path: /api/v1/career/switch_role
    method: POST
    data_selector: role
- name: collaborations
  endpoint:
    path: /api/v1/courses/:course_id/collaborations
    method: GET
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
- name: potential_collaborators_courses
  endpoint:
    path: /api/v1/courses/:course_id/potential_collaborators
    method: GET
- name: potential_collaborators_groups
  endpoint:
    path: /api/v1/groups/:group_id/potential_collaborators
    method: GET
- name: comm_messages
  endpoint:
    path: /comm_messages
    method: GET
    data_selector: CommMessage
    params:
      user_id: required
      start_time: ''
      end_time: ''
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
    data_selector: CommunicationChannel
- name: create_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
    data_selector: CommunicationChannel
- name: delete_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:id
    method: DELETE
- name: delete_push_notification_endpoint
  endpoint:
    path: /api/v1/users/self/communication_channels/push
    method: DELETE
- name: conferences
  endpoint:
    path: /api/v1/courses/:course_id/conferences
    method: GET
    data_selector: conferences
- name: user_conferences
  endpoint:
    path: /api/v1/groups/:group_id/conferences
    method: GET
    data_selector: conferences
- name: conferences
  endpoint:
    path: /api/v1/conferences
    method: GET
    data_selector: conferences
    params:
      state: live
- name: content_exports
  endpoint:
    path: /courses/:course_id/content_exports
    method: GET
    data_selector: ContentExport
- name: show_content_export
  endpoint:
    path: /courses/:course_id/content_exports/:id
    method: GET
    data_selector: ContentExport
- name: export_content
  endpoint:
    path: /courses/:course_id/content_exports
    method: POST
    data_selector: ContentExport
- name: content_export
  endpoint:
    path: /api/v1/users/:user_id/content_exports
    method: POST
    data_selector: ContentExport
    params:
      export_type: common_cartridge
      skip_notifications: false
      select: {}
- name: migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
    data_selector: migration_issues
- name: content_migrations
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: GET
    data_selector: content_migrations
- name: migration_issues
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations/:content_migration_id/migration_issues
    method: GET
    data_selector: MigrationIssue
    params: {}
- name: content_migrations
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations
    method: GET
    data_selector: ContentMigration
    params: {}
- name: content_migrations_selective_data
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:id/selective_data
    method: GET
- name: asset_id_mapping
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/asset_id_mapping
    method: GET
- name: get_current_settings
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings
    method: GET
- name: remove_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: DELETE
- name: csp_settings
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings
    method: PUT
    data_selector: null
    params:
      status: enabled, disabled, inherited
- name: remove_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: DELETE
    data_selector: null
    params:
      domain: ''
- name: add_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: POST
    data_selector: null
    params:
      domain: ''
- name: add_multiple_domains
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: POST
    data_selector: null
    params:
      domains: ''
- name: content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares
    method: POST
    data_selector: ContentShare
    params:
      receiver_ids: Required
      content_type: Required
      content_id: Required
- name: sent_content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares/sent
    method: GET
    data_selector: ContentShare
    params: {}
- name: received_content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares/received
    method: GET
- name: unread_shares_count
  endpoint:
    path: /api/v1/users/:user_id/content_shares/unread_count
    method: GET
- name: content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: GET
- name: remove_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: DELETE
- name: add_users_to_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id/add_users
    method: POST
- name: update_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: PUT
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: conversations
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/messages
    method: POST
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
- name: unread_count
  endpoint:
    path: /api/v1/conversations/unread_count
    method: GET
- name: CourseEvent
  endpoint:
    path: /api/course_audit_log
    method: GET
    data_selector: events
- name: course_change_events_by_course
  endpoint:
    path: /api/v1/audit/course/courses/:course_id
    method: GET
    params:
      start_time: ''
      end_time: ''
- name: course_change_events_by_account
  endpoint:
    path: /api/v1/audit/course/accounts/:account_id
    method: GET
    params:
      start_time: ''
      end_time: ''
- name: course_pace
  endpoint:
    path: /api/course_paces
    method: GET
    data_selector: course_paces
- name: course_pacing
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: GET
    data_selector: CoursePace
    params: {}
- name: create_course_pacing
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing
    method: POST
    data_selector: CoursePace
    params: {}
- name: update_course_pacing
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: PUT
    data_selector: CoursePace
    params: {}
- name: delete_course_pacing
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: DELETE
    data_selector: CoursePace
    params: {}
- name: quiz_extensions
  endpoint:
    path: /api/v1/courses/:course_id/quiz_extensions
    method: POST
    data_selector: quiz_extensions
- name: report_status
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type/:id
    method: GET
    data_selector: Report
- name: start_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: POST
    data_selector: Report
- name: last_report_status
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: GET
    data_selector: Report
- name: course_reports
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_courses
  endpoint:
    path: /api/v1/users/:user_id/courses
    method: GET
- name: user_progress
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/progress
    method: GET
- name: create_course
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: POST
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: POST
- name: list_students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
- name: list_users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
- name: recent_students
  endpoint:
    path: /api/v1/courses/:course_id/recent_students
    method: GET
- name: single_user
  endpoint:
    path: /api/v1/courses/:course_id/users/:id
    method: GET
- name: content_share_users
  endpoint:
    path: /api/v1/courses/:course_id/content_share_users
    method: GET
    data_selector: User
    params:
      search_term: string
- name: preview_html
  endpoint:
    path: /api/v1/courses/:course_id/preview_html
    method: POST
    data_selector: html
    params:
      html: string
- name: activity_stream
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream
    method: GET
- name: activity_stream_summary
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream/summary
    method: GET
- name: todo_items
  endpoint:
    path: /api/v1/courses/:course_id/todo
    method: GET
- name: delete_course
  endpoint:
    path: /api/v1/courses/:id
    method: DELETE
    params:
      event: string
- name: course_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: GET
- name: update_course_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: PUT
- name: student_view_student
  endpoint:
    path: /api/v1/courses/:course_id/student_view_student
    method: GET
- name: single_course
  endpoint:
    path: /api/v1/courses/:id
    method: GET
- name: update_course
  endpoint:
    path: /api/v1/courses/:course_id
    method: PUT
- name: update_course
  endpoint:
    path: /api/v1/courses/:id
    method: PUT
    data_selector: course
    params: {}
- name: update_multiple_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: PUT
    data_selector: courses
    params: {}
- name: reset_course
  endpoint:
    path: /api/v1/courses/:course_id/reset_content
    method: POST
    data_selector: course
    params: {}
- name: effective_due_dates
  endpoint:
    path: /api/v1/courses/:course_id/effective_due_dates
    method: GET
    data_selector: due_dates
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/courses/:course_id/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: bulk_user_progress
  endpoint:
    path: /api/v1/courses/:course_id/bulk_user_progress
    method: GET
    data_selector: user_progress
    params: {}
- name: dismiss_migration_limitation_msg
  endpoint:
    path: /api/v1/courses/:id/dismiss_migration_limitation_message
    method: POST
    data_selector: dismissal
    params: {}
- name: course_copy_status
  endpoint:
    path: /api/v1/courses/:course_id/course_copy/:id
    method: GET
    data_selector: copy_status
    params: {}
- name: course_copy
  endpoint:
    path: /api/v1/courses/:course_id/course_copy
    method: POST
    data_selector: null
    params: {}
- name: custom_gradebook_columns
  endpoint:
    path: /courses/:course_id/custom_gradebook_columns
    method: GET
    data_selector: CustomColumn
    params:
      include_hidden: 'false'
- name: create_custom_gradebook_column
  endpoint:
    path: /courses/:course_id/custom_gradebook_columns
    method: POST
    data_selector: CustomColumn
    params: {}
- name: update_custom_gradebook_column
  endpoint:
    path: /courses/:course_id/custom_gradebook_columns/:id
    method: PUT
    data_selector: CustomColumn
    params: {}
- name: delete_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: DELETE
- name: reorder_custom_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/reorder
    method: POST
    params:
      order[]: Required
- name: list_column_entries
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data
    method: GET
    params:
      include_hidden: boolean
- name: update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data/:user_id
    method: PUT
    params:
      column_data[content]: Required
- name: bulk_update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_column_data
    method: PUT
    params:
      column_data[]: Required
- name: developer_key_account_bindings
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings
    method: POST
    data_selector: DeveloperKeyAccountBinding
    params:
      workflow_state: 'off'
- name: Developer Keys
  endpoint:
    path: /developer_keys
    method: GET
- name: developer_keys
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: GET
    data_selector: developer_keys
    params:
      inherited: false
- name: create_developer_key
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: POST
    data_selector: developer_key
    params: {}
- name: update_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: PUT
    data_selector: developer_key
    params: {}
- name: delete_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: DELETE
    data_selector: developer_key
    params: {}
- name: discussion_topics
  endpoint:
    path: /discussion_topics
    method: GET
    data_selector: topics
    params: {}
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: discussion_topics
- name: create_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
    data_selector: create_topic
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
    data_selector: update_topic
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
    data_selector: delete_topic
- name: single_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
- name: find_last_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: GET
- name: find_or_create_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: POST
- name: disable_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/disable
    method: PUT
- name: summary_feedback
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/:summary_id/feedback
    method: POST
- name: get_full_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/view
    method: GET
- name: post_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: POST
- name: duplicate_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/duplicate
    method: POST
- name: list_topic_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
- name: add_reply
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: POST
- name: list_entry_replies
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: GET
- name: entry_list
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entry_list
    method: GET
    data_selector: entries
    params:
      ids[]: string
- name: mark_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
    data_selector: none
    params: {}
- name: mark_all_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/read_all
    method: PUT
    data_selector: none
    params: {}
- name: mark_topic_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
    data_selector: none
    params: {}
- name: mark_all_entries_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: PUT
    data_selector: none
    params: {}
- name: mark_all_entries_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: DELETE
    data_selector: none
    params: {}
- name: mark_entry_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: PUT
    data_selector: none
    params: {}
- name: mark_entry_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: DELETE
    data_selector: none
    params: {}
- name: rate_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/rating
    method: POST
    data_selector: none
    params:
      rating: integer
- name: subscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: PUT
    data_selector: none
    params: {}
- name: unsubscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: DELETE
    data_selector: none
    params: {}
- name: enrollment_terms
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: POST
    data_selector: enrollment_terms
- name: enrollment_terms
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: GET
    data_selector: enrollment_terms
- name: enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: GET
    data_selector: enrollment_term
- name: update_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: PUT
    data_selector: enrollment_term
- name: delete_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: DELETE
    data_selector: enrollment_term
- name: enrollments
  endpoint:
    path: /enrollments
    method: GET
    data_selector: enrollments
    params: {}
- name: enrollment_by_id
  endpoint:
    path: /enrollments/{id}
    method: GET
    data_selector: enrollment
    params: {}
- name: enroll_user
  endpoint:
    path: /enrollments
    method: POST
    data_selector: enrollment
    params: {}
- name: bulk_enrollment
  endpoint:
    path: /enrollments/bulk
    method: POST
    data_selector: enrollments
    params: {}
- name: destroy_enrollment
  endpoint:
    path: /enrollments/{id}
    method: DELETE
    data_selector: enrollment
    params: {}
- name: accept_course_invitation
  endpoint:
    path: /enrollments/{id}/accept
    method: POST
    data_selector: enrollment
    params: {}
- name: reject_course_invitation
  endpoint:
    path: /enrollments/{id}/reject
    method: POST
    data_selector: enrollment
    params: {}
- name: reactivate_enrollment
  endpoint:
    path: /enrollments/{id}/reactivate
    method: POST
    data_selector: enrollment
    params: {}
- name: last_attended
  endpoint:
    path: /enrollments/{id}/last_attended
    method: POST
    data_selector: enrollment
    params: {}
- name: temporary_enrollment_status
  endpoint:
    path: /enrollments/temporary_status
    method: GET
    data_selector: temporary_enrollment_status
    params: {}
- name: enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
    data_selector: enrollment
- name: enrollment_by_id
  endpoint:
    path: /api/v1/accounts/:account_id/enrollments/:id
    method: GET
    data_selector: enrollment
- name: create_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
    data_selector: enrollment
- name: bulk_enrollment
  endpoint:
    path: /api/v1/accounts/:account_id/bulk_enrollment
    method: POST
    data_selector: enrollment
- name: delete_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
    data_selector: enrollment
- name: accept_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/accept
    method: POST
- name: reject_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reject
    method: POST
- name: reactivate_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reactivate
    method: PUT
- name: last_attended
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/last_attended
    method: PUT
- name: temporary_enrollment_status
  endpoint:
    path: /api/v1/users/:user_id/temporary_enrollment_status
    method: GET
- name: ePortfolios for User
  endpoint:
    path: /api/v1/users/:user_id/eportfolios
    method: GET
    data_selector: ePortfolios
    params: {}
- name: Get an ePortfolio
  endpoint:
    path: /api/v1/eportfolios/:id
    method: GET
    data_selector: ePortfolio
    params: {}
- name: Delete an ePortfolio
  endpoint:
    path: /api/v1/eportfolios/:id
    method: DELETE
    data_selector: ePortfolio
    params: {}
- name: eportfolio_pages
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/pages
    method: GET
    data_selector: ePortfolioPage
    params: {}
- name: moderate_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/moderate
    method: PUT
    data_selector: ePortfolio
    params:
      spam_status: string
- name: moderate_all_eportfolios
  endpoint:
    path: /api/v1/users/:user_id/eportfolios
    method: PUT
    data_selector: ePortfolio
    params:
      spam_status: string
- name: restore_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/restore
    method: PUT
    data_selector: ePortfolio
    params: {}
- name: epub_exports
  endpoint:
    path: /epub_exports
    method: GET
    data_selector: CourseEpubExport
- name: create_epub_export
  endpoint:
    path: /courses/:course_id/epub_exports
    method: POST
    data_selector: EpubExport
- name: show_epub_export
  endpoint:
    path: /courses/:course_id/epub_exports/:id
    method: GET
    data_selector: EpubExport
- name: error_report
  endpoint:
    path: /api/v1/error_reports
    method: POST
    data_selector: error
    params: {}
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
- name: sessionless_launch
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/sessionless_launch
    method: GET
- name: single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
- name: external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/:external_tool_id
    method: GET
    data_selector: external_tool
- name: create_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools
    method: POST
    data_selector: external_tool
- name: update_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/:external_tool_id
    method: PUT
    data_selector: external_tool
- name: delete_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/:external_tool_id
    method: DELETE
    data_selector: external_tool
- name: mark_tool_as_rce_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/rce_favorites/:id
    method: POST
    data_selector: external_tool
- name: unmark_tool_as_rce_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/rce_favorites/:id
    method: DELETE
    data_selector: external_tool
- name: add_top_nav_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/top_nav_favorites/:id
    method: POST
    data_selector: external_tool
- name: remove_top_nav_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/top_nav_favorites/:id
    method: DELETE
    data_selector: external_tool
- name: visible_course_nav_tools
  endpoint:
    path: /api/v1/external_tools/visible_course_nav_tools
    method: GET
    params:
      context_codes[]: course_123
- name: visible_course_nav_tools_single_course
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/visible_course_nav_tools
    method: GET
    params: {}
- name: list_favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
    data_selector: null
    params:
      exclude_blueprint_courses: null
- name: list_favorite_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: GET
    data_selector: null
    params: {}
- name: add_favorite_course
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: POST
    data_selector: null
    params:
      id: string
- name: add_favorite_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: POST
    data_selector: null
    params:
      id: string
- name: add_favorite_group
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: POST
    data_selector: Favorite
    params:
      id: Required
- name: remove_favorite_course
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: DELETE
    data_selector: Favorite
    params:
      id: Required
- name: remove_favorite_group
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: DELETE
    data_selector: Favorite
    params:
      id: Required
- name: reset_course_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: DELETE
    data_selector: Favorite
- name: reset_group_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: DELETE
    data_selector: Favorite
- name: features_by_course
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
- name: features_by_account
  endpoint:
    path: /api/v1/accounts/:account_id/features
    method: GET
- name: features_by_user
  endpoint:
    path: /api/v1/users/:user_id/features
    method: GET
- name: course_features_enabled
  endpoint:
    path: /api/v1/courses/:course_id/features/enabled
    method: GET
    data_selector: ''
- name: account_features_enabled
  endpoint:
    path: /api/v1/accounts/:account_id/features/enabled
    method: GET
    data_selector: ''
- name: user_features_enabled
  endpoint:
    path: /api/v1/users/:user_id/features/enabled
    method: GET
    data_selector: ''
- name: environment_features
  endpoint:
    path: /api/v1/features/environment
    method: GET
    data_selector: ''
- name: get_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: GET
    data_selector: ''
- name: set_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: PUT
    data_selector: ''
- name: remove_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: DELETE
    data_selector: ''
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
- name: folders
  endpoint:
    path: /api/v1/folders
    method: GET
    data_selector: folders
- name: quota
  endpoint:
    path: /courses/:course_id/files/quota
    method: GET
- name: list_files
  endpoint:
    path: /courses/:course_id/files
    method: GET
- name: public_url
  endpoint:
    path: /files/:id/public_url
    method: GET
- name: get_file
  endpoint:
    path: /files/:id
    method: GET
- name: list_folders
  endpoint:
    path: /folders/:id/folders
    method: GET
- name: folders
  endpoint:
    path: /api/v1/folders/:folder_id/folders
    method: POST
- name: usage_rights
  endpoint:
    path: /api/v1/courses/:course_id/usage_rights
    method: PUT
- name: licenses
  endpoint:
    path: /api/v1/courses/:course_id/content_licenses
    method: GET
- name: grade_change_events
  endpoint:
    path: /api/v1/audit/grade_change/assignments/:assignment_id
    method: GET
    data_selector: GradeChangeEvent
    params: {}
- name: grade_change_by_course
  endpoint:
    path: /api/v1/audit/grade_change/courses/:course_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_by_student
  endpoint:
    path: /api/v1/audit/grade_change/students/:student_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_by_grader
  endpoint:
    path: /api/v1/audit/grade_change/graders/:grader_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: advanced_grade_change_query
  endpoint:
    path: /api/v1/audit/grade_change
    method: GET
    data_selector: GradeChangeEvent
    params:
      course_id: integer
      assignment_id: integer
      student_id: integer
      grader_id: integer
      start_time: DateTime
      end_time: DateTime
- name: gradebook_history
  endpoint:
    path: /gradebook_history
    method: GET
    data_selector: submissions
- name: day_details
  endpoint:
    path: /gradebook_history/day_details
    method: GET
    data_selector: details
- name: submissions
  endpoint:
    path: /gradebook_history/submissions
    method: GET
    data_selector: submissions
- name: uncollated_submission_versions
  endpoint:
    path: /gradebook_history/feed
    method: GET
    data_selector: versions
- name: gradebook_history_days
  endpoint:
    path: /courses/:course_id/gradebook_history/days
    method: GET
    data_selector: null
    params:
      course_id: integer
- name: gradebook_history_day_details
  endpoint:
    path: /courses/:course_id/gradebook_history/:date
    method: GET
    data_selector: null
    params:
      course_id: integer
      date: string
- name: gradebook_history_submissions
  endpoint:
    path: /courses/:course_id/gradebook_history/:date/graders/:grader_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: null
    params:
      course_id: integer
      date: string
      grader_id: integer
      assignment_id: integer
- name: gradebook_history_feed
  endpoint:
    path: /courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: null
    params:
      course_id: integer
      assignment_id: integer
      user_id: integer
      ascending: boolean
- name: grading_period_sets
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: GET
    data_selector: grading_period_set
- name: create_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: POST
    data_selector: grading_period_set
- name: update_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: PATCH
    data_selector: grading_period_set
- name: delete_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: DELETE
- name: grading_period_sets
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: DELETE
- name: grading_periods
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods
    method: GET
    data_selector: grading_periods
- name: single_grading_period
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: GET
    data_selector: grading_periods
- name: update_grading_period
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: PUT
    data_selector: grading_periods
- name: delete_grading_period
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: DELETE
- name: batch_update_grading_periods
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/batch_update
    method: PATCH
- name: batch_update_grading_period_sets
  endpoint:
    path: /api/v1/grading_period_sets/:set_id/grading_periods/batch_update
    method: PATCH
- name: delete_grading_period
  endpoint:
    path: /api/v1/accounts/:account_id/grading_periods/:id
    method: DELETE
- name: grading_standards
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards
    method: POST
- name: create_grading_standard
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards
    method: POST
- name: list_grading_standards_course
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards
    method: GET
- name: list_grading_standards_account
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards
    method: GET
- name: get_grading_standard_course
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: GET
- name: get_grading_standard_account
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards/:grading_standard_id
    method: GET
- name: delete_grading_standard_course
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: DELETE
- name: delete_grading_standard_account
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards/:grading_standard_id
    method: DELETE
- name: group_categories
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: GET
- name: group_categories
  endpoint:
    path: /api/v1/courses/:course_id/group_categories
    method: GET
    data_selector: GroupCategory
    params:
      collaboration_state: all
- name: group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: GET
    data_selector: GroupCategory
- name: create_group_category
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: POST
- name: bulk_manage_differentiation_tag
  endpoint:
    path: /api/v1/courses/:course_id/group_categories/bulk_manage_differentiation_tag
    method: POST
- name: import_tags
  endpoint:
    path: /api/v1/courses/:course_id/group_categories/import_tags
    method: POST
- name: group_category_import
  endpoint:
    path: /api/v1/group_categories/:group_category_id/import
    method: POST
- name: assign_unassigned_members
  endpoint:
    path: /api/v1/group_categories/:group_category_id/assign_unassigned_members
    method: POST
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /api/v1/group_memberships
    method: GET
- name: groups
  endpoint:
    path: /api/v1/users/self/groups
    method: GET
    data_selector: groups
- name: group_memberships
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: GET
    data_selector: memberships
- name: group_membership
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: POST
    data_selector: membership
    params: {}
- name: update_membership
  endpoint:
    path: /api/v1/groups/:group_id/memberships/:membership_id
    method: PUT
    data_selector: membership
    params: {}
- name: leave_group_membership
  endpoint:
    path: /api/v1/groups/:group_id/memberships/:membership_id
    method: DELETE
    data_selector: membership
    params: {}
- name: history
  endpoint:
    path: /api/v1/users/:user_id/history
    method: GET
    data_selector: history_entries
- name: inst_access_token
  endpoint:
    path: /api/v1/inst_access_tokens
    method: POST
- name: jwt
  endpoint:
    path: /api/v1/jwts
    method: POST
    data_selector: token
- name: refresh_jwt
  endpoint:
    path: /api/v1/jwts/refresh
    method: POST
    data_selector: JWT
    params:
      jwt: Required
- name: late_policy
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: GET
    data_selector: late_policy
- name: create_late_policy
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: POST
    data_selector: late_policy
- name: update_late_policy
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: PATCH
    data_selector: late_policy
- name: late_policy
  endpoint:
    path: /courses/:id/late_policy
    method: PATCH
    data_selector: none
    params: {}
- name: learning_object_dates
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/date_details
    method: GET
- name: learning_object_dates_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/date_details
    method: GET
- name: learning_object_dates_quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/date_details
    method: GET
- name: learning_object_dates_discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:discussion_topic_id/date_details
    method: GET
- name: learning_object_dates_pages
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/date_details
    method: GET
- name: learning_object_dates_files
  endpoint:
    path: /api/v1/courses/:course_id/files/:attachment_id/date_details
    method: GET
- name: assignment_date_details
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/date_details
    method: PUT
- name: quiz_date_details
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/date_details
    method: PUT
- name: discussion_topic_date_details
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:discussion_topic_id/date_details
    method: PUT
- name: page_date_details
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/date_details
    method: PUT
- name: file_date_details
  endpoint:
    path: /api/v1/courses/:course_id/files/:attachment_id/date_details
    method: PUT
- name: line_items
  endpoint:
    path: /lti/ims/line_items
    method: GET
- name: line_items
  endpoint:
    path: /api/lti/courses/:course_id/line_items
    method: GET
    data_selector: LineItem
    params: {}
- name: create_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items
    method: POST
    data_selector: LineItem
    params: {}
- name: update_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: PUT
    data_selector: LineItem
    params: {}
- name: show_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: GET
    data_selector: LineItem
    params: {}
- name: delete_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: DELETE
    data_selector: LineItem
    params: {}
- name: live_assessment_results
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id/results
    method: POST
    data_selector: results
- name: list_live_assessment_results
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id/results
    method: GET
    data_selector: results
- name: create_or_find_live_assessment
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id
    method: POST
- name: live_assessments
  endpoint:
    path: /api/v1/courses/:course_id/live_assessments
    method: GET
    data_selector: assessments
- name: user_logins
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: GET
    data_selector: logins
- name: user_login
  endpoint:
    path: /api/v1/users/:user_id/logins/:id
    method: DELETE
    data_selector: login
- name: launch_definitions
  endpoint:
    path: /api/v1/courses/:course_id/lti_apps/launch_definitions
    method: GET
    data_selector: launch_definitions
    params:
      placements[]: ''
      only_visible: 'true'
- name: account_launch_definitions
  endpoint:
    path: /api/v1/accounts/:account_id/lti_apps/launch_definitions
    method: GET
    data_selector: launch_definitions
    params:
      placements[]: ''
      only_visible: 'true'
- name: lti_registrations
  endpoint:
    path: /lti/registrations
    method: GET
- name: overlay_history
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations/:id/overlay_history
    method: GET
    data_selector: data
    params:
      limit: 101
- name: create_registration
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations
    method: POST
    data_selector: data
    params: {}
- name: overlay_history
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations/:id/overlay_history
    method: GET
    data_selector: Lti::OverlayVersion
    params:
      limit: '101'
- name: lti_resource_links
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links
    method: GET
    data_selector: Lti::ResourceLink
    params:
      include_deleted: false
      per_page: 50
- name: lti_resource_link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: GET
    data_selector: Lti::ResourceLink
    params:
      include_deleted: false
- name: create_lti_resource_link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links
    method: POST
    data_selector: Lti::ResourceLink
    params: {}
- name: bulk_create_lti_resource_links
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/bulk
    method: POST
    data_selector: Lti::ResourceLink
    params: {}
- name: update_lti_resource_link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: PUT
    data_selector: Lti::ResourceLink
    params: {}
- name: delete_lti_resource_link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: DELETE
    data_selector: Lti::ResourceLink
    params: {}
- name: media_tracks
  endpoint:
    path: /media_tracks
    method: GET
    data_selector: media_tracks
- name: media_objects
  endpoint:
    path: /media_objects
    method: GET
    data_selector: media_objects
- name: media_objects
  endpoint:
    path: /api/v1/media_objects
    method: GET
    data_selector: media_objects
    params:
      exclude[]:
      - sources
      - tracks
- name: media_tracks
  endpoint:
    path: /api/v1/media_objects/:media_object_id/media_tracks
    method: GET
    data_selector: media_tracks
    params:
      include[]:
      - content
- name: moderated_students
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/moderated_students
    method: GET
- name: select_moderated_students
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/moderated_students
    method: POST
- name: bulk_select_provisional_grades
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/bulk_select
    method: PUT
- name: provisional_grade_status
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/status
    method: GET
    data_selector: needs_provisional_grade
    params:
      student_id: integer
- name: select_provisional_grade
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/:provisional_grade_id/select
    method: PUT
    data_selector: assignment_id
    params: {}
- name: publish_provisional_grades
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/publish
    method: POST
    data_selector: null
    params: {}
- name: anonymous_provisional_grade_status
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/anonymous_provisional_grades/status
    method: GET
    data_selector: needs_provisional_grade
    params:
      anonymous_id: string
- name: Modules
  endpoint:
    path: /api/v1/modules
    method: GET
    data_selector: modules
- name: Module Items
  endpoint:
    path: /api/v1/modules/{module_id}/items
    method: GET
    data_selector: items
- name: modules
  endpoint:
    path: /api/v1/courses/:course_id/modules
    method: GET
- name: module
  endpoint:
    path: /api/v1/courses/:course_id/modules/:id
    method: GET
- name: create_module
  endpoint:
    path: /api/v1/courses/:course_id/modules
    method: POST
- name: update_module
  endpoint:
    path: /api/v1/courses/:course_id/modules/:id
    method: PUT
- name: delete_module
  endpoint:
    path: /api/v1/courses/:course_id/modules/:id
    method: DELETE
- name: update_module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: PUT
- name: select_mastery_path
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/select_mastery_path
    method: POST
- name: delete_module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: DELETE
- name: mark_as_done
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/done
    method: PUT
- name: get_module_item_sequence
  endpoint:
    path: /api/v1/courses/:course_id/module_item_sequence
    method: GET
- name: mark_item_read
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/mark_read
    method: POST
- name: list_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/assignment_overrides
    method: GET
- name: update_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/assignment_overrides
    method: PUT
- name: course_memberships
  endpoint:
    path: /lti/ims/names_and_roles/course_index
    method: GET
    data_selector: membershipcontainer
- name: group_memberships
  endpoint:
    path: /lti/ims/names_and_roles/group_index
    method: GET
    data_selector: membershipcontainer
- name: names_and_roles
  endpoint:
    path: /api/lti/courses/:course_id/names_and_roles
    method: GET
    params:
      limit: '50'
- name: group_names_and_roles
  endpoint:
    path: /api/lti/groups/:group_id/names_and_roles
    method: GET
    params:
      limit: '50'
- name: notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/:context_external_tool_id
    method: GET
- name: set_notice_handler
  endpoint:
    path: /api/lti/notice-handlers/:context_external_tool_id
    method: PUT
- name: notification_preferences
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preferences
    method: GET
- name: preference_categories
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preference_categories
    method: GET
- name: get_preference
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preferences/:notification
    method: GET
- name: update_preference
  endpoint:
    path: /api/v1/users/self/communication_channels/:communication_channel_id/notification_preferences/:notification
    method: PUT
- name: update_preferences_by_category
  endpoint:
    path: /users/self/communication_channels/:communication_channel_id/notification_preference_categories/:category
    method: PUT
    data_selector: ''
    params:
      category: ''
      notification_preferences[frequency]: Required
- name: update_multiple_preferences
  endpoint:
    path: /users/self/communication_channels/:communication_channel_id/notification_preferences
    method: PUT
    data_selector: ''
    params: {}
- name: update_preferences_by_type_and_address
  endpoint:
    path: /users/self/communication_channels/:type/:address/notification_preferences
    method: PUT
    data_selector: ''
    params:
      notification_preferences[<X>][frequency]: Required
- name: originality_report
  endpoint:
    path: /lti/originality_reports_api
    method: POST
- name: edit_originality_report
  endpoint:
    path: /lti/originality_reports_api
    method: PUT
- name: show_originality_report
  endpoint:
    path: /lti/originality_reports_api
    method: GET
- name: outcome_group
  endpoint:
    path: /api/v1/accounts/{account_id}/outcome_groups
    method: GET
    data_selector: outcome_groups
- name: outcome_link
  endpoint:
    path: /api/v1/accounts/{account_id}/outcome_groups/{outcome_group_id}/outcomes
    method: GET
    data_selector: outcome_links
- name: root_outcome_group
  endpoint:
    path: /api/v1/global/root_outcome_group
    method: GET
- name: account_root_outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/root_outcome_group
    method: GET
- name: course_root_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/root_outcome_group
    method: GET
- name: account_outcome_groups
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups
    method: GET
- name: course_outcome_groups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups
    method: GET
- name: account_outcome_group_links
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_group_links
    method: GET
- name: course_outcome_group_links
  endpoint:
    path: /api/v1/courses/:course_id/outcome_group_links
    method: GET
- name: global_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: GET
- name: account_outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: GET
- name: course_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id
    method: GET
- name: update_global_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: PUT
- name: update_account_outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: PUT
- name: update_course_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id
    method: PUT
- name: delete_global_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: DELETE
- name: delete_account_outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: DELETE
- name: delete_course_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id
    method: DELETE
- name: list_linked_outcomes
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: GET
- name: account_linked_outcomes
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id/outcomes
    method: GET
- name: course_linked_outcomes
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id/outcomes
    method: GET
- name: create_link_outcome
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: POST
- name: update_link_outcome
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes/:outcome_id
    method: PUT
- name: delete_link_outcome
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes/:outcome_id
    method: DELETE
- name: list_subgroups
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: GET
- name: account_subgroups
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id/subgroups
    method: GET
- name: course_subgroups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id/subgroups
    method: GET
- name: create_subgroup
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: POST
- name: import_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id/import
    method: POST
- name: import_outcomes
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports(/group/:learning_outcome_group_id)
    method: POST
- name: get_outcome_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports
    method: GET
- name: get_created_group_ids
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports
    method: GET
- name: outcome_imports
  endpoint:
    path: /api/v1/courses/:course_id/outcome_imports
    method: POST
    data_selector: OutcomeImport
    params:
      import_type: instructure_csv
      attachment: <filename>
- name: outcome_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports/:id
    method: GET
    data_selector: OutcomeImport
- name: created_group_ids
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports/:id/created_group_ids
    method: GET
    data_selector: created_group_ids
- name: outcome_results
  endpoint:
    path: /outcome_results
    method: GET
    data_selector: results
- name: outcome_rollups
  endpoint:
    path: /outcome_rollups
    method: GET
    data_selector: rollups
- name: outcome_results
  endpoint:
    path: /api/v1/courses/:course_id/outcome_results
    method: GET
    data_selector: outcome_results
- name: outcome_rollups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_rollups
    method: GET
    data_selector: rollups
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: GET
    data_selector: Outcomes
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: PUT
    data_selector: Outcome
- name: outcome_alignments
  endpoint:
    path: /api/v1/courses/:course_id/outcome_alignments
    method: GET
    data_selector: alignments
- name: pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
    data_selector: pages
- name: front_page_course
  endpoint:
    path: /api/v1/courses/:course_id/front_page
    method: GET
- name: front_page_group
  endpoint:
    path: /api/v1/groups/:group_id/front_page
    method: GET
- name: duplicate_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/duplicate
    method: POST
- name: update_front_page_course
  endpoint:
    path: /api/v1/courses/:course_id/front_page
    method: PUT
- name: update_front_page_group
  endpoint:
    path: /api/v1/groups/:group_id/front_page
    method: PUT
- name: list_pages_course
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
- name: list_pages_group
  endpoint:
    path: /api/v1/groups/:group_id/pages
    method: GET
- name: create_page_course
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: POST
- name: create_page_group
  endpoint:
    path: /api/v1/groups/:group_id/pages
    method: POST
- name: show_page_course
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: GET
- name: show_page_group
  endpoint:
    path: /api/v1/groups/:group_id/pages/:url_or_id
    method: GET
- name: update_page_course
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: PUT
- name: update_page_group
  endpoint:
    path: /api/v1/groups/:group_id/pages/:url_or_id
    method: PUT
- name: delete_page_course
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: DELETE
- name: delete_page_group
  endpoint:
    path: /api/v1/groups/:group_id/pages/:url_or_id
    method: DELETE
- name: list_revisions_course
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions
    method: GET
- name: list_revisions_group
  endpoint:
    path: /api/v1/groups/:group_id/pages/:url_or_id/revisions
    method: GET
- name: show_revision_course
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions/latest
    method: GET
- name: show_revision_group
  endpoint:
    path: /api/v1/groups/:group_id/pages/:url_or_id/revisions/latest
    method: GET
- name: revert_revision_course
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions/:revision_id
    method: POST
- name: revert_revision_group
  endpoint:
    path: /api/v1/groups/:group_id/pages/:url_or_id/revisions/:revision_id
    method: POST
- name: peer_reviews
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/peer_reviews
    method: GET
    data_selector: PeerReview
    params: {}
- name: peer_reviews_create
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: POST
    data_selector: PeerReview
    params:
      user_id: Required
- name: peer_reviews_delete
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: DELETE
    data_selector: PeerReview
    params: {}
- name: peer_reviews
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: DELETE
    data_selector: PeerReview
    params:
      user_id: required
- name: peer_reviews_section
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: DELETE
    data_selector: PeerReview
    params:
      user_id: required
- name: planner_items
  endpoint:
    path: /planner/items
    method: GET
    data_selector: items
- name: planner_notes
  endpoint:
    path: /planner_notes
    method: GET
    data_selector: notes
- name: planner_overrides
  endpoint:
    path: /planner_overrides
    method: GET
    data_selector: overrides
- name: planner_items
  endpoint:
    path: /api/v1/users/:user_id/planner/items
    method: GET
    data_selector: items
    params:
      start_date: ''
      end_date: ''
      context_codes[]: ''
      observed_user_id: ''
      filter: ''
- name: planner_notes
  endpoint:
    path: /api/v1/planner_notes
    method: GET
    data_selector: notes
    params:
      start_date: ''
      end_date: ''
      context_codes[]: ''
- name: planner_override
  endpoint:
    path: /api/v1/planner/overrides
    method: GET
    data_selector: overrides
    params: {}
- name: poll_sessions
  endpoint:
    path: /polls/:poll_id/poll_sessions
    method: GET
    data_selector: poll_sessions
- name: poll_session_results
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id
    method: GET
    data_selector: poll_sessions
- name: create_poll_session
  endpoint:
    path: /polls/:poll_id/poll_sessions
    method: POST
    data_selector: poll_sessions
- name: poll_sessions_opened
  endpoint:
    path: /poll_sessions/opened
    method: GET
    data_selector: poll_sessions
- name: poll_sessions_closed
  endpoint:
    path: /poll_sessions/closed
    method: GET
    data_selector: poll_sessions
- name: poll_session_update
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id
    method: PUT
    data_selector: poll_sessions
- name: poll_session_delete
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id
    method: DELETE
- name: poll_session_open
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id/open
    method: GET
- name: poll_session_close
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id/close
    method: GET
- name: poll_choices
  endpoint:
    path: /polls/:poll_id/poll_choices
    method: GET
    data_selector: poll_choices
- name: poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices/:id
    method: GET
    data_selector: poll_choices
- name: create_poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices
    method: POST
    data_selector: poll_choices
- name: update_poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices/:id
    method: PUT
    data_selector: poll_choices
- name: poll_choice
  endpoint:
    path: /api/v1/polls/:poll_id/poll_choices/:id
    method: DELETE
- name: polls
  endpoint:
    path: /api/v1/polls
    method: GET
    data_selector: polls
- name: single_poll
  endpoint:
    path: /api/v1/polls/:id
    method: GET
    data_selector: polls
- name: create_poll
  endpoint:
    path: /api/v1/polls
    method: POST
    data_selector: polls
- name: update_poll
  endpoint:
    path: /api/v1/polls/:id
    method: PUT
    data_selector: polls
- name: delete_poll
  endpoint:
    path: /api/v1/polls/:id
    method: DELETE
    data_selector: polls
- name: polls
  endpoint:
    path: /api/v1/polls/:id
    method: DELETE
- name: poll_submission
  endpoint:
    path: /polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions/:id
    method: GET
    data_selector: poll_submissions
- name: create_poll_submission
  endpoint:
    path: /polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions
    method: POST
    data_selector: poll_submissions
- name: outcome_proficiency
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_proficiency
    method: POST
    data_selector: Proficiency
    params: {}
- name: outcome_proficiency_get
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_proficiency
    method: GET
    data_selector: Proficiency
    params: {}
- name: outcome_proficiency
  endpoint:
    path: /api/v1/courses/:course_id/outcome_proficiency
    method: GET
- name: progress
  endpoint:
    path: /api/v1/progress/:id
    method: GET
    data_selector: Progress
- name: cancel_progress
  endpoint:
    path: /api/v1/progress/:id/cancel
    method: POST
    data_selector: Progress
- name: lti_progress
  endpoint:
    path: /api/lti/courses/:course_id/progress/:id
    method: GET
    data_selector: Progress
- name: update_public_jwk
  endpoint:
    path: /api/lti/developer_key/update_public_jwk
    method: PUT
    data_selector: DeveloperKey
    params:
      public_jwk: Required
- name: quiz_assignment_overrides
  endpoint:
    path: /courses/:course_id/quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
- name: assignment_overrides
  endpoint:
    path: /courses/:course_id/new_quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
    params:
      quiz_assignment_overrides[][quiz_ids][]: ''
- name: quiz_extensions
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/extensions
    method: POST
    data_selector: quiz_extensions
- name: quiz_ip_filters
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/ip_filters
    method: GET
    data_selector: quiz_ip_filters
- name: quiz_group
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id
    method: GET
- name: create_quiz_group
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups
    method: POST
- name: update_quiz_group
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id
    method: PUT
- name: delete_quiz_group
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id
    method: DELETE
- name: delete_question_group
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id
    method: DELETE
- name: reorder_question_groups
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id/reorder
    method: POST
    params:
      order[][id]: Required
      order[][type]: string
- name: quiz_questions
  endpoint:
    path: /quizzes/quiz_questions
    method: GET
    data_selector: questions
- name: quiz_questions
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/questions
    method: GET
    data_selector: QuizQuestion
- name: single_quiz_question
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/questions/:id
    method: GET
    data_selector: QuizQuestion
- name: create_quiz_question
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/questions
    method: POST
    data_selector: QuizQuestion
- name: update_quiz_question
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/questions/:id
    method: PUT
    data_selector: QuizQuestion
- name: delete_quiz_question
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/questions/:id
    method: DELETE
    data_selector: {}
- name: quiz_reports
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/reports
    method: GET
    data_selector: QuizReport
- name: quiz_statistics
  endpoint:
    path: /api/v1/courses/{courseId}/quizzes/{quizId}/statistics
    method: GET
    data_selector: null
    params: {}
- name: quiz_statistics
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/statistics
    method: GET
    data_selector: quiz_statistics
- name: quiz_submission_events
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: POST
    data_selector: quiz_submission_events
- name: retrieve_quiz_submission_events
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: GET
    data_selector: quiz_submission_events
- name: quiz_submission_file
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/submissions/self/files
    method: POST
- name: quiz_submission_questions
  endpoint:
    path: /quiz_submissions/:quiz_submission_id/questions
    method: GET
    data_selector: quiz_submission_questions
    params: {}
- name: answering_questions
  endpoint:
    path: /quiz_submissions/:quiz_submission_id/questions
    method: POST
    data_selector: QuizSubmissionQuestion
    params:
      attempt: integer
      validation_token: string
      access_code: string
      quiz_questions[]: QuizSubmissionQuestion
- name: formatted_answer
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/formatted_answer
    method: GET
    data_selector: formatted_answer
- name: flag_question
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/flag
    method: PUT
    data_selector: attempt, validation_token, access_code
- name: unflag_question
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/unflag
    method: PUT
    data_selector: attempt, validation_token, access_code
- name: quiz_submission_user_list
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id/submission_users
    method: POST
    data_selector: users
    params: {}
- name: quiz_submissions
  endpoint:
    path: /quizzes/quiz_submissions
    method: GET
    data_selector: quiz_submissions
- name: quiz_submissions
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission_current
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submission
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission_single
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission_create
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions
    method: POST
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission_update
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id
    method: PUT
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission_complete
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/complete
    method: POST
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission_time
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/time
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
    data_selector: Quiz
    params: {}
- name: single_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: GET
    data_selector: Quiz
    params: {}
- name: create_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
    data_selector: Quiz
    params: {}
- name: edit_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: PUT
    data_selector: Quiz
    params: {}
- name: delete_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: DELETE
    data_selector: Quiz
    params: {}
- name: reorder_quiz_items
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id/reorder
    method: POST
    data_selector: Quiz
    params: {}
- name: validate_access_code
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id/validate_access_code
    method: POST
    data_selector: Quiz
    params: {}
- name: results_collection
  endpoint:
    path: /courses/:course_id/line_items/:line_item_id/results
    method: GET
- name: result
  endpoint:
    path: /courses/:course_id/line_items/:line_item_id/results/:id
    method: GET
- name: roles
  endpoint:
    path: /api/v1/roles
    method: GET
- name: roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: Role
- name: single_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: GET
    data_selector: Role
- name: create_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: POST
    data_selector: Role
- name: deactivate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: DELETE
    data_selector: Role
- name: activate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id/activate
    method: POST
    data_selector: Role
- name: update_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: PUT
    data_selector: Role
- name: rubrics
  endpoint:
    path: /rubrics
    method: GET
- name: rubric_assessments
  endpoint:
    path: /rubric_assessments
    method: GET
- name: rubric_associations
  endpoint:
    path: /rubric_associations
    method: GET
- name: rubric_assessment
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments
    method: POST
- name: rubric_association
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations
    method: POST
- name: rubric
  endpoint:
    path: /api/v1/courses/:course_id/rubrics
    method: GET
- name: score
  endpoint:
    path: /lti/ims/scores.create
    method: POST
    data_selector: score
    params: {}
- name: line_item_scores
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:line_item_id/scores
    method: POST
    data_selector: resultUrl
    params:
      userId: required
      activityProgress: required
      gradingProgress: required
      timestamp: required
      scoreGiven: ''
      scoreMaximum: ''
      comment: ''
      submission: ''
      https://canvas.instructure.com/lti/submission:
        new_submission: ''
        preserve_score: ''
        submission_type: ''
        submission_data: ''
        submitted_at: ''
        content_items: ''
- name: find_recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
    data_selector: records
- name: all_courses
  endpoint:
    path: /api/v1/search/all_courses
    method: GET
    data_selector: records
- name: sections
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: GET
    data_selector: sections
    params: {}
- name: sections
  endpoint:
    path: /api/v1/sections/:id
    method: GET
    data_selector: Section
    params: {}
- name: create_section
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: POST
    data_selector: Section
    params: {}
- name: edit_section
  endpoint:
    path: /api/v1/sections/:id
    method: PUT
    data_selector: Section
    params: {}
- name: delete_section
  endpoint:
    path: /api/v1/sections/:id
    method: DELETE
    data_selector: Section
    params: {}
- name: crosslist_section
  endpoint:
    path: /api/v1/sections/:id/crosslist/:new_course_id
    method: POST
    data_selector: Section
    params: {}
- name: uncrosslist_section
  endpoint:
    path: /api/v1/sections/:id/crosslist
    method: DELETE
    data_selector: Section
    params: {}
- name: kaltura_config
  endpoint:
    path: /api/v1/services/kaltura
    method: GET
    data_selector: enabled
    params: {}
- name: kaltura_session
  endpoint:
    path: /api/v1/services/kaltura_session
    method: POST
    data_selector: ks
    params: {}
- name: shared_brand_config
  endpoint:
    path: /api/v1/accounts/:account_id/shared_brand_configs
    method: POST
    data_selector: shared_brand_config
    params:
      shared_brand_config[name]: Name to share this BrandConfig (theme) as.
      shared_brand_config[brand_config_md5]: MD5 of brand_config to share
- name: update_shared_brand_config
  endpoint:
    path: /api/v1/accounts/:account_id/shared_brand_configs/:id
    method: PUT
    data_selector: shared_brand_config
    params:
      shared_brand_config[name]: New Name
      shared_brand_config[brand_config_md5]: MD5 of brand_config to share
- name: shared_brand_config
  endpoint:
    path: /api/v1/shared_brand_configs/:id
    method: DELETE
- name: sis_import_errors
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/errors
    method: GET
    data_selector: SisImportError
    params:
      failure: boolean
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_import_errors
    method: GET
    data_selector: SisImportError
    params: {}
- name: sis_imports
  endpoint:
    path: /sis_imports
    method: GET
- name: current_importing
  endpoint:
    path: /sis_imports/importing
    method: GET
- name: create_import
  endpoint:
    path: /sis_imports
    method: POST
- name: import_status
  endpoint:
    path: /sis_imports/{id}
    method: GET
- name: restore_states
  endpoint:
    path: /sis_imports/restore_states
    method: POST
- name: abort_import
  endpoint:
    path: /sis_imports/{id}/abort
    method: POST
- name: abort_all_pending
  endpoint:
    path: /sis_imports/abort_all_pending
    method: POST
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: GET
- name: current_importing_sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/importing
    method: GET
- name: create_sis_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
- name: get_sis_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id
    method: GET
- name: restore_sis_import_states
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/restore_states
    method: PUT
- name: abort_sis_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/abort
    method: PUT
- name: abort_all_pending_sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/abort_all_pending
    method: PUT
- name: assignments
  endpoint:
    path: /sis_api/sis_assignments
    method: GET
    data_selector: assignments
- name: disable_assignments
  endpoint:
    path: /disable_post_to_sis_api/disable_post_to_sis
    method: POST
    data_selector: results
- name: assignments
  endpoint:
    path: /api/sis/accounts/:account_id/assignments
    method: GET
    params: {}
- name: course_assignments
  endpoint:
    path: /api/sis/courses/:course_id/assignments
    method: GET
    params: {}
- name: disable_post_to_sis
  endpoint:
    path: /api/sis/courses/:course_id/disable_post_to_sis
    method: PUT
    params: {}
- name: smart_search
  endpoint:
    path: /courses/:course_id/smartsearch
    method: GET
    data_selector: SearchResult
    params:
      q: string
      filter[]: string
      include[]: string
- name: edit_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: PUT
    data_selector: SubmissionComment
- name: delete_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: DELETE
    data_selector: SubmissionComment
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/files
    method: POST
    data_selector: attachment_data
- name: submissions
  endpoint:
    path: /api/v1/submissions
    method: GET
- name: submit_assignment
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions
    method: POST
    data_selector: submission
    params: {}
- name: list_assignment_submissions
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: submissions
    params: {}
- name: gradeable_students
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/gradeable_students
    method: GET
- name: bulk_update_grades
  endpoint:
    path: /api/v1/courses/:course_id/submissions/update_grades
    method: POST
- name: mark_submission_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/read
    method: PUT
- name: mark_bulk_submissions_as_read
  endpoint:
    path: /api/v1/courses/:course_id/submissions/bulk_mark_read
    method: PUT
- name: mark_submission_item_as_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/read/:item
    method: PUT
    data_selector: ''
- name: clear_unread_status
  endpoint:
    path: /api/v1/courses/:course_id/submissions/:user_id/clear_unread
    method: PUT
    data_selector: ''
- name: get_rubric_assessments_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/rubric_assessments/read
    method: GET
    data_selector: ''
- name: get_document_annotations_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/document_annotations/read
    method: GET
    data_selector: ''
- name: submission_summary
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submission_summary
    method: GET
    data_selector: ''
- name: account_tabs
  endpoint:
    path: /api/v1/accounts/:account_id/tabs
    method: GET
- name: course_tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs
    method: GET
- name: group_tabs
  endpoint:
    path: /api/v1/groups/:group_id/tabs
    method: GET
- name: user_tabs
  endpoint:
    path: /api/v1/users/:user_id/tabs
    method: GET
- name: tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs/:tab_id
    method: PUT
    data_selector: tab
    params: {}
- name: temporary_enrollment_pairings
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: single_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: create_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: POST
    data_selector: TemporaryEnrollmentPairing
- name: temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: DELETE
- name: linked_observees
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: GET
    data_selector: User
    params:
      include[]: avatar_url
- name: linked_observers
  endpoint:
    path: /api/v1/users/:user_id/observers
    method: GET
    data_selector: User
    params:
      include[]: avatar_url
- name: add_observee
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: POST
- name: show_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: GET
- name: show_observer
  endpoint:
    path: /api/v1/users/:user_id/observers/:observer_id
    method: GET
- name: update_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: PUT
- name: remove_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: DELETE
- name: create_observer_pairing_code
  endpoint:
    path: /api/v1/users/:user_id/observer_pairing_codes
    method: POST
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: custom_data
  endpoint:
    path: /api/v1/custom_data
    method: GET
- name: course_nicknames
  endpoint:
    path: /api/v1/course_nicknames
    method: GET
- name: users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
    data_selector: User
    params:
      search_term: <search value>
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: GET
    data_selector: activity_stream
- name: activity_stream_summary
  endpoint:
    path: /api/v1/users/self/activity_stream/summary
    method: GET
    data_selector: activity_stream_summary
- name: todo_items
  endpoint:
    path: /api/v1/users/self/todo
    method: GET
    data_selector: todo_items
- name: todo_item_count
  endpoint:
    path: /api/v1/users/self/todo_item_count
    method: GET
    data_selector: todo_item_count
- name: upcoming_events
  endpoint:
    path: /api/v1/users/self/upcoming_events
    method: GET
    data_selector: upcoming_events
- name: upcoming_events
  endpoint:
    path: /api/v1/users/self/upcoming_events
    method: GET
    data_selector: ''
- name: missing_submissions
  endpoint:
    path: /api/v1/users/:user_id/missing_submissions
    method: GET
    data_selector: ''
- name: hide_stream_item
  endpoint:
    path: /api/v1/users/self/activity_stream/:id
    method: DELETE
    data_selector: ''
- name: hide_all_stream_items
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: DELETE
    data_selector: ''
- name: upload_file
  endpoint:
    path: /api/v1/users/:user_id/files
    method: POST
    data_selector: ''
- name: show_user_details
  endpoint:
    path: /api/v1/users/:id
    method: GET
    data_selector: ''
- name: create_user
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: POST
    data_selector: ''
- name: self_register_user
  endpoint:
    path: /api/v1/accounts/:account_id/self_registration
    method: POST
    data_selector: ''
- name: update_user_settings
  endpoint:
    path: /api/v1/users/:id/settings
    method: PUT
    data_selector: ''
- name: get_custom_colors
  endpoint:
    path: /api/v1/users/:id/colors
    method: GET
    data_selector: ''
- name: get_custom_color
  endpoint:
    path: /api/v1/users/:id/colors/:asset_string
    method: GET
    data_selector: ''
- name: update_custom_color
  endpoint:
    path: /api/v1/users/:id/colors/:asset_string
    method: PUT
    data_selector: ''
- name: text_editor_preference
  endpoint:
    path: /api/v1/users/:id/text_editor_preference
    method: PUT
    data_selector: text_editor_preference
    params: {}
- name: files_ui_version_preference
  endpoint:
    path: /api/v1/users/:id/files_ui_version_preference
    method: PUT
    data_selector: files_ui_version
    params: {}
- name: dashboard_positions
  endpoint:
    path: /api/v1/users/:id/dashboard_positions
    method: GET
    data_selector: dashboard_positions
    params: {}
- name: update_user
  endpoint:
    path: /api/v1/users/:id
    method: PUT
    data_selector: user
    params: {}
- name: terminate_sessions
  endpoint:
    path: /api/v1/users/:id/sessions
    method: DELETE
    data_selector: ''
    params: {}
- name: expire_mobile_sessions
  endpoint:
    path: /api/v1/users/mobile_sessions
    method: DELETE
    data_selector: ''
    params: {}
- name: merge_into
  endpoint:
    path: /api/v1/users/:id/merge_into/:destination_user_id
    method: PUT
    data_selector: ''
    params: {}
- name: split
  endpoint:
    path: /api/v1/users/:id/split
    method: POST
    data_selector: ''
    params: {}
- name: pandata_events_token
  endpoint:
    path: /api/v1/users/self/pandata_events_token
    method: POST
    data_selector: ''
    params: {}
- name: graded_submissions
  endpoint:
    path: /api/v1/users/:id/graded_submissions
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
    data_selector: ''
    params: {}
- name: avatars
  endpoint:
    path: /api/v1/users/:user_id/avatars
    method: GET
    data_selector: ''
    params: {}
- name: page_views
  endpoint:
    path: /api/v1/page_views
    method: GET
    data_selector: ''
    params: {}
- name: page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
    data_selector: PageView
- name: custom_data
  endpoint:
    path: /api/v1/users/:user_id/custom_data
    method: PUT
    data_selector: data
- name: course_nicknames
  endpoint:
    path: /api/v1/users/self/course_nicknames
    method: GET
    data_selector: CourseNickname
- name: group_category
  endpoint:
    path: /api/v1/group_categories
    method: POST
    data_selector: group_categories
    params: {}
- name: differentiation_tag
  endpoint:
    path: /differentiation_tags
    method: POST
    data_selector: tags
- name: authentication_request
  endpoint:
    path: /api/lti/authorize_redirect
    method: GET
    data_selector: authentication_response
- name: extensions
  endpoint:
    path: /extensions
    method: GET
- placement: file_menu
  accept_media_types: image/jpeg,image/png
- placement: account_navigation
  default: enabled
- placement: course_navigation
  default: enabled
- placement: global_navigation
  icon_svg_path_64: ''
- placement: editor_button
  use_tray: true
- placement: account_navigation
  windowTarget: _blank
- placement: course_navigation
  windowTarget: _blank
- placement: global_navigation
  windowTarget: _blank
- placement: user_navigation
  windowTarget: _blank
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: course
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: records
- name: membership_role
  endpoint:
    path: /membership/role
    method: GET
- name: canvas_user_all_roles
  endpoint:
    path: /canvas/xuser/allRoles
    method: GET
- name: com_instructure_user_all_roles
  endpoint:
    path: /com/instructure/User/allRoles
    method: GET
- name: canvas_user_globalId
  endpoint:
    path: /canvas/user/globalId
    method: GET
- name: canvas_user_isRootAccountAdmin
  endpoint:
    path: /canvas/user/isRootAccountAdmin
    method: GET
- name: canvas_user_adminableAccounts
  endpoint:
    path: /canvas/user/adminableAccounts
    method: GET
- name: canvas_user_loginId
  endpoint:
    path: /canvas/user/loginId
    method: GET
- name: canvas_user_sisSourceId
  endpoint:
    path: /canvas/user/sisSourceId
    method: GET
- name: canvas_user_sisIntegrationId
  endpoint:
    path: /canvas/user/sisIntegrationId
    method: GET
- name: canvas_logoutService_url
  endpoint:
    path: /canvas/logoutService/url
    method: GET
- name: canvas_xapi_url
  endpoint:
    path: /canvas/xapi/url
    method: GET
- name: canvas_caliper_url
  endpoint:
    path: /canvas/caliper/url
    method: GET
- name: canvas_course_sectionIds
  endpoint:
    path: /canvas/course/sectionIds
    method: GET
- name: canvas_course_sectionRestricted
  endpoint:
    path: /canvas/course/sectionRestricted
    method: GET
- name: canvas_course_sectionSisSourceIds
  endpoint:
    path: /canvas/course/sectionSisSourceIds
    method: GET
- name: canvas_module_id
  endpoint:
    path: /canvas/module/id
    method: GET
- name: canvas_assignment_id
  endpoint:
    path: /canvas/assignment/id
    method: GET
- name: canvas_assignment_description
  endpoint:
    path: /canvas/assignment/description
    method: GET
- name: canvas_assignment_title
  endpoint:
    path: /canvas/assignment/title
    method: GET
- name: canvas_assignment_pointsPossible
  endpoint:
    path: /canvas/assignment/pointsPossible
    method: GET
- name: canvas_assignment_published
  endpoint:
    path: /canvas/assignment/published
    method: GET
- name: editor_button
  endpoint:
    path: /editor_button
    method: GET
    data_selector: records
- name: assignment_selection
  endpoint:
    path: /assignment_selection
    method: GET
    data_selector: records
- name: Assignments
  endpoint:
    path: /api/v1/assignments
    method: GET
- name: Courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: content_item
  endpoint:
    path: /messages/blti
    method: GET
    data_selector: ContentItemSelectionRequest
- name: replaceResultRequest
  endpoint:
    path: /services/ltiv1p1/xsd/imsoms_v1p0
    method: POST
    data_selector: submissionDetails
    params: {}
- name: Names and Role Provisioning Service
  endpoint:
    path: /lti/names_and_roles
    method: GET
- name: context_memberships
  endpoint:
    path: /api/lti/names_and_roles
    method: GET
- name: enrollments
  endpoint:
    path: /api/v1/enrollments
    method: GET
    data_selector: enrollments
- name: account_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: reports
- name: requestFullWindowLaunch
  endpoint:
    path: /requestFullWindowLaunch
    method: POST
    data_selector: data
    params: {}
- name: lti.resourceImported
  endpoint:
    path: /lti.resourceImported
    method: POST
    data_selector: data
    params: {}
- name: lti.hideRightSideWrapper
  endpoint:
    path: /lti.hideRightSideWrapper
    method: POST
    data_selector: data
    params: {}
- name: lti.frameResize
  endpoint:
    path: /lti.frameResize
    method: POST
    data_selector: height
    params: {}
- name: lti.fetchWindowSize
  endpoint:
    path: /lti.fetchWindowSize
    method: POST
    data_selector: data
    params: {}
- name: lti.showModuleNavigation
  endpoint:
    path: /lti.showModuleNavigation
    method: POST
    data_selector: show
    params: {}
- name: lti.scrollToTop
  endpoint:
    path: /lti.scrollToTop
    method: POST
    data_selector: data
    params: {}
- name: lti.setUnloadMessage
  endpoint:
    path: /lti.setUnloadMessage
    method: POST
    data_selector: message
    params: {}
- name: lti.removeUnloadMessage
  endpoint:
    path: /lti.removeUnloadMessage
    method: POST
    data_selector: data
    params: {}
- name: lti.screenReaderAlert
  endpoint:
    path: /lti.screenReaderAlert
    method: POST
    data_selector: body
    params: {}
- name: lti.showAlert
  endpoint:
    path: /lti.showAlert
    method: POST
    data_selector: body
    params: {}
- name: lti.enableScrollEvents
  endpoint:
    path: /lti.enableScrollEvents
    method: POST
    data_selector: subject
    params: {}
- name: showNavigationMenu
  endpoint:
    path: /showNavigationMenu
    method: POST
    data_selector: subject
    params: {}
- name: hideNavigationMenu
  endpoint:
    path: /hideNavigationMenu
    method: POST
    data_selector: subject
    params: {}
- name: toggleCourseNavigationMenu
  endpoint:
    path: /toggleCourseNavigationMenu
    method: POST
    data_selector: subject
    params: {}
- name: register_notice_handler
  endpoint:
    path: /api/lti/notice-handlers/106
    method: PUT
    data_selector: ''
    params: {}
- name: get_registered_notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/106
    method: GET
    data_selector: ''
    params: {}
- name: account_navigation
  endpoint:
    path: /api/v1/account_navigation
    method: GET
    data_selector: records
- name: assignment_edit
  endpoint:
    path: /api/v1/assignment_edit
    method: GET
    data_selector: records
- name: assignment_group_menu
  endpoint:
    path: /api/v1/assignment_group_menu
    method: GET
    data_selector: records
- name: assignment_index_menu
  endpoint:
    path: /api/v1/assignment_index_menu
    method: GET
    data_selector: records
- name: assignment_menu
  endpoint:
    path: /api/v1/assignment_menu
    method: GET
    data_selector: records
- name: assignment_selection
  endpoint:
    path: /api/v1/assignment_selection
    method: GET
    data_selector: records
- name: assignment_view
  endpoint:
    path: /api/v1/assignment_view
    method: GET
    data_selector: records
- name: collaboration
  endpoint:
    path: /api/v1/collaboration
    method: GET
    data_selector: records
- name: course_assignments_menu
  endpoint:
    path: /api/v1/course_assignments_menu
    method: GET
    data_selector: records
- name: course_home_sub_navigation
  endpoint:
    path: /api/v1/course_home_sub_navigation
    method: GET
    data_selector: records
- name: course_navigation
  endpoint:
    path: /api/v1/course_navigation
    method: GET
    data_selector: records
- name: course_settings_sub_navigation
  endpoint:
    path: /api/v1/course_settings_sub_navigation
    method: GET
    data_selector: records
- name: discussion_topic_index_menu
  endpoint:
    path: /api/v1/discussion_topic_index_menu
    method: GET
    data_selector: records
- name: discussion_topic_menu
  endpoint:
    path: /api/v1/discussion_topic_menu
    method: GET
    data_selector: records
- name: editor_button
  endpoint:
    path: /api/v1/editor_button
    method: GET
    data_selector: records
- name: file_index_menu
  endpoint:
    path: /api/v1/file_index_menu
    method: GET
    data_selector: records
- name: file_menu
  endpoint:
    path: /api/v1/file_menu
    method: GET
    data_selector: records
- name: global_navigation
  endpoint:
    path: /api/v1/global_navigation
    method: GET
    data_selector: records
- name: homework_submission
  endpoint:
    path: /api/v1/homework_submission
    method: GET
    data_selector: records
- name: link_selection
  endpoint:
    path: /api/v1/link_selection
    method: GET
    data_selector: records
- name: migration_selection
  endpoint:
    path: /api/v1/migration_selection
    method: GET
    data_selector: records
- name: module_group_menu
  endpoint:
    path: /api/v1/module_group_menu
    method: GET
    data_selector: records
- name: module_index_menu_modal
  endpoint:
    path: /api/v1/module_index_menu_modal
    method: GET
    data_selector: records
- name: module_index_menu
  endpoint:
    path: /api/v1/module_index_menu
    method: GET
    data_selector: records
- name: module_menu_modal
  endpoint:
    path: /api/v1/module_menu_modal
    method: GET
    data_selector: records
- name: module_menu
  endpoint:
    path: /api/v1/module_menu
    method: GET
    data_selector: records
- name: wiki_index_menu
  endpoint:
    path: /api/v1/wiki_index_menu
    method: GET
    data_selector: records
- name: wiki_page_menu
  endpoint:
    path: /api/v1/wiki_page_menu
    method: GET
    data_selector: records
- name: quiz_index_menu
  endpoint:
    path: /api/v1/quiz_index_menu
    method: GET
    data_selector: records
- name: quiz_menu
  endpoint:
    path: /api/v1/quiz_menu
    method: GET
    data_selector: records
- name: student_context_card
  endpoint:
    path: /api/v1/student_context_card
    method: GET
    data_selector: records
- name: submission_type_selection
  endpoint:
    path: /api/v1/submission_type_selection
    method: GET
    data_selector: records
- name: post_grades
  endpoint:
    path: /api/v1/post_grades
    method: GET
    data_selector: records
- name: tool_configuration
  endpoint:
    path: /api/v1/tool_configuration
    method: GET
    data_selector: records
- name: top_navigation
  endpoint:
    path: /api/v1/top_navigation
    method: GET
    data_selector: records
- name: user_navigation
  endpoint:
    path: /api/v1/user_navigation
    method: GET
    data_selector: records
- name: resource_selection
  endpoint:
    path: /api/v1/resource_selection
    method: GET
    data_selector: records
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: settings
    params:
      url: <url>
      text: <text>
      enabled: true
      visibility: public
      windowTarget: _blank
- name: course_navigation
  endpoint:
    path: /api/v1/courses/{course_id}/external_tools
    method: POST
- name: account_navigation
  endpoint:
    path: /api/v1/accounts/{account_id}/external_tools
    method: POST
- name: user_navigation
  endpoint:
    path: <url>
    method: POST
- name: Accounts
  endpoint:
    path: /accounts
    method: GET
- name: Courses
  endpoint:
    path: /courses
    method: GET
- name: course_navigation
  endpoint:
    path: /services/data/vXX.X/courses
    method: GET
- name: account_navigation
  endpoint:
    path: /services/data/vXX.X/accounts
    method: GET
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    params:
      enabled: true
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: url
    params:
      enabled: true
- name: homework_submission
  endpoint:
    path: /api/v1/homework_submissions
    method: POST
- name: editor_button
  endpoint:
    path: /services/editor_button
    method: GET
    data_selector: records
- name: migration_selection
  endpoint:
    path: /lti/deep_linking
    method: POST
- name: link_selection
  endpoint:
    path: /services/lti/link_selection
    method: POST
- name: assignment_selection
  endpoint:
    path: /lti/assignment_selection
    method: POST
- name: collaborations
  endpoint:
    path: /api/v1/collaborations
    method: GET
- name: Originality Reports
  endpoint:
    path: /api/originality_reports
    method: POST
    data_selector: report
    params: {}
- name: Webhooks Subscriptions
  endpoint:
    path: /api/webhooks_subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: tool_consumer_profile
  endpoint:
    path: /api/lti/courses/{courseId}/tool_consumer_profile/{tcpId}
    method: GET
    data_selector: services/capabilities
    params: {}
- name: submission_event
  endpoint:
    path: /api/lti/courses/{courseId}/submission_event
    method: POST
    data_selector: event
    params: {}
- name: tool_setting
  endpoint:
    path: /api/lti/tool_proxy/<tool proxy guid>/courses/24/resource_link_id/<lti assignment
      id>/tool_setting
    method: PUT
    data_selector: tp_custom_setting
- name: assignment
  endpoint:
    path: /api/lti/tool_proxy/<tool proxy guid>/courses/24/resource_link_id/<lti assignment
      id>/tool_setting
    method: GET
    data_selector: tp_custom_setting
- name: assignment
  endpoint:
    path: /api/lti/assignments/:assignment_id
    method: GET
    data_selector: LtiAssignment
    params: {}
- name: user
  endpoint:
    path: /api/lti/users/:id
    method: GET
- name: group_users
  endpoint:
    path: /api/lti/groups/:group_id/users
    method: GET
- name: submission
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id
    method: GET
- name: submission_history
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id/history
    method: GET
- name: Create a Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions
    method: POST
- name: Delete a Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions/:id
    method: DELETE
- name: Show a single Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions/:id
    method: GET
- name: Update a Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions/:id
    method: PUT
- name: List all Webhook Subscription for a tool proxy
  endpoint:
    path: /api/lti/subscriptions
    method: GET
- name: originality_report
  endpoint:
    path: /api/lti/assignments/25/submissions/6/originality_report/71
    method: GET
- name: Event Metadata
  endpoint:
    path: /event_metadata
    method: GET
- name: Event Data
  endpoint:
    path: /event_data
    method: GET
- name: account_created
  endpoint:
    path: /accounts
    method: POST
    data_selector: body
- name: account_notification_created
  endpoint:
    path: /accounts
    method: POST
    data_selector: body
- name: account_updated
  endpoint:
    path: /accounts
    method: POST
    data_selector: body
- name: asset_accessed
  endpoint:
    path: /api/v1/assets/accessed
    method: GET
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
    params: {}
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
    params: {}
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
    params: {}
- name: asset_accessed
  endpoint:
    path: /groups/{group_id}/collaborations
    method: GET
    data_selector: metadata
    params: {}
- name: assignment_created
  endpoint:
    path: /assignments
    method: PUT
    data_selector: body
- name: assignment_group_created
  endpoint:
    path: /assignment_groups
    method: PUT
    data_selector: body
- name: assignment_updated
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}
    method: PUT
    data_selector: body
    params: {}
- name: assignment_override_created
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}/overrides
    method: POST
    data_selector: body
    params: {}
- name: assignment_override_updated
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}/overrides/{override_id}
    method: PUT
    data_selector: body
    params: {}
- name: assignment_updated
  endpoint:
    path: /assignments
    method: PUT
    data_selector: body
- name: attachment_created
  endpoint:
    path: /files
    method: PUT
    data_selector: body
    params: {}
- name: attachment_updated
  endpoint:
    path: /files
    method: PUT
    data_selector: body
    params: {}
- name: attachment_deleted
  endpoint:
    path: /files
    method: DELETE
    data_selector: body
    params: {}
- name: attachment_updated
  endpoint:
    path: /attachment_updated
    method: GET
    data_selector: records
- name: conversation_created
  endpoint:
    path: /conversations
    method: POST
    data_selector: body
- name: conversation_forwarded
  endpoint:
    path: /conversations
    method: POST
    data_selector: body
- name: conversation_message_created
  endpoint:
    path: /conversations
    method: POST
    data_selector: body
- name: course_section_updated
  endpoint:
    path: /courses/sections/updated
    method: POST
    data_selector: body
    params: {}
- name: course_updated
  endpoint:
    path: /courses/updated
    method: POST
    data_selector: body
    params: {}
- name: discussion_entry_created
  endpoint:
    path: /courses/:course_id/discussion_topics/:discussion_topic_id/replies
    method: POST
    data_selector: body
    params: {}
- name: discussion_entry_submitted
  endpoint:
    path: /courses/:course_id/discussion_topics/:discussion_topic_id/replies
    method: POST
    data_selector: body
    params: {}
- name: discussion_topic_created
  endpoint:
    path: /courses/:course_id/discussion_topics
    method: POST
    data_selector: body
    params: {}
- name: discussion_topic_updated
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics/{discussion_topic_id}
    method: PUT
    data_selector: body
    params: {}
- name: enrollment_created
  endpoint:
    path: /events/enrollment_created
    method: POST
    data_selector: body
- name: enrollment_state_created
  endpoint:
    path: /events/enrollment_state_created
    method: POST
    data_selector: body
- name: enrollment_state_updated
  endpoint:
    path: /events/enrollment_state_updated
    method: POST
    data_selector: body
- name: enrollment_updated
  endpoint:
    path: /events/enrollment_updated
    method: POST
    data_selector: body
- name: course_grade_change
  endpoint:
    path: /grade/course_grade_change
    method: POST
    data_selector: body
- name: grade_change
  endpoint:
    path: /grade/grade_change
    method: POST
    data_selector: body
- name: grade_override
  endpoint:
    path: /grade/grade_override
    method: POST
    data_selector: body
- name: group_category_created
  endpoint:
    path: /groups
    method: GET
    data_selector: body
- name: group_category_updated
  endpoint:
    path: /groups
    method: GET
    data_selector: body
- name: group_created
  endpoint:
    path: /groups
    method: GET
    data_selector: body
- name: group_membership_created
  endpoint:
    path: /groups
    method: GET
    data_selector: body
- name: group_updated
  endpoint:
    path: /groups/48
    method: GET
    data_selector: body
    params: {}
- name: learning_outcome_created
  endpoint:
    path: /learning_outcome_created
    method: POST
- name: learning_outcome_group_created
  endpoint:
    path: /learning_outcome_group_created
    method: POST
- name: learning_outcome_group_updated
  endpoint:
    path: /learning_outcome_group_updated
    method: POST
- name: outcome_proficiency
  endpoint:
    path: /accounts/1/outcome_proficiency
    method: POST
    data_selector: body
- name: outcome_proficiency
  endpoint:
    path: /accounts/1/outcome_proficiency
    method: POST
    data_selector: body
    params: {}
- name: logged_in
  endpoint:
    path: /api/v1/logged_in
    method: POST
    data_selector: metadata
- name: logged_out
  endpoint:
    path: /api/v1/logged_out
    method: POST
    data_selector: metadata
- name: module_updated
  endpoint:
    path: /courses/:course_id/modules
    method: POST
    data_selector: body
- name: module_item_created
  endpoint:
    path: /courses/:course_id/modules/:module_id/items
    method: POST
    data_selector: body
- name: module_item_updated
  endpoint:
    path: /courses/:course_id/modules/:module_id/items/:item_id
    method: PUT
    data_selector: body
- name: module
  endpoint:
    path: /modules
    method: GET
    data_selector: modules
- name: outcome_calculation_method_updated
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: body
- name: outcomes.retry_outcome_alignment_clone
  endpoint:
    path: /api/v1/courses/1/assignments/2/retry_alignment_clone
    method: POST
    data_selector: body
    params: {}
- name: plagiarism_resubmit
  endpoint:
    path: /plagiarism_resubmit
    method: POST
    data_selector: body
- name: quiz_submitted
  endpoint:
    path: /courses/{course_id}/quizzes/{quiz_id}/submissions
    method: POST
    data_selector: body
- name: rubric_assessed
  endpoint:
    path: /rubric_assessed
    method: POST
- name: sis_batch_created
  endpoint:
    path: /api/v1/accounts/1/sis_imports.json
    method: POST
    data_selector: body
    params:
      import_type: instructure_csv
      override_sis_stickiness: 'true'
      extension: csv
- name: sis_batch_updated
  endpoint:
    path: /api/v1/accounts/1/sis_imports.json
    method: POST
    data_selector: body
    params:
      import_type: instructure_csv
      override_sis_stickiness: 'true'
      extension: csv
- name: submission_comment_created
  endpoint:
    path: /submission_comment_created
    method: POST
- name: submission_created
  endpoint:
    path: /submission_created
    method: POST
- name: submission_updated
  endpoint:
    path: /submission_updated
    method: POST
- name: submission
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions
    method: POST
    data_selector: body
    params: {}
- name: syllabus_updated
  endpoint:
    path: /api/v1/syllabus_updated
    method: POST
    data_selector: body
    params: {}
- name: user_created
  endpoint:
    path: /users
    method: POST
    data_selector: body
- name: user_updated
  endpoint:
    path: /users
    method: POST
    data_selector: body
- name: wiki_page_updated
  endpoint:
    path: /wiki_page_updated
    method: POST
    data_selector: body
- name: wiki_page_created
  endpoint:
    path: /wiki_page_created
    method: POST
    data_selector: body
- name: wiki_page_deleted
  endpoint:
    path: /wiki_page_deleted
    method: POST
    data_selector: body
- name: quiz_submitted
  endpoint:
    path: /quiz_submitted
    method: POST
- name: assignment_created
  endpoint:
    path: /assignments
    method: POST
    data_selector: data
- name: assignment_override_created
  endpoint:
    path: /assignment_overrides
    method: POST
    data_selector: data
- name: assignment_override_updated
  endpoint:
    path: /assignment_overrides/{id}
    method: PUT
    data_selector: data
- name: assignment_updated
  endpoint:
    path: /api/v1/assignments/updated
    method: GET
    data_selector: data
    params: {}
- name: attachment_created
  endpoint:
    path: /api/v1/attachments/created
    method: GET
    data_selector: data
    params: {}
- name: attachment_deleted
  endpoint:
    path: /api/v1/attachments/deleted
    method: GET
    data_selector: data
    params: {}
- name: attachment_updated
  endpoint:
    path: /api/v1/attachments/updated
    method: GET
    data_selector: data
    params: {}
- name: enrollment_state_created
  endpoint:
    path: /api/v1/enrollment_state_created
    method: POST
    data_selector: data
    params: {}
- name: enrollment_created
  endpoint:
    path: /api/v1/enrollment_created
    method: POST
    data_selector: data
    params: {}
- name: course_created
  endpoint:
    path: /api/v1/course_created
    method: POST
    data_selector: data
    params: {}
- name: course_updated
  endpoint:
    path: /api/v1/course_updated
    method: POST
    data_selector: data
    params: {}
- name: group_created
  endpoint:
    path: /api/v1/groups
    method: POST
    data_selector: data
    params: {}
- name: group_category_created
  endpoint:
    path: /api/v1/group_categories
    method: POST
    data_selector: data
    params: {}
- name: enrollment_updated
  endpoint:
    path: /api/v1/enrollments
    method: PUT
    data_selector: data
    params: {}
- name: group_membership_created
  endpoint:
    path: /api/v1/group_membership_created
    method: POST
    data_selector: data
    params: {}
- name: submission_created
  endpoint:
    path: /api/v1/submission_created
    method: POST
    data_selector: data
    params: {}
- name: submission_updated
  endpoint:
    path: /api/v1/submission_updated
    method: POST
    data_selector: data
    params: {}
- name: syllabus_updated
  endpoint:
    path: /api/v1/syllabus_updated
    method: POST
    data_selector: data
    params: {}
- name: wiki_page_created
  endpoint:
    path: /api/v1/wikis
    method: POST
    data_selector: data
    params: {}
- name: wiki_page_updated
  endpoint:
    path: /api/v1/wikis/{id}
    method: PUT
    data_selector: data
    params: {}
- name: wiki_page_deleted
  endpoint:
    path: /api/v1/wikis/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: wiki_page_updated
  endpoint:
    path: /api/v1/courses/{course_id}/pages/{page_id}
    method: GET
    data_selector: data
    params: {}
- name: discussion_entry_created
  endpoint:
    path: /discussion_entry_created
    method: POST
    data_selector: data
    params: {}
- name: discussion_topic_created
  endpoint:
    path: /discussion_topic_created
    method: POST
    data_selector: data
    params: {}
- name: grade_change
  endpoint:
    path: /api/v1/grade_change
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /data_service/canvas/event/asset_accessed
    method: GET
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /asset_accessed
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /data
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /api/asset_accessed
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /api/navigation_events
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /api/asset_accessed
    method: POST
    data_selector: data
    params: {}
- name: asset_accessed
  endpoint:
    path: /data
    method: GET
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /asset_accessed
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /path/to/asset_accessed
    method: GET
    data_selector: data
- name: event_data
  endpoint:
    path: /data
    method: POST
    data_selector: data
    params: {}
- name: session_logged_in
  endpoint:
    path: /api/v1/session/logged_in
    method: POST
    data_selector: data
- name: session_logged_out
  endpoint:
    path: /api/v1/session/logged_out
    method: POST
    data_selector: data
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- API authentication is done with OAuth2. If possible, using the HTTP Authorization
  header is recommended.
- GraphQL endpoint permissions mirror permissions for the REST API.
- Requests that return multiple items will be paginated to 10 items by default.
- Always check for the `Link` header.
- Canvas includes a built in dynamic throttling mechanism to prevent a single user
  from abusing the system and causing adverse effects for others.
- Canvas' file management is in a moment of transition.
- The request is signed, and will be denied if any parameters from the upload_params
  response are added, removed or modified.
- Masquerading is making an API call on behalf of another user.
- Developer keys issued after Oct 2015 generate tokens with a 1 hour expiration. Applications
  must use refresh tokens to generate new access tokens.
- Access tokens only work in the context of where a tool has been deployed.
- Developer keys are OAuth2 client ID and secret pairs stored in Canvas that allow
  third-party applications to request access to Canvas API endpoints via the OAuth2
  flow.
- Requires setup of connected app for OAuth2
- Uses OAuth2 with Bearer token in header
- Only one of student_ids, group_id, or course_section_id must be present for creating
  assignment overrides.
- Requires the 'Manage Files' permission to upload files.
- Some endpoints require specific permissions.
- Currently, only a root level admin user can return other users’ enrollments.
- Requires setup of OAuth2 tokens.
- The title is required when defining a new outcome.
- Uses OAuth2 with Bearer token
- Retrieving historic versions of pages requires edit rights.
- Returns 204 No Content for successful deletions.
- Some endpoints may require specific parameters to function correctly.
- Namespace (ns) parameter is required for custom_data requests.
- API for accessing account data.
- Requires the account lookup scope on the LTI key.
- Returns the paginated list of announcements for the given courses and date range.
- 'BETA: This API resource is not finalized, and there could be breaking changes before
  its final release.'
- Returns the paginated list of assignment groups for the current context.
- Just In Time provisioning. Valid for all providers except Canvas (which has the
  similar in concept self_registration setting).
- Authentication logs are stored for one year.
- Contains endpoints for managing blueprint courses, migrations, and restrictions.
- Retrieve a paginated list of messages sent to a user.
- Returns paginated migration issues
- Returns data on an individual migration issue
- Event data for certain event types return empty objects as they do not have any
  additional log data associated.
- API for accessing and building Course Paces.
- The number of extra attempts is limited to 1000 attempts or less.
- Extra time is limited to 10080 minutes (1 week).
- 'Extensions are mutually exclusive: extend_from_now and extend_from_end_at cannot
  be used together.'
- API for accessing course information.
- API for accessing and participating in discussion topics in groups and courses.
- An API for managing files and folders
- Primary collection of event objects is paginated, ordered by date descending.
- 'Built-in group categories include: communities, student_organized, and imported.'
- Groups created using the '/api/v1/groups/' endpoint will be community groups.
- History entries are returned in descending order, newest to oldest.
- InstAccess tokens expire after one hour.
- Canvas hands out encrypted tokens that need to be decrypted by the API Gateway before
  they can be accepted by Canvas or other services.
- JWTs have no value or use directly against the Canvas API, and expire after one
  hour
- Line Item API for 1EdTech (IMS) Assignment and Grade Services
- API for creating and viewing user logins under an account.
- This endpoint is cached for 10 minutes.
- API users should consider using the External Tools API instead.
- This API endpoint is not finalized, and there could be breaking changes before its
  final release.
- Use of this API requires the manage_lti_add and manage_assignments_add permissions.
- Resource Links are usually managed by the tool that created them via LTI Deep Linking.
- Closed captions added to a video MediaObject
- When you upload or record webcam video/audio to kaltura, it makes a Media Object
- By default, index returns id, locale, kind, media_object_id, and user_id for each
  of the result MediaTracks.
- Response Content-Type is application/vnd.ims.lti-nrps.v2.membershipcontainer+json
- Requires LTI Advantage (JWT OAuth2) tokens with the https://purl.imsglobal.org/spec/lti/scope/noticehandlers
  scope.
- Must use JWT access tokens with this API.
- Learning outcome groups organize outcomes within a context.
- API for accessing learning outcome results
- Most Pages API endpoints accept identification of the Page as either a URL or an
  ID.
- Limit for extra_attempts is 1000 attempts or less.
- Limit for extra_time is 10080 minutes (1 week).
- Limit for extend_from_now and extend_from_end_at is 1440 minutes (24 hours).
- See the File Upload Documentation for details on the file upload workflow.
- Contains meta information (such as pagination) for the list of users
- API for accessing quiz submissions
- Quizzes API allows listing, creating, editing, and deleting quizzes.
- May limit number of results by adding the limit query param.
- API for managing account- and course-level roles, and their associated permissions.
- A Score object requires the userId and scoreGiven to be present.
- A submission score will be updated when a score object is sent with either FullyGraded
  or PendingManual for gradingProgress.
- A paginated list of the sections for a course.
- Includes helpers for integration with SIS systems.
- All online turn-in submission types are supported in this API.
- All text should be UTF-8 encoded.
- All timestamps are sent and returned in ISO 8601 format.
- Tags and tag sets that don't exist in the UI will be created.
- Standard CSV rules apply (including adherence to the CSV RFC 4180 format).
- The tool can request Canvas' OpenID configuration with a GET request to the url
  in the openid_configuration parameter.
- The registration_token must be included as a bearer token in the Authorization header.
- Old domain https://canvas.instructure.com is still functional but should be updated
  to the new endpoint.
- The domain for the public JWKs endpoint used to be https://canvas.instructure.com.
- Tools wishing to implement the Platform Storage spec are required to use the new
  domain for this endpoint.
- API requires authentication via OAuth2.
- Returns the thousand separator for the current context account.
- Returns true if the AI quiz generation feature is enabled for the course.
- Deep linking is supported in LTI 1.1 Outcomes Service and LTI Advantage specifications.
- Deep Linking is supported in the LTI 1.1 Outcomes Service and LTI Advantage specifications.
- This is a Sample Tool Provider.
- Uses OAuth2 Client Credentials — requires configuration of LTI Developer Key with
  desired scopes
- Requires implementation of additional authentication systems.
- Reports can take hours to generate for large accounts; breaking into many smaller
  reports broken by term or object is recommended.
- The tool is only aware of users who've launched their tool at least once.
- 'Unidirectional: cannot push new enrollments to Canvas.'
- Must have knowledge of the Canvas course_id/group_id or context_memberships_url
- 'Unidirectional: cannot push new enrollments to Canvas'
- Requires an LTI integration configured within a Canvas course.
- Accessing Canvas API's requires an institution to issue a Developer Key
- Access token issued to access LTI advantage services will not work to access REST
  APIs
- Messages sent by a tool that has been launched from a Canvas mobile app will not
  receive any response messages.
- Use LTI Advantage token for authentication.
- Notice handler endpoint must be public, without any authentication.
- Canvas does not retry delivery of a notice if the notice handler is unavailable.
- Domain and URL matching are not enforced for user navigation links.
- It is recommended that the URL be over SSL (https).
- Canvas does not support Deep Linking from course navigation placement.
- This placement does not provide any course or resource level context in the Launch.
- This is primarily a one-way launch. Returning data to Canvas requires using Canvas
  API.
- The feature flag top_navigation_placement needs to be enabled.
- The tool must be added to the allow list for the placement either by Global Developer
  Key ID or by the Launch Domain.
- Canvas does not support Deep Linking from account navigation.
- User navigation links will only work if they are configured at the root account
  level.
- The tool is configured with a placement entry for top_navigation.
- Domain and URL matching are not enforced for top_navigation launches.
- It is recommended that URLs be over SSL (https).
- Allows students to choose whether or not they want to use the tool to submit.
- Files can be checked for plagiarism by tools that use the Plagiarism Detection Platform.
- Grades cannot be applied to editor content; use the assignment_selection placement
  if grades are desired.
- Requires UI interactions to generate content.
- Requires support for IMS Common Cartridge or Thin Common Cartridge by the tool.
- Tools must provide a download URL that is reachable by Canvas.
- Tools cannot synchronize grades and submissions back to the course gradebook by
  leveraging LTI grading services.
- This placement is enabled by default in Canvas for LTI 1.1.
- For LTI 1.3, the placement will only be enabled if listed in the placements in the
  JSON configuration.
- LTI 1.1 collaboration launches do not send a unique resource_link_id.
- TPs must go through the standard LTI2 registration flow.
- Canvas automatically creates a subscription for submissions webhook.
- JWT access token is required for all requests.
- Webhook subscriptions will be automatically created for submission events.
- JWT access tokens are used for LTI2 APIs.
- JWT access tokens are only valid for tools who register as described in section
  1 of this document.
- Live Events are well suited for analytics and data collection applications, but
  should not be used for applications that need their data immediately and as up-to-date
  as possible.
- FIFO Queues are not currently supported.
- Caliper live events are transformed into Caliper format based on JSON-LD.
- Each event consists of a JSON payload with a defined structure.
- Event data is delivered in a 'best-effort' fashion.
- Event data can be sent to AWS SQS queue and any HTTPS endpoint.
- The event is emitted anytime an account is created or updated by an end user or
  API request.
- Viewing various objects in Canvas triggers asset_accessed events.
- Event data structure includes metadata and body.
- Payload includes user and asset metadata
- Event time is in ISO 8601 format
- Event is emitted anytime a new assignment is created by an end user or API request.
- Event is emitted anytime a new assignment group is created by an end user or API
  request.
- Fields like description and title are truncated to 8192 characters.
- This event is emitted anytime an assignment is updated by an end user or API request.
- Event emitted anytime a file is uploaded, updated, or deleted.
- The event is emitted anytime a new conversation is initiated by the sender.
- Triggered when a new conversation is created.
- Only changes to the fields included in the body of the event payload will emit the
  `updated` event.
- The body field in the discussion topic will be truncated to only include the first
  8192 characters.
- Triggered when the final grade override has been changed.
- Triggered when a group is modified.
- Only changes to the fields included in the body of the event payload will emit the
  updated event.
- The event is emitted anytime an outcome is updated by an end user or API request.
- The event is emitted anytime a submission is created for an assignment with plagiarism
  settings turned on.
- Triggered when a user submits a quiz assignment
- Payload example provided for rubric_assessed event.
- The body field will be truncated to only include the first 8192 characters.
- The new page body will be truncated to only include the first 8192 characters.
- The event is emitted anytime a user submits a quiz assignment in Canvas.
- The body of the new page will be truncated to only include the first 8192 characters.
- Uses OAuth2 for authentication
- Triggered anytime a grade is created or modified.
- Triggered when a variety of assets are viewed.
- Payload data contains navigation events data.
- Payload includes various user and event details
- Payload includes data related to navigation events.
- Uses the Caliper standard for event data.
- Payload contains navigation events with various attributes.
- Ensure the correct content type is used for POST requests.
- The API documentation has moved to the Instructure Developer Documentation Portal.
errors:
- '403 Forbidden (Rate Limit Exceeded): Your application should be prepared for this
  error, and retry the request at a later time.'
- '401 Unauthorized: Perform the OAuth flow again to receive a new token.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: If you are not allowed to access this resource'
- '400 Bad Request: If the request parameters are invalid'
- '404 Not Found: The specified resource could not be found.'
- '400 Bad Request: Invalid parameters were provided.'
- '401 Unauthorized: Recheck OAuth token or user permissions'
- '404 Not Found: Verify course ID'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check if the token is valid and has the required permissions.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: Ensure all required parameters are included.'
- '403 Forbidden: Check permissions and access codes.'
- '403 Forbidden: if you are not allowed to extend assignments for this course'
- '400 Bad Request: if any of the extensions are invalid'
- Global errors will be reported as a single element errors array
- '200 OK: if the request was successful'
- '403 Forbidden: if you are not allowed to extend quizzes for this course'
- '401 Unauthorized: Recheck OAuth token'
- '403 Forbidden: If you are not allowed to extend quizzes for this course.'
- '200 OK: Request successful'
- '400 Bad Request: if the specified report type is invalid'
- '409 Conflict: if a quiz report of the specified type is already being generated'
- '204 No Content: if your request was accepted'
- '422 Unprocessable Entity: if the report is not being generated or can not be aborted
  at this stage'
- '422: Returns a 422 if user not found in Canvas or is not a student.'
- '400: Returns a 400 if the timestamp is earlier than the updated_at time of the
  Result.'
- '400: Namespace parameter, ns, is missing or invalid'
- '409: write conflict for custom_data hash'
- '403 Forbidden: Check registration token or scopes.'
- '400 Bad Request: Validate request structure and parameters.'
- '401 Unauthorized: Ensure client_id matches the developer key.'
- '401 Unauthorized: Invalid token or insufficient permissions.'
- '400: <parameter> is missing: Ensure you''re passing all required parameters'
- '401: Invalid Developer Key: Ensure your credentials point to the correct developer
  key and that the key is on'
- '404: The specified resource does not exist: Verify that the course, resource link,
  line item, or any other such resource that you''re specifying exists'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Verify OAuth2 credentials and scopes.'
- 'API throttling: Slow for large accounts'
- 'Error during message handling: response postMessage will contain an `error` property'
- This placement does not provide any course or resource level context in the Launch.
- This is primarily a one-way launch. Returning data to Canvas requires using Canvas
  API.
- Tools without the LTI scope https://canvas.instructure.com/lti/page_content/show
  will not be able to invoke the postMessage function.
- '401 Unauthorized: Ensure user has the Course Content - add / edit / delete permission.'
- '400 Bad Request: Check the request parameters and payload format.'
- '401 Unauthorized: Ensure the JWT access token is valid and not expired.'
- HTTP 4xx or 5xx errors
- Timeout errors
- SSL/certificate errors
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - LtiDeepLinkingRequest
client:
  base_url: https://<canvas>
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
