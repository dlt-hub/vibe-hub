resources:
- name: create_order
  endpoint:
    path: /api/checkout/url
    method: POST
    data_selector: request
    params: {}
- name: checkout
  endpoint:
    path: /checkout/url
    method: POST
    data_selector: response
    params: {}
- name: token
  endpoint:
    path: /checkout/token
    method: POST
    data_selector: response
    params: {}
- name: create_order
  endpoint:
    path: /api/create-order/
    method: POST
    data_selector: checkout_url
    params:
      currency: GEL
      merchant_id: 1549901
      amount: 100
- name: get_order_status
  endpoint:
    path: /api/order-status/
    method: GET
    data_selector: status
    params: {}
- name: create_order
  endpoint:
    path: /api/create-order-direct/
    method: POST
- name: order_parameters
  endpoint:
    path: /api/order-parameters-direct/
    method: GET
- name: create_order
  endpoint:
    path: /api/create-order/
    method: POST
    data_selector: response_url
    params:
      required_rectoken: Y
      verification: Y
- name: create_order_recurring
  endpoint:
    path: /api/create-order-recurring/
    method: POST
    data_selector: response_url
    params:
      rectoken: ''
- name: create_order
  endpoint:
    path: /api/checkout/token
    method: POST
    data_selector: response
    params:
      merchant_id: 1549901
      currency: GEL
      amount: 1000
      order_desc: Test payment
- name: options
  endpoint:
    path: /options
    method: GET
    data_selector: methods
    params: {}
- name: test_merchant_data
  endpoint:
    path: /api/test-merchant-data
    method: GET
    data_selector: merchant_data
    params: {}
- name: test_payment_data
  endpoint:
    path: /api/test-payment-data
    method: GET
    data_selector: payment_data
    params: {}
- name: testing_apple_pay_web
  endpoint:
    path: /api/testing-apple-pay-web
    method: GET
    data_selector: apple_pay_web_data
    params: {}
- name: testing_apple_pay_app
  endpoint:
    path: /api/testing-apple-pay-app
    method: GET
    data_selector: apple_pay_app_data
    params: {}
- name: testing_open_banking
  endpoint:
    path: /api/testing-open-banking
    method: GET
    data_selector: open_banking_data
    params:
      payment_method: x
- name: create_order
  endpoint:
    path: /checkout/redirect/
    method: POST
    data_selector: order_response
    params: {}
- name: get_checkout_url
  endpoint:
    path: /checkout/url/
    method: POST
    data_selector: checkout_url
    params: {}
- name: request
  endpoint:
    path: /request
    method: POST
    data_selector: request
    params: {}
- name: response
  endpoint:
    path: /response
    method: GET
    data_selector: response
    params: {}
- name: accept_purchase
  endpoint:
    path: /accept-purchase
    method: POST
    data_selector: request
    params:
      order_id: string(1024)
      merchant_id: integer(12)
      order_desc: string(1024)
      amount: integer(12)
      currency: string(3)
      signature: string(40)
- name: create_order_checkout_url
  endpoint:
    path: /api/checkout/url
    method: POST
    data_selector: response
    params: {}
- name: create_order_payment_token
  endpoint:
    path: /api/checkout/token
    method: POST
    data_selector: response
    params: {}
- name: checkout_redirect
  endpoint:
    path: /api/checkout/redirect
    method: POST
- name: checkout_token
  endpoint:
    path: /api/checkout/token
    method: POST
- name: order_status
  endpoint:
    path: /api/status/order_id
    method: POST
    data_selector: response
    params:
      order_id: mandatory
      merchant_id: mandatory
      signature: mandatory
- name: accept_purchase
  endpoint:
    path: /accept-purchase
    method: POST
    data_selector: request
    params: {}
- name: 3dsecure_step1
  endpoint:
    path: /api/3dsecure_step1
    method: POST
    data_selector: response
    params: {}
- name: 3dsecure_step2
  endpoint:
    path: /api/3dsecure_step2
    method: POST
    data_selector: response
    params: {}
- name: accept_payment_with_saved_card
  endpoint:
    path: /api/payment/accept
    method: POST
    data_selector: request
    params:
      order_id: mandatory
      merchant_id: mandatory
      order_desc: mandatory
      amount: mandatory
      currency: mandatory
      rectoken: mandatory
      signature: mandatory
- name: recurring_order
  endpoint:
    path: /api/recurring
    method: POST
    data_selector: response
    params: {}
- name: withdrawal
  endpoint:
    path: /api/p2pcredit
    method: POST
    data_selector: request
    params:
      order_id: string(1024)
      merchant_id: integer(12)
      order_desc: string(1024)
      amount: integer(12)
      currency: string(3)
      signature: string(40)
      receiver_rectoken: string(40)
      external_rectoken: string(40)
- name: reversal
  endpoint:
    path: /create-reversal
    method: POST
    data_selector: request
    params:
      order_id: string(1024)
      merchant_id: integer(12)
      currency: string(3)
      reverse_id: string(50)
      signature: string(40)
- name: order_status
  endpoint:
    path: /get-reversal-status
    method: GET
    data_selector: response
    params:
      order_id: string(1024)
      merchant_id: integer(12)
      reverse_status: string(50)
      response_status: string(50)
      reverse_id: string(50)
      transaction_id: string(50)
      signature: string(40)
- name: reverse_order
  endpoint:
    path: /api/reverse/order_id
    method: POST
    data_selector: response
    params: {}
- name: order_status
  endpoint:
    path: /status
    method: POST
    data_selector: response
    params: {}
- name: capture
  endpoint:
    path: /capture
    method: POST
    data_selector: request
    params:
      version: 1.0.1
      order_id: test_12343242113
      merchant_id: 1549901
      amount: 100
      currency: GEL
      signature: 1efcb015c89da38977ae1e734aade413b95ca900
- name: capture_order
  endpoint:
    path: /api/capture/order_id
    method: POST
    data_selector: response
    params: {}
- name: order_status
  endpoint:
    path: /api/status/order_id
    method: POST
    data_selector: response.additional_info
    params: {}
- name: report
  endpoint:
    path: /api/extend/company/report/
    method: POST
    data_selector: data
    params:
      filters:
      - s: settlement_date
        m: dateis
        v: '2019-01-24'
      merchant_id: 1549901
      report_id: 688
      on_page: 500
      page: 2
- name: chargebacks_report
  endpoint:
    path: /reports/500
    method: GET
    data_selector: records
    params:
      mandatory_filter_fields: tran_id OR chargeback_createtime
- name: success_transactions_report
  endpoint:
    path: /reports/528
    method: GET
    data_selector: records
    params:
      mandatory_filter_fields: tran_id OR tran_timestart
- name: all_transactions_report
  endpoint:
    path: /reports/745
    method: GET
    data_selector: records
    params:
      mandatory_filter_fields: order_timestart OR order_timeend OR payment_id OR order_id
- name: reimbursement_report
  endpoint:
    path: /reports/969
    method: GET
    data_selector: records
    params:
      mandatory_filter_fields: settlement_date OR tran_timeend OR payment_id OR order_id
- name: create_order
  endpoint:
    path: /api/create-order/
    method: POST
- name: get_order_status
  endpoint:
    path: /api/order-status/
    method: GET
- name: direct_payment
  endpoint:
    path: /api/order-parameters-direct/
    method: POST
- name: create_order_direct
  endpoint:
    path: /api/create-order-direct/
    method: POST
    data_selector: request
- name: create_order_direct
  endpoint:
    path: /api/create-order-direct/
    method: POST
- name: create_order
  endpoint:
    path: /api/checkout/url
    method: POST
    data_selector: response
    params:
      payment_system: opb
- name: create_payment_token
  endpoint:
    path: /api/checkout/token
    method: POST
    data_selector: response
- name: create_subscription
  endpoint:
    path: /api/checkout/url
    method: POST
    data_selector: request
- name: cancel_subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: request
    params: {}
- name: fiscal_data
  endpoint:
    path: /api/fiscal_data
    method: POST
    data_selector: request
    params: {}
- name: create_order
  endpoint:
    path: /api/checkout/3dsecure_step1
    method: POST
    data_selector: request
    params: {}
- name: create_order
  endpoint:
    path: /api/order-parameters
    method: POST
    data_selector: request
- name: currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: records
- name: create_order
  endpoint:
    path: /api/checkout/url
    method: POST
    data_selector: response
    params: {}
- name: get_order_status
  endpoint:
    path: /api/order-status
    method: GET
    data_selector: response
    params: {}
- name: delayed_order
  endpoint:
    path: /delayed-order
    method: GET
    data_selector: order_status
    params: {}
- name: supported_countries
  endpoint:
    path: /supported-countries
    method: GET
    data_selector: countries
    params: {}
- name: supported_payment_systems
  endpoint:
    path: /supported-payment-systems
    method: GET
- name: create_order
  endpoint:
    path: /api/create-order/
    method: POST
- name: get_order_status
  endpoint:
    path: /api/order-status/
    method: GET
- name: create_withdrawal
  endpoint:
    path: /api/create-order-p2pcredit/
    method: POST
- name: create_reversal
  endpoint:
    path: /api/create-reversal/
    method: POST
- name: create_capture
  endpoint:
    path: /api/create-capture/
    method: POST
- name: create_order
  endpoint:
    path: /api/create-order/
    method: POST
    data_selector: data
    params:
      currency: GEL
      merchant_id: 1549901
      amount: 100
      response_url: http://example.com/result/
- name: create_order
  endpoint:
    path: /api/checkout/token
    method: POST
    data_selector: response
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: url
    params: {}
- name: order
  endpoint:
    path: /api/create-order
    method: POST
- name: order_status
  endpoint:
    path: /api/order-status
    method: GET
- name: withdrawal
  endpoint:
    path: /api/create-order-p2pcredit
    method: POST
- name: reversal
  endpoint:
    path: /api/create-reversal
    method: POST
- name: capture
  endpoint:
    path: /api/create-capture
    method: POST
- name: reports
  endpoint:
    path: /api/reports
    method: GET
- name: create_order
  endpoint:
    path: /api/create-order
    method: POST
    data_selector: token
- name: get_order_status
  endpoint:
    path: /api/order-status
    method: GET
    data_selector: status
- name: Checkout
  endpoint:
    path: /Checkout
    method: POST
    data_selector: data
    params: {}
- name: create_order
  endpoint:
    path: /api/create-order-direct/
    method: POST
    data_selector: results
- name: get_order_status
  endpoint:
    path: /api/order-status/
    method: GET
    data_selector: results
- name: create_order
  endpoint:
    path: /api/create-order/
    method: POST
    data_selector: response_url
    params:
      required_rectoken: Y
- name: create_order_recurring
  endpoint:
    path: /api/create-order-recurring/
    method: POST
    data_selector: response_url
    params: {}
notes:
- Register Apple Merchant ID following the instruction at Apple Developer site.
- You need to add the certificates to your application to encrypt payment data.
- Use server_callback_url for obtaining recurring token for recurring payments.
- Direct integration will require from merchant the PCIDSS SAQ D compliance.
- When your merchant is in test mode, response can contain additional parameter `response_signature_string`
  which will be absent in the live mode.
- Do not send any sensitive information to Flitt API with test payment key and merchant
  taken from Testing mode section.
- Protocol version 1.0 is deprecated
- Normal response will contain HTTP code 302 Found and Location url where payer will
  be automatically redirected by his browser.
- In case of error, /api/checkout/redirect page will contain html content with Request
  ID, 4-digit 2XXX error code and error localized description.
- This flow will consist from two steps.
- 'Step 1: Obtain ACS URL from issuing bank and redirect cardholder to this URL for
  3DSecure authentication.'
- 'Step 2: Obtain result from ACS URL and perform financial transaction - purchase.'
- Version 1.0 is deprecated
- Capture operation does not require idempotent key as capture can be securely retried.
- 3DSecure authentication is never triggered for Apple Pay payments on Flitt side
- Flitt supports recurring payments for Apple Pay.
- 'Flitt supports only following configuration: Allowed payment methods: CARD; Allowed
  authorization methods: [PAN_ONLY,CRYPTOGRAM_3DS]; Allowed card networks: [MASTERCARD,VISA];
  Tokenization specification: PAYMENT_GATEWAY.'
- 3DSecure authentication will be required for Google Pay in Georgia for both authorization
  methods PAN_ONLY, CRYPTOGRAM_3DS and 3DS will be required for PAN_ONLY in other
  regions like Moldova, Armenia.
- To create Open Banking Payment, the mandatory parameter payment_systems = opb must
  be sent during create order request.
- Order can be created only within Redirect or Embedded flow and yet not supported
  for Direct.
- Subscription payments does not work for Direct integration type.
- Open Banking method does not support subscription yet.
- All parameters must be alphanumeric, and contain latin characters, digits and separator
  symbols
- Callback will not follow redirects.
- Requires setup of merchant account.
errors:
- Handle errors in payment processing using .on('error') callback.
- '1011: Parameter `amount` is missing'
- '2XXX: Error codes and descriptions related to the checkout process.'
- '1002: Application error'
- 'error_code 1011: Parameter `amount` is missing'
- '1016: Merchant not found'
- '1007: Parameter `signature` is incorrect'
- Authorization token required
- Invalid auth token
- Merchant not found
- you have no access to this report
- HTTP 200 OK status must be returned to consider the callback processed successfully.
- '1014: Invalid signature'
- '1000: General decline'
- '1003: Invalid CVV2 code'
- '1004: Do not honor'
- '1005: Invalid format'
- '1006: Merchant is not configured correctly'
- '1007: Parameter {param_name} is incorrect'
- '1009: Parameter {param_name} is empty'
- '1010: Request Is empty'
- '1011: Parameter {param_name} is missing'
- '1012: Currency {currency} is not available for this merchant `1549901`'
- '1013: Duplicate order `{order_id}` for merchant `1549901`'
- '1015: Invalid card number'
- '1016: Merchant `1549901` not found'
- '1017: No available payment systems'
- '1018: Order `{order_id}` not found'
- '1019: Order `{order_id}` already has been completed'
- '1021: Unsupported Content-Type `{content_type}`'
- '1023: Invalid amount'
- '1024: 3DSecure authentication failed'
- '1025: Invalid card expiry date'
- '1026: Only redirect method allowed'
- '1027: Preauth not allowed'
- '1028: Custom design not found'
- '1034: Please do not use symbol `{separator}` in parameters'
- '1035: Token not found'
- '1036: Invoice is paid'
- '1037: Decline, not sufficient funds'
- '1040: Transaction amount exceeds card internet limit'
- '1041: Card is in black list'
- '1042: Stolen card'
- '1043: Restricted Card'
- '1044: Lost card'
- '1045: Card is blocked by acquirer bank'
- '1046: Request contains non utf-8 symbol'
- '1047: Card exceeds withdrawal frequency limit'
- '1048: Card exceeds withdrawal amount limit'
- '1049: Unknown payment system error'
- '1051: Declined by antifraud'
- '1052: Order has expired'
- '1053: 3DSecure card verification failed. Directory server or issuer not available.'
- '1054: Session expired'
- '1055: P2P limit exceeded'
- '1057: Sender card declined by issuer'
- '1058: Receiver card declined by issuer'
- '1059: Transaction with rectoken not allowed for merchant'
- '1060: Recurring transaction not allowed for merchant'
- '1061: PIN tries exceeded'
- '1062: Not permitted to merchant'
- '1063: Not permitted to client'
- '1064: Call your bank'
- '1065: Invalid transaction'
- '1066: System malfunction'
- '1067: Incorrect PIN'
- '1068: Format error'
- '1069: Reverse not allowed. Turnover is not enough.'
- '1070: Transaction is routed to another terminal'
- '1072: Recurring chain declined'
- '1073: 3DSecure is mandatory for Maestro cards'
- '1074: P2P credit allowed only by rectoken'
- '1078: Token deactivated by bank'
- '1075: 3DSecure is mandatory'
- '1079: Card is blocked by issuing bank'
- '1076: An error occurred while processing your payment. Invalid IBAN. Check the
  IBAN you entered, or use another IBAN'
- '1080: Decline, exceeds receiving card count limit'
- '1077: Merchant is not activated yet. Only test IBAN allowed'
- '1081: Insufficient funds on balance (p2p credit)'
- '1082: Token has expired'
- '1083: Decline, exceeds receiving card amount limit'
- '1087: Terminal closed by acquiring bank'
- '1086: Transaction already finished'
- '1084: Only full refund allowed'
- '1088: Lookup code attempts limit exceeded'
- '1089: Acquiring bank request timeout'
- '1090: P2P card credit not allowed for this country'
- '1091: Card not enrolled. Lookup required'
- '1092: Invalid phone number'
- '1096: Invalid E-mail'
- '1097: Decline, refer to card issuer'
- '1098: SEPA: The customer’s payment is accepted, but then canceled before collection.'
- '1099: P2P credit is not available for this IP address'
- '1100: Operation not allowed'
- '1102: Antifraud decline. Prepaid cards are blocked'
- '1103: Receipt created'
- '1104: Country not allowed by bank-acquirer'
- '1105: Antifraud decline. Only full 3D-Secure allowed.'
- '1106: Split error. Split payments not allowed for merchant.'
- '1107: Split error. Settlement merchants have another company.'
- '1108: Split error. Merchants in purchase and reverse do not match.'
- '1109: Order already captured with different amount'
- '1111: Your card is not supported. Please use card of'
- '1114: Settlement not allowed until order is captured'
- '1115: Pick up card (no fraud)'
- '1116: Pick up card, special condition (fraud account)'
- '1117: Security violation'
- '1120: Splitting amount does not correspond to purchase or capture amount'
- '1122: Connection closed unexpectedly'
- '1123: Acquiring bank request timeout. Transaction reversed.'
- '1125: Maestro cards are not allowed'
auth_info:
  mentioned_objects: []
client:
  base_url: https://pay.flitt.com
  headers:
    Content-Type: application/json
source_metadata: null
