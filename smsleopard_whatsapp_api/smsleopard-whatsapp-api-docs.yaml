resources:
- name: fetch_groups
  endpoint:
    path: /contacts-api/fetch-groups
    method: GET
- name: create_contact
  endpoint:
    path: /contacts-api/create-contact
    method: POST
- name: delete_contact
  endpoint:
    path: /contacts-api/delete-contact
    method: DELETE
- name: send_sms
  endpoint:
    path: /sms/send
    method: GET
    data_selector: response
    params:
      username: '{api_key}'
      password: '{api_secret}'
      message: '{intended_message}'
      destination: '{comma_separated_list}'
      source: '{sender_id}'
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: GET
    params: {}
- name: account_balance
  endpoint:
    path: /v1/balance
    method: GET
    data_selector: balance
    params: {}
- name: account_balance
  endpoint:
    path: /v1/balance
    method: GET
    data_selector: balance
    params: {}
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: GET
    params:
      message: '{intended_message}'
      destination: '{comma_separated_list}'
      source: '{sender_id}'
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: GET
    data_selector: success
    params: {}
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: GET
    data_selector: success
    params:
      username: api_key
      password: api_secret
      message: intended_message
      destination: comma_separated_list
      source: sender_id
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: GET
    data_selector: recipients
    params:
      username: api_key
      password: api_secret
      message: intended_message
      destination: comma_separated_list
      source: sender_id
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: POST
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: POST
    data_selector: success
    params: {}
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: POST
    data_selector: success
    params: {}
- name: send_sms
  endpoint:
    path: /v1/sms/send
    method: POST
    data_selector: success
    params: {}
- name: inbox_message
  endpoint:
    path: /sms-api/forwarding-message/forwarding-inbox-message
    method: POST
    data_selector: id
    params: {}
- name: inbox_message
  endpoint:
    path: /sms-api/forwarding-message/forwarding-keyword-message
    method: POST
    data_selector: id
    params: {}
- name: delivery_report
  endpoint:
    path: /v1/delivery_reports/{unique_id_of_recipient_message}
    method: GET
    data_selector: ''
    params: {}
- name: delivery_report
  endpoint:
    path: /v1/delivery_reports/{unique_id_of_recipient_message}
    method: GET
    data_selector: id
    params: {}
- name: phone_numbers
  endpoint:
    path: /v1/phone_number_ids
    method: GET
    data_selector: ''
- name: phone_numbers
  endpoint:
    path: /v1/phone_number_ids
    method: GET
    data_selector: ''
    params: {}
- name: fetch_templates
  endpoint:
    path: /v1/phone_number_ids/{id}/templates
    method: GET
    data_selector: '[]'
- name: templates
  endpoint:
    path: /v1/phone_number_ids/{id}/templates
    method: GET
    data_selector: '[]'
- name: send_template_message
  endpoint:
    path: /v1/whatsapp/send
    method: POST
    data_selector: recipients
- name: send_template_message
  endpoint:
    path: /v1/whatsapp/send
    method: POST
    data_selector: recipients
- name: phone_numbers
  endpoint:
    path: /v1/phone_number_ids
    method: GET
- name: templates
  endpoint:
    path: /v1/phone_number_ids/{id}/templates
    method: GET
- name: send_message
  endpoint:
    path: /v1/whatsapp/send
    method: POST
- name: phone_numbers
  endpoint:
    path: /v1/phone_number_ids
    method: GET
- name: templates
  endpoint:
    path: /v1/phone_number_ids/{id}/templates
    method: GET
- name: send_message
  endpoint:
    path: /v1/whatsapp/send
    method: POST
- name: groups
  endpoint:
    path: /v1/groups/fetch
    method: GET
    data_selector: groups
- name: groups
  endpoint:
    path: /v1/groups/fetch
    method: GET
    data_selector: groups
    params: {}
- name: create_contact
  endpoint:
    path: /contacts/create
    method: POST
    data_selector: ''
    params: {}
- name: create_contact
  endpoint:
    path: /v1/contacts/create
    method: POST
    data_selector: ''
    params: {}
- name: delete_contact
  endpoint:
    path: /v1/contacts/:id
    method: DELETE
- name: delete_contact
  endpoint:
    path: /v1/contacts/:id
    method: DELETE
notes:
- Authorization uses base64 encoding of api_key and api_secret
- Authentication uses base64 encoding of api_key and api_secret
- Uses HTTP callback (webhook) to forward incoming inbox messages directly to your
  application.
- We use HTTP callback (webhook) to forward incoming inbox messages directly to your
  application.
- Promotional messages can only be sent between 8AM and 6PM every day.
- Restricted send time occurs when sending messages to Safaricom recipients using
  a PROMOTIONAL sender ID past the allowed time. They can only be sent between 8AM
  and 6PM every day.
- Never expose credentials in client-side code
- Use environment variables to store API keys
- Use sandbox keys for all testing and development
- Rotate API keys regularly for enhanced security
- Monitor API usage to detect unauthorized access
- Once a contact is deleted, it cannot be recovered
- Make sure you have the correct contact ID before making the deletion
errors:
- Invalid credentials
- Insufficient balance
- Invalid number
- Invalid sender ID
- Invalid message
- Restricted send time
- 'Invalid credentials: Check your api_key and api_secret'
- 'Insufficient balance: Ensure your account has enough funds'
- 'Invalid number: Verify the recipient''s phone number'
- 'Invalid sender ID: Check the sender ID used for sending SMS'
- 'Invalid message: Review the message content for compliance'
- 'Restricted send time: Ensure the sending time is allowed'
- 'Invalid credentials: Check API key and secret'
- 'Insufficient balance: Ensure account has enough credit'
- 'Invalid number: Verify the recipient number is correct'
- 'Invalid sender ID: Ensure sender ID is valid'
- 'Invalid message: Check the message content'
- 'Restricted send time: Verify sending is allowed at the given time'
- '401 Unauthorized: Authentication required.'
- 'Invalid credentials: Unauthorized. Authentication required.'
- '400: Insufficient account balance'
- '400: no valid recipients'
- '201: Sent to 1/2. Cost KES 0.90'
- '404: Unrecognized sender id. Sender ID test is not assigned an account'
- '400: Source (sender id) is not defined'
- '400: Message validation failed'
- 'restricted_send_time: no valid recipients'
- bad_request
- invalid_format
- unauthorized
- 'bad_request: Actual error message describing the issue'
- 'invalid_format: Actual error message describing the issue'
- 'unauthorized: Actual error message describing the issue'
- 'Invalid credentials: Ensure API key and secret are correct'
- 'Insufficient balance: Check account balance for API usage'
- 'Invalid number: Validate the phone number format'
- '400 Bad Request: Invalid phone number format'
- '401 Unauthorized: Invalid API credentials'
- '404 Not Found: Contact with the specified ID does not exist'
- '403 Forbidden: You don''t have permission to delete this contact'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.smsleopard.com
  auth:
    type: apikey
source_metadata: null
