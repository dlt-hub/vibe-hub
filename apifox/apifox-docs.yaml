resources:
- name: describe
  endpoint:
    path: /ideogram/describe
    method: POST
- name: user_self
  endpoint:
    path: /user/self
    method: GET
- name: chat_completion
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
- name: chat_completion
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
- name: transcription
  endpoint:
    path: /v1/audio/transcriptions
    method: POST
    data_selector: text
    params: {}
- name: audio_translations
  endpoint:
    path: /v1/audio/translations
    method: POST
    data_selector: text
- name: speech
  endpoint:
    path: /v1/audio/speech
    method: POST
    data_selector: model
    params: {}
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: model_list
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /v1/messages
    method: POST
    data_selector: ''
    params: {}
- name: generate_music
  endpoint:
    path: /suno/submit/music
    method: POST
- name: lyrics
  endpoint:
    path: /submit/lyrics
    method: POST
    data_selector: data
    params: {}
- name: upload_music
  endpoint:
    path: /suno/uploads/audio-url
    method: POST
    data_selector: data
    params: {}
- name: music_concat
  endpoint:
    path: /suno/submit/concat
    method: POST
    data_selector: data
    params: {}
- name: fetch_task
  endpoint:
    path: /fetch/{task_id}
    method: GET
    params:
      task_id: string
- name: fetch_batch_tasks
  endpoint:
    path: /suno/fetch
    method: POST
    data_selector: data
    params: {}
- name: generate_music
  endpoint:
    path: /udio/generate-proxy
    method: POST
    data_selector: gen_params
- name: fetch_task
  endpoint:
    path: /udio/query
    method: GET
    data_selector: songs
    params:
      ids: ids
- name: submit_task
  endpoint:
    path: /submit_task
    method: POST
- name: fetch_task
  endpoint:
    path: /fetch_task
    method: GET
- name: upload_file
  endpoint:
    path: /upload_file
    method: POST
- name: submit_imagine
  endpoint:
    path: /mj/submit/imagine
    method: POST
    data_selector: properties
    params: {}
- name: action_submit
  endpoint:
    path: /mj/submit/action
    method: POST
    data_selector: code
    params: {}
- name: submit_modal
  endpoint:
    path: /mj/submit/modal
    method: POST
    data_selector: properties
    params: {}
- name: blend
  endpoint:
    path: /mj/submit/blend
    method: POST
    data_selector: body
- name: describe
  endpoint:
    path: /mj/submit/describe
    method: POST
    data_selector: properties
    params: {}
- name: shorten
  endpoint:
    path: /mj/submit/shorten
    method: POST
    data_selector: code
    params: {}
- name: upload_discord_images
  endpoint:
    path: /submit/upload-discord-images
    method: POST
    data_selector: ''
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: users
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: users
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: upload_discord_images
  endpoint:
    path: /mj/submit/upload-discord-images
    method: POST
    data_selector: result
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: messages
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: messages
- name: task
  endpoint:
    path: /mj/task/list-by-condition
    method: POST
    data_selector: array
    params: {}
- name: task
  endpoint:
    path: /mj/task/{id}/fetch
    method: GET
- name: image_seed
  endpoint:
    path: /mj/task/{id}/image-seed
    method: GET
    params:
      id: string
- name: generate
  endpoint:
    path: /flux/v1/{model}
    method: POST
    data_selector: id
    params: {}
- name: get_result
  endpoint:
    path: /flux/v1/get_result
    method: GET
    data_selector: result
    params:
      id: string
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: object
    params: {}
- name: image_generation
  endpoint:
    path: /recraft/v1/images/generations
    method: POST
    data_selector: object
    params: {}
- name: vectorize_image
  endpoint:
    path: /vectorize
    method: POST
    data_selector: image
    params: {}
- name: remove_background
  endpoint:
    path: /removeBackground
    method: POST
    data_selector: image
    params: {}
- name: clarity_upscale
  endpoint:
    path: /recraft/v1/images/clarityUpscale
    method: POST
    data_selector: object
    params: {}
- name: generative_upscale
  endpoint:
    path: /recraft/v1/images/generativeUpscale
    method: POST
    data_selector: object
    params: {}
- name: style
  endpoint:
    path: /recraft/v1/styles
    method: POST
    data_selector: object
    params: {}
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: generate
  endpoint:
    path: /ideogram/generate
    method: POST
    data_selector: data
    params: {}
- name: remix
  endpoint:
    path: /ideogram/remix
    method: POST
    data_selector: data
- name: edit
  endpoint:
    path: /ideogram/edit
    method: POST
- name: upscale
  endpoint:
    path: /ideogram/upscale
    method: POST
    data_selector: data
    params: {}
- name: describe
  endpoint:
    path: /ideogram/describe
    method: POST
    data_selector: descriptions
    params: {}
- name: generations
  endpoint:
    path: /dream-machine/v1/generations
    method: POST
    data_selector: request
    params: {}
- name: fetch_task
  endpoint:
    path: /dream-machine/v1/generations/{task_id}
    method: GET
    data_selector: records
    params:
      task_id: string
- name: generations
  endpoint:
    path: /luma/generations
    method: POST
- name: download_video_url
  endpoint:
    path: /luma/generations/{task_id}/download_video_url
    method: GET
- name: extend_video
  endpoint:
    path: /luma/generations/{task_id}/extend
    method: POST
    data_selector: object
    params: {}
- name: task
  endpoint:
    path: /luma/generations/{task_id}
    method: GET
- name: get_batch_task
  endpoint:
    path: /luma/tasks
    method: POST
    data_selector: data
    params: {}
- name: image_to_video
  endpoint:
    path: /runwayml/v1/image_to_video
    method: POST
    data_selector: id
- name: task
  endpoint:
    path: /runwayml/v1/tasks/{id}
    method: GET
    data_selector: object
    params:
      id: string
- name: generate_video
  endpoint:
    path: /runway/pro/generate
    method: POST
    data_selector: data
    params: {}
- name: generate_video
  endpoint:
    path: /runway/pro/generate
    method: POST
    data_selector: object
    params: {}
- name: video2video
  endpoint:
    path: /runway/pro/video2video
    method: POST
    data_selector: object
    params: {}
- name: act_one
  endpoint:
    path: /runway/pro/act_one
    method: POST
    data_selector: object
- name: task
  endpoint:
    path: /runway/feed
    method: POST
    data_selector: data
    params: {}
- name: callback
  endpoint:
    path: /callback
    method: POST
- name: generate_image
  endpoint:
    path: /generate_image
    method: POST
- name: text_to_video
  endpoint:
    path: /text_to_video
    method: POST
- name: image_to_video
  endpoint:
    path: /image_to_video
    method: POST
- name: video_extend
  endpoint:
    path: /video_extend
    method: POST
- name: get_task
  endpoint:
    path: /get_task
    method: GET
- name: lip_sync
  endpoint:
    path: /lip_sync
    method: POST
- name: kolors_virtual_try_on
  endpoint:
    path: /kolors_virtual_try_on
    method: POST
- name: generate_image
  endpoint:
    path: /kling/v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: text_2_video
  endpoint:
    path: /text2video
    method: POST
- name: image2video
  endpoint:
    path: /kling/v1/videos/image2video
    method: POST
    data_selector: data
    params: {}
- name: video_extend
  endpoint:
    path: /kling/v1/videos/video-extend
    method: POST
    data_selector: data
    params: {}
- name: get_task
  endpoint:
    path: /kling/v1/{action}/{action2}/{task_id}
    method: GET
- name: lip-sync
  endpoint:
    path: /kling/v1/videos/lip-sync
    method: POST
    data_selector: input
- name: kolors-virtual-try-on
  endpoint:
    path: /kling/v1/images/kolors-virtual-try-on
    method: POST
    data_selector: body
    params: {}
- name: predictions
  endpoint:
    path: /replicate/v1/predictions
    method: POST
    data_selector: object {0}
- name: predictions
  endpoint:
    path: /replicate/v1/predictions/{id}
    method: GET
- name: generate_video
  endpoint:
    path: /v1/video_generation
    method: POST
    data_selector: task_id
- name: get_task
  endpoint:
    path: /v1/query/video_generation
    method: GET
    data_selector: status
    params:
      task_id: string
- name: get_file
  endpoint:
    path: /v1/files/retrieve
    method: GET
    data_selector: object
    params: {}
- name: user_self
  endpoint:
    path: /user/self
    method: GET
    data_selector: '{}'
    params: {}
- name: key_info
  endpoint:
    path: /api/token/key/{key}
    method: GET
    data_selector: object
    params:
      key: string
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: messages
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: messages
    params: {}
- name: 创建模型响应
  endpoint:
    path: /v1/responses
    method: POST
    data_selector: object
    params: {}
- name: responses
  endpoint:
    path: /v1/responses/{response_id}
    method: GET
    data_selector: object
    params:
      response_id: string
- name: delete_model_response
  endpoint:
    path: /{response_id}
    method: DELETE
    data_selector: object
    params:
      response_id: string
- name: cancel_model_response
  endpoint:
    path: /v1/responses/{response_id}/cancel
    method: POST
    data_selector: object
- name: audio_transcription
  endpoint:
    path: /v1/audio/transcriptions
    method: POST
    data_selector: text
    params: {}
- name: audio_translations
  endpoint:
    path: /v1/audio/translations
    method: POST
    data_selector: text
    params: {}
- name: text_to_audio
  endpoint:
    path: /v1/audio/speech
    method: POST
    data_selector: object
    params: {}
- name: 生成图像
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: 创建图像编辑
  endpoint:
    path: /v1/images/edits
    method: POST
    data_selector: object
    params: {}
- name: 创建图像变化
  endpoint:
    path: /v1/images/variations
    method: POST
    data_selector: object
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: moderations
  endpoint:
    path: /v1/moderations
    method: POST
    data_selector: '{}'
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /v1/messages
    method: POST
    data_selector: choices
    params: {}
- name: generate_music
  endpoint:
    path: /api-291882848
    method: POST
    data_selector: task_id
    params: {}
- name: merge_songs
  endpoint:
    path: /api-214019501
    method: POST
    data_selector: result
    params: {}
- name: 生成音乐
  endpoint:
    path: /生成音乐
    method: POST
    data_selector: response
    params: {}
- name: Cover 音乐
  endpoint:
    path: /Cover音乐
    method: POST
    data_selector: response
    params: {}
- name: 生成音乐
  endpoint:
    path: /api-291882848
    method: POST
    data_selector: clip_id
    params: {}
- name: 替换片段
  endpoint:
    path: /api-214019501
    method: POST
    data_selector: newid
    params: {}
- name: 确认拼接完整音乐
  endpoint:
    path: /api-195998379
    method: POST
    data_selector: clip_id
    params: {}
- name: 生成音乐
  endpoint:
    path: /api-291882848
    method: POST
- name: 新建 Persona
  endpoint:
    path: /api-291992193
    method: POST
- name: generate_music
  endpoint:
    path: /生成音乐
    method: POST
    data_selector: task
    params: {}
- name: stem_separation
  endpoint:
    path: /声曲分离
    method: POST
    data_selector: task
    params:
      task: gen_stem
      task_id: e3f492cb-27d9-41b6-aa1d-bdf7f3781a61
      generation_type: TEXT
      title: 安全之弦
      mv: chirp-auk
      make_instrumental: true
      continue_clip_id: 4720ad51-6d31-417c-a3a7-346b0b99abbc
      stem_type_id: 91
      stem_type_group_name: Two
      stem_task: two
- name: Timing
  endpoint:
    path: /api-292033285
    method: GET
- name: get_wav_file
  endpoint:
    path: /api-292034252
    method: GET
    data_selector: wav_file_url
    params: {}
- name: generate_mp4_mv_video
  endpoint:
    path: /api-293165351
    method: GET
    data_selector: mp4
- name: music_generation
  endpoint:
    path: /生成音乐
    method: POST
    data_selector: clip_id
    params: {}
- name: stem_separation
  endpoint:
    path: /全轨声曲分离
    method: POST
    data_selector: task
    params:
      task: gen_stem
      task_id: e3f492cb-27d9-41b6-aa1d-bdf7f3781a61
      generation_type: TEXT
      title: 安全之弦
      mv: chirp-auk
      make_instrumental: true
      continue_clip_id: 4720ad51-6d31-417c-a3a7-346b0b99abbc
      stem_type_id: 91
      stem_type_group_name: Twelve
      stem_task: twelve
- name: generate_music
  endpoint:
    path: /api-291882848
    method: POST
    data_selector: prompt
- name: upload_music
  endpoint:
    path: /api-214019496
    method: POST
    data_selector: clip_id
- name: query_songs
  endpoint:
    path: /api-292023480
    method: GET
    data_selector: metadata
    params: {}
- name: generate_music
  endpoint:
    path: /api-291882848
    method: POST
    data_selector: result
    params:
      task: underpainting
- name: upload_music
  endpoint:
    path: /api-214019496
    method: POST
    data_selector: clip_id
- name: batch_query_songs
  endpoint:
    path: /api-292023480
    method: GET
    data_selector: metadata.duration
- name: generate_music
  endpoint:
    path: /api-291882848
    method: POST
    data_selector: result
    params:
      task: overpainting
      overpainting_clip_id: upload_clip_id
      overpainting_end_s: duration
- name: 生成音乐
  endpoint:
    path: /suno/submit/music
    method: POST
    data_selector: data
    params: {}
- name: 上传音乐
  endpoint:
    path: /uploads/audio-url
    method: POST
    data_selector: data
    params: {}
- name: song_concat
  endpoint:
    path: /submit/concat
    method: POST
    data_selector: data
    params: {}
- name: create_persona
  endpoint:
    path: /suno/persona/create
    method: POST
    data_selector: body
- name: 声曲分离
  endpoint:
    path: /suno/submit/music
    method: POST
    data_selector: clips
    params: {}
- name: Timing:歌词、音频时间线
  endpoint:
    path: /suno/act/timing/{clip_id}
    method: GET
- name: 获取 wav 格式文件
  endpoint:
    path: /suno/act/wav/{clip_id}
    method: GET
    data_selector: wav_file_url
    params:
      clip_id: string
- name: mp4_video
  endpoint:
    path: /mp4/{clip_id}
    method: GET
    data_selector: mp4
    params: {}
- name: generate_lyrics
  endpoint:
    path: /suno/submit/lyrics
    method: POST
    data_selector: data
    params: {}
- name: fetch_single_task
  endpoint:
    path: /suno/fetch/{task_id}
    method: GET
    data_selector: data
    params: {}
- name: 批量查询任务
  endpoint:
    path: /fetch
    method: POST
    data_selector: data
    params: {}
- name: 批量查询歌曲
  endpoint:
    path: /suno/feed/{clip_id}
    method: GET
    data_selector: object
    params:
      clip_id: string
- name: generate_music
  endpoint:
    path: /udio/generate-proxy
    method: POST
    data_selector: gen_params
- name: songs
  endpoint:
    path: /api-229932213
    method: GET
    data_selector: songs
    params: {}
- name: query_task
  endpoint:
    path: /udio/query
    method: GET
    data_selector: task
    params:
      ids: 4f6532fa-ef6f-495b-a7fe-98b58453c9bc,632ac4b3-83e0-4e52-8d92-57268ffdf116
- name: submit_task
  endpoint:
    path: /api-163023979
    method: POST
- name: query_task
  endpoint:
    path: /api-163023989
    method: GET
- name: execute_action
  endpoint:
    path: /api-163023976
    method: POST
- name: upload_file
  endpoint:
    path: /api-163023982
    method: POST
- name: submit_imagine
  endpoint:
    path: /submit/imagine
    method: POST
- name: query_task
  endpoint:
    path: /query/task
    method: GET
- name: submit_action
  endpoint:
    path: /submit/action
    method: POST
- name: submit_modal
  endpoint:
    path: /submit/modal
    method: POST
- name: task_submission
  endpoint:
    path: /mj/submit/imagine
    method: POST
    data_selector: task
    params: {}
- name: task_status
  endpoint:
    path: /api-163023989
    method: GET
    data_selector: status
    params: {}
- name: submit_imagine_task
  endpoint:
    path: /mj/submit/imagine
    method: POST
    data_selector: properties
    params: {}
- name: blend_task
  endpoint:
    path: /mj/submit/blend
    method: POST
    data_selector: properties
    params: {}
- name: submit_action_task
  endpoint:
    path: /mj/submit/action
    method: POST
    data_selector: properties
    params: {}
- name: submit_modal
  endpoint:
    path: /submit/modal
    method: POST
    data_selector: properties
    params:
      taskId: 必需
- name: describe_task
  endpoint:
    path: /mj/submit/describe
    method: POST
    data_selector: properties
    params: {}
- name: video_submission
  endpoint:
    path: /mj/submit/video
    method: POST
    data_selector: '{}'
- name: submit_edits
  endpoint:
    path: /submit/edits
    method: POST
    data_selector: object
    params: {}
- name: submit_retexture
  endpoint:
    path: /mj/submit/retexture
    method: POST
    data_selector: result
- name: upload_discord_images
  endpoint:
    path: /upload-discord-images
    method: POST
- name: upload_file
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: files
    params: {}
- name: upload_file
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: attachments
    params: {}
- name: upload_file
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: upload_file
  endpoint:
    path: /upload
    method: POST
    data_selector: files
    params: {}
- name: upload_file
  endpoint:
    path: /v9/channels/{channel.id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_images
  endpoint:
    path: /upload-discord-images
    method: POST
    data_selector: result
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: data
- name: task
  endpoint:
    path: /mj/task/{id}/fetch
    method: GET
    data_selector: id
- name: task_query
  endpoint:
    path: /mj/task/list-by-condition
    method: POST
    data_selector: array of
    params: {}
- name: 获取任务图片的seed
  endpoint:
    path: /mj/task/{id}/image-seed
    method: GET
    data_selector: result
    params:
      id: string
- name: task
  endpoint:
    path: /mj/task/list-by-ids
    method: POST
    data_selector: array of
    params: {}
- name: task_list
  endpoint:
    path: /mj/task/list
    method: GET
    data_selector: array
    params: {}
- name: 任务查询
  endpoint:
    path: /mj/task/query
    method: POST
    data_selector: content
    params: {}
- name: task_queue
  endpoint:
    path: /mj/task/queue
    method: GET
    data_selector: array of
    params: {}
- name: cancel_task
  endpoint:
    path: /mj/task/{id}/cancel
    method: POST
- name: 生成图片
  endpoint:
    path: /flux/v1/{model}
    method: POST
    data_selector: object
    params: {}
- name: 查询任务
  endpoint:
    path: /flux/v1/get_result
    method: GET
    params:
      id: string
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: '{}'
    params: {}
- name: generate_image
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: create_model_response
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
    params: {}
- name: generate_image
  endpoint:
    path: /recraft/v1/images/generations
    method: POST
    data_selector: object
    params: {}
- name: vectorize_image
  endpoint:
    path: /recraft/v1/images/vectorize
    method: POST
    data_selector: object
    params: {}
- name: remove_background
  endpoint:
    path: /recraft/v1/images/removeBackground
    method: POST
    data_selector: image
    params: {}
- name: clarity_upscale
  endpoint:
    path: /recraft/v1/images/clarityUpscale
    method: POST
    data_selector: object
    params: {}
- name: generative_upscale
  endpoint:
    path: /generativeUpscale
    method: POST
    data_selector: object
    params: {}
- name: styles
  endpoint:
    path: /recraft/v1/styles
    method: POST
    data_selector: object
    params: {}
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: images_generations
  endpoint:
    path: /v1/images/generations
    method: POST
- name: Generate with Ideogram 3.0
  endpoint:
    path: /generate-v3
    method: POST
- name: Edit with Ideogram 3.0
  endpoint:
    path: /edit-v3
    method: POST
- name: Remix with Ideogram 3.0
  endpoint:
    path: /remix-v3
    method: POST
- name: Reframe with Ideogram 3.0
  endpoint:
    path: /reframe-v3
    method: POST
- name: Replace Background with Ideogram 3.0
  endpoint:
    path: /replace-background-v3
    method: POST
- name: Upscale
  endpoint:
    path: /upscale
    method: POST
- name: Describe
  endpoint:
    path: /describe
    method: POST
- name: Generate(legacy)
  endpoint:
    path: /generate-legacy
    method: POST
- name: Edit(legacy)
  endpoint:
    path: /edit-legacy
    method: POST
- name: Remix(legacy)
  endpoint:
    path: /remix-legacy
    method: POST
- name: generate
  endpoint:
    path: /ideogram/v1/ideogram-v3/generate
    method: POST
    data_selector: data
    params: {}
- name: edit
  endpoint:
    path: /ideogram-v3/edit
    method: POST
    data_selector: '{}'
- name: remix
  endpoint:
    path: /ideogram/v1/ideogram-v3/remix
    method: POST
    data_selector: object
    params: {}
- name: reframe
  endpoint:
    path: /ideogram-v3/reframe
    method: POST
- name: replace_background
  endpoint:
    path: /ideogram/v1/ideogram-v3/replace-background
    method: POST
    data_selector: object
    params: {}
- name: upscale
  endpoint:
    path: /ideogram/upscale
    method: POST
    data_selector: data
- name: generate_image
  endpoint:
    path: /ideogram/generate
    method: POST
    data_selector: data
    params: {}
- name: edit
  endpoint:
    path: /ideogram/edit
    method: POST
    data_selector: data
- name: remix
  endpoint:
    path: /ideogram/remix
    method: POST
    data_selector: data
    params: {}
- name: 生成视频
  endpoint:
    path: /api-238205153
    method: POST
- name: 高清视频
  endpoint:
    path: /api-337102309
    method: POST
- name: 添加音频
  endpoint:
    path: /api-337102319
    method: POST
- name: video-reframe
  endpoint:
    path: /api-337102321
    method: POST
- name: 生成图片
  endpoint:
    path: /api-337102333
    method: POST
- name: 单个查询任务
  endpoint:
    path: /api-238205156
    method: GET
- name: video_generation
  endpoint:
    path: /dream-machine/v1/generations/video
    method: POST
    data_selector: request
- name: upscale_video
  endpoint:
    path: /generations/{id}/upscale
    method: POST
    data_selector: assets
- name: add_audio
  endpoint:
    path: /{id}/audio
    method: POST
    data_selector: object
    params: {}
- name: video_reframe
  endpoint:
    path: /dream-machine/v1/generations/video/reframe
    method: POST
    data_selector: ''
    params: {}
- name: image_generation
  endpoint:
    path: /generations/image
    method: POST
    data_selector: object
    params: {}
- name: image_reframe
  endpoint:
    path: /dream-machine/v1/generations/image/reframe
    method: POST
    data_selector: '{}'
- name: single_query_task
  endpoint:
    path: /generations/{task_id}
    method: GET
    data_selector: response
    params: {}
- name: 生成视频
  endpoint:
    path: /luma/generations
    method: POST
    data_selector: prompt
    params: {}
- name: 视频生成
  endpoint:
    path: /luma/generations
    method: POST
    data_selector: 生成代码
- name: 生成视频
  endpoint:
    path: /luma/generations
    method: POST
    data_selector: response
    params: {}
- name: video2audio
  endpoint:
    path: /luma/generations/{task_id}/video2audio
    method: POST
    data_selector: response
    params:
      task_id: string
- name: download_video_url
  endpoint:
    path: /luma/generations/{task_id}/download_video_url
    method: GET
    params:
      task_id: string
- name: single_task_query
  endpoint:
    path: /generations/{task_id}
    method: GET
    data_selector: id
    params: {}
- name: tasks
  endpoint:
    path: /luma/tasks
    method: POST
    data_selector: data
    params:
      ids:
      - f4b6403a-f5f1-49b9-a6d2-6ce8c68cae0d
- name: image_to_video
  endpoint:
    path: /runwayml/v1/image_to_video
    method: POST
    data_selector: object
    params: {}
- name: tasks
  endpoint:
    path: /tasks/{id}
    method: GET
    data_selector: object
    params:
      id: string
- name: generate_video
  endpoint:
    path: /generate
    method: POST
    data_selector: task_id
    params:
      callback_url: http://baidu.com
      ratio: '16:9'
      prompt: 一只小猫
      style: cinematic
      model: gen3
      options:
        seconds: 10
- name: generate
  endpoint:
    path: /runway/pro/generate
    method: POST
    data_selector: object {0}
- name: video2video
  endpoint:
    path: /runway/pro/video2video
    method: POST
    data_selector: object
    params: {}
- name: act_one
  endpoint:
    path: /runway/pro/act_one
    method: POST
    data_selector: '{}'
- name: feed
  endpoint:
    path: /runway/feed
    method: POST
    data_selector: data
    params:
      task_id: string
- name: generate_text
  endpoint:
    path: /generate
    method: POST
- name: generate_reference_image
  endpoint:
    path: /generate
    method: POST
    data_selector: object
    params: {}
- name: generate_reference_video
  endpoint:
    path: /pika/pro/generate
    method: POST
    data_selector: object
    params: {}
- name: feed
  endpoint:
    path: /pika/feed
    method: POST
    data_selector: '{}'
- name: 生成图像
  endpoint:
    path: /kling/api-213097757
    method: POST
- name: 扩图
  endpoint:
    path: /kling/api-314398421
    method: POST
- name: 文生视频
  endpoint:
    path: /kling/api-213098360
    method: POST
- name: 图生视频
  endpoint:
    path: /kling/api-213098367
    method: POST
- name: 生成图像
  endpoint:
    path: /api-213097757
    method: POST
- name: 扩图
  endpoint:
    path: /api-314398421
    method: POST
- name: 文生视频
  endpoint:
    path: /api-213098360
    method: POST
- name: 图生视频
  endpoint:
    path: /api-213098367
    method: POST
- name: 查询任务（单个）
  endpoint:
    path: /api-213098466
    method: GET
- name: 初始化待编辑视频
  endpoint:
    path: /api-329121226
    method: POST
- name: 增加视频选区
  endpoint:
    path: /api-329302294
    method: POST
- name: 删减视频选区
  endpoint:
    path: /api-329302539
    method: POST
- name: 清除视频选区
  endpoint:
    path: /api-329302589
    method: POST
- name: 预览已选区视频
  endpoint:
    path: /api-329302602
    method: POST
- name: 创建任务
  endpoint:
    path: /api-329302620
    method: POST
- name: 生成图像
  endpoint:
    path: /api-213097757
    method: POST
- name: 扩图
  endpoint:
    path: /api-314398421
    method: POST
- name: 文生视频
  endpoint:
    path: /api-213098360
    method: POST
- name: 图生视频
  endpoint:
    path: /api-213098367
    method: POST
- name: init_selection
  endpoint:
    path: /init-selection
    method: POST
    data_selector: object
    params:
      video_id: string
      task_id: string
- name: add_selection
  endpoint:
    path: /multi-elements/add-selection
    method: POST
    data_selector: object
- name: delete_selection
  endpoint:
    path: /kling/v1/videos/multi-elements/delete-selection
    method: POST
    data_selector: '{}'
    params: {}
- name: clear_selection
  endpoint:
    path: /kling/v1/videos/multi-elements/clear-selection
    method: POST
    data_selector: object
    params:
      video_id: string
- name: 预览已选区视频
  endpoint:
    path: /multi-elements/preview-selection
    method: POST
    data_selector: object
    params: {}
- name: 创建任务
  endpoint:
    path: /kling/v1/videos/multi-elements
    method: POST
    data_selector: '{}'
- name: 生成图像
  endpoint:
    path: /kling/v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: expand_image
  endpoint:
    path: /kling/v1/images/editing/expand
    method: POST
    data_selector: object
    params: {}
- name: multi_image2image
  endpoint:
    path: /kling/v1/images/multi-image2image
    method: POST
    data_selector: data
- name: text2video
  endpoint:
    path: /kling/v1/videos/text2video
    method: POST
    data_selector: data
    params: {}
- name: image2video
  endpoint:
    path: /kling/v1/videos/image2video
    method: POST
    data_selector: data
    params: {}
- name: 多图参考生视频
  endpoint:
    path: /kling/v1/videos/multi-image2video
    method: POST
    data_selector: data
    params: {}
- name: 视频特效
  endpoint:
    path: /kling/v1/videos/effects
    method: POST
    data_selector: data
    params: {}
- name: video_extend
  endpoint:
    path: /videos/video-extend
    method: POST
    data_selector: data
    params:
      task_id: string
      video_id: string
      prompt: string
      callback_url: string
- name: lip_sync
  endpoint:
    path: /kling/v1/videos/lip-sync
    method: POST
    data_selector: input
    params: {}
- name: virtual_try_on
  endpoint:
    path: /kling/v1/images/kolors-virtual-try-on
    method: POST
    data_selector: object
    params: {}
- name: text_to_audio
  endpoint:
    path: /text-to-audio
    method: POST
    data_selector: '{}'
- name: video_to_audio
  endpoint:
    path: /audio/video-to-audio
    method: POST
    data_selector: '{}'
    params: {}
- name: 查询任务（单个）
  endpoint:
    path: /kling/v1/{action}/{action2}/{task_id}
    method: GET
    data_selector: data
    params: {}
- name: 创建任务
  endpoint:
    path: /predictions
    method: POST
    data_selector: object
    params: {}
- name: 查询任务
  endpoint:
    path: /predictions/{id}
    method: GET
    data_selector: object
    params: {}
- name: create_task
  endpoint:
    path: /models/{model}/predictions
    method: POST
    data_selector: object
    params: {}
- name: query_task
  endpoint:
    path: /predictions/{id}
    method: GET
    data_selector: object
    params: {}
- name: 查询任务
  endpoint:
    path: /predictions/{id}
    method: GET
    data_selector: object
    params: {}
- name: 图片生成
  endpoint:
    path: /api-301420300
    method: POST
- name: 视频生成
  endpoint:
    path: /api-237512852
    method: POST
- name: 查询任务
  endpoint:
    path: /api-237512855
    method: GET
- name: 文件下载
  endpoint:
    path: /api-237514175
    method: GET
- name: image_generation
  endpoint:
    path: /v1/image_generation
    method: POST
    data_selector: task_id
    params: {}
- name: video_generation
  endpoint:
    path: /v1/video_generation
    method: POST
    data_selector: task_id
    params: {}
- name: 查询任务
  endpoint:
    path: /v1/query/video_generation
    method: GET
    data_selector: status
    params:
      task_id: string
- name: file_download
  endpoint:
    path: /v1/files/retrieve
    method: GET
    params:
      file_id: string
      task_id: string
- name: 创建视频
  endpoint:
    path: /api/v3/contents/generations/tasks
    method: POST
    data_selector: object
    params: {}
- name: 查询视频状态
  endpoint:
    path: /api-302353375
    method: GET
    data_selector: object
    params: {}
- name: 查询视频状态
  endpoint:
    path: /contents/generations/tasks/{id}
    method: GET
    data_selector: id
    params: {}
- name: generate_task
  endpoint:
    path: /generate
    method: POST
    data_selector: object
    params: {}
- name: 查询任务
  endpoint:
    path: /pixverse/feed/{id}
    method: GET
- name: create_role
  endpoint:
    path: /viggle/asset/image
    method: POST
- name: upload_dance_video_template
  endpoint:
    path: /viggle/asset/video/{imageID}
    method: POST
- name: video_task
  endpoint:
    path: /viggle/video-task
    method: POST
    data_selector: data
    params: {}
- name: 获取任务结果
  endpoint:
    path: /viggle/video-task/by-ids
    method: POST
    data_selector: object
    params: {}
- name: 获取官方舞蹈视频TAG
  endpoint:
    path: /viggle/template2/tag
    method: GET
- name: 获取官方舞蹈视频TAG下的模板
  endpoint:
    path: /viggle/template2
    method: GET
    params:
      page: '1'
      pageSize: '48'
      searchKeyword: ''
      tagID: ''
      type: '0'
- name: text_to_speech
  endpoint:
    path: /v1/text-to-speech/{voice_id}
    method: POST
    data_selector: object
    params: {}
- name: speech-to-text
  endpoint:
    path: /v1/speech-to-text
    method: POST
    data_selector: object
    params: {}
- name: speech-to-speech
  endpoint:
    path: /v1/speech-to-speech/{voice_id}
    method: POST
    data_selector: error
    params: {}
- name: create_video
  endpoint:
    path: /video/create
    method: POST
    data_selector: id
    params: {}
- name: query_task
  endpoint:
    path: /video/query
    method: GET
    data_selector: id
    params: {}
- name: query_task
  endpoint:
    path: /video/query
    method: GET
    data_selector: records
    params:
      id: string
- name: 创建视频，带图片
  endpoint:
    path: /veo/v1/video/create
    method: POST
    data_selector: id
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: ''
notes:
- Authorization must be included in the header as 'Bearer {token}'
- Authorization header should contain token in the format 'Bearer <token>'
- Authorization header must include 'Bearer ' followed by the token.
- 在 Header 添加参数 Authorization，其值为在 Bearer 之后拼接 Token
- Authorization must be prefixed with Bearer token
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in discord
- Requires proper setup of OAuth2 credentials in Discord developer portal
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Requires OAuth2 authentication
- Authentication requires a valid OAuth2 token.
- Rate limits apply to API calls.
- Requires OAuth2 setup in the Discord developer portal
- Uses OAuth2 with refresh token - requires setup of connected app in api
- Requires a Discord application setup for OAuth2.
- Rate limits apply to API usage.
- Authorization header must contain 'Bearer ' followed by the token.
- Default value for Authorization header is '{{YOUR_API_KEY}}'.
- style_id and style parameters are mutually exclusive.
- Authorization header must include Bearer token.
- Authorization header should include 'Bearer' followed by the token.
- Authorization header value should be prefixed with 'Bearer ' followed by the token.
- An image binary; only JPEG, WEBPs and PNGs are supported at this time
- 'Authorization: Bearer <Token>'
- Authorization header requires Bearer token
- Webhook callback URL is required to receive video generation status updates.
- Authorization header must include 'Bearer ' followed by the token
- 流设置将发送部分消息增量，就像在 ChatGPT 中一样
- 在 Header 添加 Authorization 参数，其值为在 Bearer 之后拼接 Token
- 要转录的音频文件，采用以下格式之一：mp3、mp4、mpeg、mpga、m4a、wav 或 webm
- 当前可用的模型 ID 为 whisper-1
- 将音频翻译成英文
- Token需要添加在Authorization header中
- 生成表示输入文本的嵌入向量
- Authorization is required as a Bearer token.
- 如果返回体 wav_file_url 为 null 多获取几次
- '新增高价参数: weirdness_constraint, style_weight, audio_weight'
- Upload a clean vocal song and let suno provide the music.
- The task is underpainting and the underpainting_clip_id must be the upload_clip_id.
- Authorization header requires Bearer Token
- The Authorization header requires a Bearer token.
- 'Mj has three speeds: RELAX, FAST, TURBO. You can specify the speed when generating
  tasks.'
- Requires OAuth2 setup for file uploads
- File size limits apply as per Discord API guidelines
- File uploads require appropriate permissions.
- Rate limits apply for file uploads.
- Uses OAuth2 with refresh token — requires setup of application in Discord
- Uses OAuth2 with refresh token.
- Requires OAuth2 with authorization code flow.
- OAuth2 requires setup of an application in the Discord Developer Portal
- Uses OAuth2 with refresh token – requires setup of connected app in discord
- Requires a valid bot token to upload files.
- Files must be under 8MB in size.
- Discord API requires a bot token for certain actions.
- Rate limits are applied per endpoint.
- Authorization requires Bearer token in the header.
- Authorization value should be in the format 'Bearer <token>'
- Returns the image URL that is valid for 24 hours.
- 该接口仅支持1.0和2.0模型
- 图像二进制；目前仅支持 JPEG、WEBP 和 PNG 格式
- 建议查看官方文档，已兼容官方所有格式
- Authorization value must be prefixed with Bearer.
- keyframes参数可指定视频的首尾帧，首尾帧可使用图片、视频
- 文生视频支持指定duration参数5s/10s
- 必须传入原任务ID
- 可选传入prompt
- 推荐gen-3,图生视频支持极速生成
- 目前GEN-3仅支持16:9和9:16画面的视频
- 当前仅支持16:9的视频和图片
- 'Authorization must be included in the header as ''Authorization: Bearer <token>'''
- 请查看官方文档！
- Authorization在Header添加参数，其值为在Bearer之后拼接Token
- Authorization header should be prefixed with 'Bearer ' followed by the Token.
- API端无裁剪逻辑，请直接上传已选主体后的图片。
- 支持传入图片Base64编码或图片URL（确保可访问）。
- 请注意，若您使用base64的方式，请确保您传递的所有图像数据参数均采用Base64编码格式。
- Authorization header should include token prefixed with 'Bearer '
- Authorization should be in the form 'Bearer Token'
- Region 和 Service 是可选参数
- Authorization header must be prefixed with 'Bearer ' followed by the token.
- Authorization header requires 'Bearer' followed by the token
errors:
- '200 OK: Successful request'
- '401 Unauthorized: Invalid token or missing authorization'
- '200: Create image'
- '400: Bad request, check the prompt and parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: 请求格式错误或不能被服务器理解。通常意味着客户端错误。'
- '401 Unauthorized: API密钥验证未通过。你需要验证你的API密钥是否正确，其他原因还包括令牌过期。'
- '403 Forbidden: 一般是权限不足。'
- '404 Not Found: 请求的资源未找到。你可能正在尝试访问一个不存在的端点。'
- '413 Request Entity Too Large: 请求体太大。你可能需要减小你的请求体容量。'
- '429 Too Many Requests: 由于频繁的请求超过限制，你已经超过了你的速率限制。'
- '500 Internal Server Error: 服务器内部的错误。这可能是OpenAI服务器的问题，不是你的问题。'
- '503 Service Unavailable: 服务器暂时不可用。这可能是由于OpenAI正在进行维护或者服务器过载。'
- '200: success'
- '200: Success'
- '401: Unauthorized'
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- '401 Unauthorized: Check your token and permissions'
- '401 Unauthorized: Invalid token.'
- '404 Not Found: The specified resource could not be found.'
- '403 Forbidden: Ensure you have the right scopes'
- '404 Not Found: Check the endpoint path'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Resource not found.'
- '400: Error if called before task completion'
- '400: Bad Request'
- 'code400: Bad request'
- 'code: integer, error code; specific definition of error code'
- 'message: string, error message'
- 'request_id: string, request ID, generated by the system, used for tracking requests
  and troubleshooting'
- 'code: integer, message: string'
- '404: 记录不存在'
- '200: 成功'
- '200 OK: Successful response'
- clip_id 需要系统内存在的,非 uploader
- 不能跨账号 所以可能账号下线用不了
- '401 Unauthorized: Recheck API key'
- '403 Forbidden: Access denied'
- '404 Not Found: Endpoint does not exist'
- '200: Submit Success'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify OAuth token'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check your parameters.'
- '401 Unauthorized: Recheck OAuth token.'
- '403 Forbidden: Missing permissions.'
- '401 Unauthorized: Invalid token provided.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Check OAuth2 token validity'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '400 Bad Request: Check the parameters and file size.'
- '401 Unauthorized: Ensure the bot token is valid.'
- '403 Forbidden: Verify permissions to upload files in the channel.'
- '401 Unauthorized: Verify token and permissions.'
- '404 Not Found: Endpoint or resource does not exist.'
- '200成功: 正常响应'
- '400: Call this endpoint after the video task status returns completed'
- '200: Successful'
- 200成功
- '200成功: 成功返回'
- '400: 错误信息'
- '404: Not Found'
- 'code: Error code; specific definition of error code'
- 错误码；具体定义错误码
- 'code: integer, message: string, request_id: string, data: object'
auth_info:
  mentioned_objects:
  - Authorization
  - OAuth2Application
  - OAuth2Scope
client:
  base_url: https://discord.com/api
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://discord.com/api/oauth2/token
    client_id: '{{ dlt.secrets[''discord_client_id''] }}'
    client_secret: '{{ dlt.secrets[''discord_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''discord_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
