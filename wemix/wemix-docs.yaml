resources:
- name: Consensus
  endpoint:
    path: /en/design/consensus
    method: GET
- name: Authority
  endpoint:
    path: /en/design/consensus#authority
    method: GET
- name: Miner Selection
  endpoint:
    path: /en/design/consensus#miner-selection
    method: GET
- name: Reward Distribution
  endpoint:
    path: /en/design/consensus#reward-distribution
    method: GET
- name: Block Generation
  endpoint:
    path: /en/design/consensus#block-generation
    method: GET
- name: Block Verification
  endpoint:
    path: /en/design/consensus#block-verification
    method: GET
- name: PoET
  endpoint:
    path: /api/poet
    method: GET
    data_selector: data
    params: {}
- name: Fee Delegation Transaction
  endpoint:
    path: /api/fee-delegation/transaction
    method: POST
    data_selector: transaction
    params: {}
- name: account
  endpoint:
    path: /en/quick-start/account
    method: GET
- name: Testnet Faucet
  endpoint:
    path: /faucet
    method: POST
    data_selector: transaction
    params: {}
- name: Account
  endpoint:
    path: /en/quick-start/account
    method: GET
- name: faucet
  endpoint:
    path: /faucet
    method: POST
    data_selector: transaction
    params:
      tWEMIX: 10
      tWEMIX$: 100
- name: gwemix_start
  endpoint:
    path: /bin/gwemix.sh/start
    method: POST
- name: gwemix_stop
  endpoint:
    path: /bin/gwemix.sh/stop
    method: POST
- name: gwemix_restart
  endpoint:
    path: /bin/gwemix.sh/restart
    method: POST
- name: gwemix_wipe
  endpoint:
    path: /bin/gwemix.sh/wipe
    method: POST
- name: gwemix_console
  endpoint:
    path: /bin/gwemix.sh/console
    method: POST
- name: gwemix_log
  endpoint:
    path: /logs/log
    method: GET
- name: gwemix_v0.10.0
  endpoint:
    path: https://github.com/wemixarchive/go-wemix/releases/tag/w0.10.0
    method: GET
- name: gwemix_v0.10.1
  endpoint:
    path: https://github.com/wemixarchive/go-wemix/releases/tag/w0.10.1
    method: GET
- name: gwemix_v0.10.2
  endpoint:
    path: https://github.com/wemixarchive/go-wemix/releases/tag/w0.10.2
    method: GET
- name: gwemix_v0.10.3
  endpoint:
    path: https://github.com/wemixarchive/go-wemix/releases/tag/w0.10.3
    method: GET
- name: gwemix_v0.10.4
  endpoint:
    path: https://github.com/wemixarchive/go-wemix/releases/tag/w0.10.4
    method: GET
- name: gwemix_v0.10.5
  endpoint:
    path: https://github.com/wemixarchive/go-wemix/releases/tag/w0.10.5
    method: GET
- name: Mainnet
  endpoint:
    path: https://packages.wemix.com/
    method: GET
- name: Testnet
  endpoint:
    path: https://packages.test.wemix.com/
    method: GET
- name: WEMIX_Testnet
  endpoint:
    path: /
    method: GET
    data_selector: testnet
    params: {}
- name: WEMIX_Mainnet
  endpoint:
    path: /
    method: GET
    data_selector: mainnet
    params: {}
- name: test_assets
  endpoint:
    path: /testnet/faucet
    method: POST
    data_selector: request
    params: {}
- name: check_erc20_token
  endpoint:
    path: /en/tutorial/erc-20-token/check-erc-20-token-api
    method: GET
    data_selector: records
- name: check_erc721_token_api
  endpoint:
    path: /en/tutorial/erc-721-token/check-erc-721-token-api
    method: GET
    data_selector: records
- name: write_erc721_contract
  endpoint:
    path: /en/tutorial/erc-721-token/write-erc-721-contract
    method: GET
    data_selector: records
- name: minting_erc721_token
  endpoint:
    path: /en/tutorial/erc-721-token/minting-erc-721-token
    method: GET
    data_selector: records
- name: burn_erc721_token
  endpoint:
    path: /en/tutorial/erc-721-token/burn-erc-721-token
    method: GET
    data_selector: records
- name: WEMIX_Testnet
  endpoint:
    path: /
    method: GET
    data_selector: network_info
    params: {}
- name: WEMIX_Mainnet
  endpoint:
    path: /
    method: GET
    data_selector: network_info
    params: {}
- name: test_asset
  endpoint:
    path: /faucet
    method: POST
    data_selector: assets
    params: {}
- name: Fee Delegation
  endpoint:
    path: /use-fee-delegation
    method: GET
    data_selector: transaction_info
    params: {}
- name: Check ERC-20 Token
  endpoint:
    path: /en/tutorial/erc-20-token/check-erc-20-token
    method: GET
- name: Send ERC-20 Token
  endpoint:
    path: /en/tutorial/erc-20-token/send-erc-20-token
    method: GET
- name: Check ERC-20 Token API
  endpoint:
    path: /en/tutorial/erc-20-token/check-erc-20-token-api
    method: GET
- name: Burn ERC-20 Token
  endpoint:
    path: /en/tutorial/erc-20-token/burn-erc-20-token
    method: GET
- name: personal_signTransaction
  endpoint:
    path: /personal_signTransaction
    method: POST
    data_selector: result
    params:
      from: '0xc3e44aac2d0457942baffa1dc3be313bc8d65627'
      to: '0xdb8408bb47bf5e745fed00fc2c99e2f4e1a9270f'
      nonce: '0x1c'
      value: '0xDE0B6B3A7640000'
      maxPriorityFeePerGas: '0x174876E801'
      maxFeePerGas: '0x174876E801'
      gas: '0x5208'
- name: personal_signRawFeeDelegateTransaction
  endpoint:
    path: /personal_signRawFeeDelegateTransaction
    method: POST
    data_selector: result
    params:
      feePayer: '0xdb8408bb47bf5e745fed00fc2c99e2f4e1a9270f'
- name: eth_sendRawTransaction
  endpoint:
    path: /eth_sendRawTransaction
    method: POST
    data_selector: result
- name: transaction_history
  endpoint:
    path: /transaction/history
    method: GET
- name: block_information
  endpoint:
    path: /block/info
    method: GET
- name: token_information
  endpoint:
    path: /token/info
    method: GET
- name: nft_information
  endpoint:
    path: /nft/info
    method: GET
- name: wemix_balance
  endpoint:
    path: /balance
    method: GET
- name: check_erc721_token_api
  endpoint:
    path: /en/tutorial/erc-721-token/check-erc-721-token-api
    method: GET
- name: minting_erc721
  endpoint:
    path: /en/tutorial/erc-721-token/minting-erc-721-token
    method: GET
- name: burn_erc721_token
  endpoint:
    path: /en/tutorial/erc-721-token/burn-erc-721-token
    method: GET
- name: write_erc721_contract
  endpoint:
    path: /en/tutorial/erc-721-token/write-erc-721-contract
    method: GET
- name: transaction_details
  endpoint:
    path: /transaction/details
    method: GET
    data_selector: message_signatures
- name: personal_signTransaction
  endpoint:
    path: /personal_signTransaction
    method: POST
    data_selector: result
    params: {}
- name: personal_signRawFeeDelegateTransaction
  endpoint:
    path: /personal_signRawFeeDelegateTransaction
    method: POST
    data_selector: result
    params: {}
- name: eth_sendRawTransaction
  endpoint:
    path: /eth_sendRawTransaction
    method: POST
    data_selector: result
    params: {}
- name: view_token_list
  endpoint:
    path: /view/token/list
    method: GET
    data_selector: message_signatures
- name: view_token_transfers
  endpoint:
    path: /view/token/transfers
    method: GET
    data_selector: message_signatures
- name: view_nft_list
  endpoint:
    path: /view/nft/list
    method: GET
    data_selector: message_signatures
- name: view_nft_transfers
  endpoint:
    path: /view/nft/transfers
    method: GET
    data_selector: message_signatures
- name: lookup_address
  endpoint:
    path: /lookup/address
    method: GET
    data_selector: message_signatures
- name: view_addresses
  endpoint:
    path: /view/addresses
    method: GET
    data_selector: message_signatures
- name: address_details
  endpoint:
    path: /address/details
    method: GET
    data_selector: message_signatures
- name: view_contract_internal_transactions
  endpoint:
    path: /view/contract/internal/transactions
    method: GET
    data_selector: message_signatures
- name: view_message_signatures
  endpoint:
    path: /view/message/signatures
    method: GET
    data_selector: message_signatures
- name: verify_message_signatures
  endpoint:
    path: /verify/message/signatures
    method: POST
    data_selector: token_information
- name: update_token_information
  endpoint:
    path: /update/token/information
    method: POST
    data_selector: token_information
- name: verify_contract_code
  endpoint:
    path: /verify/contract/code
    method: POST
    data_selector: token_information
- name: verify_address
  endpoint:
    path: /verify/address
    method: POST
    data_selector: address_verification
- name: transaction_history
  endpoint:
    path: /transaction/history
    method: GET
    data_selector: transactions
- name: block_info
  endpoint:
    path: /block/info
    method: GET
    data_selector: block
- name: token_info
  endpoint:
    path: /token/info
    method: GET
    data_selector: tokens
- name: nft_info
  endpoint:
    path: /nft/info
    method: GET
    data_selector: nfts
- name: balance
  endpoint:
    path: /balance
    method: GET
    data_selector: balance
- name: transaction_details
  endpoint:
    path: /transaction/details
    method: GET
- name: test_wemix
  endpoint:
    path: /en/quick-start/testnet-faucet
    method: GET
- name: view_token_list
  endpoint:
    path: /token/list
    method: GET
    data_selector: signatures
- name: view_token_transfers
  endpoint:
    path: /token/transfers
    method: GET
    data_selector: signatures
- name: view_nft_list
  endpoint:
    path: /nft/list
    method: GET
    data_selector: signatures
- name: view_nft_transfers
  endpoint:
    path: /nft/transfers
    method: GET
    data_selector: signatures
- name: lookup_for_address
  endpoint:
    path: /address/lookup
    method: GET
    data_selector: signatures
- name: view_addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: signatures
- name: address_details
  endpoint:
    path: /address/details
    method: GET
    data_selector: signatures
- name: view_contract_internal_transactions
  endpoint:
    path: /contract/internal_transactions
    method: GET
    data_selector: signatures
- name: view_message_signatures
  endpoint:
    path: /message/signatures
    method: GET
    data_selector: signatures
- name: verify_message_signatures
  endpoint:
    path: /message/verify
    method: POST
    data_selector: signatures
- name: verify_address
  endpoint:
    path: /address/verify
    method: POST
    data_selector: verification
- name: update_token_information
  endpoint:
    path: /token/update
    method: POST
    data_selector: update
- name: verify_contract_code
  endpoint:
    path: /contract/verify
    method: POST
    data_selector: verification
- name: Consensus
  endpoint:
    path: /consensus
    method: GET
    data_selector: data
    params: {}
- name: App Wallet
  endpoint:
    path: /app-wallet
    method: GET
    data_selector: features
- name: Web Wallet
  endpoint:
    path: /web-wallet
    method: GET
    data_selector: features
- name: block_generation
  endpoint:
    path: /block/generation
    method: GET
    data_selector: records
- name: miner_selection
  endpoint:
    path: /miner/selection
    method: GET
    data_selector: records
- name: reward_distribution
  endpoint:
    path: /reward/distribution
    method: GET
    data_selector: records
- name: gwemix
  endpoint:
    path: /gwemix
    method: POST
    data_selector: result
- name: account_creation
  endpoint:
    path: /quick-start/account
    method: POST
- name: account_import
  endpoint:
    path: /quick-start/account/import-account
    method: POST
- name: account_balance_check
  endpoint:
    path: /quick-start/account/check-account-balance
    method: GET
- name: testnet_faucet
  endpoint:
    path: /faucet
    method: POST
    data_selector: result
- name: Fee Delegation Transaction
  endpoint:
    path: /ko/design/fee-delegation
    method: GET
    data_selector: transactions
    params: {}
- name: mainnet_chain_data
  endpoint:
    path: /
    method: GET
- name: testnet_chain_data
  endpoint:
    path: /
    method: GET
- name: account_creation
  endpoint:
    path: /ko/quick-start/account
    method: GET
    data_selector: account_creation
- name: account_import
  endpoint:
    path: /ko/quick-start/account
    method: GET
    data_selector: account_import
- name: account_balance_check
  endpoint:
    path: /ko/quick-start/account
    method: GET
    data_selector: account_balance_check
- name: testnet_faucet
  endpoint:
    path: /faucet
    method: POST
    data_selector: data
    params:
      amount: 10 tWEMIX
      amount_stablecoin: 100 WEMIX$
- name: WEMIX_Testnet
  endpoint:
    path: /
    method: GET
- name: WEMIX_Mainnet
  endpoint:
    path: /
    method: GET
- name: mainnet_chain_data
  endpoint:
    path: https://packages.wemix.com/
    method: GET
- name: testnet_chain_data
  endpoint:
    path: https://packages.test.wemix.com/
    method: GET
- name: Testnet Faucet
  endpoint:
    path: /faucet
    method: GET
- name: Token Info
  endpoint:
    path: /token-info
    method: GET
    data_selector: token_info
    params:
      contract_address: '0xAe81b9fFCde5Ab7673dD4B2f5c648a5579430B17'
      symbol: WEMIX$
      decimals: 18
- name: Smart Contract
  endpoint:
    path: /ko/dapp-developer/smart-contract
    method: GET
- name: gwemix_start
  endpoint:
    path: /start
    method: POST
    data_selector: start_command
    params: {}
- name: gwemix_stop
  endpoint:
    path: /stop
    method: POST
    data_selector: stop_command
    params: {}
- name: gwemix_restart
  endpoint:
    path: /restart
    method: POST
    data_selector: restart_command
    params: {}
- name: gwemix_wipe
  endpoint:
    path: /wipe
    method: POST
    data_selector: wipe_command
    params: {}
- name: gwemix_console
  endpoint:
    path: /console
    method: POST
    data_selector: console_command
    params: {}
- name: gwemix_logs
  endpoint:
    path: /logs
    method: GET
    data_selector: log_file
    params: {}
- name: ERC-20 Contract
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-contract
    method: GET
- name: ERC-20 Token 확인하기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token
    method: GET
- name: ERC-20 Token 보내기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token-1
    method: GET
- name: ERC-20 Token API 조회하기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token-api
    method: GET
- name: ERC-20 Token 소각하기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token-2
    method: GET
- name: erc721_contract
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-contract
    method: GET
    data_selector: records
- name: erc721_minting
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-minting
    method: GET
    data_selector: records
- name: erc721_token_api
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-token-api
    method: GET
    data_selector: records
- name: erc721_token_burn
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-token
    method: GET
    data_selector: records
- name: ERC-20 Token
  endpoint:
    path: /ko/tutorial/erc-20-token
    method: GET
    data_selector: records
    params: {}
- name: ERC-721 Token
  endpoint:
    path: /ko/tutorial/erc-721-token
    method: GET
    data_selector: records
    params: {}
- name: Fee Delegation Transaction
  endpoint:
    path: /fee-delegation
    method: POST
    data_selector: transaction
    params: {}
- name: personal_signTransaction
  endpoint:
    path: /personal_signTransaction
    method: POST
    data_selector: result.raw
    params: {}
- name: personal_signRawFeeDelegateTransaction
  endpoint:
    path: /personal_signRawFeeDelegateTransaction
    method: POST
    data_selector: result.raw
    params: {}
- name: eth_sendRawTransaction
  endpoint:
    path: /eth_sendRawTransaction
    method: POST
    data_selector: result
    params: {}
- name: WEMIX_Testnet
  endpoint:
    path: /
    method: GET
    data_selector: network
    params:
      Network Name: WEMIX_Testnet
      New RPC URL: https://api.test.wemix.com/
      ChainID: 1112
      Symbol: TWEMIX
      Block Explorer URL: https://explorer.test.wemix.com/
- name: WEMIX_Mainnet
  endpoint:
    path: /
    method: GET
    data_selector: network
    params:
      Network Name: WEMIX_Mainnet
      New RPC URL: https://api.wemix.com/
      ChainID: 1111
      Symbol: WEMIX
      Block Explorer URL: https://explorer.wemix.com/
- name: Testnet Faucet
  endpoint:
    path: /faucet
    method: GET
    data_selector: data
    params: {}
- name: Token Details
  endpoint:
    path: /token
    method: GET
    data_selector: token
    params:
      contract_address: '0xAe81b9fFCde5Ab7673dD4B2f5c648a5579430B17'
      symbol: WEMIX$
      decimals: 18
- name: ERC-20 Contract 만들기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-contract
    method: GET
- name: ERC-20 Token 확인하기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token
    method: GET
- name: ERC-20 Token 보내기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token-1
    method: GET
- name: ERC-20 Token API 조회하기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token-api
    method: GET
- name: ERC-20 Token 소각하기
  endpoint:
    path: /ko/tutorial/erc-20-token/erc-20-token-2
    method: GET
- name: erc721_contract
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-contract
    method: GET
- name: erc721_minting
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-minting
    method: GET
- name: erc721_token_api
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-token-api
    method: GET
- name: erc721_token_burn
  endpoint:
    path: /ko/tutorial/erc-721-token/erc-721-token
    method: GET
- name: addresses
  endpoint:
    path: /api/v1/addresses
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: records
- name: token_list
  endpoint:
    path: /api/v1/tokens
    method: GET
    data_selector: records
- name: token_transfers
  endpoint:
    path: /api/v1/token_transfers
    method: GET
    data_selector: records
- name: nft_list
  endpoint:
    path: /api/v1/nfts
    method: GET
    data_selector: records
- name: nft_transfers
  endpoint:
    path: /api/v1/nft_transfers
    method: GET
    data_selector: records
- name: personal_signTransaction
  endpoint:
    path: /personal_signTransaction
    method: POST
    data_selector: result.raw
    params:
      from: '0xc3e44aac2d0457942baffa1dc3be313bc8d65627'
      to: '0xdb8408bb47bf5e745fed00fc2c99e2f4e1a9270f'
      nonce: '0x1c'
      value: '0xDE0B6B3A7640000'
      maxPriorityFeePerGas: '0x174876E801'
      maxFeePerGas: '0x174876E801'
      gas: '0x5208'
- name: personal_signRawFeeDelegateTransaction
  endpoint:
    path: /personal_signRawFeeDelegateTransaction
    method: POST
    data_selector: result.raw
    params:
      feePayer: '0xdb8408bb47bf5e745fed00fc2c99e2f4e1a9270f'
- name: eth_sendRawTransaction
  endpoint:
    path: /eth_sendRawTransaction
    method: POST
    data_selector: result
    params: {}
- name: block
  endpoint:
    path: /api/v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: Wonder Staking
  endpoint:
    path: /wemixstake-en/services/wonder-staking
    method: GET
    data_selector: staking_data
- name: Selecting a WONDER
  endpoint:
    path: /wemixstake-en/guides/selecting-a-wonder
    method: GET
    data_selector: wonder_selection_data
- name: View addresses
  endpoint:
    path: /api/view_addresses
    method: GET
    data_selector: messages
- name: View transactions
  endpoint:
    path: /api/view_transactions
    method: GET
    data_selector: messages
- name: Transaction details
  endpoint:
    path: /api/transaction_details
    method: GET
    data_selector: messages
- name: View Token list
  endpoint:
    path: /api/view_token_list
    method: GET
    data_selector: messages
- name: View Token transfers
  endpoint:
    path: /api/view_token_transfers
    method: GET
    data_selector: messages
- name: View NFT list
  endpoint:
    path: /api/view_nft_list
    method: GET
    data_selector: messages
- name: View NFT transfers
  endpoint:
    path: /api/view_nft_transfers
    method: GET
    data_selector: messages
- name: Lookup for address
  endpoint:
    path: /api/lookup_address
    method: GET
    data_selector: messages
- name: View message signatures
  endpoint:
    path: /api/view-message-signatures
    method: GET
    data_selector: message_signatures
- name: Update token information
  endpoint:
    path: /api/update-token-info
    method: POST
    data_selector: token_info
- name: Verify Address
  endpoint:
    path: /api/verify-address
    method: POST
    data_selector: verification_result
- name: App Wallet
  endpoint:
    path: /wallet/app
    method: GET
- name: Web Wallet
  endpoint:
    path: /wallet/web
    method: GET
- name: testnet_faucet
  endpoint:
    path: /faucet
    method: GET
    data_selector: data
    params: {}
- name: staking
  endpoint:
    path: /wemixstake-ko/services/wonder-staking
    method: GET
    data_selector: records
- name: WONDER Staking
  endpoint:
    path: /wemixstake-en/services/wonder-staking
    method: GET
- name: offering
  endpoint:
    path: /nile-en/marketplace/offering
    method: GET
- name: trading
  endpoint:
    path: /marketplace/trading
    method: GET
- name: staking
  endpoint:
    path: /wemixstake-ko/services/wonder-staking
    method: GET
    data_selector: records
- name: Portfolio
  endpoint:
    path: /wemixstake-ko/guides/portfolio
    method: GET
notes:
- The provided API types include Account API, Block API, Contract API, Transaction
  API, Event logs API, Tokens API.
- The WEMIX Developer APIs are provided as a community service and without warranty.
- WEMIX3.0 Library provides a transparent record keeping service.
- Accurate documentation is important for the community.
- The governance contract determines the interval between block creation of the WEMIX
  Blockchain.
- Block creation interval is a variable that can be changed by permission voting.
- If you delete the Authority member and then proceed with adding the same node again,
  you must delete the {data_directory}/etcd directory and restart gwemix.
- WEMIX is based on the ERC-20 standard (Ethereum Request for Comment-20), ensuring
  transferability and compatibility via bridging to other EVM chains.
- WEMIX3.0 uses SPoA, a consensus algorithm capable of high-capacity, high-speed processing.
- The maximum value of BaseFee is adjustable through Governance.
- PoET Program will be terminated on April 19, 2024.
- Fee Delegation Transaction only supports DynamicFeeTxType among existing Transaction
  and does not support LegacyTxType or AccessListTxType.
- Fee Delegation Transaction pays fees according to the fee settings of DynamicFeeTxType
  Transaction generated by the Sender.
- Set up as above and run gwemix, gwemix will run with the following run line options.
- 1 for enable discovery mode, 0 for disable discovery mode
- Democratized governance is completed at this stage, and the mainnet will be upgraded
  to WEMIX4.0. The schedule is yet to be determined.
- 1 for Testnet or remove this line for Mainnet
- Chaindata of WEMIX3.0 mainnet and testnet can be downloaded p2p by running gwemix
  client.
- The contents included in this chapter are for users who directly install WEMIX3.0
  blockchain end node and need to read and write data directly to the blockchain through
  the JSON-RPC API method.
- Up to 6 log files are saved, and this number can be changed in gwemix.sh.
- The log level is divided from 1 to 5 and the default is 3.
- All chaindata will be removed by this operation.
- Request may be denied if you already have a sufficient amount of test assets.
- Once deployed contracts cannot be modified or deleted.
- Users who have previously created a wallet using MetaMask can recover their wallet
  by selecting 'Import Wallet' and using the Secret Recovery Phase that they have
  backed up.
- 'If you do not see the assets, you can add the token by entering the token contract
  address: 0xAe81b9fFCde5Ab7673dD4B2f5c648a5579430B17'
- Fee Delegation Transaction only supports the DynamicFeeTxType among the existing
  transactions signed by the Sender and does not support LegacyTxType or AccessListTxType.
- You must prepare available wallet address and private key, and deposit corresponding
  amount of WEMIX in advance.
- Requires setup of available wallet address and private key.
- Must deposit corresponding amount of WEMIX in advance.
- Requires Metamask for address verification.
- WEMIX 블록체인은 고성능 실시간 서비스를 지향하는 퍼블릭 블록체인으로 블록 생성은 사전에 허가받은 Authority Member들에 의해서만
  가능합니다.
- 블록생성 간격은 Authority의 투표에 의해 변경 가능한 변수값입니다.
- Authority member 삭제후 다시 같은 노드의 추가를 진행할 경우, {data_directory}/etcd 디렉토리를 삭제한 후 gwemix를
  restart시켜야 합니다.
- WEMIX received through Testnet Faucet cannot be used in WEMIX3.0 Mainnet.
- WEMIX that can be used in WEMIX3.0 Mainnet needs to be bought in the crypto exchange.
- Fee Delegation Transaction은 기존 Transaction 중 DynamicFeeTxType만 지원하며 LegacyTxType이나
  AccessListTxType은 지원하지 않습니다.
- FeePayer는 반드시 Transaction의 수수료가 적정한지 검증하는 절차를 가져야 합니다.
- FeePayer가 서명한 Fee Delegation Transaction은 sender의 nonce에 따라 즉시 사용되지 않을 수 있으므로, 사용자가
  요청한 Transaction의 nonce가 현재 sender의 nonce보다 차이가 큰 경우에 대해서 주의해야 할 필요가 있습니다.
- WEMIX 클라이언트는 각 블록의 모든 트랜잭션을 검증하여 네트워크 데이터를 안전하고 정확하게 유지하는 WEMIX3.0의 구현체입니다.
- 엔드 노드 네트워크(ENN)은 직접 브릿지 노드 네트워크(BNN)에 연결된 주변 네트워크로 볼 수 있습니다.
- Anyone can use the Open API RPC server for free 24 hours to access the WEMIX blockchain.
- Uses RPC to connect to a local gwemix instance
- Testnet Faucet provides tWEMIX and tWEMIX$ for development and testing purposes
  only.
- PoET 프로그램은 2023년 9월 1일부터 시행되었습니다.
- PoET 프로그램은 2024년 4월 19일부로 종료하게 되었습니다.
- 로그 파일은 최대 6개까지 저장
- 해당 명령을 실행하면 모든 chaindata가 삭제되므로 주의하여 사용해야합니다.
- Create a .rc file in {data_folder} to pre-configure node execution options.
- API는 커뮤니티 서비스로서 보증 없이 제공됩니다.
- GET/POST 요청과 분당 120개의 요청 속도 제한을 지원합니다.
- 'WEMIX3.0 테스트넷의 매개 변수: New RPC URL: https://api.test.wemix.com/, ChainID: 1112,
  Symbol: TWEMIX, Block Explorer URL: https://explorer.test.wemix.com/'
- 'WEMIX3.0 메인넷의 매개 변수: New RPC URL: https://api.wemix.com/, ChainID: 1111, Symbol:
  WEMIX, Block Explorer URL: https://explorer.wemix.com/'
- Log file size is automatically set to 10MB and can save up to 6 logs.
- API services are provided as a community service without warranty.
- For commercial applications, a link back or mention is required.
- 한번 배포된 컨트랙트는 수정 및 삭제가 불가능합니다.
- 모든 예제는 WEMIX3.0 테스트넷을 기반으로 합니다.
- Fee Delegation Transaction은 Sender가 실행하고 싶은 Transaction의 수수료를 FeePayer가 대납해 주는 서비스로
  Sender가 서명한 기존 Transaction 정보에 FeePayer의 서명을 추가하여 전송하는 개념을 통하여 제공됩니다.
- Fee Delegation Transaction은 Sender가 서명한 기존 Transaction 중 DynamicFeeTxType 만을 지원하며
  LegacyTxType, AccessListTxType은 지원하지 않습니다.
- WEMIX3.0 Explorer는 WEMIX3.0 네트워크의 블록 정보를 확인하기 위한 탐색기입니다.
- WEMIX3.0 Explorer는 블록체인에서 발생된 정보 및 상태를 조회할 수 있습니다.
- 주소 소유자이고 메타마스크를 설치하였는지 확인하십시오.
- Uses OAuth2 with refresh token — requires setup of connected app in Wemix
- 계약 소유자이고 메타마스크를 설치하였는지 확인하십시오.
- 계약 소유자이고 계약 코드가 확인된 경우에만 토큰 정보를 업데이트할 수 있습니다.
- Uses JSON-RPC for API calls.
- WEMIX3.0 메인넷에서 이용가능한 WEMIX는 거래소에서 구매하시길 바랍니다.
- Built on WEMIX3.0 blockchain, WEMIX Stake provides secure and transparent services.
- Uses OAuth2 with refresh token — requires setup of connected app in wemix
- Some objects may return nulls in deeply nested fields
- Users can view each WONDER’s Total Staked Amount, Staking Ratio, Number of Stakers,
  Sharing Ratio, and Uptime in the ‘All Staking’ list of the Wonder Staking program.
- WEMIX.Fi will be revamped into WEMIX Stake.
- The WEMIX Stake Portfolio is a feature designed to provide users with efficient
  management of their assets and program participation.
- WEMIX Stake는 위믹스 공식 스테이킹 프로그램입니다.
- WEMIX Stake는 위믹스3.0 블록체인 네트워크를 기반으로 하는 안전하고 투명한 서비스를 제공하고 있습니다.
- Testnet WEMIX Faucet은 개발 및 테스트 목적으로만 사용하길 권장합니다.
- Testnet WEMIX은 WEMIX3.0 메인넷에서 사용이 불가능합니다.
- Users must stake a minimum of 1.5 million WEMIX to participate in the program.
- Changes to the fee set by the WONDER can take effect after 7 days.
- Assets deposited through the Wonder Staking Program are stored in a smart contract,
  and the stake and reward for the assets are calculated in real-time according to
  the logic.
- WEMIX Stake (formerly Wonder Staking) will continue to provide services.
- Services migrated to a separate webpage as of August 23, 2024.
- WEMIX.Fi가 WEMIX Stake으로 개편됨에 따라 Pool, Lend&Borrow, Liquid Staking 서비스는 별도의 플랫폼을
  통해 이용하실 수 있습니다.
- 예치된 자산은 Portfolio를 통해 언제든 출금이 가능하며, 서비스 개편에 대한 자세한 내용은 여기에서 확인할 수 있습니다.
- WEMIX Stake is a WEMIX 3.0 blockchain-based Staking platform.
- A step-by-step guide is provided to make it easy for users new to use.
- Choose a WONDER to delegate your stake and contribute to the ecosystem's growth
  and share block rewards.
- Set up WEMIX Wallet or MetaMask to get started right away.
- Total staked amount must be at least 1.5 million WEMIX.
- Rewards distributed after deducting fees set by the wonder.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- Miner_Limit is defined to prevent a specific member from continuously creating blocks.
- Max_Consecutive_Blocks is set to 1 to limit the height of a diverged block during
  an attack.
- DDoS attacks on the network according to the price volatility of the native coin
  WEMIX.
- Request may be denied if you already have a sufficient amount of test assets.
- 'Insufficient funds: Ensure your wallet has enough balance.'
- 'REQUEST_LIMIT_EXCEEDED: Limit to 120 requests per minute.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Insufficient funds: Ensure you have at least 1.5 million WEMIX to stake.'
- 'Pending withdrawal: Changes or withdrawals may take up to 7 days.'
- 'Invalid staking amount: Minimum of 1.5 million WEMIX is required.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: http://localhost:8588
  headers:
    Accept: application/json
source_metadata: null
