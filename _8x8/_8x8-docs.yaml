resources:
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: get_all_agents_status
  endpoint:
    path: /agents
    method: GET
- name: get_single_agent_status
  endpoint:
    path: /agents/{agentId}
    method: GET
- name: set_single_agent_status
  endpoint:
    path: /agents
    method: PUT
- name: call_records
  endpoint:
    path: /call-records
    method: GET
    data_selector: data
- name: meeting
  endpoint:
    path: /vpaas-magic-cookie-96f0941768964ab380ed0fbada7a502f/external_api.js
    method: GET
    data_selector: api
    params: {}
- name: meeting_invite
  endpoint:
    path: /meet/{alias}
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: ''
    params: {}
- name: create_conversation
  endpoint:
    path: /chat-gateway/v1/conversations
    method: POST
    data_selector: user
    params: {}
- name: webhook_events
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: eventType
    params: {}
- name: webhook_events
  endpoint:
    path: /callback
    method: POST
- name: callback
  endpoint:
    path: /callback
    method: POST
    data_selector: body
    params: {}
- name: create_channel
  endpoint:
    path: /create_channel
    method: POST
    data_selector: response
    params: {}
- name: get_campaign_status
  endpoint:
    path: /api/stats/campaigns/
    method: GET
- name: change_campaign_status
  endpoint:
    path: /api/tstats/campaigns/{campaignId}
    method: POST
    data_selector: message
- name: delete_campaign_record
  endpoint:
    path: /api/tstats/campaigns/{campaignId}/customers/{customerId}
    method: DELETE
    data_selector: records
- name: add_campaign_record
  endpoint:
    path: /api/tstats/campaigns/{campaignId}/customers
    method: POST
    data_selector: records
- name: view_campaign_record
  endpoint:
    path: /api/tstats/campaigns/{campaignId}/customers/{customerId}
    method: GET
    data_selector: records
- name: channels
  endpoint:
    path: /chat/v2/tenant//channels
    method: GET
- name: set_bulk_status
  endpoint:
    path: /api/v1/tenants/<<tenantId>>/agentstatus/agents/bulk
    method: PUT
    data_selector: agents
    params: {}
- name: place_call_for_agent
  endpoint:
    path: /api/v{version}/tenants/{tenantId}/agents/{agentId}/calls/line/{lineNo}
    method: POST
    data_selector: null
    params: {}
- name: set_transaction_codes_for_agent
  endpoint:
    path: /api/v{version}/tenants/{tenantId}/calls/{interactionId}/agent/{agentId}/transaction-codes
    method: PUT
    data_selector: null
    params: {}
- name: end_call_based_on_interactionId
  endpoint:
    path: /api/v{version}/tenants/{tenantId}/calls/{interactionId}?endPostProcessing=true
    method: DELETE
    data_selector: null
    params: {}
- name: hang_up_call_for_agent
  endpoint:
    path: /api/v{version}/tenants/{tenantId}/agents/{agentId}/calls/line/{lineNo}
    method: DELETE
    data_selector: null
    params: {}
- name: free_specific_agent_line
  endpoint:
    path: /api/v{version}/tenants/{tenantId}/agents/{agentId}/calls/line/{lineNo}
    method: DELETE
- name: TenantUpdates
  endpoint:
    path: /api/streaming/v1/clientconnect/subscribe/TenantUpdates-{tenant}-{subscriptionId}
    method: WS
    params:
      tenantId: '{tenantId}'
      subscriptionId: '{subscriptionId}'
      desiredOutputType: '{outputType}'
- name: outbound_call_without_queue
  endpoint:
    path: /outbound_call_without_queue
    method: GET
    data_selector: records
- name: outbound_call_with_queue
  endpoint:
    path: /outbound_call_with_queue
    method: GET
    data_selector: records
- name: outbound_conference_call_with_queue
  endpoint:
    path: /outbound_conference_call_with_queue
    method: GET
    data_selector: records
- name: transfer_of_call
  endpoint:
    path: /transfer_of_call
    method: GET
    data_selector: records
- name: heartbeat
  endpoint:
    path: /heartbeat
    method: GET
    data_selector: ClientCheck
- name: agent_status_change
  endpoint:
    path: /agent/status/change
    method: GET
    data_selector: AgentStatusChange
- name: agent_provisioning_change
  endpoint:
    path: /agent/provisioning/change
    method: GET
    data_selector: AgentProvChange
- name: interaction_created
  endpoint:
    path: /interaction/created
    method: GET
    data_selector: Interaction
- name: interaction_queued
  endpoint:
    path: /interaction/queued
    method: GET
    data_selector: Interaction
- name: interaction_deleted
  endpoint:
    path: /interaction/deleted
    method: GET
    data_selector: Interaction
- name: webchat_config
  endpoint:
    path: /vcc-chat-channels/public/webchat/discovery
    method: GET
    data_selector: data
    params: {}
- name: call_records
  endpoint:
    path: /v2/call-records
    method: GET
    params:
      pbxId: ''
      startTime: ''
      endTime: ''
      timeZone: ''
      pageSize: 50
- name: webchat
  endpoint:
    path: /vcc-chat-channels/public/webchat/discovery
    method: GET
    data_selector: data
    params: {}
- name: chat_properties
  endpoint:
    path: /chat/theme/properties
    method: GET
    data_selector: properties
- name: chat
  endpoint:
    path: /vcc-chat-channels/public/webchat/discovery
    method: GET
    data_selector: data
    params:
      domain: https://vcc-eu11.8x8.com
      tenant: Y2hyaXNjcm9tYmllZGVtbzAx
      channelUuid: 8aESZCG_Q2ODhI1fcLsV-Q
- name: realtime_metrics_queues
  endpoint:
    path: /analytics/cc/v5/realtime-metrics/queues
    method: GET
    data_selector: ''
    params: {}
- name: call_legs
  endpoint:
    path: /v1/call-legs
    method: GET
    data_selector: records
    params:
      pbxId: ''
      startTime: ''
      endTime: ''
      timeZone: ''
      pageSize: 50
      isSimplified: false
      isConnectTime: false
- name: call_legs
  endpoint:
    path: /call-legs
    method: GET
    data_selector: data
    params:
      pageSize: '50'
- name: company_summary
  endpoint:
    path: /analytics/work/v{version}/compsum
    method: GET
    data_selector: records
    params:
      pbxId: '{pbxId here}'
      startTime: YYYY-MM-DD HH:MM:SS
      endTime: YYYY-MM-DD HH:MM:SS
      timeZone: America/New_York
- name: extension_summary
  endpoint:
    path: /v{version}/extsum
    method: GET
    data_selector: records
    params:
      pbxId: '{pbxId here}'
      startTime: '2022-02-03 00:00:00'
      endTime: '2022-02-03 10:00:00'
      timeZone: America/New_York
- name: extension_summary
  endpoint:
    path: /extension/summary
    method: GET
    data_selector: records
    params: {}
- name: ring_group_summary
  endpoint:
    path: /v2/rgsum-groups
    method: GET
    data_selector: records
    params: {}
- name: authenticate
  endpoint:
    path: /authenticate
    method: POST
    data_selector: access_token
    params: {}
- name: ring_group_member_summary
  endpoint:
    path: /v2/rgsum-members
    method: GET
    data_selector: records
- name: cdr
  endpoint:
    path: /v1/cdr
    method: GET
    data_selector: records
    params:
      pbxId: required
      startTime: required
      endTime: required
      timeZone: required
      pageSize: required
      isCallRecord: optional
      isConnectTime: optional
      isSimplified: optional
- name: report_links
  endpoint:
    path: /historical-metrics/{report-id}/links
    method: GET
- name: call_records
  endpoint:
    path: /analytics/work/v{version}/cdr
    method: GET
    data_selector: data
    params:
      pbxId: '{pbxId here}'
      startTime: '2022-02-03 00:00:00'
      endTime: '2022-02-03 10:00:00'
      timeZone: America/New_York
      isCallRecord: 'false'
      isSimplified: 'false'
      isConnectTime: 'false'
- name: cdr
  endpoint:
    path: /cdr
    method: GET
    data_selector: data
    params:
      pageSize: '50'
- name: ring_group_summary
  endpoint:
    path: /v{version}/rgsum
    method: GET
    params:
      pbxId: '{pbxId here}'
      startTime: '2022-01-03 00:00:00'
      endTime: '2022-05-03 10:00:00'
      timeZone: America/New_York
- name: ring_group_member_summary
  endpoint:
    path: /v{version}/rgsum
    method: GET
    params:
      pbxId: '{pbxId here}'
      startTime: '2022-01-03 00:00:00'
      endTime: '2022-05-03 10:00:00'
      timeZone: America/New_York
- name: ring_group_member_summary
  endpoint:
    path: /rgsum
    method: GET
    data_selector: ''
    params:
      pbxId: ''
      startTime: ''
      endTime: ''
      timeZone: ''
      extId: ''
      collapse: 'true'
- name: realtime_metrics
  endpoint:
    path: /realtime-metrics/queues
    method: GET
    data_selector: metrics
    params:
      metrics: handling.rt,entered.today
- name: single_queue
  endpoint:
    path: /realtime-metrics/queues/{queue-id}
    method: GET
- name: agents_within_queue
  endpoint:
    path: /realtime-metrics/queues/{queue-id}/agents
    method: GET
- name: agents_within_group
  endpoint:
    path: /realtime-metrics/groups/{group-id}/agents
    method: GET
- name: all_agents_within_tenant
  endpoint:
    path: /realtime-metrics/agents
    method: GET
- name: agents_in_queue_groups
  endpoint:
    path: /realtime-metrics/agents-in-queue-groups
    method: GET
- name: agents_within_group
  endpoint:
    path: /realtime-metrics/groups/{group-id}/agents
    method: GET
    data_selector: records
    params:
      page: 0
      size: 100
      metrics:
      - offered.today
      - status.rt
- name: single_agent_within_group
  endpoint:
    path: /realtime-metrics/groups/{group-id}/agents/{agent-id}
    method: GET
    data_selector: records
    params:
      metrics:
      - offered.today
      - status.rt
- name: groups
  endpoint:
    path: /realtime-metrics/groups
    method: GET
    data_selector: records
    params: {}
- name: report_links
  endpoint:
    path: /v<<versionCCAHistorical>>/historical-metrics/{report-id}/links
    method: GET
    data_selector: data
    params: {}
- name: report_data
  endpoint:
    path: /v<<versionCCAHistorical>>/historical-metrics/{report-id}/data
    method: GET
    data_selector: data
    params: {}
- name: report_status
  endpoint:
    path: /v<<versionCCAHistorical>>/historical-metrics/{report-id}/status
    method: GET
    data_selector: status
    params: {}
- name: report_download
  endpoint:
    path: /v<<versionCCAHistorical>>/historical-metrics/{report-id}/download
    method: GET
    data_selector: download
    params: {}
- name: detailed-reports-interaction-details
  endpoint:
    path: /detailed-reports-interaction-details
    method: GET
- name: detailed-reports-agent-status-change
  endpoint:
    path: /detailed-reports-agent-status-change
    method: GET
- name: detailed_report
  endpoint:
    path: /historical-metrics/detailed-reports/{report-id}/data
    method: GET
    data_selector: records
    params:
      size: '100'
- name: report_data
  endpoint:
    path: /reports/data
    method: GET
    data_selector: items
    params: {}
- name: detailed_reports
  endpoint:
    path: /historical-metrics/detailed-reports
    method: GET
    data_selector: data
    params: {}
- name: summary_report
  endpoint:
    path: /historical-metrics
    method: GET
    data_selector: data
    params: {}
- name: surveys-summary
  endpoint:
    path: /report-types/surveys-summary
    method: GET
- name: survey-questions-summary
  endpoint:
    path: /report-types/survey-questions-summary
    method: GET
- name: detailed-reports-survey
  endpoint:
    path: /report-types/detailed-reports-survey
    method: GET
- name: recent_calls
  endpoint:
    path: /api/recent_calls
    method: POST
- name: recent_calls
  endpoint:
    path: /recent_calls
    method: GET
    data_selector: data
    params:
      tenantId: acmecorp01
      page: 1
      rows: 100
- name: recent_call_data
  endpoint:
    path: /recentCallData/{region}
    method: POST
    data_selector: data
    params: {}
- name: Get My Regions
  endpoint:
    path: /storage/{region}/v{version}/regions
    method: GET
    data_selector: regions
- name: Find Objects
  endpoint:
    path: /storage/{region}/v{version}/objects
    method: GET
    data_selector: content
- name: create_bulk_download
  endpoint:
    path: /storage/{region}/v<<versionCSS>>/bulk/download
    method: POST
- name: check_download_status
  endpoint:
    path: /storage/{region}/v<<versionCSS>>/bulk/download/{zipName}
    method: POST
- name: download_zip_file
  endpoint:
    path: /storage/{region}/v<<versionCSS>>/bulk/download/{zipName}
    method: GET
- name: call_recording
  endpoint:
    path: /path/to/callrecording
    method: GET
    data_selector: records
    params:
      filter: type==callrecording
- name: callcenter_recording
  endpoint:
    path: /path/to/callcenterrecording
    method: GET
    data_selector: records
    params:
      filter: type==callcenterrecording
- name: callcenter_transcription
  endpoint:
    path: /path/to/callcentertranscription
    method: GET
    data_selector: records
    params:
      filter: type==transcription;sourceObjectType==callcenterrecording
- name: post_call_survey
  endpoint:
    path: /postcallsurvey
    method: GET
    data_selector: records
    params:
      filter: type==postcallsurvey
- name: voice_comment_recording
  endpoint:
    path: /voicecommentrecording
    method: GET
    data_selector: records
    params:
      filter: type==voicecommentrecording
- name: voice_comment_recording_transcription
  endpoint:
    path: /transcription
    method: GET
    data_selector: records
    params:
      filter: type==transcription;sourceObjectType==voicecommentrecording
- name: CC Voicemail Recording
  endpoint:
    path: /services/data/vXX.X/sobjects/CallCenterVoicemail
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: CC Voicemail Recording Transcript
  endpoint:
    path: /services/data/vXX.X/sobjects/CallCenterVoicemailTranscript
    method: GET
    data_selector: records
    params: {}
- name: screen_recording
  endpoint:
    path: /screenrecording
    method: GET
    data_selector: records
    params:
      filter: type==screenrecording
- name: agent_notes
  endpoint:
    path: /agentnotes
    method: GET
    data_selector: records
    params:
      filter: type==agentnotes
- name: sentiment_score
  endpoint:
    path: /sentimentScore
    method: GET
    data_selector: records
    params:
      filter: type==sentimentScore
- name: summary
  endpoint:
    path: /summary
    method: GET
    data_selector: records
    params:
      filter: type==summary
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
    params: {}
- name: web_hooks
  endpoint:
    path: /chat/v2/tenant//web-hooks
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: ''
    params: {}
- name: update_contact
  endpoint:
    path: /contacts/{contactId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_contact
  endpoint:
    path: /contacts/{contactId}
    method: DELETE
    data_selector: ''
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: audit_records
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      startTime: '2022-12-16T18:30:00.000Z'
      endTime: '2023-01-16T18:30:00.000Z'
      service: platform
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: POST
- name: transitions
  endpoint:
    path: /api/v1/transitions
    method: POST
- name: sessions
  endpoint:
    path: /sessions/{taskId}/data
    method: GET
    params:
      taskId: ''
- name: transitions
  endpoint:
    path: /transitions/{taskId}/data
    method: GET
    params:
      taskId: ''
- name: sessions
  endpoint:
    path: /sessions
    method: POST
    data_selector: ''
    params: {}
- name: session_status
  endpoint:
    path: /sessions/{taskId}/status
    method: GET
    data_selector: ''
    params: {}
- name: session_data
  endpoint:
    path: /sessions/{taskId}/data
    method: GET
    data_selector: ''
    params:
      limit: 50
- name: transitions
  endpoint:
    path: /transitions
    method: POST
    data_selector: ''
    params: {}
- name: transition_status
  endpoint:
    path: /transitions/{taskId}/status
    method: GET
    data_selector: ''
    params: {}
- name: transition_data
  endpoint:
    path: /transitions/{taskId}/data
    method: GET
    data_selector: ''
    params:
      limit: 100
- name: channel
  endpoint:
    path: /vcc/{region}/chat/v2/tenant/{tenant-id}/channels/{channel-id}
    method: GET
    data_selector: ''
- name: conference_mapping
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/v1/access
    method: GET
    data_selector: message
    params: {}
- name: DIDs_List
  endpoint:
    path: YOUR_CONFERENCE_URL
    method: GET
    data_selector: ''
    params: {}
- name: Dial-in Numbers and PIN Codes
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/v1/access
    method: GET
    data_selector: message
    params: {}
- name: user
  endpoint:
    data_selector: context.user
- name: features
  endpoint:
    data_selector: context.features
- name: room
  endpoint:
    data_selector: room
- name: configOverwrite
  endpoint:
    path: /config.js
    method: GET
    data_selector: configOverwrite
    params: {}
- name: interfaceConfigOverwrite
  endpoint:
    path: /interface_config.js
    method: GET
    data_selector: interfaceConfigOverwrite
    params: {}
- name: default_language
  endpoint:
    path: lang
    method: SET
    data_selector: options.lang
    params: {}
- name: recording
  endpoint:
    path: /recording
    method: POST
    data_selector: recording_file
- name: chat_transcript
  endpoint:
    path: /chat_transcript
    method: POST
    data_selector: messages
- name: meeting_id_and_pin_code
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/v1/access
    method: GET
    data_selector: id
    params:
      conference: '{Meeting-Name}@conference.{App-Id}.8x8.vc'
- name: did_list
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/access/v1/dids
    method: GET
    data_selector: ''
- name: transcription_chunk
  endpoint:
    path: /print_jaas_webhook
    method: POST
    data_selector: body
    params: {}
- name: JitsiMeetConferenceOptions
  endpoint:
    path: /serverURL
    method: GET
- name: room_created
  endpoint:
    path: /room_created
    method: POST
    data_selector: data
- name: participant_left
  endpoint:
    path: /participant_left
    method: POST
    data_selector: data
- name: participant_joined
  endpoint:
    path: /participant_joined
    method: POST
    data_selector: data
- name: transcription_uploaded
  endpoint:
    path: /transcription_uploaded
    method: POST
    data_selector: data
- name: chat_uploaded
  endpoint:
    path: /chat_uploaded
    method: POST
    data_selector: data
- name: room_destroyed
  endpoint:
    path: /room_destroyed
    method: POST
    data_selector: data
- name: feedback
  endpoint:
    path: /feedback
    method: POST
    data_selector: data
- name: rtcstats_uploaded
  endpoint:
    path: /rtcstats_uploaded
    method: POST
    data_selector: data
- name: ban_user
  endpoint:
    path: /v1/_jaas/jaccess/v1/access-management/{appId}/ban/user/{userId}
    method: POST
- name: ban_jwt
  endpoint:
    path: /v1/_jaas/jaccess/v1/access-management/{appId}/ban/jwt
    method: POST
- name: destroy_room
  endpoint:
    path: /v1/_jaas/conference-commands/v1/meeting
    method: POST
- name: dial_out_participant
  endpoint:
    path: /v1/_jaas/conference-commands/v1/meeting
    method: POST
- name: hang_up_call
  endpoint:
    path: /v1/_jaas/conference-commands/v1/meeting
    method: POST
- name: kick_participant
  endpoint:
    path: /v1/_jaas/conference-commands/v1/meeting
    method: POST
- name: webhook_endpoint
  endpoint:
    path: /webhook
    method: POST
    data_selector: data
    params: {}
- name: meetings_overview
  endpoint:
    path: /meetings/overview
    method: GET
    data_selector: meetings
    params: {}
- name: meetings_details
  endpoint:
    path: /meetings/details
    method: GET
    data_selector: details
    params: {}
- name: connectionInfo
  endpoint:
    data_selector: connectionInfo
- name: identity
  endpoint:
    data_selector: identity
- name: logs
  endpoint:
    data_selector: logs
- name: dominantSpeaker
  endpoint:
    data_selector: dominantSpeaker
- name: dialInConfCodeUrl
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/v1/access
    method: GET
    data_selector: url
- name: dialInNumbersUrl
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/v1/access/dids
    method: GET
    data_selector: url
- name: dialInConfCode
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/v1/access
    method: GET
- name: dialInNumbers
  endpoint:
    path: /v1/_jaas/vmms-conference-mapper/v1/access/dids
    method: GET
- name: endpoint_name
  endpoint:
    path: /services/data/vXX.X/sobjects/Endpoint
    method: GET
    data_selector: records
    params: {}
notes:
- Adds ability to prefer BOSH over WebSocket
- Adds config for initial camera facing mode (front or rear)
- Adds event with transcription chunks
- Pagination controlled by pageSize and scrollId
- JaaS will sign each of the webhook events it sends to your endpoints by including
  a signature in each event’s X-Jaas-Signature header.
- The only valid live signature scheme is v1.
- API key is limited to 5 requests per second.
- API user can see all public rooms and needs to be invited to private rooms.
- API user can read messages from all rooms it has access to, including private rooms
  it's been invited to.
- Anyone with access to the API can use all of its endpoints.
- Your API key is limited to 5 requests per second.
- Chapi is officially supported in the US region.
- To enhance the experience of the customer, we recommend leveraging these Contact
  Center API's as well.
- Webhook can be created either via UI or via API.
- The server that receives the WEB_HOOK_VERIFY event must respond with a 2XX status
  code.
- Uses JWT with RS256 for signature verification
- Payload must include checksum and specific headers
- You can access the Event Log in Configuration Manager > Integration > Webhooks >
  Event Log for issue notification to help you troubleshoot your Chat implementation.
- In this view, you can see all conversation related requests made to the Chat Gateway
  API marked as Inbound.
- The Campaign MUST be configured as a Dynamic Campaign
- Records MUST exist in the CC CRM to be added to a campaign
- Maximum of 7 days in advance for scheduling
- Maximum of 5 million records can be uploaded
- Free up agent lines in preparation for the next call. This will end the agent involvement
  in all their calls. If a call is a conference or call was transferred it will not
  hang up for the other participants.
- With an integration not all the events will be available, to know what events can
  be received for a specific integration use the `partnerSDK.system.getEvents()` method
  from the SDK.
- Code snippet must be included in the <body> section of the page, preferably just
  before the ending tag.
- This API provides access to data from the past 2 years only.
- The customer information can be set on any myProxy lifecycle subscriber hook, but
  it will only be actually sent to the server when the customer is added to a queue.
- Only primitive data types (strings, numbers and booleans) are allowed as values.
- Setting a customer information already previously set will overwrite that information,
  unless the new value is undefined.
- If the new value is null, that information will be removed from the customer information.
- The customer information key:value pair is limited in 100 characters for the key
  and 500 character for the value.
- The chat language can be set at any time before starting a chat (when the customer
  enters a queue) and you can change it as many time as you want, only the last value
  will be considered.
- Same elements that are translated with pre-chat form set language or default browser/tenant
  language will be translated here as well.
- Questions in the pre-chat form and quick replies are not currently translated
- Language $language is the only CRM variable that will not be sent back in CM to
  use inside chat script testVariable node but will actually take effect immediately
  and change the chat language; also it will set the default language option value
  in pre-chat language question drop-down select (if pre-chat and language question
  set).
- If no pre-chat form/no language question is set then the only effect is the language
  change for the available next steps (chat window, offline form).
- All custom variables prefixed with _ and the rest of the CRM variables available
  ($emailAddress, $emailBody etc.) end up in the interaction details and additional
  properties in AW.
- The variables key:value pair is limited to 255 characters for the key and the value
  each. Any key:pair bigger than the specified value will be ignored.
- The variable key that is not a string and does not match the pattern *(any alphanumeric
  characters plus underscore _, any digit 1-9, a hyphen -)*will be ignored and a warning
  is shown in the console.
- The button will not show up if no button has been configured in the chat script.
- When the message type shows as INCOMING, this is a message that comes into the webchat,
  so sent by the agent or a chatbot.
- When the message shows as OUTGOING, this is a message that is sent by the person
  using the webchat, into an agent.
- Uses API key for authentication
- The 'Application Credentials' permission is required to create/manage API Keys in
  Admin Console
- If you do not have the API Keys option you do not have the correct permission/role
- Ensure to handle token expiration properly in your code.
- This API provides access to data from the past 2 years only in accordance with Analytics
  for Work data compliance policies.
- Durations are in milliseconds
- User must access Analytics at least once via browser.
- This API provides access to data from the past 2 years only in accordance with Analytics
  for Work data compliance policies; queries spanning more than 2 years will return
  only the most recent 2 years of data.
- The 'X-Tenant-Info' header is necessary for multitenant customers.
- API requires setup of access token and API key
- This API provides access to data from the past 2 years only
- User must access Analytics at least once via browser
- The current version for ring group summary is v2
- The maximum page size is 1000 if you specify a size above 1000 you will receive
  400 Bad Request
- When includeTotals is set to true an additional set of 'total' metrics will be included
  for time, percentage, average and count metric types.
- When passing multiple ids on endpoints with plural parameters such as agent-ids,
  queue-ids, group-ids, the parameters can be passed by repeating the parameter name
  or as a comma separated list.
- Leave some time between status checks, repeatedly requesting updates without taking
  a pause is more likely to slow the response than speed it up.
- Use Bearer token for authentication
- For multitenant customers, include 'X-Tenant-Info' header
- Data is available via JSON ONLY from historical-metrics/detailed-reports
- This MUST BE OMITTED in the request for the initial page.
- Either duration or timeRange must be specified for the report.
- Only objects with a state of AVAILABLE are returned unless other object states are
  specifically requested.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- API key is required for all GET requests to search and retrieve contact information.
- The initial response includes a scrollId, which is necessary for subsequent paginated
  requests.
- Rate limiting is set to 60 requests per minute.
- Deleting a contact is a permanent action and cannot be undone.
- Rate limit is 60 requests per minute.
- The maximum allowed timerange for any data retrieval request is 7 days.
- 'Use appropriate date ranges: Keep date ranges reasonably small (ideally less than
  1 day) to improve performance.'
- 'Apply relevant filters: Use filters to narrow down results and improve response
  times.'
- 'Handle pagination properly: Always check for the nextPageCursor and fetch all pages
  when needed.'
- 'Poll task status efficiently: Use exponential backoff when polling for task status.'
- 'Respect rate limits: Implement appropriate retry mechanisms with backoff when encountering
  rate limiting.'
- 'Cache results when appropriate: For frequently accessed data that doesn''t change
  often, consider caching on your side.'
- 'Handle errors gracefully: Check for error responses and retry with backoff for
  transient errors.'
- Any 3rd party integration deployed inside an 8x8 product should be WCAG 2.1 AA compliant.
- Accessible products and integrations are important. Any 3rd party integration deployed
  inside an 8x8 product should be WCAG 2.1 AA compliant.
- 8x8 products support switching between dark and light mode so integrations must
  also support dark and light styles.
- JaaS meetings are hosted on 8x8.vc domain
- 'Transcriptions can be programatically enabled by using the API command: https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-iframe-commands#setsubtitles'
- Participants will be 'on hold' before joining a meeting when lobby is enabled.
- If WAIT_FOR_APPROVAL is returned, all non-moderator participants must 'knock on
  the door' / 'ask to join'.
- If WAIT_FOR_MODERATOR is returned, the lobby is automatically disabled after the
  first moderator joins.
- Video call recording comes at an extra cost of $0.01 per min.
- Recording files are temporarily stored in the 8x8 cloud for 24 hours.
- Once deleted, the call recording is impossible to restore.
- JaaS does not store ANY user data within our data centers (cloud).
- 'All Jitsi/JaaS meeting rooms are ephemeral: that is to say that they only exist
  whilst the meeting is live.'
- JaaS billing platform only supports United States Dollars (USD).
- Video call recording costs $0.01 per min.
- The transcript file is temporarily stored in the 8x8 cloud for 24 hours.
- Once deleted, it is impossible to restore and it absolutely not stored on any 8x8
  server, anywhere.
- The lobby can be enabled using the SETTINGS_PROVISIONING webhook.
- Once enabled, participants will be 'on hold' before joining a meeting.
- Moderators will be able to select and approve who can participate in the meeting.
- If WAIT_FOR_APPROVAL is returned, all non-moderator participants must 'ask to join'
  and be approved by a moderator.
- Recording can be initiated by the moderator with permissions set in the JWT or via
  the iFrame API.
- Call recording files are temporarily stored in the 8x8 cloud for 24 hours.
- Recording cannot be restored once deleted from the 8x8 cloud.
- JaaS meetings are ephemeral and room data is destroyed when the last participant
  leaves.
- Currently, the JaaS billing platform only supports United States Dollars (USD).
- Yes. JaaS allows video call recording at an extra cost of $0.01 per min.
- A JaaS API key is a Public Key consisting of a 4096 bits RSA SSH Key Pair in PEM
  format.
- The JWT token must be generated and signed with a Private Key for each user endpoint
  enabled for a meeting.
- For your Node.js implementation, please make sure you are using the latest version
  of node-jsonwebtoken library, currently 9.0.0. Otherwise you risk being impacted
  by this vulnerability.
- UI buttons visibility is controlled through a configOverwrite property called toolbarButtons
- Not passing this property at all enables all buttons on the UI
- Passing this property with an empty array hides all buttons from the conference's
  UI
- Passing this property with certain values will only enable buttons corresponding
  to the given values
- For a better mobile experience (background support, Bluetooth support, etc.) we
  recommend using a native app instead. We provide a native Android SDK.
- For a better mobile experience (background support, CallKit integration, etc.) we
  recommend using a native app instead. We provide a native iOS SDK.
- Not all options found in config.js and interface_config.js are overwritable.
- A moderator has the option to secure a meeting either by adding a pincode or by
  enabling lobby, or both.
- Any new meeting participant will initially join the lobby page and he needs to ask
  for permission to join the meeting through a button on the UI.
- The moderator receives a notification with the user name and an option to either
  allow or disallow that user to join the ongoing meeting.
- The pincode and the lobby features are controlled from the shield icon on the meeting
  UI.
- The maximum number of participants in a meeting that can collaborate on a whiteboard
  is 25.
- You can only save the whiteboard in PNG or SVG format, and you cannot reuse it in
  another meeting.
- JaaS Account with a billing method added is required to access Paid/Premium Features.
- Ensure that the JWT that you generate for your user contains the user permissions
  for sip-outbound-call.
- 'Add this line of code to your configuration to enable SIP Dial Out: interfaceConfigOverwrite:
  { ENABLE_DIAL_OUT: true }'
- Transcription and Translation are paid add-ons which require a billing / payment
  method to be added to your JaaS Account.
- The current user's JWT should enable transcription to be able to use the feature.
- Transcription is a premium feature so you will need to add a payment method to your
  JaaS account to enable it.
- Livestreaming is a paid add-on which require a billing / payment method to be added
  to your JaaS Account.
- The current user's JWT should enable livestreaming to be able to use the feature.
- The JWT token has to be signed with a private key that has the corresponding public
  key uploaded in the jaas api-keys section of the console.
- To enable participation in your AppID meetings, you must generate a JWT for each
  participant and sign it with the Private Key.
- The webhook endpoint expects data through a POST request and confirms successful
  data receipt through the return of an 2xx status code.
- Event ordering is not guaranteed; therefore, PARTICIPANT_JOINED might be received
  prior to ROOM_CREATED.
- The meetings details dashboard provides insights into audio and video performance.
- All methods and events that happen on a RTCPeerConnection will show up in the statistics
  file.
- GDPR sensitive data such as IPs is obfuscated before being sent.
- Important mention regarding `getStats` entries, because they can be of considerable
  length, we delta compressed.
- Make sure the VirtualHost 'jigasi.meet.jitsi' exists in the prosody configuration
  file.
- Check the asap_accepted_audiences value to contain your actual domain.
- Make sure to set the enabled field to true.
- Update the asap_accepted_audiences by replacing <your domain> with your actual domain.
- Some objects may return nulls in deeply nested fields
errors:
- 'oauth.v2.InvalidAccessToken: Replace the api key with your own.'
- '401 Unauthorized: Invalid signature or key'
- '500 Internal Server Error: General error'
- '400: Invalid customer-id'
- '404: The customer-id has not been found.'
- '400: Duplicate customer'
- '400: Invalid schedule-date-time format - please use ISO 8601 format'
- '400: The subject schedule-date-time must be within 7 days ahead of a future period.'
- '403: Forbidden - Contact 8x8 support to enable Agent Status API'
- '200: Successful request'
- If the message Customer info is not of a primitive type and will be discarded is
  shown in the browser console, it means that the logged property value is of a data
  type unsupported by the embedded chat.
- If the message Customer info key is too big and will be discarded is shown in the
  browser console, it means that the key string length is too big.
- If the message Customer info value is too big and will be discarded is shown in
  the browser console, it means that the value string length is too big.
- 'Customer variable: provided variable [variableKey] does not match the expected
  pattern or its chars exceeded the max length of 255. It will be discarded.'
- 'Customer variable: provided system variable [variableKey ] it''s not supported.
  It will be discarded.'
- 'Customer variable: provided variable [variableKey] is not a string or its chars
  exceeded the max length of 255. It will be discarded.'
- '401 Unauthorized: Ensure valid API key and user credentials.'
- '429 Too Many Requests: Reduce the rate of requests.'
- '401 Unauthorized: Pass the access_token returned from the authentication request
  as a Bearer token.'
- '400 Bad request: X-Tenant-Info header is missing.'
- '400 Bad request: Invalid value for X-Tenant-Info header.'
- '401 Unauthorized: Recheck API key or access token'
- '401 Unauthorized: Ensure API key and user credentials are correct'
- '400 Bad Request: Check parameters for validity'
- '400 Bad Request: Field ''size'' must be less than or equal to 1000'
- '400 Bad Request: Field ''page'' must be greater than or equal to 0 and less than
  the total number of pages'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: If this limit is exceeded.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'maxInterval: Requests spanning more than 7 days will be rejected.'
- '400: Bad Request - Invalid input parameters'
- '401: Unauthorized - Invalid or missing API key'
- '403: Forbidden - Insufficient permissions'
- '404: Not Found - Resource not found'
- '429: Too Many Requests - Rate limit exceeded'
- '500: Internal Server Error - Server-side error'
- Overage rate of $0.99 per MAU if user count exceeds plan.
auth_info:
  mentioned_objects:
  - JWS
  - JWK
  - RS256
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://your-instance.api-name.com
  headers:
    Content-Type: application/json
    Accept: application/json
    content-type: application/json
    cache-control: no-cache
    8x8-apikey: test_key_kjdfidj238jf9123df221
    Authorization: Bearer {access_token}
    token: 11vf11vf-5e6f-1a2b-3c4d-123xxx123xxx
    x-api-key: your-api-key-value
    analytics:
      rtcstatsEnabled: true
      rtcstatsEndpoint: wss://rtcstats-server-8x8.jitsi.net/
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    token_url: https://login.api.com/services/oauth2/token
    flow: refresh_token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    app_id: jitsi
    asap_key_server: https://jaas-public-keys.jitsi.net/jitsi-components/prod-8x8
  paginator:
    type: cursor
    page_size_param: limit
    default_page_size: 100
    scroll_id_param: scrollId
    scroll_id: scrollId
    cursor_param: nextPageCursor
    cursor_path: nextPageCursor
  themeCustom:
    buttonPrimaryTextColor: '#FFFFFF'
    buttonPrimaryTextColorDisabled: '#888888'
    buttonPrimaryBackgroundColor: '#000080'
    buttonPrimaryBackgroundColorHover: '#00008B'
    buttonPrimaryBackgroundColorActive: '#000099'
    buttonPrimaryBackgroundColorDisabled: '#000066'
    buttonSecondaryTextColor: '#FFFFFF'
    buttonSecondaryTextColorDisabled: '#888888'
    buttonSecondaryBackgroundColor: '#ADD8E6'
    buttonSecondaryBackgroundColorHover: '#B0E0E6'
    buttonSecondaryBackgroundColorActive: '#87CEEB'
    buttonSecondaryBackgroundColorDisabled: '#B0C4DE'
    buttonBorderRadius: 0px
  resources:
  - name: webhook
    endpoint:
      path: /{region}/chat/v2/tenant/{tenant-id}/web-hooks/{web-hook-id}
      method: GET
      data_selector: ''
      params: {}
  configOverwrite:
    prejoinPageEnabled: false
source_metadata: null
