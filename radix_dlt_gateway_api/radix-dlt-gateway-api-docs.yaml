resources:
- name: Run Your First Scrypto Project
  endpoint:
    path: /docs/learning-to-run-your-first-scrypto-project
    method: GET
    data_selector: records
    params: {}
- name: Explain Your First Scrypto Project
  endpoint:
    path: /docs/learning-to-explain-your-first-scrypto-project
    method: GET
    data_selector: records
    params: {}
- name: Create Your First Custom Resource
  endpoint:
    path: /docs/learning-to-create-your-first-custom-resource
    method: GET
    data_selector: records
    params: {}
- name: Build a Gumball Machine
  endpoint:
    path: /docs/learning-to-build-a-gumball-machine
    method: GET
    data_selector: records
    params: {}
- name: HelloToken
  endpoint:
    path: /services/data/vXX.X/sobjects/HelloToken
    method: POST
    data_selector: records
    params: {}
- name: gumball_machine
  endpoint:
    path: /gumball_machine
    method: POST
    data_selector: gumball_data
- name: transaction_manifests
  endpoint:
    path: /transaction/manifests
    method: GET
    data_selector: manifests
    params: {}
- name: dApp Definition
  endpoint:
    path: /docs/dapp-definition-setup
    method: GET
    data_selector: dApp metadata
- name: Radix Dapp Toolkit
  endpoint:
    path: /docs/radix-dapp-toolkit
    method: GET
    data_selector: dApp utilities
- name: gumball_machine_transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: transaction_status
  endpoint:
    path: /transaction/status
    method: GET
    data_selector: status
    params: {}
- name: component_details
  endpoint:
    path: /state/entity
    method: GET
    data_selector: entity
    params: {}
- name: gumball_machine
  endpoint:
    path: /learning-to-set-verification-metadata
    method: GET
    data_selector: metadata
    params: {}
- name: non_fungible_resource
  endpoint:
    path: /learning-to-create-your-first-non-fungible
    method: GET
    data_selector: ''
    params: {}
- name: candy_store
  endpoint:
    path: /candy_store
    method: POST
    data_selector: store
    params: {}
- name: candy_store
  endpoint:
    path: /api/candy_store
    method: POST
    data_selector: candy_store_data
    params: {}
- name: gumball_machine
  endpoint:
    path: /api/gumball_machine
    method: POST
    data_selector: gumball_machine_data
    params: {}
- name: GumballMachine
  endpoint:
    path: /path/to/gumballmachine
    method: GET
    data_selector: records
    params: {}
- name: Radiswap
  endpoint:
    path: /run/radiswap
    method: POST
    data_selector: result
    params: {}
- name: installation_scripts
  endpoint:
    path: /install-scrypto-windows.ps1
    method: GET
    data_selector: scripts
    params: {}
- name: installation_scripts
  endpoint:
    path: /install-scrypto-macos.sh
    method: GET
    data_selector: scripts
    params: {}
- name: installation_scripts
  endpoint:
    path: /install-scrypto-debian.sh
    method: GET
    data_selector: scripts
    params: {}
- name: authorized_depositor
  endpoint:
    path: /api/authorized_depositor
    method: POST
    data_selector: result
    params: {}
- name: mainnet
  endpoint:
    path: /mainnet
    method: GET
- name: stokenet
  endpoint:
    path: /stokenet
    method: GET
- name: local_environment
  endpoint:
    path: /local
    method: GET
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: mainnet
  endpoint:
    path: /mainnet
    method: GET
    data_selector: networkId
    params: {}
- name: stokenet
  endpoint:
    path: /stokenet
    method: GET
    data_selector: networkId
    params: {}
- name: local_environment
  endpoint:
    path: /local_environment
    method: GET
    data_selector: networkId
    params: {}
notes:
- The exact rate limits imposed by the Foundation Gateway are dependent on the endpoint
  you are hitting and are subject to occasional tweaking.
- Front-end dApps will need to use the Gateway responsibly to maintain a good user
  experience.
- Radix implements a secure role-based access control system using badge-based permissions
  and transparent, fine-grained rules, effectively separating business logic from
  access management to prevent privilege escalation attacks.
- Encourages creation of reusable blueprints and components
- Resources are native to Scrypto and cannot be lost in transactions.
- Metadata fields like name and symbol are required for wallet display.
- Tokens are by default fixed supply but can be made mintable.
- Every transaction has a manifest that lists instructions for execution.
- Connects dApp to the Stokenet test network.
- The Gateway API is used to directly interact with the Radix network.
- Non-fungibles behave as real world objects and are unique.
- Must specify NonFungibleLocalID for non-RUID non-fungibles when minting.
- Authorization roles include Owner, Manager, and Staff.
- Methods restricted by roles include setting prices and minting badges.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Owned components make for simpler code that is easier to read and maintain.
- Blueprints and components do not exist on the radix network in isolation.
- When publishing the package, the package address is checked for an existing blueprint.
- Proving ownership of badges only works per component or resource.
- Testing is essential for ensuring proper predictable working of Scrypto packages.
- Uses Scrypto for dApp development
- Automated installation scripts available for Windows, macOS, and Linux.
- Anyone can run a node and join it to the Radix Public Network.
- There is no need to run a node of your own in order to submit transactions or see
  information about things that are on the ledger.
- Radix is a delegated proof-of-stake network.
- Only a subset of nodes participate in validation of transactions.
- User must approve depositor badge for direct deposits.
- Encouraged to use claim pattern for flexibility.
- Uses OAuth2 with refresh token — requires setup of connected app in Radix
- Mainnet is the official Radix Public Network with real assets.
- Stokenet is the primary test network for Radix development.
- Local environment uses the Radix Engine Simulator.
- Community developers can use the Core API via Grove for free, up to a total of 5m
  request per day.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.radixdlt.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.radixdlt.com/oauth2/token
    client_id: '{{ dlt.secrets[''radix_client_id''] }}'
    client_secret: '{{ dlt.secrets[''radix_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''radix_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
