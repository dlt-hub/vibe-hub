resources:
- name: charges
  endpoint:
    path: /1/charges
    method: GET
- name: authorisations
  endpoint:
    path: /1/authorisations
    method: GET
- name: customers
  endpoint:
    path: /1/customers
    method: GET
- name: refunds
  endpoint:
    path: /1/refunds
    method: GET
- name: payment_sources
  endpoint:
    path: /1/payment-sources
    method: GET
- name: cards
  endpoint:
    path: /1/cards
    method: GET
- name: test_cards
  endpoint:
    path: /1/test-cards
    method: GET
- name: currency_support
  endpoint:
    path: /1/currency-support
    method: GET
- name: recipients
  endpoint:
    path: /1/recipients
    method: GET
- name: transfers
  endpoint:
    path: /1/transfers
    method: GET
- name: balance
  endpoint:
    path: /1/balance
    method: GET
- name: bank_accounts
  endpoint:
    path: /1/bank-accounts
    method: GET
- name: deposits
  endpoint:
    path: /1/deposits
    method: GET
- name: events
  endpoint:
    path: /1/events
    method: GET
- name: webhook_endpoints
  endpoint:
    path: /1/webhook-endpoints
    method: GET
- name: webhooks
  endpoint:
    path: /1/webhooks
    method: GET
- name: plans
  endpoint:
    path: /1/plans
    method: GET
- name: subscriptions
  endpoint:
    path: /1/subscriptions
    method: GET
- name: merchants
  endpoint:
    path: /1/merchants
    method: GET
- name: apple_pay
  endpoint:
    path: /1/apple-pay
    method: GET
- name: disputes
  endpoint:
    path: /1/disputes
    method: GET
- name: files
  endpoint:
    path: /1/files
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: payment_page
  endpoint:
    path: /payment-page
    method: GET
    data_selector: payment_page_data
- name: payments
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: payment
    params: {}
- name: cards
  endpoint:
    path: /support/guides/cards
    method: GET
- name: charges
  endpoint:
    path: /support/guides/charges
    method: GET
- name: refunds
  endpoint:
    path: /support/guides/refunds
    method: GET
- name: customers
  endpoint:
    path: /support/guides/customers
    method: GET
- name: payment_pages
  endpoint:
    path: /support/guides/payment-pages
    method: GET
- name: payment_buttons
  endpoint:
    path: /support/guides/payment-buttons
    method: GET
- name: point_of_sale
  endpoint:
    path: /support/guides/point-of-sale
    method: GET
- name: recurring_payments
  endpoint:
    path: /support/guides/recurring-payments
    method: GET
- name: xero_online_invoicing
  endpoint:
    path: /support/guides/xero-online-invoicing
    method: GET
- name: xero_bank_feed
  endpoint:
    path: /support/guides/xero-bank-feed
    method: GET
- name: ecommerce
  endpoint:
    path: /support/guides/ecommerce
    method: GET
- name: apple_pay
  endpoint:
    path: /support/guides/apple-pay
    method: GET
- name: google_pay
  endpoint:
    path: /support/guides/google-pay
    method: GET
- name: disputes
  endpoint:
    path: /support/guides/disputes
    method: GET
- name: user_management
  endpoint:
    path: /support/guides/user-management
    method: GET
- name: merchants
  endpoint:
    path: /support/guides/merchants
    method: GET
- name: reserves
  endpoint:
    path: /support/guides/reserves
    method: GET
- name: Payment Pages
  endpoint:
    path: /payment-page
    method: GET
- name: Payment Buttons
  endpoint:
    path: /payment-button
    method: GET
- name: Xero Online Invoicing add-on
  endpoint:
    path: /account/xero
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: press_releases
  endpoint:
    path: /api/press_releases
    method: GET
    data_selector: data
    params: {}
- name: bank_feed
  endpoint:
    path: /account/xero
    method: GET
- name: multi-currency payments
  endpoint:
    path: /features/foreign-currencies
    method: GET
- name: payment pages
  endpoint:
    path: /support/guides/payment-pages
    method: GET
- name: integration with Chargebee
  endpoint:
    path: /integrations/chargebee
    method: GET
- name: integration
  endpoint:
    path: /gettimely.com
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: response
    params: {}
- name: void_charge
  endpoint:
    path: /charges/charge-token/void
    method: PUT
    data_selector: response
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
- name: charges_search
  endpoint:
    path: /charges/search
    method: GET
- name: charge_token
  endpoint:
    path: /charges/charge-token
    method: GET
- name: charges_verify
  endpoint:
    path: /charges/verify
    method: GET
    params:
      session_token: session-token
- name: authorisations
  endpoint:
    path: /authorisations
    method: POST
    data_selector: response
    params: {}
- name: void_authorisation
  endpoint:
    path: /authorisations/auth-token/void
    method: PUT
    data_selector: response
    params: {}
- name: capture_authorisation
  endpoint:
    path: /authorisations/auth-token/charges
    method: POST
    data_selector: response
    params: {}
- name: get_authorisations
  endpoint:
    path: /authorisations
    method: GET
    data_selector: response
    params: {}
- name: get_authorisation
  endpoint:
    path: /authorisation/auth-token
    method: GET
    data_selector: response
    params: {}
- name: authorisation
  endpoint:
    path: /authorisations
    method: GET
    data_selector: response
    params: {}
- name: auth-token
  endpoint:
    path: /authorisation/auth-token
    method: GET
    data_selector: response
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: response
    params: {}
- name: customer_details
  endpoint:
    path: /customers/customer-token
    method: GET
    data_selector: response
    params: {}
- name: customer_charges
  endpoint:
    path: /customers/customer-token/charges
    method: GET
- name: update_customer
  endpoint:
    path: /customers/customer-token
    method: PUT
- name: delete_customer
  endpoint:
    path: /customers/customer-token
    method: DELETE
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: response
    params: {}
- name: refund_details
  endpoint:
    path: /refunds/refund-token
    method: GET
    data_selector: response
    params: {}
- name: create_refund
  endpoint:
    path: /charges/charge-token/refunds
    method: POST
    data_selector: response
    params: {}
- name: charge_refunds
  endpoint:
    path: /charges/charge-token/refunds
    method: GET
    data_selector: response
    params: {}
- name: refunds
  endpoint:
    path: /charges/charge-token/refunds
    method: GET
    data_selector: response
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: POST
    data_selector: response
    params: {}
- name: card-token
  endpoint:
    path: /cards/card-token
    method: GET
- name: cards
  endpoint:
    path: /cards
    method: POST
- name: test_cards
  endpoint:
    path: /developers/api-reference/test-cards
    method: GET
    data_selector: records
    params: {}
- name: dispute
  endpoint:
    path: /dispute
    method: POST
    data_selector: token
    params:
      category: fraudulent
      status: evidence_required
      amount: 100
      currency: AUD
- name: charges
  endpoint:
    path: /developers/api-reference/charges
    method: GET
    data_selector: records
- name: authorisations
  endpoint:
    path: /developers/api-reference/authorisations
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /developers/api-reference/customers
    method: GET
    data_selector: records
- name: refunds
  endpoint:
    path: /developers/api-reference/refunds
    method: GET
    data_selector: records
- name: payment_sources
  endpoint:
    path: /developers/api-reference/payment-sources
    method: GET
    data_selector: records
- name: cards
  endpoint:
    path: /developers/api-reference/cards
    method: GET
    data_selector: records
- name: test_cards
  endpoint:
    path: /developers/api-reference/test-cards
    method: GET
    data_selector: records
- name: currencies
  endpoint:
    path: /developers/api-reference/currency-support
    method: GET
    data_selector: records
- name: recipients
  endpoint:
    path: /developers/api-reference/recipients
    method: GET
    data_selector: records
- name: transfers
  endpoint:
    path: /developers/api-reference/transfers
    method: GET
    data_selector: records
- name: balance
  endpoint:
    path: /developers/api-reference/balance
    method: GET
    data_selector: records
- name: bank_accounts
  endpoint:
    path: /developers/api-reference/bank-accounts
    method: GET
    data_selector: records
- name: deposits
  endpoint:
    path: /developers/api-reference/deposits
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /developers/api-reference/events
    method: GET
    data_selector: records
- name: webhook_endpoints
  endpoint:
    path: /developers/api-reference/webhook-endpoints
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /developers/api-reference/webhooks
    method: GET
    data_selector: records
- name: plans
  endpoint:
    path: /developers/api-reference/plans
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /developers/api-reference/subscriptions
    method: GET
    data_selector: records
- name: merchants
  endpoint:
    path: /developers/api-reference/merchants
    method: GET
    data_selector: records
- name: apple_pay
  endpoint:
    path: /developers/api-reference/apple-pay
    method: GET
    data_selector: records
- name: disputes
  endpoint:
    path: /developers/api-reference/disputes
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /developers/api-reference/files
    method: GET
    data_selector: records
- name: recipients
  endpoint:
    path: /recipients
    method: GET
    data_selector: response
    params:
      per_page: 25
- name: recipient_token
  endpoint:
    path: /recipients/recipient-token
    method: GET
    data_selector: response
- name: recipient_transfers
  endpoint:
    path: /recipients/recipient-token/transfers
    method: GET
    data_selector: response
- name: transfers
  endpoint:
    path: /recipients/recipient-token/transfers
    method: GET
    data_selector: response
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: transfer_token
  endpoint:
    path: /transfers/transfer-token
    method: GET
- name: transfer_line_items
  endpoint:
    path: /transfers/transfer-token/line_items
    method: GET
- name: search_transfers
  endpoint:
    path: /transfers/search
    method: GET
- name: line_items
  endpoint:
    path: /transfers/transfer-token/line_items
    method: GET
- name: balance
  endpoint:
    path: /balance
    method: GET
    data_selector: response
- name: bank_accounts
  endpoint:
    path: /1/bank_accounts
    method: POST
    data_selector: response
    params: {}
- name: deposits
  endpoint:
    path: /deposits
    method: GET
    data_selector: response
    params: {}
- name: deposit-token
  endpoint:
    path: /deposits/deposit-token
    method: GET
    data_selector: response
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: response
    params: {}
- name: event_token
  endpoint:
    path: /events/event-token
    method: GET
    data_selector: response
    params: {}
- name: webhook_endpoints
  endpoint:
    path: /webhook_endpoints
    method: POST
    data_selector: details
    params:
      url: The destination URL of the webhook endpoint.
- name: webhook_endpoint_token
  endpoint:
    path: /webhook_endpoints/webhook-endpoint-token
    method: GET
    data_selector: details
    params: {}
- name: delete_webhook_endpoint
  endpoint:
    path: /webhook_endpoints/webhook-endpoint-token
    method: DELETE
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: webhook_token
  endpoint:
    path: /webhooks/webhook-token
    method: GET
- name: webhook_replay
  endpoint:
    path: /webhooks/webhook-token/replay
    method: PUT
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: response
    params: {}
- name: plan_token
  endpoint:
    path: /plans/plan-token
    method: GET
    data_selector: response
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: response
    params: {}
- name: update_plan
  endpoint:
    path: /plans/plan-token
    method: PUT
    data_selector: response
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/plan-token
    method: DELETE
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /plans/plan-token/subscriptions
    method: GET
    data_selector: response
    params: {}
- name: create_subscription
  endpoint:
    path: /plans/plan-token/subscriptions
    method: POST
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /plans/plan-token/subscriptions
    method: GET
    data_selector: response
    params: {}
- name: create_subscription
  endpoint:
    path: /plans/plan-token/subscriptions
    method: POST
    data_selector: response
    params:
      customer_token: customer_token
      card_token: card_token
      include_setup_fee: true
- name: delete_subscription
  endpoint:
    path: /plans/plan-token
    method: DELETE
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /plans/plan-token/subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: response
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/sub-token
    method: GET
    data_selector: response
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/sub-token
    method: DELETE
    data_selector: response
    params: {}
- name: ledger
  endpoint:
    path: /subscriptions/sub-token/ledger
    method: GET
- name: reactivate_subscription
  endpoint:
    path: /subscriptions/sub-token/reactivate
    method: PUT
- name: merchants
  endpoint:
    path: /merchants
    method: GET
    data_selector: response
    params: {}
- name: default_settings
  endpoint:
    path: /merchants/default_settings
    method: GET
    data_selector: response
    params: {}
- name: default_settings
  endpoint:
    path: /1/merchants/default_settings
    method: GET
    data_selector: response
- name: merchant_token
  endpoint:
    path: /1/merchants/merchant-token
    method: GET
    data_selector: response
- name: search_merchants
  endpoint:
    path: /1/merchants/search
    method: GET
    data_selector: response
- name: default_settings
  endpoint:
    path: /merchants/default_settings
    method: GET
- name: apple_pay_domains
  endpoint:
    path: /apple_pay/domains
    method: GET
- name: apple_pay_host_check
  endpoint:
    path: /apple_pay/host_check
    method: GET
- name: apple_pay_sessions
  endpoint:
    path: /apple_pay/sessions
    method: POST
- name: apple_pay_certificates
  endpoint:
    path: /apple_pay/certificates
    method: GET
- name: apple_pay_certificates
  endpoint:
    path: /apple_pay/certificates
    method: GET
- name: apple_pay_sessions
  endpoint:
    path: /apple_pay/sessions
    method: POST
- name: certificate-token
  endpoint:
    path: /apple_pay/certificate-token
    method: DELETE
- name: disputes
  endpoint:
    path: /disputes
    method: GET
- name: search_disputes
  endpoint:
    path: /disputes/search
    method: GET
- name: dispute_details
  endpoint:
    path: /disputes/dispute-token
    method: GET
- name: dispute_activity
  endpoint:
    path: /disputes/dispute-token/activity
    method: GET
- name: dispute_evidence
  endpoint:
    path: /disputes/dispute-token/evidence
    method: GET
- name: update_dispute_evidence
  endpoint:
    path: /disputes/dispute-token/evidence
    method: PUT
- name: submit_dispute_evidence
  endpoint:
    path: /disputes/dispute-token/evidence
    method: POST
- name: accept_dispute
  endpoint:
    path: /disputes/dispute-token/accept
    method: POST
- name: dispute_accept
  endpoint:
    path: /disputes/dispute-token/evidence
    method: POST
- name: dispute_activity
  endpoint:
    path: /disputes/dispute-token/activity
    method: GET
- name: dispute_update
  endpoint:
    path: /disputes/dispute-token/evidence
    method: PUT
- name: accept_dispute
  endpoint:
    path: /disputes/dispute-token/accept
    method: POST
- name: upload_file
  endpoint:
    path: /files
    method: POST
    data_selector: file
    params:
      content_type: multipart/form-data
      purpose: The reason for uploading the file
- name: file_details
  endpoint:
    path: /files/file-token
    method: GET
    data_selector: file details
    params: {}
- name: delete_file
  endpoint:
    path: /files/file-token
    method: DELETE
    data_selector: No Content
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: POST
    data_selector: response
    params: {}
- name: charges_verify
  endpoint:
    path: /charges/verify
    method: GET
    data_selector: charge
    params: {}
- name: Hosted Fields
  endpoint:
    path: /developers/integration-guides/hosted-fields
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /1/customer
    method: POST
    data_selector: response
    params: {}
- name: charge
  endpoint:
    path: /1/charges
    method: POST
    data_selector: response
    params: {}
- name: plans
  endpoint:
    path: /1/plans
    method: POST
    data_selector: response
    params: {}
- name: customers
  endpoint:
    path: /1/customers
    method: POST
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /1/subscriptions
    method: POST
    data_selector: response
    params: {}
- name: recipients
  endpoint:
    path: /1/recipients
    method: POST
    data_selector: response
    params: {}
- name: balance
  endpoint:
    path: /1/balance
    method: GET
    data_selector: response.available
    params: {}
- name: transfers
  endpoint:
    path: /1/transfers
    method: POST
    data_selector: response
    params: {}
- name: payment_source
  endpoint:
    path: /payment-sources
    method: POST
    data_selector: response
    params: {}
- name: charge
  endpoint:
    path: /charges
    method: POST
    data_selector: response
    params: {}
- name: payment_sources
  endpoint:
    path: /developers/api-reference/payment-sources
    method: POST
    data_selector: response
    params: {}
- name: charges
  endpoint:
    path: /developers/api-reference/charges
    method: POST
    data_selector: response
    params: {}
- name: webhook_endpoints
  endpoint:
    path: /developers/api-reference/webhook-endpoints
    method: POST
    data_selector: webhook
    params: {}
- name: webhook_requests
  endpoint:
    path: /developers/api-reference/webhooks
    method: GET
    data_selector: requests
    params: {}
- name: bank_account
  endpoint:
    path: /1/bank_accounts
    method: POST
    data_selector: response
    params: {}
notes:
- Some objects may return nulls in deeply nested fields
- Signup is fast and free. No lock-in contracts or monthly fees.
- Simple cancellations available for subscriptions.
- Automatic surcharging allows you to pass on processing fees to your customers.
- Process debit and credit card payments online, with built-in support for a range
  of card brands.
- No Merchant Account required
- Refund customers in the currency they paid in. We take care of any currency exchange
  required.
- Payment Page allows customers to specify the amount they pay.
- Custom fields can be added for additional information.
- Requires setup of connected app in api
- Requires setup of account and ID verification.
- No lock-in contracts or hidden fees.
- Charges in dashboard are intended for one-off transactions.
- Uses OAuth2 with refresh token — requires setup of connected app in Fat Zebra
- You will not indicate that its products or services are endorsed by any of the Networks.
- You must keep the information in Your Account current.
- You must not use Payments Services to facilitate illegal Transactions.
- You must comply with all Network Rules applicable to merchants, including but not
  limited to the Network Rules provided by Eftpos, Visa, MasterCard, and American
  Express.
- All card scheme representations and marks must be given equal representation on
  any signage, decals or other identification when promoting payment methods.
- You will not impose an excessive fee or surcharge on a customer that seeks to use
  an eligible payment card.
- You must provide Us with the Transaction Receipt and any other required evidence
  of the transaction within seven (7) days if You are asked by Us to provide it.
- You will submit all card transactions for processing no later than three (3) days
  from the date of authorisation.
- You must disclose Your return and refund policies (which must comply with Applicable
  Law) to Your Customers on Your website or application.
- You may only process a Transaction as a recurring Transaction if You have obtained
  Customer permission (either electronically or in hardcopy) to periodically charge
  for a recurring service.
- We may require You to fund a cash reserve in an amount that reflects Our assessment
  of risk.
- We will provide You with statements on a monthly basis.
- This Direct Debit Authority supplements Exhibit 1 and the Master Agreement and governs
  your use of Direct Debit services.
- The parties acknowledge that the Pin Services operate as described on the website
  at www.pinpayments.com.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- You must register with Us and create Your Account.
- You must comply with all Network Rules applicable to merchants.
- You may only accept payment using payment cards for bona fide legal commercial transactions.
- Pin Payments takes several steps to prevent unauthorised disclosure or modification
  of sensitive information.
- Credit card information is encrypted and stored in a system completely isolated
  from Pin Payments.
- All requests to our website and API are forced to use HTTPS to ensure encrypted
  communications.
- Unable to find the answer you need? Contact our team for assistance.
- If you have customers who need to accept online payments, let Pin Payments help
  you look like an expert.
- No open positions at the moment.
- Pin Payments offers an all-in-one multi-currency payment system
- Services expanded to New Zealand in 2016
- Pin Payments is currently only available to businesses in Australia and New Zealand.
- Fast and free setup
- Local support available
- Each Pin Payments account includes a Xero add-on that enables you to offer customers
  the option of paying Xero invoices using their credit card online.
- Your Xero invoices will continue to be marked as paid following your customer processing
  their payment online.
- Fast and free setup - Get started today with no setup fees or lock-in contracts.
- Local support - Email or call our local support staff when you need help.
- Webhooks should only be configured from within Shopify. There is no need to configure
  Webhooks in your Pin Payments account to use Shopify.
- Rates start at only 1.6% + 30c per transaction
- Chargebee integrates directly with Pin Payments, no third party plugins required.
- Docmosis can easily accept their customer card payments in USD and settle the funds
  in AUD.
- Pin Payments provides the ability to support payments in various currencies.
- Timely integrates directly with Pin Payments, no third party plugins required.
- Globetrotting uses Xero to invoice clients for their rides from their WooCommerce
  website.
- A payment source token can only be used once, to create either a charge or an authorisation.
- If no charge or authorisation is created within one month, the token will automatically
  expire.
- Disputes will always be of category fraudulent as this is assumed to be the most
  common category.
- Transfers can only be made using the funds in the available balance.
- 3D Secure is supported via the Payment Page.
- Hosted Fields allows outsourcing of payment card data handling for PCI-DSS compliance.
- Pin Payments can store customers’ card details securely on file.
- Uses API key for authentication.
- Requires manual transfer setup in account to use payouts.
- Apple Pay does not allow the configuration of test cards within its online wallet,
  so you will need to use real card details with our test environment. However, no
  funds will be debited from the card when creating a test charge.
- Apple Pay does not allow the configuration of test cards within its online wallet,
  so you will need to use real card details with the test environment.
- Ensure your integration meets the requirements outlined in the Google Pay Web integration
  checklist
- Your merchant token is displayed in the Google Pay section of your dashboard
- Webhook requests include a 'Pin-Signature' HTTP header for verification.
- We recommend using Hosted Fields where possible.
- The lack of 'name' attributes on these inputs prevents the browser from submitting
  them to your server.
errors:
- '404 not_found: The requested resource was not found.'
- '429 rate_limited: API use has exceeded rate limits.'
- '500 unknown_error: A non–specific error occurred at Pin Payments or an upstream
  service provider.'
- '503 unavailable: The server cannot handle the request (typically because it is
  down for maintenance).'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Invalid credentials or token expired.'
- '400 Bad Request: Invalid request parameters.'
- 'Excessive Chargebacks: May lead to suspension of services.'
- 'Material adverse change in financial condition: May lead to termination.'
- '403 transaction_forbidden: Your account does not have permission to perform this
  transaction'
- '404 not_found: The requested resource could not be found.'
- '422 three_d_secure_unavailable: 3DS is not available with this configuration'
- '403: transaction_forbidden: Your account does not have permission to perform this
  transaction'
- '404: not_found: The requested resource could not be found.'
- '422: three_d_secure_unavailable: 3DS is not available with this configuration'
- '404: not_found'
- '400 invalid_state: Cannot cancel subscription when state is cancelled'
- '402: insufficient_pin_balance'
- '422: invalid_resource'
- '400 card_declined: The card was declined'
- '400 insufficient_funds: There are not enough funds available to process the requested
  amount'
- '400 invalid_cvv: The card verification code (cvc) was not in the correct format'
- '400 invalid_card: The card was invalid'
- '400 processing_error: An error occurred while processing the card'
- '400 suspected_fraud: The transaction was flagged as possibly fraudulent and subsequently
  declined'
- '400 gateway_error: An upstream error occurred while processing the transaction.
  Please try again.'
- '400 unknown: Sorry, an unknown error has occurred. This is being investigated'
- '400 invalid_expiry: Invalid expiry date in the past'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Endpoint does not exist'
- '404: resource_not_found'
- '404 resource_not_found: No resource was found at this URL.'
- '400: cannot_replay_webhook'
- '401 unauthorized: Not authorised'
- '400 dispute_already_under_review: The dispute is already under review'
- '400 dispute_already_resolved: The dispute has already been resolved'
- '400 dispute_already_cancelled: The dispute has already been cancelled'
- '400 dispute_already_expired: The dispute has already expired'
- '400 dispute_already_won: The dispute was already won'
- '400 dispute_already_lost: The dispute has already been lost'
- '400 dispute_already_accepted: The dispute has already been accepted'
- '400 no_dispute_evidence_provided: No dispute evidence has been provided'
- '400 dispute_already_lost: The dispute was already lost'
- '400: dispute_evidence_already_submitted'
- '202 - Accepted: Payment request is being processed.'
- '201 - Success: Charge created without 3DS.'
- 'invalid_resource: One or more parameters were missing or invalid'
- 'number_invalid: A valid card number is required'
- '201 Created: Successful request'
- '400 Bad Request: Check your parameters.'
- '401 Unauthorized: Ensure your API key is valid.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your merchant token or integration settings'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://dashboard.pinpayments.com
  auth:
    type: oauth2
source_metadata: null
