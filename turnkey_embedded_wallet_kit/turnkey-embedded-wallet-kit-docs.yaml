resources:
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: wallets
  endpoint:
    path: /api/wallets
    method: GET
    data_selector: data
    params: {}
- name: sendOtp
  endpoint:
    path: /sendOtp
    method: POST
- name: verifyOtp
  endpoint:
    path: /verifyOtp
    method: POST
- name: createOauthSession
  endpoint:
    path: /createOauthSession
    method: POST
- name: sendCredential
  endpoint:
    path: /sendCredential
    method: POST
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: response
- name: whoami
  endpoint:
    path: /public/v1/whoami
    method: GET
- name: wallet
  endpoint:
    path: /api/v1/wallets
    method: GET
    data_selector: wallets
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: transactions
- name: llms_txt
  endpoint:
    path: https://docs.turnkey.com/llms.txt
    method: GET
- name: llms_full_txt
  endpoint:
    path: https://docs.turnkey.com/llms-full.txt
    method: GET
- name: sign_transaction
  endpoint:
    path: /public/v1/submit/sign_transaction
    method: POST
    data_selector: parameters
- name: features
  endpoint:
    path: /features
    method: GET
- name: permissions
  endpoint:
    path: /permissions
    method: GET
- name: resource_limits
  endpoint:
    path: /resource_limits
    method: GET
- name: sub_organizations
  endpoint:
    path: /sub_organizations
    method: GET
- name: create_sub_organization
  endpoint:
    path: /api/sub-organizations/create
    method: POST
- name: delete_sub_organization
  endpoint:
    path: /api/sub-organizations/delete
    method: DELETE
    params:
      deleteWithoutExport: 'false'
- name: resource_limits
  endpoint:
    path: /concepts/resource-limits
    method: GET
- name: policy
  endpoint:
    path: /policies
    method: GET
    data_selector: policies
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: activity
  endpoint:
    path: /public/v1/submit
    method: POST
    data_selector: activity
    params: {}
- name: boot_proof
  endpoint:
    path: /boot_proof
    method: GET
    data_selector: proofs
- name: app_proof
  endpoint:
    path: /app_proof
    method: GET
    data_selector: proofs
- name: signup
  endpoint:
    path: /v1/signup
    method: POST
- name: otp_init
  endpoint:
    path: /v1/otp_init
    method: POST
- name: otp_verify
  endpoint:
    path: /v1/otp_verify
    method: POST
- name: otp_login
  endpoint:
    path: /v1/otp_login
    method: POST
- name: oauth2_authenticate
  endpoint:
    path: /v1/oauth2_authenticate
    method: POST
- name: oauth_login
  endpoint:
    path: /v1/oauth_login
    method: POST
- name: get_account
  endpoint:
    path: /v1/account
    method: POST
- name: get_wallet_kit_config
  endpoint:
    path: /v1/wallet_kit_config
    method: POST
- name: pre_generated_wallets
  endpoint:
    path: /wallets/pregenerated-wallets
    method: POST
- name: import_wallets
  endpoint:
    path: /wallets/import-wallets
    method: POST
- name: export_wallets
  endpoint:
    path: /wallets/export-wallets
    method: POST
- name: embedded_wallet
  endpoint:
    path: /?request=<encoded-json-rpc>
    method: GET
    data_selector: accounts
    params: {}
- name: OTP-based method
  endpoint:
    path: /authentication/otp
    method: POST
    data_selector: activity
    params:
      otpType: OTP_TYPE_EMAIL
      contact: user@example.com
      otpLength: 6
      expirationSeconds: 300
- name: Credential Bundle method
  endpoint:
    path: /authentication/credential-bundle
    method: POST
    data_selector: activity
    params:
      email: user@example.com
      expirationSeconds: 900
- name: ui_customization
  endpoint:
    path: /sdk/react/ui-customization
    method: GET
    data_selector: ui
    params: {}
- name: createSuborgParams
  endpoint:
    path: /createSuborgParams
    method: POST
    data_selector: createSuborgParams
    params: {}
- name: createSubOrganization
  endpoint:
    path: /api-reference/activities/create-sub-organization
    method: POST
- name: initOtp
  endpoint:
    path: /api-reference/activities/init-generic-otp
    method: POST
- name: verifyOtp
  endpoint:
    path: /api-reference/activities/verify-generic-otp
    method: POST
- name: otpLogin
  endpoint:
    path: /api-reference/activities/login-with-otp
    method: POST
- name: oauthLogin
  endpoint:
    path: /api-reference/activities/login-with-oauth
    method: POST
- name: wallet_authentication
  endpoint:
    path: /wallet/authentication
    method: POST
    data_selector: data
- name: wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: wallets
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
notes:
- API-based authentication available with API keys.
- Requires setup of connected app in Turnkey
- API calls must be signed with a valid credential
- Session lifetime defaults to 900 seconds (15 minutes)
- Uses OAuth2 with refresh token — requires setup of connected app in Turnkey
- only P-256 keys (API_KEY_CURVE_P256) are currently supported
- Transition to higher-order libraries like @turnkey/sdk-server and @turnkey/sdk-react
  for convenience.
- Turnkey operates at the cryptographic curve level rather than specific assets.
- Turnkey documentation is now AI-enhanced.
- Currently we do not allow multiple users to be associated with the same email address.
- Losing your Turnkey API key doesn’t mean you’ll lose your crypto.
- Turnkey’s embedded wallets enable you to integrate secure, custom wallet experiences
  directly into your product.
- An API keypair is required to authenticate requests to the Turnkey API.
- Wallets are collections of cryptographic key pairs typically used for sending and
  receiving digital assets.
- Wallet seeds are generated with a default mnemonic length of 12 words.
- The mnemonic is permanent and cannot be altered.
- You can create an unlimited number of sub-organizations within a single organization.
- Almost all actions on Turnkey are implicitly denied by default.
- Root users bypass any policies.
- Every Turnkey user needs at least one long-lived credential (a passkey, or non-expiring
  API key).
- Submissions requests, if valid, produce an Activity.
- The submission API is idempotent.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- This package will soon be discontinued, if you’re starting a new project, we recommend
  using @turnkey/core instead.
- Enclave applications in Turnkey’s infrastructure are stateless, meaning there is
  no persistent data held behind the enclave boundary.
- Data is stored in a PostgreSQL instance in our primary AWS account.
- Turnkey Verified will automatically fetch and verify proofs when new wallets are
  created.
- Turnkey does not trust anything running outside of secure enclaves.
- The Turnkey Whitepaper is available online at whitepaper.turnkey.com.
- Customers are responsible for securely integrating their product with Turnkey.
- Turnkey provides extensive documentation and examples for building multiple products.
- Turnkey highly values the security of our software, services, and systems and we
  actively encourage the ethical reporting of any security vulnerabilities discovered.
- Session JWT is only metadata signed by Turnkey that references the client side stored
  API keypair.
- Session keys can be specified to any amount of time using the expirationSeconds
  parameter. Default is 900 seconds (15 minutes).
- A user can have up to 10 expiring API keys at any given time.
- Turnkey does not offer out-of-the-box gas sponsorships for the EVM ecosystem.
- Turnkey supports both API authentication and user authentication for authenticating
  access to wallets.
- API authentication uses an API secret.
- Allows pre-generated wallets for users before authentication
- Users can export their mnemonic or private key without exposing it to Turnkey or
  the application.
- Uses UI-based authentication to access private keys
- The embedded wallet is a standalone web app often a separate Next.js project
- Request IDs & queueing – generate a unique `id` per RPC call, store promises by
  `id`, include it in every `postMessage` so concurrent requests cannot collide.
- Session persistence – cache `accounts` and `chainId` in `localStorage` and return
  them on subsequent `eth_accounts` calls without re-authenticating.
- Popup cancellation & timeouts – reject pending promises if the user closes the window
  or after a reasonable timeout.
- Network switching – implement `wallet_switchEthereumChain`, update `store.chainId`,
  and emit `chainChanged`.
- Security – validate `event.origin`, allow-list dApp domains, move hard-coded URLs
  (`localhost:3001`, RPC endpoints) into environment variables.
- Additional EIPs – support `wallet_watchAsset`, `eth_addEthereumChain`, etc., if
  dApps require them.
- Fiat Onramp is available to all Enterprise customers. To enable this feature, please
  reach out to the Turnkey team.
- Users are limited to 10 long-lived API keys and 10 expiring API keys.
- Enable Auth Proxy and customize auth methods including email OTP and passkeys.
- You can create and manage embedded wallets using the Embedded Wallet Kit.
- passkey and wallet login will occur in the frontend using stampLogin, so you do
  not need to implement any additional endpoints for those.
- Automatic OAuth redirect handling
- No manual URL parsing/token exchange/injection
- Modal handlers replace manual iframe client orchestration
- No direct bundle injection/extraction steps
- We recommend avoiding using portal-based components from Radix UI (or similar libraries
  that use portals) while Turnkey’s modals are open.
- You can also try switching to headless-ui components since Turnkey’s modals are
  built with headless-ui under the hood.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'HTTP 429: Too many requests. Please wait and try again in a few seconds'
- 'failed to load key bytes: failed to read from "/.config/turnkey/keys/quickstart.private":
  open /.config/turnkey/keys/quickstart.private: no such file or directory'
- failed to associate the API key with an organization; please manually specify the
  organization ID
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - Turnkey
  - TurnkeyProvider
  - useTurnkey
client:
  base_url: https://app.turnkey.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://app.turnkey.com/dashboard/auth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
