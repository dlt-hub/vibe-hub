resources:
- name: STAC collections
  endpoint:
    path: /getsascollections
    method: GET
    data_selector: assets
    params: {}
- name: STAC items
  endpoint:
    path: /getsasitems
    method: GET
    data_selector: assets
    params: {}
- name: Get specific STAC items
  endpoint:
    path: /postsassearch
    method: POST
    data_selector: filter
- name: Get data management search parameters
  endpoint:
    path: /getsasqueryables
    method: GET
    data_selector: parameters
- name: Get all STAC items from a specific STAC collection
  endpoint:
    path: /getsasitems
    method: GET
    data_selector: items
- name: Get specific STAC item
  endpoint:
    path: /getsasitem
    method: GET
    data_selector: item
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: catalog
  endpoint:
    path: /catalog
    method: GET
    data_selector: catalog
    params: {}
- name: Airbus Basemap
  endpoint:
    path: /data/ab-basemap
    method: GET
    data_selector: records
    params: {}
- name: Airbus Elevation
  endpoint:
    path: /data/ab-elevation
    method: GET
    data_selector: records
    params: {}
- name: Airbus Ground Control Points
  endpoint:
    path: /data/ab-gcp
    method: GET
    data_selector: records
    params: {}
- name: Airbus Space Reference Points
  endpoint:
    path: /data/ab-srp
    method: GET
    data_selector: records
    params: {}
- name: ASTERRA
  endpoint:
    path: /data/asterra
    method: GET
    data_selector: records
    params: {}
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
    data_selector: records
    params: {}
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
    data_selector: records
    params: {}
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
    data_selector: records
    params: {}
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
    data_selector: records
    params: {}
- name: Bluesky Aerial
  endpoint:
    path: /data/bluesky-aerial
    method: GET
    data_selector: records
    params: {}
- name: Bluesky Elevation
  endpoint:
    path: /data/bluesky-elevation
    method: GET
    data_selector: records
    params: {}
- name: Capella Space
  endpoint:
    path: /data/capella-space
    method: GET
    data_selector: records
    params: {}
- name: Dragonette-1
  endpoint:
    path: /data/dragonette-1
    method: GET
    data_selector: records
    params: {}
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
    data_selector: records
    params: {}
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
    data_selector: records
    params: {}
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
    data_selector: records
    params: {}
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
    data_selector: records
    params: {}
- name: Getmapping Aerial
  endpoint:
    path: /data/getmapping-aerial
    method: GET
    data_selector: records
    params: {}
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
    data_selector: records
    params: {}
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
    data_selector: records
    params: {}
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
    data_selector: records
    params: {}
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
    data_selector: records
    params: {}
- name: Hexagon Aerial
  endpoint:
    path: /data/hxgn-aerial
    method: GET
    data_selector: records
    params: {}
- name: Hexagon Elevation DSM
  endpoint:
    path: /data/hxgn-elevation
    method: GET
    data_selector: records
    params: {}
- name: HotSat-1
  endpoint:
    path: /data/hotsat-1
    method: GET
    data_selector: records
    params: {}
- name: ICEYE
  endpoint:
    path: /data/iceye
    method: GET
    data_selector: records
    params: {}
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
    data_selector: records
    params: {}
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
    data_selector: records
    params: {}
- name: KOMPSAT-5
  endpoint:
    path: /data/kompsat-5
    method: GET
    data_selector: records
    params: {}
- name: Landsat 8
  endpoint:
    path: /data/landsat-8
    method: GET
    data_selector: records
    params: {}
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
    data_selector: records
    params: {}
- name: Near Space Labs
  endpoint:
    path: /data/near-space-labs
    method: GET
    data_selector: records
    params: {}
- name: NEXTMap
  endpoint:
    path: /data/nextmap
    method: GET
    data_selector: records
    params: {}
- name: PlanetDEM
  endpoint:
    path: /data/planetdem
    method: GET
    data_selector: records
    params: {}
- name: PlanetSAT
  endpoint:
    path: /data/planetsat
    method: GET
    data_selector: records
    params: {}
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
    data_selector: records
    params: {}
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
    data_selector: records
    params: {}
- name: Regrid
  endpoint:
    path: /data/regrid
    method: GET
    data_selector: records
    params: {}
- name: Satellogic
  endpoint:
    path: /data/satellogic
    method: GET
    data_selector: records
    params: {}
- name: Sentinel-2
  endpoint:
    path: /data/sentinel-2
    method: GET
    data_selector: records
    params: {}
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
    data_selector: records
    params: {}
- name: Spire Maritime
  endpoint:
    path: /data/spire
    method: GET
    data_selector: records
    params: {}
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
    data_selector: records
    params: {}
- name: StriX
  endpoint:
    path: /data/strix
    method: GET
    data_selector: records
    params: {}
- name: TerraSAR-X
  endpoint:
    path: /data/terrasar-x
    method: GET
    data_selector: records
    params: {}
- name: TripleSat
  endpoint:
    path: /data/triplesat
    method: GET
    data_selector: records
    params: {}
- name: Umbra
  endpoint:
    path: /data/umbra
    method: GET
    data_selector: records
    params: {}
- name: Vexcel Aerial
  endpoint:
    path: /data/vexcel-aerial
    method: GET
    data_selector: records
    params: {}
- name: Vexcel Elevate
  endpoint:
    path: /data/vexcel-elevate
    method: GET
    data_selector: records
    params: {}
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
    data_selector: records
    params: {}
- name: WorldDEM Neo
  endpoint:
    path: /data/worlddem-neo
    method: GET
    data_selector: records
    params: {}
- name: WorldDEM4Ortho
  endpoint:
    path: /data/worlddem-4ortho
    method: GET
    data_selector: records
    params: {}
- name: tasking_orders
  endpoint:
    path: /data/tasking-process
    method: GET
    data_selector: orders
    params: {}
- name: catalog_orders
  endpoint:
    path: /data/catalog-process
    method: GET
    data_selector: orders
    params: {}
- name: Airbus Elevation
  endpoint:
    path: /data/ab-elevation
    method: GET
    data_selector: AOI-clipped imagery
    params:
      coverage: Global
      input: AOI at least 10 km wide
      output: AOI-clipped imagery
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
    data_selector: AOI-clipped imagery
    params:
      coverage: Global
      input: AOI
- name: minimum_charges_tasking
  endpoint:
    path: /data/tasking-min-charges
    method: GET
    data_selector: charges
    params: {}
- name: digital_elevation_models
  endpoint:
    path: /data/elevation-models
    method: GET
    data_selector: models
    params: {}
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
    data_selector: records
    params: {}
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
    data_selector: records
    params: {}
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
    data_selector: records
    params: {}
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
    data_selector: records
    params: {}
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
    data_selector: records
    params: {}
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
    data_selector: records
    params: {}
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
    data_selector: records
    params: {}
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
    data_selector: records
    params: {}
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
    data_selector: records
    params: {}
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
    data_selector: records
    params: {}
- name: HotSat-1
  endpoint:
    path: /data/hotsat-1
    method: GET
    data_selector: records
    params: {}
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
    data_selector: records
    params: {}
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
    data_selector: records
    params: {}
- name: Landsat 8
  endpoint:
    path: /data/landsat-8
    method: GET
    data_selector: records
    params: {}
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
    data_selector: records
    params: {}
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
    data_selector: records
    params: {}
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
    data_selector: records
    params: {}
- name: Sentinel-2
  endpoint:
    path: /data/sentinel-2
    method: GET
    data_selector: records
    params: {}
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
    data_selector: records
    params: {}
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
    data_selector: records
    params: {}
- name: TripleSat
  endpoint:
    path: /data/triplesat
    method: GET
    data_selector: records
    params: {}
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
    data_selector: records
    params: {}
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
    data_selector: records
    params: {}
- name: Capella Space
  endpoint:
    path: /data/capella-space
    method: GET
    data_selector: records
    params: {}
- name: StriX
  endpoint:
    path: /data/strix
    method: GET
    data_selector: records
    params: {}
- name: Bluesky Elevation
  endpoint:
    path: /data/bluesky-elevation
    method: GET
    data_selector: imagery
    params:
      availability: From 2022
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
    data_selector: imagery
    params:
      availability: From 2020
- name: Hexagon Elevation DSM
  endpoint:
    path: /data/hxgn-elevation
    method: GET
    data_selector: imagery
    params:
      availability: 'Europe: From 2014 to 2020  North America: From 2016 to 2023'
- name: NEXTMap
  endpoint:
    path: /data/nextmap
    method: GET
    data_selector: imagery
    params:
      availability: From 2020 to 2024
- name: PlanetDEM
  endpoint:
    path: /data/planetdem
    method: GET
    data_selector: imagery
    params:
      availability: From 2021
- name: Vexcel Elevate
  endpoint:
    path: /data/vexcel-elevate
    method: GET
    data_selector: imagery
    params:
      availability: From 2018
- name: WorldDEM Neo
  endpoint:
    path: /data/worlddem-neo
    method: GET
    data_selector: imagery
    params:
      availability: From 2017 to 2021
- name: WorldDEM4Ortho
  endpoint:
    path: /data/worlddem-4ortho
    method: GET
    data_selector: imagery
    params:
      availability: From 2010 to 2015
- name: minimum_charges_catalog
  endpoint:
    path: /data/catalog/minimum-charges
    method: GET
    data_selector: records
- name: Airbus Basemap
  endpoint:
    path: /data/ab-basemap
    method: GET
- name: Airbus Elevation
  endpoint:
    path: /data/ab-elevation
    method: GET
- name: Airbus Ground Control Points
  endpoint:
    path: /data/ab-gcp
    method: GET
- name: Airbus Space Reference Points
  endpoint:
    path: /data/ab-srp
    method: GET
- name: ASTERRA
  endpoint:
    path: /data/asterra
    method: GET
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
- name: Bluesky Aerial
  endpoint:
    path: /data/bluesky-aerial
    method: GET
- name: Bluesky Elevation
  endpoint:
    path: /data/bluesky-elevation
    method: GET
- name: Capella Space
  endpoint:
    path: /data/capella-space
    method: GET
- name: Dragonette-1
  endpoint:
    path: /data/dragonette-1
    method: GET
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
- name: Getmapping Aerial
  endpoint:
    path: /data/getmapping-aerial
    method: GET
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
- name: Hexagon Aerial
  endpoint:
    path: /data/hxgn-aerial
    method: GET
- name: Hexagon Elevation DSM
  endpoint:
    path: /data/hxgn-elevation
    method: GET
- name: HotSat-1
  endpoint:
    path: /data/hotsat-1
    method: GET
- name: ICEYE
  endpoint:
    path: /data/iceye
    method: GET
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
- name: KOMPSAT-5
  endpoint:
    path: /data/kompsat-5
    method: GET
- name: Landsat 8
  endpoint:
    path: /data/landsat-8
    method: GET
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
- name: Near Space Labs
  endpoint:
    path: /data/near-space-labs
    method: GET
- name: NEXTMap
  endpoint:
    path: /data/nextmap
    method: GET
- name: PlanetDEM
  endpoint:
    path: /data/planetdem
    method: GET
- name: PlanetSAT
  endpoint:
    path: /data/planetsat
    method: GET
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
- name: Regrid
  endpoint:
    path: /data/regrid
    method: GET
- name: Satellogic
  endpoint:
    path: /data/satellogic
    method: GET
- name: Sentinel-2
  endpoint:
    path: /data/sentinel-2
    method: GET
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
- name: Spire Maritime
  endpoint:
    path: /data/spire
    method: GET
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
- name: StriX
  endpoint:
    path: /data/strix
    method: GET
- name: TerraSAR-X
  endpoint:
    path: /data/terrasar-x
    method: GET
- name: TripleSat
  endpoint:
    path: /data/triplesat
    method: GET
- name: Umbra
  endpoint:
    path: /data/umbra
    method: GET
- name: Vexcel Aerial
  endpoint:
    path: /data/vexcel-aerial
    method: GET
- name: Vexcel Elevate
  endpoint:
    path: /data/vexcel-elevate
    method: GET
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
- name: WorldDEM Neo
  endpoint:
    path: /data/worlddem-neo
    method: GET
- name: WorldDEM4Ortho
  endpoint:
    path: /data/worlddem-4ortho
    method: GET
- name: geojson
  endpoint:
    path: /data/formats
    method: GET
    data_selector: features
    params: {}
- name: kml
  endpoint:
    path: /data/formats
    method: GET
    data_selector: features
    params: {}
- name: shapefile
  endpoint:
    path: /data/formats
    method: GET
    data_selector: features
    params: {}
- name: wkt
  endpoint:
    path: /data/formats
    method: GET
    data_selector: features
    params: {}
- name: optical_products
  endpoint:
    path: /data/collections?collectionType=Catalog&productType=Optical
    method: GET
    data_selector: records
- name: sar_products
  endpoint:
    path: /data/collections?collectionType=Catalog&productType=SAR
    method: GET
    data_selector: records
- name: Airbus Elevation
  endpoint:
    path: /data/ab-elevation
    method: GET
    data_selector: imagery
    params:
      Input: AOI at least 10 km wide
      Output: AOI-clipped imagery
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
    data_selector: imagery
    params:
      Input: AOI
      Output: AOI-clipped imagery
- name: spatial_resolution
  endpoint:
    path: /data/optical-resolution
    method: GET
    data_selector: collections
- name: minimum_charges_tasking
  endpoint:
    path: /data/tasking-min-charges
    method: GET
    data_selector: charges
    params: {}
- name: digital_elevation_models
  endpoint:
    path: /data/elevation-models
    method: GET
    data_selector: models
    params: {}
- name: acquisition_time_frames
  endpoint:
    path: /data/acquisition
    method: GET
    data_selector: data
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
    data_selector: ''
    params: {}
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
    data_selector: ''
    params: {}
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
    data_selector: ''
    params: {}
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
    data_selector: ''
    params: {}
- name: Dragonette-1
  endpoint:
    path: /data/dragonette-1
    method: GET
    data_selector: ''
    params: {}
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
    data_selector: ''
    params: {}
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
    data_selector: ''
    params: {}
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
    data_selector: ''
    params: {}
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
    data_selector: ''
    params: {}
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
    data_selector: ''
    params: {}
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
    data_selector: ''
    params: {}
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
    data_selector: ''
    params: {}
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
    data_selector: ''
    params: {}
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
    data_selector: ''
    params: {}
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
    data_selector: ''
    params: {}
- name: Near Space Labs
  endpoint:
    path: /data/near-space-labs
    method: GET
    data_selector: ''
    params: {}
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
    data_selector: ''
    params: {}
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
    data_selector: ''
    params: {}
- name: Satellogic
  endpoint:
    path: /data/satellogic
    method: GET
    data_selector: ''
    params: {}
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
    data_selector: ''
    params: {}
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
    data_selector: ''
    params: {}
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
    data_selector: ''
    params: {}
- name: catalog_order
  endpoint:
    path: /data/catalog/order
    method: POST
    data_selector: order
    params: {}
- name: Airbus Elevation
  endpoint:
    path: /data/ab-elevation
    method: GET
    data_selector: records
    params: {}
- name: Bluesky Elevation
  endpoint:
    path: /data/bluesky-elevation
    method: GET
    data_selector: records
    params: {}
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
    data_selector: records
    params: {}
- name: Hexagon Elevation DSM
  endpoint:
    path: /data/hxgn-elevation
    method: GET
    data_selector: records
    params: {}
- name: NEXTMap
  endpoint:
    path: /data/nextmap
    method: GET
    data_selector: records
    params: {}
- name: PlanetDEM
  endpoint:
    path: /data/planetdem
    method: GET
    data_selector: records
    params: {}
- name: Vexcel Elevate
  endpoint:
    path: /data/vexcel-elevate
    method: GET
    data_selector: records
    params: {}
- name: WorldDEM Neo
  endpoint:
    path: /data/worlddem-neo
    method: GET
    data_selector: records
    params: {}
- name: WorldDEM4Ortho
  endpoint:
    path: /data/worlddem-4ortho
    method: GET
    data_selector: records
    params: {}
- name: Bluesky Elevation
  endpoint:
    path: /data/bluesky-elevation
    method: GET
    data_selector: AOI-clipped imagery
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
    data_selector: AOI-clipped imagery
- name: Hexagon Elevation DSM
  endpoint:
    path: /data/hxgn-elevation
    method: GET
    data_selector: AOI-clipped imagery
- name: NEXTMap
  endpoint:
    path: /data/nextmap
    method: GET
    data_selector: AOI-clipped imagery
- name: PlanetDEM
  endpoint:
    path: /data/planetdem
    method: GET
    data_selector: AOI-clipped imagery
- name: Vexcel Elevate
  endpoint:
    path: /data/vexcel-elevate
    method: GET
    data_selector: AOI-clipped imagery
- name: WorldDEM Neo
  endpoint:
    path: /data/worlddem-neo
    method: GET
    data_selector: AOI-clipped imagery
- name: WorldDEM4Ortho
  endpoint:
    path: /data/worlddem-4ortho
    method: GET
    data_selector: AOI-clipped imagery
- name: Airbus Basemap
  endpoint:
    path: /data/ab-basemap
    method: GET
    data_selector: Tiled imagery
- name: Airbus Ground Control Points
  endpoint:
    path: /data/ab-gcp
    method: GET
    data_selector: Point data
- name: Airbus Space Reference Points
  endpoint:
    path: /data/ab-srp
    method: GET
    data_selector: Image chips
- name: ASTERRA
  endpoint:
    path: /data/asterra
    method: GET
    data_selector: Soil moisture maps
- name: PlanetSAT
  endpoint:
    path: /data/planetsat
    method: GET
    data_selector: Tiled imagery
- name: Regrid
  endpoint:
    path: /data/regrid
    method: GET
    data_selector: Parcel data
- name: Spire Maritime
  endpoint:
    path: /data/spire
    method: GET
    data_selector: Historical vessel data
- name: optical_acquisition_modes
  endpoint:
    path: /data/optical-acquisition-modes
    method: GET
- name: GeoJSON
  endpoint:
    path: /data/formats
    method: GET
    data_selector: files
    params: {}
- name: KML
  endpoint:
    path: /data/formats
    method: GET
    data_selector: files
    params: {}
- name: Shapefile
  endpoint:
    path: /data/formats
    method: GET
    data_selector: files
    params: {}
- name: WKT
  endpoint:
    path: /data/formats
    method: GET
    data_selector: files
    params: {}
- name: Optical collections
  endpoint:
    path: /data/optical-collections
    method: GET
    data_selector: collections
    params: {}
- name: DEM collections
  endpoint:
    path: /data/dem-collections
    method: GET
    data_selector: collections
    params: {}
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
    data_selector: records
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
    data_selector: records
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
    data_selector: records
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
    data_selector: records
- name: Dragonette-1
  endpoint:
    path: /data/dragonette-1
    method: GET
    data_selector: records
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
    data_selector: records
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
    data_selector: records
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
    data_selector: records
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
    data_selector: records
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
    data_selector: records
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
    data_selector: records
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
    data_selector: records
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
    data_selector: records
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
    data_selector: records
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
    data_selector: records
- name: Near Space Labs
  endpoint:
    path: /data/near-space-labs
    method: GET
    data_selector: records
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
    data_selector: records
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
    data_selector: records
- name: Satellogic
  endpoint:
    path: /data/satellogic
    method: GET
    data_selector: records
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
    data_selector: records
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
    data_selector: records
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
    data_selector: records
- name: Airbus Elevation
  endpoint:
    path: /data/ab-elevation
    method: GET
    data_selector: records
    params: {}
- name: Bluesky Elevation
  endpoint:
    path: /data/bluesky-elevation
    method: GET
    data_selector: records
    params: {}
- name: Globhe Elevation
  endpoint:
    path: /data/globhe-elevation
    method: GET
    data_selector: records
    params: {}
- name: Hexagon Elevation DSM
  endpoint:
    path: /data/hxgn-elevation
    method: GET
    data_selector: records
    params: {}
- name: NEXTMap
  endpoint:
    path: /data/nextmap
    method: GET
    data_selector: records
    params: {}
- name: PlanetDEM
  endpoint:
    path: /data/planetdem
    method: GET
    data_selector: records
    params: {}
- name: Vexcel Elevate
  endpoint:
    path: /data/vexcel-elevate
    method: GET
    data_selector: records
    params: {}
- name: WorldDEM Neo
  endpoint:
    path: /data/worlddem-neo
    method: GET
    data_selector: records
    params: {}
- name: WorldDEM4Ortho
  endpoint:
    path: /data/worlddem-4ortho
    method: GET
    data_selector: records
    params: {}
- name: optical_satellite_imagery
  endpoint:
    path: /data/optical-satellite-imagery
    method: GET
    data_selector: collections
    params: {}
- name: optical_drone_imagery
  endpoint:
    path: /data/optical-drone-imagery
    method: GET
    data_selector: collections
    params: {}
- name: optical_aerial_imagery
  endpoint:
    path: /data/optical-aerial-imagery
    method: GET
    data_selector: collections
    params: {}
- name: sar_satellite_imagery
  endpoint:
    path: /data/sar-satellite-imagery
    method: GET
    data_selector: collections
    params: {}
- name: digital_elevation_models
  endpoint:
    path: /data/digital-elevation-models
    method: GET
    data_selector: collections
    params: {}
- name: Optical acquisition modes
  endpoint:
    path: /data/optical-acquisition-modes
    method: GET
    data_selector: records
- name: panchromatic
  endpoint:
    path: /data/panchromatic
    method: GET
    data_selector: records
- name: rgb
  endpoint:
    path: /data/rgb
    method: GET
    data_selector: records
- name: yellow
  endpoint:
    path: /data/yellow
    method: GET
    data_selector: records
- name: deep_blue
  endpoint:
    path: /data/deep_blue
    method: GET
    data_selector: records
- name: red_edge
  endpoint:
    path: /data/red_edge
    method: GET
    data_selector: records
- name: nir
  endpoint:
    path: /data/nir
    method: GET
    data_selector: records
- name: swir
  endpoint:
    path: /data/swir
    method: GET
    data_selector: records
- name: tir
  endpoint:
    path: /data/tir
    method: GET
    data_selector: records
- name: primary
  endpoint:
    path: /data/elevation-models
    method: GET
    data_selector: levels
    params: {}
- name: georectified
  endpoint:
    path: /data/georectified
    method: GET
    data_selector: levels
    params: {}
- name: orthorectified
  endpoint:
    path: /data/orthorectified
    method: GET
    data_selector: levels
    params: {}
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
    data_selector: records
    params: {}
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
    data_selector: records
    params: {}
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
    data_selector: records
    params: {}
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
    data_selector: records
    params: {}
- name: Dragonette-1
  endpoint:
    path: /data/dragonette-1
    method: GET
    data_selector: records
    params: {}
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
    data_selector: records
    params: {}
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
    data_selector: records
    params: {}
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
    data_selector: records
    params: {}
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
    data_selector: records
    params: {}
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
    data_selector: records
    params: {}
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
    data_selector: records
    params: {}
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
    data_selector: records
    params: {}
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
    data_selector: records
    params: {}
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
    data_selector: records
    params: {}
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
    data_selector: records
    params: {}
- name: Near Space Labs
  endpoint:
    path: /data/near-space-labs
    method: GET
    data_selector: records
    params: {}
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
    data_selector: records
    params: {}
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
    data_selector: records
    params: {}
- name: Satellogic
  endpoint:
    path: /data/satellogic
    method: GET
    data_selector: records
    params: {}
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
    data_selector: records
    params: {}
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
    data_selector: records
    params: {}
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
    data_selector: records
    params: {}
- name: basic
  endpoint:
    path: /data/radiometric-processing/basic
    method: GET
    data_selector: records
- name: TOA
  endpoint:
    path: /data/radiometric-processing/TOA
    method: GET
    data_selector: records
- name: surface_reflectance
  endpoint:
    path: /data/radiometric-processing/surface-reflectance
    method: GET
    data_selector: records
- name: display
  endpoint:
    path: /data/radiometric-processing/display
    method: GET
    data_selector: records
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
    data_selector: records
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
    data_selector: records
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
    data_selector: records
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
    data_selector: records
- name: Dragonette-1
  endpoint:
    path: /data/dragonette-1
    method: GET
    data_selector: records
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
    data_selector: records
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
    data_selector: records
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
    data_selector: records
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
    data_selector: records
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
    data_selector: records
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
    data_selector: records
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
    data_selector: records
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
    data_selector: records
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
    data_selector: records
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
    data_selector: records
- name: Near Space Labs
  endpoint:
    path: /data/near-space-labs
    method: GET
    data_selector: records
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
    data_selector: records
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
    data_selector: records
- name: Satellogic
  endpoint:
    path: /data/satellogic
    method: GET
    data_selector: records
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
    data_selector: records
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
    data_selector: records
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
    data_selector: records
- name: sar_processing_levels
  endpoint:
    path: /sar-processing-levels
    method: GET
    data_selector: processing_levels
    params: {}
- name: tasking_priority
  endpoint:
    path: /data/tasking-priority
    method: GET
    data_selector: priority_tiers
    params: {}
- name: revisit_rates
  endpoint:
    path: /data/revisit-rates
    method: GET
    data_selector: data
    params: {}
- name: spectral_bands
  endpoint:
    path: /data/spectral-bands
    method: GET
    data_selector: bands
- name: AxelGlobe
  endpoint:
    path: /data/axelglobe
    method: GET
    data_selector: records
- name: Beijing-3A
  endpoint:
    path: /data/beijing-3a
    method: GET
    data_selector: records
- name: Beijing-3N
  endpoint:
    path: /data/beijing-3n
    method: GET
    data_selector: records
- name: BlackSky
  endpoint:
    path: /data/blacksky
    method: GET
    data_selector: records
- name: EROS-B
  endpoint:
    path: /data/eros-b
    method: GET
    data_selector: records
- name: EROS-C
  endpoint:
    path: /data/eros-c
    method: GET
    data_selector: records
- name: Dragonette-1
  endpoint:
    path: /data/dragonette-1
    method: GET
    data_selector: records
- name: GEOSAT 1
  endpoint:
    path: /data/geosat-1
    method: GET
    data_selector: records
- name: GEOSAT 2
  endpoint:
    path: /data/geosat-2
    method: GET
    data_selector: records
- name: GHGSat
  endpoint:
    path: /data/ghgsat
    method: GET
    data_selector: records
- name: Globhe Optical
  endpoint:
    path: /data/globhe-optical
    method: GET
    data_selector: records
- name: GÖKTÜRK-1
  endpoint:
    path: /data/gokturk-1
    method: GET
    data_selector: records
- name: KOMPSAT-3
  endpoint:
    path: /data/kompsat-3
    method: GET
    data_selector: records
- name: KOMPSAT-3A
  endpoint:
    path: /data/kompsat-3a
    method: GET
    data_selector: records
- name: Maxar
  endpoint:
    path: /data/maxar
    method: GET
    data_selector: records
- name: Near Space Labs
  endpoint:
    path: /data/near-space-labs
    method: GET
    data_selector: records
- name: Pléiades
  endpoint:
    path: /data/pleiades
    method: GET
    data_selector: records
- name: Pléiades Neo
  endpoint:
    path: /data/pleiades-neo
    method: GET
    data_selector: records
- name: Satellogic
  endpoint:
    path: /data/satellogic
    method: GET
    data_selector: records
- name: SkySat
  endpoint:
    path: /data/skysat
    method: GET
    data_selector: records
- name: SPOT
  endpoint:
    path: /data/spot
    method: GET
    data_selector: records
- name: Vision-1
  endpoint:
    path: /data/vision-1
    method: GET
    data_selector: records
- name: coordinate_reference_systems
  endpoint:
    path: /coordinate-reference-systems
    method: GET
    data_selector: records
- name: northern_hemisphere_epsg
  endpoint:
    path: /northern_hemisphere_epsg
    method: GET
    data_selector: epsg_codes
    params: {}
- name: southern_hemisphere_epsg
  endpoint:
    path: /southern_hemisphere_epsg
    method: GET
    data_selector: epsg_codes
    params: {}
- name: UTM Zone 1N
  endpoint:
    path: /epsg/26901
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 2N
  endpoint:
    path: /epsg/26902
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 3N
  endpoint:
    path: /epsg/26903
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 4N
  endpoint:
    path: /epsg/26904
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 5N
  endpoint:
    path: /epsg/26905
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 6N
  endpoint:
    path: /epsg/26906
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 7N
  endpoint:
    path: /epsg/26907
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 8N
  endpoint:
    path: /epsg/26908
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 9N
  endpoint:
    path: /epsg/26909
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 10N
  endpoint:
    path: /epsg/26910
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 11N
  endpoint:
    path: /epsg/26911
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 12N
  endpoint:
    path: /epsg/26912
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 13N
  endpoint:
    path: /epsg/26913
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 14N
  endpoint:
    path: /epsg/26914
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 15N
  endpoint:
    path: /epsg/26915
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 16N
  endpoint:
    path: /epsg/26916
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 17N
  endpoint:
    path: /epsg/26917
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 18N
  endpoint:
    path: /epsg/26918
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 19N
  endpoint:
    path: /epsg/26919
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 20N
  endpoint:
    path: /epsg/26920
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 21N
  endpoint:
    path: /epsg/26921
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 22N
  endpoint:
    path: /epsg/26922
    method: GET
    data_selector: EPSG Code
- name: UTM Zone 23N
  endpoint:
    path: /epsg/26923
    method: GET
    data_selector: EPSG Code
- name: assets
  endpoint:
    path: /data-management/assets
    method: GET
    data_selector: records
- name: processing_results
  endpoint:
    path: /processing/results
    method: GET
    data_selector: records
- name: processing_results
  endpoint:
    path: /processing/download
    method: GET
- name: credits
  endpoint:
    path: /v2/payments/balances
    method: GET
- name: feasibility_studies
  endpoint:
    path: /v2/tasking/feasibility-studies
    method: GET
- name: eulas
  endpoint:
    path: /v2/eulas
    method: GET
- name: collections
  endpoint:
    path: /v2/collections
    method: GET
- name: data_products
  endpoint:
    path: /v2/data-products
    method: GET
- name: geospatial_collections
  endpoint:
    path: /reference/listcollectionsv2
    method: GET
    data_selector: collections
- name: specific_collection
  endpoint:
    path: /reference/getcollectionv2
    method: GET
    data_selector: collection
- name: data_products
  endpoint:
    path: /reference/listdataproductsv2
    method: GET
    data_selector: dataProducts
- name: specific_data_product
  endpoint:
    path: /reference/getdataproductv2
    method: GET
    data_selector: dataProduct
- name: providers
  endpoint:
    path: /reference/listprovidersv2
    method: GET
    data_selector: providers
- name: specific_provider
  endpoint:
    path: /reference/getproviderv2
    method: GET
    data_selector: provider
- name: EPSG_codes_Northern_Hemisphere
  endpoint:
    path: /epsg/northern_hemisphere
    method: GET
    data_selector: records
- name: EPSG_codes_Southern_Hemisphere
  endpoint:
    path: /epsg/southern_hemisphere
    method: GET
    data_selector: records
- name: geospatial_collections
  endpoint:
    path: /reference/listcollectionsv2
    method: GET
- name: utm_nad83
  endpoint:
    path: /utm/nad83
    method: GET
    data_selector: epsg_codes
    params: {}
- name: british_national_grid
  endpoint:
    path: /british/national/grid
    method: GET
    data_selector: epsg_code
    params: {}
- name: compound_coordinate_systems
  endpoint:
    path: /compound/coordinate/systems
    method: GET
    data_selector: coordinate_systems
    params: {}
- name: get_geospatial_collection
  endpoint:
    path: /reference/getcollectionv2
    method: GET
- name: get_json_schema
  endpoint:
    path: /reference/getjsonschema
    method: GET
- name: estimate_cost
  endpoint:
    path: /reference/estimatev2order
    method: GET
- name: create_order
  endpoint:
    path: /reference/createv2orderunderworkspace
    method: POST
- name: check_feasibility_study
  endpoint:
    path: /reference/checkorderfeasibility
    method: GET
- name: get_orders
  endpoint:
    path: /reference/listordersv2
    method: GET
- name: get_order_coverage
  endpoint:
    path: /reference/getordercoverage
    method: GET
- name: geospatial_collections
  endpoint:
    path: /reference/listcollectionsv2
    method: GET
- name: geospatial_collection
  endpoint:
    path: /reference/getcollectionv2
    method: GET
- name: search_catalog_by_host
  endpoint:
    path: /reference/searchbyhost
    method: GET
- name: get_quicklook
  endpoint:
    path: /reference/getquicklookimage
    method: GET
- name: get_thumbnail
  endpoint:
    path: /reference/getthumbnailimage
    method: GET
- name: estimate_order_cost
  endpoint:
    path: /reference/estimatev2order
    method: POST
- name: create_order
  endpoint:
    path: /reference/createv2orderunderworkspace
    method: POST
- name: digital_elevation_models
  endpoint:
    path: /data-management/elevation
    method: GET
- name: orders
  endpoint:
    path: /GetOrders
    method: GET
    data_selector: orders
    params: {}
- name: specific_order
  endpoint:
    path: /GetOrder/{orderId}
    method: GET
    data_selector: order
    params: {}
- name: create_geometry
  endpoint:
    path: /reference/addgeometry
    method: POST
    data_selector: featureCollection
- name: get_geometries
  endpoint:
    path: /reference/listgeometries
    method: GET
    data_selector: geometries
- name: get_geometry
  endpoint:
    path: /reference/getgeometry
    method: GET
    data_selector: geometry
- name: update_geometry
  endpoint:
    path: /reference/patchgeometry
    method: PATCH
    data_selector: geometry
- name: processes
  endpoint:
    path: /v2/processing/processes
    method: GET
- name: processing_job
  endpoint:
    path: /v2/processing/processes/{processId}/execution
    method: POST
- name: get_processing_jobs
  endpoint:
    path: /v2/processing/jobs
    method: GET
- name: get_specific_stac_items
  endpoint:
    path: /v2/assets/stac/items
    method: POST
- name: download_assets
  endpoint:
    path: /create_download_url
    method: GET
    data_selector: url
- name: stream_assets
  endpoint:
    path: /get_stac_items
    method: GET
    data_selector: assets
- name: cnam_transformation_status
  endpoint:
    path: /cnam_transformation
    method: GET
    data_selector: status
- name: tasking_orders_feasibility
  endpoint:
    path: /v2/tasking/orders/feasibility
    method: POST
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: provider_info
  endpoint:
    path: /v2/providers/{provider-id}
    method: GET
- name: assets
  endpoint:
    path: /v2/assets
    method: GET
- name: balance
  endpoint:
    path: /v2/payments/balances
    method: GET
- name: webhooks_events
  endpoint:
    path: /webhooks/events
    method: GET
- name: EULAs
  endpoint:
    path: /reference/listeulasv2
    method: GET
    data_selector: EULAs
    params: {}
- name: EULA
  endpoint:
    path: /reference/geteulav2
    method: GET
    data_selector: EULA
    params: {}
- name: EULA documents
  endpoint:
    path: /reference/listeuladocumentsv2
    method: GET
    data_selector: EULA documents
    params: {}
- name: EULA document
  endpoint:
    path: /reference/geteuladocumentv2
    method: GET
    data_selector: EULA document
    params: {}
- name: Accept EULA document
  endpoint:
    path: /reference/accepteuladocumentv2
    method: POST
    data_selector: acceptance confirmation
    params: {}
- name: assets_stac_collections
  endpoint:
    path: /v2/assets/stac/collections
    method: GET
- name: tasking_feasibility_studies
  endpoint:
    path: /v2/tasking/feasibility-studies
    method: GET
- name: payments_balances
  endpoint:
    path: /v2/payments/balances
    method: GET
- name: eulas
  endpoint:
    path: /v2/eulas
    method: GET
- name: processing_processes
  endpoint:
    path: /v2/processing/processes
    method: GET
- name: data_product_schema
  endpoint:
    path: /data_product_schema
    method: GET
    data_selector: schema
- name: estimate_order
  endpoint:
    path: /estimate_order
    method: POST
    data_selector: order_estimate
- name: place_order
  endpoint:
    path: /place_order
    method: POST
    data_selector: order
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
- name: geospatial_collections
  endpoint:
    path: /reference/listcollectionsv2
    method: GET
    data_selector: collections
- name: data_products
  endpoint:
    path: /reference/listdataproductsv2
    method: GET
    data_selector: data_products
- name: providers
  endpoint:
    path: /reference/listprovidersv2
    method: GET
    data_selector: providers
- name: geospatial_collections
  endpoint:
    path: /reference/listcollectionsv2
    method: GET
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: tasking_order_details
  endpoint:
    path: /tasking/order/details
    method: GET
    data_selector: order_details
- name: get_collection
  endpoint:
    path: /reference/getcollectionv2
    method: GET
- name: get_json_schema
  endpoint:
    path: /reference/getjsonschema
    method: GET
- name: estimate_cost
  endpoint:
    path: /reference/estimatev2order
    method: GET
- name: create_order
  endpoint:
    path: /reference/createv2orderunderworkspace
    method: POST
- name: check_feasibility
  endpoint:
    path: /reference/checkorderfeasibility
    method: GET
- name: get_quotations
  endpoint:
    path: /reference/listtaskingquotation
    method: GET
- name: get_orders
  endpoint:
    path: /reference/listordersv2
    method: GET
- name: get_order_coverage
  endpoint:
    path: /reference/getordercoverage
    method: GET
- name: Order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: Order
    params: {}
- name: geospatial_collections
  endpoint:
    path: /reference/listcollectionsv2
    method: GET
- name: catalog_search
  endpoint:
    path: /reference/searchbyhost
    method: GET
- name: get_geospatial_collection
  endpoint:
    path: /reference/getcollectionv2
    method: GET
- name: get_json_schema
  endpoint:
    path: /reference/getjsonschema
    method: GET
- name: estimate_order_cost
  endpoint:
    path: /reference/estimatev2order
    method: POST
- name: create_order
  endpoint:
    path: /reference/createv2orderunderworkspace
    method: POST
- name: order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /api/v2/orders
    method: GET
- name: order
  endpoint:
    path: /api/v2/orders/{order_id}
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: Order
    params: {}
- name: geometries
  endpoint:
    path: /geometries
    method: GET
    data_selector: geometries
- name: create_geometry
  endpoint:
    path: /geometries
    method: POST
    data_selector: geometry
- name: get_geometry
  endpoint:
    path: /geometries/{geometry_id}
    method: GET
    data_selector: geometry
- name: update_geometry
  endpoint:
    path: /geometries/{geometry_id}
    method: PATCH
    data_selector: geometry
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: processes
  endpoint:
    path: /v2/processing/processes
    method: GET
    data_selector: processes
- name: run_process
  endpoint:
    path: /v2/processing/processes/{process-id}/execution
    method: POST
    data_selector: results
- name: get_processing_jobs
  endpoint:
    path: /v2/processing/jobs
    method: GET
    data_selector: jobs
- name: get_job
  endpoint:
    path: /v2/processing/jobs/{job-id}
    method: GET
    data_selector: job
- name: get_specific_stac_items
  endpoint:
    path: /v2/assets/stac/search
    method: POST
    data_selector: features
- name: create_download_url
  endpoint:
    path: /v2/assets/{asset-id}/download
    method: GET
    data_selector: url
- name: order
  endpoint:
    path: /up42/orders
    method: GET
    data_selector: orders
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: EULAs
  endpoint:
    path: /reference/listeulasv2
    method: GET
    data_selector: EULAs
- name: EULA Document
  endpoint:
    path: /reference/listeuladocumentsv2
    method: GET
    data_selector: EULA documents
- name: Accept EULA Document
  endpoint:
    path: /reference/accepteuladocumentv2
    method: POST
    data_selector: acceptance
    params: {}
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: details
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: Order
    params: {}
- name: Webhook
  endpoint:
    path: /sdk/sdk-webhooks#class-webhook
    method: GET
    data_selector: ''
    params: {}
- name: Tools
  endpoint:
    path: /sdk/sdk-tools#class-tools
    method: GET
    data_selector: ''
    params: {}
- name: ImageFile
  endpoint:
    path: /sdk/sdk-utils#class-imagefile
    method: GET
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: orders
- name: get_data_product_schema
  endpoint:
    path: /catalog/get_data_product_schema
    method: GET
    data_selector: data
- name: estimate_order
  endpoint:
    path: /catalog/estimate_order
    method: POST
    data_selector: data
- name: place_order
  endpoint:
    path: /catalog/place_order
    method: POST
    data_selector: data
- name: construct_search_parameters
  endpoint:
    path: /catalog/construct_search_parameters
    method: POST
    data_selector: data
- name: search
  endpoint:
    path: /catalog/search
    method: POST
    data_selector: data
- name: construct_order_parameters
  endpoint:
    path: /catalog/construct_order_parameters
    method: POST
    data_selector: data
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: order
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: Iterator[Order]
    params:
      workspace_id: Optional[str]
      order_type: Optional[OrderType]
      status: Optional[List[OrderStatus]]
      sub_status: Optional[List[OrderSubStatus]]
      display_name: Optional[str]
      tags: Optional[List[str]]
      sort_by: Optional[utils.SortingField]
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: tasking_order_details
  endpoint:
    path: /tasking_order_details
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /order
    method: GET
    data_selector: order_details
    params:
      order_id: 3bf00b63-7188-4b04-aa27-d78e4cd32c01
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: Order
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: tasking_order_details
  endpoint:
    path: /tasking_order_details
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: Order
    params: {}
- name: track
  endpoint:
    path: /track
    method: GET
    data_selector: order_status
    params:
      report_time: 120
- name: track_status
  endpoint:
    path: /track_status
    method: GET
    data_selector: order_status
    params:
      report_time: 120
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: orders
    params: {}
- name: order_template
  endpoint:
    path: /order_template
    method: GET
- name: order
  endpoint:
    path: /api/tasking/orders
    method: GET
    data_selector: order_details
- name: Job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: orders
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: Iterator[Job]
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: DetectionTreesSpacept
  endpoint:
    path: /processing_templates/DetectionTreesSpacept
    method: POST
    data_selector: job_template
    params: {}
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: orders
    params: {}
- name: DetectionTreesSpacept
  endpoint:
    path: /processing_templates/DetectionTreesSpacept
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: SingleItemJobTemplate
  endpoint:
    path: /single-item-job-template
    method: GET
    data_selector: attributes
    params: {}
- name: MultiItemJobTemplate
  endpoint:
    path: /multi-item-job-template
    method: GET
    data_selector: attributes
    params: {}
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: order
  endpoint:
    path: /sdk/sdk-order#class-order
    method: GET
    data_selector: details
    params: {}
- name: Pansharpening
  endpoint:
    path: /processing/pansharpening
    method: POST
    data_selector: output
    params: {}
- name: DetectionChangeSimularity
  endpoint:
    path: /processing/detection-change-simularity
    method: POST
    data_selector: output
    params: {}
- name: all_orders
  endpoint:
    path: /orders
    method: GET
    data_selector: Iterator[Order]
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: Pansharpening
  endpoint:
    path: /processing/pansharpening
    method: POST
    data_selector: result
    params: {}
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: STAC collection
  endpoint:
    path: /get_collections
    method: GET
- name: STAC item
  endpoint:
    path: /get_items
    method: GET
- name: order
  endpoint:
    path: /sdk/sdk-order
    method: GET
    data_selector: orders
    params: {}
- name: stac_asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: track
  endpoint:
    path: /track
    method: GET
    data_selector: report_time
    params:
      report_time: '120'
- name: collections
  endpoint:
    path: /get_collections
    method: GET
    data_selector: collections
- name: collection
  endpoint:
    path: /get_collection/{stac_collection_id}
    method: GET
    data_selector: collection
- name: items
  endpoint:
    path: /get_items/{stac_item_id}
    method: GET
    data_selector: items
- name: stac_item
  endpoint:
    path: /stac/items
    method: GET
    data_selector: items
- name: stac_collection
  endpoint:
    path: /stac/collections
    method: GET
    data_selector: collections
- name: jobs
  endpoint:
    path: /jobs/all
    method: GET
    data_selector: Iterator[Job]
    params:
      max_duration: 500
      sort_by: up42.JobSorting.process_id
- name: stac_asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: DetectionTreesSpacept
  endpoint:
    path: /processing_templates/DetectionTreesSpacept
    method: POST
    data_selector: result
    params: {}
- name: stac_collection
  endpoint:
    path: /stac/collections
    method: GET
    data_selector: collections
- name: stac_item
  endpoint:
    path: /stac/items
    method: GET
    data_selector: items
- name: stac_item
  endpoint:
    path: /stac/items
    method: GET
    data_selector: items
    params: {}
- name: DetectionTreesSpacept
  endpoint:
    path: /processing_templates/DetectionTreesSpacept
    method: POST
- name: collections
  endpoint:
    path: /api/collections
    method: GET
    data_selector: collections
- name: items
  endpoint:
    path: /api/items
    method: GET
    data_selector: items
- name: SingleItemJobTemplate
  endpoint:
    path: /developers/api-processing/SingleItemJobTemplate
    method: GET
    data_selector: attributes
- name: MultiItemJobTemplate
  endpoint:
    path: /developers/api-processing/MultiItemJobTemplate
    method: GET
    data_selector: attributes
- name: stac_asset
  endpoint:
    path: /items/{stac_item_id}/assets
    method: GET
    data_selector: assets
    params: {}
- name: Pansharpening
  endpoint:
    path: /processing/pansharpening
    method: POST
- name: DetectionChangeSimularity
  endpoint:
    path: /processing/detection-change-simularity
    method: POST
- name: Pansharpening
  endpoint:
    path: /processing/pansharpening
    method: POST
    data_selector: job_template
- name: stac_items
  endpoint:
    path: /search
    method: POST
    data_selector: items
    params: {}
- name: bulk_deletion
  endpoint:
    path: /bulk_deletion
    method: POST
    data_selector: results
    params: {}
- name: collection
  endpoint:
    path: /stac/collections
    method: GET
    data_selector: collections
- name: collections
  endpoint:
    path: /api/collections
    method: GET
- name: items
  endpoint:
    path: /api/items
    method: GET
- name: collections
  endpoint:
    path: /stac/collections
    method: GET
- name: items
  endpoint:
    path: /stac/items
    method: GET
- name: stac_asset
  endpoint:
    path: /stac/assets
    method: GET
    data_selector: assets
    params: {}
- name: item
  endpoint:
    path: /items
    method: GET
- name: collection
  endpoint:
    path: /collections
    method: GET
- name: stac_collection
  endpoint:
    path: /get_collection/{stac_collection_id}
    method: GET
    data_selector: up42
- name: stac_items
  endpoint:
    path: /get_items/{stac_item_id}
    method: GET
    data_selector: up42
- name: stac_collections
  endpoint:
    path: /get_collections
    method: GET
    data_selector: collections
- name: bulk_deletion
  endpoint:
    path: /delete
    method: POST
    data_selector: item_ids_to_delete
    params: {}
- name: collections
  endpoint:
    path: /get_collections
    method: GET
    data_selector: collections
- name: items
  endpoint:
    path: /get_items
    method: GET
    data_selector: items
- name: STAC asset
  endpoint:
    path: /path/to/stac/asset
    method: GET
    data_selector: assets
    params: {}
- name: collection
  endpoint:
    path: /get_collections
    method: GET
    data_selector: collections
- name: item
  endpoint:
    path: /get_items
    method: GET
    data_selector: items
- name: stac_item
  endpoint:
    path: /stac/items
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params:
      workspace_orders: true
      return_json: true
      limit: 10
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: stac_asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: STAC items
  endpoint:
    path: /api/stac/items
    method: GET
    data_selector: items
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: Iterator[Asset]
    params: {}
- name: update_metadata
  endpoint:
    path: /api/assets/update_metadata
    method: POST
    data_selector: dict
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /v1/collections
    method: GET
    data_selector: collections
    params: {}
- name: item
  endpoint:
    path: /v1/items
    method: GET
    data_selector: items
    params: {}
- name: stac_asset
  endpoint:
    path: /v2/assets/stac/collections/{collection-id}/items/{item-id}
    method: GET
    data_selector: str
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
- name: stac_item
  endpoint:
    path: /api/v1/stac/items
    method: GET
    data_selector: items
    params: {}
- name: update_metadata
  endpoint:
    path: /sdk/sdk-data-management#update
    method: POST
    data_selector: dict
    params: {}
- name: get_stac_asset_url
  endpoint:
    path: /sdk/sdk-data-management#fileurl
    method: GET
    data_selector: str
    params: {}
- name: download
  endpoint:
    path: /sdk/sdk-data-management#filedownload
    method: GET
    data_selector: List[str]
    params: {}
- name: bulk_deletion
  endpoint:
    path: /delete
    method: POST
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
- name: webhook
  endpoint:
    path: /webhook
    method: GET
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /webhook
    method: GET
    data_selector: webhooks
    params: {}
- name: stac_asset
  endpoint:
    path: /v2/assets/stac/collections/{collection-id}/items/{item-id}
    method: GET
    data_selector: str
    params: {}
- name: webhook
  endpoint:
    path: /webhook
    method: GET
    data_selector: webhooks
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: update_metadata
  endpoint:
    path: /sdk/sdk-data-management#update
    method: POST
    data_selector: dict
    params: {}
- name: get_stac_asset_url
  endpoint:
    path: /sdk/sdk-data-management#fileurl
    method: GET
    data_selector: str
    params: {}
- name: download
  endpoint:
    path: /sdk/sdk-data-management#filedownload
    method: POST
    data_selector: List[str]
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: NBR
  endpoint:
    path: /api/nbr
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /workspace/webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: tasking_order
  endpoint:
    path: /tasking/orders
    method: GET
    data_selector: orders
    params: {}
- name: catalog_order
  endpoint:
    path: /catalog/orders
    method: GET
    data_selector: orders
    params: {}
- name: tasking
  endpoint:
    path: /data/tasking-process
    method: GET
- name: catalog
  endpoint:
    path: /data/catalog-process
    method: GET
notes:
- STAC is a standard for geospatial data.
- A STAC collection can produce multiple STAC items.
- Fast-track your success with premium support services.
- Order new imagery data to be captured over a specific area and at a given time.
- Get archive imagery data from a particular date range in the past.
- 'Last updated: September 25, 2025'
- Automate geospatial data search, retrieval, and analysis using the API.
- Uses OAuth2 with refresh token — requires setup of connected app in UP42
- Access UP42 data directly from within ESRI's ArcGIS Pro.
- Get up to €5,000 in funding from ESA for your non-commercial projects with UP42.
- Common email domains aren’t supported. To register, use an email address that belongs
  to your organization’s email domain.
- Individuals can’t register on the platform. You can only register on behalf of an
  organization.
- 'Both account plans are designed to be flexible: start for free and only pay for
  what you order.'
- The only distinction is the extent of company information you provide to us for
  compliance reasons.
- Ensure API keys are kept secure
- Check API usage limits to avoid throttling
- Invited users will have their own workspace.
- Credits are allocated per account, not per user.
- Credits expire 24 months after they have been allocated to your account.
- When you purchase credits for the first time, we’ll perform a compliance check.
- UP42 credits are non-refundable, but in some cases, you can get back credits spent
  on an order or a job.
- A refund request can be approved or declined in about 10–15 business days based
  on the factors that contributed to the issue.
- Accept EULA to order new data from a given collection.
- UP42 offers plans with more assistance and ordering support outside of regular business
  hours.
- Most products on the UP42 platform are available to all users. However, some products
  require a preliminary screening.
- Only Professional plan users can request access to restricted tasking and catalog
  collections.
- If you want to order the chosen collection for the first time, request access to
  the collection.
- Once you have access, you won’t need to request access again.
- The optimal cloud coverage is 10%, but for cloudy climates, it can be up to 30%.
- For flat regions, use a higher B/H ratio. For mountainous or dense urban areas,
  use a lower B/H ratio.
- Tasking orders are usually delivered in increments when any part of the AOI is covered.
- If a tasking order hasn’t been delivered within the agreed period, contact the Operations
  team with the order ID to extend the tasking period or get a partial refund.
- Use webhooks to get notifications when assets have been delivered.
- 'Last updated: September 23, 2025'
- There can be a minimum charge when creating a tasking order.
- Dynamic pricing will apply for orders exceeding the specified area.
- A collection that also provides catalog data might have different minimum charges
  for catalog data products.
- Feasibility studies depend on time frames. When time frames change, it affects the
  conditions of the tasking acquisition.
- Different collections accept start and end dates differently — some allow for a
  shorter acquisition window, and some require a longer lead time.
- Credits will be deducted upon successful completion of the created catalog order.
  The transaction can’t be reversed.
- If a EULA is updated, you need to re-accept it before creating your next order.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- There can be a minimum charge when creating a catalog order.
- Different collections accept different geometry types.
- POIs are only supported for tasking orders.
- Optimal cloud coverage is 10%, but for cloudy climates, it can be up to 30%.
- For flat regions, use a higher B/H ratio.
- For mountainous or dense urban areas, use a lower B/H ratio.
- UP42’s console offers four map styles to help you visualize geographic data for
  different use cases.
- When creating a tasking order, consider the technical limitations of a given collection.
- Some collections also have a minimum charge that applies to orders smaller than
  a certain size.
- Optical sensors deliver detailed imagery using visible and infrared light but can
  be restricted by weather and lighting.
- SAR sensors capture data in all conditions, day or night.
- Spatial resolution is determined by the sensor’s capabilities and is the optimal
  resolution.
- The smaller the number, the better the resolution.
- Different collections accept acquisition dates differently.
- The actual time frames for completing a tasking order are determined by a feasibility
  study.
- Upon request
- Uses webhooks to get notifications when assets have been delivered.
- Multi-looking is a SAR processing technique that reduces noise by averaging multiple
  independent looks for the same target.
- Complex SAR imagery, especially SLCs, is generally derived from single-look SAR
  data.
- Consider technical limitations of a given collection when creating a catalog order.
- Some collections have a minimum charge that applies to orders smaller than a certain
  size.
- DEMs are referenced to a vertical datum for accurate measures of height above a
  surface.
- Masks are essential in geospatial imagery because they help identify areas with
  unreliable information, like clouds or shadows.
- By filtering out these areas, data processing and analysis is more efficient and
  accurate.
- 'Last updated: September 3, 2025'
- You’ll need to meet the technical catalog limitations before creating a catalog
  order.
- Mono imagery is available on the console, but the availability of stereo and tri-stereo
  may differ depending on the collection. Some imagery is only available upon request.
- Scenes have varying delivery times based on processing requirements.
- A AOI is represented by a polygon, a two-dimensional closed shape, defined by geographical
  coordinates.
- A POI is represented by a point, a specific location, defined by longitude and latitude.
- Stereo and tri-stereo acquisitions require imaging systems to reorient their sensors
  in real time to capture images from different angles.
- Executing these maneuvers may not be successful on the first attempt.
- These types of acquisitions can take longer than a simpler mono acquisition.
- If single-pass image pairs or triplets aren’t available, mono imagery with similar
  inclination angles over the same AOI can be used.
- This approach isn’t suited for AOIs with vegetation cover, and can’t be used for
  subsequent vegetation management analysis.
- Artificial stereo pairs can be ordered using the Python SDK.
- For automated elevation model generation, the optimum B/H ratio is 0.25.
- Processing levels act as a framework for understanding the level of transformation
  and manipulation the data has undergone.
- 'The UP42 console offers four map styles: Base, Satellite, Outdoors, and Light.'
- GSD might vary in the along-track and across-track directions.
- Most collections will provide this as a single averaged value.
- At least one geometric processing level per collection is always integrated, but
  the availability of other levels may differ depending on the collection.
- To select the right data for your use case, it’s important to understand the processing
  levels offered.
- At least one radiometric processing level per collection is always integrated, but
  the availability of other levels may differ depending on the collection. Some levels
  are only available upon request.
- SICD, SIDD, and CPHD files aren’t compatible with most GIS software.
- Common angles include incidence angle and off-nadir angle.
- The geographic coverage is global, but certain areas are restricted.
- Some collections offer the opportunity to specify a tasking priority tier when you
  create an order.
- Weather conditions, especially cloud coverage, can still impact optical sensor acquisitions,
  regardless of the priority tier.
- Bit depth in geospatial imagery refers to the number of bits used to represent each
  pixel’s color or intensity value in the image.
- All raster data is delivered as cloud-optimized GeoTIFFs.
- Some imagery is only available upon request.
- Different modes are used depending on what is required, such as a better azimuth
  resolution or a longer swath.
- Some raster products are delivered with an additional alpha band that acts as a
  transparency mask.
- A coordinate reference system (CRS) defines how geospatial imagery is mapped and
  represented on Earth.
- Larger incidence angles cause foreshortening, making distant objects appear smaller.
- Sensors with tasking capacity can experience a lot of demand which can lead to competition
  for slots, especially during high-demand tasking season from June to August.
- The revisit rate is expressed as the number of attempts per unit of time that the
  sensor makes to try to capture data over a certain area.
- Optical sensors capture light across the electromagnetic spectrum, with different
  wavelengths suited for different insights.
- A spectral band is a specific range of wavelengths on the spectrum.
- Data management is storage powered by STAC functionalities and the cloud-native
  asset model (CNAM).
- All data is retrievable through STAC.
- If the delivered data has quality issues, report this to the Operations team with
  the order ID within 7 days of data delivery to extend the tasking period, retask
  the order, or get a refund.
- Visualizing raster or vector assets is supported, other data types aren’t.
- Manual adjustments in QGIS may be needed for satisfactory image appearance.
- Only data items that come from a supported collection and were added to storage
  starting in 2023 are available for processing.
- The job validation has failed. Fix your input parameters and try again.
- The job has failed.
- Processing results will be added to your account as a new data item.
- The token expires after 30 minutes of inactivity.
- UTM projections become distorted above 84°N and below 80°S.
- Tasking collections have the -tasking suffix in their names.
- If you order a collection for the first time and it has an ACCESS_APPROVAL_REQUIRED
  string in the integrations array, request access to the collection.
- Imagery can be converted to another CRS upon request
- Positional accuracy indicates the reliability of the horizontal and vertical positions
  of geospatial features relative to their datums.
- Accuracy standards allow us to quickly and consistently establish positional reliability
  across different imagery.
- The order placement will fail without required properties.
- Some order statuses indicate that assets can be downloaded.
- You need to request access for certain collections before ordering.
- If an asset was added to storage starting in 2023 and comes from a supported collection,
  it will be transformed by CNAM.
- You can only visualize raster or vector assets. Other data types aren’t supported
  for visualization.
- You can only process items that come from a supported collection and that are added
  to storage starting in 2023.
- The EULA hasn’t been accepted for this process. The job will fail.
- Credits will be deducted upon successful completion of the created processing job.
- If a EULA is updated, you need to re-accept it before creating your next job.
- Cookies may impact your experience of the site and the services we are able to offer.
- Cookies do not store any personally identifiable information.
- The processing results will be added to your account as a new data item.
- Added the `difficulty` response parameter to POST /v2/tasking/orders/feasibility.
- Use the `ids` query parameter to filter results by job IDs in GET /v2/processing/jobs.
- EULAs are legal contracts associated with data products or processing algorithms.
- You can retrieve EULAs and their documents using specified endpoints.
- Supports page-based pagination.
- This class is deprecated and will be removed in `3.0.0` in favor of glossary, order,
  and order template functionality.
- Class CatalogBase is deprecated and will be removed in 3.0.0 in favor of glossary,
  order, and order template functionality.
- Collections serve as the higher-level category, containing one or more data products
  related to the actual configuration of data available for ordering.
- Order tasking and catalog imagery using the SDK.
- 'Order types: TASKING and ARCHIVE'
- You’ll need to request access for certain collections if marked with ACCESS_APPROVAL_REQUIRED.
- Credits will be deducted upon successful completion of the created catalog order.
- Create tasking and catalog orders.
- A geometry is an AOI or a POI you use to create a tasking or a catalog order.
- Only AOIs are supported for feature collections.
- order_details property is deprecated and will be removed in 3.0.0.
- This document does not provide API-specific information or configuration values.
- Some order assets might have been delivered.
- All order assets have been delivered.
- Order types include TASKING and ARCHIVE.
- EULAs are legal contracts between a provider and a product user.
- You can retrieve EULAs associated with data products or processing algorithms.
- order_details property is deprecated and will be removed in 3.0.0
- order_id property is deprecated and will be removed in 3.0.0
- Components indicated with the ⚠️ icon are deprecated.
- Authenticate in a configuration file using cfg_file parameter.
- Authenticate directly in the code using username and password.
- Create tasking and catalog orders using the SDK.
- This class is deprecated and will be removed in 3.0.0 in favor of glossary, order,
  and order template functionality.
- With your consent, we read/store information on your device, process personal data
  and use optional tools for usage analysis, advertising purposes and the integration
  of external content.
- You can revoke your consent to the access/storage of information, the data processing
  and transmission at any time with effect for the future.
- Requires authentication to access order data.
- 'Last updated: September 29, 2025'
- Some objects may return nulls in deeply nested fields
- EULA must be accepted for processing jobs.
- Use itertools.islice to offset and limit the results.
- Instanitate a DetectionTreesSpacept template
- Requires setup of connected app in UP42
- Apply advanced processing to purchased geospatial data.
- Manage geospatial data in your storage with PySTAC.
- The order ID property is deprecated and will be removed in 3.0.0.
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of UP42 account for API access
- Requires initialization of UP42_client object for making requests
- Jobs can have various statuses such as RUNNING, SUCCESSFUL, FAILED.
- Use 'max_duration' to filter jobs based on execution time.
- Accept the EULA through the console or the API and try again.
- Requires a valid STAC item ID to process.
- Requires setup of UP42 client for authentication
- Uses OAuth2 — requires setup of connected app in UP42
- Requires setup of connected app for API access
- Requires one or multiple STAC items as input
- Uses OAuth2
- Some attributes are optional
- Uses grey weights for band processing.
- Requires setup of OAuth2 credentials
- Ensure to handle rate limits during API calls
- A STAC collection is a delivery you receive after a completed order or a finished
  processing job.
- Requires authentication with the SDK
- An item can only be deleted if all items of the same STAC collection are added for
  deletion.
- Uses OAuth2 authentication.
- Requires setup of OAuth2 authentication.
- Class Asset is deprecated and will be removed in 3.0.0 in favor of data management
  functionality.
- Uses OAuth2 for authentication.
- Some assets may not be found if they are deleted or unavailable
- This method is deprecated and will be removed in 3.0.0. Use the update method.
- Class 'Asset' is deprecated and will be removed in 3.0.0 in favor of data management
  functionality.
- A webhook is a method for sending event notifications from one application to another.
- You can set up webhooks to receive notifications for order status updates.
- The Webhook class is deprecated and will be removed in 3.0.0.
- API documentation available at /developers/api-stac
- Webhook class is deprecated and will be removed in 3.0.0.
- 'Class: Webhook is deprecated and will be removed in 3.0.0.'
- This API requires authentication via OAuth2.
- Webhook is a method for sending event notifications.
- This method is deprecated and will be removed in `3.0.0`. Use the [update](/sdk/sdk-data-management#update)
  method.
- The webhook class is deprecated and will be removed in 3.0.0.
- Tools provide access to additional functionalities of the SDK.
- Methods are deprecated and will be removed in 3.0.0
- UP42’s Python SDK version 2 is deprecated and will be replaced by version 3 according
  to the release schedule.
- This class is deprecated and will be removed in 3.0.0.
- Uses OAuth2 for authentication
- UP42’s Python SDK supports GeoJSON, KML, Shapefile, and WKT file formats.
- UP42’s Python SDK supports file formats such as GeoJSON, KML, Shapefile, WKT.
- ESRI’s ArcGIS Pro is a desktop GIS application that lets you analyze, visualize,
  and create maps from geospatial data.
- NDVI is sensitive to atmospheric effects. It doesn’t apply any atmospheric correction.
- NDVI can be saturated when it presents a high level of leaf area index (LAI).
- NDVI results are very sensitive to soil background effects during the early stages
  of crop growth.
- EVI is calculated using red, blue, and near-infrared (NIR) bands.
- EVI ranges between -1 and 1. The healthy vegetation value is somewhere between 0.2
  and 0.8.
- NBR is calculated using near-infrared (NIR) and shortwave infrared (SWIR) bands.
- NBR is sensitive to phenological cycles and characteristics.
- Start for free and only pay for what you order.
- Limited access to the UP42 platform in the Discovery plan.
- Some endpoints may have rate limits
- Track release dates, maintenance timelines, and planned version changes.
- End of functionality is usually 3 months after the end of support.
- Uses username and password for authentication — requires logging into the console
- NDVI is sensitive to atmospheric effects.
- 'EVI improves NDVI in the following ways: Corrects for the difference in atmospheric
  conditions and solar incidence angle.'
- EVI requires the blue band, which limits the number of available remote sensors.
- NBR ranges between -1 and 1.
- HTTPS is required for webhook URLs.
- The only type of data you can order in the Discovery plan is free catalog data from
  Sentinel‑2 and Landsat 8.
- To buy new credits, you need to provide your tax information.
- Order tasking and catalog geospatial collections using the UP42 console.
errors:
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Verify the access token'
- 'FORBIDDEN: Ensure proper permissions are in place'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- If the verification isn’t successful, the original charge will be reversed.
- 'Credit deduction errors: report the issue back within 7 days of deduction.'
- 'Processing job failure: report the issue back within 7 days of job completion.'
- 'REQUEST_LIMIT_EXCEEDED: The provider is reviewing your request.'
- 'QUERY_TIMEOUT: Your organization or use case didn’t meet the provider criteria.'
- If a feasibility study isn’t required, the order is considered feasible within the
  specified parameters.
- If a feasibility study is required, the Operations team will conduct a feasibility
  study.
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- If the acquisition start day passes and the order isn’t activated, a new feasibility
  study will need to be conducted.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- If your order isn’t completed within the specified timeframe, you can request a
  refund or extend the time frames for your order.
- '401 Unauthorized: Check OAuth token and scopes'
- '404 Not Found: Ensure the asset or processing result exists'
- 'Unlicensed: The EULA hasn’t been accepted for this process. The job will fail.'
- 'Rejected: The job has been canceled due to an insufficient account balance. Top
  up your balance and try again.'
- '401 Unauthorized: The credentials are wrong.'
- '404: Check the server URL.'
- '415: The authentication request contains unspecified media types.'
- code: 400
  reason: The request isn’t valid.
  solution: Update the request using the API reference.
- code: 401
  reason: The authentication has failed.
  solution: Generate a valid access token and use it in the Authorization header.
    The token is valid for 5 minutes.
- code: 403
  reason: You’re not authorized to access this resource.
  solution: Check that you have the permissions to access the resource according to
    your account plan and user role.
- code: 404
  reason: The resource can’t be found.
  solution: Verify the URL of the endpoint, its path and query parameters, and check
    resource availability.
- code: 429
  reason: You’ve exceeded the rate limit.
  solution: Check the rate limits and update the pipeline to ensure you stay within
    those limits.
- code: 5xx
  reason: There is an error on UP42’s side.
  solution: Please try again later. If the issue persists, contact support.
- 'ORDER_NOT_FOUND: Check the order ID provided.'
- 'INVALID_PARAMETERS: Review the parameters sent with the request.'
- 'ACCESS_APPROVAL_REQUIRED: Request access to the collection.'
- 'Failed: The job has failed.'
- 'MissingPanchromaticAsset: The panchromatic band is missing.'
- '404: Check the server URL. It should be auth.up42.com instead of api.up42.com.'
- '400: The request isn’t valid. | Update the request using the API reference.'
- '401: The authentication has failed. | Generate a valid access token and use it
  in the Authorization header. The token is valid for 5 minutes.'
- '403: You’re not authorized to access this resource. | Check that you have the permissions
  to access the resource according to your account plan and user role.'
- '404: The resource can’t be found. | Verify the URL of the endpoint, its path and
  query parameters, and check resource availability.'
- '429: You’ve exceeded the rate limit. | Check the rate limits and update the pipeline
  to ensure you stay within those limits.'
- '5xx: There is an error on UP42’s side. | Please try again later. If the issue persists,
  contact support.'
- '401 Unauthorized: Check your authentication details.'
- '400 Bad Request: Validate your input parameters.'
- '403 Forbidden: Check your API key or permissions'
- '404 Not Found: The specified order does not exist'
- '500 Internal Server Error: Try again later'
- 'UNLICENSED: Accept the EULA through the console or the API.'
- '401 Unauthorized: Check your credentials and permissions'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check your authentication credentials'
- '400 Bad Request: Check your input parameters'
- '401 Unauthorized: Invalid token or missing scopes'
- '404 Not Found: Resource does not exist'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify access token.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Recheck your credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '401 Unauthorized: Check your authentication credentials.'
- 'Webhook ID not found: Check the provided ID.'
- Bright areas, such as clouds and white buildings, along with dark areas, such as
  water, can result in anomalous pixel values in an EVI image.
- '400 Bad Request: Check your parameters.'
- '404 Not Found: Endpoint may be incorrect.'
- '500 Internal Server Error: Try again later.'
- If for any reason the verification isn’t successful, the original charge will be
  reversed.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Webhook
  - Tools
  - ImageFile
  - Order
  - OrderParamsV2
  - OrderSorting
  - ArchiveOrderDetails
  - TaskingOrderDetails
  - Job
  - JobStatus
  - ValidationError
  - OAuthToken
client:
  base_url: https://console.up42.com
  auth:
    type: oauth2
source_metadata: null
