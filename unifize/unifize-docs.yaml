resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /api/v1/records
    method: GET
- name: records
  endpoint:
    path: /services/data/vXX.X/sobjects/Record
    method: POST
    data_selector: record
    params: {}
- name: record_creation
  endpoint:
    path: /api/v1/record_creation
    method: POST
    data_selector: records
    params: {}
- name: linked_record
  endpoint:
    path: /services/data/vXX.X/sobjects/LinkedRecord
    method: GET
    data_selector: records
- name: invitation
  endpoint:
    path: /api/invitation
    method: POST
    data_selector: invitation
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
- name: dashboard
  endpoint:
    path: /services/data/vXX.X/sobjects/Dashboard
    method: GET
    data_selector: records
    params: {}
- name: dashboards
  endpoint:
    path: /api/dashboards
    method: GET
    data_selector: dashboards
    params: {}
- name: charts
  endpoint:
    path: /api/charts
    method: GET
    data_selector: charts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: process
  endpoint:
    path: /api/v1/process
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /services/data/vXX.X/records
    method: GET
    data_selector: records
    params: {}
- name: record
  endpoint:
    path: /services/data/vXX.X/sobjects/Record
    method: GET
    data_selector: records
    params: {}
- name: conversation
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: report
  endpoint:
    path: /reports
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: charts
  endpoint:
    path: /api/charts
    method: GET
    data_selector: charts
    params: {}
- name: checklist
  endpoint:
    path: /services/data/vXX.X/sobjects/Checklist
    method: GET
    data_selector: records
    params: {}
- name: checklist
  endpoint:
    path: /services/data/vXX.X/sobjects/Checklist
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: processes
  endpoint:
    path: /api/processes
    method: GET
    data_selector: records
- name: record
  endpoint:
    path: /v1/records
    method: GET
    data_selector: data
    params: {}
- name: my_inbox
  endpoint:
    path: /my_inbox
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: file_management
  endpoint:
    path: /services/data/vXX.X/sobjects/FileManagement
    method: GET
    data_selector: records
    params: {}
- name: user_management
  endpoint:
    path: /api/user_management
    method: GET
    data_selector: users
    params: {}
- name: role_management
  endpoint:
    path: /api/role_management
    method: GET
    data_selector: roles
    params: {}
- name: roles
  endpoint:
    path: /api/v1/roles
    method: GET
    data_selector: roles
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: checklist
  endpoint:
    path: /services/data/vXX.X/sobjects/Checklist
    method: GET
    data_selector: records
    params: {}
- name: checklist
  endpoint:
    path: /api/v1/checklists
    method: GET
    data_selector: checklists
    params: {}
- name: Document Management
  endpoint:
    path: /product-help/document-management-system-dms/document-management
    method: GET
- name: Change Control
  endpoint:
    path: /product-help/document-management-system-dms/change-control
    method: GET
- name: Training Management
  endpoint:
    path: /product-help/document-management-system-dms/training-management
    method: GET
- name: Document
  endpoint:
    path: /document
    method: GET
    data_selector: metadata
    params: {}
- name: Document Review
  endpoint:
    path: /document/review
    method: GET
    data_selector: review_data
    params: {}
- name: Type of Document
  endpoint:
    path: /document/type
    method: GET
    data_selector: type_data
    params: {}
- name: Template
  endpoint:
    path: /document/template
    method: GET
    data_selector: template_data
    params: {}
- name: Document Change Control
  endpoint:
    path: /document-change-control
    method: GET
    data_selector: records
- name: Implementation Task
  endpoint:
    path: /implementation-task
    method: GET
    data_selector: records
- name: Training Module
  endpoint:
    path: /training/module
    method: GET
    data_selector: records
- name: Training Record
  endpoint:
    path: /training/record
    method: GET
    data_selector: records
- name: Training Group
  endpoint:
    path: /training/group
    method: GET
    data_selector: records
- name: Quiz Question
  endpoint:
    path: /training/quiz/question
    method: GET
    data_selector: records
- name: Quiz Question Template
  endpoint:
    path: /training/quiz/template
    method: GET
    data_selector: records
- name: language_support
  endpoint:
    path: /api/language_support
    method: GET
    data_selector: records
- name: translation_editor
  endpoint:
    path: /admin-guide/multi-language-translation-support/using-the-translation-editor-to-customize-ui
    method: GET
    data_selector: translations
    params: {}
- name: process
  endpoint:
    path: /services/data/vXX.X/sobjects/Process
    method: GET
    data_selector: records
    params: {}
- name: revision_field
  endpoint:
    path: /admin-guide/customization-and-configuration/configuring-revision-fields
    method: GET
    data_selector: revision_fields
    params: {}
- name: approval_workflow
  endpoint:
    path: /services/data/vXX.X/sobjects/ApprovalWorkflow
    method: GET
    data_selector: records
    params: {}
- name: checklist_layout_settings
  endpoint:
    path: /admin-guide/customization-and-configuration/checklist-layout-settings
    method: GET
    data_selector: layout_options
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: data
    params: {}
- name: charts
  endpoint:
    path: /api/v1/charts
    method: GET
    data_selector: data
    params: {}
- name: charts
  endpoint:
    path: /api/charts
    method: POST
    data_selector: chartData
    params: {}
- name: reports
  endpoint:
    path: /api/reports
    method: GET
    data_selector: reportData
    params: {}
- name: data_migration
  endpoint:
    path: /api/v1/data/migration
    method: POST
    data_selector: results
- name: my_inbox
  endpoint:
    path: /services/data/vXX.X/sobjects/MyInbox
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: roles_and_permissions
  endpoint:
    path: /roles_and_permissions
    method: GET
    data_selector: roles
    params: {}
- name: checklist_fields
  endpoint:
    path: /checklist_fields
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /services/data/vXX.X/sobjects/Records
    method: GET
    data_selector: records
    params: {}
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: records
- name: processes
  endpoint:
    path: /api/processes
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /api/records
    method: GET
    data_selector: records
- name: generate_app_token
  endpoint:
    path: /application/installation/{org-id}/token
    method: POST
    data_selector: accessToken
    params:
      org-id: 1
- name: validate_token
  endpoint:
    path: /application/tokeninfo
    method: POST
    data_selector: uid
    params: {}
- name: process
  endpoint:
    path: /processes
    method: GET
    data_selector: records
    params: {}
- name: process
  endpoint:
    path: /workflow
    method: GET
    data_selector: '[]'
- name: process_settings
  endpoint:
    path: /workflow/{id}
    method: GET
    data_selector: records
    params: {}
- name: create_process
  endpoint:
    path: /workflow
    method: POST
    data_selector: records
    params: {}
- name: update_process
  endpoint:
    path: /workflow/{id}
    method: PATCH
    data_selector: records
    params: {}
- name: delete_process
  endpoint:
    path: /workflow/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: restore_process
  endpoint:
    path: /workflow/{id}
    method: POST
    data_selector: records
    params: {}
- name: text
  endpoint:
    path: /text
    method: GET
    data_selector: key
    params: {}
- name: date
  endpoint:
    path: /date
    method: GET
    data_selector: label
    params: {}
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: label
    params: {}
- name: number
  endpoint:
    path: /number
    method: GET
    data_selector: label
    params: {}
- name: section
  endpoint:
    path: /section
    method: GET
    data_selector: label
    params: {}
- name: subsection
  endpoint:
    path: /subsection
    method: GET
    data_selector: label
    params: {}
- name: file
  endpoint:
    path: /file
    method: GET
    data_selector: label
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: GET
    data_selector: label
    params: {}
- name: revision
  endpoint:
    path: /revision
    method: GET
    data_selector: label
    params: {}
- name: records
  endpoint:
    path: /api/v1/records
    method: GET
    data_selector: data
    params: {}
- name: chatroom
  endpoint:
    path: /chatroom
    method: GET
    data_selector: object[]
    params: {}
- name: chatroom_record
  endpoint:
    path: /chatroom/{id}
    method: GET
    data_selector: object
    params: {}
- name: create_record
  endpoint:
    path: /chatroom
    method: POST
    data_selector: Response
    params: {}
- name: update_record
  endpoint:
    path: /chatroom/{id}
    method: PATCH
    data_selector: Response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: field_value
  endpoint:
    path: /chatroom/{id}/checklist-field/{fid}
    method: GET
    data_selector: fieldId
- name: picklist_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: date_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: user_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: file_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: pdf_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: revision_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: approval_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: conversation_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: linked_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-1
    method: POST
    data_selector: value
- name: form_field
  endpoint:
    path: /developer/api-reference/field-values#chatroom-id-checklist-field-fid-2
    method: POST
    data_selector: value
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: checklist
  endpoint:
    path: /services/data/vXX.X/sobjects/Checklist
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: file_upload
  endpoint:
    path: /manage/processes/checklist/file-upload/sharepoint
    method: GET
- name: record
  endpoint:
    path: /api/v1/records
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: record
  endpoint:
    path: /api/v1/records
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Records in Unifize are the building blocks of collaboration and process management.
- Each record can have a due date and a priority level to help teams focus on what’s
  most urgent and time-sensitive.
- Get started with creating records.
- AI-powered automation converts unstructured email content into structured records.
- Email content is intelligently parsed to auto-populate checklist fields.
- Some objects may return nulls in deeply nested fields
- Only users with the correct permissions can invite others
- Invited users will show as Pending until they accept the invite
- Email invitations are sent immediately; users must verify their account to access
  the workspace
- To be able to change the language, your Org Admin needs to have enabled it.
- By using the enhanced filtering and sorting options in My Inbox, you can stay focused
  on what’s important.
- Unifize enables users to generate and download professional, printable PDF reports
  from checklist data.
- Reports help you sort, customize, and export live data for operational tracking,
  audits, and reviews.
- Use clear report names and keep reports focused.
- Dashboards allow real-time visualization of key metrics from processes.
- Users can create private, shared, or public dashboards.
- Maintain clear, structured checklist templates to help AI map data accurately.
- Regularly review AI-generated content before taking critical actions.
- Some objects like Record may return nulls in deeply nested fields
- Conversations are tied to specific records, eliminating fragmented discussions.
- Maintains a chronological log of messages, ensuring compliance and traceability.
- Reports help teams analyze trends, track performance, and make data-driven decisions.
- Checklists ensure consistency, accountability, and compliance in a process.
- Each Org operates independently, with its own users, processes, and data.
- Users can switch between Orgs by clicking their profile icon.
- Some endpoints may have rate limits.
- My Inbox is your personal task and activity dashboard.
- Each item in My Inbox is an active record or conversation.
- Admins can select multiple records within the Manage view.
- Select All checkbox improves efficiency when handling high volumes of records.
- The Homescreen is your personal dashboard in Unifize, designed to help you focus
  on the tasks, records, and updates that matter most.
- Each user can configure their Homescreen layout based on their individual needs.
- All changes are specific to your user account and do not impact others in the organization.
- Checklists and forms are essential tools for capturing and structuring data as part
  of your business processes.
- Only users with process editing permissions can add a Rich Text field to a process.
- Records are where real work happens in Unifize.
- Access control features for managing users and roles.
- Ensures secure and compliant access to data.
- Roles apply at the workspace level
- Only Admins can assign or change roles
- You can update a user’s role anytime via Manage Users
- Custom roles can be created and deleted.
- System roles like Admin or Read Only cannot be deleted.
- Deactivation instead of deletion is recommended for data integrity.
- Managing users and teams is essential for visibility and accountability.
- Users must be invited to a specific Org to participate.
- Unifize is designed for flexibility across devices.
- A lightweight browser-based version for fast, focused updates—ideal for field teams
  and mobile users.
- 'Maximum file size: 5MB'
- 'Supported formats: JPG, PNG'
- Profile pictures are visible to all users in your organization
- Password reset links expire after a short time for security purposes.
- If your organization uses SSO (Single Sign-On), password changes within Unifize
  may not apply.
- Real-time updates are reflected to all participants.
- Changes to Primary Language affect the entire Org.
- Some UI elements may have minor misalignment in certain languages.
- Uses OAuth2 with refresh token — requires setup of connected app in Unifize
- Translations are auto-saved and applied immediately upon editing.
- Some UI elements may appear misaligned in certain languages.
- Not all content is translatable (e.g., chat messages, process titles, uploaded documents).
- Auto-translations rely on third-party translation services; manual review is recommended
  for critical fields.
- Language preference is user-specific and cannot be enforced Org-wide.
- Admins cannot change another user's preferred language directly.
- Some content (e.g., conversations, chat, uploaded files) remains in original language.
- The Translation Editor allows authorized users to view and edit UI text across the
  platform in supported languages.
- Unifize adapts to your processes—not the other way around. Use this section to build
  a workspace that’s efficient, compliant, and aligned with your unique workflows.
- Only one Revision Field can be used per process.
- Approval workflows enforce formal reviews and drive accountability across roles.
- Real-time notifications for all approval actions.
- Reminders help maintain momentum by automatically notifying users if a record has
  been inactive for a specific number of days.
- Keep reminder messages clear and actionable.
- Use reminders for processes where delays commonly occur.
- Let participants disable reminders only when appropriate (e.g., low-priority workflows).
- Keep the number of reminders reasonable to avoid notification fatigue.
- OAuth2 requires setup of connected app in Unifize
- Some reports may have restrictions on data access
- Charts can be created from saved reports.
- For most migrations, CSV/XML/JSON exports with scripted imports remain the recommended
  approach.
- The API is best suited as a complementary option for specialized use cases.
- Not all historical records require import. Prioritize compliance‑critical items.
- Expect manual verification for data derived from scanned documents.
- XML/JSON exports often require IT support; plan lead time.
- Cleanup and validation require SME time; this is the most common schedule driver.
- Spreadsheet‑to‑file links frequently need remediation prior to import.
- Checklists are core components of process records that define how data is captured,
  tasks are completed, and compliance is enforced.
- Organizations function as the root structural components.
- Processes serve as structured workflows that streamline collaboration.
- Unifize apps are vital components for securely engaging with Unifize APIs.
- Uses two-legged OAuth2.0 protocol for token generation
- Clients are expected to use our APIs responsibly. To maintain system health and
  fairness, API usage should ideally not exceed five times the transaction volume
  conducted by users within their organization.
- Unifize will actively monitor usage patterns to manage system performance and detect
  excessive use.
- If an integration consistently exceeds this limit, Unifize reserves the right to
  throttle API usage or reject API calls to preserve system integrity and ensure equal
  resource distribution.
- Clients should avoid excessive polling of API endpoints. Implement appropriate caching
  to reduce the need for frequent calls.
- Avoid sending large volumes of requests in a short period, as this may negatively
  impact system performance.
- Use intelligent polling intervals and caching to minimize the need for repetitive
  API calls.
- Employ exponential backoff strategies when managing API rate limits and handling
  error responses to avoid overwhelming the system.
- Repeated violations of these transaction volumes may result in temporary restrictions
  or permanent limits on API access, ensuring fair resource allocation among all users.
- This policy is subject to periodic review and adjustment based on business needs
  and system performance.
- Testing environments are standalone organizations created for integration purposes,
  distinct from typical 'sandbox' environments.
- Authentication is a necessary aspect of utilizing the Unifize APIs and is implemented
  via app tokens.
- Permissions can be set initially during app creation and remain flexible.
- Secure access using Personal Access Tokens (PATs)
- Role-based access control
- Microsoft 365 SharePoint is now available for all users
- Files will follow existing Sharepoint permissions on Unifize platform as on Microsoft
  365
- Files remain in sync with your organization’s SharePoint permissions, so no need
  to manage them separately
- Access is limited to the specific record only; no access to other parts of the platform
- Supports SAML 2.0 standard
- Redirects users to IdP for login via browser or mobile
- Uses OTP for approval signatures (since passwords aren’t stored)
- Compatible with Azure AD, Google Workspace, and other major IdPs
- Allows domain-based routing for login
- AI is now a checklist field type available in Process Builder.
- Admins can configure how their specific AI works via the input and output fields
  to target checklist fields.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify client credentials.'
- 'USER_NOT_FOUND: Check if the user ID is correct.'
- '401 Unauthorized: Verify authentication details.'
- '400: Error validating JWT'
- '500: Internal server error'
- '400: Invalid token / Token expired / Error validating token'
- 401 Authentication / Authorization error
- 404 Not Found
- 500 Internal server error
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.unifize.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://auth.unifize.com/oauth/token
    client_id: '{{ dlt.secrets[''unifize_client_id''] }}'
    client_secret: '{{ dlt.secrets[''unifize_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''unifize_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
