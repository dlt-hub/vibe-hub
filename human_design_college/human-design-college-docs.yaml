resources:
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
    data_selector: External Feeds
    params: {}
- name: create_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: POST
    data_selector: External Feed
    params: {}
- name: delete_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds/:external_feed_id
    method: DELETE
    data_selector: External Feed
    params: {}
- name: files
  endpoint:
    path: /api/v1/users/self/files
    method: POST
    data_selector: upload_status
    params: {}
- name: account_authorization_configs
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs
    method: GET
- name: account_authorization_configs
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs
    method: GET
- name: account_authorization_configs
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs
    method: POST
    data_selector: null
    params: {}
- name: discovery_url
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs/discovery_url
    method: GET
    data_selector: null
    params: {}
- name: account_authorization_configs
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs
    method: POST
    data_selector: account_authorization_config
    params: {}
- name: discovery_url
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs/discovery_url
    method: GET
    data_selector: discovery_url
    params: {}
- name: reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: reports
    params: {}
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
    data_selector: admin
    params: {}
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
    data_selector: null
    params: {}
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
    data_selector: null
    params: {}
- name: collections
  endpoint:
    path: /api/v1/users/:user_id/collections
    method: GET
    data_selector: null
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
    data_selector: AssignmentOverride
    params: {}
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
    data_selector: events
    params: {}
- name: collections
  endpoint:
    path: /api/v1/users/:user_id/collections
    method: GET
    data_selector: collections
    params: {}
- name: collections
  endpoint:
    path: /api/v1/collections/:collection_id
    method: PUT
    data_selector: ''
    params: {}
- name: collection_items
  endpoint:
    path: /api/v1/collections/:collection_id/items
    method: GET
    data_selector: ''
    params: {}
- name: comm_messages
  endpoint:
    path: /api/v1/comm_messages
    method: GET
    data_selector: ''
    params: {}
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
    data_selector: ''
    params: {}
- name: migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
    data_selector: ''
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: ''
    params: {}
- name: collections
  endpoint:
    path: /api/v1/collections/:collection_id
    method: PUT
- name: collection_items
  endpoint:
    path: /api/v1/collections/:collection_id/items
    method: GET
- name: comm_messages
  endpoint:
    path: /api/v1/comm_messages
    method: GET
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
- name: migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
- name: get_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
- name: get_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
- name: update_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
- name: find_recipients
  endpoint:
    path: /api/v1/conversations/find_recipients
    method: GET
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversations
- name: conversation_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: batches
- name: single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: updated_conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: response
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: deleted_conversation
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
    data_selector: updated_conversation
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
    data_selector: updated_conversation
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
    data_selector: response
- name: batch_update_conversations
  endpoint:
    path: /api/v1/conversations
    method: PUT
    data_selector: progress
- name: find_recipients
  endpoint:
    path: /api/v1/conversations/find_recipients
    method: GET
    data_selector: recipients
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: discussion_topics
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: course_students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
    data_selector: students
    params: {}
- name: course_users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
    data_selector: users
    params: {}
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: discussion_topics
    params: {}
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
- name: update_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
- name: delete_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
- name: get_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
- name: list_topic_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
    data_selector: discussion_topic
    params: {}
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
    data_selector: discussion_topic
    params: {}
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
    data_selector: discussion_topic
    params: {}
- name: get_single_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
    data_selector: discussion_topic
    params: {}
- name: list_topic_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
    data_selector: entries
    params: {}
- name: mark_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
    data_selector: none
    params: {}
- name: mark_topic_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
    data_selector: none
    params: {}
- name: mark_all_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: PUT
    data_selector: none
    params: {}
- name: mark_all_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: DELETE
    data_selector: none
    params: {}
- name: mark_entry_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: PUT
    data_selector: none
    params: {}
- name: mark_entry_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: DELETE
    data_selector: none
    params: {}
- name: list_enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
    data_selector: none
    params: {}
- name: enroll_user
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
    data_selector: none
    params: {}
- name: conclude_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
    data_selector: none
    params: {}
- name: list_external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
    data_selector: none
    params: {}
- name: get_single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
    data_selector: none
    params: {}
- name: create_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
    data_selector: none
    params: {}
- name: discussion_topics_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
- name: discussion_topics_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
- name: mark_all_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: PUT
- name: mark_all_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: DELETE
- name: mark_entry_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: PUT
- name: mark_entry_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: DELETE
- name: list_enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
- name: enroll_user
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
- name: conclude_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
- name: list_external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
- name: get_single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
- name: favorites_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
- name: files
  endpoint:
    path: /api/v1/folders/:id/files
    method: GET
- name: folders
  endpoint:
    path: /api/v1/folders/:id
    method: GET
- name: gradebook_history_days
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/days
    method: GET
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
- name: favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
- name: files
  endpoint:
    path: /api/v1/folders/:id/files
    method: GET
- name: folders
  endpoint:
    path: /api/v1/folders/:id
    method: GET
- name: gradebook_history
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/days
    method: GET
- name: gradebook_history
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: SubmissionVersions
    params:
      course_id: Integer
      assignment_id: Integer, Optional
      user_id: Integer, Optional
      ascending: Boolean, Optional
- name: group_categories
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: GET
    data_selector: group_categories
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups/:group_id
    method: GET
    data_selector: Group
    params: {}
- name: user_logins
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: GET
    data_selector: logins
    params:
      user[id]: Integer
- name: gradebook_history
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: SubmissionVersions
    params:
      course_id: Integer
      assignment_id: Integer, Optional
      user_id: Integer, Optional
      ascending: Boolean, Optional
- name: group_categories
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups/:group_id
    method: GET
    data_selector: ''
    params: {}
- name: module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: GET
- name: outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: GET
- name: quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
- name: module_items
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: GET
- name: module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: GET
- name: root_outcome_group
  endpoint:
    path: /api/v1/global/root_outcome_group
    method: GET
- name: outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: GET
- name: linked_outcomes
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: GET
- name: subgroups
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: GET
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
    data_selector: quiz
    params: {}
- name: roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: roles
    params: {}
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
    data_selector: sis_import
    params: {}
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
    data_selector: quiz
- name: roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: roles
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
    data_selector: import
- name: search_recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
    data_selector: recipients
- name: course_sections
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: GET
    data_selector: sections
- name: kaltura_config
  endpoint:
    path: /api/v1/services/kaltura
    method: GET
    data_selector: kaltura
- name: submissions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions
    method: POST
    data_selector: submission
- name: recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: sections
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: GET
    data_selector: sections
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: courses_tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs
    method: GET
    data_selector: tabs
- name: groups_tabs
  endpoint:
    path: /api/v1/groups/:group_id/tabs
    method: GET
    data_selector: tabs
- name: users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
    data_selector: users
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: GET
    data_selector: activity_stream
- name: todo_items
  endpoint:
    path: /api/v1/users/self/todo
    method: GET
    data_selector: todo_items
- name: user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
    data_selector: profile
- name: avatars
  endpoint:
    path: /api/v1/users/:user_id/avatars
    method: GET
    data_selector: avatars
- name: page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
    data_selector: page_views
- name: course_tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs
    method: GET
- name: group_tabs
  endpoint:
    path: /api/v1/groups/:group_id/tabs
    method: GET
- name: users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: GET
- name: todo_items
  endpoint:
    path: /api/v1/users/self/todo
    method: GET
- name: create_file
  endpoint:
    path: /api/v1/users/:user_id/files
    method: POST
- name: create_user
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: POST
- name: update_user
  endpoint:
    path: /api/v1/users/:id
    method: PUT
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:id
    method: DELETE
- name: follow_user
  endpoint:
    path: /api/v1/users/:user_id/followers/self
    method: PUT
- name: unfollow_user
  endpoint:
    path: /api/v1/users/:user_id/followers/self
    method: DELETE
- name: user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
- name: avatar_options
  endpoint:
    path: /api/v1/users/:user_id/avatars
    method: GET
- name: user_page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
- name: account_authorization_configs
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs
    method: GET
- name: account_authorization_configs
  endpoint:
    path: /api/v1/accounts/:account_id/account_authorization_configs
    method: GET
    data_selector: configs
- name: available_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: reports
    params: {}
- name: start_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: POST
    data_selector: report
    params: {}
- name: index_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: GET
    data_selector: reports
    params: {}
- name: status_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: GET
    data_selector: report
    params: {}
- name: delete_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: DELETE
    data_selector: report
    params: {}
- name: available_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: null
    params: {}
- name: start_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: POST
    data_selector: null
    params: {}
- name: index_of_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: GET
    data_selector: null
    params: {}
- name: status_of_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: GET
    data_selector: null
    params: {}
- name: delete_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: DELETE
    data_selector: null
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    params:
      recursive: 'false'
- name: active_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
- name: list_accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: get_single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
- name: get_sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    params:
      recursive: 'false'
- name: list_active_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    params:
      account[name]: ''
      account[default_time_zone]: ''
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: create_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
- name: destroy_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
- name: create_appointment_group
  endpoint:
    path: /api/v1/appointment_groups
    method: POST
- name: get_single_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: GET
- name: update_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: PUT
- name: delete_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: DELETE
- name: list_user_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/users
    method: GET
- name: list_student_group_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/groups
    method: GET
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: records
- name: create_appointment_group
  endpoint:
    path: /api/v1/appointment_groups
    method: POST
    data_selector: records
- name: get_single_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: GET
    data_selector: records
- name: update_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: PUT
    data_selector: records
- name: delete_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: DELETE
    data_selector: records
- name: list_user_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/users
    method: GET
    data_selector: records
- name: list_student_group_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/groups
    method: GET
    data_selector: records
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: records
    params:
      include[]: assignments
- name: assignment_groups
  endpoint:
    path: /courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
    params:
      include[]: assignments
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
    data_selector: assignment
    params: {}
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
    data_selector: assignment
    params: {}
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
    params: {}
- name: edit_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: assignment
    params: {}
- name: assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
    data_selector: assignment
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
    params: {}
- name: update_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: assignment
    params: {}
- name: delete_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
    data_selector: assignment_override
    params: {}
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
- name: update_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: assignment
- name: delete_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
- name: get_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: GET
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
    data_selector: events
    params: {}
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
    data_selector: events
    params: {}
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
    data_selector: Collaborators
    params: {}
- name: collections
  endpoint:
    path: /api/v1/collections
    method: GET
    data_selector: collections
- name: collection_items
  endpoint:
    path: /api/v1/collection_items
    method: GET
    data_selector: collection_items
- name: collections
  endpoint:
    path: /api/v1/collections
    method: GET
    data_selector: collections
    params: {}
- name: collection_items
  endpoint:
    path: /api/v1/collection_items
    method: GET
    data_selector: collection_items
    params: {}
- name: collection_item_upvote
  endpoint:
    path: /api/v1/collections/items/:item_id/upvotes/self
    method: DELETE
- name: remove_upvote
  endpoint:
    path: /api/v1/collections/items/:item_id/upvotes/self
    method: DELETE
- name: upvote_item
  endpoint:
    path: /api/v1/collections/items/:item_id/upvotes/self
    method: DELETE
- name: de_upvote_item
  endpoint:
    path: /api/v1/collections/items/:item_id/upvotes/self
    method: DELETE
- name: delete_collection_item
  endpoint:
    path: /api/v1/collections/items/:item_id/upvotes/self
    method: DELETE
- name: edit_collection_item
  endpoint:
    path: /api/v1/collections/items/:item_id/upvotes/self
    method: DELETE
- name: create_or_clone_collection_item
  endpoint:
    path: /api/v1/collections/items/:item_id/upvotes/self
    method: DELETE
- name: comm_messages
  endpoint:
    path: /comm_messages
    method: GET
    data_selector: CommMessages
    params:
      user_id: ''
      start_time: ''
      end_time: ''
- name: comm_messages
  endpoint:
    path: /comm_messages
    method: GET
    data_selector: CommMessages
    params:
      user_id: ''
      start_time: ''
      end_time: ''
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
    data_selector: communication_channels
- name: create_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
- name: delete_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:id
    method: DELETE
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
    data_selector: communication_channels
- name: create_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
    data_selector: communication_channel
- name: delete_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:id
    method: DELETE
    data_selector: communication_channel
- name: migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
    data_selector: MigrationIssues
- name: content_migrations
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: GET
    data_selector: ContentMigrations
- name: migration_issue
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
- name: content_migration
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: GET
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: conversation
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: 'null'
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
- name: single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
- name: find_recipients
  endpoint:
    path: /api/v1/conversations/find_recipients
    method: GET
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
    data_selector: id
    params: {}
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
    data_selector: id
    params: {}
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
    data_selector: id
    params: {}
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
    data_selector: id
    params: {}
- name: find_recipients
  endpoint:
    path: /api/v1/conversations/find_recipients
    method: GET
    data_selector: recipients
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: create_course
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: POST
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: POST
- name: list_students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
- name: list_users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
- name: course
  endpoint:
    path: /api/v1/accounts/:account_id/courses/:id
    method: GET
    data_selector: Course
- name: update_course
  endpoint:
    path: /api/v1/courses/:id
    method: PUT
    data_selector: course
    params: {}
- name: update_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: PUT
    data_selector: Progress
    params: {}
- name: course_copy_status
  endpoint:
    path: /api/v1/courses/:course_id/course_copy/:id
    method: GET
    data_selector: course_copy
    params: {}
- name: copy_course_content
  endpoint:
    path: /api/v1/courses/:course_id/course_copy
    method: POST
    data_selector: course_copy_status
    params: {}
- name: course
  endpoint:
    path: /api/v1/courses/:id
    method: GET
- name: update_course
  endpoint:
    path: /api/v1/courses/:id
    method: PUT
- name: update_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: PUT
- name: course_copy_status
  endpoint:
    path: /api/v1/courses/:course_id/course_copy/:id
    method: GET
- name: copy_course_content
  endpoint:
    path: /api/v1/courses/:course_id/course_copy
    method: POST
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: records
- name: discussion_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
    data_selector: records
- name: list_discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
- name: create_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
- name: get_single_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
- name: post_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: POST
- name: discussion_topic_entries
  endpoint:
    path: /api/v1/collection_items/:collection_item_id/discussion_topics/:topic_id/entries
    method: GET
    data_selector: entries
- name: discussion_topic_replies
  endpoint:
    path: /api/v1/collection_items/:collection_item_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: GET
    data_selector: replies
- name: enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
    data_selector: enrollments
- name: enroll_user
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
    data_selector: enrollment
- name: conclude_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
    data_selector: enrollment
- name: entry_list
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entry_list
    method: GET
    data_selector: entries
- name: mark_entry_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: PUT
    data_selector: 'null'
- name: mark_entry_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: DELETE
    data_selector: 'null'
- name: mark_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
    data_selector: 'null'
- name: mark_topic_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
    data_selector: 'null'
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
- name: external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
- name: create_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
- name: edit_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: PUT
- name: enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
    data_selector: enrollments
    params: {}
- name: create_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
    data_selector: enrollment
    params: {}
- name: conclude_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
    data_selector: enrollment
    params: {}
- name: list_favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
- name: add_favorite_course
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: POST
- name: remove_favorite_course
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: DELETE
- name: reset_course_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: DELETE
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
    data_selector: external_tool
    params: {}
- name: create_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
    data_selector: external_tool
    params: {}
- name: edit_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: PUT
    data_selector: external_tool
    params: {}
- name: list_favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
- name: add_favorite_course
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: POST
- name: remove_favorite_course
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: DELETE
- name: reset_course_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: DELETE
- name: files
  endpoint:
    path: /api/v1/folders/:id/files
    method: GET
- name: folders
  endpoint:
    path: /api/v1/folders/:id/folders
    method: GET
- name: submission_versions
  endpoint:
    path: /courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: SubmissionVersions
    params:
      course_id: Integer
      assignment_id: Integer, Optional
      user_id: Integer, Optional
      ascending: Boolean, Optional
- name: files
  endpoint:
    path: /api/v1/folders/:id/files
    method: GET
- name: folders
  endpoint:
    path: /api/v1/folders/:id
    method: GET
- name: gradebook_history
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: SubmissionVersions
    params:
      course_id: Integer
      assignment_id: Integer, Optional
      user_id: Integer, Optional
      ascending: Boolean, Optional
- name: group_categories
  endpoint:
    path: /api/v1/group_categories
    method: GET
    data_selector: group_categories
- name: single_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: GET
    data_selector: group_category
- name: create_group_category
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: POST
    data_selector: group_category
- name: update_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: PUT
    data_selector: group_category
- name: delete_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: DELETE
    data_selector: group_category
- name: groups_in_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id/groups
    method: GET
    data_selector: groups
- name: group_categories
  endpoint:
    path: /api/v1/group_categories
    method: GET
    data_selector: group_categories
- name: single_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: GET
    data_selector: group_category
- name: create_group_category
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: POST
    data_selector: group_category
- name: update_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: PUT
    data_selector: group_category
- name: delete_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: DELETE
    data_selector: ''
- name: groups_in_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id/groups
    method: GET
    data_selector: groups
- name: groups
  endpoint:
    path: /api/v1/users/self/groups
    method: GET
    data_selector: groups
- name: group_context
  endpoint:
    path: /api/v1/courses/:course_id/groups
    method: GET
    data_selector: groups
- name: single_group
  endpoint:
    path: /api/v1/groups/:group_id
    method: GET
    data_selector: group
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
    data_selector: group
- name: delete_group
  endpoint:
    path: /api/v1/groups/:group_id
    method: DELETE
    data_selector: group
- name: groups
  endpoint:
    path: /api/v1/users/self/groups
    method: GET
    data_selector: groups
- name: group_context
  endpoint:
    path: /api/v1/accounts/:account_id/groups
    method: GET
    data_selector: groups
- name: single_group
  endpoint:
    path: /api/v1/groups/:group_id
    method: GET
    data_selector: group
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
    data_selector: group
- name: edit_group
  endpoint:
    path: /api/v1/groups/:group_id
    method: PUT
    data_selector: group
- name: delete_group
  endpoint:
    path: /api/v1/groups/:group_id
    method: DELETE
    data_selector: group
- name: list_memberships
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: GET
    data_selector: memberships
- name: create_membership
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: POST
    data_selector: membership
- name: logins
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: GET
    data_selector: logins
    params: {}
- name: create_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: POST
    data_selector: logins
    params: {}
- name: edit_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins/:id
    method: PUT
    data_selector: logins
    params: {}
- name: delete_login
  endpoint:
    path: /api/v1/users/:user_id/logins/:id
    method: DELETE
    data_selector: logins
    params: {}
- name: user_logins
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: GET
- name: create_user_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: POST
- name: edit_user_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins/:id
    method: PUT
- name: delete_user_login
  endpoint:
    path: /api/v1/users/:user_id/logins/:id
    method: DELETE
- name: modules
  endpoint:
    path: /api/v1/courses/:course_id/modules
    method: GET
- name: module
  endpoint:
    path: /api/v1/courses/:course_id/modules/:id
    method: GET
- name: module_items
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: GET
- name: module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: GET
- name: modules
  endpoint:
    path: /api/v1/courses/:course_id/modules
    method: GET
- name: module
  endpoint:
    path: /api/v1/courses/:course_id/modules/:id
    method: GET
- name: module_items
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: GET
- name: module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: GET
- name: outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: GET
- name: linked_outcomes
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: GET
- name: subgroups
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: GET
- name: import_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id/import.json
    method: POST
    data_selector: OutcomeGroup
    params:
      source_outcome_group_id: Required, Integer
- name: root_outcome_group
  endpoint:
    path: /api/v1/global/root_outcome_group
    method: GET
- name: outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: GET
- name: update_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: PUT
- name: delete_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: DELETE
- name: list_linked_outcomes
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: GET
- name: create_link_outcome
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: POST
- name: unlink_outcome
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes/:outcome_id
    method: DELETE
- name: list_subgroups
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: GET
- name: create_subgroup
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: POST
- name: import_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id/import
    method: POST
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: GET
    data_selector: Outcome
- name: update_outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: PUT
    data_selector: Outcome
- name: import_outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id/import.json
    method: POST
    data_selector: OutcomeGroup
    params:
      source_outcome_group_id: required
- name: list_pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
- name: show_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url
    method: GET
- name: progress
  endpoint:
    path: /api/v1/progress/:id
    method: GET
    data_selector: Progress
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: GET
    data_selector: Outcome
- name: update_outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: PUT
    data_selector: Outcome
- name: pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
- name: show_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url
    method: GET
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
    data_selector: quizzes
- name: single_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: GET
    data_selector: quiz
- name: create_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
    data_selector: quiz
- name: edit_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: PUT
    data_selector: quiz
- name: progress
  endpoint:
    path: /progress/:id
    method: GET
    data_selector: Progress
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
    data_selector: quizzes
- name: single_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: GET
    data_selector: quiz
- name: create_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
    data_selector: quiz
- name: edit_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: PUT
    data_selector: quiz
- name: list_roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: roles
    params: {}
- name: get_single_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:role
    method: GET
    data_selector: role
    params: {}
- name: create_new_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: POST
    data_selector: role
    params: {}
- name: deactivate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:role
    method: DELETE
    data_selector: role
    params: {}
- name: activate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:role/activate
    method: POST
    data_selector: role
    params: {}
- name: update_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:role
    method: PUT
    data_selector: role
    params: {}
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
    data_selector: ''
    params:
      import_type: instructure_csv
- name: sis_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id
    method: GET
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: roles
- name: recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
- name: sections
  endpoint:
    path: /courses/:course_id/sections
    method: GET
    data_selector: sections
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
    data_selector: ''
    params:
      import_type: instructure_csv
- name: sis_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id
    method: GET
    data_selector: ''
    params: {}
- name: find_recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
    data_selector: records
    params: {}
- name: kaltura_config
  endpoint:
    path: /api/v1/services/kaltura
    method: GET
    data_selector: enabled
- name: kaltura_session
  endpoint:
    path: /api/v1/services/kaltura_session
    method: POST
    data_selector: ks
- name: sections
  endpoint:
    path: /courses/:course_id/sections
    method: GET
- name: create_section
  endpoint:
    path: /courses/:course_id/sections
    method: POST
- name: crosslist_section
  endpoint:
    path: /sections/:id/crosslist/:new_course_id
    method: POST
- name: uncrosslist_section
  endpoint:
    path: /sections/:id/crosslist
    method: DELETE
- name: update_section
  endpoint:
    path: /sections/:id
    method: PUT
- name: show_section
  endpoint:
    path: /courses/:course_id/sections/:id
    method: GET
- name: delete_section
  endpoint:
    path: /sections/:id
    method: DELETE
- name: submissions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: submissions
    params: {}
- name: submission
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:id
    method: GET
    data_selector: submission
    params: {}
- name: kaltura_config
  endpoint:
    path: /services/kaltura
    method: GET
    data_selector: enabled
- name: kaltura_session
  endpoint:
    path: /services/kaltura_session
    method: POST
    data_selector: ks
- name: tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs
    method: GET
    data_selector: tabs
    params:
      include: external
- name: group_tabs
  endpoint:
    path: /api/v1/groups/:group_id/tabs
    method: GET
    data_selector: tabs
    params: {}
- name: submissions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: submissions
- name: tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs
    method: GET
    data_selector: tabs
    params:
      include[]: external
- name: group_tabs
  endpoint:
    path: /api/v1/groups/:group_id/tabs
    method: GET
    data_selector: tabs
    params: {}
- name: list_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: GET
- name: todo_items
  endpoint:
    path: /api/v1/users/self/todo
    method: GET
- name: get_user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
- name: user_avatars
  endpoint:
    path: /api/v1/users/:user_id/avatars.json
    method: GET
    data_selector: ''
- name: user_page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
    data_selector: ''
- name: list_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
- name: get_user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
- name: user_avatars
  endpoint:
    path: /api/v1/users/:user_id/avatars
    method: GET
    data_selector: records
- name: user_page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: sections
  endpoint:
    path: /api/v1/sections
    method: GET
    data_selector: sections
    params: {}
- name: enrollments
  endpoint:
    path: /api/v1/enrollments
    method: GET
    data_selector: enrollments
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: enrollments
  endpoint:
    path: /api/v1/enrollments
    method: GET
    data_selector: enrollments
- name: External Tools
  endpoint:
    path: /external_tools
    method: GET
    data_selector: tools
    params: {}
- name: External Tools
  endpoint:
    path: /external_tools
    method: GET
    data_selector: tools
- name: Grade Passback Tools
  endpoint:
    path: /grade_passback_tools
    method: POST
- name: Data Return Extension
  endpoint:
    path: /data_return_extension
    method: POST
- name: editor_button
  endpoint:
    path: /editor/button
    method: POST
- name: external_tools
  endpoint:
    path: /external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: homework_submission
  endpoint:
    path: /api/v1/homework_submission
    method: POST
- name: external_tools
  endpoint:
    path: /api/v1/external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: external_tools
  endpoint:
    path: /api/v1/external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: resource_selection
  endpoint:
    path: /chapter_selector
    method: GET
    data_selector: ''
    params:
      enabled: 'true'
- name: resource_selection
  endpoint:
    path: /chapter_selector
    method: GET
    data_selector: properties
    params:
      enabled: 'true'
      url: https://example.com/chapter_selector
      text: eBook Chapter Selector
      selection_width: '500'
      selection_height: '300'
- name: course_navigation
  endpoint:
    path: /attendance
    method: GET
    data_selector: records
    params: {}
- name: account_navigation
  endpoint:
    path: /attendance_admin
    method: GET
    data_selector: records
    params: {}
- name: course_navigation
  endpoint:
    path: https://example.com/attendance
    method: GET
- name: account_navigation
  endpoint:
    path: https://example.com/attendance_admin
    method: GET
notes:
- OAuth2 is a protocol designed to let third-party applications authenticate to perform
  actions as a user, without getting the user's password.
- HTTP Basic Auth is deprecated and will be removed.
- Requests that return multiple items will be paginated to 10 items by default.
- Check for the Link header for pagination information.
- Canvas downloads the file in the background when uploading via URL.
- The first auth config is used if no discovery url is configured.
- 'BETA: This API endpoint is not finalized, and there could be breaking changes before
  its final release.'
- Only those with the 'Manage Files' permission can upload files to the course.
- Requires announcement-posting permissions for announcement topics.
- Requires correct permissions to access discussion topics.
- All requests must include a valid OAuth token in the Authorization header.
- This API endpoint is not finalized, and there could be breaking changes before its
  final release.
- Requires setup of connected app in canvas
- SIS imports must be on a root account with SIS imports enabled
- Pagination is supported for various endpoints.
- Pagination is supported.
- Some API endpoints may require specific permissions.
- If no discovery url is configured, the 1st auth config will be used to attempt to
  authenticate the user.
- The assignment overrides feature is in beta.
- API for creating, accessing and updating calendar events.
- 'BETA: This API resource is not finalized, and there could be breaking changes before
  its final release.'
- The default behavior is to return all non-archived conversations.
- If a group conversation has just one recipient, individual private conversations
  will be started.
- Returns the paginated list of discussion topics for this course or group.
- The discussion topic object contains fields like id, title, message, posted_at,
  last_reply_at, etc.
- May require that the user has posted in the topic.
- May require that the user has posted in the topic for certain actions.
- External tools are IMS LTI links.
- This API resource is not finalized, and there could be breaking changes before its
  final release.
- Returns a paginated list of files for the folder.
- Returns a paginated list of folders in the folder.
- Use OAuth2 for authentication
- The source group must be either global, from the same context as this outcome group,
  or from an associated account.
- API for managing account- and course-level roles, and their associated permissions.
- All online turn-in submission types are supported in this API.
- A file upload API is coming soon.
- The :user_id parameter can be replaced with self to access the current user's data.
- All timestamps are sent and returned in ISO 8601 format
- Fields that contain a comma must be surrounded by double-quotes
- URLs returned will not circumvent the standard LTI URL/domain checking procedure
- All URLs should be over SSL (https instead of http).
- Standard LTI tool configurations can be manually entered by users in the Canvas
  UI.
- Some extensions require more than a few lines of configuration.
- Select chapters of available eBooks to insert into course modules
- Uses public privacy level
- Best practice is for link selection tools to have domain-level matching, and to
  only return URLs matching that domain.
- Provides an interactive seating chart and attendance tool
- OAuth2 is used for authentication and authorization of the Canvas API.
errors:
- access_denied is the only currently implemented error code.
- '404: Invalid response code, expected 200 got 404'
- '404 Not Found: The specified account or resource does not exist.'
- '400 Bad Request: The request was invalid or cannot be otherwise served.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: require_initial_post'
- '403 Forbidden: User must have posted in the topic.'
- '401 Unauthorized: Invalid or expired OAuth token.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check authentication credentials.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '403 Forbidden: require_initial_post if user has not posted in the topic.'
- '400: Bad Request - The submission type is not allowed.'
- '401: Unauthorized - Invalid access token.'
- '401 Unauthorized: Recheck OAuth settings or token expiration'
- '400 Bad Request: Check the format of the data being sent'
- '401 Unauthorized: Check your API credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- 'access_denied: The only currently implemented error code.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth
  - SIS IDs
client:
  base_url: https://<canvas>
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
