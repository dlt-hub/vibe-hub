resources:
- name: support_category
  endpoint:
    path: /support/category
    method: GET
    data_selector: categories
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: deploy
  endpoint:
    path: /deploys
    method: GET
    data_selector: deploys
    params: {}
- name: build
  endpoint:
    path: /t/request-to-increase-build-time-limit-to-1-hour
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: functions
  endpoint:
    path: /.netlify/functions/<FUNCTION NAME>
    method: GET
- name: build_time_limit
  endpoint:
    path: /builds
    method: POST
    data_selector: build_time_limit
    params: {}
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: functions
    params: {}
- name: DNS Records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: lambda_function_errors
  endpoint:
    path: /t/lambda-function-errors
    method: GET
- name: latest_email_topics
  endpoint:
    path: /latest/topics/tag/email
    method: GET
    data_selector: topics
- name: 404_error
  endpoint:
    path: /t/404-page-not-found-issues-deploying-my-first-site
    method: GET
    data_selector: posts
    params: {}
- name: build
  endpoint:
    path: /builds
    method: POST
    data_selector: data
    params: {}
- name: delete_site_request
  endpoint:
    path: /sites/delete
    method: POST
    data_selector: response
    params:
      site_url: https://chicboutique.netlify.app
- name: users
  endpoint:
    path: /.netlify/functions/users
    method: POST
- name: fetch_all_users
  endpoint:
    path: /.netlify/functions/fetch-all-users
    method: GET
- name: fetch_one_user
  endpoint:
    path: /.netlify/functions/fetch-one-user/:id
    method: GET
- name: update_user
  endpoint:
    path: /.netlify/functions/update-user/:id
    method: PUT
- name: site_deployment
  endpoint:
    path: /site/deployment
    method: GET
    data_selector: deploys
    params: {}
- name: form_submissions
  endpoint:
    path: /forms
    method: POST
    data_selector: submissions
- name: site
  endpoint:
    path: /sites
    method: DELETE
    data_selector: site
    params: {}
- name: contact
  endpoint:
    path: /
    method: POST
    data_selector: form
    params: {}
- name: create_user
  endpoint:
    path: /users
    method: POST
- name: fetch_all_users
  endpoint:
    path: /users
    method: GET
- name: fetch_one_user
  endpoint:
    path: /users/:id
    method: GET
- name: update_user
  endpoint:
    path: /users/:id
    method: PUT
- name: contact
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params:
      form-name: contact
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deploy_settings
  endpoint:
    path: /settings/deploys
    method: GET
    data_selector: settings
    params: {}
- name: forms
  endpoint:
    path: /forms/setup
    method: GET
    data_selector: forms
    params: {}
- name: form_submission
  endpoint:
    path: /sites/YOURSITENAME/forms
    method: GET
    data_selector: forms
    params: {}
- name: widgets
  endpoint:
    path: /widgets/:id
    method: GET
    data_selector: records
    params: {}
- name: widgets
  endpoint:
    path: /widgets/
    method: POST
    data_selector: records
    params: {}
- name: widgets
  endpoint:
    path: /widgets/:id
    method: PUT
    data_selector: records
    params: {}
- name: widgets
  endpoint:
    path: /widgets/:id
    method: DELETE
    data_selector: records
    params: {}
- name: contact_submission
  endpoint:
    path: /
    method: POST
    data_selector: submission
    params:
      form-name: Contact
- name: redirects
  endpoint:
    path: /:owner/:repo/badge-v1.svg
    method: GET
    data_selector: records
    params: {}
- name: api_endpoint
  endpoint:
    path: /api/endpoint
    method: GET
- name: latest_netflix
  endpoint:
    path: /api/latest_netflix
    method: GET
- name: functions
  endpoint:
    path: /.netlify/functions/
    method: GET
    data_selector: functions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: functions
  endpoint:
    path: /.netlify/functions
    method: GET
    data_selector: functions
    params: {}
- name: latest_netflix
  endpoint:
    path: /api/latest_netflix
    method: GET
    params:
      path: :path
- name: lambda_functions
  endpoint:
    path: /.netlify/functions/:function
    method: GET
    data_selector: functions
    params: {}
- name: default_function
  endpoint:
    path: /.netlify/functions/default
    method: GET
    data_selector: body
- name: express_function
  endpoint:
    path: /.netlify/functions/express
    method: GET
    data_selector: body
- name: proxy_redirect
  endpoint:
    path: /.netlify/functions/hello
    method: GET
    data_selector: ''
    params: {}
- name: environment_variables
  endpoint:
    path: /path/to/environment_variables
    method: GET
    data_selector: records
- name: deployments
  endpoint:
    path: /path/to/deployments
    method: GET
    data_selector: records
- name: redirects
  endpoint:
    path: /api/*
    to: /.netlify/functions/:splat
    status: 200
- name: redirects
  endpoint:
    path: /:owner/:repo/badge-v1.svg
    method: GET
    data_selector: records
    params: {}
- name: redirects
  endpoint:
    path: /api/endpoint
    method: GET
    data_selector: redirects
    params: {}
- name: functions
  endpoint:
    path: /.netlify/functions/
    method: GET
    data_selector: functions
    params: {}
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: records
- name: functions
  endpoint:
    path: /api/*
    method: GET
    data_selector: functions
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: sessionId
- name: redirects
  endpoint:
    path: /api/*
    method: GET
    data_selector: redirects
    params: {}
- name: checkout_function
  endpoint:
    path: /.netlify/functions/checkout
    method: POST
- name: stripe_checkout_session_function
  endpoint:
    path: /.netlify/functions/stripe-checkout-session-fix
    method: POST
- name: default_function
  endpoint:
    path: /.netlify/functions/default
    method: GET
    data_selector: body
    params: {}
- name: express_function
  endpoint:
    path: /.netlify/functions/express
    method: GET
    data_selector: body
    params: {}
- name: proxy_redirects
  endpoint:
    path: /.netlify/functions/hello
    method: GET
    data_selector: ''
    params: {}
- name: mail
  endpoint:
    path: /.netlify/functions/mail
    method: POST
    data_selector: ''
    params: {}
- name: redirects
  endpoint:
    path: /api/*
    method: GET
    data_selector: rules
    params:
      status: 200
- name: search_function
  endpoint:
    path: /.netlify/functions/search
    method: GET
    data_selector: posts
    params:
      term: searchterm
- name: proxying_topics
  endpoint:
    path: /t/
    method: GET
    data_selector: topics
    params: {}
- name: api
  endpoint:
    path: /api/*
    method: GET
    data_selector: records
    params: {}
- name: checkout_function
  endpoint:
    path: /.netlify/functions/checkout
    method: POST
    data_selector: sessionId
- name: api_proxy
  endpoint:
    path: /api/*
    method: POST
    data_selector: response
    params: {}
- name: mail
  endpoint:
    path: /.netlify/functions/mail
    method: POST
    data_selector: ''
    params: {}
- name: hello_restricted
  endpoint:
    path: /.netlify/functions/hello_restricted
    method: GET
    data_selector: body
- name: redirect_a
  endpoint:
    path: /a
    method: GET
    data_selector: headers
    params: {}
- name: redirect_b
  endpoint:
    path: /b
    method: GET
    data_selector: headers
    params: {}
- name: proxy_function
  endpoint:
    path: /.netlify/functions/whatever-your-function-name/:splat
    method: GET
    data_selector: response
    params: {}
- name: search_function
  endpoint:
    path: /.netlify/functions/search
    method: GET
    data_selector: ''
    params:
      term: searchterm
- name: GetSubscriptionData
  endpoint:
    path: /api/User/GetSubscriptionData
    method: POST
    data_selector: ''
    params: {}
- name: test_function
  endpoint:
    path: /.netlify/functions/test_function
    method: POST
    data_selector: body
    params: {}
- name: proxy_requests
  endpoint:
    path: /api/*
    method: GET
    data_selector: records
    params: {}
- name: contact-form-send-email
  endpoint:
    path: /.netlify/functions/contact-form-send-email
    method: POST
    data_selector: body
    params: {}
- name: proxy_post_request
  endpoint:
    path: /api/*
    method: POST
- name: redirects
  endpoint:
    path: /.netlify/functions/getImageList
    method: GET
- name: hello_restricted
  endpoint:
    path: /.netlify/functions/hello_restricted
    method: GET
    data_selector: body
- name: redirects
  endpoint:
    path: /.netlify/functions/slug
    method: GET
    data_selector: event.headers
    params: {}
- name: contact-form-send-email
  endpoint:
    path: /.netlify/functions/contact-form-send-email
    method: POST
notes:
- You can only route to functions based on path.
- In the future, it is possible you could use Netlify’s Edge Handlers to route based
  on HTTP method.
- Requires setup of OAuth application in Netlify
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Netlify
- Some objects may return nulls in deeply nested fields
- Support Guides are the Netlify Forums version of a Frequently Asked Questions.
- Written and regularly updated by Support staff, they contain information and approaches
  useful for debugging, troubleshooting, and optimizing your projects for Netlify.
- Modern white label crypto exchange platforms are built to be scalable, meaning they
  support large trading volumes, have advanced APIs, and allow for the addition of
  new tokens or payment methods without any hassle.
- Some objects like Contact may return nulls in deeply nested fields
- In the Netlify UI, set the environment variable NETLIFY_BUILD_DEBUG to true to print
  additional debugging information in the build logs.
- The final part of the build after it gives the number of files to upload can time
  out without completing if you have many tens of thousands of files.
- Re-running the same build will eventually get all your files uploaded and the build
  will complete.
- Once the first deployment has completed, subsequent deployments should be fairly
  fast so long as there aren’t too many unchanged files.
- Don’t forget to switch it off after you have found the problem, as it does slow
  down your build and may use up more build minutes.
- Some of the files will have been processed, so if you re-run the same build you
  will find that there are now fewer files to upload.
- Repeating build re-runs will eventually get all your files uploaded and the build
  will complete.
- There is a second 'uploading' stage after the build has completed that can easily
  take several hours for the first deployment for a site with many tens of thousands
  of files.
- Once that deployment has completed, subsequent deployments should be fairly fast
  so long as there aren’t too many unchanged files.
- Netlify Identity has been deprecated.
- Some API endpoints may have specific access restrictions.
- NETLIFY_SITE_ID gets auto-populated when using @netlify/blobs in Netlify Functions
  and Edge Functions.
- Automated performance or load testing is forbidden without specific written permission
  from our team by our terms of service
- Looks like you’ve followed a broken link or entered a URL that doesn’t exist on
  this site.
- 'Ensure to use the correct URL for functions: /.netlify/functions/<FUNCTION NAME>'
- Build time limit increased to 45 minutes from the default 15 minutes.
- Build time limit can be increased to 60 minutes.
- NETLIFY_SITE_ID is auto-populated when using @netlify/blobs in Netlify Functions
  and Edge Functions.
- Copy all required DNS records to the Managed DNS service before changing the domain’s
  name servers to avoid possible interruption of services.
- Automated performance or load testing is forbidden without specific written permission
  from our team by our terms of service.
- Account flagged by automatic fraud protection system may require verification.
- Some topics may not be accessible without proper authentication.
- DNS verification failed — custom domain doesn’t appear to be served by Netlify
- Allow up to 24 hours for DNS changes to propagate
- Configuration settings for Publish Directory and Functions Directory may vary.
- URL for functions should be prefixed with .netlify/functions/
- Build time limit increased to 45 minutes for multiple sites.
- Build time limit can also be increased to 60 minutes upon request.
- Netlify supports Next.js via open-next out of the box by adding @netlify/plugin-nextjs.
- You must copy all required DNS records to the Managed DNS service before changing
  the domain’s name servers to avoid possible interruption of services.
- If you don’t copy required DNS records to Netlify when you switch, those records
  will stop working.
- Uses OAuth2 with refresh token — requires setup of connected app in netlify
- 'Command failed with exit code 1: npm run generate may indicate issues with the
  build script.'
- You can trigger SSL reprovisioning by toggling HTTPS off and on again from the Domain
  settings tab.
- If it’s still stuck, clear the deploy cache and retry deploy to reset any stale
  domain verification state.
- This article is only about builds within Netlify’s Continuous Integration (CI) environment,
  as triggered from git commits or from incoming build webhooks.
- Netlify fails to build the monorepo. After lots of trial and error netlify still
  doesn’t managed to build and deploy nextjs monorepo successfully.
- Documentation seems really confusing. netlify.toml seems also confusing like where
  to put and what value we should put.
- I advice netlify team to just create a project via turborepo, nextjs and try to
  deploy your own project on your own infrastructure.
- Only worked is my own trial-n-error and back-n-forth tweaking.
- Btw, someone, somewhere suggested If I’ll make it standalone and let make node_modules
  in apps/my-app dir then it will start working.
- This forum doesn’t have many active members, so you’re unlikely to find much guidance
  here.
- Support for creating RESTful APIs with Netlify Functions
- Synthetic performance testing is a key component for optimizing the performance
  of websites.
- 'Build script returned non-zero exit code: 2'
- Ensure correct publish directory is set in Netlify Site settings.
- Uses netlify attribute in HTML forms for automatic handling
- Form submissions must have unique name attributes
- Certain field names like `from` can cause submissions to be marked as spam.
- Forms work at any URL, submissions will not be affected by domain name or SSL setup.
- User must provide site URL for deletion.
- Account deletion may complicate site deletion requests.
- Last reviewed by Netlify Support - October 2024
- 'If you’re building a Single Page Application (SPA), or an app that manages its
  own routes (url paths), you’ll want to add a _redirects file to your publish directory
  with the following line to take advantage of browser history pushstate: /*    /index.html   200'
- For single page applications which require all URLs to be routed to this index.html
  page so that they can handle the routing in JavaScript, that JavaScript logic is
  going to need to handle the 404s too.
- Support for creating RESTful APIs with Netlify Functions requires additional configuration
  for specifying endpoints.
- The link from your repository to our service only authenticates us against the 'main'
  repo that you first configured, and won’t automatically allow access to submodules.
- If your submodule is public, change the URI schema for it to start with 'https://'.
- You’ll need to supply whatever you need to access that repository somehow.
- 'HTML version MUST match what your JS submits exactly: same form name, and field
  names.'
- Use the expanded data-netlify="true" attribute and data-netlify-recaptcha="true"
  in your JavaScript form.
- If someone is trying to deploy their site directly, without any build step, a common
  scenario is that they upload their site to a git repo and place all the files inside
  a sub-folder.
- For Single-Page Applications, it is important to have the contents of the _redirects
  file as '/* /index.html 200'.
- Use built-in form handling to simplify adding and managing forms for your project.
  There’s no need to make an API call or include extra form handling code.
- HTML forms must include `netlify` or `data-netlify=true` attribute.
- Form name should be unique across a site.
- Max function runtime is 10 seconds, customizable up to 26 seconds.
- Certain field names, such as 'from', can cause all submissions to be marked as spam.
- Forms work at any URL.
- Form submissions require a hidden 'form-name' input field.
- Last reviewed by Netlify Support in July 2025
- We will not provide any further tech support on that configuration for any customers
  below the Enterprise account level, as it causes all the problems listed in this
  article and we generally do not intend for people to configure their sites this
  way.
- 'If you’re building a Single Page Application (SPA), or an app that manages its
  own routes (url paths), you’ll want to add a `_redirects` file to your publish directory
  with the following line to take advantage of browser history pushstate: /*    /index.html   200'
- A 200 status code passes the request along to the proxied endpoint, and returns
  the response, such that if the endpoint returns a 500 Internal Server Error, or
  405 Method Not Allowed, that is returned to the code that made the original request.
- By default, Netlify uses a 301 status code for rewrite.
- 'The HTML version MUST match what your JS submits exactly: same form name, and field
  names.'
- You need to apply the same work around if you want to use our reCAPTCHA 2 integration,
  and create a div element in the hidden HTML with the data-netlify-recaptcha="true"
  attribute.
- Redirects need to be defined in netlify.toml or _redirects file.
- Netlify Functions have no build step and dependencies must be resolved from the
  closest node_modules folder.
- Netlify functions can't be organized into folders, but you can create a build script
  to handle the bundling of files.
- You can set up redirects in netlify.toml to map /api/<function-name> to /.netlify/functions/<function-name>
- Serverless functions have a max of 10 seconds default runtime (customizable up to
  only 26 seconds, at a cost).
- Redirects from /api/* to /.netlify/functions/servers/:splat
- Ensure the build command includes netlify-lambda build /netlify-lambda
- Redirects may affect lambda functions.
- By defining the status as ‘200’ one defines it as a POST request and by defining
  it as a ‘301’ one defines it as a GET.
- Ensure functions directory in netlify.toml matches the repo directory
- Setting a different functions folder name in netlify.toml or online via admin does
  not get reflected in final function URL.
- You cannot change the production URL of your function.
- You cannot call lambda function with DELETE or PUT methods; only POST and GET are
  permitted.
- Uses redirects to route /api/endpoint to /.netlify/functions/servers/endpoint
- Netlify creates a unique HTTP response header for each request it replies to - the
  x-nf-request-id response header.
- This header allows support teams to find exact HTTP responses in their logs.
- Netlify encourages JAMstack architecture, relying on static assets and APIs instead
  of traditional backends.
- Functions have no build step; dependencies must be resolved from the closest node_modules
  folder.
- Netlify Functions can be deployed with multiple dependencies.
- Netlify functions can't be organized into folders; each function needs to have the
  same name as its folder during deployment.
- Netlify functions depend on a return value whereas nextJS API routes depend on a
  call to res.status().
- CORS policy may block requests from different domains unless properly configured.
- Redirects require a query string param of 'path' to work.
- Ensure netlify-lambda build command is included in the Netlify console.
- 'CORS policy: Ensure Access-Control-Allow-Origin is set correctly in the function
  response.'
- The Same Origin Policy disallows reading the remote resource at http://localhost:3000/.netlify/functions/testing
- The server is running on localhost:8888
- CORS headers must be set in the Netlify function response for preflight requests.
- Functions directory in netlify.toml must match the actual directory name in the
  repo.
- Use a _redirects file to set up proxy redirects.
- CORS policy requires setting 'Access-Control-Allow-Origin' header in response.
- No 'Access-Control-Allow-Origin' header is present on the requested resource
- 500 Internal Server Error for only PUT and DELETE requests.
- 'You mentioned you tried adding the header: Access-Control-Allow-Methods'': ''*''.
  Did you do this in your function’s response? You should add that header to your
  function response so that the browser knows that the request is allowed.'
- Sites without a custom domain will be moved from site-name.netlify.com to site-name.netlify.app.
- CORS checks are required in the function.
- POSTs should work via proxy; we just send the POST to your remote service and then
  proxy its response back
- You might try sending the value of the x-nf-request-id HTTP response header from
  a failed POST
- 'Access to fetch at ‘wonderful-cray-1fd516.netlify.com/.netlify/functions/cuttly’
  from origin ‘chrome-extension://naniojgmdmkbiohhclebmfemiioanclc’ has been blocked
  by CORS policy: Response to preflight request doesn’t pass access control check:
  No ‘Access-Control-Allow-Origin’ header is present on the requested resource.'
- API_URL is set per-environment to allow for environment-specific APIs and we replace
  API_URL_PLACEHOLDER with its value in the build command.
- CORS policy may block requests from other domains if headers are not correctly set.
- CORS policy error when fetching a netlify function from another domain
- Access-Control-Allow-Origin header must be set in the function response
- Uses a proxy to redirect POST requests to specified external API
- Status code 307/308 may lead to 404 Not Found
- CORS headers need to be set in the lambda function for preflight requests.
- Netlify started returning 500 errors on redirect
- Redirect is resulting in a 500 response
- Proxied requests to REST API suddenly failing in some browsers
- Help debugging 502 intermittent error in proxy redirect
- 'Api redirects going to unknown url: https://proapi.azurewebsites.net//api/me'
- CORS error when accessing the function from a different origin.
- This function acts as a proxy server for a client app.
- Uses event.httpMethod to block GET requests
- Can authenticate POST requests by checking headers or using Netlify identity
- _redirect returns 500 Internal Server Error for only PUT and DELETE requests
- All existing sites will continue to operate properly using their current URLs.
- Traffic to .com addresses will be forwarded to .app using an HTTP 301 redirect.
- When deployed on Netlify env, headers are undefined.
- Use Netlify Functions to create a proxy for API requests.
- CORS checks are implemented in the function.
- Your headers will NOT apply to anything in the path /.netlify/* which are handled
  via a different system.
- You should be able to send HTTP headers as output from the function itself.
- CORS preflight requires OPTIONS method to be allowed.
- The method returns response headers to allow cross domain access
- Seems the preflight requires an HTTP 204 response
- Uses status code 307/308 to maintain POST request
- If using status code 200, POST request becomes GET request
- Had some Basic-Auth header set up for the site. Just had to attach an Auth header
  to the request.
- Netlify may prevent post/put/delete requests from different domains
- Uses Access-Control-Allow-Origin header to restrict access
- Adding HTTP headers is not a fool-proof way to block access.
- Uses event.httpMethod to restrict access
- Authenticate POST requests by checking headers or using Netlify identity
- When using a proxy redirect to a Netlify function, headers may not be passed correctly
  in production.
- CORS issues may require adding Access-Control-Allow-Origin header on the server
  side.
- You cannot use our normal custom headers directly on functions.
- To enable CORS, allow OPTIONS method and return Access-Control-Allow-Origin header.
errors:
- '500 Internal Server Error: Check server status'
- '404 Not Found: Verify the endpoint URL'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404: Resource not found'
- '404 Not Found: Check the endpoint path'
- Internal Server Error
- Npm run build failed exit code 137
- Deploy processing failed after 5 attempts
- '422 Unprocessable Content: Failed to handle signup webhook'
- '401 Unauthorized: Check your credentials or token expiration.'
- '404 could not be found: Check the endpoint or resource'
- '429 Too Many Requests: Throttle API calls'
- '500 Internal Server Error: Retry after a short delay'
- '422: Unprocessable Content: Failed to handle signup webhook'
- 'MissingBlobsEnvironmentError: NETLIFY_SITE_ID is undefined.'
- 'MissingBlobsEnvironmentError: Check your configuration'
- '502: The deployment failed while serving the request'
- '500: Internal server error'
- '404 Not Found: Page not found'
- '404: Page not found'
- '404: Page not found - Check your function URL and deployment settings.'
- '502 Gateway Error: Check server function for issues'
- 'MissingBlobsEnvironmentError: Ensure the environment variable is set'
- '404 Not Found: Check the URL or resource availability'
- '404 Not Found: Check the endpoint URL'
- '401 Unauthorized: Ensure valid authentication'
- 'DNS verification failed: domain doesn’t appear to be served by Netlify'
- We could not provision a Let’s Encrypt certificate for your custom domain
- '404 Page not found: Check the provided URL and ensure the correct path.'
- 'Invocation Failed: Error - Cannot find module ''next/dist/server/lib/start-server.js'''
- 'ELIFECYCLE: Indicates a problem with the npm script execution.'
- '127: Command not found error, possibly due to missing dependencies or incorrect
  scripts.'
- 'DNS verification failed: Domain doesn’t appear to be served by Netlify'
- We could not provision a Let’s Encrypt certificate for your custom domain.
- 'FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript
  heap out of memory'
- Killed
- 'This function has crashed: An unhandled error in the function code triggered the
  following message: Error - Cannot find module ''next/dist/server/lib/start-server.js''
  Require stack: - /var/task/.netlify/dist/run/next.cjs'
- npm ERR! code ELIFECYCLE
- npm ERR! errno 1
- npm ERR! Exit status 1
- '404: Page not found - Check if the correct URL is being used.'
- 'Page Not Found: Ensure correct form name and field definitions.'
- 'Blank submissions: Check for duplicate field names or spam filtering.'
- '404 Not Found: Site does not exist or was already deleted.'
- '403 Forbidden: User is not authorized to delete this site.'
- '404: Page not found - Check if the publish directory is set correctly.'
- Check if you’re running any Edge Functions that could be blocking the request.
- 'Page Not Found: Ensure the form URL is correct.'
- 'Blank form submissions: Check input field names.'
- 'Submissions marked as spam: Ensure valid data is entered.'
- 'HTTP 429: Rate limit vast numbers of connections to your site'
- '200 OK with HTML response but no submission in the dashboard: Check if the form
  name matches.'
- If you change the submit path to other than '/', I got status 404.
- Cannot GET /api/latest_netflix
- '404: Page not found - check the redirect rules'
- 'CORS error: Ensure headers are set correctly'
- '404: Page not found.'
- Invalid /.netlify path in redirect source.
- 'Access Denied: Check permissions'
- '422: Validation failed'
- '503: Service unavailable'
- '500 Internal Server Error: This occurs for only PUT and DELETE requests.'
- '404 Not Found: Check the URL requested.'
- '301 Redirect: Ensure correct URL is used.'
- 'CORS policy: No ''Access-Control-Allow-Origin'' header is present on the requested
  resource.'
- '404 Not Found: Check redirect rules in the netlify.toml file.'
- 'CORS policy error: No ''Access-Control-Allow-Origin'' header is present on the
  requested resource.'
- 'CORS error: Access-Control-Allow-Origin header not set'
- No 'Access-Control-Allow-Origin' header is present on the requested resource.
- '404: page not found when accessing the function URL directly.'
- 'Method Not Allowed: Ensure the correct HTTP method is used.'
- 'Network Error: Check for CORS policy issues.'
- 'Access to XMLHttpRequest at ''serverURL/endpoint'' from origin ''clientURL'' has
  been blocked by CORS policy: No ''Access-Control-Allow-Origin'' header is present
  on the requested resource.'
- '500 Internal Server Error: PUT and DELETE requests not reaching API server.'
- '401 Unauthorized: Check CORS configuration or function access'
- '403 Forbidden: Check your proxy settings or endpoint permissions'
- No ‘Access-Control-Allow-Origin’ header is present on the requested resource
- 'Network Error: Axios method for setting the callback for the XMLHttpRequest onerror
  function.'
- 'CORS policy: Response to preflight request doesn''t pass access control check:
  No ''Access-Control-Allow-Origin'' header is present on the requested resource.'
- 'CORS policy: Response to preflight request doesn''t pass access control check'
- '404 Not Found: The URL may not exist or the method may not be allowed'
- '500: Internal Server Error'
- '500 Internal Server Error: Check server logs for details'
- '502 Bad Gateway: Verify the upstream server is reachable'
- '405 Method Not Allowed: Ensure the correct HTTP method is being used.'
- '500: ah ah ah didn''t say the magic word'
- '500 Internal Server Error: PUT and DELETE requests not reaching API server'
- '401 Unauthorized: Recheck function access permissions.'
- '403 Forbidden: Check proxy rules or remote service configuration'
- '401 Unauthorized: Recheck Basic-Auth header'
- 'Network Error: Axios method for setting callback for XMLHttpRequest onerror function.'
- 'HTTP 405: Method Not Allowed'
- 'HTTP 400: Bad Request'
- '400: You are not using a http POST method for this endpoint.'
- '400: Name, email, and message are required.'
- '402: No name specified. Please specify a name.'
- '404 Not Found: Ensure the correct API endpoint is being called'
- '500 Internal Server Error: Throttle API calls or reduce frequency'
- '500 Internal Server Error: Check server logs for more information'
- '502 Bad Gateway: Check if the upstream server is available'
- '403: Forbidden'
- Headers are undefined when deployed on Netlify environment.
- unexpected json parse character
- '401: Recheck Basic-Auth header for access'
- '403 Forbidden: Check permissions or CORS settings'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.netlify.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.netlify.com/oauth/token
    client_id: '{{ dlt.secrets[''netlify_client_id''] }}'
    client_secret: '{{ dlt.secrets[''netlify_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''netlify_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
