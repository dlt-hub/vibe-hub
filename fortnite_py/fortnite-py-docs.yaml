resources:
- name: user
  endpoint:
    path: /fetch_user
    method: GET
- name: user_by_display_name
  endpoint:
    path: /fetch_user_by_display_name
    method: GET
- name: user_by_email
  endpoint:
    path: /fetch_user_by_email
    method: GET
- name: fetch_multiple_br_stats_collections
  endpoint:
    path: /fetch_multiple_br_stats_collections
    method: POST
    data_selector: stats
    params: {}
- name: fetch_party
  endpoint:
    path: /fetch_party
    method: GET
    data_selector: party
    params: {}
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: GET
    data_selector: user
    params: {}
- name: fetch_user_by_display_name
  endpoint:
    path: /fetch_user_by_display_name
    method: GET
    data_selector: user
    params: {}
- name: fetch_user_by_email
  endpoint:
    path: /fetch_user_by_email
    method: GET
    data_selector: user
    params: {}
- name: fetch_users
  endpoint:
    path: /fetch_users
    method: GET
    data_selector: users
    params: {}
- name: fetch_users_by_display_name
  endpoint:
    path: /fetch_users_by_display_name
    method: GET
    data_selector: users
    params: {}
- name: join_party
  endpoint:
    path: /join_party
    method: POST
    data_selector: party
    params: {}
- name: remove_or_decline_friend
  endpoint:
    path: /remove_or_decline_friend
    method: DELETE
    data_selector: friend
    params: {}
- name: restart
  endpoint:
    path: /restart
    method: POST
    data_selector: restart
    params: {}
- name: search_sac_by_slug
  endpoint:
    path: /search_sac_by_slug
    method: GET
    data_selector: slug
    params: {}
- name: users
  endpoint:
    path: /search_users
    method: GET
    data_selector: users
    params: {}
- name: user_block
  endpoint:
    path: /unblock_user
    method: POST
    data_selector: result
    params: {}
- name: fetch_multiple_br_stats_collections
  endpoint:
    path: /fetch_multiple_br_stats_collections
    method: POST
- name: fetch_party
  endpoint:
    path: /fetch_party
    method: POST
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: POST
- name: fetch_user_by_display_name
  endpoint:
    path: /fetch_user_by_display_name
    method: POST
- name: fetch_user_by_email
  endpoint:
    path: /fetch_user_by_email
    method: POST
- name: fetch_users
  endpoint:
    path: /fetch_users
    method: POST
- name: fetch_users_by_display_name
  endpoint:
    path: /fetch_users_by_display_name
    method: POST
- name: join_party
  endpoint:
    path: /join_party
    method: POST
- name: remove_or_decline_friend
  endpoint:
    path: /remove_or_decline_friend
    method: POST
- name: restart
  endpoint:
    path: /restart
    method: POST
- name: run
  endpoint:
    path: /run
    method: POST
- name: search_sac_by_slug
  endpoint:
    path: /search_sac_by_slug
    method: POST
- name: search_users
  endpoint:
    path: /search_users
    method: GET
    params: {}
- name: unblock_user
  endpoint:
    path: /unblock_user
    method: POST
    params: {}
- name: user_stats
  endpoint:
    path: /v1/stats
    method: GET
    data_selector: stats
- name: blocked_user
  endpoint:
    path: /blocked_user
    method: GET
    data_selector: records
- name: UserSearchEntry
  endpoint:
    path: /user/search
    method: GET
    data_selector: matches
    params: {}
- name: SacSearchEntryUser
  endpoint:
    path: /modules/fortnitepy/user.html#SacSearchEntryUser
    method: GET
    data_selector: attributes
    params: {}
- name: battlepass_level
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: stats
    params: {}
- name: user_stats
  endpoint:
    path: /fetch_br_stats_collection
    method: GET
    data_selector: statsCollection
    params: {}
- name: incoming_pending_friend
  endpoint:
    path: /incoming_pending_friend
    method: GET
    data_selector: records
- name: OutgoingPendingFriend
  endpoint:
    path: /fortnitepy/OutgoingPendingFriend
    method: GET
    data_selector: records
- name: FriendMessage
  endpoint:
    path: /fortnitepy/FriendMessage
    method: GET
    data_selector: records
- name: PartyMessage
  endpoint:
    path: /fortnitepy/PartyMessage
    method: GET
    data_selector: records
- name: fetch_multiple_battlepass_levels
  endpoint:
    path: /fetch_multiple_battlepass_levels
    method: GET
    data_selector: users
- name: fetch_battlepass_level
  endpoint:
    path: /fetch_battlepass_level
    method: GET
    data_selector: user_id
- name: fetch_leaderboard
  endpoint:
    path: /fetch_leaderboard
    method: GET
    data_selector: stat
- name: fetch_party
  endpoint:
    path: /fetch_party
    method: GET
    data_selector: party_id
- name: fetch_lightswitch_status
  endpoint:
    path: /fetch_lightswitch_status
    method: GET
    data_selector: service_id
- name: fetch_item_shop
  endpoint:
    path: /fetch_item_shop
    method: GET
    data_selector: item_shop
- name: fetch_br_news
  endpoint:
    path: /fetch_br_news
    method: GET
    data_selector: battle_royale_news
- name: fetch_br_playlists
  endpoint:
    path: /fetch_br_playlists
    method: GET
    data_selector: playlists
- name: fetch_active_ltms
  endpoint:
    path: /fetch_active_ltms
    method: GET
    data_selector: region
- name: has_friend
  endpoint:
    path: /has_friend
    method: GET
    data_selector: response
- name: is_pending
  endpoint:
    path: /is_pending
    method: GET
    data_selector: response
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
    data_selector: response
- name: accept_friend
  endpoint:
    path: /accept_friend
    method: POST
    data_selector: response
- name: add_friend
  endpoint:
    path: /add_friend
    method: POST
    data_selector: response
- name: block_user
  endpoint:
    path: /block_user
    method: POST
    data_selector: response
- name: fetch_active_ltms
  endpoint:
    path: /fetch_active_ltms
    method: GET
    data_selector: response
- name: fetch_avatars
  endpoint:
    path: /fetch_avatars
    method: GET
    data_selector: response
- name: fetch_battlepass_level
  endpoint:
    path: /fetch_battlepass_level
    method: GET
    data_selector: response
- name: fetch_blocklist
  endpoint:
    path: /fetch_blocklist
    method: GET
    data_selector: response
- name: fetch_br_news
  endpoint:
    path: /fetch_br_news
    method: GET
    data_selector: response
- name: fetch_br_playlists
  endpoint:
    path: /fetch_br_playlists
    method: GET
    data_selector: response
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: response
- name: fetch_item_shop
  endpoint:
    path: /fetch_item_shop
    method: GET
    data_selector: response
- name: fetch_leaderboard
  endpoint:
    path: /fetch_leaderboard
    method: GET
    data_selector: response
- name: event_device_auth_generate
  endpoint:
    path: /event/device_auth_generate
    method: POST
    data_selector: details
    params: {}
- name: event_auth_refresh
  endpoint:
    path: /event/auth_refresh
    method: POST
    data_selector: 'null'
    params: {}
- name: event_friend_message
  endpoint:
    path: /event/friend_message
    method: POST
    data_selector: message
    params: {}
- name: event_party_message
  endpoint:
    path: /event/party_message
    method: POST
    data_selector: message
    params: {}
- name: event_friend_add
  endpoint:
    path: /event/friend_add
    method: POST
    data_selector: friend
    params: {}
- name: event_friend_remove
  endpoint:
    path: /event/friend_remove
    method: POST
    data_selector: friend
    params: {}
- name: event_friend_request
  endpoint:
    path: /event/friend_request
    method: POST
    data_selector: request
    params: {}
- name: event_friend_request_decline
  endpoint:
    path: /event/friend_request_decline
    method: POST
    data_selector: friend
    params: {}
- name: event_friend_request_abort
  endpoint:
    path: /event/friend_request_abort
    method: POST
    data_selector: friend
    params: {}
- name: event_friend_presence
  endpoint:
    path: /event/friend_presence
    method: POST
    data_selector: presence
    params: {}
- name: event_party_invite
  endpoint:
    path: /event/party_invite
    method: POST
    data_selector: invitation
    params: {}
- name: event_invalid_party_invite
  endpoint:
    path: /event/invalid_party_invite
    method: POST
    data_selector: friend
    params: {}
- name: event_party_member_promote
  endpoint:
    path: /event/party_member_promote
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_kick
  endpoint:
    path: /event/party_member_kick
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_zombie
  endpoint:
    path: /event/party_member_zombie
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_reconnect
  endpoint:
    path: /event/party_member_reconnect
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_expire
  endpoint:
    path: /event/party_member_expire
    method: POST
    data_selector: member
    params: {}
- name: event_party_update
  endpoint:
    path: /event/party_update
    method: POST
    data_selector: party
    params: {}
- name: event_party_member_update
  endpoint:
    path: /event/party_member_update
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_join
  endpoint:
    path: /event/party_member_join
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_leave
  endpoint:
    path: /event/party_member_leave
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_confirm
  endpoint:
    path: /event/party_member_confirm
    method: POST
    data_selector: confirmation
    params: {}
- name: event_party_join_request
  endpoint:
    path: /event/party_join_request
    method: POST
    data_selector: request
    params: {}
- name: event_party_member_chatban
  endpoint:
    path: /event/party_member_chatban
    method: POST
    data_selector: member
    params: {}
- name: event_party_invite_cancel
  endpoint:
    path: /event/party_invite_cancel
    method: POST
    data_selector: 'null'
    params: {}
- name: event_party_invite_decline
  endpoint:
    path: /event/party_invite_decline
    method: POST
    data_selector: 'null'
    params: {}
- name: event_party_playlist_change
  endpoint:
    path: /event/party_playlist_change
    method: POST
    data_selector: party
    params: {}
- name: event_party_squad_fill_change
  endpoint:
    path: /event/party_squad_fill_change
    method: POST
    data_selector: party
    params: {}
- name: event_party_privacy_change
  endpoint:
    path: /event/party_privacy_change
    method: POST
    data_selector: party
    params: {}
- name: event_party_member_team_swap
  endpoint:
    path: /event/party_member_team_swap
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_ready_change
  endpoint:
    path: /event/party_member_ready_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_input_change
  endpoint:
    path: /event/party_member_input_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_assisted_challenge_change
  endpoint:
    path: /event/party_member_assisted_challenge_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_outfit_change
  endpoint:
    path: /event/party_member_outfit_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_backpack_change
  endpoint:
    path: /event/party_member_backpack_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_pet_change
  endpoint:
    path: /event/party_member_pet_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_pickaxe_change
  endpoint:
    path: /event/party_member_pickaxe_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_contrail_change
  endpoint:
    path: /event/party_member_contrail_change
    method: POST
    data_selector: member
    params: {}
- name: event_party_member_emote_change
- name: event_party_member_emoji_change
- name: event_party_member_banner_change
- name: event_party_member_battlepass_info_change
- name: event_party_member_enlightenments_change
- name: event_party_member_corruption_change
- name: event_party_member_outfit_variants_change
- name: event_party_member_backpack_variants_change
- name: event_party_member_pickaxe_variants_change
- name: event_party_member_contrail_variants_change
- name: event_party_member_in_match_change
- name: event_party_member_match_players_left_change
- name: event_party_member_lobby_map_marker_is_visible_change
- name: event_party_member_lobby_map_marker_coordinates_change
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user_data
    params: {}
- name: battlepass_level
  endpoint:
    path: /battlepass_level
    method: GET
    data_selector: battlepass_data
    params: {}
- name: br_stats
  endpoint:
    path: /br_stats
    method: GET
    data_selector: stats_data
    params: {}
- name: blocked_user
  endpoint:
    path: /blocked_user
    method: GET
    data_selector: blocked_users
    params: {}
- name: user_search_entry
  endpoint:
    path: /user_search_entry
    method: GET
    data_selector: user_search_entries
    params: {}
- name: SacSearchEntryUser
  endpoint:
    path: /user/search
    method: GET
    data_selector: users
- name: friend
  endpoint:
    path: /friends
    method: GET
    data_selector: friends
    params: {}
- name: incoming_pending_friend
  endpoint:
    path: /incoming_pending_friend
    method: GET
    data_selector: records
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: StatsV2
- name: fetch_br_stats_collection
  endpoint:
    path: /fetch_br_stats_collection
    method: GET
    data_selector: StatsCollection
- name: FriendMessage
  endpoint:
    path: /friend/message
    method: GET
    data_selector: message
- name: PartyMessage
  endpoint:
    path: /party/message
    method: GET
    data_selector: message
- name: PartyMember
  endpoint:
    path: /party/member
    method: GET
    data_selector: member
- name: party_member
  endpoint:
    path: /party/member
    method: GET
    data_selector: records
- name: set_pet
  endpoint:
    path: /set_pet
    method: POST
- name: clear_pet
  endpoint:
    path: /clear_pet
    method: POST
- name: set_pickaxe
  endpoint:
    path: /set_pickaxe
    method: POST
- name: set_contrail
  endpoint:
    path: /set_contrail
    method: POST
- name: clear_contrail
  endpoint:
    path: /clear_contrail
    method: POST
- name: set_emote
  endpoint:
    path: /set_emote
    method: POST
- name: set_emoji
  endpoint:
    path: /set_emoji
    method: POST
- name: clear_emote
  endpoint:
    path: /clear_emote
    method: POST
- name: set_banner
  endpoint:
    path: /set_banner
    method: POST
- name: set_battlepass_info
  endpoint:
    path: /set_battlepass_info
    method: POST
- name: set_assisted_challenge
  endpoint:
    path: /set_assisted_challenge
    method: POST
- name: clear_assisted_challenge
  endpoint:
    path: /clear_assisted_challenge
    method: POST
- name: set_position
  endpoint:
    path: /set_position
    method: POST
- name: set_in_match
  endpoint:
    path: /set_in_match
    method: POST
- name: clear_in_match
  endpoint:
    path: /clear_in_match
    method: POST
- name: set_lobby_map_marker
  endpoint:
    path: /set_lobby_map_marker
    method: POST
- name: clear_lobby_map_marker
  endpoint:
    path: /clear_lobby_map_marker
    method: POST
- name: add
  endpoint:
    path: /add
    method: POST
- name: battlepass_info
  endpoint:
    path: /battlepass/info
    method: GET
    data_selector: battlepass_info
- name: user_stats
  endpoint:
    path: /user/stats
    method: GET
    data_selector: stats
- name: party_member
  endpoint:
    path: /party/member
    method: GET
    data_selector: members
    params: {}
- name: battlepass_level
  endpoint:
    path: /fetch_battlepass_level
    method: GET
    data_selector: level
    params: {}
- name: leaderboard
  endpoint:
    path: /fetch_leaderboard
    method: GET
    data_selector: entries
    params: {}
- name: party
  endpoint:
    path: /fetch_party
    method: GET
    data_selector: party_data
    params: {}
- name: item_shop
  endpoint:
    path: /fetch_item_shop
    method: GET
    data_selector: shop_data
    params: {}
- name: br_news
  endpoint:
    path: /fetch_br_news
    method: GET
    data_selector: news_posts
    params: {}
- name: br_playlists
  endpoint:
    path: /fetch_br_playlists
    method: GET
    data_selector: playlists
    params: {}
- name: active_ltms
  endpoint:
    path: /fetch_active_ltms
    method: GET
    data_selector: ltms
    params: {}
- name: friend_status
  endpoint:
    path: /client/has_friend
    method: GET
    data_selector: friendStatus
    params: {}
- name: pending_friend_status
  endpoint:
    path: /client/is_pending
    method: GET
    data_selector: pendingFriendStatus
    params: {}
- name: blocked_user_status
  endpoint:
    path: /client/is_blocked
    method: GET
    data_selector: blockedUserStatus
    params: {}
- name: accept_friend_request
  endpoint:
    path: /client/accept_friend
    method: POST
    data_selector: friendAccepted
    params: {}
- name: add_friend_request
  endpoint:
    path: /client/add_friend
    method: POST
    data_selector: friendAdded
    params: {}
- name: block_user_request
  endpoint:
    path: /client/block_user
    method: POST
    data_selector: userBlocked
    params: {}
- name: fetch_active_ltms
  endpoint:
    path: /client/fetch_active_ltms
    method: GET
    data_selector: activeLTMs
    params: {}
- name: fetch_avatars
  endpoint:
    path: /client/fetch_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: fetch_battlepass_level
  endpoint:
    path: /client/fetch_battlepass_level
    method: GET
    data_selector: battlepassLevel
    params: {}
- name: fetch_blocklist
  endpoint:
    path: /client/fetch_blocklist
    method: GET
    data_selector: blocklist
    params: {}
- name: fetch_br_news
  endpoint:
    path: /client/fetch_br_news
    method: GET
    data_selector: brNews
    params: {}
- name: fetch_br_playlists
  endpoint:
    path: /client/fetch_br_playlists
    method: GET
    data_selector: brPlaylists
    params: {}
- name: fetch_br_stats
  endpoint:
    path: /client/fetch_br_stats
    method: GET
    data_selector: brStats
    params: {}
- name: fetch_item_shop
  endpoint:
    path: /client/fetch_item_shop
    method: GET
    data_selector: itemShop
    params: {}
- name: fetch_leaderboard
  endpoint:
    path: /client/fetch_leaderboard
    method: GET
    data_selector: leaderboard
    params: {}
- name: leaderboard_entries
  endpoint:
    path: /v2/leaderboard
    method: GET
    data_selector: entries
    params: {}
- name: battlepass_levels
  endpoint:
    path: /v2/battlepass/levels
    method: GET
    data_selector: levels
    params: {}
- name: event_party_member_emote_change
  endpoint:
    path: /event_party_member_emote_change
    method: GET
    data_selector: member
- name: event_party_member_emoji_change
  endpoint:
    path: /event_party_member_emoji_change
    method: GET
    data_selector: member
- name: event_party_member_banner_change
  endpoint:
    path: /event_party_member_banner_change
    method: GET
    data_selector: member
- name: event_party_member_battlepass_info_change
  endpoint:
    path: /event_party_member_battlepass_info_change
    method: GET
    data_selector: member
- name: event_party_member_enlightenments_change
  endpoint:
    path: /event_party_member_enlightenments_change
    method: GET
    data_selector: member
- name: event_party_member_corruption_change
  endpoint:
    path: /event_party_member_corruption_change
    method: GET
    data_selector: member
- name: event_party_member_outfit_variants_change
  endpoint:
    path: /event_party_member_outfit_variants_change
    method: GET
    data_selector: member
- name: event_party_member_backpack_variants_change
  endpoint:
    path: /event_party_member_backpack_variants_change
    method: GET
    data_selector: member
- name: event_party_member_pickaxe_variants_change
  endpoint:
    path: /event_party_member_pickaxe_variants_change
    method: GET
    data_selector: member
- name: event_party_member_contrail_variants_change
  endpoint:
    path: /event_party_member_contrail_variants_change
    method: GET
    data_selector: member
- name: event_party_member_in_match_change
  endpoint:
    path: /event_party_member_in_match_change
    method: GET
    data_selector: member
- name: event_party_member_match_players_left_change
  endpoint:
    path: /event_party_member_match_players_left_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_is_visible_change
  endpoint:
    path: /event_party_member_lobby_map_marker_is_visible_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_coordinates_change
  endpoint:
    path: /event_party_member_lobby_map_marker_coordinates_change
    method: GET
    data_selector: member
- name: SacSearchEntryUser
  endpoint:
    path: /user/search
    method: GET
    data_selector: users
    params: {}
- name: friend
  endpoint:
    path: /friend
    method: GET
    data_selector: friends
    params: {}
- name: incoming_pending_friend
  endpoint:
    path: /incoming_pending_friend
    method: GET
    data_selector: friends
    params: {}
- name: FriendMessage
  endpoint:
    path: /friend/message
    method: GET
    data_selector: messages
- name: PartyMessage
  endpoint:
    path: /party/message
    method: GET
    data_selector: messages
- name: PartyMember
  endpoint:
    path: /party/member
    method: GET
    data_selector: members
- name: party_member
  endpoint:
    path: /party/member
    method: GET
    data_selector: members
    params: {}
- name: party_member
  endpoint:
    path: /party/members
    method: GET
    data_selector: members
    params: {}
- name: JustChattingClientPartyMember
  endpoint:
    path: /modules/fortnitepy/party.html#JustChattingClientPartyMember
    method: GET
    data_selector: records
- name: Party
  endpoint:
    path: /modules/fortnitepy/party.html#Party
    method: GET
    data_selector: records
- name: has_friend
  endpoint:
    path: /client/has_friend
    method: GET
    data_selector: true/false
- name: is_pending
  endpoint:
    path: /client/is_pending
    method: GET
    data_selector: true/false
- name: is_blocked
  endpoint:
    path: /client/is_blocked
    method: GET
    data_selector: true/false
- name: accept_friend
  endpoint:
    path: /client/accept_friend
    method: POST
    data_selector: friend
- name: add_friend
  endpoint:
    path: /client/add_friend
    method: POST
    data_selector: friend_request
- name: block_user
  endpoint:
    path: /client/block_user
    method: POST
    data_selector: blocked_user
- name: fetch_active_ltms
  endpoint:
    path: /client/fetch_active_ltms
    method: GET
    data_selector: active_ltms
- name: fetch_avatars
  endpoint:
    path: /client/fetch_avatars
    method: GET
    data_selector: avatars
- name: fetch_battlepass_level
  endpoint:
    path: /client/fetch_battlepass_level
    method: GET
    data_selector: battlepass_level
- name: fetch_blocklist
  endpoint:
    path: /client/fetch_blocklist
    method: GET
    data_selector: blocklist
- name: fetch_br_news
  endpoint:
    path: /client/fetch_br_news
    method: GET
    data_selector: br_news
- name: fetch_br_playlists
  endpoint:
    path: /client/fetch_br_playlists
    method: GET
    data_selector: br_playlists
- name: fetch_br_stats
  endpoint:
    path: /client/fetch_br_stats
    method: GET
    data_selector: br_stats
- name: fetch_item_shop
  endpoint:
    path: /client/fetch_item_shop
    method: GET
    data_selector: item_shop
- name: fetch_leaderboard
  endpoint:
    path: /client/fetch_leaderboard
    method: GET
    data_selector: leaderboard
- name: event_party_member_emote_change
  endpoint:
    path: event_party_member_emote_change
    method: GET
    data_selector: member
- name: event_party_member_emoji_change
  endpoint:
    path: event_party_member_emoji_change
    method: GET
    data_selector: member
- name: event_party_member_banner_change
  endpoint:
    path: event_party_member_banner_change
    method: GET
    data_selector: member
- name: event_party_member_battlepass_info_change
  endpoint:
    path: event_party_member_battlepass_info_change
    method: GET
    data_selector: member
- name: event_party_member_enlightenments_change
  endpoint:
    path: event_party_member_enlightenments_change
    method: GET
    data_selector: member
- name: event_party_member_corruption_change
  endpoint:
    path: event_party_member_corruption_change
    method: GET
    data_selector: member
- name: event_party_member_outfit_variants_change
  endpoint:
    path: event_party_member_outfit_variants_change
    method: GET
    data_selector: member
- name: event_party_member_backpack_variants_change
  endpoint:
    path: event_party_member_backpack_variants_change
    method: GET
    data_selector: member
- name: event_party_member_pickaxe_variants_change
  endpoint:
    path: event_party_member_pickaxe_variants_change
    method: GET
    data_selector: member
- name: event_party_member_contrail_variants_change
  endpoint:
    path: event_party_member_contrail_variants_change
    method: GET
    data_selector: member
- name: event_party_member_in_match_change
  endpoint:
    path: event_party_member_in_match_change
    method: GET
    data_selector: member
- name: event_party_member_match_players_left_change
  endpoint:
    path: event_party_member_match_players_left_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_is_visible_change
  endpoint:
    path: event_party_member_lobby_map_marker_is_visible_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_coordinates_change
  endpoint:
    path: event_party_member_lobby_map_marker_coordinates_change
    method: GET
    data_selector: member
- name: user
  endpoint:
    path: /user
    method: GET
- name: blocked_user
  endpoint:
    path: /user/blocked
    method: GET
- name: user_search_entry
  endpoint:
    path: /user/search
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: friend
  endpoint:
    path: /friend
    method: GET
    data_selector: friend
    params: {}
- name: incoming_pending_friend
  endpoint:
    path: /incoming_pending_friend
    method: GET
    data_selector: friends
    params: {}
- name: br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: stats
    params: {}
- name: br_stats_collection
  endpoint:
    path: /fetch_br_stats_collection
    method: GET
    data_selector: stats_collection
    params: {}
- name: FriendMessage
  endpoint:
    path: /fortnitepy/FriendMessage
    method: GET
    data_selector: records
- name: PartyMessage
  endpoint:
    path: /fortnitepy/PartyMessage
    method: GET
    data_selector: records
- name: PartyMember
  endpoint:
    path: /fortnitepy/PartyMember
    method: GET
    data_selector: records
- name: party_member
  endpoint:
    path: /modules/fortnitepy/party
    method: GET
    data_selector: members
    params: {}
- name: party_member
  endpoint:
    path: /party/member
    method: GET
    data_selector: members
    params: {}
- name: block_user
  endpoint:
    path: /block_user
    method: POST
    data_selector: result
    params: {}
- name: unblock_user
  endpoint:
    path: /unblock_user
    method: POST
    data_selector: result
    params: {}
- name: add_friend
  endpoint:
    path: /add_friend
    method: POST
    data_selector: result
    params: {}
- name: accept_friend
  endpoint:
    path: /accept_friend
    method: POST
    data_selector: result
    params: {}
- name: remove_or_decline_friend
  endpoint:
    path: /remove_or_decline_friend
    method: POST
    data_selector: result
    params: {}
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: stats
    params: {}
- name: fetch_multiple_br_stats
  endpoint:
    path: /fetch_multiple_br_stats
    method: GET
    data_selector: stats
    params: {}
- name: fetch_multiple_br_stats_collections
  endpoint:
    path: /fetch_multiple_br_stats_collections
    method: GET
    data_selector: collections
    params: {}
- name: friends
  endpoint:
    path: /modules/fortnitepy/client.html#Client.has_friend
    method: GET
    data_selector: True or False
    params: {}
- name: pending_friends
  endpoint:
    path: /modules/fortnitepy/client.html#Client.is_pending
    method: GET
    data_selector: True or False
    params: {}
- name: blocked_users
  endpoint:
    path: /modules/fortnitepy/client.html#Client.is_blocked
    method: GET
    data_selector: True or False
    params: {}
- name: accept_friend_request
  endpoint:
    path: /modules/fortnitepy/client.html#Client.accept_friend
    method: POST
    data_selector: Friend object
    params: {}
- name: add_friend
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.add_friend
    method: POST
    data_selector: Friend object
    params: {}
- name: block_user
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.block_user
    method: POST
    data_selector: Success or failure
    params: {}
- name: fetch_active_ltms
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_active_ltms
    method: GET
    data_selector: List of internal playlist names
    params: {}
- name: fetch_avatars
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_avatars
    method: GET
    data_selector: Dict of avatars
    params: {}
- name: fetch_battlepass_level
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_battlepass_level
    method: GET
    data_selector: Battlepass level
    params: {}
- name: fetch_blocklist
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_blocklist
    method: GET
    data_selector: List of ids
    params: {}
- name: fetch_br_news
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_br_news
    method: GET
    data_selector: List of news posts
    params: {}
- name: fetch_br_playlists
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_br_playlists
    method: GET
    data_selector: List of playlists
    params: {}
- name: fetch_br_stats
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_br_stats
    method: GET
    data_selector: Stats object
    params: {}
- name: fetch_item_shop
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_item_shop
    method: GET
    data_selector: Item shop data
    params: {}
- name: fetch_leaderboard
  endpoint:
    path: /modules/fortnitepy/client.html#BasicClient.fetch_leaderboard
    method: GET
    data_selector: Leaderboard data
    params: {}
- name: leaderboard_entries
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: entries
- name: lightswitch_status
  endpoint:
    path: /lightswitch/status
    method: GET
    data_selector: status
- name: battlepass_levels
  endpoint:
    path: /battlepass/levels
    method: GET
    data_selector: levels
- name: br_stats
  endpoint:
    path: /br/stats
    method: GET
    data_selector: stats
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user
- name: event_party_member_emote_change
  endpoint:
    path: /event_party_member_emote_change
    method: GET
    data_selector: records
- name: event_party_member_emoji_change
  endpoint:
    path: /event_party_member_emoji_change
    method: GET
    data_selector: records
- name: event_party_member_banner_change
  endpoint:
    path: /event_party_member_banner_change
    method: GET
    data_selector: records
- name: event_party_member_battlepass_info_change
  endpoint:
    path: /event_party_member_battlepass_info_change
    method: GET
    data_selector: records
- name: event_party_member_enlightenments_change
  endpoint:
    path: /event_party_member_enlightenments_change
    method: GET
    data_selector: records
- name: event_party_member_corruption_change
  endpoint:
    path: /event_party_member_corruption_change
    method: GET
    data_selector: records
- name: event_party_member_outfit_variants_change
  endpoint:
    path: /event_party_member_outfit_variants_change
    method: GET
    data_selector: records
- name: event_party_member_backpack_variants_change
  endpoint:
    path: /event_party_member_backpack_variants_change
    method: GET
    data_selector: records
- name: event_party_member_pickaxe_variants_change
  endpoint:
    path: /event_party_member_pickaxe_variants_change
    method: GET
    data_selector: records
- name: event_party_member_contrail_variants_change
  endpoint:
    path: /event_party_member_contrail_variants_change
    method: GET
    data_selector: records
- name: event_party_member_in_match_change
  endpoint:
    path: /event_party_member_in_match_change
    method: GET
    data_selector: records
- name: event_party_member_match_players_left_change
  endpoint:
    path: /event_party_member_match_players_left_change
    method: GET
    data_selector: records
- name: event_party_member_lobby_map_marker_is_visible_change
  endpoint:
    path: /event_party_member_lobby_map_marker_is_visible_change
    method: GET
    data_selector: records
- name: event_party_member_lobby_map_marker_coordinates_change
  endpoint:
    path: /event_party_member_lobby_map_marker_coordinates_change
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user_data
- name: battlepass_level
  endpoint:
    path: /user/battlepass_level
    method: GET
    data_selector: battlepass_data
- name: br_stats
  endpoint:
    path: /user/br_stats
    method: GET
    data_selector: stats_data
- name: br_stats_collection
  endpoint:
    path: /user/br_stats_collection
    method: GET
    data_selector: stats_collection_data
- name: blocked_user
  endpoint:
    path: /user/blocked
    method: GET
    data_selector: blocked_users
    params: {}
- name: user_search_entry
  endpoint:
    path: /user/search
    method: GET
    data_selector: user_search_results
    params: {}
- name: friend
  endpoint:
    path: /friend
    method: GET
- name: br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: stats
    params:
      start_time: null
      end_time: null
- name: br_stats_collection
  endpoint:
    path: /fetch_br_stats_collection
    method: GET
    data_selector: stats_collection
    params:
      start_time: null
      end_time: null
- name: party_member
  endpoint:
    path: /party/member
    method: GET
    data_selector: members
    params: {}
- name: battlepass_level
  endpoint:
    path: /v1/battlepass/level
    method: GET
    data_selector: levels
    params: {}
- name: leaderboard
  endpoint:
    path: /v1/leaderboard
    method: GET
    data_selector: entries
    params: {}
- name: party
  endpoint:
    path: /v1/party/{party_id}
    method: GET
    data_selector: party
    params: {}
- name: user_stats
  endpoint:
    path: /v1/users/{user_id}/stats
    method: GET
    data_selector: stats
    params: {}
- name: battlepass_levels
  endpoint:
    path: /v1/battlepass/levels
    method: GET
    data_selector: levels
    params: {}
- name: event_party_member_emote_change
  endpoint:
    path: /event_party_member_emote_change
    method: GET
    data_selector: member
- name: event_party_member_emoji_change
  endpoint:
    path: /event_party_member_emoji_change
    method: GET
    data_selector: member
- name: event_party_member_banner_change
  endpoint:
    path: /event_party_member_banner_change
    method: GET
    data_selector: member
- name: event_party_member_battlepass_info_change
  endpoint:
    path: /event_party_member_battlepass_info_change
    method: GET
    data_selector: member
- name: event_party_member_enlightenments_change
  endpoint:
    path: /event_party_member_enlightenments_change
    method: GET
    data_selector: member
- name: event_party_member_corruption_change
  endpoint:
    path: /event_party_member_corruption_change
    method: GET
    data_selector: member
- name: event_party_member_outfit_variants_change
  endpoint:
    path: /event_party_member_outfit_variants_change
    method: GET
    data_selector: member
- name: event_party_member_backpack_variants_change
  endpoint:
    path: /event_party_member_backpack_variants_change
    method: GET
    data_selector: member
- name: event_party_member_pickaxe_variants_change
  endpoint:
    path: /event_party_member_pickaxe_variants_change
    method: GET
    data_selector: member
- name: event_party_member_contrail_variants_change
  endpoint:
    path: /event_party_member_contrail_variants_change
    method: GET
    data_selector: member
- name: event_party_member_in_match_change
  endpoint:
    path: /event_party_member_in_match_change
    method: GET
    data_selector: member
- name: event_party_member_match_players_left_change
  endpoint:
    path: /event_party_member_match_players_left_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_is_visible_change
  endpoint:
    path: /event_party_member_lobby_map_marker_is_visible_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_coordinates_change
  endpoint:
    path: /event_party_member_lobby_map_marker_coordinates_change
    method: GET
    data_selector: member
- name: blocked_user
  endpoint:
    path: /blocked_user
    method: GET
    data_selector: records
- name: user_search_entry
  endpoint:
    path: /user_search_entry
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user_data
- name: friend
  endpoint:
    path: /friend
    method: GET
    data_selector: friends
    params: {}
- name: assisted_challenge
  endpoint:
    path: /assisted_challenge
    method: GET
    data_selector: assisted_challenge
- name: backpack
  endpoint:
    path: /backpack
    method: GET
    data_selector: backpack
- name: banner
  endpoint:
    path: /banner
    method: GET
    data_selector: banner
- name: battlepass_info
  endpoint:
    path: /battlepass/info
    method: GET
    data_selector: battlepass_info
- name: block_user
  endpoint:
    path: /user/block
    method: POST
    data_selector: response
- name: fetch_user_data
  endpoint:
    path: /user/fetch
    method: GET
    data_selector: user_data
- name: party
  endpoint:
    path: /party
    method: GET
    data_selector: members
    params: {}
- name: party_join_confirmation
  endpoint:
    path: /party/join_confirmation
    method: GET
    data_selector: party
    params: {}
- name: block_user
  endpoint:
    path: /block_user
    method: POST
- name: unblock_user
  endpoint:
    path: /unblock_user
    method: POST
- name: add_friend
  endpoint:
    path: /add_friend
    method: POST
- name: accept_friend
  endpoint:
    path: /accept_friend
    method: POST
- name: remove_or_decline_friend
  endpoint:
    path: /remove_or_decline_friend
    method: POST
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
- name: fetch_multiple_br_stats
  endpoint:
    path: /fetch_multiple_br_stats
    method: GET
- name: fetch_multiple_br_stats_collections
  endpoint:
    path: /fetch_multiple_br_stats_collections
    method: GET
- name: fetch_multiple_battlepass_levels
  endpoint:
    path: /fetch_multiple_battlepass_levels
    method: GET
    data_selector: users
- name: fetch_battlepass_level
  endpoint:
    path: /fetch_battlepass_level
    method: GET
    data_selector: user_id
- name: fetch_leaderboard
  endpoint:
    path: /fetch_leaderboard
    method: GET
    data_selector: stat
- name: fetch_party
  endpoint:
    path: /fetch_party
    method: GET
    data_selector: party_id
- name: fetch_lightswitch_status
  endpoint:
    path: /fetch_lightswitch_status
    method: GET
    data_selector: service_id
- name: fetch_item_shop
  endpoint:
    path: /fetch_item_shop
    method: GET
    data_selector: item_shop
- name: fetch_br_news
  endpoint:
    path: /fetch_br_news
    method: GET
    data_selector: news
- name: fetch_br_playlists
  endpoint:
    path: /fetch_br_playlists
    method: GET
    data_selector: playlists
- name: fetch_active_ltms
  endpoint:
    path: /fetch_active_ltms
    method: GET
    data_selector: region
- name: friend_check
  endpoint:
    path: /client/has_friend
    method: GET
    data_selector: friend_status
    params:
      user_id: user_id
- name: pending_friend_check
  endpoint:
    path: /client/is_pending
    method: GET
    data_selector: pending_friend_status
    params:
      user_id: user_id
- name: blocked_user_check
  endpoint:
    path: /client/is_blocked
    method: GET
    data_selector: blocked_user_status
    params:
      user_id: user_id
- name: accept_friend_request
  endpoint:
    path: /client/accept_friend
    method: POST
    data_selector: accepted_friend
    params:
      user_id: user_id
- name: add_friend
  endpoint:
    path: /client/add_friend
    method: POST
    data_selector: friend_request_status
    params:
      user_id: user_id
- name: block_user
  endpoint:
    path: /client/block_user
    method: POST
    data_selector: blocked_user_status
    params:
      user_id: user_id
- name: fetch_active_ltms
  endpoint:
    path: /client/fetch_active_ltms
    method: GET
    data_selector: active_ltms
    params:
      region: region
- name: fetch_avatars
  endpoint:
    path: /client/fetch_avatars
    method: GET
    data_selector: avatars
    params:
      users: user_ids
- name: fetch_battlepass_level
  endpoint:
    path: /client/fetch_battlepass_level
    method: GET
    data_selector: battlepass_level
    params:
      user_id: user_id
      season: season_number
      start_time: start_time
      end_time: end_time
- name: fetch_blocklist
  endpoint:
    path: /client/fetch_blocklist
    method: GET
    data_selector: blocklist
    params: {}
- name: fetch_br_news
  endpoint:
    path: /client/fetch_br_news
    method: GET
    data_selector: br_news
    params: {}
- name: fetch_br_playlists
  endpoint:
    path: /client/fetch_br_playlists
    method: GET
    data_selector: br_playlists
    params: {}
- name: fetch_br_stats
  endpoint:
    path: /client/fetch_br_stats
    method: GET
    data_selector: br_stats
    params:
      user_id: user_id
      start_time: start_time
      end_time: end_time
- name: fetch_item_shop
  endpoint:
    path: /client/fetch_item_shop
    method: GET
    data_selector: item_shop
    params: {}
- name: fetch_leaderboard
  endpoint:
    path: /client/fetch_leaderboard
    method: GET
    data_selector: leaderboard
    params:
      stat: stat_name
- name: leaderboard_entries
  endpoint:
    path: /v1/leaderboard
    method: GET
    data_selector: entries
    params: {}
- name: lightswitch_status
  endpoint:
    path: /v1/lightswitch_status
    method: GET
    data_selector: status
    params: {}
- name: event_device_auth_generate
  endpoint:
    path: /event/device/auth/generate
    method: POST
    data_selector: details
- name: event_auth_refresh
  endpoint:
    path: /event/auth/refresh
    method: POST
    data_selector: ''
- name: event_friend_message
  endpoint:
    path: /event/friend/message
    method: POST
    data_selector: message
- name: event_party_message
  endpoint:
    path: /event/party/message
    method: POST
    data_selector: message
- name: event_friend_add
  endpoint:
    path: /event/friend/add
    method: POST
    data_selector: friend
- name: event_friend_remove
  endpoint:
    path: /event/friend/remove
    method: POST
    data_selector: friend
- name: event_friend_request
  endpoint:
    path: /event/friend/request
    method: POST
    data_selector: request
- name: event_friend_request_decline
  endpoint:
    path: /event/friend/request/decline
    method: POST
    data_selector: friend
- name: event_friend_request_abort
  endpoint:
    path: /event/friend/request/abort
    method: POST
    data_selector: friend
- name: event_friend_presence
  endpoint:
    path: /event/friend/presence
    method: POST
    data_selector: before
- name: event_party_invite
  endpoint:
    path: /event/party/invite
    method: POST
    data_selector: invitation
- name: event_invalid_party_invite
  endpoint:
    path: /event/invalid/party/invite
    method: POST
    data_selector: friend
- name: event_party_member_promote
  endpoint:
    path: /event/party/member/promote
    method: POST
    data_selector: old_leader
- name: event_party_member_kick
  endpoint:
    path: /event/party/member/kick
    method: POST
    data_selector: member
- name: event_party_member_zombie
  endpoint:
    path: /event/party/member/zombie
    method: POST
    data_selector: member
- name: event_party_member_reconnect
  endpoint:
    path: /event/party/member/reconnect
    method: POST
    data_selector: member
- name: event_party_member_expire
  endpoint:
    path: /event/party/member/expire
    method: POST
    data_selector: member
- name: event_party_update
  endpoint:
    path: /event/party/update
    method: POST
    data_selector: party
- name: event_party_member_update
  endpoint:
    path: /event/party/member/update
    method: POST
    data_selector: member
- name: event_party_member_join
  endpoint:
    path: /event/party/member/join
    method: POST
    data_selector: member
- name: event_party_member_leave
  endpoint:
    path: /event/party/member/leave
    method: POST
    data_selector: member
- name: event_party_member_confirm
  endpoint:
    path: /event/party/member/confirm
    method: POST
    data_selector: confirmation
- name: event_party_join_request
  endpoint:
    path: /event/party/join/request
    method: POST
    data_selector: request
- name: event_party_member_chatban
  endpoint:
    path: /event/party/member/chatban
    method: POST
    data_selector: member
- name: event_party_invite_cancel
  endpoint:
    path: /event/party/invite/cancel
    method: POST
    data_selector: ''
- name: event_party_invite_decline
  endpoint:
    path: /event/party/invite/decline
    method: POST
    data_selector: ''
- name: event_party_playlist_change
  endpoint:
    path: /event/party/playlist/change
    method: POST
    data_selector: party
- name: event_party_squad_fill_change
  endpoint:
    path: /event/party/squad/fill/change
    method: POST
    data_selector: party
- name: event_party_privacy_change
  endpoint:
    path: /event/party/privacy/change
    method: POST
    data_selector: party
- name: event_party_member_team_swap
  endpoint:
    path: /event/party/member/team/swap
    method: POST
    data_selector: member
- name: event_party_member_ready_change
  endpoint:
    path: /event/party/member/ready/change
    method: POST
    data_selector: member
- name: event_party_member_input_change
  endpoint:
    path: /event/party/member/input/change
    method: POST
    data_selector: member
- name: event_party_member_assisted_challenge_change
  endpoint:
    path: /event/party/member/assisted/challenge/change
    method: POST
    data_selector: member
- name: event_party_member_outfit_change
  endpoint:
    path: /event/party/member/outfit/change
    method: POST
    data_selector: member
- name: event_party_member_backpack_change
  endpoint:
    path: /event/party/member/backpack/change
    method: POST
    data_selector: member
- name: event_party_member_pet_change
  endpoint:
    path: /event/party/member/pet/change
    method: POST
    data_selector: member
- name: event_party_member_pickaxe_change
  endpoint:
    path: /event/party/member/pickaxe/change
    method: POST
    data_selector: member
- name: event_party_member_contrail_change
  endpoint:
    path: /event/party/member/contrail/change
    method: POST
    data_selector: member
- name: event_party_member_emote_change
  endpoint:
    path: /event_party_member_emote_change
    method: GET
    data_selector: member
- name: event_party_member_emoji_change
  endpoint:
    path: /event_party_member_emoji_change
    method: GET
    data_selector: member
- name: event_party_member_banner_change
  endpoint:
    path: /event_party_member_banner_change
    method: GET
    data_selector: member
- name: event_party_member_battlepass_info_change
  endpoint:
    path: /event_party_member_battlepass_info_change
    method: GET
    data_selector: member
- name: event_party_member_enlightenments_change
  endpoint:
    path: /event_party_member_enlightenments_change
    method: GET
    data_selector: member
- name: event_party_member_corruption_change
  endpoint:
    path: /event_party_member_corruption_change
    method: GET
    data_selector: member
- name: event_party_member_outfit_variants_change
  endpoint:
    path: /event_party_member_outfit_variants_change
    method: GET
    data_selector: member
- name: event_party_member_backpack_variants_change
  endpoint:
    path: /event_party_member_backpack_variants_change
    method: GET
    data_selector: member
- name: event_party_member_pickaxe_variants_change
  endpoint:
    path: /event_party_member_pickaxe_variants_change
    method: GET
    data_selector: member
- name: event_party_member_contrail_variants_change
  endpoint:
    path: /event_party_member_contrail_variants_change
    method: GET
    data_selector: member
- name: event_party_member_in_match_change
  endpoint:
    path: /event_party_member_in_match_change
    method: GET
    data_selector: member
- name: event_party_member_match_players_left_change
  endpoint:
    path: /event_party_member_match_players_left_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_is_visible_change
  endpoint:
    path: /event_party_member_lobby_map_marker_is_visible_change
    method: GET
    data_selector: member
- name: event_party_member_lobby_map_marker_coordinates_change
  endpoint:
    path: /event_party_member_lobby_map_marker_coordinates_change
    method: GET
    data_selector: member
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user_data
- name: battlepass_level
  endpoint:
    path: /battlepass/level
    method: GET
    data_selector: battlepass_data
- name: br_stats
  endpoint:
    path: /br/stats
    method: GET
    data_selector: stats_data
- name: SacSearchEntryUser
  endpoint:
    path: /users/search
    method: GET
    data_selector: users
- name: friend
  endpoint:
    path: /friends
    method: GET
    data_selector: friends
- name: IncomingPendingFriend
  endpoint:
    path: /incoming_pending_friend
    method: GET
    data_selector: records
- name: fetch_br_stats_collection
  endpoint:
    path: /fetch_br_stats_collection
    method: GET
    data_selector: statsCollection
    params:
      start_time: None
      end_time: None
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: stats
    params:
      start_time: None
      end_time: None
- name: fetch_battlepass_level
  endpoint:
    path: /fetch_battlepass_level
    method: GET
    data_selector: battlepassLevel
    params:
      season: int
      start_time: None
      end_time: None
- name: FriendMessage
  endpoint:
    path: /friend/message
    method: GET
    data_selector: messages
- name: PartyMessage
  endpoint:
    path: /party/message
    method: GET
    data_selector: messages
- name: PartyMember
  endpoint:
    path: /party/member
    method: GET
    data_selector: members
- name: party_member
  endpoint:
    path: /party/member
    method: GET
    data_selector: records
- name: set_pet
  endpoint:
    path: /set_pet
    method: POST
- name: clear_pet
  endpoint:
    path: /clear_pet
    method: POST
- name: set_pickaxe
  endpoint:
    path: /set_pickaxe
    method: POST
- name: set_contrail
  endpoint:
    path: /set_contrail
    method: POST
- name: clear_contrail
  endpoint:
    path: /clear_contrail
    method: POST
- name: set_emote
  endpoint:
    path: /set_emote
    method: POST
- name: set_emoji
  endpoint:
    path: /set_emoji
    method: POST
- name: clear_emote
  endpoint:
    path: /clear_emote
    method: POST
- name: set_banner
  endpoint:
    path: /set_banner
    method: POST
- name: set_battlepass_info
  endpoint:
    path: /set_battlepass_info
    method: POST
- name: set_assisted_challenge
  endpoint:
    path: /set_assisted_challenge
    method: POST
- name: clear_assisted_challenge
  endpoint:
    path: /clear_assisted_challenge
    method: POST
- name: set_position
  endpoint:
    path: /set_position
    method: POST
- name: set_in_match
  endpoint:
    path: /set_in_match
    method: POST
- name: clear_in_match
  endpoint:
    path: /clear_in_match
    method: POST
- name: set_lobby_map_marker
  endpoint:
    path: /set_lobby_map_marker
    method: POST
- name: clear_lobby_map_marker
  endpoint:
    path: /clear_lobby_map_marker
    method: POST
- name: add
  endpoint:
    path: /add
    method: POST
- name: battlepass_info
  endpoint:
    path: /battlepass/info
    method: GET
    data_selector: battlepass_info
    params: {}
- name: user_stats
  endpoint:
    path: /user/stats
    method: GET
    data_selector: stats
    params: {}
- name: ClientPartyMember
  endpoint:
    path: /client/party/member
    method: GET
    data_selector: members
    params: {}
- name: Party
  endpoint:
    path: /party
    method: GET
    data_selector: party
    params: {}
- name: party_invitation
  endpoint:
    path: /party/invitation
    method: GET
- name: party
  endpoint:
    path: /party
    method: GET
- name: PartyJoinConfirmation
  endpoint:
    path: /fortnitepy/PartyJoinConfirmation
    method: GET
    data_selector: confirmationData
- name: PartyJoinRequest
  endpoint:
    path: /fortnitepy/PartyJoinRequest
    method: GET
    data_selector: requestData
- name: Presence
  endpoint:
    path: /fortnitepy/Presence
    method: GET
    data_selector: presenceData
- name: PresenceParty
  endpoint:
    path: /fortnitepy/PresenceParty
    method: GET
    data_selector: partyData
- name: PresenceGameplayStats
  endpoint:
    path: /presence/gameplaystats
    method: GET
    data_selector: attributes
- name: StatsV2
  endpoint:
    path: /stats/v2
    method: GET
    data_selector: attributes
- name: friend_check
  endpoint:
    path: /client/has_friend
    method: GET
    data_selector: records
    params: {}
- name: pending_friend_check
  endpoint:
    path: /client/is_pending
    method: GET
    data_selector: records
    params: {}
- name: blocked_user_check
  endpoint:
    path: /client/is_blocked
    method: GET
    data_selector: records
    params: {}
- name: accept_friend
  endpoint:
    path: /client/accept_friend
    method: POST
    data_selector: records
    params: {}
- name: add_friend
  endpoint:
    path: /client/add_friend
    method: POST
    data_selector: records
    params: {}
- name: block_user
  endpoint:
    path: /client/block_user
    method: POST
    data_selector: records
    params: {}
- name: fetch_active_ltms
  endpoint:
    path: /client/fetch_active_ltms
    method: GET
    data_selector: records
    params: {}
- name: fetch_avatars
  endpoint:
    path: /client/fetch_avatars
    method: GET
    data_selector: records
    params: {}
- name: fetch_battlepass_level
  endpoint:
    path: /client/fetch_battlepass_level
    method: GET
    data_selector: records
    params: {}
- name: fetch_blocklist
  endpoint:
    path: /client/fetch_blocklist
    method: GET
    data_selector: records
    params: {}
- name: fetch_br_news
  endpoint:
    path: /client/fetch_br_news
    method: GET
    data_selector: records
    params: {}
- name: fetch_br_playlists
  endpoint:
    path: /client/fetch_br_playlists
    method: GET
    data_selector: records
    params: {}
- name: fetch_br_stats
  endpoint:
    path: /client/fetch_br_stats
    method: GET
    data_selector: records
    params: {}
- name: fetch_item_shop
  endpoint:
    path: /client/fetch_item_shop
    method: GET
    data_selector: records
    params: {}
- name: fetch_leaderboard
  endpoint:
    path: /client/fetch_leaderboard
    method: GET
    data_selector: records
    params: {}
- name: event_device_auth_generate
  endpoint:
    path: event_device_auth_generate
    method: POST
    data_selector: details
- name: event_auth_refresh
  endpoint:
    path: event_auth_refresh
    method: POST
    data_selector: ''
- name: event_friend_message
  endpoint:
    path: event_friend_message
    method: POST
    data_selector: message
- name: event_party_message
  endpoint:
    path: event_party_message
    method: POST
    data_selector: message
- name: event_friend_add
  endpoint:
    path: event_friend_add
    method: POST
    data_selector: friend
- name: event_friend_remove
  endpoint:
    path: event_friend_remove
    method: POST
    data_selector: friend
- name: event_friend_request
  endpoint:
    path: event_friend_request
    method: POST
    data_selector: request
- name: event_friend_request_decline
  endpoint:
    path: event_friend_request_decline
    method: POST
    data_selector: friend
- name: event_friend_request_abort
  endpoint:
    path: event_friend_request_abort
    method: POST
    data_selector: friend
- name: event_friend_presence
  endpoint:
    path: event_friend_presence
    method: POST
    data_selector: before
- name: event_party_invite
  endpoint:
    path: event_party_invite
    method: POST
    data_selector: invitation
- name: event_invalid_party_invite
  endpoint:
    path: event_invalid_party_invite
    method: POST
    data_selector: friend
- name: event_party_member_promote
  endpoint:
    path: event_party_member_promote
    method: POST
    data_selector: old_leader
- name: event_party_member_kick
  endpoint:
    path: event_party_member_kick
    method: POST
    data_selector: member
- name: event_party_member_zombie
  endpoint:
    path: event_party_member_zombie
    method: POST
    data_selector: member
- name: event_party_member_reconnect
  endpoint:
    path: event_party_member_reconnect
    method: POST
    data_selector: member
- name: event_party_member_expire
  endpoint:
    path: event_party_member_expire
    method: POST
    data_selector: member
- name: event_party_update
  endpoint:
    path: event_party_update
    method: POST
    data_selector: party
- name: event_party_member_update
  endpoint:
    path: event_party_member_update
    method: POST
    data_selector: member
- name: event_party_member_join
  endpoint:
    path: event_party_member_join
    method: POST
    data_selector: member
- name: event_party_member_leave
  endpoint:
    path: event_party_member_leave
    method: POST
    data_selector: member
- name: event_party_member_confirm
  endpoint:
    path: event_party_member_confirm
    method: POST
    data_selector: confirmation
- name: event_party_join_request
  endpoint:
    path: event_party_join_request
    method: POST
    data_selector: request
- name: event_party_member_chatban
  endpoint:
    path: event_party_member_chatban
    method: POST
    data_selector: member
- name: event_party_invite_cancel
  endpoint:
    path: event_party_invite_cancel
    method: POST
    data_selector: ''
- name: event_party_invite_decline
  endpoint:
    path: event_party_invite_decline
    method: POST
    data_selector: ''
- name: event_party_playlist_change
  endpoint:
    path: event_party_playlist_change
    method: POST
    data_selector: party
- name: event_party_squad_fill_change
  endpoint:
    path: event_party_squad_fill_change
    method: POST
    data_selector: party
- name: event_party_privacy_change
  endpoint:
    path: event_party_privacy_change
    method: POST
    data_selector: party
- name: event_party_member_team_swap
  endpoint:
    path: event_party_member_team_swap
    method: POST
    data_selector: member
- name: event_party_member_ready_change
  endpoint:
    path: event_party_member_ready_change
    method: POST
    data_selector: member
- name: event_party_member_input_change
  endpoint:
    path: event_party_member_input_change
    method: POST
    data_selector: member
- name: event_party_member_assisted_challenge_change
  endpoint:
    path: event_party_member_assisted_challenge_change
    method: POST
    data_selector: member
- name: event_party_member_outfit_change
  endpoint:
    path: event_party_member_outfit_change
    method: POST
    data_selector: member
- name: event_party_member_backpack_change
  endpoint:
    path: event_party_member_backpack_change
    method: POST
    data_selector: member
- name: event_party_member_pet_change
  endpoint:
    path: event_party_member_pet_change
    method: POST
    data_selector: member
- name: event_party_member_pickaxe_change
  endpoint:
    path: event_party_member_pickaxe_change
    method: POST
    data_selector: member
- name: event_party_member_contrail_change
  endpoint:
    path: event_party_member_contrail_change
    method: POST
    data_selector: member
- name: event_party_member_emote_change
- name: event_party_member_emoji_change
- name: event_party_member_banner_change
- name: event_party_member_battlepass_info_change
- name: event_party_member_enlightenments_change
- name: event_party_member_corruption_change
- name: event_party_member_outfit_variants_change
- name: event_party_member_backpack_variants_change
- name: event_party_member_pickaxe_variants_change
- name: event_party_member_contrail_variants_change
- name: event_party_member_in_match_change
- name: event_party_member_match_players_left_change
- name: event_party_member_lobby_map_marker_is_visible_change
- name: event_party_member_lobby_map_marker_coordinates_change
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user_data
    params: {}
- name: battlepass_level
  endpoint:
    path: /user/battlepass_level
    method: GET
    data_selector: battlepass_data
    params: {}
- name: br_stats
  endpoint:
    path: /user/br_stats
    method: GET
    data_selector: stats_data
    params: {}
- name: blocked_user
  endpoint:
    path: /user/blocked
    method: GET
    data_selector: blocked_users
    params: {}
- name: user_search_entry
  endpoint:
    path: /user/search
    method: GET
    data_selector: user_search_results
    params: {}
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user_data
- name: friend
  endpoint:
    method: GET
- name: fetch_br_stats_collection
  endpoint:
    path: /fetch_br_stats_collection
    method: GET
    data_selector: statsCollection
    params:
      start_time: null
      end_time: null
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: stats
    params:
      start_time: null
      end_time: null
- name: fetch_battlepass_level
  endpoint:
    path: /fetch_battlepass_level
    method: GET
    data_selector: battlepassLevel
    params:
      season: null
      start_time: null
      end_time: null
- name: FriendMessage
  endpoint:
    path: /friend_message
    method: GET
    data_selector: messages
    params: {}
- name: PartyMessage
  endpoint:
    path: /party_message
    method: GET
    data_selector: messages
    params: {}
- name: PartyMember
  endpoint:
    path: /party_member
    method: GET
    data_selector: members
    params: {}
- name: party_member
  endpoint:
    path: /party/member
    method: GET
    data_selector: members
    params: {}
- name: assisted_challenge
  endpoint:
    path: /assisted_challenge
    method: GET
    data_selector: assisted_challenge
- name: backpack
  endpoint:
    path: /backpack
    method: GET
    data_selector: backpack
- name: backpack_variants
  endpoint:
    path: /backpack_variants
    method: GET
    data_selector: backpack_variants
- name: banner
  endpoint:
    path: /banner
    method: GET
    data_selector: banner
- name: client_party_member
  endpoint:
    path: /client/party/member
    method: GET
    data_selector: members
    params: {}
- name: party
  endpoint:
    path: /party
    method: GET
    data_selector: parties
    params: {}
- name: party
  endpoint:
    path: /party
    method: GET
    data_selector: party
    params: {}
- name: PartyJoinConfirmation
  endpoint:
    path: /PartyJoinConfirmation
    method: GET
- name: PartyJoinRequest
  endpoint:
    path: /PartyJoinRequest
    method: GET
- name: Presence
  endpoint:
    path: /Presence
    method: GET
- name: PresenceParty
  endpoint:
    path: /PresenceParty
    method: GET
- name: PresenceGameplayStats
  endpoint:
    path: /PresenceGameplayStats
    method: GET
- name: stats_collection
  endpoint:
    path: /stats
    method: GET
    data_selector: collection
- name: store
  endpoint:
    path: /store
    method: GET
    data_selector: store
- name: block_user
  endpoint:
    path: /block_user
    method: POST
- name: unblock_user
  endpoint:
    path: /unblock_user
    method: POST
- name: add_friend
  endpoint:
    path: /add_friend
    method: POST
- name: accept_friend
  endpoint:
    path: /accept_friend
    method: POST
- name: remove_or_decline_friend
  endpoint:
    path: /remove_or_decline_friend
    method: POST
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
- name: fetch_multiple_br_stats
  endpoint:
    path: /fetch_multiple_br_stats
    method: GET
- name: fetch_multiple_br_stats_collections
  endpoint:
    path: /fetch_multiple_br_stats_collections
    method: GET
- name: leaderboard_entries
  endpoint:
    path: /v2/leaderboard
    method: GET
    data_selector: entries
- name: lightswitch_status
  endpoint:
    path: /v2/service/{service_id}/status
    method: GET
    data_selector: status
- name: battlepass_levels
  endpoint:
    path: /v2/battlepass/levels
    method: GET
    data_selector: levels
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: user_data
- name: user
  endpoint:
    path: /fortnite/user
    method: GET
    data_selector: user_data
- name: friend
  endpoint:
    path: /friends
    method: GET
    data_selector: friends
    params: {}
- name: incoming_pending_friend
  endpoint:
    path: /v1/friends/incoming
    method: GET
    data_selector: friends
    params: {}
- name: friend_stats
  endpoint:
    path: /v1/friends/stats
    method: GET
    data_selector: stats
    params: {}
- name: fetch_br_stats_collection
  endpoint:
    path: /fetch_br_stats_collection
    method: GET
    data_selector: statsCollection
    params: {}
- name: fetch_br_stats
  endpoint:
    path: /fetch_br_stats
    method: GET
    data_selector: stats
    params: {}
- name: fetch_battlepass_level
  endpoint:
    path: /fetch_battlepass_level
    method: GET
    data_selector: battlepassLevel
    params: {}
- name: FriendMessage
  endpoint:
    path: /friend/message
    method: GET
    data_selector: message
    params: {}
- name: PartyMessage
  endpoint:
    path: /party/message
    method: GET
    data_selector: message
    params: {}
- name: PartyMember
  endpoint:
    path: /party/member
    method: GET
    data_selector: member
    params: {}
- name: party_member
  endpoint:
    path: /modules/fortnitepy/party
    method: GET
    data_selector: members
    params: {}
- name: battlepass_info
  endpoint:
    path: /user/battlepass_info
    method: GET
    data_selector: battlepass
    params: {}
- name: user_stats
  endpoint:
    path: /user/stats
    method: GET
    data_selector: stats
    params: {}
- name: party_join_confirmation
  endpoint:
    path: /party/join/confirmation
    method: POST
- name: party_join_request
  endpoint:
    path: /party/join/request
    method: POST
- name: presence
  endpoint:
    path: /presence
    method: GET
- name: event_party_member_confirm
  endpoint:
    path: /api/event_party_member_confirm
    method: GET
    data_selector: records
    params: {}
- name: event_party_member_join
  endpoint:
    path: /api/event_party_member_join
    method: GET
    data_selector: records
    params: {}
notes:
- Requires proper setup of OAuth2 credentials
- Fetching stats may be limited by user privacy settings
- The preferred method in the long run is now DeviceAuth.
- Setting raw to True does not work with cache set to True.
- The display name will be the one registered to the epicgames account. If an epicgames
  account is not found it defaults to the display name of an external auth.
- This property might be None if Client.fetch_user_data_in_events is set to False.
- This function is built upon data received from only some of the available outfits
  with variants. There is little logic behind the variants function therefore there
  might be some unexpected issues with this function.
- Please report such issues by creating an issue on the issue tracker or by reporting
  it to me on discord.
- Requires OAuth2 authentication for all endpoints
- Do not use accept_friend to send a friend request.
- Throttling limit for email fetching is three requests in 600 seconds.
- This event is called whenever new device authentication details are generated.
- This event is called when the clients authentication has been refreshed.
- The display name will be the one registered to the epicgames account.
- The actions you can do with this party member type is very limited.
- The preferred method for authentication is DeviceAuth.
- 'Defaults to: Battle Royale Lobby - {party playercount} / {party max playercount}'
- Defaults to AwayStatus.ONLINE
- Defaults to Platform.WINDOWS
- Defaults to an empty string
- Defaults to 3
- Defaults to True
- If 'Client.fetch_user_data_in_events' is set to False, display name might be None.
- The display name will be the one registered to the epicgames account if found.
- This API is not the same as status from presence!
- The preferred method is DeviceAuth. EmailAndPasswordAuth may require captcha.
- Exchange codes are valid for a short timeframe (300 seconds).
- Some users may have opted out of public leaderboards, which means their stats cannot
  be fetched.
- Requires setup of connected app for OAuth2.
- Throttling policy limits requests using email to three times in 600 seconds.
- The preferred authentication method is DeviceAuth.
- EmailAndPasswordAuth may require captcha in many cases.
- Requires setup of connected app in Fortnite API
- Some user stats may be private and not retrievable
- API may throttle requests if limits are exceeded.
- This class represents ClientUser’s party.
- Rate limits apply on certain endpoints.
- This function is not for requesting multiple users by multiple display names.
- The user has chosen to be hidden from public stats by disabling the fortnite setting
  below.
- The preferred method in the long run is DeviceAuth.
- The client represents the client connected to Fortnite and EpicGames’ services.
- If a users stats is missing in the returned mapping it means that the user has opted
  out of public leaderboards and that the client therefore does not have permissions
  to requests their stats.
- The decimals are the percent progress to the next level. E.g. `208.63` -> `Level
  208 and 63% on the way to 209.`
- Do not use the accept_friend method to send a friend request.
- Only three requests can be made in a 600-second timespan when fetching user by email.
- Display name might be None if fetch_user_data_in_events is set to False.
- Epicgames account status affects display name.
- Requires a valid epic games account for authentication.
- This is simply just for showing off. It just shows visually so boostxp, level and
  stuff will not work, just show.
- Requires setup of connected app in fortnite API
- Display name might be None if fetch_user_data_in_events is set to False
- It’s not really known what value the state property might hold. This is pretty much
  always an empty string.
- The playlist from the gameplay stats property usually isn’t updated.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- An authorization code expires after 5 minutes.
- If you're going to use a database for anything in the same program as the fortnite
  bot, please use an asynchronous database library.
- Uses OAuth2 with refresh token.
- Uses OAuth2 with refresh token — requires setup of connected app in fortnite
- All datetime objects are now represented in the UTC timezone.
errors:
- 'AuthException: Raised if invalid credentials in any form was passed or some other
  misc failure.'
- 'HTTPException: A request error occurred while logging in.'
- 'AuthException: Raised if invalid credentials in any form was passed or some other
  misc failure'
- 'HTTPException: A request error occurred while logging in'
- 'HTTPException: An error occurred while requesting.'
- 'Forbidden: You are not allowed to look up this party.'
- 'PartyError: You are already a member of this party.'
- 'NotFound: The party was not found.'
- 'PartyIsFull: The party you attempted to join is full.'
- 'HTTPException: An error occured while requesting.'
- 'FORBIDDEN: User has chosen to hide stats'
- 'HTTP_EXCEPTION: An error occurred while requesting'
- 'NotFound: The specified user does not exist.'
- 'DuplicateFriendship: The client is already friends with this user.'
- 'FriendshipRequestAlreadySent: The client has already sent a friendship request
  that has not been handled yet by the user.'
- 'MaxFriendshipsExceeded: The client has hit the max amount of friendships a user
  can have at a time.'
- 'InviteeMaxFriendshipsExceeded: The user you attempted to add has hit the max amount
  of friendships a user can have at a time.'
- 'InviteeMaxFriendshipRequestsExceeded: The user you attempted to add has hit the
  max amount of friendship requests a user can have at a time.'
- 'Forbidden: The client is not allowed to send friendship requests to the user because
  of the users settings.'
- 'HTTPException: An error occured while requesting to add this friend.'
- 'HTTPException: An error occurred while requesting to add this friend.'
- 'Forbidden: You are not the leader of the party.'
- 'PartyError: You attempted to kick yourself.'
- 'HTTPException: Something else went wrong when trying to kick this member.'
- 'HTTPException: An error occured while fetching blocklist.'
- 'HTTPException: Something went wrong when trying to block this user.'
- 'HTTPException: An error occured while requesting to accept this friend.'
- 'HTTPException: Something went wrong when trying to remove this friend.'
- 'asyncio.TimeoutError: No event was retrieved in the time you specified.'
- 'HTTPException: An error occured while requesting user information.'
- 'HTTPException: An error occurred when requesting the user.'
- 'HTTPException: An error occurred while requesting fortnite’s services.'
- 'ValueError: Two or more clients with the same authentication identifier was passed.
  This means that you attempted to start two or more clients with the same credentials.'
- 'Forbidden: The user has chosen to be hidden from public stats by disabling the
  fortnite setting'
- 'HTTPException: An error occurred while requesting'
- 'Forbidden: The user has chosen to be hidden from public stats by disabling the
  fortnite setting below.'
- 'Forbidden: The client is not allowed to send friendship requests to the user.'
- 'HTTPException: An error occurred while requesting user information.'
- 'HTTPException: An error occurred while requesting to join the party.'
- 'MaxFriendshipsExceeded: The client has hit the max amount of friendships a user
  can have at a time. For most accounts this limit is set to 1000 but it could be
  higher for others.'
- 'InviteeMaxFriendshipRequestsExceeded: The user you attempted to add has hit the
  max amount of friendship requests a user can have at a time. This is usually 700
  total requests.'
- 'Forbidden: You are not allowed to join this party because it’s private.'
- captcha was invalid
- 'ValueError: Two or more clients with the same authentication identifier was passed.'
- 'HTTPException: A request error occured while logging in.'
- 'Forbidden: The user has chosen to be hidden from public stats'
- 'Forbidden: The user has chosen to be hidden from public stats.'
- 'Forbidden: You are not allowed to look up this resource.'
- 'Forbidden: The user has chosen to be hidden from public stats by disabling the
  fortnite setting.'
- 'Forbidden: The user has chosen to be hidden from public stats by disabling the
  setting.'
- 'FORBIDDEN: User has private stats'
- 'HTTP_EXCEPTION: An error occurred during the request'
- 'HTTP_EXCEPTION: An error occurred while requesting.'
- 'VALUE_ERROR: Invalid parameter passed.'
- HTTPException – An error occured while requesting.
- 'Forbidden: The user has chosen to be hidden from public stats by disabling the
  fortnite setting below. `Settings` -> `Account and Privacy` -> `Show on career leaderboard`'
- 'Forbidden: The user has chosen to be hidden from public stats by disabling the
  fortnite setting below. Settings -> Account and Privacy -> Show on career leaderboard'
- 'HTTPException: Something went wrong while editing.'
- 'HTTPException: An error occurred while fetching blocklist.'
- 'Forbidden: The client is not allowed to send friendship requests to the user because
  of the user''s settings.'
- '429 Too Many Requests: Throttle your requests.'
- '404 Not Found: Check if the endpoint is correct.'
- 'HTTPException: An error occurred when requesting to join the party.'
- 'Forbidden: The user has chosen to be hidden from public stats by disabling the
  setting'
- 'ValueError: Duplicate positions were set in the assignments.'
- 'HTTPException: Something went wrong when trying to unblock this user.'
- 'PartyError: User is already in your party.'
- 'PartyError: The party is full.'
- 'HTTPException: Something else went wrong when trying to invite the user.'
- 'HTTPException: An error occurred while requesting from fortnite’s services.'
- 'Forbidden: User has private career board.'
- 'Forbidden: User has chosen to be hidden from public stats.'
- 'AuthException: raised when auth fails by invalid credentials passed or some other
  misc failure'
- 'HTTPException: raised when an error is received by Fortnite services'
- 'ValidationFailure: represents a validation failure returned'
- 'EventError: raised when something regarding events fails'
- 'XMPPError: raised when something regarding the XMPP service fails'
- 'PartyError: raised when something regarding parties fails'
- 'PartyIsFull: raised when the bot attempts to join a full party'
- 'Forbidden: raised whenever you attempted a request that your account does not have
  permission to do'
- 'NotFound: raised when something was not found by fortnites services'
- 'DuplicateFriendship: raised whenever the client attempts to add a user as friend
  when the friendship already exists'
- 'FriendshipRequestAlreadySent: raised whenever the client attempts to send a friend
  request to a user that has already received a friend request from the client'
- 'MaxFriendshipsExceeded: raised if the client has hit the limit for friendships'
- 'InviteeMaxFriendshipsExceeded: raised if the user you attempted to add has hit
  the limit for friendships'
- 'InviteeMaxFriendshipRequestsExceeded: raised if the user you attempted to add has
  hit the limit for the amount of friendship requests a user can have at a time'
- 'FriendOffline: raised when an action that requires a friend to be online is performed
  at an offline friend'
- 'InvalidOffer: raised when an invalid/outdated offer is passed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'Incompatible net_cl: Ensure compatibility with the Fortnite client.'
auth_info:
  mentioned_objects:
  - ClientUser
  - StatsV2
  - StatsCollection
  - EmailAndPasswordAuth
  - DeviceAuth
  - AdvancedAuth
  - ExchangeCodeAuth
  - AuthorizationCodeAuth
  - OauthToken
  - AuthProvider
  - RefreshTokenAuth
  - ExternalAuth
  - OAuthToken
client:
  base_url: https://api.fortnite.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.fortnite.com/oauth/token
    client_id: '{{ dlt.secrets[''fortnite_client_id''] }}'
    client_secret: '{{ dlt.secrets[''fortnite_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''fortnite_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
