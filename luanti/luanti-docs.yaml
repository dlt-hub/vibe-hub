resources:
- name: mod_channel_join
  endpoint:
    path: /mod_channel_join
    method: GET
    data_selector: ModChannel
    params: {}
- name: get_inventory
  endpoint:
    path: /get_inventory
    method: GET
    data_selector: InvRef
    params: {}
- name: create_detached_inventory
  endpoint:
    path: /create_detached_inventory
    method: POST
    data_selector: InvRef
    params: {}
- name: remove_detached_inventory
  endpoint:
    path: /remove_detached_inventory
    method: DELETE
    data_selector: boolean
    params: {}
- name: do_item_eat
  endpoint:
    path: /do_item_eat
    method: POST
    data_selector: ItemStack
    params: {}
- name: server_shutdown
  endpoint:
    path: /core/request_shutdown
    method: GET
    data_selector: response
    params: {}
- name: server_status
  endpoint:
    path: /core/get_server_status
    method: GET
    data_selector: response
    params: {}
- name: player_management
  endpoint:
    path: /core/remove_player
    method: POST
    data_selector: response
    params: {}
- name: mapgen_aliases
  endpoint:
    path: /aliases
    method: GET
    data_selector: aliases
- name: nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: nodes
- name: flag_specifier_format
  endpoint:
    path: /flag-specifier-format
    method: GET
    data_selector: flags
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tabheader
  endpoint:
    path: /tabheader
    method: GET
- name: box
  endpoint:
    path: /box
    method: GET
- name: dropdown
  endpoint:
    path: /dropdown
    method: GET
- name: checkbox
  endpoint:
    path: /checkbox
    method: GET
- name: scrollbar
  endpoint:
    path: /scrollbar
    method: GET
- name: table
  endpoint:
    path: /table
    method: GET
- name: fractal_value_noise
  endpoint:
    path: /fractal-value-noise
    method: GET
    data_selector: NoiseParams
    params: {}
- name: schematic_specifier
  endpoint:
    path: /schematics/specifier
    method: GET
    data_selector: schematics
- name: schematic_attributes
  endpoint:
    path: /schematics/attributes
    method: GET
    data_selector: attributes
- name: registered_entities
  endpoint:
    path: /registered-definitions/
    method: GET
- name: tree_definition
  endpoint:
    path: /l-system/trees
    method: POST
    data_selector: treedef
    params: {}
- name: registered_entities
  endpoint:
    path: /registered-definitions/
    method: GET
    data_selector: luaentity
- name: privileges
  endpoint:
    path: /privileges
    method: GET
    data_selector: records
- name: tree_definition
  endpoint:
    path: /l-system/trees
    method: GET
    data_selector: treedef
    params: {}
- name: Node Metadata
  endpoint:
    path: /core/get_meta
    method: GET
    data_selector: metadata
    params: {}
- name: Node Timer
  endpoint:
    path: /core/get_node_timer
    method: GET
    data_selector: timer
    params: {}
- name: privileges
  endpoint:
    path: /privileges
    method: GET
    data_selector: privilege_list
- name: NodeTimerRef
  endpoint:
    path: /core/get_node_timer
    method: GET
    data_selector: methods
    params: {}
- name: ObjectRef
  endpoint:
    path: /core/get_meta
    method: GET
    data_selector: methods
    params: {}
- name: methods
  endpoint:
    path: /methods
    method: GET
    data_selector: methods
    params: {}
- name: ObjectRef
  endpoint:
    path: /ObjectRef
    method: GET
    data_selector: override_table
    params: {}
- name: tile_animation_vertical_frames
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: tile_animation_sheet_2d
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: blend_mode
  endpoint:
    path: /blend_mode
    method: GET
    data_selector: blend
    params: {}
- name: color_stops
  endpoint:
    path: /color_stops
    method: GET
    data_selector: color_stops
    params: {}
- name: crafting_recipes
  endpoint:
    path: /crafting_recipes
    method: GET
    data_selector: recipes
    params: {}
- name: shaped_recipes
  endpoint:
    path: /shaped_recipes
    method: GET
    data_selector: shaped
    params: {}
- name: shapeless_recipes
  endpoint:
    path: /shapeless_recipes
    method: GET
    data_selector: shapeless
    params: {}
- name: tool_repair
  endpoint:
    path: /tool_repair
    method: GET
    data_selector: tool_repair
    params: {}
- name: cooking
  endpoint:
    path: /cooking
    method: GET
    data_selector: cooking
    params: {}
- name: fuel
  endpoint:
    path: /fuel
    method: GET
    data_selector: fuel
    params: {}
- name: ore_definition
  endpoint:
    path: /ore_definition
    method: GET
    data_selector: ore
    params: {}
- name: biome_definition
  endpoint:
    path: /biome_definition
    method: GET
    data_selector: biome
    params: {}
- name: tile_animation_definition
  endpoint:
    path: /tile/animation
    method: POST
    data_selector: type
    params:
      aspect_w: 16
      aspect_h: 16
      length: 3.0
- name: item_definition
  endpoint:
    path: /item/definition
    method: POST
    data_selector: description
    params:
      stack_max: 99
      range: 4.0
      liquids_pointable: false
      node_dig_prediction: air
- name: decoration
  endpoint:
    path: /decoration
    method: GET
    data_selector: ''
    params: {}
- name: Crafting recipes
  endpoint:
    path: /crafting/recipes
    method: GET
- name: Ore definition
  endpoint:
    path: /ore/definition
    method: GET
- name: Biome definition
  endpoint:
    path: /biome/definition
    method: GET
- name: decoration_definition
  endpoint:
    path: /decoration_definition
    method: GET
    data_selector: deco_type
    params: {}
- name: chat_command_definition
  endpoint:
    path: /chat_command_definition
    method: GET
    data_selector: params
    params: {}
- name: privilege_definition
  endpoint:
    path: /privilege_definition
    method: GET
    data_selector: description
    params: {}
- name: detached_inventory_callbacks
  endpoint:
    path: /detached_inventory_callbacks
    method: GET
    data_selector: allow_move
    params: {}
- name: hud_definition
  endpoint:
    path: /hud_definition
    method: GET
    data_selector: type
    params: {}
- name: particle_definition
  endpoint:
    path: /particle_definition
    method: GET
    data_selector: pos
    params: {}
- name: particlespawner_definition
  endpoint:
    path: /particlespawner_definition
    method: GET
    data_selector: amount
    params: {}
- name: HTTPRequest
  endpoint:
    path: /httprequest
    method: GET
    data_selector: data
    params: {}
- name: HTTPRequestResult
  endpoint:
    path: /httprequestresult
    method: GET
    data_selector: data
    params: {}
- name: AuthenticationHandler
  endpoint:
    path: /authenticationhandler
    method: GET
    data_selector: data
    params: {}
notes:
- The HTTP API requires permissions set in secure.http_mods or secure.trusted_mods
- Server management functions can be called by authorized mods only
- Luanti generally uses nearest-neighbor upscaling for textures to preserve the crisp
  look of pixel art (low-res textures).
- Users can optionally enable bilinear and/or trilinear filtering. However, to avoid
  everything becoming blurry, textures smaller than 192px will either not be filtered,
  or will be upscaled to that minimum resolution first without filtering.
- When using palettes, you always provide a pixel index for the given node or ItemStack.
- The palette is read from left to right and from top to bottom.
- If the palette has less than 256 pixels, then it is stretched to contain exactly
  256 pixels (after arranging the pixels to one line).
- Craft recipes only support item strings, but fortunately item strings can also contain
  metadata.
- Only Ogg Vorbis files are supported.
- For positional playing of sounds, only single-channel (mono) files are supported.
- 'Important note: This syntax for tabheaders can only be used with the new coordinate
  system.'
- 'Important note: This syntax for dropdowns can only be used with the new coordinate
  system.'
- All numeric fields above modify a corresponding movement_* setting.
- For games, we recommend for simpler code to first modify the movement_* settings
  (e.g. via the game's minetest.conf) to set a global base value for all players and
  only use set_physics_override when you need to change from the base value on a per-player
  basis.
- Some of the fields don't exist in old API versions, see feature physics_overrides_v2.
- This value has no effect on clients who have shaders or post-processing disabled.
- This has no effect on clients who have the "Dynamic Shadows" effect disabled.
- This has no effect on clients who have the "Automatic Exposure" effect disabled.
- This has no effect on clients with protocol version < 46 or clients who have the
  "Bloom" effect disabled.
- This has no effect on clients who have the "Volumetric Lighting" or "Bloom" effects
  disabled.
- Objects should be released after control returns to the engine to avoid errors.
- These require the mapgen environment to be initialized, do not use at load time.
- Wear Bar is a property of items that defines the coloring of the bar that appears
  under damaged tools.
- If it is absent, the default behavior of green-yellow-red is used.
- This has no effect on clients who have the 'Dynamic Shadows' effect disabled.
- This has no effect on clients who have the 'Automatic Exposure' effect disabled.
- This has no effect on clients with protocol version < 46 or clients who have the
  'Bloom' effect disabled.
- This has no effect on clients who have the 'Volumetric Lighting' or 'Bloom' effects
  disabled.
- '''Wear Bar'' is a property of items that defines the coloring of the bar that appears
  under damaged tools.'
- Used by core.register_decoration
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: core.get_value_noise_map
  headers:
    Accept: application/json
source_metadata: null
