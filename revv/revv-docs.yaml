resources:
- name: share_attachment
  endpoint:
    path: /api/v1/attachments/{id}/share
    method: POST
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /api/v1/orders
    method: POST
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: ''
    params: {}
- name: Data Processing Addendum
  endpoint:
    path: /data-processing-addendum
    method: GET
    data_selector: data
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /orders/{ordernum}
    method: GET
    data_selector: order
- name: orders
  endpoint:
    path: /api/v1/orders/{ordernum}
    method: DELETE
    data_selector: null
    params: {}
- name: legal_deliverable_options
  endpoint:
    path: /legaldeliverableoptions
    method: GET
    data_selector: deliverable_options
    params:
      primary_file_length: seconds
- name: upload_file
  endpoint:
    path: /inputs
    method: POST
- name: place_transcription_order
  endpoint:
    path: /orders
    method: POST
- name: place_legal_transcription_order
  endpoint:
    path: /orders
    method: POST
- name: place_ai_transcription_order
  endpoint:
    path: /orders
    method: POST
- name: place_caption_order
  endpoint:
    path: /orders
    method: POST
- name: place_ai_caption_order
  endpoint:
    path: /orders
    method: POST
- name: get_order_details
  endpoint:
    path: /orders/{order_num}
    method: GET
- name: list_orders_for_user
  endpoint:
    path: /orders
    method: GET
- name: delete_order_data
  endpoint:
    path: /orders/{order_num}
    method: DELETE
- name: cancel_order
  endpoint:
    path: /orders/cancel
    method: POST
- name: get_attachment_info
  endpoint:
    path: /attachment/{id}
    method: GET
- name: get_attachment_content
  endpoint:
    path: /attachment/{id}/content
    method: GET
- name: get_legal_transcription_attachment_content
  endpoint:
    path: /attachment/{id}/content (Legal Transcription)
    method: GET
- name: list_workspaces_for_user
  endpoint:
    path: /workspaces
    method: GET
- name: list_templates
  endpoint:
    path: /templates
    method: GET
- name: orders
  endpoint:
    path: /api/v1/orders
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: attachments
  endpoint:
    path: /api/v1/attachments/{id}
    method: GET
    data_selector: attachment
    params: {}
- name: attachment_content
  endpoint:
    path: /attachments/{id}/content
    method: GET
    data_selector: raw data
    params: {}
- name: order
  endpoint:
    path: /orders/{ordernum}
    method: GET
    data_selector: <order/>
    params: {}
- name: order
  endpoint:
    path: /api/v1/orders
    method: POST
    data_selector: order_request
- name: upload_file
  endpoint:
    path: /api/v1/inputs
    method: POST
    data_selector: ''
    params: {}
- name: workspaces
  endpoint:
    path: /api/v1/workspaces
    method: GET
    data_selector: workspaces
    params: {}
- name: rate_attachment
  endpoint:
    path: /api/v1/attachments/{attachment_id}/rate
    method: POST
    data_selector: null
    params: {}
- name: cancel_order
  endpoint:
    path: /api/v1/orders/{order_num}/cancel
    method: POST
    data_selector: null
    params: {}
- name: attachment_content
  endpoint:
    path: /api/v1/attachments/{id}/content
    method: GET
- name: order_notifications
  endpoint:
    path: /orders
    method: POST
    data_selector: notifications
    params: {}
- name: orders
  endpoint:
    path: /api/v1/orders
    method: POST
notes:
- Rev may process personal data that has been collected by our other customers subject
  to their instructions, contractual requirements, and applicable privacy and data
  protection laws.
- Payment will be done by debiting the user's account balance.
- Sandbox orders are automatically transitioned through our workflow of being transcribed,
  reviewed and finally finished.
- To use sandbox mode, include the `sandbox_mode=true` option to the transcription
  or caption order endpoint.
- For data returned from the API, you can specify JSON or XML using the Accept HTTP
  Header or by appending '.json' or '.xml' to the end of the URL.
- For data sent to the API, you can specify JSON or XML using the Content-Type HTTP
  header.
- Rev processes Personal Data to provide services under the Agreement.
- Placing Legal Transcription orders requires some additional set up by the Rev team.
  Please contact us at legalsupport@rev.com for support.
- Use this method to retrieve legal-specific information about an order.
- Other order status values are possible. However, only Complete and Canceled are
  guaranteed not to change in v1 of the API.
- Submit a new order for Human Captioning
- Attachments are either source files or output files, depending on the type of order.
- Users must register an account on the Platform to access certain features of the
  Services.
- Users must be over the age of 18 or the age of majority in their jurisdiction.
- If the requested representation is not supported for the output file, then a 406
  Not Acceptable status code will be returned.
- Only Complete and Canceled order status values are guaranteed not to change in v1
  of the API.
- Only External Link or URI should be set for input media
- Requesting burned-in captions adds $0.30 per audio minute to the cost of your orders
- Currently, we support notifications for Transcription and Caption orders.
- The update is sent by making a POST request to the specified URL.
- Placing Legal Transcription orders requires some additional set up by the Rev team.
errors:
- '400 Bad Request: If attachment is not of a supported type or access_level provided
  for non-transcript attachments'
- '404 Not Found: If no attachment is found for attachment id provided'
- '400 Bad Request: On error, will contain an <error/> entity with more details.'
- 400 Bad Request
- 403 Forbidden
- '404 Not Found: Order with given order number is not found'
- '400 Bad Request: Order is not in a valid state for deletion'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: If the attachment with given id is not found'
- '406 Not Acceptable: If none of the requested representations are available for
  the attachments'
- 10001 Missing Inputs - if the order request did not contain any input media
- 10005 External Link and URI specified - only External Link or URI should be set
  for input media
- 20001 Invalid Media Length - If one of the input medias has a specified video length
  that is not a positive integer
- 10001 Unsupported Content Type
- 10002 Could not retrieve file
- 10003 Invalid multipart request
- 10004 Unspecified filename
- 10005 Unspecified URL
- '404 Not Found: If the user is not a Rev Pro customer'
- '400 Bad Request: Submitting both or submitting none of the mandatory fields results
  in an error'
- '404 Not Found: No order with given number for the authorized customer'
- '403 Forbidden: This order cannot be canceled because work has already gotten started
  on it'
- '400: The submitted data was invalid in some way'
- '401: The user/client API keys were not specified, or were not valid'
- '403: Requested operation is not valid (eg due to workflow rules or restrictions
  on the current user''s role)'
- '404: Requested item (eg order, document) does not exist'
- '429: Too many requests / rate limiting'
- '500: There was an unexpected error in the Rev code'
- '503: The Rev API is down for maintenance'
- 40012 Invalid Order Type For PO Number - PO, Project, or Department provided for
  an unsupported order type
auth_info:
  mentioned_objects: []
client:
  base_url: /api/v1/inputs
  headers:
    Authorization: contains client/user API keys
    Accept: application/json
    Content-Type: ''
    Content-Disposition: ''
    x-rev-isresource: 'true'
  paginator:
    type: page
    page_size_param: pageSize
    default_page_size: 8
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.rev.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''rev_client_id''] }}'
    client_secret: '{{ dlt.secrets[''rev_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''rev_refresh_token''] }}'
    location: header
    header_name: Authorization
source_metadata: null
