resources:
- name: version
  endpoint:
    path: /workspaces/versions
    method: GET
    data_selector: records
    params: {}
- name: versions
  endpoint:
    path: /workspaces/versions
    method: GET
    data_selector: versions
    params: {}
- name: project_roles
  endpoint:
    path: /workspaces/roles-and-seats
    method: GET
    data_selector: roles
    params: {}
- name: workspace_roles
  endpoint:
    path: /workspaces/roles-and-seats
    method: GET
    data_selector: workspace_roles
    params: {}
- name: seats
  endpoint:
    path: /workspaces/roles-and-seats
    method: GET
    data_selector: seats
    params: {}
- name: project_roles
  endpoint:
    path: /workspaces/roles-and-seats
    method: GET
    data_selector: roles
- name: workspace_roles
  endpoint:
    path: /workspaces/roles-and-seats
    method: GET
    data_selector: workspaces
- name: seats
  endpoint:
    path: /workspaces/roles-and-seats
    method: GET
    data_selector: seats
- name: Tekla Structures
  endpoint:
    path: /connectors/tekla
    method: POST
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: API Server
  endpoint:
    path: /api/server
    method: GET
- name: Frontend
  endpoint:
    path: /api/frontend
    method: GET
- name: Supporting Services
  endpoint:
    path: /api/supporting-services
    method: GET
- name: postgres
  endpoint:
    path: /postgres
    method: GET
    data_selector: records
    params: {}
- name: redis
  endpoint:
    path: /redis
    method: GET
    data_selector: records
    params: {}
- name: minio
  endpoint:
    path: /minio
    method: GET
    data_selector: records
    params: {}
- name: postgres
  endpoint:
    path: /postgres
    method: GET
    data_selector: records
- name: redis
  endpoint:
    path: /redis
    method: GET
    data_selector: records
- name: minio
  endpoint:
    path: /minio
    method: GET
    data_selector: records
- name: speckle-ingress
  endpoint:
    path: /speckle-ingress
    method: GET
    data_selector: records
- name: speckle-frontend-2
  endpoint:
    path: /speckle-frontend-2
    method: GET
    data_selector: records
- name: speckle-server
  endpoint:
    path: /speckle-server
    method: GET
    data_selector: records
- name: preview-service
  endpoint:
    path: /preview-service
    method: GET
    data_selector: records
- name: webhook-service
  endpoint:
    path: /webhook-service
    method: GET
    data_selector: records
- name: fileimport-service
  endpoint:
    path: /fileimport-service
    method: GET
    data_selector: records
- name: world_tree
  endpoint:
    path: /api/worldtree
    method: GET
    data_selector: nodes
    params: {}
- name: world_tree
  endpoint:
    path: /worldtree
    method: GET
    data_selector: nodes
    params: {}
- name: render_view
  endpoint:
    path: /api/render-views
    method: GET
    data_selector: data
    params: {}
- name: render_tree
  endpoint:
    path: /api/render-tree
    method: GET
    data_selector: data
    params: {}
- name: FunctionInputs
  endpoint:
    path: /developers/automate/function-inputs
    method: GET
    data_selector: records
- name: elements
  endpoint:
    path: /api/elements
    method: GET
    data_selector: elements
    params: {}
- name: automation_run_data
  endpoint:
    path: /automation_run_data
    method: GET
    data_selector: records
    params: {}
- name: object_annotations
  endpoint:
    path: /developers/automate/function-results
    method: GET
    data_selector: records
- name: create_new_version_in_project
  endpoint:
    path: /developers/automate/create-function
    method: POST
- name: store_file_result
  endpoint:
    path: /developers/automate/store-file-result
    method: POST
- name: automation
  endpoint:
    path: /api/automations
    method: GET
    data_selector: automations
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in Speckle
- Connector installation issues may arise from conflicting plugins.
- Speckle Manager has been deprecated and is no longer required.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Versions are stored indefinitely, but you may be limited as to how many you can
  see depending on your workspace plan.
- Guests can only view, comment, publish and load in the specific projects they are
  invited to.
- Roles are set on a member by member basis.
- Admins can manage workspace roles from Workspace Settings -> People.
- Make sure you are **not** selecting **Run as administrator** when installing - this
  will install for the administrator user, and not your own user.
- If your connector window is floating, **try docking it to your application** to
  fix blank UI issues.
- Installation issues can also be caused by conflicting plugins.
- Make sure you are not selecting Run as administrator when installing - this will
  install for the administrator user, and not your own user.
- Make sure you are **not** selecting **Run as administrator** when installing.
- Disabling property extraction can significantly reduce publish time.
- The connector is publish-only.
- Speckle currently does not support textures.
- Some objects like Camera and Lights are not supported.
- Requires OAuth2 authentication setup.
- Some endpoints may have rate limits.
- The Speckle server follows a microservices architecture pattern.
- Single server deployment (no built-in high availability)
- Manual scaling required
- Limited to single geographic location
- Requires manual maintenance and updates
- This basic setup is not recommended for production use.
- Be mindful of execution times on large trees
- Automate is a separate service relying on an available Speckle Server.
- While in beta, Automate is not open-source or self-installable.
- Requires OAuth2 authentication for API access.
- Carefully manage repository access based on your team’s workflows and requirements.
- The SDK can automatically generate user-friendly form inputs in the web interface.
- GitHub is currently the default platform for function development and deployment.
- Automate compute usage is free during the public beta, allowing you to explore its
  capabilities at no cost.
- Private Functions can only be authored and executed within Workspaces, a paid feature
  included in Speckle’s subscription plans.
- Automate is fully functional during the free trial periods of the Standard Plan,
  enabling testing before committing to a subscription.
- Objects reference other objects but never themselves.
- Properties can be primitive or references to other objects.
- Annotations allow functions to return structured results, making them actionable
  in dashboards, reports, and workflows.
- No special Speckle Automate handling is required—everything behaves just like it
  would in any Speckle-enabled workflow.
- Your function receives this context automatically - no setup required.
- Always Report Final Status
- Use Meaningful Messages
- Choose the Right Status Type
- Include Relevant Metrics
- Handle All Error Cases
- Automations allow you to perform a wide variety of tasks efficiently.
- Automations apply a function to a Speckle model.
- Speckle Automate provides multiple methods for generating and storing function results.
- Uses OAuth2 with refresh token.
- Automations enable you to configure a function to meet your specific requirements.
- Test automations do not ask for function inputs during creation; inputs should be
  set up in your development environment.
- Test automations are sandboxed environments designed to aid in integration testing.
  They do not execute functions directly within the Automate runtime.
- Test runs allow you to debug locally while validating outcomes against Speckle project
  data.
- Requires a valid Speckle token to access automation data.
- A Function MUST be packaged as an OCI Image
- A Function MUST run on AMD 64-bit architecture
- When creating a Function via Automate, the system currently uses a legacy GitHub
  app that requests broad permissions. This may be a concern for organizations with
  strict security policies around GitHub access.
- Some users may encounter 'Specified automation revision does not exist' errors (AutomateInvalidTriggerError)
  when triggering automations.
- Some users may encounter errors when setting run status from 'SUCCEEDED' to 'SUCCEEDED',
  which can affect automation execution tracking.
- Currently, there is no ability to delete functions once they have been created in
  Speckle Automate.
- When upgrading the released function version used in an automation, previously configured
  input values (including secrets) are lost and need to be re-entered.
- Currently, Automate runs cannot be deployed to specific hardware configurations
  (e.g., GPU-enabled nodes, high memory, specific CPU types, Windows nodes).
- Currently, Speckle Automate only supports token-based authentication for third-party
  services. OAuth2 authorization code flows are not yet available for seamless integration
  with services that require user consent and dynamic token management.
errors:
- Some objects may not be supported for publishing.
- Some objects may not be supported for loading.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Loading blocks as linked duplicates is more efficient for blocks with many instances.
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your credentials and permissions.'
- '500 Internal Server Error: Try again later.'
- 'Structural Analysis: Beam span exceeds maximum allowable length'
- 'Load Analysis: Load approaching maximum capacity'
- 'Cost Analysis: Material cost optimized'
- Function executes correctly and returns expected results
- Function completes but results are invalid or not useful
- Function crashes due to unexpected errors
- '401 Unauthorized: Ensure token is valid and not expired.'
- '404 Not Found: Check if the specified automation ID exists.'
- 'Specified automation revision does not exist: AutomateInvalidTriggerError when
  triggering automations.'
- Errors when setting run status from SUCCEEDED to SUCCEEDED, which can affect automation
  execution tracking.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://app.speckle.systems
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
