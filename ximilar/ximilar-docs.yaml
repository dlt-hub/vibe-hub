resources:
- name: request
  endpoint:
    path: /account/v2/request/
    method: POST
    data_selector: results
- name: request_status
  endpoint:
    path: /account/v2/request/__ID__/status
    method: GET
    data_selector: results
- name: request_details
  endpoint:
    path: /account/v2/request/__ID__
    method: GET
    data_selector: results
- name: list_requests
  endpoint:
    path: /account/v2/request/
    method: GET
    data_selector: results
- name: submit_request
  endpoint:
    path: /v2/request/
    method: POST
- name: get_request_status
  endpoint:
    path: /v2/request/__ID__/status
    method: GET
- name: get_request_details
  endpoint:
    path: /v2/request/__ID__
    method: GET
- name: list_requests
  endpoint:
    path: /v2/request/
    method: GET
- name: account_details
  endpoint:
    path: /account/v2/details
    method: GET
    data_selector: ''
- name: account_details
  endpoint:
    path: /account/v2/details/
    method: GET
    data_selector: ''
- name: grade_card
  endpoint:
    path: /grade_card
    method: POST
- name: tcg_card_id
  endpoint:
    path: /tcg_card_id
    method: POST
- name: sports_card_id
  endpoint:
    path: /sports_card_id
    method: POST
- name: comic_book_and_manga_id
  endpoint:
    path: /comic_book_and_manga_id
    method: POST
- name: tcg_price_data_search
  endpoint:
    path: /tcg_price_data_search
    method: GET
- name: visual_search
  endpoint:
    path: /visual_search
    method: GET
- name: fashion_detect_tags
  endpoint:
    path: /fashion_detect_tags
    method: POST
- name: fashion_meta_tags
  endpoint:
    path: /fashion_meta_tags
    method: GET
- name: fashion_detect
  endpoint:
    path: /fashion_detect
    method: POST
- name: fashion_tags
  endpoint:
    path: /fashion_tags
    method: GET
- name: grade_card
  endpoint:
    path: grade_card
    method: POST
- name: tcg_card_id
  endpoint:
    path: tcg_card_id
    method: POST
- name: sports_card_id
  endpoint:
    path: sports_card_id
    method: POST
- name: comic_book_and_manga_id
  endpoint:
    path: comic_book_and_manga_id
    method: POST
- name: tcg_price_data_search
  endpoint:
    path: tcg_price_data_search
    method: GET
- name: visual_search
  endpoint:
    path: visual_search
    method: GET
- name: fashion_detect_tags
  endpoint:
    path: fashion_detect_tags
    method: POST
- name: fashion_meta_tags
  endpoint:
    path: fashion_meta_tags
    method: GET
- name: fashion_detect
  endpoint:
    path: fashion_detect
    method: POST
- name: fashion_tags
  endpoint:
    path: fashion_tags
    method: GET
- name: classification
  endpoint:
    path: /recognition/v2/classify/
    method: POST
    data_selector: null
    params: {}
- name: tagging
  endpoint:
    path: /recognition/v2/classify/
    method: POST
    data_selector: null
    params: {}
- name: regression
  endpoint:
    path: /recognition/v2/classify/
    method: POST
    data_selector: null
    params: {}
- name: custom_similarity
  endpoint:
    path: /similarity/training/v2/descriptor
    method: POST
    data_selector: null
    params: {}
- name: object_detection
  endpoint:
    path: /detection/v2/detect
    method: POST
    data_selector: null
    params: {}
- name: classification
  endpoint:
    path: /recognition/v2/classify/
    method: POST
- name: tagging
  endpoint:
    path: /recognition/v2/classify/
    method: POST
- name: regression
  endpoint:
    path: /recognition/v2/classify/
    method: POST
- name: custom_similarity
  endpoint:
    path: /similarity/training/v2/descriptor
    method: POST
- name: object_detection
  endpoint:
    path: /detection/v2/detect
    method: POST
- name: user_details
  endpoint:
    path: /account/v2/details/
    method: GET
- name: user_statistics
  endpoint:
    path: /account/v2/reports/
    method: GET
- name: workspaces
  endpoint:
    path: /account/v2/workspace/
    method: GET
- name: user_resources
  endpoint:
    path: /account/v2/resource/
    method: GET
- name: user_details
  endpoint:
    path: /details/
    method: GET
    data_selector: results
- name: user_statistics
  endpoint:
    path: /reports/
    method: GET
    data_selector: results
- name: workspaces
  endpoint:
    path: /workspace/
    method: GET
    data_selector: results
- name: user_resources
  endpoint:
    path: /resource/
    method: GET
    data_selector: results
- name: tasks
  endpoint:
    path: /recognition/v2/task
    method: POST
    data_selector: null
    params: {}
- name: classify_images
  endpoint:
    path: /v2/classify/
    method: POST
    data_selector: null
    params: {}
- name: list_labels
  endpoint:
    path: /recognition/v2/label/
    method: GET
    data_selector: null
    params: {}
- name: task
  endpoint:
    path: /recognition/v2/task
    method: POST
- name: classify_images
  endpoint:
    path: /v2/classify/
    method: POST
- name: list_labels
  endpoint:
    path: /recognition/v2/label/
    method: GET
- name: training_image
  endpoint:
    path: /v2/training-image/
    method: GET
    data_selector: images
- name: training_image
  endpoint:
    path: /v2/training-image/
    method: GET
    data_selector: images
- name: update_regression_label_value
  endpoint:
    path: /v2/training-image/{image_id}/update-value
    method: POST
    data_selector: response
    params: {}
- name: label_training_image
  endpoint:
    path: /v2/training-image/{image_id}/add-label
    method: POST
    data_selector: response
    params: {}
- name: remove_label_training_image
  endpoint:
    path: /v2/training-image/{image_id}/remove-label
    method: POST
    data_selector: response
    params: {}
- name: delete_training_image
  endpoint:
    path: /v2/training-image/{image_id}
    method: DELETE
    data_selector: response
    params: {}
- name: detect_objects
  endpoint:
    path: /detection/v2/detect
    method: POST
    data_selector: records
- name: create_task
  endpoint:
    path: /detection/v2/task
    method: POST
    data_selector: records
- name: train_task
  endpoint:
    path: /detection/v2/task/__TASK_ID__/train
    method: POST
    data_selector: records
- name: create_object
  endpoint:
    path: /detection/v2/object
    method: POST
    data_selector: records
- name: get_objects_of_image
  endpoint:
    path: /detection/v2/object/__OBJECT_ID__
    method: GET
    data_selector: records
- name: delete_object
  endpoint:
    path: /detection/v2/object/__OBJECT_ID__
    method: DELETE
    data_selector: records
- name: detect_objects
  endpoint:
    path: /detection/v2/detect
    method: POST
    data_selector: records
- name: create_task
  endpoint:
    path: /detection/v2/task
    method: POST
    data_selector: records
- name: train_task
  endpoint:
    path: /detection/v2/task/__TASK_ID__/train
    method: POST
    data_selector: records
- name: create_object
  endpoint:
    path: /detection/v2/object
    method: POST
    data_selector: records
- name: get_objects_of_image
  endpoint:
    path: /detection/v2/object/__OBJECT_ID__
    method: GET
    data_selector: records
- name: delete_object
  endpoint:
    path: /detection/v2/object/__OBJECT_ID__
    method: DELETE
    data_selector: records
- name: descriptor
  endpoint:
    path: /v2/descriptor
    method: POST
- name: task
  endpoint:
    path: /v2/task
    method: GET
- name: group
  endpoint:
    path: /v2/group
    method: GET
- name: type
  endpoint:
    path: /v2/type
    method: GET
- name: descriptor
  endpoint:
    path: /v2/descriptor
    method: POST
- name: task
  endpoint:
    path: /v2/task
    method: GET
- name: type
  endpoint:
    path: /v2/type
    method: GET
- name: group
  endpoint:
    path: /v2/group
    method: GET
- name: group
  endpoint:
    path: /v2/group/{id}
    method: DELETE
    params: {}
- name: group
  endpoint:
    path: /v2/group/{id}
    method: DELETE
    params: {}
- name: process_flow
  endpoint:
    path: /v2/process
    method: POST
    data_selector: records
- name: process_flow
  endpoint:
    path: /v2/process
    method: POST
    data_selector: records
- name: tcg_id
  endpoint:
    path: /collectibles/v2/tcg_id
    method: POST
    data_selector: records
- name: sport_id
  endpoint:
    path: /collectibles/v2/sport_id
    method: POST
    data_selector: records
- name: comics_id
  endpoint:
    path: /collectibles/v2/comics_id
    method: POST
    data_selector: records
- name: card_ocr_id
  endpoint:
    path: /collectibles/v2/card_ocr_id
    method: POST
    data_selector: records
- name: slab_id
  endpoint:
    path: /collectibles/v2/slab_id
    method: POST
    data_selector: records
- name: slab_grade
  endpoint:
    path: /collectibles/v2/slab_grade
    method: POST
    data_selector: records
- name: detect
  endpoint:
    path: /collectibles/v2/detect
    method: POST
    data_selector: records
- name: process
  endpoint:
    path: /collectibles/v2/process
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /collectibles/v2/analyze
    method: POST
    data_selector: records
- name: tcg_id
  endpoint:
    path: /collectibles/v2/tcg_id
    method: POST
    data_selector: records
- name: sport_id
  endpoint:
    path: /collectibles/v2/sport_id
    method: POST
    data_selector: records
- name: comics_id
  endpoint:
    path: /collectibles/v2/comics_id
    method: POST
    data_selector: records
- name: card_ocr_id
  endpoint:
    path: /collectibles/v2/card_ocr_id
    method: POST
    data_selector: records
- name: slab_id
  endpoint:
    path: /collectibles/v2/slab_id
    method: POST
    data_selector: records
- name: slab_grade
  endpoint:
    path: /collectibles/v2/slab_grade
    method: POST
    data_selector: records
- name: detect
  endpoint:
    path: /collectibles/v2/detect
    method: POST
    data_selector: records
- name: process
  endpoint:
    path: /collectibles/v2/process
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /collectibles/v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /collectibles/v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /collectibles/v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
    params: {}
- name: analyze
  endpoint:
    path: /v2/analyze
    method: POST
    data_selector: records
- name: grade_card
  endpoint:
    path: /grade
    method: POST
    data_selector: records
- name: get_card_condition
  endpoint:
    path: /condition
    method: POST
    data_selector: records
- name: get_card_centering
  endpoint:
    path: /centering
    method: POST
    data_selector: records
- name: get_card_location
  endpoint:
    path: /localize
    method: POST
    data_selector: records
- name: crop_card
  endpoint:
    path: /crop_level
    method: POST
    data_selector: records
- name: grade_card
  endpoint:
    path: /grade
    method: POST
    data_selector: records
- name: get_card_condition
  endpoint:
    path: /condition
    method: POST
    data_selector: records
- name: get_card_centering
  endpoint:
    path: /centering
    method: POST
    data_selector: records
- name: get_card_location
  endpoint:
    path: /localize
    method: POST
    data_selector: records
- name: crop_card
  endpoint:
    path: /crop_level
    method: POST
    data_selector: records
- name: tcg_catalog_search
  endpoint:
    path: /collectibles/text/v2/tcg/list
    method: POST
    data_selector: answer_records
    params:
      size: 10
- name: tcg_listings_search
  endpoint:
    path: /collectibles/text/v2/tcg/pricing
    method: POST
    data_selector: answer_records
    params:
      size: 10
- name: comics_listings_search
  endpoint:
    path: /collectibles/text/v2/comics/pricing
    method: POST
    data_selector: answer_records
    params:
      size: 10
- name: sports_cards_listings_search
  endpoint:
    path: /collectibles/text/v2/sport/pricing
    method: POST
    data_selector: answer_records
    params:
      size: 10
- name: tcg_catalog
  endpoint:
    path: /collectibles/text/v2/tcg/list
    method: POST
    data_selector: answer_records
- name: tcg_pricing
  endpoint:
    path: /collectibles/text/v2/tcg/pricing
    method: POST
    data_selector: answer_records
- name: comics_pricing
  endpoint:
    path: /collectibles/text/v2/comics/pricing
    method: POST
    data_selector: answer_records
- name: sports_pricing
  endpoint:
    path: /collectibles/text/v2/sport/pricing
    method: POST
    data_selector: answer_records
- name: pricing
  endpoint:
    path: /text/v2/sport/pricing
    method: POST
    data_selector: answer_records
- name: sports_card_listings
  endpoint:
    path: /text/v2/sport/pricing
    method: POST
    data_selector: answer_records
- name: top_categories
  endpoint:
    path: /v2/top_categories
    method: GET
    data_selector: records
- name: detect_tags
  endpoint:
    path: /v2/detect_tags
    method: POST
    data_selector: records
- name: detect_tags_all
  endpoint:
    path: /v2/detect_tags_all
    method: POST
    data_selector: records
- name: meta
  endpoint:
    path: /v2/meta
    method: POST
    data_selector: records
- name: region
  endpoint:
    path: /v2/region
    method: POST
    data_selector: records
- name: top_categories
  endpoint:
    path: /v2/top_categories
    method: GET
    data_selector: records
- name: detect_tags_all
  endpoint:
    path: /v2/detect_tags_all
    method: POST
    data_selector: records
- name: detect
  endpoint:
    path: /v2/detect
    method: POST
    data_selector: records
- name: tags
  endpoint:
    path: /v2/tags
    method: POST
    data_selector: records
- name: meta
  endpoint:
    path: /v2/meta
    method: POST
    data_selector: records
- name: region
  endpoint:
    path: /v2/region
    method: POST
    data_selector: records
- name: detect_tags_all
  endpoint:
    path: /detect_tags_all
    method: POST
    data_selector: records
    params: {}
- name: detect_tags_all
  endpoint:
    path: /v2/detect_tags_all
    method: POST
    data_selector: records
- name: region_identification
  endpoint:
    path: /v2/region_identification
    method: POST
    data_selector: records
- name: fashion_detection
  endpoint:
    path: /v2/detect_tags_all
    method: POST
    data_selector: records
- name: detect_tags_all
  endpoint:
    path: /detect_tags_all
    method: POST
    data_selector: records
- name: detect_tags_all
  endpoint:
    path: /detect_tags_all
    method: POST
    data_selector: records
- name: top_categories
  endpoint:
    path: /v2/top_categories
    method: GET
    data_selector: records
- name: detect_tags
  endpoint:
    path: /v2/detect_tags
    method: POST
    data_selector: records
- name: detect_tags_all
  endpoint:
    path: /v2/detect_tags_all
    method: POST
    data_selector: records
- name: tags
  endpoint:
    path: /v2/tags
    method: POST
    data_selector: records
- name: detect
  endpoint:
    path: /v2/detect
    method: POST
    data_selector: records
- name: feedback
  endpoint:
    path: /v2/feedback
    method: POST
    data_selector: records
- name: top_categories
  endpoint:
    path: /v2/top_categories
    method: GET
    data_selector: records
- name: detect_tags
  endpoint:
    path: /v2/detect_tags
    method: POST
    data_selector: records
- name: detect_tags_all
  endpoint:
    path: /v2/detect_tags_all
    method: POST
    data_selector: records
- name: tags
  endpoint:
    path: /v2/tags
    method: POST
    data_selector: records
- name: detect
  endpoint:
    path: /v2/detect
    method: POST
    data_selector: records
- name: feedback
  endpoint:
    path: /v2/feedback
    method: POST
    data_selector: records
- name: detect
  endpoint:
    path: /v2/detect
    method: POST
    data_selector: records
- name: detect
  endpoint:
    path: /v2/detect
    method: POST
    data_selector: records
- name: tags
  endpoint:
    path: /v2/tags
    method: POST
    data_selector: records
    params:
      lang: en
      tagging_mode: complex
- name: tags
  endpoint:
    path: /v2/tags
    method: POST
    data_selector: records
- name: face_detection
  endpoint:
    path: /identity/v2/face
    method: POST
    data_selector: records
- name: person_detection
  endpoint:
    path: /identity/v2/person
    method: POST
    data_selector: records
- name: face_detection
  endpoint:
    path: /identity/v2/face
    method: POST
    data_selector: records
- name: person_detection
  endpoint:
    path: /identity/v2/person
    method: POST
    data_selector: records
- name: product_dominant_colors
  endpoint:
    path: /dom_colors/product/v2/dominantcolor
    method: POST
    data_selector: records
- name: generic_dominant_colors
  endpoint:
    path: /dom_colors/generic/v2/dominantcolor
    method: POST
    data_selector: records
- name: product_dominant_colors
  endpoint:
    path: /dom_colors/product/v2/dominantcolor
    method: POST
    data_selector: records
- name: generic_dominant_colors
  endpoint:
    path: /dom_colors/generic/v2/dominantcolor
    method: POST
    data_selector: records
- name: ping
  endpoint:
    path: /v2/ping
    method: GET
    data_selector: status
- name: insert
  endpoint:
    path: /v2/insert
    method: POST
    data_selector: answer_records
- name: nearDuplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
- name: nearDuplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
      query_record: {}
      fields_to_return:
      - _id
      radius: 5.0
      filter: {}
- name: ping
  endpoint:
    path: /v2/ping
    method: GET
    data_selector: status
    params: {}
- name: insert
  endpoint:
    path: /v2/insert
    method: POST
    data_selector: answer_records
    params: {}
- name: delete
  endpoint:
    path: /v2/delete
    method: POST
    data_selector: answer_records
    params: {}
- name: find
  endpoint:
    path: /v2/find
    method: POST
    data_selector: answer_records
    params: {}
- name: nearDuplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params: {}
- name: nearDuplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      cand_set_size: 1000
      fields_to_return:
      - _id
      filter:
        $gte:
          price: 200
      radius: 5.0
      query_record: {}
- name: near_duplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: near_duplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: find
  endpoint:
    path: /v2/find
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: update
  endpoint:
    path: /v2/update
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: insert
  endpoint:
    path: /v2/insert
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: near_duplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      cand_set_size: 1000
      fields_to_return:
      - _id
      filter:
        $gte:
          price: 200
      radius: 5.0
- name: text_search
  endpoint:
    path: /similarity/text/fashion/v2/text
    method: POST
    data_selector: answer_records
    params:
      from: 0
      k: 30
- name: nearDuplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: visualKNN
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: visualRankRecords
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: visualTagsKNN
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: visualTagsRankRecords
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: near_duplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
    params:
      collection-id: __COLLECTION_ID__
      Authorization: Token __API_TOKEN__
- name: ping
  endpoint:
    path: /ping
    method: POST
    data_selector: query_records
- name: visual_hash
  endpoint:
    path: /visual_hash
    method: POST
    data_selector: query_records
- name: remove_duplicates
  endpoint:
    path: /remove_duplicates
    method: POST
    data_selector: query_records
- name: rank_images
  endpoint:
    path: /rank_images
    method: POST
    data_selector: query_records
- name: near_duplicates
  endpoint:
    path: /v2/nearDuplicates
    method: POST
    data_selector: answer_records
- name: rank_images
  endpoint:
    path: /v2/rank_images
    method: POST
    data_selector: query_records
    params: {}
- name: text_search
  endpoint:
    path: /similarity/text/fashion/v2/text
    method: POST
    data_selector: answer_records
    params:
      from: 0
      k: 30
- name: insert
  endpoint:
    path: /similarity/fashion-new/v2/insert
    method: POST
- name: visual_search
  endpoint:
    path: /similarity/fashion-new/v2/visual_search
    method: POST
- name: text_search
  endpoint:
    path: /similarity/text/fashion/v2/text
    method: POST
- name: ping
  endpoint:
    path: /ping
    method: POST
- name: visual_hash
  endpoint:
    path: /visual_hash
    method: POST
- name: remove_duplicates
  endpoint:
    path: /remove_duplicates
    method: POST
- name: rank_images
  endpoint:
    path: /rank_images
    method: POST
- name: insert_images
  endpoint:
    path: /similarity/homedecor-new/v2/insert
    method: POST
    data_selector: answer_records
- name: visual_search
  endpoint:
    path: /similarity/homedecor-new/v2/visualKNN
    method: POST
    data_selector: answer_records
- name: text_search
  endpoint:
    path: /similarity/text/homedecor/v2/text
    method: POST
    data_selector: answer_records
- name: rank_images
  endpoint:
    path: /v2/rank_images
    method: POST
    data_selector: query_records
- name: generate_product_description
  endpoint:
    path: /product-description/v2/generate
    method: POST
    data_selector: records
- name: insert
  endpoint:
    path: /similarity/fashion-new/v2/insert
    method: POST
- name: visual_search
  endpoint:
    path: /similarity/fashion-new/v2/visual_search
    method: POST
- name: text_search
  endpoint:
    path: /similarity/text/fashion/v2/text
    method: POST
- name: ocr_reading
  endpoint:
    path: /ocr/v2/read
    method: POST
    data_selector: records
- name: ocr_reading_gpt
  endpoint:
    path: /ocr/v2/read_gpt
    method: POST
    data_selector: records
- name: upscaling_request
  endpoint:
    path: /account/v2/request
    method: POST
    data_selector: response
    params: {}
- name: get_result
  endpoint:
    path: /account/v2/request/{id}
    method: GET
    data_selector: response
    params: {}
- name: check_status
  endpoint:
    path: /account/v2/request/{id}/status
    method: GET
    data_selector: response
    params: {}
- name: insert_images
  endpoint:
    path: /similarity/homedecor-new/v2/insert
    method: POST
    data_selector: answer_records
- name: visual_search
  endpoint:
    path: /similarity/homedecor-new/v2/visualKNN
    method: POST
    data_selector: answer_records
- name: text_search
  endpoint:
    path: /similarity/text/homedecor/v2/text
    method: POST
    data_selector: answer_records
- name: generate_product_description
  endpoint:
    path: /product-description/v2/generate
    method: POST
    data_selector: records
- name: upscaling_request
  endpoint:
    path: /account/v2/request
    method: POST
    data_selector: id
    params: {}
- name: request_result
  endpoint:
    path: /account/v2/request/{id}
    method: GET
    data_selector: request
    params: {}
- name: request_status
  endpoint:
    path: /account/v2/request/{id}/status
    method: GET
    data_selector: status
    params: {}
- name: ocr_reading
  endpoint:
    path: /ocr/v2/read
    method: POST
    data_selector: records
- name: ocr_reading_with_gpt
  endpoint:
    path: /ocr/v2/read_gpt
    method: POST
    data_selector: records
- name: precise_model
  endpoint:
    path: /removebg/precise/removebg
    method: POST
    data_selector: records
- name: fast_model
  endpoint:
    path: /removebg/fast/removebg
    method: POST
    data_selector: records
- name: upscaling_request
  endpoint:
    path: /account/v2/request
    method: POST
    data_selector: request
    params: {}
- name: get_request_result
  endpoint:
    path: /account/v2/request/{id}
    method: GET
    data_selector: response
    params: {}
- name: check_request_status
  endpoint:
    path: /account/v2/request/{id}/status
    method: GET
    data_selector: response
    params: {}
- name: upscaling_request
  endpoint:
    path: /account/v2/request
    method: POST
    data_selector: request
- name: get_request_result
  endpoint:
    path: /account/v2/request/{id}
    method: GET
    data_selector: response
- name: check_request_status
  endpoint:
    path: /account/v2/request/{id}/status
    method: GET
    data_selector: status
- name: precise_model
  endpoint:
    path: /removebg/precise/removebg
    method: POST
    data_selector: records
- name: fast_model
  endpoint:
    path: /removebg/fast/removebg
    method: POST
    data_selector: records
- name: Accessories/Bag Straps
  endpoint:
    path: /Accessories/BagStraps
    method: GET
    data_selector: features
    params: {}
- name: Accessories/Belts
  endpoint:
    path: /Accessories/Belts
    method: GET
    data_selector: features
    params: {}
- name: 'Accessories/Eyewear Subcat.: glasses'
  endpoint:
    path: /Accessories/Eyewear/glasses
    method: GET
    data_selector: features
    params: {}
- name: 'Accessories/Eyewear Subcat.: sunglasses'
  endpoint:
    path: /Accessories/Eyewear/sunglasses
    method: GET
    data_selector: features
    params: {}
- name: Accessories/Gloves
  endpoint:
    path: /Accessories/Gloves
    method: GET
    data_selector: features
    params: {}
- name: Accessories/Hats and Caps
  endpoint:
    path: /Accessories/HatsandCaps
    method: GET
    data_selector: features
    params: {}
- name: Accessories/Scarves
  endpoint:
    path: /Accessories/Scarves
    method: GET
    data_selector: features
    params: {}
- name: Accessories/Suspenders
  endpoint:
    path: /Accessories/Suspenders
    method: GET
    data_selector: features
    params: {}
- name: Accessories/Ties
  endpoint:
    path: /Accessories/Ties
    method: GET
    data_selector: features
    params: {}
- name: Bags/Backpacks
  endpoint:
    path: /Bags/Backpacks
    method: GET
    data_selector: features
    params: {}
- name: Bags/Bum Bags
  endpoint:
    path: /Bags/BumBags
    method: GET
    data_selector: features
    params: {}
- name: Bags/Luggage
  endpoint:
    path: /Bags/Luggage
    method: GET
    data_selector: features
    params: {}
- name: Bags/Men's Bags
  endpoint:
    path: /Bags/MensBags
    method: GET
    data_selector: features
    params: {}
- name: 'Bags/Purses and Wallets Subcat.: beauty cases'
  endpoint:
    path: /Bags/PursesandWallets/beautycases
    method: GET
    data_selector: features
    params: {}
- name: 'Bags/Purses and Wallets Subcat.: wallets'
  endpoint:
    path: /Bags/PursesandWallets/wallets
    method: GET
    data_selector: features
    params: {}
- name: 'Bags/Purses and Wallets Subcat.: women coin purses'
  endpoint:
    path: /Bags/PursesandWallets/womencoinpurses
    method: GET
    data_selector: features
    params: {}
- name: Bags/Women's Bags
  endpoint:
    path: /Bags/WomensBags
    method: GET
    data_selector: features
    params: {}
- name: 'Clothing/Baby Clothes Subcat.: Baby Dungarees'
  endpoint:
    path: /Clothing/BabyClothes/BabyDungarees
    method: GET
    data_selector: features
    params: {}
- name: 'Clothing/Baby Clothes Subcat.: Baby pants'
  endpoint:
    path: /Clothing/BabyClothes/Babypants
    method: GET
    data_selector: features
    params: {}
- name: 'Clothing/Baby Clothes Subcat.: Bodysuits'
  endpoint:
    path: /Clothing/BabyClothes/Bodysuits
    method: GET
    data_selector: features
    params: {}
- name: 'Clothing/Baby Clothes Subcat.: Romper suits and overalls'
  endpoint:
    path: /Clothing/BabyClothes/Rompersuitsandoveralls
    method: GET
    data_selector: features
    params: {}
- name: Clothing/Bathrobes
  endpoint:
    path: /Clothing/Bathrobes
    method: GET
    data_selector: features
    params: {}
- name: Clothing/Dresses
  endpoint:
    path: /Clothing/Dresses
    method: GET
    data_selector: features
    params: {}
- name: Clothing/Jackets and Coats
  endpoint:
    path: /Clothing/JacketsandCoats
    method: GET
    data_selector: features
    params: {}
- name: 'Clothing/Nightwear Subcat.: nightdresses and negligees'
  endpoint:
    path: /Clothing/Nightwear/nightdressesandnegligees
    method: GET
    data_selector: features
    params: {}
- name: 'Clothing/Nightwear Subcat.: pyjamas'
  endpoint:
    path: /Clothing/Nightwear/pyjamas
    method: GET
    data_selector: features
    params: {}
- name: Clothing/Overalls and Dungarees
  endpoint:
    path: /Clothing/OverallsandDungarees
    method: GET
    data_selector: features
    params: {}
- name: Clothing/Pants
  endpoint:
    path: /Clothing/Pants
    method: GET
    data_selector: features
    params: {}
- name: Clothing/Skirts
  endpoint:
    path: /Clothing/Skirts
    method: GET
    data_selector: features
    params: {}
- name: Clothing/Upper
  endpoint:
    path: /Clothing/Upper
    method: GET
    data_selector: features
    params: {}
- name: footwear
  endpoint:
    path: /footwear
    method: GET
    data_selector: categories
- name: jewellery
  endpoint:
    path: /jewellery
    method: GET
    data_selector: categories
- name: underwear
  endpoint:
    path: /underwear
    method: GET
    data_selector: categories
- name: watch
  endpoint:
    path: /watch
    method: GET
    data_selector: categories
- name: Accessories/Bag Straps
  endpoint:
    path: /Accessories/Bag Straps
    method: GET
    data_selector: features
- name: Accessories/Belts
  endpoint:
    path: /Accessories/Belts
    method: GET
    data_selector: features
- name: 'Accessories/Eyewear Subcat.: glasses'
  endpoint:
    path: '/Accessories/Eyewear Subcat.: glasses'
    method: GET
    data_selector: features
- name: 'Accessories/Eyewear Subcat.: sunglasses'
  endpoint:
    path: '/Accessories/Eyewear Subcat.: sunglasses'
    method: GET
    data_selector: features
- name: Accessories/Gloves
  endpoint:
    path: /Accessories/Gloves
    method: GET
    data_selector: features
- name: Accessories/Hats and Caps
  endpoint:
    path: /Accessories/Hats and Caps
    method: GET
    data_selector: features
- name: Accessories/Scarves
  endpoint:
    path: /Accessories/Scarves
    method: GET
    data_selector: features
- name: Accessories/Suspenders
  endpoint:
    path: /Accessories/Suspenders
    method: GET
    data_selector: features
- name: Accessories/Ties
  endpoint:
    path: /Accessories/Ties
    method: GET
    data_selector: features
- name: Bags/Backpacks
  endpoint:
    path: /Bags/Backpacks
    method: GET
    data_selector: features
- name: Bags/Bum Bags
  endpoint:
    path: /Bags/Bum Bags
    method: GET
    data_selector: features
- name: Bags/Luggage
  endpoint:
    path: /Bags/Luggage
    method: GET
    data_selector: features
- name: Bags/Men's Bags
  endpoint:
    path: /Bags/Men's Bags
    method: GET
    data_selector: features
- name: 'Bags/Purses and Wallets Subcat.: beauty cases'
  endpoint:
    path: '/Bags/Purses and Wallets Subcat.: beauty cases'
    method: GET
    data_selector: features
- name: 'Bags/Purses and Wallets Subcat.: wallets'
  endpoint:
    path: '/Bags/Purses and Wallets Subcat.: wallets'
    method: GET
    data_selector: features
- name: 'Bags/Purses and Wallets Subcat.: women coin purses'
  endpoint:
    path: '/Bags/Purses and Wallets Subcat.: women coin purses'
    method: GET
    data_selector: features
- name: Bags/Women's Bags
  endpoint:
    path: /Bags/Women's Bags
    method: GET
    data_selector: features
- name: 'Clothing/Baby Clothes Subcat.: Baby Dungarees'
  endpoint:
    path: '/Clothing/Baby Clothes Subcat.: Baby Dungarees'
    method: GET
    data_selector: features
- name: 'Clothing/Baby Clothes Subcat.: Baby pants'
  endpoint:
    path: '/Clothing/Baby Clothes Subcat.: Baby pants'
    method: GET
    data_selector: features
- name: 'Clothing/Baby Clothes Subcat.: Bodysuits'
  endpoint:
    path: '/Clothing/Baby Clothes Subcat.: Bodysuits'
    method: GET
    data_selector: features
- name: 'Clothing/Baby Clothes Subcat.: Romper suits and overalls'
  endpoint:
    path: '/Clothing/Baby Clothes Subcat.: Romper suits and overalls'
    method: GET
    data_selector: features
- name: Clothing/Bathrobes
  endpoint:
    path: /Clothing/Bathrobes
    method: GET
    data_selector: features
- name: Clothing/Dresses
  endpoint:
    path: /Clothing/Dresses
    method: GET
    data_selector: features
- name: Clothing/Jackets and Coats
  endpoint:
    path: /Clothing/Jackets and Coats
    method: GET
    data_selector: features
- name: 'Clothing/Nightwear Subcat.: nightdresses and negligees'
  endpoint:
    path: '/Clothing/Nightwear Subcat.: nightdresses and negligees'
    method: GET
    data_selector: features
- name: 'Clothing/Nightwear Subcat.: pyjamas'
  endpoint:
    path: '/Clothing/Nightwear Subcat.: pyjamas'
    method: GET
    data_selector: features
- name: Clothing/Overalls and Dungarees
  endpoint:
    path: /Clothing/Overalls and Dungarees
    method: GET
    data_selector: features
- name: Clothing/Pants
  endpoint:
    path: /Clothing/Pants
    method: GET
    data_selector: features
- name: Clothing/Skirts
  endpoint:
    path: /Clothing/Skirts
    method: GET
    data_selector: features
- name: Clothing/Upper
  endpoint:
    path: /Clothing/Upper
    method: GET
    data_selector: features
- name: Footwear
  endpoint:
    path: /featuresofFootwear
    method: GET
    data_selector: categories
- name: Jewellery
  endpoint:
    path: /featuresofJewellery
    method: GET
    data_selector: categories
- name: Underwear
  endpoint:
    path: /featuresofUnderwear
    method: GET
    data_selector: categories
- name: Watch
  endpoint:
    path: /featuresofWatch
    method: GET
    data_selector: categories
- name: Accessories/Belts
  endpoint:
    path: /features/accessories/belts
    method: GET
    data_selector: tags
- name: 'Accessories/Eyewear Subcat.: glasses'
  endpoint:
    path: /features/accessories/eyewear/glasses
    method: GET
    data_selector: tags
- name: 'Accessories/Eyewear Subcat.: sunglasses'
  endpoint:
    path: /features/accessories/eyewear/sunglasses
    method: GET
    data_selector: tags
- name: Accessories/Gloves
  endpoint:
    path: /features/accessories/gloves
    method: GET
    data_selector: tags
- name: Accessories/Hats and Caps
  endpoint:
    path: /features/accessories/hats-and-caps
    method: GET
    data_selector: tags
- name: Accessories/Scarves
  endpoint:
    path: /features/accessories/scarves
    method: GET
    data_selector: tags
- name: Accessories/Ties
  endpoint:
    path: /features/accessories/ties
    method: GET
    data_selector: tags
- name: Bags/Backpacks
  endpoint:
    path: /features/bags/backpacks
    method: GET
    data_selector: tags
- name: Bags/Bum Bags
  endpoint:
    path: /features/bags/bum-bags
    method: GET
    data_selector: tags
- name: Bags/Luggage
  endpoint:
    path: /features/bags/luggage
    method: GET
    data_selector: tags
- name: Bags/Men's Bags
  endpoint:
    path: /features/bags/mens-bags
    method: GET
    data_selector: tags
- name: 'Bags/Purses and Wallets Subcat.: beauty cases'
  endpoint:
    path: /features/bags/purses-and-wallets/beauty-cases
    method: GET
    data_selector: tags
- name: 'Bags/Purses and Wallets Subcat.: wallets'
  endpoint:
    path: /features/bags/purses-and-wallets/wallets
    method: GET
    data_selector: tags
- name: 'Bags/Purses and Wallets Subcat.: women coin purses'
  endpoint:
    path: /features/bags/purses-and-wallets/women-coin-purses
    method: GET
    data_selector: tags
- name: Bags/Women's Bags
  endpoint:
    path: /features/bags/womens-bags
    method: GET
    data_selector: tags
- name: 'Clothing/Baby Clothes Subcat.: Baby Dungarees'
  endpoint:
    path: /features/clothing/baby-clothes/baby-dungarees
    method: GET
    data_selector: tags
- name: 'Clothing/Baby Clothes Subcat.: Baby pants'
  endpoint:
    path: /features/clothing/baby-clothes/baby-pants
    method: GET
    data_selector: tags
- name: 'Clothing/Baby Clothes Subcat.: Bodysuits'
  endpoint:
    path: /features/clothing/baby-clothes/bodysuits
    method: GET
    data_selector: tags
- name: 'Clothing/Baby Clothes Subcat.: Romper suits and overalls'
  endpoint:
    path: /features/clothing/baby-clothes/romper-suits-and-overalls
    method: GET
    data_selector: tags
- name: Clothing/Bathrobes
  endpoint:
    path: /features/clothing/bathrobes
    method: GET
    data_selector: tags
- name: Clothing/Dresses
  endpoint:
    path: /features/clothing/dresses
    method: GET
    data_selector: tags
- name: Clothing/Jackets and Coats
  endpoint:
    path: /features/clothing/jackets-and-coats
    method: GET
    data_selector: tags
- name: 'Clothing/Nightwear Subcat.: nightdresses and negligees'
  endpoint:
    path: /features/clothing/nightwear/nightdresses-and-negligees
    method: GET
    data_selector: tags
- name: 'Clothing/Nightwear Subcat.: pyjamas'
  endpoint:
    path: /features/clothing/nightwear/pyjamas
    method: GET
    data_selector: tags
- name: Clothing/Overalls and Dungarees
  endpoint:
    path: /features/clothing/overalls-and-dungarees
    method: GET
    data_selector: tags
- name: Clothing/Pants
  endpoint:
    path: /features/clothing/pants
    method: GET
    data_selector: tags
- name: Clothing/Skirts
  endpoint:
    path: /features/clothing/skirts
    method: GET
    data_selector: tags
- name: clothing_features
  endpoint:
    path: /features/clothing
    method: GET
- name: footwear_features
  endpoint:
    path: /features/footwear
    method: GET
- name: jewellery_features
  endpoint:
    path: /features/jewellery
    method: GET
- name: underwear_features
  endpoint:
    path: /features/underwear
    method: GET
- name: Underwear/Sets
  endpoint:
    path: /taxonomy/underwear/sets
    method: GET
    data_selector: features
    params: {}
- name: Underwear/Socks
  endpoint:
    path: /taxonomy/underwear/socks
    method: GET
    data_selector: features
    params: {}
- name: Underwear/Tights
  endpoint:
    path: /taxonomy/underwear/tights
    method: GET
    data_selector: features
    params: {}
- name: Watch
  endpoint:
    path: /taxonomy/watch
    method: GET
    data_selector: features
    params: {}
- name: Accessories/Belts
  endpoint:
    path: /features/accessories/belts
    method: GET
- name: 'Accessories/Eyewear Subcat: glasses'
  endpoint:
    path: /features/accessories/eyewear/glasses
    method: GET
- name: 'Accessories/Eyewear Subcat: sunglasses'
  endpoint:
    path: /features/accessories/eyewear/sunglasses
    method: GET
- name: Accessories/Gloves
  endpoint:
    path: /features/accessories/gloves
    method: GET
- name: Accessories/Hats and Caps
  endpoint:
    path: /features/accessories/hats
    method: GET
- name: Accessories/Scarves
  endpoint:
    path: /features/accessories/scarves
    method: GET
- name: Accessories/Ties
  endpoint:
    path: /features/accessories/ties
    method: GET
- name: Bags/Backpacks
  endpoint:
    path: /features/bags/backpacks
    method: GET
- name: Bags/Bum Bags
  endpoint:
    path: /features/bags/bum_bags
    method: GET
- name: Bags/Luggage
  endpoint:
    path: /features/bags/luggage
    method: GET
- name: Bags/Men's Bags
  endpoint:
    path: /features/bags/mens_bags
    method: GET
- name: 'Bags/Purses and Wallets Subcat: beauty cases'
  endpoint:
    path: /features/bags/purses/beauty_cases
    method: GET
- name: 'Bags/Purses and Wallets Subcat: wallets'
  endpoint:
    path: /features/bags/purses/wallets
    method: GET
- name: 'Bags/Purses and Wallets Subcat: women coin purses'
  endpoint:
    path: /features/bags/purses/women_coin_purses
    method: GET
- name: Bags/Women's Bags
  endpoint:
    path: /features/bags/womens_bags
    method: GET
- name: 'Clothing/Baby Clothes Subcat: Baby Dungarees'
  endpoint:
    path: /features/clothing/baby_clothes/baby_dungarees
    method: GET
- name: 'Clothing/Baby Clothes Subcat: Baby pants'
  endpoint:
    path: /features/clothing/baby_clothes/baby_pants
    method: GET
- name: 'Clothing/Baby Clothes Subcat: Bodysuits'
  endpoint:
    path: /features/clothing/baby_clothes/bodysuits
    method: GET
- name: 'Clothing/Baby Clothes Subcat: Romper suits and overalls'
  endpoint:
    path: /features/clothing/baby_clothes/romper_suits
    method: GET
- name: Clothing/Bathrobes
  endpoint:
    path: /features/clothing/bathrobes
    method: GET
- name: Clothing/Dresses
  endpoint:
    path: /features/clothing/dresses
    method: GET
- name: Clothing/Jackets and Coats
  endpoint:
    path: /features/clothing/jackets_and_coats
    method: GET
- name: 'Clothing/Nightwear Subcat: nightdresses and negligees'
  endpoint:
    path: /features/clothing/nightwear/nightdresses
    method: GET
- name: 'Clothing/Nightwear Subcat: pyjamas'
  endpoint:
    path: /features/clothing/nightwear/pyjamas
    method: GET
- name: Clothing/Overalls and Dungarees
  endpoint:
    path: /features/clothing/overalls_and_dungarees
    method: GET
- name: Clothing/Pants
  endpoint:
    path: /features/clothing/pants
    method: GET
- name: Clothing/Skirts
  endpoint:
    path: /features/clothing/skirts
    method: GET
- name: clothing_features
  endpoint:
    path: /features/clothing
    method: GET
    data_selector: features
    params: {}
- name: footwear_features
  endpoint:
    path: /features/footwear
    method: GET
    data_selector: features
    params: {}
- name: jewellery_features
  endpoint:
    path: /features/jewellery
    method: GET
    data_selector: features
    params: {}
- name: underwear_features
  endpoint:
    path: /features/underwear
    method: GET
    data_selector: features
    params: {}
- name: home_decor_taxonomy
  endpoint:
    path: /taxonomy/homedecor
    method: GET
    data_selector: taxonomy
- name: Underwear_Sets
  endpoint:
    path: /features/underwear_sets
    method: GET
    data_selector: tags
- name: Underwear_Socks
  endpoint:
    path: /features/underwear_socks
    method: GET
    data_selector: tags
- name: Underwear_Tights
  endpoint:
    path: /features/underwear_tights
    method: GET
    data_selector: tags
- name: Watch
  endpoint:
    path: /features/watch
    method: GET
    data_selector: tags
- name: tcg_id
  endpoint:
    path: /collectibles/v2/tcg_id
    method: GET
    data_selector: records
    params: {}
- name: sport_id
  endpoint:
    path: /collectibles/v2/sport_id
    method: GET
    data_selector: records
    params: {}
- name: comics_id
  endpoint:
    path: /collectibles/v2/comics_id
    method: GET
    data_selector: records
    params: {}
- name: tcg_id
  endpoint:
    path: /collectibles/v2/tcg_id
    method: GET
    data_selector: records
- name: sport_id
  endpoint:
    path: /collectibles/v2/sport_id
    method: GET
    data_selector: records
- name: comics_id
  endpoint:
    path: /collectibles/v2/comics_id
    method: GET
    data_selector: records
- name: features_of_Banknote
  endpoint:
    path: /features/banknote
    method: GET
    data_selector: tags
- name: features_of_Card_Sport_Card
  endpoint:
    path: /features/card/sport_card
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Digimon
  endpoint:
    path: /features/card/trading_card_game/digimon
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Dragon_Ball_Super
  endpoint:
    path: /features/card/trading_card_game/dragon_ball_super
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Flesh_and_Blood
  endpoint:
    path: /features/card/trading_card_game/flesh_and_blood
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Force_of_Will
  endpoint:
    path: /features/card/trading_card_game/force_of_will
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Garbage_Pail_Kids
  endpoint:
    path: /features/card/trading_card_game/garbage_pail_kids
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Grand_Archive
  endpoint:
    path: /features/card/trading_card_game/grand_archive
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Lorcana
  endpoint:
    path: /features/card/trading_card_game/lorcana
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Magic_The_Gathering
  endpoint:
    path: /features/card/trading_card_game/magic_the_gathering
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Marvel_Champions
  endpoint:
    path: /features/card/trading_card_game/marvel_champions
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_MetaZoo
  endpoint:
    path: /features/card/trading_card_game/metazoo
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_One_Piece
  endpoint:
    path: /features/card/trading_card_game/one_piece
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Other_game
  endpoint:
    path: /features/card/trading_card_game/other_game
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Pokemon
  endpoint:
    path: /features/card/trading_card_game/pokemon
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Star_Wars_Unlimited
  endpoint:
    path: /features/card/trading_card_game/star_wars_unlimited
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Ultraman
  endpoint:
    path: /features/card/trading_card_game/ultraman
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Union_Arena
  endpoint:
    path: /features/card/trading_card_game/union_arena
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Vanguard
  endpoint:
    path: /features/card/trading_card_game/vanguard
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_Weiss_Schwarz
  endpoint:
    path: /features/card/trading_card_game/weiss_schwarz
    method: GET
    data_selector: tags
- name: features_of_Card_Trading_Card_Game_Subcat_YuGiOh
  endpoint:
    path: /features/card/trading_card_game/yugioh
    method: GET
    data_selector: tags
- name: features_of_Coin
  endpoint:
    path: /features/coin
    method: GET
    data_selector: tags
- name: features_of_Slab_Label
  endpoint:
    path: /features/slab_label
    method: GET
    data_selector: tags
- name: features_of_Stamp
  endpoint:
    path: /features/stamp
    method: GET
    data_selector: tags
- name: detection
  endpoint:
    path: /platform/detection
    method: POST
notes:
- Asynchronous requests with webhooks are the ideal solution for processing large
  batches of images.
- Asynchronous requests are automatically deleted after 7 days.
- All requests must include your API token in the request headers.
- Trained models are automatically deployed as API endpoints for easy integration.
- Requires setup of API token for access
- Creating a flow in the frontend is free.
- When calling the flow endpoint, you are charged for each operation executed within
  the flow.
- Maximum of 10 records per request.
- Only one Slab Label is detected per image.
- Labels from unsupported companies are categorized as OTHER.
- Maximum of 10 records can be sent in one request
- A batch of JSON records (max 10) is required for the analyze method.
- Maximum of 10 records per batch
- API processes external images and is best suited for soft grading or pre-grading.
- This service is a discovery tool to promote marketplaces. Listing data is sourced
  directly from online marketplaces.
- Returns listings from sources like eBay, Rakuten and Rakuma.
- This service is available in paid pricing plans.
- If no object is found, the endpoint creates an artificial object covering the entire
  image.
- Maximum:10 records in a single request.
- The service and taxonomy are continuously improved and can be extended with new
  tags or features based on your needs.
- A batch of JSON records (max 10). Each record represents a single image, defined
  by _url or _base64.
- Maximum of 10 image records can be processed at a time.
- Batch operations allow up to 10 records per request.
- Supports batch operations, allowing up to 10 records per request.
- Maximum distance for records to be considered near duplicates defaults to 5.0
- Each collection has its own default cand_set_size value which can affect response
  time
- Your collection ID must be included in the header as 'collection-id'.
- 'Your API token must be in the format: ''Token YOUR_API_TOKEN''.'
- Maximum distance for records to be considered near duplicates, defaults to 5.0.
- Internal parameter cand_set_size can affect the operation's response time.
- Requires setup of collection ID in Ximilar App
- 'Your API token must be in the format: Token YOUR_API_TOKEN.'
- Requires a unique collection ID for each request.
- Your images are processed once and then discarded.
- Make sure to copy the full JSON record of the object when specifying for search.
- The service is asynchronous and requires a unique identifier for each request.
- 'Requires a valid API token in the format: Token YOUR_API_TOKEN.'
- All records must have the product_id field present in your collection for multiple
  images.
- Maximum number of records per request is 10.
- Asynchronous API, requires polling for results
- Webhook optional for status updates
- To access the Ximilar API, first register at Ximilar App to get your API token.
- The result images with removed background are stored temporarily for 24 hours.
- This service is not using any EXIF data from the input image.
- Asynchronous API to handle GPU-intensive tasks.
- Images processed with this API are stored temporarily for 24 hours.
- Ensure to have valid OAuth credentials for access.
- Download full taxonomy in JSON format.
- Requires setup of API token for DetectionClient
errors:
- 'HTTP error code 2XX: Method was OK'
- 'Other HTTP error code: Method failed'
- '401 Unauthorized: Recheck your API token or authorization headers.'
- '401 Unauthorized: Recheck API token'
- HTTP error code 2XX if the method was successful, and other HTTP error codes if
  the method failed.
- '2XX: HTTP error code indicates method was OK.'
- Other HTTP error codes indicate method failed.
- HTTP error code 2XX, if the method was OK, and other HTTP error code, if the method
  failed.
- 'HTTP error code 2XX: If the method was OK, and other HTTP error code if the method
  failed.'
- HTTP error code 2XX for successful calls.
- '404: No records found.'
- '205: All records found.'
- '206: Some records not found.'
- '205: records found'
- '206: some of the records not found'
- '404: records not found'
- '205: All records found'
- '206: Some records not found'
- '404: No records found'
- '400: Error Loading Image: Unable to download image'
- '401 Unauthorized: Check the API token and collection ID.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Recheck API token.'
- '2XX: Successful request'
- Other HTTP error codes if method failed
- '401 Unauthorized: Recheck API token and collection ID.'
- '400 Bad Request: Check request parameters and format.'
- '200: Request accepted'
- '4XX: Client error, check request format'
- '5XX: Server error, try again later'
- 'HTTP error code 2XX: if the method was OK'
- 'Other HTTP error code: if the method failed'
- '2XX: HTTP error code indicating the method was OK'
- '400 Bad Request: Check required attributes and data format.'
- '401 Unauthorized: Verify API token.'
- '2XX: HTTP error code indicating success'
- '4XX: HTTP error code indicating failure'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Verify the endpoint path.'
auth_info:
  mentioned_objects:
  - Token
  - API Token
  - Authorization
  - Collection-Id
  - DetectionClient
client:
  base_url: https://api.ximilar.com
  headers:
    Content-Type: application/json
source_metadata: null
