resources:
- name: device_info
  endpoint:
    path: /api/info/status
    method: GET
    data_selector: Device Name
    params: {}
- name: tone_list
  endpoint:
    path: /api/info/tonelist
    method: GET
    data_selector: tonelist
    params: {}
- name: file_list
  endpoint:
    path: /api/files/{filepath}
    method: GET
    data_selector: filelist
    params: {}
- name: download_file
  endpoint:
    path: /api/files/download
    method: POST
    data_selector: ''
    params: {}
- name: add_replace_file
  endpoint:
    path: /api/files/{filepath}/{filename}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_file
  endpoint:
    path: /api/files/
    method: DELETE
    data_selector: ''
    params: {}
- name: device_info
  endpoint:
    path: /api/info/status
    method: GET
    data_selector: Device Name
    params: {}
- name: tone_list
  endpoint:
    path: /api/info/tonelist
    method: GET
    data_selector: tonelist
    params: {}
- name: about_info
  endpoint:
    path: /api/info/about
    method: GET
    data_selector: Product Name
    params: {}
- name: settings
  endpoint:
    path: /api/settings
    method: PUT
    data_selector: audio.page.vol
    params: {}
- name: screen_control
  endpoint:
    path: /api/controls/screen/start
    method: POST
    data_selector: parameters
    params: {}
- name: strobe_light
  endpoint:
    path: /api/controls/strobe/start
    method: POST
    data_selector: parameters
    params: {}
- name: file_directory_contents
  endpoint:
    path: /api/files/{filepath}
    method: GET
    data_selector: filelist
    params: {}
- name: download_file
  endpoint:
    path: /api/files/download
    method: POST
    data_selector: ''
    params: {}
- name: add_or_replace_file
  endpoint:
    path: /api/files/{filepath}/{filename}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_file
  endpoint:
    path: /api/files/
    method: DELETE
    data_selector: ''
    params: {}
- name: screen_control
  endpoint:
    path: /api/controls/screen/start
    method: POST
- name: strobe_light
  endpoint:
    path: /api/controls/strobe/start
    method: POST
- name: stop_screen_pattern
  endpoint:
    path: /api/controls/screen/stop
    method: POST
- name: stop_strobe_light
  endpoint:
    path: /api/controls/strobe/stop
    method: POST
- name: multicast_settings
  endpoint:
    path: /multicast/settings
    method: GET
    data_selector: settings
    params: {}
- name: multicast_zones
  endpoint:
    path: /multicast/zones
    method: GET
    data_selector: zones
    params: {}
- name: SIP
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: Inbound Ring Settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: Inbound Page Settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: Audio Processing
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: Outbound Call
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: 8128 SIP Strobe Light Patterns
  endpoint:
    path: /api/8128/strobe_patterns
    method: GET
    data_selector: patterns
- name: 8138 IP Color Visual Alerter Strobe Light Patterns
  endpoint:
    path: /api/8138/strobe_patterns
    method: GET
    data_selector: patterns
- name: 8190S SIP Speaker â€“ Clock & Visual Alerter Strobe Light Patterns
  endpoint:
    path: /api/8190S/strobe_patterns
    method: GET
    data_selector: patterns
- name: IP Displays Strobe Light Patterns
  endpoint:
    path: /api/ip_displays/strobe_patterns
    method: GET
    data_selector: patterns
- name: multicast
  endpoint:
    path: /mcast
    method: GET
    data_selector: parameters
- name: clock
  endpoint:
    path: /clock
    method: GET
    data_selector: settings
- name: strobe
  endpoint:
    path: /strobe
    method: GET
    data_selector: patterns
- name: multicast_settings
  endpoint:
    path: /multicast/settings
    method: GET
    data_selector: settings
    params: {}
- name: multicast_zones
  endpoint:
    path: /multicast/zones
    method: GET
    data_selector: zones
    params: {}
- name: input_mode
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: relay_terminal_function
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: output
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: action_when_input_triggered
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: action_when_tamper_detected
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: tone_multicast_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: outbound_sip_call_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: volume_control_switch_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: remote_volume_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: records
- name: SIP
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Features
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: features
    params: {}
- name: Audio Processing
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: audio_processing
    params: {}
- name: Outbound Call
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: outbound_call
    params: {}
- name: multicast
  endpoint:
    path: /mcast
    method: GET
    data_selector: parameters
    params: {}
- name: clock
  endpoint:
    path: /clock
    method: GET
    data_selector: settings
    params: {}
- name: strobe
  endpoint:
    path: /strobe
    method: GET
    data_selector: patterns
    params: {}
- name: emergency_alerts
  endpoint:
    path: /emergency_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: dtmf_selection
  endpoint:
    path: /dtmf_selection
    method: GET
    data_selector: dtmf
    params: {}
- name: call_to_cancel
  endpoint:
    path: /call_to_cancel
    method: GET
    data_selector: cancel
    params: {}
- name: announcement_1
  endpoint:
    path: /announcement_1
    method: GET
    data_selector: announcement
    params: {}
- name: zone_1
  endpoint:
    path: /zone_1
    method: GET
    data_selector: zone
    params: {}
- name: priority_call
  endpoint:
    path: /priority_call
    method: GET
    data_selector: priority_call
    params: {}
- name: all_call
  endpoint:
    path: /all_call
    method: GET
    data_selector: all_call
    params: {}
- name: music
  endpoint:
    path: /music
    method: GET
    data_selector: music
    params: {}
- name: input_mode
  endpoint:
    path: /input/mode
    method: GET
    data_selector: input_modes
    params: {}
- name: output_relay
  endpoint:
    path: /output/relay
    method: GET
    data_selector: output_relays
    params: {}
- name: action_when_input_triggered
  endpoint:
    path: /action/input/triggered
    method: GET
    data_selector: input_triggered_actions
    params: {}
- name: action_when_tamper_detected
  endpoint:
    path: /action/tamper/detected
    method: GET
    data_selector: tamper_actions
    params: {}
- name: tone_multicast_settings
  endpoint:
    path: /tone/multicast/settings
    method: GET
    data_selector: multicast_settings
    params: {}
- name: outbound_sip_call_settings
  endpoint:
    path: /outbound/sip/call/settings
    method: GET
    data_selector: sip_call_settings
    params: {}
- name: volume_control_switch_settings
  endpoint:
    path: /volume/control/switch/settings
    method: GET
    data_selector: volume_control_settings
    params: {}
- name: remote_volume_settings
  endpoint:
    path: /remote/volume/settings
    method: GET
    data_selector: remote_volume_settings
    params: {}
- name: emergency_alerts
  endpoint:
    path: /emergency_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: network
  endpoint:
    path: /network
    method: GET
    data_selector: parameters
    params: {}
- name: ipv4
  endpoint:
    path: /ipv4
    method: GET
    data_selector: parameters
    params: {}
- name: ipv6
  endpoint:
    path: /ipv6
    method: GET
    data_selector: parameters
    params: {}
- name: icmpv6
  endpoint:
    path: /icmpv6
    method: GET
    data_selector: parameters
    params: {}
- name: vlan
  endpoint:
    path: /vlan
    method: GET
    data_selector: parameters
    params: {}
- name: pnac
  endpoint:
    path: /pnac
    method: GET
    data_selector: parameters
    params: {}
- name: differentiated_services
  endpoint:
    path: /differentiated_services
    method: GET
    data_selector: parameters
    params: {}
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: parameters
    params: {}
- name: tls
  endpoint:
    path: /tls
    method: GET
    data_selector: parameters
    params: {}
- name: net.protocol
  endpoint:
    path: net.protocol
    method: GET
    data_selector: ipv4
    params: {}
- name: net.dhcp.c.dns
  endpoint:
    path: net.dhcp.c.dns
    method: GET
    data_selector: enabled
    params: {}
- name: net.dns.servers
  endpoint:
    path: net.dns.servers
    method: GET
    data_selector: servers
    params: {}
- name: net.ipv4.method
  endpoint:
    path: net.ipv4.method
    method: GET
    data_selector: method
    params: {}
- name: net.ipv4.address
  endpoint:
    path: net.ipv4.address
    method: GET
    data_selector: address
    params: {}
- name: net.ipv4.gateway
  endpoint:
    path: net.ipv4.gateway
    method: GET
    data_selector: gateway
    params: {}
- name: net.icmpv6.destunreach
  endpoint:
    path: net.icmpv6.destunreach
    method: GET
    data_selector: destunreach
    params: {}
- name: net.icmpv6.redirect
  endpoint:
    path: net.icmpv6.redirect
    method: GET
    data_selector: redirect
    params: {}
- name: net.icmpv6.echo
  endpoint:
    path: net.icmpv6.echo
    method: GET
    data_selector: echo
    params: {}
- name: net.icmpv6.enablelim
  endpoint:
    path: net.icmpv6.enablelim
    method: GET
    data_selector: enablelim
    params: {}
- name: net.vlan.use
  endpoint:
    path: net.vlan.use
    method: GET
    data_selector: vlan_use
    params: {}
- name: net.vlan.id
  endpoint:
    path: net.vlan.id
    method: GET
    data_selector: vlan_id
    params: {}
- name: net.vlan.priority
  endpoint:
    path: net.vlan.priority
    method: GET
    data_selector: vlan_priority
    params: {}
- name: net.pnac.use
  endpoint:
    path: net.pnac.use
    method: GET
    data_selector: pnac_use
    params: {}
- name: net.pnac.auth
  endpoint:
    path: net.pnac.auth
    method: GET
    data_selector: auth
    params: {}
- name: net.pnac.anon
  endpoint:
    path: net.pnac.anon
    method: GET
    data_selector: anon
    params: {}
- name: net.pnac.id
  endpoint:
    path: net.pnac.id
    method: GET
    data_selector: id
    params: {}
- name: net.pnac.pwd
  endpoint:
    path: net.pnac.pwd
    method: GET
    data_selector: pwd
    params: {}
- name: net.pnac.validate
  endpoint:
    path: net.pnac.validate
    method: GET
    data_selector: validate
    params: {}
- name: net.dscp.sip
  endpoint:
    path: net.dscp.sip
    method: GET
    data_selector: sip
    params: {}
- name: net.dscp.rtp
  endpoint:
    path: net.dscp.rtp
    method: GET
    data_selector: rtp
    params: {}
- name: net.dscp.rtcp
  endpoint:
    path: net.dscp.rtcp
    method: GET
    data_selector: rtcp
    params: {}
- name: net.dns.cache
  endpoint:
    path: net.dns.cache
    method: GET
    data_selector: dns_cache
    params: {}
- name: net.weaktls.use
  endpoint:
    path: net.weaktls.use
    method: GET
    data_selector: weaktls
    params: {}
- name: admin_parameters
  endpoint:
    path: /api/admin/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: log_settings
  endpoint:
    path: /api/log/settings
    method: GET
    data_selector: logSettings
    params: {}
- name: management_settings
  endpoint:
    path: /api/management/settings
    method: GET
    data_selector: managementSettings
    params: {}
- name: snmp_settings
  endpoint:
    path: /api/snmp/settings
    method: GET
    data_selector: snmpSettings
    params: {}
- name: api_support
  endpoint:
    path: /api/support
    method: GET
    data_selector: apiSupport
    params: {}
- name: system_integrity
  endpoint:
    path: /api/system/integrity
    method: GET
    data_selector: systemIntegrity
    params: {}
- name: admin
  endpoint:
    path: /admin
    method: GET
    data_selector: parameters
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: parameters
    params: {}
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: parameters
    params: {}
- name: advanced_audio
  endpoint:
    path: /advanced_audio
    method: GET
    data_selector: parameters
    params: {}
- name: advanced_sip
  endpoint:
    path: /advanced_sip
    method: GET
    data_selector: parameters
    params: {}
- name: transmitter
  endpoint:
    path: /advanced/multicast/transmitter
    method: GET
    data_selector: parameters
    params:
      mcast.mode: 1
- name: receiver
  endpoint:
    path: /advanced/multicast/receiver
    method: GET
    data_selector: parameters
    params:
      mcast.mode: 2
- name: SIP Parameters
  endpoint:
    path: /docs/speaker-provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Audio Processing
  endpoint:
    path: /docs/speaker-provisioning-parameters
    method: GET
    data_selector: audio_processing
    params: {}
- name: Outbound Call Settings
  endpoint:
    path: /docs/speaker-provisioning-parameters
    method: GET
    data_selector: outbound_call
    params: {}
- name: Transmitter Output Codec
  endpoint:
    path: /advanced/multicast/transmitter/codec
    method: GET
    data_selector: records
    params:
      mcast.mode: 1
- name: Poly Output Codec
  endpoint:
    path: /advanced/multicast/transmitter/polycodec
    method: GET
    data_selector: records
    params:
      mcast.mode: 1
      mcast.polycom.mode: 1
- name: Output Packetization Time
  endpoint:
    path: /advanced/multicast/transmitter/ptime
    method: GET
    data_selector: records
    params:
      mcast.mode: 1
- name: Multicast TTL
  endpoint:
    path: /advanced/multicast/transmitter/ttl
    method: GET
    data_selector: records
    params:
      mcast.mode: 1
- name: RTCP Port Selection
  endpoint:
    path: /advanced/multicast/transmitter/rtcp
    method: GET
    data_selector: records
    params:
      mcast.mode: 1
      mcast.polycom.mode: 0
- name: Audio Sync
  endpoint:
    path: /advanced/multicast/receiver/audio-sync
    method: GET
    data_selector: records
    params:
      mcast.mode: 2
- name: RTCP Port Selection Receiver
  endpoint:
    path: /advanced/multicast/receiver/rtcp
    method: GET
    data_selector: records
    params:
      mcast.mode: 2
      mcast.polycom.mode: 0
- name: SIP Provisioning
  endpoint:
    path: /v1/docs/speaker-provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: multicast
  endpoint:
    path: /multicast
    method: GET
    data_selector: records
- name: clock
  endpoint:
    path: /clock
    method: GET
    data_selector: records
- name: strobe
  endpoint:
    path: /strobe
    method: GET
    data_selector: records
- name: multicast
  endpoint:
    path: /mcast
    method: GET
    data_selector: parameters
    params: {}
- name: clock
  endpoint:
    path: /clock
    method: GET
    data_selector: settings
    params: {}
- name: strobe
  endpoint:
    path: /strobe
    method: GET
    data_selector: patterns
    params: {}
- name: input_mode
  endpoint:
    path: /input_mode
    method: GET
    data_selector: parameters
    params: {}
- name: terminal_block_functions
  endpoint:
    path: /terminal_block_functions
    method: GET
    data_selector: parameters
    params: {}
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: parameters
    params: {}
- name: action_when_input_triggered
  endpoint:
    path: /action_when_input_triggered
    method: GET
    data_selector: parameters
    params: {}
- name: action_when_tamper_detected
  endpoint:
    path: /action_when_tamper_detected
    method: GET
    data_selector: parameters
    params: {}
- name: tone_multicast_settings
  endpoint:
    path: /tone_multicast_settings
    method: GET
    data_selector: parameters
    params: {}
- name: outbound_sip_call_settings
  endpoint:
    path: /outbound_sip_call_settings
    method: GET
    data_selector: parameters
    params: {}
- name: volume_control_switch_settings
  endpoint:
    path: /volume_control_switch_settings
    method: GET
    data_selector: parameters
    params: {}
- name: remote_volume_settings
  endpoint:
    path: /remote_volume_settings
    method: GET
    data_selector: parameters
    params: {}
- name: relay_input_mode
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: terminal_block_functions
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: output_relay
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: action_when_input_triggered
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: action_when_tamper_detected
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: tone_multicast_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: outbound_sip_call_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: volume_control_switch_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: remote_volume_settings
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Emergency Alerts
  endpoint:
    path: /emergency_alerts
    method: GET
    data_selector: settings
- name: Announcement 1
  endpoint:
    path: /announcement_1
    method: GET
    data_selector: configuration
- name: Zone 1
  endpoint:
    path: /zone_1
    method: GET
    data_selector: configuration
- name: Priority Call
  endpoint:
    path: /priority_call
    method: GET
    data_selector: configuration
- name: All Call
  endpoint:
    path: /all_call
    method: GET
    data_selector: configuration
- name: Music
  endpoint:
    path: /music
    method: GET
    data_selector: configuration
- name: Ring Extension 2
  endpoint:
    path: /ring_extension_2
    method: GET
    data_selector: configuration
- name: Default Announcement Duration
  endpoint:
    path: /ann.length
    method: GET
    data_selector: records
    params: {}
- name: Default Maximum Announcement Time
  endpoint:
    path: /ann.maxtime
    method: GET
    data_selector: records
    params: {}
- name: Announcement Selection Mode
  endpoint:
    path: /ann.select
    method: GET
    data_selector: records
    params: {}
- name: Answer Inbound Call
  endpoint:
    path: /ann.end
    method: GET
    data_selector: records
    params: {}
- name: Passcode Protected Announcement Extensions
  endpoint:
    path: /ann.confirm
    method: GET
    data_selector: records
    params: {}
- name: Announcement Passcode
  endpoint:
    path: /dtmfpc.alert.code
    method: GET
    data_selector: records
    params: {}
- name: Passcode Prompt Tone
  endpoint:
    path: /dtmfpc.alert.tone
    method: GET
    data_selector: records
    params: {}
- name: Extension
  endpoint:
    path: /ann.dtmf.ext
    method: GET
    data_selector: records
    params: {}
- name: Authentication ID
  endpoint:
    path: /ann.dtmf.auth
    method: GET
    data_selector: records
    params: {}
- name: Authentication Password
  endpoint:
    path: /ann.dtmf.pwd
    method: GET
    data_selector: records
    params: {}
- name: Display Name (Optional)
  endpoint:
    path: /ann.dtmf.dname
    method: GET
    data_selector: records
    params: {}
- name: Prompt Tone
  endpoint:
    path: /ann.dtmf.tone
    method: GET
    data_selector: records
    params: {}
- name: Call-to-Cancel Extension
  endpoint:
    path: /cancel.ext
    method: GET
    data_selector: records
    params: {}
- name: Authentication ID
  endpoint:
    path: /cancel.auth
    method: GET
    data_selector: records
    params: {}
- name: Authentication Password
  endpoint:
    path: /cancel.pwd
    method: GET
    data_selector: records
    params: {}
- name: Display Name (Optional)
  endpoint:
    path: /cancel.dname
    method: GET
    data_selector: records
    params: {}
- name: Confirmation Tone
  endpoint:
    path: /cancel.ctone
    method: GET
    data_selector: records
    params: {}
- name: Network
  endpoint:
    path: /network
    method: GET
    data_selector: parameters
    params: {}
- name: IPv4
  endpoint:
    path: /ipv4
    method: GET
    data_selector: parameters
    params: {}
- name: IPv6
  endpoint:
    path: /ipv6
    method: GET
    data_selector: parameters
    params: {}
- name: ICMPv6 Options
  endpoint:
    path: /icmpv6
    method: GET
    data_selector: parameters
    params: {}
- name: 802.1Q Virtual LAN
  endpoint:
    path: /vlan
    method: GET
    data_selector: parameters
    params: {}
- name: 802.1X Port-based Network Access Control
  endpoint:
    path: /pnac
    method: GET
    data_selector: parameters
    params: {}
- name: Differentiated Services
  endpoint:
    path: /differentiated-services
    method: GET
    data_selector: parameters
    params: {}
- name: DNS
  endpoint:
    path: /dns
    method: GET
    data_selector: parameters
    params: {}
- name: TLS
  endpoint:
    path: /tls
    method: GET
    data_selector: parameters
    params: {}
- name: net.protocol
  endpoint:
    path: /network/protocol
    method: GET
    data_selector: records
    params: {}
- name: net.dhcp.c.dns
  endpoint:
    path: /network/dhcp_dns
    method: GET
    data_selector: records
    params: {}
- name: net.dns.servers
  endpoint:
    path: /network/dns_servers
    method: GET
    data_selector: records
    params: {}
- name: net.ipv4.method
  endpoint:
    path: /network/ipv4_method
    method: GET
    data_selector: records
    params: {}
- name: net.vlan.use
  endpoint:
    path: /network/vlan_mode
    method: GET
    data_selector: records
    params: {}
- name: net.pnac.use
  endpoint:
    path: /network/pnac_authentication
    method: GET
    data_selector: records
    params: {}
- name: admin_devname
  endpoint:
    path: /admin/devname
    method: GET
    data_selector: records
- name: admin_welcome
  endpoint:
    path: /admin/welcome
    method: GET
    data_selector: records
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: records
    params: {}
- name: Speaker Provisioning
  endpoint:
    path: /api/speakers
    method: GET
    data_selector: speakers
- name: Log Settings
  endpoint:
    path: /api/logs
    method: GET
    data_selector: logs
- name: Management
  endpoint:
    path: /api/management
    method: GET
    data_selector: management
- name: SNMP Support
  endpoint:
    path: /api/snmp
    method: GET
    data_selector: snmp
- name: API Support
  endpoint:
    path: /api/support
    method: GET
    data_selector: api
- name: ADMP Monitoring
  endpoint:
    path: /api/admp
    method: GET
    data_selector: admp
- name: Time Settings
  endpoint:
    path: /api/time
    method: GET
    data_selector: time
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: parameters
    params: {}
- name: Transmitter Output Codec
  endpoint:
    path: /advanced/multicast/transmitter/rtpcodec
    method: GET
    data_selector: permitted_values
    params:
      mcast.mode: '1'
- name: Poly Output Codec
  endpoint:
    path: /advanced/multicast/transmitter/ppacodec
    method: GET
    data_selector: permitted_values
    params:
      mcast.mode: '1'
      mcast.polycom.mode: 1, 2, 3, or 4
- name: Output Packetization Time
  endpoint:
    path: /advanced/multicast/transmitter/mcast.tx.ptime
    method: GET
    data_selector: permitted_values
    params:
      mcast.mode: '1'
- name: Multicast TTL
  endpoint:
    path: /advanced/multicast/transmitter/mcast.tx.ttl
    method: GET
    data_selector: permitted_values
    params:
      mcast.mode: '1'
- name: RTCP Port Selection
  endpoint:
    path: /advanced/multicast/transmitter/mcast.rtcp.mode
    method: GET
    data_selector: permitted_values
    params:
      mcast.mode: '1'
      mcast.polycom.mode: 0, 3, or 4
- name: transmitter_output_codec
  endpoint:
    path: /transmitter/output/codec
    method: GET
    data_selector: records
    params: {}
- name: poly_output_codec
  endpoint:
    path: /poly/output/codec
    method: GET
    data_selector: records
    params: {}
- name: output_packetization_time
  endpoint:
    path: /output/packetization/time
    method: GET
    data_selector: records
    params: {}
- name: multicast_ttl
  endpoint:
    path: /multicast/ttl
    method: GET
    data_selector: records
    params: {}
- name: rtcp_port_selection
  endpoint:
    path: /rtcp/port/selection
    method: GET
    data_selector: records
    params: {}
- name: audio_sync
  endpoint:
    path: /audio/sync
    method: GET
    data_selector: records
    params: {}
- name: configuration
  endpoint:
    path: /configuration
    method: GET
    data_selector: settings
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: deviceStatus
    params: {}
- name: configuration
  endpoint:
    path: /docs/8190s-ip-speaker-clock-visual-alerter-user-guide
    method: GET
    data_selector: settings
    params: {}
- name: multicast_settings
  endpoint:
    path: /multicast/settings
    method: GET
    data_selector: multicastSettings
- name: audio_configuration
  endpoint:
    path: /audio/configuration
    method: GET
    data_selector: audioConfiguration
- name: multicast_settings
  endpoint:
    path: /multicast/settings
    method: GET
    data_selector: settings
    params: {}
- name: audio_configuration
  endpoint:
    path: /audio/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: device_configuration
  endpoint:
    path: /api/device/configuration
    method: GET
    data_selector: configuration
- name: tones
  endpoint:
    path: /docs/8190s-ip-speaker-clock-visual-alerter-user-guide#tones
    method: GET
    data_selector: files
    params: {}
- name: advanced_audio
  endpoint:
    path: /docs/8190s-ip-speaker-clock-visual-alerter-user-guide#advanced_audio
    method: GET
    data_selector: functions
    params: {}
- name: clock_configuration
  endpoint:
    path: /docs/8190s-ip-speaker-clock-visual-alerter-user-guide#clock_configuration
    method: GET
    data_selector: basic_clock_settings
    params: {}
- name: strobe_configuration
  endpoint:
    path: /docs/8190s-ip-speaker-clock-visual-alerter-user-guide#strobe_configuration
    method: GET
    data_selector: basic_strobe_settings
    params: {}
- name: relay_io_configuration
  endpoint:
    path: /docs/8190s-ip-speaker-clock-visual-alerter-user-guide#relay_input_output_configuration
    method: GET
    data_selector: general
    params: {}
- name: system_configuration
  endpoint:
    path: /docs/8190s-ip-speaker-clock-visual-alerter-user-guide#system_configuration
    method: GET
    data_selector: network_settings
    params: {}
- name: sip
  endpoint:
    path: /v1/docs/provisioning-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: provisioning
  endpoint:
    path: /api/provisioning
    method: GET
    data_selector: records
    params: {}
- name: system_log
  endpoint:
    path: /api/system_log
    method: GET
    data_selector: logs
    params: {}
- name: Channel Settings
  endpoint:
    path: /v1/channels
    method: GET
    data_selector: records
- name: Input/Output
  endpoint:
    path: /v1/io
    method: GET
    data_selector: records
- name: Audio Streaming
  endpoint:
    path: /v1/audio
    method: GET
    data_selector: records
- name: Outbound SIP Call Settings
  endpoint:
    path: /v1/sip/outbound
    method: GET
    data_selector: records
- name: Volume Control Switch Settings
  endpoint:
    path: /v1/volume/control
    method: GET
    data_selector: records
- name: Remote Volume Settings
  endpoint:
    path: /v1/remote/volume
    method: GET
    data_selector: records
- name: SIP Settings
  endpoint:
    path: /docs/paging-adapter-provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: Audio Settings
  endpoint:
    path: /docs/paging-adapter-provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: Multicast Settings
  endpoint:
    path: /docs/paging-adapter-provisioning-parameters
    method: GET
    data_selector: records
    params: {}
- name: Default Announcement Duration
  endpoint:
    path: ann.length
    method: SET
    data_selector: configured
    params: {}
- name: Default Maximum Announcement Time
  endpoint:
    path: ann.maxtime
    method: SET
    data_selector: configured
    params: {}
- name: Announcement Selection Mode
  endpoint:
    path: ann.select
    method: SET
    data_selector: configured
    params: {}
- name: Answer Inbound Call
  endpoint:
    path: ann.end
    method: SET
    data_selector: configured
    params: {}
- name: Passcode Protected Announcement Extensions
  endpoint:
    path: ann.confirm
    method: SET
    data_selector: configured
    params: {}
- name: Announcement Passcode
  endpoint:
    path: dtmfpc.alert.code
    method: SET
    data_selector: configured
    params: {}
- name: Passcode Prompt Tone
  endpoint:
    path: dtmfpc.alert.tone
    method: SET
    data_selector: configured
    params: {}
- name: admin
  endpoint:
    path: /admin
    method: GET
    data_selector: records
- name: zones
  endpoint:
    path: /mcast.zones.exp
    method: GET
    data_selector: mcast.zones
    params: {}
- name: channel_settings
  endpoint:
    path: /mcast.chan1.zones
    method: GET
    data_selector: mcast.chan1.zones
    params: {}
- name: input_output
  endpoint:
    path: /io.relayin.mode
    method: GET
    data_selector: io.relayin.mode
    params: {}
- name: audio_streaming
  endpoint:
    path: /audio.streaming.mode
    method: GET
    data_selector: audio.streaming.mode
    params: {}
- name: audio_input_settings
  endpoint:
    path: /audio.port.input
    method: GET
    data_selector: audio.port.input
    params: {}
- name: output
  endpoint:
    path: /io.relayout
    method: GET
    data_selector: io.relayout
    params: {}
- name: action_when_input_triggered
  endpoint:
    path: /relayin.trigger.action
    method: GET
    data_selector: relayin.trigger.action
    params: {}
- name: action_when_tamper_detected
  endpoint:
    path: /io.relayin.svmode
    method: GET
    data_selector: io.relayin.svmode
    params: {}
- name: tone_multicast_settings
  endpoint:
    path: /relayin.mcast.mode
    method: GET
    data_selector: relayin.mcast.mode
    params: {}
- name: outbound_sip_call_settings
  endpoint:
    path: /phone.timeout.ringback
    method: GET
    data_selector: phone.timeout.ringback
    params: {}
- name: volume_control_switch_settings
  endpoint:
    path: /relayin.volctl.mute
    method: GET
    data_selector: relayin.volctl.mute
    params: {}
- name: remote_volume_settings
  endpoint:
    path: /remote.vol.mode
    method: GET
    data_selector: remote.vol.mode
    params: {}
- name: Provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: parameters
- name: Advanced Audio
  endpoint:
    path: /advanced/audio
    method: GET
    data_selector: parameters
- name: Advanced SIP
  endpoint:
    path: /advanced/sip
    method: GET
    data_selector: parameters
- name: announcement
  endpoint:
    path: /services/data/vXX.X/sobjects/Announcement
    method: GET
- name: Transmitter Output Codec
  endpoint:
    path: rtpcodec
    method: GET
    data_selector: Audio encoding format used by the Transmitter device when sending
      output to the Listeners
- name: Poly Output Codec
  endpoint:
    path: ppacodec
    method: GET
    data_selector: Audio encoding format used by the Transmitter device when sending
      output to the Listeners
- name: Output Packetization Time
  endpoint:
    path: mcast.tx.ptime
    method: GET
    data_selector: The size of the audio packets sent by the Transmitter to the Listeners
- name: Multicast TTL
  endpoint:
    path: mcast.tx.ttl
    method: GET
    data_selector: Only change this setting if custom routing is configured on the
      network that specifically routes multicast packets between subnets, and a longer
      TTL count is required.
- name: RTCP Port Selection
  endpoint:
    path: mcast.rtcp.mode
    method: GET
    data_selector: Select the port on which RTCP packets will be sent or received.
- name: Priority Call
  endpoint:
    path: mcast.zone9
    method: GET
    data_selector: Multicast address for this zone
- name: All Call
  endpoint:
    path: mcast.zone8
    method: GET
    data_selector: Multicast address for this zone
- name: Zone 1
  endpoint:
    path: mcast.zone1
    method: GET
    data_selector: Multicast address for this zone
- name: Music
  endpoint:
    path: mcast.zone7
    method: GET
    data_selector: Multicast address for this zone
- name: Audio Sync
  endpoint:
    path: audio.jc.delay
    method: GET
    data_selector: When using multicast with other third-party devices that have a
      delay in their audio path
- name: Provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: records
- name: Advanced Audio
  endpoint:
    path: /advanced/audio
    method: GET
    data_selector: records
- name: Advanced SIP
  endpoint:
    path: /advanced/sip
    method: GET
    data_selector: records
- name: basic_settings
  endpoint:
    path: /v1/docs/provisioning-parameters/basic-settings
    method: GET
    data_selector: parameters
    params: {}
- name: features
  endpoint:
    path: /v1/docs/provisioning-parameters/features
    method: GET
    data_selector: parameters
    params: {}
- name: multicast
  endpoint:
    path: /v1/docs/provisioning-parameters/multicast
    method: GET
    data_selector: parameters
    params: {}
- name: channels
  endpoint:
    path: /v1/docs/provisioning-parameters/channels
    method: GET
    data_selector: parameters
    params: {}
- name: input_output
  endpoint:
    path: /input_output
    method: GET
    data_selector: records
- name: audio_streaming
  endpoint:
    path: /audio_streaming
    method: GET
    data_selector: records
- name: audio_input_settings
  endpoint:
    path: /audio_input_settings
    method: GET
    data_selector: records
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: records
- name: action_when_input_triggered
  endpoint:
    path: /action_when_input_triggered
    method: GET
    data_selector: records
- name: action_when_tamper_detected
  endpoint:
    path: /action_when_tamper_detected
    method: GET
    data_selector: records
- name: tone_multicast_settings
  endpoint:
    path: /tone_multicast_settings
    method: GET
    data_selector: records
- name: outbound_sip_call_settings
  endpoint:
    path: /outbound_sip_call_settings
    method: GET
    data_selector: records
- name: volume_control_switch_settings
  endpoint:
    path: /volume_control_switch_settings
    method: GET
    data_selector: records
- name: remote_volume_settings
  endpoint:
    path: /remote_volume_settings
    method: GET
    data_selector: records
- name: emergency_alerts
  endpoint:
    path: /provisioning/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Default Announcement Duration
  endpoint:
    path: /ann.length
    method: GET
    data_selector: records
    params: {}
- name: Default Maximum Announcement Time
  endpoint:
    path: /ann.maxtime
    method: GET
    data_selector: records
    params: {}
- name: Announcement Selection Mode
  endpoint:
    path: /ann.select
    method: GET
    data_selector: records
    params: {}
- name: Answer Inbound Call
  endpoint:
    path: /ann.end
    method: GET
    data_selector: records
    params: {}
- name: Passcode Protected Announcement Extensions
  endpoint:
    path: /ann.confirm
    method: GET
    data_selector: records
    params: {}
- name: Announcement Passcode
  endpoint:
    path: /dtmfpc.alert.code
    method: GET
    data_selector: records
    params: {}
- name: Passcode Prompt Tone
  endpoint:
    path: /dtmfpc.alert.tone
    method: GET
    data_selector: records
    params: {}
- name: Priority Call Page Extension
  endpoint:
    path: /mcast.useext9
    method: GET
    data_selector: records
    params: {}
- name: All Call Page Extension
  endpoint:
    path: /mcast.useext8
    method: GET
    data_selector: records
    params: {}
- name: Zone 1 Page Extension
  endpoint:
    path: /mcast.useext1
    method: GET
    data_selector: records
    params: {}
- name: Music Page Extension
  endpoint:
    path: /mcast.useext7
    method: GET
    data_selector: records
    params: {}
- name: User Login
  endpoint:
    path: /system/u1/use
    method: GET
- name: Timezone
  endpoint:
    path: /admin/timezone
    method: GET
- name: User Management
  endpoint:
    path: /api/user
    method: GET
- name: Time Management
  endpoint:
    path: /api/time
    method: GET
- name: Provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: parameters
    params: {}
- name: Advanced Audio
  endpoint:
    path: /audio
    method: GET
    data_selector: audio_parameters
    params: {}
- name: Advanced SIP
  endpoint:
    path: /sip
    method: GET
    data_selector: sip_parameters
    params: {}
- name: provisioning
  endpoint:
    path: /api/provisioning
    method: POST
    data_selector: data
    params: {}
- name: advanced_audio
  endpoint:
    path: /api/advanced_audio
    method: POST
    data_selector: data
    params: {}
- name: advanced_sip
  endpoint:
    path: /api/advanced_sip
    method: POST
    data_selector: data
    params: {}
- name: Advanced Multicast Transmitter
  endpoint:
    path: /advanced/multicast/transmitter
    method: GET
    data_selector: records
    params: {}
- name: Advanced Multicast Receiver
  endpoint:
    path: /advanced/multicast/receiver
    method: GET
    data_selector: records
    params: {}
- name: transmitter
  endpoint:
    path: /advanced/multicast/transmitter
    method: GET
    data_selector: parameters
- name: receiver
  endpoint:
    path: /advanced/multicast/receiver
    method: GET
    data_selector: parameters
- name: 8301 IP Paging Adapter & Scheduler
  endpoint:
    path: /product/8301-ip-paging-adapter-scheduler
    method: GET
    data_selector: records
- name: 8305 Multi-Interface IP Paging Adapter
  endpoint:
    path: /product/8305-multi-interface-ip-paging-adapter
    method: GET
    data_selector: records
- name: 8373 IP Zone Paging Adapter
  endpoint:
    path: /product/8373-ip-zone-paging-adapter
    method: GET
    data_selector: records
- name: 8301 IP Paging Adapter & Scheduler
  endpoint:
    path: /product/8301-ip-paging-adapter-scheduler/
    method: GET
    data_selector: records
- name: 8305 Multi-Interface IP Paging Adapter
  endpoint:
    path: /product/8305-multi-interface-ip-paging-adapter/
    method: GET
    data_selector: records
- name: 8373 IP Zone Paging Adapter
  endpoint:
    path: /product/8373-ip-zone-paging-adapter/
    method: GET
    data_selector: records
- name: 8373 IP Zone Paging Adapter
  endpoint:
    path: /services/data/vXX.X/sobjects/8373
    method: GET
    data_selector: records
    params: {}
- name: 8301 IP Paging Adapter & Scheduler
  endpoint:
    path: /services/data/vXX.X/sobjects/8301
    method: GET
    data_selector: records
    params: {}
- name: 8305 Multi-Interface IP Paging Adapter
  endpoint:
    path: /services/data/vXX.X/sobjects/8305
    method: GET
    data_selector: records
    params: {}
- name: sip
  endpoint:
    path: /api/sip
    method: GET
    data_selector: parameters
    params: {}
- name: audio
  endpoint:
    path: /api/audio
    method: GET
    data_selector: parameters
    params: {}
- name: inbound_call
  endpoint:
    path: /api/inbound_call
    method: GET
    data_selector: parameters
    params: {}
- name: outbound_call
  endpoint:
    path: /api/outbound_call
    method: GET
    data_selector: parameters
    params: {}
- name: general
  endpoint:
    path: /api/general
    method: GET
    data_selector: parameters
    params: {}
- name: input
  endpoint:
    path: /api/input
    method: GET
    data_selector: parameters
    params: {}
- name: multicast
  endpoint:
    path: /api/multicast
    method: GET
    data_selector: parameters
    params: {}
- name: Bogen TPU-35/60/100/250
  endpoint:
    path: /services/data/vXX.X/sobjects/BogenTPU-35-60-100-250
    method: GET
    data_selector: records
    params: {}
- name: Bogen UTI1 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/BogenUTI1-8301
    method: GET
    data_selector: records
    params: {}
- name: Bogen UTI1 with 8305
  endpoint:
    path: /services/data/vXX.X/sobjects/BogenUTI1-8305
    method: GET
    data_selector: records
    params: {}
- name: Bogen UTI312 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/BogenUTI312-8301
    method: GET
    data_selector: records
    params: {}
- name: Bogen ZPM3-9 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/BogenZPM3-9-8301
    method: GET
    data_selector: records
    params: {}
- name: Bogen ZPM3-9 with 8305
  endpoint:
    path: /services/data/vXX.X/sobjects/BogenZPM3-9-8305
    method: GET
    data_selector: records
    params: {}
- name: Crown 135MA/160MA with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/Crown135MA-160MA-8301
    method: GET
    data_selector: records
    params: {}
- name: Crown CDi 1000/2000/4000 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/CrownCDi-1000-2000-4000-8301
    method: GET
    data_selector: records
    params: {}
- name: Inter-M PA-60/120/240 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/InterM-PA-60-120-240-8301
    method: GET
    data_selector: records
    params: {}
- name: Inter-M PA-920/935 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/InterM-PA-920-935-8301
    method: GET
    data_selector: records
    params: {}
- name: Paso 3000 Series with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/Paso3000-8301
    method: GET
    data_selector: records
    params: {}
- name: Speco P-60FACD with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/Speco-P-60FACD-8301
    method: GET
    data_selector: records
    params: {}
- name: Speco PBM-15/PBM-30 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/Speco-PBM-15-PBM-30-8301
    method: GET
    data_selector: records
    params: {}
- name: Speco PL200M with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/Speco-PL200M-8301
    method: GET
    data_selector: records
    params: {}
- name: TOA 500 Series with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/TOA-500-8301
    method: GET
    data_selector: records
    params: {}
- name: TOA BG-115/130 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/TOA-BG-115-130-8301
    method: GET
    data_selector: records
    params: {}
- name: TOA BG-220/235 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/TOA-BG-220-235-8301
    method: GET
    data_selector: records
    params: {}
- name: TOA BG-1015/1030/1060/1120 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/TOA-BG-1015-1030-1060-1120-8301
    method: GET
    data_selector: records
    params: {}
- name: TOA BG-2035/2060/2120 with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/TOA-BG-2035-2060-2120-8301
    method: GET
    data_selector: records
    params: {}
- name: Valcom 2003AHF with 8305
  endpoint:
    path: /services/data/vXX.X/sobjects/Valcom-2003AHF-8305
    method: GET
    data_selector: records
    params: {}
- name: Valcom V-1094A with 8301
  endpoint:
    path: /services/data/vXX.X/sobjects/Valcom-V-1094A-8301
    method: GET
    data_selector: records
    params: {}
- name: Door Control Relay
  endpoint:
    path: dc.io.doorout
    method: SET
    data_selector: value
    params: {}
- name: Door Control Password
  endpoint:
    path: dc.link.pwd
    method: SET
    data_selector: value
    params: {}
- name: Stand-Alone Mode
  endpoint:
    path: dc.sa.mode
    method: SET
    data_selector: value
    params: {}
- name: Aux Out Relay
  endpoint:
    path: dc.io.relayout
    method: SET
    data_selector: value
    params: {}
- name: Basic Receiver Zones
  endpoint:
    path: Mcast.relayout.zones
    method: SET
    data_selector: value
    params: {}
- name: Polycom Receiver Channels
  endpoint:
    path: Mcast.relayout.groups
    method: SET
    data_selector: value
    params: {}
- name: Unlock Via Schedule
  endpoint:
    path: dc.sched.use
    method: SET
    data_selector: value
    params: {}
- name: Unlock Time
  endpoint:
    path: dc.sched.start
    method: SET
    data_selector: value
    params: {}
- name: Lock Time
  endpoint:
    path: dc.sched.stop
    method: SET
    data_selector: value
    params: {}
- name: Days to Apply Schedule
  endpoint:
    path: dc.sched.days
    method: SET
    data_selector: value
    params: {}
- name: Max Door Open
  endpoint:
    path: dc.opalarm.maxopen
    method: SET
    data_selector: value
    params: {}
- name: Extension to Dial
  endpoint:
    path: dc.opalarm.dest
    method: SET
    data_selector: value
    params: {}
- name: 24V Output
  endpoint:
    path: dc.io.pwrout
    method: SET
    data_selector: value
    params: {}
- name: Output Mode
  endpoint:
    path: dc.io.pwrmode
    method: SET
    data_selector: value
    params: {}
- name: Wiring Fault Supervision Mode
  endpoint:
    path: dc.tamper.svmode
    method: SET
    data_selector: value
    params: {}
- name: Action when Tamper Detected
  endpoint:
    path: dc.tamper.action
    method: SET
    data_selector: value
    params: {}
- name: 'Input #1'
  endpoint:
    path: dc.io.feature1
    method: SET
    data_selector: value
    params: {}
- name: SIP settings
  endpoint:
    path: /api/sip_settings
    method: GET
    data_selector: settings
    params: {}
- name: Audio settings
  endpoint:
    path: /api/audio_settings
    method: GET
    data_selector: settings
    params: {}
- name: Inbound Call settings
  endpoint:
    path: /api/inbound_call_settings
    method: GET
    data_selector: settings
    params: {}
- name: Outbound Call settings
  endpoint:
    path: /api/outbound_call_settings
    method: GET
    data_selector: settings
    params: {}
- name: General settings
  endpoint:
    path: /api/general_settings
    method: GET
    data_selector: settings
    params: {}
- name: Input settings
  endpoint:
    path: /api/input_settings
    method: GET
    data_selector: settings
    params: {}
- name: Multicast settings
  endpoint:
    path: /api/multicast_settings
    method: GET
    data_selector: settings
    params: {}
- name: network_door_controller
  endpoint:
    path: /network/door/controller
    method: GET
    data_selector: parameters
    params: {}
- name: door_unlock_via_telephone_dtmf
  endpoint:
    path: /door/unlock/telephone/dtmf
    method: GET
    data_selector: parameters
    params: {}
- name: door_unlock_on_schedule
  endpoint:
    path: /door/unlock/schedule
    method: GET
    data_selector: parameters
    params: {}
- name: tone
  endpoint:
    path: /tone
    method: GET
    data_selector: parameters
    params: {}
- name: local_door_controller
  endpoint:
    path: /local/door/controller
    method: GET
    data_selector: parameters
    params: {}
- name: input_output
  endpoint:
    path: /input/output
    method: GET
    data_selector: parameters
    params: {}
- name: door_sensor
  endpoint:
    path: /door/sensor
    method: GET
    data_selector: parameters
    params: {}
- name: call_button
  endpoint:
    path: /call/button
    method: GET
    data_selector: parameters
    params: {}
- name: tone_multicast_settings
  endpoint:
    path: /tone/multicast/settings
    method: GET
    data_selector: parameters
    params: {}
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: parameters
    params: {}
- name: auxiliary_24v_output
  endpoint:
    path: /auxiliary/24v/output
    method: GET
    data_selector: parameters
    params: {}
- name: door_station_disconnect_alarm
  endpoint:
    path: /door/station/disconnect/alarm
    method: GET
    data_selector: parameters
    params: {}
- name: provisioning
  endpoint:
    path: /api/provisioning
    method: GET
    data_selector: records
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: records
- name: Door Control Relay
  endpoint:
    path: /dc.io.doorout
    method: GET
    data_selector: value
    params: {}
- name: Door Control Password
  endpoint:
    path: /dc.link.pwd
    method: GET
    data_selector: value
    params: {}
- name: Stand-Alone Mode
  endpoint:
    path: /dc.sa.mode
    method: GET
    data_selector: value
    params: {}
- name: Aux Out Relay
  endpoint:
    path: /dc.io.relayout
    method: GET
    data_selector: value
    params: {}
- name: Basic Receiver Zones
  endpoint:
    path: /Mcast.relayout.zones
    method: GET
    data_selector: value
    params: {}
- name: Polycom Receiver Channels
  endpoint:
    path: /Mcast.relayout.groups
    method: GET
    data_selector: value
    params: {}
- name: Unlock Via Schedule
  endpoint:
    path: /dc.sched.use
    method: GET
    data_selector: value
    params: {}
- name: Unlock Time
  endpoint:
    path: /dc.sched.start
    method: GET
    data_selector: value
    params: {}
- name: Lock Time
  endpoint:
    path: /dc.sched.stop
    method: GET
    data_selector: value
    params: {}
- name: Days to Apply Schedule
  endpoint:
    path: /dc.sched.days
    method: GET
    data_selector: value
    params: {}
- name: Answer Prompt
  endpoint:
    path: /dc.tone.prompt
    method: GET
    data_selector: value
    params: {}
- name: Door Unlock Tone
  endpoint:
    path: /dc.tone.unlock
    method: GET
    data_selector: value
    params: {}
- name: Momentary Open Code
  endpoint:
    path: /dc.mopen.code
    method: GET
    data_selector: value
    params: {}
- name: Duration
  endpoint:
    path: /dc.mopen.timeout
    method: GET
    data_selector: value
    params: {}
- name: Max Door Open
  endpoint:
    path: /dc.opalarm.maxopen
    method: GET
    data_selector: value
    params: {}
- name: Extension to Dial
  endpoint:
    path: /dc.opalarm.dest
    method: GET
    data_selector: value
    params: {}
- name: Alarm Tone/Pre-recorded Announcement
  endpoint:
    path: /dp.opalarm.tone
    method: GET
    data_selector: value
    params: {}
- name: Current Limit
  endpoint:
    path: /dc.io.pwrlim
    method: GET
    data_selector: value
    params: {}
- name: audio_sync
  endpoint:
    path: /advanced_multicast/receiver
    method: GET
    data_selector: audio.jc.delay
    params: {}
- name: rtcp_port_selection
  endpoint:
    path: /advanced_multicast/receiver
    method: GET
    data_selector: mcast.rtcp.mode
    params: {}
- name: priority_call
  endpoint:
    path: /priority_call
    method: GET
    data_selector: mcast.zone9
    params: {}
- name: all_call
  endpoint:
    path: /all_call
    method: GET
    data_selector: mcast.zone8
    params: {}
- name: zone_1
  endpoint:
    path: /zone_1
    method: GET
    data_selector: mcast.zone1
    params: {}
- name: music
  endpoint:
    path: /music
    method: GET
    data_selector: mcast.zone7
    params: {}
- name: polycom_groups
  endpoint:
    path: /polycom_groups
    method: GET
    data_selector: mcast.polycom.tone1
    params: {}
- name: Network Door Controller
  endpoint:
    path: /network/door/controller
    method: GET
    data_selector: parameters
    params: {}
- name: Door Unlock via Telephone DTMF
  endpoint:
    path: /door/unlock/dtmf
    method: GET
    data_selector: parameters
    params: {}
- name: Door Unlock on Schedule
  endpoint:
    path: /door/unlock/schedule
    method: GET
    data_selector: parameters
    params: {}
- name: Tone
  endpoint:
    path: /door/tone
    method: GET
    data_selector: parameters
    params: {}
- name: Local Door Controller
  endpoint:
    path: /local/door/controller
    method: GET
    data_selector: parameters
    params: {}
- name: Input/Output
  endpoint:
    path: /input/output
    method: GET
    data_selector: parameters
    params: {}
- name: Door Sensor
  endpoint:
    path: /door/sensor
    method: GET
    data_selector: parameters
    params: {}
- name: Call Button
  endpoint:
    path: /call/button
    method: GET
    data_selector: parameters
    params: {}
- name: Tone Multicast Settings
  endpoint:
    path: /tone/multicast
    method: GET
    data_selector: parameters
    params: {}
- name: Output
  endpoint:
    path: /output
    method: GET
    data_selector: parameters
    params: {}
- name: Auxiliary 24V Output
  endpoint:
    path: /auxiliary/24v/output
    method: GET
    data_selector: parameters
    params: {}
- name: Door Station Disconnect Alarm
  endpoint:
    path: /door/station/disconnect/alarm
    method: GET
    data_selector: parameters
    params: {}
- name: provisioning
  endpoint:
    path: /provisioning
    method: GET
    data_selector: records
    params: {}
- name: Advanced Multicast
  endpoint:
    path: /advanced/multicast
    method: GET
    data_selector: parameters
    params: {}
- name: Priority Call
  endpoint:
    path: /priority/call
    method: GET
    data_selector: parameters
    params: {}
- name: All Call
  endpoint:
    path: /all/call
    method: GET
    data_selector: parameters
    params: {}
- name: Zone 1
  endpoint:
    path: /zone/1
    method: GET
    data_selector: parameters
    params: {}
- name: Music
  endpoint:
    path: /music
    method: GET
    data_selector: parameters
    params: {}
- name: Polycom Groups
  endpoint:
    path: /polycom/groups
    method: GET
    data_selector: parameters
    params: {}
notes:
- The Algo endpoint must be using firmware version 3.3 or higher.
- Ensure NTP (Network Time Protocol) is enabled on the device.
- All operations are applicable to all products except 8039.
- Firmware version must be 3.3 or higher.
- 'Minimum Firmware Version: 5.3.4 for screen control'
- 'Minimum Firmware Version: 3.3 for strobe light control'
- The power source used (PoE, PoE+, PoE++) can impact a deviceâ€™s performance.
- Parameters will not be restricted based on the power source.
- A GET or POST call can be used for file management.
- 'Minimum Firmware Version: 3.3 for strobe lights'
- When configuring a device, the web interface options will not change based on the
  power source.
- It is important to note the difference between maximum power input and maximum audio
  power for all Algo IP speakers.
- The distance of a satellite speaker from the main speaker (power source) will impact
  audio performance.
- Multicast uses minimal network bandwidth as only one copy of the network packets
  is sent from the transmitter regardless of how many receiver endpoints are listening
  to a given IP multicast zone.
- Ensure the multicast IP address and port number do not conflict with other services
  and devices on the same network.
- Provisioning allows system administrators to manage & configure large numbers of
  devices without the need to log into each individual web interface.
- For steps required to configure provisioning and detailed behavior, please check
  the Provisioning Guide.
- No additional Algo hardware or software is required for multicast.
- Receiver endpoints do not require SIP extensions and do not need to register with
  the SIP communication server.
- All settings are applicable to All IP speakers.
- Some parameters may have default values that can be altered based on requirements.
- All parameters are applicable to all IP speakers.
- Ensure proper configuration of SNMP for monitoring
- Requires setup of connected app in api
- Enable or disable provisioning
- Select the preferred server method
- Enter the static server address
- Select the preferred download method
- Enable or disable certificate validation for (HTTPS only)
- Username for HTTPS provisioning
- Password for HTTPS provisioning
- Set the path for the configuration file
- Set the path for the firmware files
- Enable or disable partial provisioning
- If 'Conditional Reboot' is selected, the device will check with the provisioning
  server and only reboot if new config is found
- Schedule a time (HH:mm:ss) for the device to perform a sync
- If set, the device will sync at a random time in the window between Start Time and
  End Time.
- Choose which days the device should sync its configuration with the provisioning
  server.
- The SIP Server's IP address (e.g., 192.168.1.111) or domain name (e.g., server.com).
- mcast.mode must be set to 1 for transmitter and 2 for receiver
- Configuration for Polycom requires specific modes
- For settings not available in this document, please contact Algo support for assistance.
- All parameters apply to all IP speakers.
- This API does not require authentication.
- Basic authentication is required for API access.
- Default values are indicated in the tables.
- Uses SIP for voice paging and alerting â€” requires setup with IT for SIP registration.
- Uses PoE (Power over Ethernet) 48V 350 mA IEEE 802.3at or 802.3af compliant.
- Device can default to static IP address 192.168.1.111 if DHCP fails.
- ADMP cannot be used at the same time as Algo 8300 IP Controller.
- 'The multicast IP addresses range: 224.0.0.0/4.'
- This product is powered by a certified limited power source (LPS), Power over Ethernet
  (PoE); through CAT5 or CAT6 connection wiring to an IEEE 802.3at PoE+ or 802.3af
  compliant network PoE switch.
- The product is intended for installation indoors.
- All wiring connections to the product must be in the same building.
- Tone files can be downloaded manually from the Algo website.
- The operation might take a long time depending on the types and sizes of the tone
  files.
- The device can be provisioned through a provisioning server or zero-touch provisioning
  (ZTP).
- ZTP is enabled by default and occurs before any other provisioning step.
- Select 'basic' zones if configuring nine or fewer multicast zones or 'expanded'
  to configure up to 50 zones.
- If enabled, all DTMF Selectable Zones will require two digits.
- This guide provides details on provisioning settings, parameters, and acceptable
  values used by Algo IP paging adapters.
- Default settings may vary based on specific paging adapter.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Choose to use Internet Protocol version 4 or to use IPv4 + IPv6 dual stack.
- Enable to provide a DNS server statically instead of using the DHCP provided name
  servers.
- Set the unit to use DHCP or static IP address.
- Enter the IP address and netmask (CIDR notation).
- Enter the gateway address.
- Some objects may return nulls in deeply nested fields
- Audio encoding format used by the Transmitter device when sending output to the
  Listeners
- The size of the audio packets sent by the Transmitter to the Listeners
- Only change this setting if custom routing is configured on the network that specifically
  routes multicast packets between subnets, and a longer TTL count is required
- In 'SIP' mode, only the results of DNS queries for SIP requests will be cached.
  In 'All' mode, the results of all DNS queries will be cached.
- Enable Teams support
- Requires setup of paging adapters in the Algo Network
- Multiple parameters can be configured for audio and SIP settings.
- mcast.mode must be set to 1 for transmitter and 2 for receiver.
- Algo IP Paging Adapters provide balanced line outputs and connect directly with
  legacy amplifiers.
- Models not explicitly mentioned in this guide are not necessarily incompatible with
  Algo paging adapters.
- The 8373 is designed to provide a Line Out for audio to a traditional amplifier.
- On the 8373 web interface, go to Basic Settings â†’ Features and set the Line Out
  Analog Output Level to 0dBm 600 ohm (0.775 Vrms)
- Set the Battery Feed switch off before connecting the 8301
- On the 8301 web interface, go to Basic Settings â†’ Features and set the Line Out
  Analog Output Level to -10dBm 600 ohm (0.245 Vrms)
- Ensure to configure authentication parameters correctly.
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck authentication method or credentials.'
- '400 Bad Request: Verify request parameters and payload format.'
- 'Configuration Problems: Ensure Multicast Mode and Type are correctly set.'
- 'Network Related Problems: Ensure all devices in the Multicast Zone have valid IP
  addresses on the same subnet.'
- 'CONFIGURATION_ERROR: Check multicast mode and type settings.'
- 'NETWORK_ERROR: Ensure multicast is enabled on network switches.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check credentials'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Check device connection and configuration.'
- '404 Not Found: Ensure the endpoint is correct.'
- Multicast settings must match between transmitter and receiver devices.
- 'Invalid Parameter: Check the parameter values you''ve provided.'
- 'Timeout: The request has timed out. Please try again.'
- 'Unauthorized: Ensure you have the correct permissions.'
- 'INVALID_PARAMETER: Check the provided parameters for accuracy.'
- 'UNAUTHORIZED_ACCESS: Ensure authentication credentials are correct.'
- '401 Unauthorized: Recheck authentication method'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Verify endpoint path.'
auth_info:
  mentioned_objects:
  - BasicAuth
  - RestApi
  - api.auth.basic
client:
  base_url: https://www.algosolutions.com
  headers:
    Accept: application/json
source_metadata: null
