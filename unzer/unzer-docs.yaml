resources:
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: create_pay_page
  endpoint:
    path: /v2/merchant/paypage
    method: POST
    data_selector: data
- name: get_payments
  endpoint:
    path: /v2/merchant/paypage/{paypageId}
    method: GET
    data_selector: data
    params:
      limit: 5
      offset: 0
- name: update_pay_page
  endpoint:
    path: /v2/merchant/paypage/{paypageId}
    method: PATCH
    data_selector: data
- name: delete_pay_page
  endpoint:
    path: /v2/merchant/paypage/{paypageId}
    method: DELETE
    data_selector: data
- name: createToken
  endpoint:
    path: /v1/auth/token
    method: POST
- name: payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: data
    params:
      incremental: createdAt
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/v2/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /api/v2/customers
    method: GET
    data_selector: data
    params: {}
- name: customer_test_data
  endpoint:
    path: /customer/test/data
    method: GET
- name: alipay
  endpoint:
    path: /alipay
    method: GET
- name: apple_pay
  endpoint:
    path: /apple_pay
    method: GET
- name: eps
  endpoint:
    path: /eps
    method: GET
- name: google_pay
  endpoint:
    path: /google_pay
    method: GET
- name: ideal
  endpoint:
    path: /ideal
    method: GET
- name: paypal
  endpoint:
    path: /paypal
    method: GET
- name: przelewy24
  endpoint:
    path: /przelewy24
    method: GET
- name: sofort
  endpoint:
    path: /sofort
    method: GET
- name: twint
  endpoint:
    path: /twint
    method: GET
- name: german_test_bank
  endpoint:
    path: /german_test_bank
    method: GET
- name: austrian_test_bank
  endpoint:
    path: /austrian_test_bank
    method: GET
- name: unzer_direct_bank_transfer
  endpoint:
    path: /unzer_direct_bank_transfer
    method: GET
- name: unzer_direct_debit
  endpoint:
    path: /unzer_direct_debit
    method: GET
- name: unzer_invoice
  endpoint:
    path: /unzer_invoice
    method: GET
- name: wechat_pay
  endpoint:
    path: /wechat_pay
    method: GET
- name: auth_token
  endpoint:
    path: /auth.token
    method: POST
    data_selector: token
- name: filetransfer_list
  endpoint:
    path: /filetransfer.list
    method: POST
    data_selector: data
- name: invoiceFiles_list
  endpoint:
    path: /invoiceFiles.list
    method: POST
    data_selector: data
- name: filetransfer_download
  endpoint:
    path: /filetransfer.download
    method: POST
    data_selector: binary file
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: CreatePayPage
  endpoint:
    path: /createPayPage
    method: POST
    data_selector: payPageId
    params: {}
- name: GetPayPageConfiguration
  endpoint:
    path: /getPayPageConfiguration
    method: GET
    data_selector: configuration
    params: {}
- name: paypage
  endpoint:
    path: /v2/merchant/paypage
    method: POST
    data_selector: application/json
    params: {}
- name: getPayments
  endpoint:
    path: /v2/merchant/paypage/{paypageId}
    method: GET
    data_selector: application/json
    params:
      offset: 0
      limit: 5
- name: updatePayPage
  endpoint:
    path: /v2/merchant/paypage/{paypageId}
    method: PATCH
    data_selector: application/json
    params: {}
- name: deletePayPage
  endpoint:
    path: /v2/merchant/paypage/{paypageId}
    method: DELETE
    data_selector: application/json
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /api/payments
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: payment
  endpoint:
    path: /payment/resource
    method: POST
    data_selector: payment_credentials
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/Transaction
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: payment_methods
  endpoint:
    path: /v1/payment_methods
    method: GET
    data_selector: data
    params: {}
- name: preauthorize
  endpoint:
    path: /v1/payments/preauthorize
    method: POST
    data_selector: id
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: zero_authorization
  endpoint:
    path: /v1/payments/authorize
    method: POST
    data_selector: resources
    params:
      amount: '0'
      currency: EUR
      returnUrl: https://www.unzer.com/de/kassenloesungen/
      orderId: 15f7dd6b-a3ef-45e2-96a6-30f500f28e8e
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /v2/payments
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params: {}
- name: cancel_authorization
  endpoint:
    path: /v1/payments/s-pay-xyz/authorize/cancels
    method: POST
    data_selector: amount
- name: payments
  endpoint:
    path: /v1/payments/charges
    method: POST
    data_selector: submitResponse
    params: {}
- name: payment_status
  endpoint:
    path: /v1/payments/{payment_ID}
    method: GET
    data_selector: state
    params: {}
- name: payment_cancel
  endpoint:
    path: /v1/payments/s-pay-xyz/charges/s-chg-1/cancels
    method: POST
    data_selector: success
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment_type
  endpoint:
    path: /v1/payments/charges
    method: POST
    data_selector: typeId
- name: payments
  endpoint:
    path: /v1/payments/charges
    method: POST
    data_selector: resources
    params: {}
- name: payment_status
  endpoint:
    path: /v1/payments/{payment_ID}
    method: GET
    data_selector: id
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Alipay
  endpoint:
    path: /types/alipay
    method: GET
- name: Apple Pay
  endpoint:
    path: /types/ApplePay
    method: GET
- name: Bancontact
  endpoint:
    path: /types/bancontact
    method: GET
- name: Card
  endpoint:
    path: /types/card
    method: GET
- name: EPS
  endpoint:
    path: /types/eps
    method: GET
- name: Google Pay
  endpoint:
    path: /types/card
    method: GET
- name: iDEAL
  endpoint:
    path: /types/ideal
    method: GET
- name: Klarna
  endpoint:
    path: /types/klarna
    method: GET
- name: PayPal
  endpoint:
    path: /types/paypal
    method: GET
- name: PayU
  endpoint:
    path: /types/payu
    method: GET
- name: Przelewy24
  endpoint:
    path: /types/przelewy24
    method: GET
- name: PostFinance card
  endpoint:
    path: /types/post-finance-card
    method: GET
- name: PostFinance eFinance
  endpoint:
    path: /types/post-finance-efinance
    method: GET
- name: TWINT
  endpoint:
    path: /types/twint
    method: GET
- name: Unzer Bank Transfer
  endpoint:
    path: /types/open-banking-pis
    method: GET
- name: Unzer Direct Debit
  endpoint:
    path: /types/sepa-direct-debit
    method: GET
- name: Direct Debit Secured
  endpoint:
    path: /types/paylater-direct-debit
    method: GET
- name: Unzer Installment
  endpoint:
    path: /types/paylater-installment
    method: GET
- name: Unzer Invoice
  endpoint:
    path: /types/paylater-invoice
    method: GET
- name: Unzer Prepayment
  endpoint:
    path: /types/prepayment
    method: GET
- name: WeChat Pay
  endpoint:
    path: /types/WeChatPay
    method: GET
- name: alipay
  endpoint:
    path: /types/alipay
    method: POST
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: ApplePay
  endpoint:
    path: /types/ApplePay
    method: GET
    data_selector: records
    params: {}
- name: payment_methods
  endpoint:
    path: /payment-methods/
    method: GET
    data_selector: methods
    params: {}
- name: bancontact
  endpoint:
    path: /types/bancontact
    method: GET
- name: card
  endpoint:
    path: /types/card
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /services/data/v1/payments
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /v2/payments
    method: POST
    data_selector: payment
    params: {}
- name: eps
  endpoint:
    path: /types/eps
    method: GET
- name: payment
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: googlepay
  endpoint:
    path: /types/card
    method: GET
    data_selector: payment
- name: ideal
  endpoint:
    path: /types/ideal
    method: POST
- name: charge
  endpoint:
    path: /types/ideal/charge
    method: POST
- name: payments
  endpoint:
    path: /v2/payments
    method: POST
    data_selector: payment
    params: {}
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: klarna
  endpoint:
    path: /types/klarna
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: paypal
  endpoint:
    path: /types/paypal
    method: GET
- name: payment
  endpoint:
    path: /api/v1/payments
    method: POST
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment_type
  endpoint:
    path: /types/payu
    method: GET
- name: charges
  endpoint:
    path: /create/v1/payment/charges
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: post-card
  endpoint:
    path: /types/post-finance-card
    method: GET
- name: post-efinance
  endpoint:
    path: /types/post-finance-efinance
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: p24
  endpoint:
    path: /types/przelewy24
    method: GET
- name: payments
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: twint
  endpoint:
    path: /types/twint
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: openbanking-pis
  endpoint:
    path: /types/open-banking-pis
    method: POST
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: sepa_direct_debit
  endpoint:
    path: /types/sepa-direct-debit
    method: GET
- name: paylater-direct-debit
  endpoint:
    path: /types/paylater-direct-debit
    method: POST
- name: paylater-installment
  endpoint:
    path: /types/paylater-installment
    method: GET
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: paylater-invoice
  endpoint:
    path: /types/paylater-invoice
    method: GET
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: prepayment
  endpoint:
    path: /types/prepayment
    method: GET
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: data
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data
- name: payments
  endpoint:
    path: /services/data/vX.X/payments
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /api/payments
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: payments
    params: {}
- name: customer
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: customers
    params: {}
- name: payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/Transaction
    method: GET
    data_selector: records
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: paymentData
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: data
    params: {}
- name: authorize_payment
  endpoint:
    path: /payments/authorize
    method: POST
    data_selector: data
    params: {}
- name: cancel_authorization
  endpoint:
    path: /payments/cancel
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /v2/payments
    method: POST
    data_selector: payment
    params: {}
- name: customer
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: customers
    params: {}
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /v2/transactions
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: data
    params: {}
- name: ETN File
  endpoint:
    path: /etn-file
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: payment_methods
  endpoint:
    path: /payment-methods/
    method: GET
    data_selector: methods
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /api/v1/payment
    method: POST
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /api/v1/customer
    method: GET
    data_selector: data
    params: {}
- name: payment_transaction
  endpoint:
    path: /api/v1/payments
    method: POST
    data_selector: transaction
    params: {}
- name: payment_status
  endpoint:
    path: /api/v1/payments/status
    method: GET
    data_selector: status
    params:
      transaction_id: transactionId
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Unzer
- Some API responses may include nested fields with null values.
- The necessary authentication mechanism is described in the Token-Service Reference.
- 'Test environment URL: https://paypage.test.unzer.com/v2/merchant/paypage/{paypageId}'
- 'Production environment URL: https://paypage.unzer.com/v2/merchant/paypage/{paypageId}'
- Requires setup of connected app in Payments API.
- Uses OAuth2 with refresh token — requires setup in Unzer dashboard
- Ensure API keys are kept secure and not exposed in client-side code
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in Unzer
- Make sure your shop URL is TLS protected and reachable from WWW.
- Check if you have an HTTP basic auth protection for your shop.
- Have UTF-8 encoding for the integration.
- Some objects may return nulls in deeply nested fields
- Default value for accept language header is 'en' (en-US)
- Some responses may contain nested objects
- Check Notifications to learn how to use the supported webhook events.
- Some endpoints may have rate limits
- Requires OAuth2 authentication with refresh token.
- Some endpoints may have rate limits.
- Ensure to comply with local payment regulations.
- Ensure proper permissions for API access
- Setup required for OAuth2 authentication
- Ensure all payment methods are enabled in the configuration
- The API may have rate limits that should be respected.
- Some endpoints may require additional parameters based on the context.
- To avoid handling sensitive credit card details, we recommend implementing our UI
  components that tokenize sensitive payment data.
- To trigger the final payment or authorization, it is also required to integrate
  server to server.
- Requires OAuth2 authentication setup.
- The customer has to explicitly agree to storing the credentials.
- Uses OAuth2 with refresh token — requires setup of connected app in payment API
- Ensure to handle rate limits as specified in the documentation.
- Some responses may contain additional metadata.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Uses OAuth2 with refresh token — requires setup of API client in Unzer
- Some responses may contain nested fields with varying structures
- Refunds are always initiated by the merchant and refer to a previous transaction
  (charge or shipment).
- Requires OAuth2 authentication with a connected app.
- Some responses may include null values
- Zero-authorization
- Ensure to check the API limits and handle throttling appropriately.
- Some endpoints may have specific requirements for input fields.
- Ensure to use the correct public key for secure transactions
- Your integration is automatically PCI-compliant if you are using the Unzer UI components.
- Some API responses may contain pagination details
- Requires OAuth2 setup for accessing the API.
- Ensure proper token management to avoid expiration issues.
- API requires setup of client credentials in Unzer platform
- Be aware of rate limits when making API calls
- Ensure all API calls are authenticated using OAuth2.
- Rate limiting may apply.
- Be aware of potential API rate limits.
- Some payment methods may not be available in all regions
- Requires setup of API key and secret in the Unzer portal.
- Ensure to follow the authentication flow correctly to obtain tokens.
- Check for specific error handling on transaction failures.
- OAuth2 with refresh token — requires setup of connected app in API
- Adhere to the Google Pay APIs Acceptable Use Policy
- Accept the terms defined in Google Pay API Terms of Service
- Ensure to handle OAuth token expiration properly.
- Ensure you have valid credentials for access
- Check API limits to avoid throttling
- API has rate limits on requests.
- API rate limits may apply.
- Ensure to configure OAuth settings correctly.
- Rate limits may apply for API calls.
- No new merchant onboarding is possible for this payment method.
- Requires OAuth2 setup and proper permissions.
- Requires setup of OAuth2 for authentication
- API may have rate limits on certain endpoints
- Ensure correct OAuth scopes are set
- OAuth2 authentication required with refresh token.
- Requires setup of connected app in payment API
- Ensure to handle token expiration appropriately.
- Refer to API Reference for detailed information
- Some transactions may have delayed status updates
- Payment Page version 2 is supported.
- Payment Page v1 integration for the shop plugin is exempt from EAA checks.
- Our new plugin, based on Payment Page v2 is developed to ensure full compliance
  with the EAA regulation.
- OAuth2 authentication is required for API access.
- Requires setup of API credentials in the Unzer dashboard
- Some requests may have rate limits
- Check payment details can be retrieved using the relevant API endpoint.
- Magento 2 version 2.4.5 EOL on August 9, 2025.
- 'EAA Compliant: Exempted per BFSG Section 4'
- API requires OAuth2 with refresh token setup.
- Uses OAuth2 with refresh token for authentication.
- Ensure client credentials are correctly configured.
- New plugin, based on Payment Page v2 is developed to ensure full compliance with
  the EAA regulation.
- The UI components v1 integration for the shop plugin is exempt from EAA checks.
- Requires OAuth2 authentication
- Token refresh mechanism is in place
- 'EAA Compliant: Yes'
- 'Released Date: July 2025'
- Requires valid API key and OAuth2 setup.
- Handle errors gracefully in integration.
- Requires a valid API key and account setup.
- 'Supported Plugin integration: UI Components v1'
- Make sure to handle token refresh correctly.
- Migrating Unzer plugin from the Shopware store
- UI components v1 integration for the shop plugin is exempt from EAA checks.
- Ensure to handle token expiration properly.
- OAuth2 required for all integrations
- API calls are rate limited
- New plugin, based on UI components v2 is developed to ensure full compliance with
  the EAA regulation.
- Ensure proper scopes are set for API access
- Requires setup of connected app in API
- Ensure OAuth2 credentials are properly configured before integration.
- Some endpoints may have rate limiting.
- Some payment methods may return nulls in response
- The ETN file (CSV) is based on a single, unified format, covering and supporting
  all relevant payment methods.
- Merchants should review the file format to ensure it meets their reconciliation
  and reporting needs.
- Uses OAuth2 with refresh token.
- Sofort payment method is deprecated and will no longer be accepted from 31.03.2025.
- Ensure to have the correct scopes set for OAuth2.
- API calls may be subject to rate limiting.
- Ensure proper OAuth2 flow is configured.
- To connect to UnzerOne processing platform you need new account credentials.
- Some payment methods may return nulls in deeply nested fields
- Basic integration requirements
- Supported webhook events
- Ensure to handle token expiration and refresh accordingly.
- Some API responses may contain null values in certain fields
- Requires setup of OAuth2 credentials in Unzer API.
- Ensure to handle API rate limits
- Ensure that the API keys are securely stored and not exposed.
- Check the API documentation for rate limits.
- OAuth2 with refresh token required for API access
- Rate limits apply to API calls
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 400 Bad Request
- 404 Not Found
- 500 Internal Server Error
- 401 Unauthorized
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid or expired access token'
- '404 Not Found: Resource does not exist'
- '400 Bad Request: Check request format'
- '401 Unauthorized: Recheck OAuth credentials'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify token validity.'
- '429 Too Many Requests: Reduce request frequency.'
- 'COR.800.100.151: Do not retry'
- 'COR.800.100.152: Do not retry'
- 'COR.800.100.156: Do not retry'
- 'COR.800.100.159: Do not retry'
- 'COR.800.100.167: Do not retry'
- 'COR.800.100.171: Do not retry'
- 'COR.800.100.172: Do not retry'
- 'COR.800.100.177: Do not retry'
- 'COR.800.100.153: retry max 10 times'
- 'COR.800.100.157: retry max 10 times'
- 'COR.800.100.162: retry max 10 times'
- 'COR.800.100.168: retry max 10 times'
- 'COR.800.100.190: retry max 10 times'
- 'COR.800.100.500: retry max 10 times'
- 'COR.800.100.600: retry max 10 times'
- 'COR.800.100.650: retry max 10 times'
- 'INVALID_REQUEST: Check your request parameters.'
- 'AUTHENTICATION_FAILED: Verify API credentials.'
- 'INVALID_CREDENTIALS: Check provided credentials'
- 'RESOURCE_NOT_FOUND: Verify the resource ID'
- '401 Unauthorized: Revalidate token and scopes'
- '800.130.100: Transaction with same TransactionId already exists'
- '800.140.100: maximum number of registrations per mobile number exceeded'
- '800.140.101: maximum number of registrations per email address exceeded'
- '800.140.110: maximum number of registrations of mobile per credit card number exceeded'
- '800.140.111: maximum number of registrations of credit card number per mobile exceeded'
- '800.140.112: maximum number of registrations of email per credit card number exceeded'
- '800.140.113: maximum number of registrations of credit card per number email exceeded'
- '800.150.100: Account Holder does not match Customer Name'
- '800.160.100: invalid payment data for configured shopper dispatching type'
- '800.160.110: invalid payment data for configured shopper dispatching type'
- '800.300.101: account or user is blacklisted'
- '800.300.102: country blacklisted'
- '800.300.200: email is blacklisted'
- '800.300.301: ip blacklisted'
- '800.300.302: ip is anonymous proxy'
- '800.300.401: bin blacklisted'
- '800.300.500: transaction temporary blacklisted (too many tries invalid CVV)'
- '800.300.501: transaction temporary blacklisted (too many tries invalid expire date)'
- '800.300.600: Address is blacklisted'
- '800.400.100: AVS Check Failed'
- '800.400.101: Mismatch of AVS street value'
- '800.400.102: Mismatch of AVS street number'
- '800.400.103: Mismatch of AVS PO box value fatal'
- '800.400.104: Mismatch of AVS zip code value fatal'
- '800.400.105: Mismatch of AVS settings (AVSkip, AVIgnore, AVSRejectPolicy) value'
- '800.400.110: AVS Check Failed. Amount has still been reserved on the customer’s
  card and will be released in a few business days. Please ensure the billing address
  is accurate before retrying the transaction.'
- '800.400.150: Implausible address data'
- '800.400.151: Implausible address state data'
- '800.400.152: Address invalid'
- '800.400.153: Address unknown'
- '800.400.154: Address not unique'
- '800.400.155: Address house number missing'
- '800.400.156: Address is for PO Box'
- '800.400.157: Customer name incomplete'
- '800.400.158: Merchant not live at partner system'
- '800.400.159: Invalid reference at partner system'
- '800.400.160: Validation error at partner system'
- '800.400.200: Transaction rejected - address country forbidden by merchant (rm.ws)'
- '800.400.201: Transaction rejected - IP country forbidden by merchant (rm.ip)'
- '800.400.202: Transaction rejected - BIN country forbidden by merchant (rm.bin)'
- '800.400.203: Transaction rejected - address/BIN country pair forbidden by merchant
  (rm.ws-bin)'
- '800.400.204: Transaction rejected - address/IP country pair forbidden by merchant
  (rm.ws-ip)'
- '800.400.205: Transaction rejected - BIN/IP pair combination forbidden by merchant
  (rm.bin-ip)'
- '800.400.206: Transaction rejected - SEPA BIN country forbidden by merchant (rm.sepa-bin)'
- '800.400.207: Transaction rejected - SEPA BIN/IP pair combination forbidden by merchant
  (rm.sepa-bin-ip)'
- '800.400.208: Transaction rejected - SEPA address/BIN country pair forbidden by
  merchant (rm.sepa-ws-bin)'
- '800.400.500: Waiting for confirmation of non-instant payment. Denied for now.'
- '800.500.100: direct debit transaction declined for unknown reason'
- '800.500.110: Unable to process transaction - ran out of terminalIds - please contact
  acquirer'
- '800.600.100: transaction is being already processed'
- '800.700.100: transaction for the same session is currently being processed, please
  try again later.'
- '800.800.800: The payment system is currenty unavailable, please contact support
  in case this happens again.'
- '800.800.801: The payment system is currenty unter maintenance. Please apologize
  for the inconvenience this may cause. If you were not informed of this maintenance
  window in advance, contact your sales representative.'
- '800.900.100: sender authorization failed'
- '800.900.200: unknown channel'
- '800.900.300: user authorization failed'
- '800.900.301: user authorization failed, user has no sufficient rights to process
  transaction'
- '900.100.100: unexpected communication error with connector/acquirer'
- '900.100.200: error response from connector/acquirer'
- '900.100.201: serious error on gateway'
- '900.100.202: invalid transaction flow, the requested function is not applicable
  for the referenced transaction.'
- '900.100.203: error on the internal gateway'
- '900.100.300: no response from connector/acquirer [uncertain result]'
- '900.100.400: timeout at connectors/acquirer side'
- '900.100.500: timeout at connectors/acquirer side (try later)'
- '900.100.600: connector/acquirer currently down'
- '900.100.650: connector/acquirer currently down'
- '900.200.100: Message Sequence Number of Connector out of sync'
- '900.300.600: user session timeout'
- '900.400.100: unexpected communication error with external risk provider'
- '900.400.200: external risk provider system error (unexpected response)'
- '901.000.011: Channel/Merchant not configured for the data provided.'
- '901.800.800: Payment system processing error.'
- '901.999.999: An error occurred. Please contact us for more information.'
- '901.100.152: Transaction declined.'
- '901.000.224: A duplicate processing error occurred. Please try again later.'
- '901.200.000: The transaction is currently pending.'
- '901.900.202: Invalid transaction flow. The requested function is not applicable
  for this transaction.'
- '901.300.300: Invalid reference ID. Please provide a valid reference ID.'
- '901.900.100: Sender authorization failed.'
- '901.200.300: Invalid payment type. Please select a valid payment type.'
- '901.110.100: A duplicate transaction error occurred. Please try again later.'
- '901.200.096: Target due date is either missing or invalid, please provide the date
  in correct format.'
- '901.200.097: Payment is in wrong state, must be in one of {parameter}.'
- '901.200.098: Payment is in wrong state, must be in one of {parameter}.'
- '903.000.011: Channel/Merchant not configured for the data provided.'
- '903.800.800: Payment system processing error.'
- '903.999.999: An error occurred. Please contact us for more information.'
- '903.100.054: Amount {parameter} has to be positive.'
- '903.100.055: amount has invalid format.'
- '903.100.056: Amount is missing.'
- '903.100.152: Transaction declined.'
- '903.000.224: A duplicate processing error occurred. Please try again later.'
- '903.200.000: The transaction is currently pending.'
- '903.900.202: Invalid transaction flow. The requested function is not applicable
  for this transaction.'
- '903.300.300: Invalid reference ID. Please provide a valid reference ID.'
- '903.900.100: Sender authorization failed.'
- '903.200.300: Invalid payment type. Please select a valid payment type.'
- '903.110.100: A duplicate transaction error occurred. Please try again later.'
- '903.200.096: Target due date is either missing or invalid, please provide the date
  in correct format.'
- '903.200.097: Payment is in wrong state, must be in one of {parameter}.'
- '903.200.098: Payment is in wrong state, must be in one of {parameter}.'
- '903.200.073: Country field cannot be left blank.'
- '903.200.074: Invalid country format. Please use supported formats like DE, AT,
  etc.'
- '903.200.075: Invalid customerType format. Please use the supported formats B2B
  or B2C.'
- '903.301.114: Invalid amount range [details: Amount {amount} outside transaction
  limits: [{min}, {max}]]'
- '903.540.093: Invalid nominalInterest value.'
- '903.540.094: nominalInterest has to be positive.'
- '903.540.095: Invalid nominalInterest value.'
- '903.540.096: Currency is missing.'
- '903.540.097: Invalid startDateOfPurchase. Please provide a valid date in the format
  ‘YYYY-MM-DD’.'
- '903.540.098: Invalid endDateOfPurchase. Please provide a valid date in the format
  ‘YYYY-MM-DD’.'
- '903.540.099: Invalid currency code.'
- '904.000.011: Channel/Merchant not configured for the data provided.'
- '904.800.800: Payment system processing error.'
- '904.999.999: An error occurred. Please contact us for more information.'
- '904.100.152: Transaction declined.'
- '904.000.224: A duplicate processing error occurred. Please try again later.'
- '904.200.000: The transaction is currently pending.'
- '904.900.202: Invalid transaction flow. The requested function is not applicable
  for this transaction.'
- '904.300.300: Invalid reference ID. Please provide a valid reference ID.'
- '904.900.100: Sender authorization failed.'
- '904.200.300: Invalid payment type. Please select a valid payment type.'
- '904.110.100: A duplicate transaction error occurred. Please try again later.'
- '904.200.096: Target due date is either missing or invalid, please provide the date
  in correct format.'
- '904.200.097: Payment is in wrong state, must be in one of {parameter}.'
- '904.200.098: Payment is in wrong state, must be in one of {parameter}.'
- '999.999.999: UNDEFINED CONNECTOR/ACQUIRER ERROR'
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Verify the OAuth token'
- 'NOT_FOUND: Ensure the endpoint exists'
- 'INVALID_REQUEST: Check the request parameters and format.'
- 'UNAUTHORIZED: Ensure that the token is valid and not expired.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests.'
- '401 Unauthorized: Check your credentials.'
- '400 Bad Request: Validate your request parameters.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Verify the provided credentials.'
- 'NOT_FOUND: The requested resource does not exist.'
- '429 Too Many Requests: Reduce request rate or check usage limits'
- '500 Internal Server Error: Retry the request after a brief wait'
- '401 Unauthorized: Verify OAuth credentials and token validity'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure your token is valid.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'INVALID_REQUEST: Check the request parameters for correctness.'
- 'UNAUTHORIZED: Verify the authentication credentials.'
- 'NOT_FOUND: The requested resource could not be found.'
- Error handling guide
- '400 Bad Request: Check request parameters and body'
- '401 Unauthorized: Verify API key or token'
- '404 Not Found: Ensure the payment ID is correct'
- '401 Unauthorized: Recheck your API key.'
- '404 Not Found: Ensure the resource exists.'
- '401 Unauthorized: Verify OAuth token validity and scopes.'
- '404 Not Found: Check endpoint URL for correctness.'
- '401 Unauthorized: Verify access token'
- '429 Too Many Requests: Throttle requests to avoid limits'
- '400 Bad Request: Check the request syntax and parameters.'
- '401 Unauthorized: Verify the API key or token.'
- '404 Not Found: The requested resource does not exist.'
- 'UNAUTHORIZED_ACCESS: Ensure proper authentication'
- '401 Unauthorized: Check your API key and secret.'
- '404 Not Found: Verify the endpoint and resource.'
- '400 Bad Request: Check request parameters and body content.'
- '401 Unauthorized: Verify your API credentials and tokens.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '403 Forbidden: Insufficient permissions.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your authentication credentials'
- '401 Unauthorized: Invalid or expired token.'
- 'INVALID_CLIENT: Check client credentials.'
- '401 Unauthorized: Verify access token and scopes.'
- '401 Unauthorized: Verify credentials and token.'
- '429 Too Many Requests: Slow down API requests.'
- '401 Unauthorized: Check your credentials or token expiration.'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '401 Unauthorized: Verify OAuth token validity'
- '404 Not Found: Check endpoint URL or resource ID'
- '401 Unauthorized: Check OAuth token'
- '400 Bad Request: Validate request parameters'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure valid OAuth token.'
- '404 Not Found: Verify the endpoint path.'
- 'INVALID_REQUEST: Check request parameters'
- 'UNAUTHORIZED: Verify API key or token'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Check your API key or OAuth token.'
- '401 Unauthorized: Check your credentials and token expiration.'
- '403 Forbidden: Ensure you have the correct permissions.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Invalid credentials or token expired'
- '500 Internal Server Error: Try again later'
- 'UNAUTHORIZED: Ensure proper authentication is set up.'
- 'NOT_FOUND: Verify the resource endpoint.'
- '400 Bad Request: Check the request format.'
- '401 Unauthorized: Verify API key and token.'
- '404 Not Found: Ensure the endpoint exists.'
- '401 Unauthorized: Check client ID and secret.'
- '400 Bad Request: Verify request parameters.'
- 'UNAUTHORIZED: Ensure the token is valid.'
- '401 Unauthorized: Invalid credentials or token expired.'
- '401 Unauthorized: Ensure valid tokens are used'
- '429 Too Many Requests: Reduce the request rate'
- 'UNAUTHORIZED_ACCESS: Verify token and permissions'
- '400 Bad Request: Check request parameters and body format.'
- '401 Unauthorized: Verify API credentials and token validity.'
- '404 Not Found: Ensure the endpoint is correct.'
- 800.130.100 | Transaction with same TransactionId already exists
- 800.140.100 | maximum number of registrations per mobile number exceeded
- 800.140.101 | maximum number of registrations per email address exceeded
- 800.140.110 | maximum number of registrations of mobile per credit card number exceeded
- 800.140.111 | maximum number of registrations of credit card number per mobile exceeded
- 800.140.112 | maximum number of registrations of email per credit card number exceeded
- 800.140.113 | maximum number of registrations of credit card per number email exceeded
- 800.150.100 | Account Holder does not match Customer Name
- 800.160.100 | invalid payment data for configured shopper dispatching type
- 800.160.110 | invalid payment data for configured shopper dispatching type
- 800.300.101 | account or user is blacklisted
- 800.300.102 | country blacklisted
- 800.300.200 | email is blacklisted
- 800.300.301 | ip blacklisted
- 800.300.302 | ip is anonymous proxy
- 800.300.401 | bin blacklisted
- 800.300.500 | transaction temporary blacklisted (too many tries invalid CVV)
- 800.300.501 | transaction temporary blacklisted (too many tries invalid expire date)
- 800.300.600 | Address is blacklisted
- 800.400.100 | AVS Check Failed
- 800.400.101 | Mismatch of AVS street value
- 800.400.102 | Mismatch of AVS street number
- 800.400.103 | Mismatch of AVS PO box value fatal
- 800.400.104 | Mismatch of AVS zip code value fatal
- 800.400.105 | Mismatch of AVS settings (AVSkip, AVIgnore, AVSRejectPolicy) value
- 800.400.110 | AVS Check Failed. Amount has still been reserved on the customer’s
  card and will be released in a few business days. Please ensure the billing address
  is accurate before retrying the transaction.
- 800.400.150 | Implausible address data
- 800.400.151 | Implausible address state data
- 800.400.152 | Address invalid
- 800.400.153 | Address unknown
- 800.400.154 | Address not unique
- 800.400.155 | Address house number missing
- 800.400.156 | Address is for PO Box
- 800.400.157 | Customer name incomplete
- 800.400.158 | Merchant not live at partner system
- 800.400.159 | Invalid reference at partner system
- 800.400.160 | Validation error at partner system
- 800.400.200 | Transaction rejected - address country forbidden by merchant (rm.ws)
- 800.400.201 | Transaction rejected - IP country forbidden by merchant (rm.ip)
- 800.400.202 | Transaction rejected - BIN country forbidden by merchant (rm.bin)
- 800.400.203 | Transaction rejected - address/BIN country pair forbidden by merchant
  (rm.ws-bin)
- 800.400.204 | Transaction rejected - address/IP country pair forbidden by merchant
  (rm.ws-ip)
- 800.400.205 | Transaction rejected - BIN/IP pair combination forbidden by merchant
  (rm.bin-ip)
- 800.400.206 | Transaction rejected - SEPA BIN country forbidden by merchant (rm.sepa-bin)
- 800.400.207 | Transaction rejected - SEPA BIN/IP pair combination forbidden by merchant
  (rm.sepa-bin-ip)
- 800.400.208 | Transaction rejected - SEPA address/BIN country pair forbidden by
  merchant (rm.sepa-ws-bin)
- 800.400.500 | Waiting for confirmation of non-instant payment. Denied for now.
- 800.500.100 | direct debit transaction declined for unknown reason
- 800.500.110 | Unable to process transaction - ran out of terminalIds - please contact
  acquirer
- 800.600.100 | transaction is being already processed
- 800.700.100 | transaction for the same session is currently being processed, please
  try again later.
- 800.800.800 | The payment system is currenty unavailable, please contact support
  in case this happens again.
- 800.800.801 | The payment system is currenty unter maintenance. Please apologize
  for the inconvenience this may cause. If you were not informed of this maintenance
  window in advance, contact your sales representative.
- 800.900.100 | sender authorization failed
- 800.900.200 | unknown channel
- 800.900.300 | user authorization failed
- 800.900.301 | user authorization failed, user has no sufficient rights to process
  transaction
- 900.100.100 | unexpected communication error with connector/acquirer
- 900.100.200 | error response from connector/acquirer
- 900.100.201 | serious error on gateway
- 900.100.202 | invalid transaction flow, the requested function is not applicable
  for the referenced transaction.
- 900.100.203 | error on the internal gateway
- 900.100.300 | no response from connector/acquirer [uncertain result]
- 900.100.400 | timeout at connectors/acquirer side
- 900.100.500 | timeout at connectors/acquirer side (try later)
- 900.100.600 | connector/acquirer currently down
- 900.100.650 | connector/acquirer currently down
- 900.200.100 | Message Sequence Number of Connector out of sync
- 900.300.600 | user session timeout
- 900.400.100 | unexpected communication error with external risk provider
- 900.400.200 | external risk provider system error (unexpected response)
- 901.000.011 | Channel/Merchant not configured for the data provided.
- 901.800.800 | Payment system processing error.
- 901.999.999 | An error occurred. Please contact us for more information.
- 901.100.152 | Transaction declined.
- 901.000.224 | A duplicate processing error occurred. Please try again later.
- 901.200.000 | The transaction is currently pending.
- 901.900.202 | Invalid transaction flow. The requested function is not applicable
  for this transaction.
- 901.300.300 | Invalid reference ID. Please provide a valid reference ID.
- 901.900.100 | Sender authorization failed.
- 901.200.300 | Invalid payment type. Please select a valid payment type.
- 901.110.100 | A duplicate transaction error occurred. Please try again later.
- 901.200.096 | Target due date is either missing or invalid, please provide the date
  in correct format.
- 901.200.097 | Payment is in wrong state, must be in one of {parameter}.
- 901.200.098 | Payment is in wrong state, must be in one of {parameter}.
- 903.000.011 | Channel/Merchant not configured for the data provided.
- 903.800.800 | Payment system processing error.
- 903.999.999 | An error occurred. Please contact us for more information.
- 903.100.054 | Amount {parameter} has to be positive.
- 903.100.055 | amount has invalid format.
- 903.100.056 | Amount is missing.
- 903.100.152 | Transaction declined.
- 903.000.224 | A duplicate processing error occurred. Please try again later.
- 903.200.000 | The transaction is currently pending.
- 903.900.202 | Invalid transaction flow. The requested function is not applicable
  for this transaction.
- 903.300.300 | Invalid reference ID. Please provide a valid reference ID.
- 903.900.100 | Sender authorization failed.
- 903.200.300 | Invalid payment type. Please select a valid payment type.
- 903.110.100 | A duplicate transaction error occurred. Please try again later.
- 903.200.096 | Target due date is either missing or invalid, please provide the date
  in correct format.
- 903.200.097 | Payment is in wrong state, must be in one of {parameter}.
- 903.200.098 | Payment is in wrong state, must be in one of {parameter}.
- 903.200.073 | Country field cannot be left blank.
- 903.200.074 | Invalid country format. Please use supported formats like DE, AT,
  etc.
- 903.200.075 | Invalid customerType format. Please use the supported formats B2B
  or B2C.
- '903.301.114 | Invalid amount range [details: Amount {amount} outside transaction
  limits: [{min}, {max}]]'
- 903.540.093 | Invalid nominalInterest value.
- 903.540.094 | nominalInterest has to be positive.
- 903.540.095 | Invalid nominalInterest value.
- 903.540.096 | Currency is missing.
- 903.540.097 | Invalid startDateOfPurchase. Please provide a valid date in the format
  ‘YYYY-MM-DD’.
- 903.540.098 | Invalid endDateOfPurchase. Please provide a valid date in the format
  ‘YYYY-MM-DD’.
- 903.540.099 | Invalid currency code.
- 904.000.011 | Channel/Merchant not configured for the data provided.
- 904.800.800 | Payment system processing error.
- 904.999.999 | An error occurred. Please contact us for more information.
- 904.100.152 | Transaction declined.
- 904.000.224 | A duplicate processing error occurred. Please try again later.
- 904.200.000 | The transaction is currently pending.
- 904.900.202 | Invalid transaction flow. The requested function is not applicable
  for this transaction.
- 904.300.300 | Invalid reference ID. Please provide a valid reference ID.
- 904.900.100 | Sender authorization failed.
- 904.200.300 | Invalid payment type. Please select a valid payment type.
- 904.110.100 | A duplicate transaction error occurred. Please try again later.
- 904.200.096 | Target due date is either missing or invalid, please provide the date
  in correct format.
- 904.200.097 | Payment is in wrong state, must be in one of {parameter}.
- 904.200.098 | Payment is in wrong state, must be in one of {parameter}.
- 999.999.999 | UNDEFINED CONNECTOR/ACQUIRER ERROR
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'INVALID_REQUEST: Check the parameters sent in the request.'
- '401 Unauthorized: Verify the access token.'
- 'INVALID_REQUEST: Check request parameters.'
- 'UNAUTHORIZED: Verify API key or token.'
- 'NOT_FOUND: Resource does not exist.'
- '401 Unauthorized: Recheck OAuth token'
- '401 Unauthorized: Check your credentials and token.'
- '404 Not Found: Verify the endpoint or resource.'
- '401 Unauthorized: Check your API key and token.'
- '403 Forbidden: You do not have permission to access this resource.'
- 'PAYMENT_FAILED: Check payment details or try again'
- 'INVALID_TRANSACTION_ID: Verify the transaction ID provided'
- '403 Forbidden: Ensure correct permissions are set for the API key'
- '400 Bad Request: Check the request payload.'
- '401 Unauthorized: Validate the token and scopes.'
- '500 Internal Server Error: Retry the request after a few moments'
- '401 Unauthorized: Validate your credentials and token'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - ClientCredentials
  - AuthorizationCode
  - OAuthToken
  - PaymentType
  - Customer
  - OAuthClient
  - Scope
  - OAuth2
  - Token
  - Authorization
  - TokenService
  - AuthorizationHeader
  - ClientSecret
  - ApiKey
client:
  base_url: https://api.unzer.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.unzer.com/oauth/token
    client_id: '{{ dlt.secrets[''unzer_client_id''] }}'
    client_secret: '{{ dlt.secrets[''unzer_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''unzer_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
