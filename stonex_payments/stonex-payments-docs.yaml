resources:
- name: Investigation
  endpoint:
    path: /api-v1-investigation
    method: GET
- name: Currency Rules
  endpoint:
    path: /api-v1-paymentvalidationrules
    method: GET
- name: Ping
  endpoint:
    path: /api-v1-ping
    method: GET
- name: Quote
  endpoint:
    path: /api-v1-quote
    method: POST
- name: Trade & Payments
  endpoint:
    path: /api-v1-trade
    method: POST
- name: Validation
  endpoint:
    path: /api-v1-validation
    method: POST
- name: Webhook
  endpoint:
    path: /api-v1-webhook
    method: GET
- name: investigation
  endpoint:
    path: /api-v1-investigation
    method: GET
- name: currency_rules
  endpoint:
    path: /api-v1-paymentvalidationrules
    method: GET
- name: ping
  endpoint:
    path: /api-v1-ping
    method: GET
- name: quote
  endpoint:
    path: /api-v1-quote
    method: POST
- name: trade
  endpoint:
    path: /api-v1-trade
    method: POST
- name: validation
  endpoint:
    path: /api-v1-validation
    method: POST
- name: webhook
  endpoint:
    path: /api-v1-webhook
    method: GET
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
- name: trade
  endpoint:
    path: /api/v1/trade
    method: POST
- name: instruct
  endpoint:
    path: /api/v1/trade/instruct
    method: POST
- name: payment_status
  endpoint:
    path: /api/v1/trade/fxid/status
    method: GET
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
- name: trade
  endpoint:
    path: /api/v1/trade
    method: POST
- name: trade_instruct
  endpoint:
    path: /api/v1/trade/instruct
    method: POST
- name: trade_status
  endpoint:
    path: /api/v1/trade/fxid/status
    method: GET
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
    data_selector: quoteId
- name: book_trade
  endpoint:
    path: /api/v1/trade
    method: POST
    data_selector: fxId
- name: validate_payment_instruction
  endpoint:
    path: /api/v1/validation
    method: POST
    data_selector: status
- name: instruct_payment
  endpoint:
    path: /api/v1/trade/instruct
    method: POST
    data_selector: tradeResponse
- name: get_status
  endpoint:
    path: /api/v1/trade/fxid/status
    method: GET
- name: payment_rules
  endpoint:
    path: /reference/get_api-v1-paymentvalidationrules
    method: GET
    data_selector: mappings
    params: {}
- name: trade_instruct
  endpoint:
    path: /reference/post_api-v1-trade-instruct
    method: POST
    data_selector: autoCompletes
    params: {}
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
    data_selector: quoteId
- name: book_trade
  endpoint:
    path: /api/v1/trade
    method: POST
    data_selector: fxId
- name: payment_validation
  endpoint:
    path: /api/v1/validation
    method: POST
    data_selector: status
- name: instruct_payment
  endpoint:
    path: /api/v1/trade/instruct
    method: POST
    data_selector: tradeResponse
- name: get_status
  endpoint:
    path: /api/v1/trade/fxid/status
    method: GET
- name: zero_decimal_currencies
  endpoint:
    path: /zero-decimal-currencies
    method: GET
    data_selector: currencies
- name: payment_validation_rules
  endpoint:
    path: /reference/get_api-v1-paymentvalidationrules
    method: GET
    data_selector: mappings
    params: {}
- name: trade_instruct
  endpoint:
    path: /reference/post_api-v1-trade-instruct
    method: POST
    data_selector: rules
    params: {}
- name: zero_decimal_currencies
  endpoint:
    path: /zero-decimal-currencies
    method: GET
    data_selector: currencies
    params: {}
- name: Create Investigations
  endpoint:
    path: /reference/post_api-v1-investigation
    method: POST
- name: View Investigations
  endpoint:
    path: /reference/get_api-v1-investigation-supportticketid
    method: GET
- name: Update Investigations
  endpoint:
    path: /reference/put_api-v1-investigation-supportticketid
    method: PUT
- name: Close Investigations
  endpoint:
    path: /reference/put_api-v1-investigation-supportticketid-close
    method: PUT
- name: Upload a file
  endpoint:
    path: /reference/post_api-v1-investigation-supportticketid-file
    method: POST
- name: Download a file
  endpoint:
    path: /reference/get_api-v1-investigation-supportticketid-file-fileid
    method: GET
- name: webhook_subscription
  endpoint:
    path: /webhook/subscribe
    method: POST
    data_selector: null
    params: {}
- name: Create Investigations
  endpoint:
    path: /reference/post_api-v1-investigation
    method: POST
- name: View Investigations
  endpoint:
    path: /reference/get_api-v1-investigation-supportticketid
    method: GET
- name: Update Investigations
  endpoint:
    path: /reference/put_api-v1-investigation-supportticketid
    method: PUT
- name: Close Investigations
  endpoint:
    path: /reference/put_api-v1-investigation-supportticketid-close
    method: PUT
- name: Upload a file
  endpoint:
    path: /reference/post_api-v1-investigation-supportticketid-file
    method: POST
- name: Download a file
  endpoint:
    path: /reference/get_api-v1-investigation-supportticketid-file-fileid
    method: GET
- name: create_webhook
  endpoint:
    path: /api-v1/webhook
    method: POST
    data_selector: clientId
    params: {}
- name: PaymentStatusChanged
  endpoint:
    path: /webhook
    method: POST
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: POST
    data_selector: ''
    params: {}
- name: Investigation Webhooks
  endpoint:
    path: /investigation-webhooks
    method: POST
    data_selector: clientId
    params: {}
- name: GPI Statuses
  endpoint:
    path: /reference/get_api-v1-trade-fxid-status
    method: GET
    data_selector: statuses
    params: {}
- name: investigation_webhooks
  endpoint:
    path: /investigation/webhooks
    method: POST
    data_selector: webhookEventType
    params: {}
- name: swift_gpi_statuses
  endpoint:
    path: /reference/get_api-v1-trade-fxid-status
    method: GET
- name: investigation
  endpoint:
    path: /reference/post_api-v1-investigation
    method: POST
- name: view_investigation
  endpoint:
    path: /reference/get_api-v1-investigation-supportticketid
    method: GET
- name: update_investigation
  endpoint:
    path: /reference/put_api-v1-investigation-supportticketid
    method: PUT
- name: close_investigation
  endpoint:
    path: /reference/put_api-v1-investigation-supportticketid-close
    method: PUT
- name: upload_file
  endpoint:
    path: /reference/post_api-v1-investigation-supportticketid-file
    method: POST
- name: download_file
  endpoint:
    path: /reference/get_api-v1-investigation-supportticketid-file-fileid
    method: GET
- name: view_supported_topics
  endpoint:
    path: /reference/get_api-v1-investigation-topics
    method: GET
- name: investigation
  endpoint:
    path: /api/v1/investigation
    method: POST
- name: get_investigation
  endpoint:
    path: /api/v1/investigation-supportticketid
    method: GET
- name: update_investigation
  endpoint:
    path: /api/v1/investigation-supportticketid
    method: PUT
- name: close_investigation
  endpoint:
    path: /api/v1/investigation-supportticketid-close
    method: PUT
- name: upload_file
  endpoint:
    path: /api/v1/investigation-supportticketid-file
    method: POST
- name: download_file
  endpoint:
    path: /api/v1/investigation-supportticketid-file-fileid
    method: GET
- name: view_supported_topic_codes
  endpoint:
    path: /api/v1/investigation-topics
    method: GET
- name: investigation
  endpoint:
    path: /api/v1/investigation
    method: GET
    data_selector: ''
- name: investigation
  endpoint:
    path: /api/v1/investigation
    method: GET
    data_selector: records
- name: create_investigation
  endpoint:
    path: /api/v1/investigation
    method: POST
- name: view_investigation_by_id
  endpoint:
    path: /api/v1/investigation/{supportTicketId}
    method: GET
    data_selector: details
    params: {}
- name: create_investigation
  endpoint:
    path: /api/v1/investigation
    method: POST
    data_selector: supportTicketId
- name: view_investigation_by_id
  endpoint:
    path: /api/v1/investigation/{supportTicketId}
    method: GET
- name: update_investigation
  endpoint:
    path: /api/v1/investigation/{supportTicketId}
    method: PUT
- name: download_file
  endpoint:
    path: /api/v1/investigation/{supportTicketId}/file/{fileId}
    method: GET
- name: update_investigation
  endpoint:
    path: /api/v1/investigation/{supportTicketId}
    method: PUT
    data_selector: supportTicketId
- name: download_file
  endpoint:
    path: /api/v1/investigation/{supportTicketId}/file/{fileId}
    method: GET
- name: close_investigation
  endpoint:
    path: /api/v1/investigation/{supportTicketId}/close
    method: PUT
- name: supported_topic_reason_codes
  endpoint:
    path: /api/v1/investigation/topics
    method: GET
    data_selector: ''
- name: close_investigation
  endpoint:
    path: /api/v1/investigation/{supportTicketId}/close
    method: PUT
- name: supported_topic_reason_codes
  endpoint:
    path: /api/v1/investigation/topics
    method: GET
    data_selector: records
    params:
      ticketType: QUERY
- name: investigation_topics
  endpoint:
    path: /investigation/topics
    method: GET
    data_selector: topics
    params:
      ticketType: INVESTIGATION
- name: investigation_topics
  endpoint:
    path: /api/v1/investigation/topics
    method: GET
    data_selector: topics
    params: {}
- name: investigation_topics
  endpoint:
    path: /api/v{version}/investigation/topics
    method: GET
    params:
      ticketType: INVESTIGATION
- name: topics
  endpoint:
    path: /api/v1/investigation/topics
    method: GET
    data_selector: records
- name: upload_file
  endpoint:
    path: /api/v1/investigation/{supportTicketId}/file
    method: POST
    data_selector: fileId
- name: upload_file
  endpoint:
    path: /api/v1/investigation/{supportTicketId}/file
    method: POST
- name: currency_requirements
  endpoint:
    path: /api/v{version}/paymentvalidationrules
    method: GET
    data_selector: rules
    params:
      buyCurrency: '{CurrencyCode}'
      countryCode: '{CountryCode}'
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
    data_selector: ''
- name: currency_requirements
  endpoint:
    path: /api/v1/paymentvalidationrules
    method: GET
    params:
      buyCurrency: '{CurrencyCode}'
      countryCode: '{CountryCode}'
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
    data_selector: null
    params: {}
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
    data_selector: quoteId
- name: trade
  endpoint:
    path: /api/v1/trade
    method: POST
    data_selector: message
    params: {}
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
    data_selector: quoteId
- name: book_trade
  endpoint:
    path: /api/v1/trade
    method: POST
    data_selector: response
    params: {}
- name: add_delivery_instructions
  endpoint:
    path: /api/v1/trade/instruct
    method: POST
- name: get_status
  endpoint:
    path: /api/v1/trade/{fxid}/status
    method: GET
    data_selector: response
    params: {}
- name: get_status
  endpoint:
    path: /api/v1/trade/{fxid}/status
    method: GET
    data_selector: fxId
- name: cancel_trade
  endpoint:
    path: /api/v1/trade/{fxid}/requestcancel
    method: PUT
    data_selector: Cancellation Acknowledgement
    params:
      reason: Mandatory field required in the required body.
- name: cancel_trade
  endpoint:
    path: /api/v1/trade/{fxid}/requestcancel
    method: PUT
    data_selector: null
    params: {}
- name: Get Payment Disclosure
  endpoint:
    path: /api/v1/trade/{fxid}/doddfrankdisclosure
    method: GET
    data_selector: null
    params: {}
- name: Get Payment Disclosure
  endpoint:
    path: /api/v1/trade/{fxid}/doddfrankdisclosure
    method: GET
- name: validate_delivery_instructions
  endpoint:
    path: /api/v1/validation
    method: POST
- name: validate_delivery_instructions
  endpoint:
    path: /api/v1/validation
    method: POST
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: POST
    data_selector: webhook
    params: {}
- name: Payment Status Webhook
  endpoint:
    path: /reference/post_api-v1-webhook
    method: POST
    data_selector: ''
    params: {}
- name: Investigations
  endpoint:
    path: /api/v1/investigation
    method: POST
    data_selector: webhookEventType
    params: {}
- name: webhook
  endpoint:
    path: /reference/webhook
    method: POST
    data_selector: event
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: GET
    data_selector: webhooks
- name: payment_status_webhook
  endpoint:
    path: /reference/post_api-v1-webhook
    method: POST
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: POST
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: POST
    data_selector: webhookEventType
    params: {}
- name: update_webhook
  endpoint:
    path: /api/v1/webhook
    method: PUT
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: GET
- name: webhook
  endpoint:
    path: /api/v1/webhook/{id}
    method: GET
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: POST
    data_selector: clientId
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/webhook/{id}
    method: DELETE
- name: update_webhook
  endpoint:
    path: /api/v1/webhook
    method: PUT
- name: webhook
  endpoint:
    path: /api/v1/webhook/{id}
    method: GET
- name: send_message_to_swift
  endpoint:
    path: /api/fin/processfinmessage
    method: POST
- name: webhook
  endpoint:
    path: /api/v1/webhook/{id}
    method: DELETE
    data_selector: No content
- name: currency_requirements
  endpoint:
    path: /api/v1/paymentvalidationrules
    method: GET
    params:
      buyCurrency: '{CurrencyCode}'
      countryCode: '{CountryCode}'
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
    data_selector: response
    params: {}
- name: send_message_to_swift
  endpoint:
    path: /fin/processfinmessage
    method: POST
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
    data_selector: quoteId
    params: {}
- name: currency_requirements
  endpoint:
    path: /api/v1/paymentvalidationrules
    method: GET
    params: {}
- name: trade
  endpoint:
    path: /api/v1/trade
    method: POST
    data_selector: response
    params: {}
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: validate_delivery_instructions
  endpoint:
    path: /api/v1/validation
    method: POST
- name: quote
  endpoint:
    path: /api/v1/quote
    method: POST
    data_selector: quoteId
- name: Book a Trade
  endpoint:
    path: /api/v1/trade
    method: POST
    data_selector: message
    params: {}
- name: validate_delivery_instructions
  endpoint:
    path: /api/v1/validation
    method: POST
notes:
- This release includes updates to currency rules and a change to the Ping API authentication
  requirement.
- We’ve been actively enhancing our APIs with a series of behind-the-scenes improvements
  and bug fixes.
- All requests must be made over HTTPS to guarantee encrypted communication.
- Authentication tokens are required to verify requesters and authorize access.
- Ensure to check the expiration of the quoteId before booking the trade.
- Mandatory fields may vary based on the currency.
- The Payment Rules endpoint returns objects with mappings and rules.
- Ensure the quoteId has not expired before booking a trade.
- Different currencies may have varying mandatory fields in the payment instruction.
- Investigations allow clients to programmatically manage investigations related to
  payments.
- Ensure your endpoint is HTTPS and publicly accessible.
- Implement security measures such as validating source IPs or using a secret token
  for verification.
- Investigations allow clients to manage investigations related to payments without
  email or phone contact.
- Real-time updates for investigations can be received via webhooks.
- 'Currently, there is only one event type supported: PaymentStatusChanged'
- You must subscribe to webhooks for StoneX to provide you push notifications regarding
  any investigations on your account.
- 'There are currently 2 event types supported: NewInvestigationCreated, InvestigationUpdated.'
- 'Mismatch in Certificate Names: Some developers have reported seeing different certificate
  names (e.g. GTS Root R4 vs WR1) depending on whether they access the API via browser
  or server. This is expected due to Cloudflare’s dynamic certificate handling and
  does not impact functionality.'
- 'Security: Keep your client_id and client_secret secure. Do not share them publicly.'
- 'Token Expiry: Tokens are valid for a limited period (indicated by expires_in in
  seconds). You may need to request a new token periodically.'
- Keep your client_id and client_secret secure. Do not share them publicly.
- Tokens are valid for a limited period (indicated by expires_in in seconds). You
  may need to request a new token periodically.
- Uses Bearer token for authentication
- Ensure currency codes are in ISO 4217 format (e.g., USD, EUR, KES).
- You can provide only one of buyAmount or sellAmount in the request.
- Ensure the `quoteId` is valid and has not expired.
- You can provide only one of `buyAmount` or `sellAmount` in the request.
- Ensure the quoteId is valid and has not expired.
- You will need to include a valid `fxId` in the request when providing delivery instructions
  for a trade.
- The request is acknowledged immediately but requires manual input by our trading
  team.
- Webhooks push data to your system as soon as an event happens, enabling more efficient
  and responsive integrations.
- Your server should respond with a 2xx HTTP status code to acknowledge successful
  receipt.
- Webhook allows you to receive all updates regarding any payments.
- Webhooks allow for push notifications regarding investigations.
- It's required to have an established VPN connection to StoneX's servers in order
  to use this API.
- 'Quote Validity: Ensure the quoteId is valid and has not expired.'
- 'Trade Status: Use the Get Status endpoint to monitor the status of your trade after
  you''ve booked it.'
- Use the [Get Status](/reference/get_api-v1-trade-fxid-status) endpoint to monitor
  the status of your trade after you've booked it.
errors:
- '400: Error due to missing or incorrect information'
- '401: Unauthorized (invalid credentials)'
- '404: Resource not found'
- '500: Server error'
- '503: Server unavailable or under maintenance'
- '401: Unauthorized (invalid or expired token)'
- '429: Rate limit exceeded'
- '500: Server error (could be due to expired rate quotes, etc.)'
- error codes & added new error codes we return on the Get Quote and Book Trade APIs
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'MANDATORY: Missing required field in the payment instruction.'
- 'INCOMPLETE: Payment instruction validation failed.'
- 'ERR001: {Field Label} is mandatory.'
- 'ERR050: {value} is invalid for {Field Label}'
- 'MANDATORY: Missing required field.'
- 'INCOMPLETE: Payment instruction has missing or incorrect values.'
- 'ERR015: {Field Label} must be {value (comma sep)} characters.'
- 'ERR020: {Field Label} can only contain {value}'
- 'ERR030: {Field Label} must have a valid Swift BIC format'
- 'HTTP 201 Created: Confirms the creation of the new Payment Status webhook connection'
- 'HTTP 201 Created: Confirms the creation of the new webhook connection.'
- '201 Created: A successful response confirms the creation of the new webhook connection.'
- '400: Invalid Topic/reason/Description entered. Please refer to documentation for
  valid topic or reason or description.'
- '400: Trade could not be found'
- '400: The Description field is required.'
- '400: Investigation is already under progress for this FXID'
- '400: Incorrect status of FXID. Please provide "Executed" FXID to create an investigation'
- '400 Bad Input: Invalid Investigation ID. Please check and provide a valid investigation
  ID'
- 'INV00003: Invalid Topic/reason/Description entered. Please refer to documentation
  for valid topic or reason or description.'
- 'INS00001: Trade could not be found'
- The Description field is required.
- 'INV00007: Investigation is already under progress for this FXID'
- 'INV00008: Incorrect status of FXID. Please provide "Executed" FXID to create an
  investigation'
- '400: One or more validation errors occurred.'
- 'INV00006: Invalid File ID. Please check and provide a valid File ID'
- '400 Bad Input: This investigation is already closed. Please check and enter a new
  investigation ID or reopen the investigation to query further'
- 'INV0001: File size is too large. Please upload a file smaller than 5242880 MB.'
- 'INV0002: Invalid File type. Please upload a .doc, .docx, .xls, .xlsx, .jpg, .pdf,
  .png file'
- '400 Bad Input: File size is too large. Please upload a file smaller than 5242880
  MB.'
- '400 Bad Input: Invalid File type. Please upload a .doc, .docx, .xls, .xlsx, .jpg,
  .pdf, .png file'
- 'ERR010: {Field Label} cannot be greater than {value} characters.'
- '400: FxId is already instructed'
- '202 Accepted: Cancellation Acknowledgement, Please give us a few minutes to process
  this trade.'
- '401: Unauthorized. You have not included a valid Access token. It may have expired
  or you entered incorrect credentials.'
- '400: Bad Request. The request contains invalid data. Check the request for invalid
  data before resubmitting the request.'
- '429: Exceeded Rate Limit.'
- '503: Server not available or under maintenance.'
- '201 Created: Confirmation of webhook creation'
- '200: Success'
- '201: Created'
- '202: Accepted'
- '400: Bad Request'
- '401: Unauthorized'
- '408: Request Timeout'
- '429: Exceeded Rate Limit'
- '400: TRD09999: Unable to price'
- '400: TRD00003: Invalid Currency Code'
- '400: TRD00004: Inactive Currency Code'
- '400: TRD00005: Currency not configured'
- '400: TRD00006: Quote request should have one of buy amount or sell amount'
- '400: TRD00010: [Buy/Sell] amount cannot be 0'
- '400: TRD00011: Configuration missing'
- '400: TRD00012: Trade Amount [Ccy] [Amount] is above trading limit [Ccy][Amount]'
- '400: TRD00014: Request should have either buy or sell amount not both'
- '400: TRD00015: The minimum trade amount for [Ccy] is [Amount]'
- '400: TRD19999: Unable to book trade'
- '400: TRD10000: Invalid Quote Id'
- '400: TRD10001: Quote Id expired'
- '400: TRD10005: Price should be within [5%] of base rate'
- '400: TRD10009: Trade already booked with Quote [Quote ID]'
- '400: TRD10010: Same currency trade not allowed'
- '400: TRD90002: Request already under progress'
- '400: TRD90003: Trade has already been cancelled'
- '400: TRD90004: Trade could not be cancelled'
- '400: INS00001: Trade cannot be found'
- '400: INS00002: Same Currency Payments cannot contain `fxId` in request'
- '400: INS00003: Buy and Sell Currency should be same for same currency payments'
- '400: INS00004: Buy and Sell Amounts should be same for same currency payments'
- '400: INS00005: `fxId` is already linked with instructions'
- '400: INS00006: Invalid BIC or IBAN'
- '400: WEB0001: optimistic version error'
- '201 Created: A successful response confirms the creation of the new webhook connection'
- '400 Bad Input: Webhook could not be found'
- '401 Unauthorized: Incorrect user or password!!!'
- '400 Bad request: User Name in the request header is mandatory'
- '400 Bad request: Password in the request header is mandatory'
- '400 Bad request: SWIFT message in the request body is mandatory'
- Beneficiary Account Number cannot be greater than 35 characters.
- IFSC Code must have a valid bank code format
- Account Number cannot be greater than 35 characters.
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.sandbox.payments.stonex.com
  headers:
    Accept: application/json
source_metadata: null
