Based on the provided documentation, here is the YAML configuration for the `tidb_instance` REST API source:

client:
  base_url: "https://your-tidb-instance.com/"
  auth:
    type: "bearer"
    # No additional auth parameters specified

resources:
  - name: "tables"
    endpoint: "/tables"  # Assuming the endpoint is /tables based on the provided functionality
    method: "GET"
    params: {}  # No query parameters specified
    data_selector: "$"  # Select all data from the response

  - name: "databases"
    endpoint: "/databases"  # Assuming the endpoint is /databases based on the provided functionality
    method: "GET"
    params: {}  # No query parameters specified
    data_selector: "$"  # Select all data from the response

  - name: "ssh"
    endpoint: "/ssh"  # Assuming the endpoint is /ssh based on the provided functionality
    method: "GET"
    params: {}  # No query parameters specified
    data_selector: "$"  # Select all data from the response

notes:
  - "This API allows fetching a list of tables and database structures from the TiDB instance."
  - "Authentication is done using a Bearer token."
  - "Ensure to handle any timeout issues and connection errors to the TiDB instance."

errors:
  - 401  # Unauthorized
  - 403  # Forbidden
  - 429  # Too Many Requests

auth_info:
  mentioned_objects:
    - "Bearer token is required for authentication."
    - "Ensure that the token has the necessary permissions to access the API resources."

source_metadata:
  description: "The TiDB instance API provides access to metadata and structures of the TiDB databases, allowing users to retrieve tables and database information."
### Explanation of the YAML Structure:

1. **Client Configuration**: The `base_url` is taken from the provided documentation, and the authentication type is set to "bearer", as specified.

2. **Resources**: Three endpoints are defined based on the functionality described in the documentation: "tables", "databases", and "ssh". The method for each endpoint is set to "GET", and there are no query parameters specified.

3. **Notes**: Important information about the API's functionality and authentication requirements is included.

4. **Errors**: Common HTTP status codes that users may encounter are listed.

5. **Auth Information**: Details regarding authentication requirements are specified.

6. **Source Metadata**: A brief description of what the API provides is included, summarizing its purpose. 

This YAML configuration encapsulates the necessary details for utilizing the TiDB instance API based on the provided documentation.