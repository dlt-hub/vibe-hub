resources:
- name: bridge_chains
  endpoint:
    path: /v1/bridge/chains
    method: GET
- name: bridge_convert
  endpoint:
    path: /v1/bridge/convert
    method: GET
    params:
      from: ''
      fromAmount: ''
      chainId: ''
      to: ''
- name: token_owners
  endpoint:
    path: /v1/tokens/{chainId}/{address}/owners
    method: GET
- name: bridge_swap
  endpoint:
    path: /v1/bridge/swap
    method: POST
- name: chat
  endpoint:
    path: /ai/chat
    method: POST
    data_selector: actions
- name: bridge_chains
  endpoint:
    path: /v1/bridge/chains
    method: GET
- name: bridge_convert
  endpoint:
    path: /v1/bridge/convert
    method: GET
- name: token_owners
  endpoint:
    path: /v1/tokens/{chainId}/{address}/owners
    method: GET
- name: bridge_swap
  endpoint:
    path: /v1/bridge/swap
    method: POST
- name: ConnectButton
  endpoint:
    path: /wallets/connect
    method: POST
    data_selector: data
    params: {}
- name: BuyDirectListingButton
  endpoint:
    path: /marketplace/buyFromListing
    method: POST
- name: ClaimButton
  endpoint:
    path: /drops/claim
    method: POST
- name: ai_chat
  endpoint:
    path: /ai/chat
    method: POST
- name: useWalletBalance
  endpoint:
    path: /wallet/balance
    method: GET
    data_selector: balance
    params: {}
- name: useAuthToken
  endpoint:
    path: /auth/token
    method: GET
    data_selector: token
    params: {}
- name: ConnectButton
  endpoint:
    path: /connect/button
    method: GET
    data_selector: widget
    params: {}
- name: buy_direct_listing
  endpoint:
    path: /marketplace/buyFromListing
    method: POST
- name: claim_tokens
  endpoint:
    path: /drops/claim
    method: POST
- name: NFTProvider
  endpoint:
    path: /nft
    method: GET
    data_selector: nftData
- name: TokenProvider
  endpoint:
    path: /token
    method: GET
    data_selector: tokenData
- name: TransactionButton
  endpoint:
    path: /transaction
    method: POST
    data_selector: transactionData
- name: useConnectedWallets
  endpoint:
    path: /useConnectedWallets
    method: GET
    data_selector: returnType
    params: {}
- name: useWalletDetailsModal
  endpoint:
    path: /useWalletDetailsModal
    method: GET
    data_selector: returnType
    params: {}
- name: useActiveAccount
  endpoint:
    path: /useActiveAccount
    method: GET
    data_selector: returnType
    params: {}
- name: useActiveWallet
  endpoint:
    path: /useActiveWallet
    method: GET
    data_selector: returnType
    params: {}
- name: useActiveWalletChain
  endpoint:
    path: /useActiveWalletChain
    method: GET
    data_selector: returnType
    params: {}
- name: useActiveWalletConnectionStatus
  endpoint:
    path: /useActiveWalletConnectionStatus
    method: GET
    data_selector: returnType
    params: {}
- name: useAdminWallet
  endpoint:
    path: /useAdminWallet
    method: GET
    data_selector: returnType
    params: {}
- name: useAutoConnect
  endpoint:
    path: /useAutoConnect
    method: GET
    data_selector: returnType
    params: {}
- name: useConnect
  endpoint:
    path: /useConnect
    method: GET
    data_selector: returnType
    params: {}
- name: useSendAndConfirmTransaction
  endpoint:
    path: /useSendAndConfirmTransaction
    method: GET
    data_selector: returnType
    params: {}
- name: useEstimateGas
  endpoint:
    path: /useEstimateGas
    method: GET
    data_selector: returnType
    params: {}
- name: useEstimateGasCost
  endpoint:
    path: /useEstimateGasCost
    method: GET
    data_selector: returnType
    params: {}
- name: useWalletBalance
  endpoint:
    path: /wallets/balance
    method: GET
    data_selector: balance
    params: {}
- name: useAuthToken
  endpoint:
    path: /wallets/auth-token
    method: GET
    data_selector: authToken
    params: {}
- name: useLinkProfile
  endpoint:
    path: /wallets/link-profile
    method: POST
    data_selector: linkProfile
    params: {}
- name: useUnlinkProfile
  endpoint:
    path: /wallets/unlink-profile
    method: POST
    data_selector: unlinkProfile
    params: {}
- name: useProfiles
  endpoint:
    path: /wallets/profiles
    method: GET
    data_selector: profiles
    params: {}
- name: useNetworkSwitcherModal
  endpoint:
    path: /wallets/network-switcher
    method: GET
    data_selector: networkSwitcher
    params: {}
- name: useSendBatchTransaction
  endpoint:
    path: /useSendBatchTransaction
    method: POST
- name: useSendTransaction
  endpoint:
    path: /useSendTransaction
    method: POST
- name: useSimulateTransaction
  endpoint:
    path: /useSimulateTransaction
    method: POST
- name: useWaitForReceipt
  endpoint:
    path: /useWaitForReceipt
    method: POST
- name: useSocialProfiles
  endpoint:
    path: /useSocialProfiles
    method: GET
- name: useBlockNumber
  endpoint:
    path: /useBlockNumber
    method: GET
- name: useBridgeRoutes
  endpoint:
    path: /useBridgeRoutes
    method: GET
- name: useBuyHistory
  endpoint:
    path: /useBuyHistory
    method: GET
- name: useBuyWithCryptoHistory
  endpoint:
    path: /useBuyWithCryptoHistory
    method: GET
- name: useBuyWithCryptoQuote
  endpoint:
    path: /useBuyWithCryptoQuote
    method: GET
- name: deployMarketplaceContract
  endpoint:
    path: /deployMarketplaceContract
    method: POST
    data_selector: returnType
- name: useActiveAccount
  endpoint:
    path: /useActiveAccount
    method: GET
    data_selector: returnType
- name: useActiveWallet
  endpoint:
    path: /useActiveWallet
    method: GET
    data_selector: returnType
- name: useActiveWalletChain
  endpoint:
    path: /useActiveWalletChain
    method: GET
    data_selector: returnType
- name: useActiveWalletConnectionStatus
  endpoint:
    path: /useActiveWalletConnectionStatus
    method: GET
    data_selector: returnType
- name: useAdminWallet
  endpoint:
    path: /useAdminWallet
    method: GET
    data_selector: returnType
- name: useAutoConnect
  endpoint:
    path: /useAutoConnect
    method: GET
    data_selector: returnType
- name: useConnect
  endpoint:
    path: /useConnect
    method: GET
    data_selector: returnType
- name: useConnectedWallets
  endpoint:
    path: /useConnectedWallets
    method: GET
    data_selector: returnType
- name: useSendAndConfirmTransaction
  endpoint:
    path: /useSendAndConfirmTransaction
    method: GET
    data_selector: returnType
    params: {}
- name: account
  endpoint:
    path: /account
    method: POST
    data_selector: returnType
    params: {}
- name: deployMarketplaceContract
  endpoint:
    path: /deployMarketplaceContract
    method: POST
    data_selector: result
    params: {}
- name: cancelAuction
  endpoint:
    path: /cancelAuction
    method: POST
- name: cancelAuction
  endpoint:
    path: /cancelAuction
    method: POST
    data_selector: results
    params: {}
- name: acceptOffer
  endpoint:
    path: /acceptOffer
    method: POST
    data_selector: results
    params: {}
- name: approveBuyerForListing
  endpoint:
    path: /approveBuyerForListing
    method: POST
    data_selector: results
    params: {}
- name: approveCurrencyForListing
  endpoint:
    path: /approveCurrencyForListing
    method: POST
    data_selector: results
    params: {}
- name: bidInAuction
  endpoint:
    path: /bidInAuction
    method: POST
    data_selector: results
    params: {}
- name: buyFromListing
  endpoint:
    path: /buyFromListing
    method: POST
    data_selector: results
    params: {}
- name: buyoutAuction
  endpoint:
    path: /buyoutAuction
    method: POST
    data_selector: results
    params: {}
- name: auctionClosedEvent
  endpoint:
    path: /auctionClosedEvent
    method: GET
    data_selector: results
    params: {}
- name: buyerApprovedForListingEvent
  endpoint:
    path: /buyerApprovedForListingEvent
    method: GET
    data_selector: results
    params: {}
- name: currencyApprovedForListingEvent
  endpoint:
    path: /currencyApprovedForListingEvent
    method: POST
    data_selector: returnType
    params: {}
- name: cancelledAuctionEvent
  endpoint:
    path: /cancelledAuctionEvent
    method: POST
    data_selector: returnType
    params: {}
- name: cancelledListingEvent
  endpoint:
    path: /cancelledListingEvent
    method: POST
    data_selector: returnType
    params: {}
- name: cancelledOfferEvent
  endpoint:
    path: /cancelledOfferEvent
    method: POST
    data_selector: returnType
    params: {}
- name: cancelListing
  endpoint:
    path: /cancelListing
    method: POST
    data_selector: returnType
    params: {}
- name: cancelOffer
  endpoint:
    path: /cancelOffer
    method: POST
    data_selector: returnType
    params: {}
- name: collectAuctionPayout
  endpoint:
    path: /collectAuctionPayout
    method: POST
    data_selector: returnType
    params: {}
- name: collectAuctionTokens
  endpoint:
    path: /collectAuctionTokens
    method: POST
    data_selector: returnType
    params: {}
- name: createAuction
  endpoint:
    path: /createAuction
    method: POST
    data_selector: returnType
    params: {}
- name: createListing
  endpoint:
    path: /createListing
    method: POST
    data_selector: returnType
    params: {}
- name: currencyApprovedForListingEvent
  endpoint:
    path: /currencyApprovedForListingEvent
    method: POST
    data_selector: returnType
- name: cancelledAuctionEvent
  endpoint:
    path: /cancelledAuctionEvent
    method: POST
    data_selector: returnType
- name: cancelledListingEvent
  endpoint:
    path: /cancelledListingEvent
    method: POST
    data_selector: returnType
- name: cancelledOfferEvent
  endpoint:
    path: /cancelledOfferEvent
    method: POST
    data_selector: returnType
- name: cancelListing
  endpoint:
    path: /cancelListing
    method: POST
    data_selector: returnType
- name: cancelOffer
  endpoint:
    path: /cancelOffer
    method: POST
    data_selector: returnType
- name: collectAuctionPayout
  endpoint:
    path: /collectAuctionPayout
    method: POST
    data_selector: returnType
- name: collectAuctionTokens
  endpoint:
    path: /collectAuctionTokens
    method: POST
    data_selector: returnType
- name: createAuction
  endpoint:
    path: /createAuction
    method: POST
    data_selector: returnType
- name: createListing
  endpoint:
    path: /createListing
    method: POST
    data_selector: returnType
- name: getAllAuctions
  endpoint:
    path: /marketplace/getAllAuctions
    method: GET
- name: getAllListings
  endpoint:
    path: /marketplace/getAllListings
    method: GET
- name: getAllOffers
  endpoint:
    path: /marketplace/getAllOffers
    method: GET
- name: getAuction
  endpoint:
    path: /marketplace/getAuction
    method: GET
- name: getListing
  endpoint:
    path: /marketplace/getListing
    method: GET
- name: getAllAuctions
  endpoint:
    path: /getAllAuctions
    method: GET
    data_selector: returnType
- name: getAllListings
  endpoint:
    path: /getAllListings
    method: GET
    data_selector: returnType
- name: getAllOffers
  endpoint:
    path: /getAllOffers
    method: GET
    data_selector: returnType
- name: getAuction
  endpoint:
    path: /getAuction
    method: GET
    data_selector: returnType
- name: getListing
  endpoint:
    path: /getListing
    method: GET
    data_selector: returnType
- name: isCurrencyApprovedForListing
  endpoint:
    path: /isCurrencyApprovedForListing
    method: POST
- name: getOffer
  endpoint:
    path: /getOffer
    method: POST
- name: getWinningBid
  endpoint:
    path: /getWinningBid
    method: POST
- name: isBidInAuctionSupported
  endpoint:
    path: /isBidInAuctionSupported
    method: POST
- name: isBuyerApprovedForListing
  endpoint:
    path: /isBuyerApprovedForListing
    method: POST
- name: isBuyFromListingSupported
  endpoint:
    path: /isBuyFromListingSupported
    method: POST
- name: isCancelAuctionSupported
  endpoint:
    path: /isCancelAuctionSupported
    method: POST
- name: isCancelListingSupported
  endpoint:
    path: /isCancelListingSupported
    method: POST
- name: isCreateAuctionSupported
  endpoint:
    path: /isCreateAuctionSupported
    method: POST
- name: isCreateListingSupported
  endpoint:
    path: /isCreateListingSupported
    method: POST
- name: newSaleEvent
  endpoint:
    path: /newSaleEvent
    method: GET
    data_selector: returnType
- name: isCurrencyApprovedForListing
  endpoint:
    path: /isCurrencyApprovedForListing
    method: GET
    data_selector: returnType
    params: {}
- name: getOffer
  endpoint:
    path: /getOffer
    method: GET
    data_selector: returnType
    params: {}
- name: getWinningBid
  endpoint:
    path: /getWinningBid
    method: GET
    data_selector: returnType
    params: {}
- name: isBidInAuctionSupported
  endpoint:
    path: /isBidInAuctionSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isBuyerApprovedForListing
  endpoint:
    path: /isBuyerApprovedForListing
    method: GET
    data_selector: returnType
    params: {}
- name: isBuyFromListingSupported
  endpoint:
    path: /isBuyFromListingSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isCancelAuctionSupported
  endpoint:
    path: /isCancelAuctionSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isCancelListingSupported
  endpoint:
    path: /isCancelListingSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isCreateAuctionSupported
  endpoint:
    path: /isCreateAuctionSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isCreateListingSupported
  endpoint:
    path: /isCreateListingSupported
    method: GET
    data_selector: returnType
    params: {}
- name: airdropERC1155
  endpoint:
    path: /airdropERC1155
    method: POST
- name: airdropERC1155WithSignature
  endpoint:
    path: /airdropERC1155WithSignature
    method: POST
- name: airdropERC20
  endpoint:
    path: /airdropERC20
    method: POST
- name: airdropERC20WithSignature
  endpoint:
    path: /airdropERC20WithSignature
    method: POST
- name: airdropERC721
  endpoint:
    path: /airdropERC721
    method: POST
- name: newSaleEvent
  endpoint:
    path: /newSaleEvent
    method: POST
    data_selector: returnType
    params: {}
- name: newBidEvent
  endpoint:
    path: /newBidEvent
    method: POST
    data_selector: returnType
    params: {}
- name: newOfferEvent
  endpoint:
    path: /newOfferEvent
    method: POST
    data_selector: returnType
    params: {}
- name: newAuctionEvent
  endpoint:
    path: /newAuctionEvent
    method: POST
    data_selector: returnType
    params: {}
- name: newListingEvent
  endpoint:
    path: /newListingEvent
    method: POST
    data_selector: returnType
    params: {}
- name: airdropERC721
  endpoint:
    path: /airdropERC721
    method: POST
    data_selector: returnType
- name: airdropERC20
  endpoint:
    path: /airdropERC20
    method: POST
    data_selector: returnType
- name: airdropERC1155
  endpoint:
    path: /airdropERC1155
    method: POST
    data_selector: returnType
- name: airdropERC20WithSignature
  endpoint:
    path: /airdropERC20WithSignature
    method: POST
    data_selector: returnType
- name: airdropERC1155WithSignature
  endpoint:
    path: /airdropERC1155WithSignature
    method: POST
    data_selector: returnType
- name: airdropERC721WithSignature
  endpoint:
    path: /airdropERC721WithSignature
    method: POST
- name: airdropNativeToken
  endpoint:
    path: /airdropNativeToken
    method: POST
- name: claimERC1155
  endpoint:
    path: /claimERC1155
    method: POST
- name: claimERC20
  endpoint:
    path: /claimERC20
    method: POST
- name: claimERC721
  endpoint:
    path: /claimERC721
    method: POST
- name: fetchProofsERC1155
  endpoint:
    path: /fetchProofsERC1155
    method: GET
- name: fetchProofsERC20
  endpoint:
    path: /fetchProofsERC20
    method: GET
- name: fetchProofsERC721
  endpoint:
    path: /fetchProofsERC721
    method: GET
- name: generateAirdropSignatureERC1155
  endpoint:
    path: /generateAirdropSignatureERC1155
    method: POST
- name: generateAirdropSignatureERC20
  endpoint:
    path: /generateAirdropSignatureERC20
    method: POST
- name: airdropERC721WithSignature
  endpoint:
    path: /airdropERC721WithSignature
    method: POST
- name: airdropNativeToken
  endpoint:
    path: /airdropNativeToken
    method: POST
- name: claimERC1155
  endpoint:
    path: /claimERC1155
    method: POST
- name: claimERC20
  endpoint:
    path: /claimERC20
    method: POST
- name: claimERC721
  endpoint:
    path: /claimERC721
    method: POST
- name: fetchProofsERC1155
  endpoint:
    path: /fetchProofsERC1155
    method: GET
- name: fetchProofsERC20
  endpoint:
    path: /fetchProofsERC20
    method: GET
- name: fetchProofsERC721
  endpoint:
    path: /fetchProofsERC721
    method: GET
- name: generateAirdropSignatureERC1155
  endpoint:
    path: /generateAirdropSignatureERC1155
    method: POST
- name: generateAirdropSignatureERC20
  endpoint:
    path: /generateAirdropSignatureERC20
    method: POST
- name: contractURI
  endpoint:
    path: /contractURI
    method: GET
    data_selector: returnType
- name: AIRDROP.generateAirdropSignatureERC721
  endpoint:
    path: /AIRDROP/generateAirdropSignatureERC721
    method: POST
    data_selector: returnType
- name: AIRDROP.generateMerkleTreeInfoERC1155
  endpoint:
    path: /AIRDROP/generateMerkleTreeInfoERC1155
    method: POST
    data_selector: returnType
- name: AIRDROP.generateMerkleTreeInfoERC20
  endpoint:
    path: /AIRDROP/generateMerkleTreeInfoERC20
    method: POST
    data_selector: returnType
- name: AIRDROP.generateMerkleTreeInfoERC721
  endpoint:
    path: /AIRDROP/generateMerkleTreeInfoERC721
    method: POST
    data_selector: returnType
- name: AIRDROP.isClaimed
  endpoint:
    path: /AIRDROP/isClaimed
    method: POST
    data_selector: returnType
- name: AIRDROP.saveSnapshot
  endpoint:
    path: /AIRDROP/saveSnapshot
    method: POST
    data_selector: returnType
- name: AIRDROP.setMerkleRoot
  endpoint:
    path: /AIRDROP/setMerkleRoot
    method: POST
    data_selector: returnType
- name: AIRDROP.tokenConditionId
  endpoint:
    path: /AIRDROP/tokenConditionId
    method: POST
    data_selector: returnType
- name: AIRDROP.tokenMerkleRoot
  endpoint:
    path: /AIRDROP/tokenMerkleRoot
    method: POST
    data_selector: returnType
- name: COMMON.contractURI
  endpoint:
    path: /COMMON/contractURI
    method: POST
    data_selector: returnType
- name: getContractMetadata
  endpoint:
    path: /getContractMetadata
    method: GET
- name: getDefaultRoyaltyInfo
  endpoint:
    path: /getDefaultRoyaltyInfo
    method: GET
- name: getPlatformFeeInfo
  endpoint:
    path: /getPlatformFeeInfo
    method: GET
- name: getRoyaltyInfoForToken
  endpoint:
    path: /getRoyaltyInfoForToken
    method: GET
- name: isGetContractMetadataSupported
  endpoint:
    path: /isGetContractMetadataSupported
    method: GET
- name: isGetDefaultRoyaltyInfoSupported
  endpoint:
    path: /isGetDefaultRoyaltyInfoSupported
    method: GET
- name: isGetPlatformFeeInfoSupported
  endpoint:
    path: /isGetPlatformFeeInfoSupported
    method: GET
- name: isGetRoyaltyInfoForTokenSupported
  endpoint:
    path: /isGetRoyaltyInfoForTokenSupported
    method: GET
- name: isMulticallSupported
  endpoint:
    path: /isMulticallSupported
    method: GET
- name: isNameSupported
  endpoint:
    path: /isNameSupported
    method: GET
- name: getContractMetadata
  endpoint:
    path: /getContractMetadata
    method: GET
    data_selector: returnType
- name: getDefaultRoyaltyInfo
  endpoint:
    path: /getDefaultRoyaltyInfo
    method: GET
    data_selector: returnType
- name: getPlatformFeeInfo
  endpoint:
    path: /getPlatformFeeInfo
    method: GET
    data_selector: returnType
- name: getRoyaltyInfoForToken
  endpoint:
    path: /getRoyaltyInfoForToken
    method: GET
    data_selector: returnType
- name: isGetContractMetadataSupported
  endpoint:
    path: /isGetContractMetadataSupported
    method: GET
    data_selector: returnType
- name: isGetDefaultRoyaltyInfoSupported
  endpoint:
    path: /isGetDefaultRoyaltyInfoSupported
    method: GET
    data_selector: returnType
- name: isGetPlatformFeeInfoSupported
  endpoint:
    path: /isGetPlatformFeeInfoSupported
    method: GET
    data_selector: returnType
- name: isGetRoyaltyInfoForTokenSupported
  endpoint:
    path: /isGetRoyaltyInfoForTokenSupported
    method: GET
    data_selector: returnType
- name: isMulticallSupported
  endpoint:
    path: /isMulticallSupported
    method: GET
    data_selector: returnType
- name: isNameSupported
  endpoint:
    path: /isNameSupported
    method: GET
    data_selector: returnType
- name: approvalForAllEvent
  endpoint:
    path: /ERC1155/approvalForAllEvent
    method: GET
    data_selector: returnType
- name: balanceOf
  endpoint:
    path: /ERC1155/balanceOf
    method: GET
    data_selector: returnType
- name: multicall
  endpoint:
    path: /multicall
    method: POST
    data_selector: results
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: data
- name: setRoyaltyInfoForToken
  endpoint:
    path: /setRoyaltyInfoForToken
    method: POST
- name: setPrimarySaleRecipient
  endpoint:
    path: /setPrimarySaleRecipient
    method: POST
- name: setPlatformFeeInfo
  endpoint:
    path: /setPlatformFeeInfo
    method: POST
- name: setOwner
  endpoint:
    path: /setOwner
    method: POST
- name: setDefaultRoyaltyInfo
  endpoint:
    path: /setDefaultRoyaltyInfo
    method: POST
- name: setContractURI
  endpoint:
    path: /setContractURI
    method: POST
- name: setContractMetadata
  endpoint:
    path: /setContractMetadata
    method: POST
- name: primarySaleRecipient
  endpoint:
    path: /primarySaleRecipient
    method: GET
- name: ownerUpdatedEvent
  endpoint:
    path: /ownerUpdatedEvent
    method: GET
- name: owner
  endpoint:
    path: /owner
    method: GET
- name: approvalForAllEvent
  endpoint:
    path: /ERC1155/approvalForAllEvent
    method: GET
    data_selector: returnType
    params: {}
- name: balanceOf
  endpoint:
    path: /ERC1155/balanceOf
    method: GET
    data_selector: returnType
    params: {}
- name: generateMintSignature
  endpoint:
    path: /ERC1155/generateMintSignature
    method: POST
    data_selector: returnType
- name: getActiveClaimCondition
  endpoint:
    path: /ERC1155/getActiveClaimCondition
    method: GET
    data_selector: returnType
- name: getClaimConditionById
  endpoint:
    path: /ERC1155/getClaimConditionById
    method: GET
    data_selector: returnType
- name: getClaimConditions
  endpoint:
    path: /ERC1155/getClaimConditions
    method: GET
    data_selector: returnType
- name: getNFT
  endpoint:
    path: /ERC1155/getNFT
    method: GET
    data_selector: returnType
- name: getNFTs
  endpoint:
    path: /ERC1155/getNFTs
    method: GET
    data_selector: returnType
- name: getOwnedNFTs
  endpoint:
    path: /ERC1155/getOwnedNFTs
    method: GET
    data_selector: returnType
- name: getOwnedTokenIds
  endpoint:
    path: /ERC1155/getOwnedTokenIds
    method: GET
    data_selector: returnType
- name: isApprovedForAll
  endpoint:
    path: /ERC1155/isApprovedForAll
    method: GET
    data_selector: returnType
- name: isBurnSupported
  endpoint:
    path: /ERC1155/isBurnSupported
    method: GET
    data_selector: returnType
- name: balanceOfBatch
  endpoint:
    path: /ERC1155/balanceOfBatch
    method: POST
    data_selector: balance
- name: burn
  endpoint:
    path: /ERC1155/burn
    method: POST
    data_selector: burnResult
- name: burnBatch
  endpoint:
    path: /ERC1155/burnBatch
    method: POST
    data_selector: burnBatchResult
- name: canClaim
  endpoint:
    path: /ERC1155/canClaim
    method: POST
    data_selector: claimStatus
- name: claimCondition
  endpoint:
    path: /ERC1155/claimCondition
    method: POST
    data_selector: claimConditionResult
- name: claimTo
  endpoint:
    path: /ERC1155/claimTo
    method: POST
    data_selector: claimToResult
- name: createPack
  endpoint:
    path: /ERC1155/createPack
    method: POST
    data_selector: packResult
- name: encodeSafeTransferFrom
  endpoint:
    path: /ERC1155/encodeSafeTransferFrom
    method: POST
    data_selector: encodedTransfer
- name: freezeMetadata
  endpoint:
    path: /ERC1155/freezeMetadata
    method: POST
    data_selector: freezeResult
- name: isMintToSupported
  endpoint:
    path: /erc1155/isMintToSupported
    method: GET
- name: isMintAdditionalSupplyToSupported
  endpoint:
    path: /erc1155/isMintAdditionalSupplyToSupported
    method: GET
- name: isLazyMintSupported
  endpoint:
    path: /erc1155/isLazyMintSupported
    method: GET
- name: isGetNFTSupported
  endpoint:
    path: /erc1155/isGetNFTSupported
    method: GET
- name: isGetNFTsSupported
  endpoint:
    path: /erc1155/isGetNFTsSupported
    method: GET
- name: isGetClaimConditionsSupported
  endpoint:
    path: /erc1155/isGetClaimConditionsSupported
    method: GET
- name: isGetClaimConditionByIdSupported
  endpoint:
    path: /erc1155/isGetClaimConditionByIdSupported
    method: GET
- name: isGetActiveClaimConditionSupported
  endpoint:
    path: /erc1155/isGetActiveClaimConditionSupported
    method: GET
- name: isERC1155
  endpoint:
    path: /erc1155/isERC1155
    method: GET
- name: mintAdditionalSupplyToBatch
  endpoint:
    path: /mintAdditionalSupplyToBatch
    method: POST
- name: getActiveClaimCondition
  endpoint:
    path: /getActiveClaimCondition
    method: GET
    data_selector: returnType
- name: getClaimConditionById
  endpoint:
    path: /getClaimConditionById
    method: GET
    data_selector: returnType
- name: getClaimConditions
  endpoint:
    path: /getClaimConditions
    method: GET
    data_selector: returnType
- name: getNFT
  endpoint:
    path: /getNFT
    method: GET
    data_selector: returnType
- name: getNFTs
  endpoint:
    path: /getNFTs
    method: GET
    data_selector: returnType
- name: getOwnedNFTs
  endpoint:
    path: /getOwnedNFTs
    method: GET
    data_selector: returnType
- name: getOwnedTokenIds
  endpoint:
    path: /getOwnedTokenIds
    method: GET
    data_selector: returnType
- name: isApprovedForAll
  endpoint:
    path: /isApprovedForAll
    method: GET
    data_selector: returnType
- name: isBurnSupported
  endpoint:
    path: /isBurnSupported
    method: GET
    data_selector: returnType
- name: resetClaimEligibility
  endpoint:
    path: /ERC1155/resetClaimEligibility
    method: POST
    data_selector: response
    params: {}
- name: mintTo
  endpoint:
    path: /ERC1155/mintTo
    method: POST
    data_selector: response
    params: {}
- name: mintToBatch
  endpoint:
    path: /ERC1155/mintToBatch
    method: POST
    data_selector: response
    params: {}
- name: mintWithSignature
  endpoint:
    path: /ERC1155/mintWithSignature
    method: POST
    data_selector: response
    params: {}
- name: nextTokenId
  endpoint:
    path: /ERC1155/nextTokenId
    method: GET
    data_selector: response
    params: {}
- name: nextTokenIdToMint
  endpoint:
    path: /ERC1155/nextTokenIdToMint
    method: GET
    data_selector: response
    params: {}
- name: openPack
  endpoint:
    path: /ERC1155/openPack
    method: POST
    data_selector: response
    params: {}
- name: packCreatedEvent
  endpoint:
    path: /ERC1155/packCreatedEvent
    method: POST
    data_selector: response
    params: {}
- name: packOpenedEvent
  endpoint:
    path: /ERC1155/packOpenedEvent
    method: POST
    data_selector: response
    params: {}
- name: packUpdatedEvent
  endpoint:
    path: /ERC1155/packUpdatedEvent
    method: POST
    data_selector: response
    params: {}
- name: isMintToSupported
  endpoint:
    path: /erc1155/isMintToSupported
    method: GET
    data_selector: returnType
- name: isMintAdditionalSupplyToSupported
  endpoint:
    path: /erc1155/isMintAdditionalSupplyToSupported
    method: GET
    data_selector: returnType
- name: isLazyMintSupported
  endpoint:
    path: /erc1155/isLazyMintSupported
    method: GET
    data_selector: returnType
- name: isGetNFTsSupported
  endpoint:
    path: /erc1155/isGetNFTsSupported
    method: GET
    data_selector: returnType
- name: isGetNFTSupported
  endpoint:
    path: /erc1155/isGetNFTSupported
    method: GET
    data_selector: returnType
- name: isGetClaimConditionsSupported
  endpoint:
    path: /erc1155/isGetClaimConditionsSupported
    method: GET
    data_selector: returnType
- name: isGetClaimConditionByIdSupported
  endpoint:
    path: /erc1155/isGetClaimConditionByIdSupported
    method: GET
    data_selector: returnType
- name: isGetActiveClaimConditionSupported
  endpoint:
    path: /erc1155/isGetActiveClaimConditionSupported
    method: GET
    data_selector: returnType
- name: isERC1155
  endpoint:
    path: /erc1155/isERC1155
    method: GET
    data_selector: returnType
- name: isClaimToSupported
  endpoint:
    path: /erc1155/isClaimToSupported
    method: GET
    data_selector: returnType
- name: mintAdditionalSupplyToBatch
  endpoint:
    path: /mintAdditionalSupplyToBatch
    method: POST
    data_selector: returnType
- name: transferBatchEvent
  endpoint:
    path: /ERC1155/transferBatchEvent
    method: POST
    data_selector: returnType
- name: safeBatchTransferFrom
  endpoint:
    path: /ERC1155/safeBatchTransferFrom
    method: POST
    data_selector: returnType
- name: safeTransferFrom
  endpoint:
    path: /ERC1155/safeTransferFrom
    method: POST
    data_selector: returnType
- name: setApprovalForAll
  endpoint:
    path: /ERC1155/setApprovalForAll
    method: POST
    data_selector: returnType
- name: setClaimConditions
  endpoint:
    path: /ERC1155/setClaimConditions
    method: POST
    data_selector: returnType
- name: setTokenURI
  endpoint:
    path: /ERC1155/setTokenURI
    method: POST
    data_selector: returnType
- name: tokensClaimedEvent
  endpoint:
    path: /ERC1155/tokensClaimedEvent
    method: POST
    data_selector: returnType
- name: tokensLazyMintedEvent
  endpoint:
    path: /ERC1155/tokensLazyMintedEvent
    method: POST
    data_selector: returnType
- name: tokensMintedWithSignatureEvent
  endpoint:
    path: /ERC1155/tokensMintedWithSignatureEvent
    method: POST
    data_selector: returnType
- name: totalSupply
  endpoint:
    path: /ERC1155/totalSupply
    method: GET
    data_selector: returnType
- name: balanceOf
  endpoint:
    path: /erc721/balanceOf
    method: GET
    data_selector: address
- name: approve
  endpoint:
    path: /erc721/approve
    method: POST
    data_selector: transaction
- name: approvalEvent
  endpoint:
    path: /erc721/approvalEvent
    method: POST
    data_selector: event
- name: approvalForAllEvent
  endpoint:
    path: /erc721/approvalForAllEvent
    method: POST
    data_selector: event
- name: isGetClaimConditionsSupported
  endpoint:
    path: /erc721/isGetClaimConditionsSupported
    method: GET
    data_selector: supported
- name: isUpdateMetadataSupported
  endpoint:
    path: /erc721/isUpdateMetadataSupported
    method: GET
    data_selector: supported
- name: resetClaimEligibility
  endpoint:
    path: /resetClaimEligibility
    method: POST
    data_selector: response
    params: {}
- name: mintTo
  endpoint:
    path: /mintTo
    method: POST
    data_selector: response
    params: {}
- name: mintToBatch
  endpoint:
    path: /mintToBatch
    method: POST
    data_selector: response
    params: {}
- name: mintWithSignature
  endpoint:
    path: /mintWithSignature
    method: POST
    data_selector: response
    params: {}
- name: nextTokenId
  endpoint:
    path: /nextTokenId
    method: GET
    data_selector: response
    params: {}
- name: nextTokenIdToMint
  endpoint:
    path: /nextTokenIdToMint
    method: GET
    data_selector: response
    params: {}
- name: openPack
  endpoint:
    path: /openPack
    method: POST
    data_selector: response
    params: {}
- name: packCreatedEvent
  endpoint:
    path: /packCreatedEvent
    method: POST
    data_selector: response
    params: {}
- name: packOpenedEvent
  endpoint:
    path: /packOpenedEvent
    method: POST
    data_selector: response
    params: {}
- name: packUpdatedEvent
  endpoint:
    path: /packUpdatedEvent
    method: POST
    data_selector: response
    params: {}
- name: getAllOwners
  endpoint:
    path: /ERC721/getAllOwners
    method: GET
    data_selector: owners
    params: {}
- name: transferBatchEvent
  endpoint:
    path: /ERC1155/transferBatchEvent
    method: POST
    data_selector: returnType
- name: safeBatchTransferFrom
  endpoint:
    path: /ERC1155/safeBatchTransferFrom
    method: POST
    data_selector: returnType
- name: safeTransferFrom
  endpoint:
    path: /ERC1155/safeTransferFrom
    method: POST
    data_selector: returnType
- name: setApprovalForAll
  endpoint:
    path: /ERC1155/setApprovalForAll
    method: POST
    data_selector: returnType
- name: setClaimConditions
  endpoint:
    path: /ERC1155/setClaimConditions
    method: POST
    data_selector: returnType
- name: setTokenURI
  endpoint:
    path: /ERC1155/setTokenURI
    method: POST
    data_selector: returnType
- name: tokensClaimedEvent
  endpoint:
    path: /ERC1155/tokensClaimedEvent
    method: POST
    data_selector: returnType
- name: tokensLazyMintedEvent
  endpoint:
    path: /ERC1155/tokensLazyMintedEvent
    method: POST
    data_selector: returnType
- name: tokensMintedWithSignatureEvent
  endpoint:
    path: /ERC1155/tokensMintedWithSignatureEvent
    method: POST
    data_selector: returnType
- name: totalSupply
  endpoint:
    path: /ERC1155/totalSupply
    method: GET
    data_selector: returnType
- name: getTotalUnclaimedSupply
  endpoint:
    path: /getTotalUnclaimedSupply
    method: GET
    data_selector: returnType
- name: getTotalClaimedSupply
  endpoint:
    path: /getTotalClaimedSupply
    method: GET
    data_selector: returnType
- name: getOwnedTokenIds
  endpoint:
    path: /getOwnedTokenIds
    method: GET
    data_selector: returnType
- name: getOwnedNFTs
  endpoint:
    path: /getOwnedNFTs
    method: GET
    data_selector: returnType
- name: getNFTs
  endpoint:
    path: /getNFTs
    method: GET
    data_selector: returnType
- name: getNFT
  endpoint:
    path: /getNFT
    method: GET
    data_selector: returnType
- name: getClaimConditions
  endpoint:
    path: /getClaimConditions
    method: GET
    data_selector: returnType
- name: getClaimConditionById
  endpoint:
    path: /getClaimConditionById
    method: GET
    data_selector: returnType
- name: getBatchesToReveal
  endpoint:
    path: /getBatchesToReveal
    method: GET
    data_selector: returnType
- name: getApproved
  endpoint:
    path: /getApproved
    method: GET
    data_selector: returnType
- name: isGetClaimConditionByIdSupported
  endpoint:
    path: /ERC721/isGetClaimConditionByIdSupported
    method: GET
    data_selector: returnType
- name: balanceOf
  endpoint:
    path: /erc721/balanceOf
    method: GET
    data_selector: address
- name: approve
  endpoint:
    path: /erc721/approve
    method: POST
    data_selector: transaction
- name: approvalEvent
  endpoint:
    path: /erc721/approvalEvent
    method: POST
    data_selector: event
- name: approvalForAllEvent
  endpoint:
    path: /erc721/approvalForAllEvent
    method: POST
    data_selector: event
- name: isUpdateMetadataSupported
  endpoint:
    path: /erc721/isUpdateMetadataSupported
    method: GET
    data_selector: supported
- name: isGetClaimConditionsSupported
  endpoint:
    path: /erc721/isGetClaimConditionsSupported
    method: GET
    data_selector: supported
- name: getClaimConditions
  endpoint:
    path: /getClaimConditions
    method: GET
- name: getNFTs
  endpoint:
    path: /getNFTs
    method: GET
- name: tokenURI
  endpoint:
    path: /tokenURI
    method: GET
- name: lazyMint
  endpoint:
    path: /lazyMint
    method: POST
- name: mintTo
  endpoint:
    path: /mintTo
    method: POST
- name: nextTokenIdToMint
  endpoint:
    path: /nextTokenIdToMint
    method: GET
- name: resetClaimEligibility
  endpoint:
    path: /resetClaimEligibility
    method: POST
- name: reveal
  endpoint:
    path: /reveal
    method: POST
- name: setClaimConditions
  endpoint:
    path: /setClaimConditions
    method: POST
- name: setSharedMetadata
  endpoint:
    path: /setSharedMetadata
    method: POST
- name: getAllOwners
  endpoint:
    path: /erc721/getAllOwners
    method: GET
- name: burn
  endpoint:
    path: /erc721/burn
    method: POST
- name: canClaim
  endpoint:
    path: /erc721/canClaim
    method: GET
- name: claimConditionsUpdatedEvent
  endpoint:
    path: /erc721/claimConditionsUpdatedEvent
    method: GET
- name: claimTo
  endpoint:
    path: /erc721/claimTo
    method: POST
- name: claimToBatch
  endpoint:
    path: /erc721/claimToBatch
    method: POST
- name: createDelayedRevealBatch
  endpoint:
    path: /erc721/createDelayedRevealBatch
    method: POST
- name: generateMintSignature
  endpoint:
    path: /erc721/generateMintSignature
    method: POST
- name: getActiveClaimCondition
  endpoint:
    path: /erc721/getActiveClaimCondition
    method: GET
- name: getActiveClaimConditionId
  endpoint:
    path: /erc721/getActiveClaimConditionId
    method: GET
- name: ownerOf
  endpoint:
    path: /ownerOf
    method: GET
    data_selector: address
    params: {}
- name: nextTokenIdToMint
  endpoint:
    path: /nextTokenIdToMint
    method: GET
    data_selector: address
    params: {}
- name: getTotalUnclaimedSupply
  endpoint:
    path: /getTotalUnclaimedSupply
    method: GET
    data_selector: returnType
- name: getTotalClaimedSupply
  endpoint:
    path: /getTotalClaimedSupply
    method: GET
    data_selector: returnType
- name: getOwnedTokenIds
  endpoint:
    path: /getOwnedTokenIds
    method: GET
    data_selector: returnType
- name: getOwnedNFTs
  endpoint:
    path: /getOwnedNFTs
    method: GET
    data_selector: returnType
- name: getNFTs
  endpoint:
    path: /getNFTs
    method: GET
    data_selector: returnType
- name: getNFT
  endpoint:
    path: /getNFT
    method: GET
    data_selector: returnType
- name: getClaimConditions
  endpoint:
    path: /getClaimConditions
    method: GET
    data_selector: returnType
- name: getClaimConditionById
  endpoint:
    path: /getClaimConditionById
    method: GET
    data_selector: returnType
- name: getBatchesToReveal
  endpoint:
    path: /getBatchesToReveal
    method: GET
    data_selector: returnType
- name: getApproved
  endpoint:
    path: /getApproved
    method: GET
    data_selector: returnType
- name: tokenOfOwnerByIndex
  endpoint:
    path: /ERC721/tokenOfOwnerByIndex
    method: GET
    data_selector: returnType
- name: resetClaimEligibility
  endpoint:
    path: /ERC721/resetClaimEligibility
    method: POST
    data_selector: returnType
- name: reveal
  endpoint:
    path: /ERC721/reveal
    method: POST
    data_selector: returnType
- name: setApprovalForAll
  endpoint:
    path: /ERC721/setApprovalForAll
    method: POST
    data_selector: returnType
- name: setClaimConditions
  endpoint:
    path: /ERC721/setClaimConditions
    method: POST
    data_selector: returnType
- name: setSharedMetadata
  endpoint:
    path: /ERC721/setSharedMetadata
    method: POST
    data_selector: returnType
- name: setTokenURI
  endpoint:
    path: /ERC721/setTokenURI
    method: POST
    data_selector: returnType
- name: sharedMetadata
  endpoint:
    path: /ERC721/sharedMetadata
    method: GET
    data_selector: returnType
- name: startTokenId
  endpoint:
    path: /ERC721/startTokenId
    method: GET
    data_selector: returnType
- name: isGetClaimConditionsSupported
  endpoint:
    path: /ERC721/isGetClaimConditionsSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isGetNFTsSupported
  endpoint:
    path: /ERC721/isGetNFTsSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isGetNFTSupported
  endpoint:
    path: /ERC721/isGetNFTSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isLazyMintSupported
  endpoint:
    path: /ERC721/isLazyMintSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isMintToSupported
  endpoint:
    path: /ERC721/isMintToSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isNextTokenIdToMintSupported
  endpoint:
    path: /ERC721/isNextTokenIdToMintSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isResetClaimEligibilitySupported
  endpoint:
    path: /ERC721/isResetClaimEligibilitySupported
    method: GET
    data_selector: returnType
    params: {}
- name: isRevealSupported
  endpoint:
    path: /ERC721/isRevealSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isSetClaimConditionsSupported
  endpoint:
    path: /ERC721/isSetClaimConditionsSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isSetSharedMetadataSupported
  endpoint:
    path: /ERC721/isSetSharedMetadataSupported
    method: GET
    data_selector: returnType
    params: {}
- name: tokensClaimedEvent
  endpoint:
    path: /tokensClaimedEvent
    method: POST
    data_selector: returnType
- name: tokensLazyMintedEvent
  endpoint:
    path: /tokensLazyMintedEvent
    method: POST
    data_selector: returnType
- name: tokensMintedWithSignatureEvent
  endpoint:
    path: /tokensMintedWithSignatureEvent
    method: POST
    data_selector: returnType
- name: tokensOfOwner
  endpoint:
    path: /tokensOfOwner
    method: POST
    data_selector: returnType
- name: tokenURI
  endpoint:
    path: /tokenURI
    method: POST
    data_selector: returnType
- name: tokenURIRevealedEvent
  endpoint:
    path: /tokenURIRevealedEvent
    method: POST
    data_selector: returnType
- name: totalSupply
  endpoint:
    path: /totalSupply
    method: POST
    data_selector: returnType
- name: transferEvent
  endpoint:
    path: /transferEvent
    method: POST
    data_selector: returnType
- name: transferFrom
  endpoint:
    path: /transferFrom
    method: POST
    data_selector: returnType
- name: updateMetadata
  endpoint:
    path: /updateMetadata
    method: POST
    data_selector: returnType
- name: allowance
  endpoint:
    path: /ERC20/allowance
    method: GET
    data_selector: returnType
- name: approvalEvent
  endpoint:
    path: /ERC20/approvalEvent
    method: GET
    data_selector: returnType
- name: approve
  endpoint:
    path: /ERC20/approve
    method: POST
    data_selector: returnType
- name: balanceOf
  endpoint:
    path: /ERC20/balanceOf
    method: GET
    data_selector: returnType
- name: burn
  endpoint:
    path: /ERC20/burn
    method: POST
    data_selector: returnType
- name: burnFrom
  endpoint:
    path: /ERC20/burnFrom
    method: POST
    data_selector: returnType
- name: canClaim
  endpoint:
    path: /ERC20/canClaim
    method: GET
    data_selector: returnType
- name: ownerOf
  endpoint:
    path: /ownerOf
    method: GET
    data_selector: address
- name: nextTokenIdToMint
  endpoint:
    path: /nextTokenIdToMint
    method: GET
    data_selector: address
- name: mintTo
  endpoint:
    path: /mintTo
    method: POST
    data_selector: address
- name: mintWithSignature
  endpoint:
    path: /mintWithSignature
    method: POST
    data_selector: address
- name: lazyMint
  endpoint:
    path: /lazyMint
    method: POST
    data_selector: address
- name: isUpdateTokenURISupported
  endpoint:
    path: /isUpdateTokenURISupported
    method: GET
    data_selector: address
- name: isUpdateMetadataSupported
  endpoint:
    path: /isUpdateMetadataSupported
    method: GET
    data_selector: address
- name: isTotalSupplySupported
  endpoint:
    path: /isTotalSupplySupported
    method: GET
    data_selector: address
- name: isTokenByIndexSupported
  endpoint:
    path: /isTokenByIndexSupported
    method: GET
    data_selector: address
- name: isSharedMetadataSupported
  endpoint:
    path: /isSharedMetadataSupported
    method: GET
    data_selector: address
- name: getBalance
  endpoint:
    path: /getBalance
    method: GET
    data_selector: address
    params: {}
- name: claimConditionsUpdatedEvent
  endpoint:
    path: /claimConditionsUpdatedEvent
    method: GET
    data_selector: address
    params: {}
- name: getActiveClaimCondition
  endpoint:
    path: /getActiveClaimCondition
    method: GET
    data_selector: address
    params: {}
- name: getActiveClaimConditionId
  endpoint:
    path: /getActiveClaimConditionId
    method: GET
    data_selector: address
    params: {}
- name: resetClaimEligibility
  endpoint:
    path: /ERC721/resetClaimEligibility
    method: POST
    data_selector: returnType
    params: {}
- name: reveal
  endpoint:
    path: /ERC721/reveal
    method: POST
    data_selector: returnType
    params: {}
- name: setApprovalForAll
  endpoint:
    path: /ERC721/setApprovalForAll
    method: POST
    data_selector: returnType
    params: {}
- name: setClaimConditions
  endpoint:
    path: /ERC721/setClaimConditions
    method: POST
    data_selector: returnType
    params: {}
- name: setSharedMetadata
  endpoint:
    path: /ERC721/setSharedMetadata
    method: POST
    data_selector: returnType
    params: {}
- name: setTokenURI
  endpoint:
    path: /ERC721/setTokenURI
    method: POST
    data_selector: returnType
    params: {}
- name: sharedMetadata
  endpoint:
    path: /ERC721/sharedMetadata
    method: GET
    data_selector: returnType
    params: {}
- name: sharedMetadataUpdatedEvent
  endpoint:
    path: /ERC721/sharedMetadataUpdatedEvent
    method: GET
    data_selector: returnType
    params: {}
- name: startTokenId
  endpoint:
    path: /ERC721/startTokenId
    method: GET
    data_selector: returnType
    params: {}
- name: tokenOfOwnerByIndex
  endpoint:
    path: /ERC721/tokenOfOwnerByIndex
    method: GET
    data_selector: returnType
    params: {}
- name: getClaimConditionById
  endpoint:
    path: /getClaimConditionById
    method: GET
    data_selector: returnType
- name: getClaimConditions
  endpoint:
    path: /getClaimConditions
    method: GET
    data_selector: returnType
- name: getCurrencyMetadata
  endpoint:
    path: /getCurrencyMetadata
    method: GET
    data_selector: returnType
- name: isClaimToSupported
  endpoint:
    path: /isClaimToSupported
    method: GET
    data_selector: returnType
- name: isERC20
  endpoint:
    path: /isERC20
    method: GET
    data_selector: returnType
- name: isGetActiveClaimConditionIdSupported
  endpoint:
    path: /isGetActiveClaimConditionIdSupported
    method: GET
    data_selector: returnType
- name: isGetActiveClaimConditionSupported
  endpoint:
    path: /isGetActiveClaimConditionSupported
    method: GET
    data_selector: returnType
- name: isGetClaimConditionByIdSupported
  endpoint:
    path: /isGetClaimConditionByIdSupported
    method: GET
    data_selector: returnType
- name: isMintToSupported
  endpoint:
    path: /isMintToSupported
    method: GET
    data_selector: returnType
- name: isResetClaimEligibilitySupported
  endpoint:
    path: /isResetClaimEligibilitySupported
    method: GET
    data_selector: returnType
- name: transfer
  endpoint:
    path: /ERC20/transfer
    method: POST
    data_selector: returnType
    params: {}
- name: totalSupply
  endpoint:
    path: /ERC20/totalSupply
    method: GET
    data_selector: returnType
    params: {}
- name: mintTo
  endpoint:
    path: /ERC20/mintTo
    method: POST
    data_selector: returnType
    params: {}
- name: mintWithSignature
  endpoint:
    path: /ERC20/mintWithSignature
    method: POST
    data_selector: returnType
    params: {}
- name: resetClaimEligibility
  endpoint:
    path: /ERC20/resetClaimEligibility
    method: POST
    data_selector: returnType
    params: {}
- name: setClaimConditions
  endpoint:
    path: /ERC20/setClaimConditions
    method: POST
    data_selector: returnType
    params: {}
- name: tokensClaimedEvent
  endpoint:
    path: /erc721/tokensClaimedEvent
    method: GET
- name: tokensLazyMintedEvent
  endpoint:
    path: /erc721/tokensLazyMintedEvent
    method: GET
- name: tokensMintedWithSignatureEvent
  endpoint:
    path: /erc721/tokensMintedWithSignatureEvent
    method: GET
- name: tokensOfOwner
  endpoint:
    path: /erc721/tokensOfOwner
    method: GET
- name: tokenURI
  endpoint:
    path: /erc721/tokenURI
    method: GET
- name: tokenURIRevealedEvent
  endpoint:
    path: /erc721/tokenURIRevealedEvent
    method: GET
- name: totalSupply
  endpoint:
    path: /erc721/totalSupply
    method: GET
- name: transferEvent
  endpoint:
    path: /erc721/transferEvent
    method: GET
- name: transferFrom
  endpoint:
    path: /erc721/transferFrom
    method: POST
- name: updateMetadata
  endpoint:
    path: /erc721/updateMetadata
    method: POST
- name: allowance
  endpoint:
    path: /allowance
    method: GET
    data_selector: records
    params: {}
- name: approve
  endpoint:
    path: /approve
    method: POST
    data_selector: records
    params: {}
- name: balanceOf
  endpoint:
    path: /balanceOf
    method: GET
    data_selector: records
    params: {}
- name: burn
  endpoint:
    path: /burn
    method: POST
    data_selector: records
    params: {}
- name: burnFrom
  endpoint:
    path: /burnFrom
    method: POST
    data_selector: records
    params: {}
- name: canClaim
  endpoint:
    path: /canClaim
    method: GET
    data_selector: records
    params: {}
- name: getAccounts
  endpoint:
    path: getAccounts
    method: GET
    data_selector: returnType
    params: {}
- name: createAccount
  endpoint:
    path: createAccount
    method: POST
    data_selector: returnType
    params: {}
- name: adminUpdatedEvent
  endpoint:
    path: adminUpdatedEvent
    method: GET
    data_selector: returnType
    params: {}
- name: addSessionKey
  endpoint:
    path: addSessionKey
    method: POST
    data_selector: returnType
    params: {}
- name: addAdmin
  endpoint:
    path: addAdmin
    method: POST
    data_selector: returnType
    params: {}
- name: accountDeployedEvent
  endpoint:
    path: accountDeployedEvent
    method: GET
    data_selector: returnType
    params: {}
- name: withdraw
  endpoint:
    path: withdraw
    method: POST
    data_selector: returnType
    params: {}
- name: transferFrom
  endpoint:
    path: transferFrom
    method: POST
    data_selector: returnType
    params: {}
- name: transferEvent
  endpoint:
    path: transferEvent
    method: GET
    data_selector: returnType
    params: {}
- name: transferBatch
  endpoint:
    path: transferBatch
    method: POST
    data_selector: returnType
    params: {}
- name: getBalance
  endpoint:
    path: /getBalance
    method: GET
    data_selector: address
- name: getActiveClaimCondition
  endpoint:
    path: /getActiveClaimCondition
    method: GET
    data_selector: address
- name: getActiveClaimConditionId
  endpoint:
    path: /getActiveClaimConditionId
    method: GET
    data_selector: address
- name: claimTo
  endpoint:
    path: /claimTo
    method: POST
    data_selector: address
- name: decimals
  endpoint:
    path: /decimals
    method: GET
    data_selector: address
- name: delegate
  endpoint:
    path: /delegate
    method: POST
    data_selector: address
- name: delegates
  endpoint:
    path: /delegates
    method: GET
    data_selector: address
- name: deposit
  endpoint:
    path: /deposit
    method: POST
    data_selector: address
- name: generateMintSignature
  endpoint:
    path: /generateMintSignature
    method: POST
    data_selector: address
- name: getAccountsOfSigner
  endpoint:
    path: /getAccountsOfSigner
    method: POST
    data_selector: returnType
    params: {}
- name: getAllAccounts
  endpoint:
    path: /getAllAccounts
    method: POST
    data_selector: returnType
    params: {}
- name: getAllActiveSigners
  endpoint:
    path: /getAllActiveSigners
    method: POST
    data_selector: returnType
    params: {}
- name: getAllAdmins
  endpoint:
    path: /getAllAdmins
    method: POST
    data_selector: returnType
    params: {}
- name: getAllSigners
  endpoint:
    path: /getAllSigners
    method: POST
    data_selector: returnType
    params: {}
- name: getPermissionsForSigner
  endpoint:
    path: /getPermissionsForSigner
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpHash
  endpoint:
    path: /getUserOpHash
    method: POST
    data_selector: returnType
    params: {}
- name: isAccountDeployed
  endpoint:
    path: /isAccountDeployed
    method: POST
    data_selector: returnType
    params: {}
- name: isActiveSigner
  endpoint:
    path: /isActiveSigner
    method: POST
    data_selector: returnType
    params: {}
- name: isAddAdminSupported
  endpoint:
    path: /isAddAdminSupported
    method: POST
    data_selector: returnType
    params: {}
- name: getClaimConditionById
  endpoint:
    path: /getClaimConditionById
    method: GET
    data_selector: returnType
    params: {}
- name: getClaimConditions
  endpoint:
    path: /getClaimConditions
    method: GET
    data_selector: returnType
    params: {}
- name: getCurrencyMetadata
  endpoint:
    path: /getCurrencyMetadata
    method: GET
    data_selector: returnType
    params: {}
- name: isClaimToSupported
  endpoint:
    path: /isClaimToSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isERC20
  endpoint:
    path: /isERC20
    method: GET
    data_selector: returnType
    params: {}
- name: isGetActiveClaimConditionIdSupported
  endpoint:
    path: /isGetActiveClaimConditionIdSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isGetActiveClaimConditionSupported
  endpoint:
    path: /isGetActiveClaimConditionSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isGetClaimConditionByIdSupported
  endpoint:
    path: /isGetClaimConditionByIdSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isMintToSupported
  endpoint:
    path: /isMintToSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isResetClaimEligibilitySupported
  endpoint:
    path: /isResetClaimEligibilitySupported
    method: GET
    data_selector: returnType
    params: {}
- name: isAddSessionKeySupported
  endpoint:
    path: /erc4337/isAddSessionKeySupported
    method: GET
- name: isAdmin
  endpoint:
    path: /erc4337/isAdmin
    method: GET
- name: isCreateAccountSupported
  endpoint:
    path: /erc4337/isCreateAccountSupported
    method: GET
- name: isGetAccountsOfSignerSupported
  endpoint:
    path: /erc4337/isGetAccountsOfSignerSupported
    method: GET
- name: isGetAccountsSupported
  endpoint:
    path: /erc4337/isGetAccountsSupported
    method: GET
- name: isGetAllAccountsSupported
  endpoint:
    path: /erc4337/isGetAllAccountsSupported
    method: GET
- name: isGetAllActiveSignersSupported
  endpoint:
    path: /erc4337/isGetAllActiveSignersSupported
    method: GET
- name: isGetAllAdminsSupported
  endpoint:
    path: /erc4337/isGetAllAdminsSupported
    method: GET
- name: isGetAllSignersSupported
  endpoint:
    path: /erc4337/isGetAllSignersSupported
    method: GET
- name: isIsActiveSignerSupported
  endpoint:
    path: /erc4337/isIsActiveSignerSupported
    method: GET
- name: transfer
  endpoint:
    path: /ERC20/transfer
    method: POST
- name: mintTo
  endpoint:
    path: /ERC20/mintTo
    method: POST
- name: mintWithSignature
  endpoint:
    path: /ERC20/mintWithSignature
    method: POST
- name: resetClaimEligibility
  endpoint:
    path: /ERC20/resetClaimEligibility
    method: POST
- name: setClaimConditions
  endpoint:
    path: /ERC20/setClaimConditions
    method: POST
- name: totalSupply
  endpoint:
    path: /ERC20/totalSupply
    method: GET
- name: isAdminSupported
  endpoint:
    path: /ERC4337/isAdminSupported
    method: GET
    data_selector: returnType
- name: isRemoveAdminSupported
  endpoint:
    path: /ERC4337/isRemoveAdminSupported
    method: GET
    data_selector: returnType
- name: isRemoveSessionKeySupported
  endpoint:
    path: /ERC4337/isRemoveSessionKeySupported
    method: GET
    data_selector: returnType
- name: isTotalAccountsSupported
  endpoint:
    path: /ERC4337/isTotalAccountsSupported
    method: GET
    data_selector: returnType
- name: isValidateUserOpSupported
  endpoint:
    path: /ERC4337/isValidateUserOpSupported
    method: GET
    data_selector: returnType
- name: predictAccountAddress
  endpoint:
    path: /ERC4337/predictAccountAddress
    method: GET
    data_selector: returnType
- name: removeAdmin
  endpoint:
    path: /ERC4337/removeAdmin
    method: POST
    data_selector: returnType
- name: removeSessionKey
  endpoint:
    path: /ERC4337/removeSessionKey
    method: POST
    data_selector: returnType
- name: getAccounts
  endpoint:
    path: /getAccounts
    method: GET
    data_selector: accounts
    params: {}
- name: createAccount
  endpoint:
    path: /createAccount
    method: POST
    data_selector: account
    params: {}
- name: adminUpdatedEvent
  endpoint:
    path: /adminUpdatedEvent
    method: POST
    data_selector: event
    params: {}
- name: addAdmin
  endpoint:
    path: /addAdmin
    method: POST
    data_selector: admin
    params: {}
- name: addSessionKey
  endpoint:
    path: /addSessionKey
    method: POST
    data_selector: sessionKey
    params: {}
- name: accountDeployedEvent
  endpoint:
    path: /accountDeployedEvent
    method: POST
    data_selector: event
    params: {}
- name: sendBatchTransaction
  endpoint:
    path: /sendBatchTransaction
    method: POST
    data_selector: batchTransaction
    params: {}
- name: sendTransaction
  endpoint:
    path: /sendTransaction
    method: POST
    data_selector: transaction
    params: {}
- name: asset
  endpoint:
    path: /ERC4626/asset
    method: GET
    data_selector: returnType
- name: convertToAssets
  endpoint:
    path: /ERC4626/convertToAssets
    method: GET
    data_selector: returnType
- name: convertToShares
  endpoint:
    path: /ERC4626/convertToShares
    method: GET
    data_selector: returnType
- name: deposit
  endpoint:
    path: /ERC4626/deposit
    method: POST
    data_selector: returnType
- name: getAccountsOfSigner
  endpoint:
    path: /getAccountsOfSigner
    method: GET
    data_selector: returnType
- name: getAllAccounts
  endpoint:
    path: /getAllAccounts
    method: GET
    data_selector: returnType
- name: getAllActiveSigners
  endpoint:
    path: /getAllActiveSigners
    method: GET
    data_selector: returnType
- name: getAllAdmins
  endpoint:
    path: /getAllAdmins
    method: GET
    data_selector: returnType
- name: getAllSigners
  endpoint:
    path: /getAllSigners
    method: GET
    data_selector: returnType
- name: getPermissionsForSigner
  endpoint:
    path: /getPermissionsForSigner
    method: GET
    data_selector: returnType
- name: getUserOpHash
  endpoint:
    path: /getUserOpHash
    method: GET
    data_selector: returnType
- name: isAccountDeployed
  endpoint:
    path: /isAccountDeployed
    method: GET
    data_selector: returnType
- name: isActiveSigner
  endpoint:
    path: /isActiveSigner
    method: GET
    data_selector: returnType
- name: isAddAdminSupported
  endpoint:
    path: /isAddAdminSupported
    method: GET
    data_selector: returnType
- name: depositEvent
  endpoint:
    path: /ERC4626/depositEvent
    method: POST
    data_selector: returnType
    params: {}
- name: maxDeposit
  endpoint:
    path: /ERC4626/maxDeposit
    method: POST
    data_selector: returnType
    params: {}
- name: maxMint
  endpoint:
    path: /ERC4626/maxMint
    method: POST
    data_selector: returnType
    params: {}
- name: maxRedeem
  endpoint:
    path: /ERC4626/maxRedeem
    method: POST
    data_selector: returnType
    params: {}
- name: maxWithdraw
  endpoint:
    path: /ERC4626/maxWithdraw
    method: POST
    data_selector: returnType
    params: {}
- name: mint
  endpoint:
    path: /ERC4626/mint
    method: POST
    data_selector: returnType
    params: {}
- name: previewDeposit
  endpoint:
    path: /ERC4626/previewDeposit
    method: POST
    data_selector: returnType
    params: {}
- name: previewMint
  endpoint:
    path: /ERC4626/previewMint
    method: POST
    data_selector: returnType
    params: {}
- name: previewRedeem
  endpoint:
    path: /ERC4626/previewRedeem
    method: POST
    data_selector: returnType
    params: {}
- name: previewWithdraw
  endpoint:
    path: /ERC4626/previewWithdraw
    method: POST
    data_selector: returnType
    params: {}
- name: isAddSessionKeySupported
  endpoint:
    path: /isAddSessionKeySupported
    method: GET
- name: isAdmin
  endpoint:
    path: /isAdmin
    method: GET
- name: isCreateAccountSupported
  endpoint:
    path: /isCreateAccountSupported
    method: GET
- name: isGetAccountsOfSignerSupported
  endpoint:
    path: /isGetAccountsOfSignerSupported
    method: GET
- name: isGetAccountsSupported
  endpoint:
    path: /isGetAccountsSupported
    method: GET
- name: isGetAllAccountsSupported
  endpoint:
    path: /isGetAllAccountsSupported
    method: GET
- name: isGetAllActiveSignersSupported
  endpoint:
    path: /isGetAllActiveSignersSupported
    method: GET
- name: isGetAllAdminsSupported
  endpoint:
    path: /isGetAllAdminsSupported
    method: GET
- name: isGetAllSignersSupported
  endpoint:
    path: /isGetAllSignersSupported
    method: GET
- name: isIsActiveSignerSupported
  endpoint:
    path: /isIsActiveSignerSupported
    method: GET
- name: getBundler
  endpoint:
    path: /getBundler
    method: GET
    data_selector: returnType
    params: {}
- name: addSigner
  endpoint:
    path: /addSigner
    method: POST
    data_selector: returnType
    params: {}
- name: addSignerFor
  endpoint:
    path: /addSignerFor
    method: POST
    data_selector: returnType
    params: {}
- name: createEd25519Keypair
  endpoint:
    path: /createEd25519Keypair
    method: POST
    data_selector: returnType
    params: {}
- name: encodeSignedKeyRequestMetadata
  endpoint:
    path: /encodeSignedKeyRequestMetadata
    method: POST
    data_selector: returnType
    params: {}
- name: getAddData
  endpoint:
    path: /getAddData
    method: POST
    data_selector: returnType
    params: {}
- name: account
  endpoint:
    path: /api/v1/account
    method: GET
    data_selector: returnType
- name: asset
  endpoint:
    path: /asset
    method: GET
    data_selector: returnType
- name: convertToAssets
  endpoint:
    path: /convertToAssets
    method: GET
    data_selector: returnType
- name: convertToShares
  endpoint:
    path: /convertToShares
    method: GET
    data_selector: returnType
- name: deposit
  endpoint:
    path: /deposit
    method: POST
    data_selector: returnType
- name: getFid
  endpoint:
    path: /getFid
    method: POST
    data_selector: returnType
- name: getIdGateway
  endpoint:
    path: /getIdGateway
    method: POST
    data_selector: returnType
- name: getIdRegistry
  endpoint:
    path: /getIdRegistry
    method: POST
    data_selector: returnType
- name: getKeyGateway
  endpoint:
    path: /getKeyGateway
    method: POST
    data_selector: returnType
- name: getKeyRequestData
  endpoint:
    path: /getKeyRequestData
    method: POST
    data_selector: returnType
- name: getNonce
  endpoint:
    path: /getNonce
    method: POST
    data_selector: returnType
- name: getRegisterData
  endpoint:
    path: /getRegisterData
    method: POST
    data_selector: returnType
- name: getRegistrationPrice
  endpoint:
    path: /getRegistrationPrice
    method: POST
    data_selector: returnType
- name: getSignedKeyRequestMetadata
  endpoint:
    path: /getSignedKeyRequestMetadata
    method: POST
    data_selector: returnType
- name: getStoragePrice
  endpoint:
    path: /getStoragePrice
    method: POST
    data_selector: returnType
- name: depositEvent
  endpoint:
    path: /ERC4626/depositEvent
    method: GET
- name: maxDeposit
  endpoint:
    path: /ERC4626/maxDeposit
    method: GET
- name: maxMint
  endpoint:
    path: /ERC4626/maxMint
    method: GET
- name: maxRedeem
  endpoint:
    path: /ERC4626/maxRedeem
    method: GET
- name: maxWithdraw
  endpoint:
    path: /ERC4626/maxWithdraw
    method: GET
- name: mint
  endpoint:
    path: /ERC4626/mint
    method: GET
- name: previewDeposit
  endpoint:
    path: /ERC4626/previewDeposit
    method: GET
- name: previewMint
  endpoint:
    path: /ERC4626/previewMint
    method: GET
- name: previewRedeem
  endpoint:
    path: /ERC4626/previewRedeem
    method: GET
- name: previewWithdraw
  endpoint:
    path: /ERC4626/previewWithdraw
    method: GET
- name: getStorageRegistry
  endpoint:
    path: /getStorageRegistry
    method: GET
    data_selector: returnType
    params: {}
- name: getUsdRegistrationPrice
  endpoint:
    path: /getUsdRegistrationPrice
    method: GET
    data_selector: returnType
    params: {}
- name: getUsdStoragePrice
  endpoint:
    path: /getUsdStoragePrice
    method: GET
    data_selector: returnType
    params: {}
- name: registerFid
  endpoint:
    path: /registerFid
    method: POST
    data_selector: returnType
    params: {}
- name: registerFidAndSigner
  endpoint:
    path: /registerFidAndSigner
    method: POST
    data_selector: returnType
    params: {}
- name: rentStorage
  endpoint:
    path: /rentStorage
    method: POST
    data_selector: returnType
    params: {}
- name: signAdd
  endpoint:
    path: /signAdd
    method: POST
    data_selector: returnType
    params: {}
- name: signKeyRequest
  endpoint:
    path: /signKeyRequest
    method: POST
    data_selector: returnType
    params: {}
- name: signRegister
  endpoint:
    path: /signRegister
    method: POST
    data_selector: returnType
    params: {}
- name: idGateway
  endpoint:
    path: /idGateway
    method: GET
    data_selector: returnType
    params: {}
- name: getBundler
  endpoint:
    path: /getBundler
    method: GET
- name: addSigner
  endpoint:
    path: /addSigner
    method: POST
- name: addSignerFor
  endpoint:
    path: /addSignerFor
    method: POST
- name: createEd25519Keypair
  endpoint:
    path: /createEd25519Keypair
    method: POST
- name: encodeSignedKeyRequestMetadata
  endpoint:
    path: /encodeSignedKeyRequestMetadata
    method: POST
- name: getAddData
  endpoint:
    path: /getAddData
    method: POST
- name: storageRegistry
  endpoint:
    path: /storageRegistry
    method: GET
    data_selector: returnType
- name: getStoragePrice
  endpoint:
    path: /getStoragePrice
    method: GET
    data_selector: returnType
- name: getFid
  endpoint:
    path: /getFid
    method: GET
    data_selector: returnType
- name: getIdGateway
  endpoint:
    path: /getIdGateway
    method: GET
    data_selector: returnType
- name: getIdRegistry
  endpoint:
    path: /getIdRegistry
    method: GET
    data_selector: returnType
- name: getKeyGateway
  endpoint:
    path: /getKeyGateway
    method: GET
    data_selector: returnType
- name: getKeyRequestData
  endpoint:
    path: /getKeyRequestData
    method: GET
    data_selector: returnType
- name: getNonce
  endpoint:
    path: /getNonce
    method: GET
    data_selector: returnType
- name: getRegisterData
  endpoint:
    path: /getRegisterData
    method: GET
    data_selector: returnType
- name: getRegistrationPrice
  endpoint:
    path: /getRegistrationPrice
    method: GET
    data_selector: returnType
- name: getSignedKeyRequestMetadata
  endpoint:
    path: /getSignedKeyRequestMetadata
    method: GET
    data_selector: returnType
- name: idOf
  endpoint:
    path: /idOf
    method: GET
    data_selector: returnType
- name: idGateway
  endpoint:
    path: /idGateway
    method: GET
    data_selector: returnType
- name: idCounter
  endpoint:
    path: /idCounter
    method: GET
    data_selector: returnType
- name: gatewayFrozen
  endpoint:
    path: /gatewayFrozen
    method: GET
    data_selector: returnType
- name: freezeIdGatewayEvent
  endpoint:
    path: /freezeIdGatewayEvent
    method: GET
    data_selector: returnType
- name: custodyOf
  endpoint:
    path: /custodyOf
    method: GET
    data_selector: returnType
- name: changeRecoveryAddress
  endpoint:
    path: /changeRecoveryAddress
    method: GET
    data_selector: returnType
- name: changeRecoveryAddressEvent
  endpoint:
    path: /changeRecoveryAddressEvent
    method: GET
    data_selector: returnType
- name: adminResetEvent
  endpoint:
    path: /adminResetEvent
    method: GET
    data_selector: returnType
- name: getStorageRegistry
  endpoint:
    path: /api/storageRegistry
    method: GET
    data_selector: data
    params: {}
- name: getUsdRegistrationPrice
  endpoint:
    path: /api/usdRegistrationPrice
    method: GET
    data_selector: price
    params: {}
- name: registerFid
  endpoint:
    path: /api/registerFid
    method: POST
    data_selector: result
    params: {}
- name: signRegister
  endpoint:
    path: /api/signRegister
    method: POST
    data_selector: signature
    params: {}
- name: recover
  endpoint:
    path: FARCASTER.recover
    method: POST
- name: recoverEvent
  endpoint:
    path: FARCASTER.recoverEvent
    method: POST
- name: recoverFor
  endpoint:
    path: FARCASTER.recoverFor
    method: POST
- name: recoveryOf
  endpoint:
    path: FARCASTER.recoveryOf
    method: POST
- name: registerEvent
  endpoint:
    path: FARCASTER.registerEvent
    method: POST
- name: setIdCounterEvent
  endpoint:
    path: FARCASTER.setIdCounterEvent
    method: POST
- name: setIdGatewayEvent
  endpoint:
    path: FARCASTER.setIdGatewayEvent
    method: POST
- name: transfer
  endpoint:
    path: FARCASTER.transfer
    method: POST
- name: TRANSFER_AND_CHANGE_RECOVERY_TYPEHASH
  endpoint:
    path: FARCASTER.TRANSFER_AND_CHANGE_RECOVERY_TYPEHASH
    method: POST
- name: TRANSFER_TYPEHASH
  endpoint:
    path: FARCASTER.TRANSFER_TYPEHASH
    method: POST
- name: keyGateway
  endpoint:
    path: /keyGateway
    method: GET
    data_selector: returnType
- name: price
  endpoint:
    path: /price
    method: GET
    data_selector: returnType
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: returnType
- name: idRegistry
  endpoint:
    path: /idRegistry
    method: GET
    data_selector: returnType
- name: REGISTER_TYPEHASH
  endpoint:
    path: /REGISTER_TYPEHASH
    method: GET
    data_selector: returnType
- name: registerFor
  endpoint:
    path: /registerFor
    method: POST
    data_selector: returnType
- name: setStorageRegistryEvent
  endpoint:
    path: /setStorageRegistryEvent
    method: POST
    data_selector: returnType
- name: storageRegistry
  endpoint:
    path: /storageRegistry
    method: GET
    data_selector: returnType
- name: idOf
  endpoint:
    path: /idOf
    method: POST
    data_selector: returnType
    params: {}
- name: addEvent
  endpoint:
    path: /addEvent
    method: POST
    data_selector: returnType
    params: {}
- name: transferAndChangeRecovery
  endpoint:
    path: /transferAndChangeRecovery
    method: POST
    data_selector: returnType
    params: {}
- name: transferEvent
  endpoint:
    path: /transferEvent
    method: POST
    data_selector: returnType
    params: {}
- name: transferFor
  endpoint:
    path: /transferFor
    method: POST
    data_selector: returnType
    params: {}
- name: verifyFidSignature
  endpoint:
    path: /verifyFidSignature
    method: POST
    data_selector: returnType
    params: {}
- name: add
  endpoint:
    path: /add
    method: POST
    data_selector: returnType
    params: {}
- name: ADD_TYPEHASH
  endpoint:
    path: /ADD_TYPEHASH
    method: POST
    data_selector: returnType
    params: {}
- name: addFor
  endpoint:
    path: /addFor
    method: POST
    data_selector: returnType
    params: {}
- name: keyRegistry
  endpoint:
    path: /keyRegistry
    method: POST
    data_selector: returnType
    params: {}
- name: nonces
  endpoint:
    path: /nonces
    method: POST
    data_selector: returnType
    params: {}
- name: recover
  endpoint:
    path: /recover
    method: POST
- name: recoverEvent
  endpoint:
    path: /recoverEvent
    method: POST
- name: recoverFor
  endpoint:
    path: /recoverFor
    method: POST
- name: recoveryOf
  endpoint:
    path: /recoveryOf
    method: POST
- name: registerEvent
  endpoint:
    path: /registerEvent
    method: POST
- name: setIdCounterEvent
  endpoint:
    path: /setIdCounterEvent
    method: POST
- name: setIdGatewayEvent
  endpoint:
    path: /setIdGatewayEvent
    method: POST
- name: transfer
  endpoint:
    path: /transfer
    method: POST
- name: TRANSFER_AND_CHANGE_RECOVERY_TYPEHASH
  endpoint:
    path: /TRANSFER_AND_CHANGE_RECOVERY_TYPEHASH
    method: POST
- name: TRANSFER_TYPEHASH
  endpoint:
    path: /TRANSFER_TYPEHASH
    method: POST
- name: adminResetEvent
  endpoint:
    path: /adminResetEvent
    method: POST
    data_selector: address
    params: {}
- name: freezeKeyGatewayEvent
  endpoint:
    path: /freezeKeyGatewayEvent
    method: POST
    data_selector: address
    params: {}
- name: gatewayFrozen
  endpoint:
    path: /gatewayFrozen
    method: POST
    data_selector: address
    params: {}
- name: idRegistry
  endpoint:
    path: /idRegistry
    method: POST
    data_selector: address
    params: {}
- name: keyAt
  endpoint:
    path: /keyAt
    method: POST
    data_selector: address
    params: {}
- name: keyDataOf
  endpoint:
    path: /keyDataOf
    method: POST
    data_selector: address
    params: {}
- name: keyGateway
  endpoint:
    path: /keyGateway
    method: POST
    data_selector: address
    params: {}
- name: keysOf
  endpoint:
    path: /keysOf
    method: POST
    data_selector: address
    params: {}
- name: maxKeysPerFid
  endpoint:
    path: /maxKeysPerFid
    method: POST
    data_selector: address
    params: {}
- name: remove
  endpoint:
    path: /remove
    method: POST
    data_selector: address
    params: {}
- name: transferAndChangeRecovery
  endpoint:
    path: /transferAndChangeRecovery
    method: POST
    data_selector: returnType
    params: {}
- name: transferFor
  endpoint:
    path: /transferFor
    method: POST
    data_selector: returnType
    params: {}
- name: verifyFidSignature
  endpoint:
    path: /verifyFidSignature
    method: POST
    data_selector: returnType
    params: {}
- name: add
  endpoint:
    path: /add
    method: POST
    data_selector: returnType
    params: {}
- name: ADD_TYPEHASH
  endpoint:
    path: /ADD_TYPEHASH
    method: POST
    data_selector: returnType
    params: {}
- name: addFor
  endpoint:
    path: /addFor
    method: POST
    data_selector: returnType
    params: {}
- name: keyRegistry
  endpoint:
    path: /keyRegistry
    method: POST
    data_selector: returnType
    params: {}
- name: nonces
  endpoint:
    path: /nonces
    method: POST
    data_selector: returnType
    params: {}
- name: addEvent
  endpoint:
    path: /addEvent
    method: POST
    data_selector: returnType
    params: {}
- name: remove_typehash
  endpoint:
    path: /remove_typehash
    method: POST
    data_selector: returnType
- name: removeFor
  endpoint:
    path: /removeFor
    method: POST
    data_selector: returnType
- name: setIdRegistryEvent
  endpoint:
    path: /setIdRegistryEvent
    method: POST
    data_selector: returnType
- name: setKeyGatewayEvent
  endpoint:
    path: /setKeyGatewayEvent
    method: POST
    data_selector: returnType
- name: setMaxKeysPerFidEvent
  endpoint:
    path: /setMaxKeysPerFidEvent
    method: POST
    data_selector: returnType
- name: setValidatorEvent
  endpoint:
    path: /setValidatorEvent
    method: POST
    data_selector: returnType
- name: totalKeys
  endpoint:
    path: /totalKeys
    method: GET
    data_selector: returnType
- name: batchRent
  endpoint:
    path: /batchRent
    method: POST
    data_selector: returnType
- name: deprecationTimestamp
  endpoint:
    path: /deprecationTimestamp
    method: GET
    data_selector: returnType
- name: maxUnits
  endpoint:
    path: /maxUnits
    method: GET
    data_selector: returnType
- name: adminResetEvent
  endpoint:
    path: /adminResetEvent
    method: POST
- name: freezeKeyGatewayEvent
  endpoint:
    path: /freezeKeyGatewayEvent
    method: POST
- name: gatewayFrozen
  endpoint:
    path: /gatewayFrozen
    method: POST
- name: idRegistry
  endpoint:
    path: /idRegistry
    method: POST
- name: keyAt
  endpoint:
    path: /keyAt
    method: POST
- name: keyDataOf
  endpoint:
    path: /keyDataOf
    method: POST
- name: keyGateway
  endpoint:
    path: /keyGateway
    method: POST
- name: keysOf
  endpoint:
    path: /keysOf
    method: POST
- name: maxKeysPerFid
  endpoint:
    path: /maxKeysPerFid
    method: POST
- name: remove
  endpoint:
    path: /remove
    method: POST
- name: exists
  endpoint:
    path: /exists
    method: GET
- name: getContentURI
  endpoint:
    path: /getContentURI
    method: GET
- name: getDefaultHandle
  endpoint:
    path: /getDefaultHandle
    method: GET
- name: getFollowData
  endpoint:
    path: /getFollowData
    method: GET
- name: getFollowerCount
  endpoint:
    path: /getFollowerCount
    method: GET
- name: remove_typehash
  endpoint:
    path: /remove_typehash
    method: POST
- name: remove_for
  endpoint:
    path: /remove_for
    method: POST
- name: set_id_registry_event
  endpoint:
    path: /set_id_registry_event
    method: POST
- name: set_key_gateway_event
  endpoint:
    path: /set_key_gateway_event
    method: POST
- name: set_max_keys_per_fid_event
  endpoint:
    path: /set_max_keys_per_fid_event
    method: POST
- name: set_validator_event
  endpoint:
    path: /set_validator_event
    method: POST
- name: total_keys
  endpoint:
    path: /total_keys
    method: GET
- name: batch_rent
  endpoint:
    path: /batch_rent
    method: POST
- name: deprecation_timestamp
  endpoint:
    path: /deprecation_timestamp
    method: GET
- name: max_units
  endpoint:
    path: /max_units
    method: GET
- name: getProfile
  endpoint:
    path: /getProfile
    method: GET
- name: getFollowerProfileId
  endpoint:
    path: /getFollowerProfileId
    method: GET
- name: getFollowTokenId
  endpoint:
    path: /getFollowTokenId
    method: GET
- name: getFullProfile
  endpoint:
    path: /getFullProfile
    method: GET
- name: getHandle
  endpoint:
    path: /getHandle
    method: GET
- name: getHandleFromProfileId
  endpoint:
    path: /getHandleFromProfileId
    method: GET
- name: getHandleTokenURIContract
  endpoint:
    path: /getHandleTokenURIContract
    method: GET
- name: getLocalName
  endpoint:
    path: /getLocalName
    method: GET
- name: getModuleTypes
  endpoint:
    path: /getModuleTypes
    method: GET
- name: getOriginalFollowTimestamp
  endpoint:
    path: /getOriginalFollowTimestamp
    method: GET
- name: getProfileIdAllowedToRecover
  endpoint:
    path: /getProfileIdAllowedToRecover
    method: GET
- name: getProfileIdByHandleHash
  endpoint:
    path: /getProfileIdByHandleHash
    method: GET
- name: getProfileMetadata
  endpoint:
    path: /getProfileMetadata
    method: GET
- name: getPublication
  endpoint:
    path: /getPublication
    method: GET
- name: getTokenId
  endpoint:
    path: /getTokenId
    method: GET
- name: isErc20CurrencyRegistered
  endpoint:
    path: /isErc20CurrencyRegistered
    method: GET
- name: isFollowing
  endpoint:
    path: /isFollowing
    method: GET
- name: isModuleRegistered
  endpoint:
    path: /isModuleRegistered
    method: GET
- name: isModuleRegisteredAs
  endpoint:
    path: /isModuleRegisteredAs
    method: GET
- name: mintTimestampOf
  endpoint:
    path: /mintTimestampOf
    method: GET
- name: getProfile
  endpoint:
    path: /getProfile
    method: GET
- name: getFollowerProfileId
  endpoint:
    path: /getFollowerProfileId
    method: GET
- name: getFollowTokenId
  endpoint:
    path: /getFollowTokenId
    method: GET
- name: getFullProfile
  endpoint:
    path: /getFullProfile
    method: GET
- name: getHandle
  endpoint:
    path: /getHandle
    method: GET
- name: getHandleFromProfileId
  endpoint:
    path: /getHandleFromProfileId
    method: GET
- name: getHandleTokenURIContract
  endpoint:
    path: /getHandleTokenURIContract
    method: GET
- name: getLocalName
  endpoint:
    path: /getLocalName
    method: GET
- name: getModuleTypes
  endpoint:
    path: /getModuleTypes
    method: GET
- name: getOriginalFollowTimestamp
  endpoint:
    path: /getOriginalFollowTimestamp
    method: GET
- name: aggregate
  endpoint:
    path: /MULTICALL3/aggregate
    method: POST
- name: aggregate3
  endpoint:
    path: /MULTICALL3/aggregate3
    method: POST
- name: aggregate3Value
  endpoint:
    path: /MULTICALL3/aggregate3Value
    method: POST
- name: blockAndAggregate
  endpoint:
    path: /MULTICALL3/blockAndAggregate
    method: POST
- name: getBasefee
  endpoint:
    path: /MULTICALL3/getBasefee
    method: POST
- name: getProfileIdAllowedToRecover
  endpoint:
    path: /getProfileIdAllowedToRecover
    method: GET
    data_selector: returnType
    params: {}
- name: getProfileIdByHandleHash
  endpoint:
    path: /getProfileIdByHandleHash
    method: GET
    data_selector: returnType
    params: {}
- name: getProfileMetadata
  endpoint:
    path: /getProfileMetadata
    method: GET
    data_selector: returnType
    params: {}
- name: getPublication
  endpoint:
    path: /getPublication
    method: GET
    data_selector: returnType
    params: {}
- name: getTokenId
  endpoint:
    path: /getTokenId
    method: GET
    data_selector: returnType
    params: {}
- name: isErc20CurrencyRegistered
  endpoint:
    path: /isErc20CurrencyRegistered
    method: GET
    data_selector: returnType
    params: {}
- name: isFollowing
  endpoint:
    path: /isFollowing
    method: GET
    data_selector: returnType
    params: {}
- name: isModuleRegistered
  endpoint:
    path: /isModuleRegistered
    method: GET
    data_selector: returnType
    params: {}
- name: isModuleRegisteredAs
  endpoint:
    path: /isModuleRegisteredAs
    method: GET
    data_selector: returnType
    params: {}
- name: mintTimestampOf
  endpoint:
    path: /mintTimestampOf
    method: GET
    data_selector: returnType
    params: {}
- name: getBlockHash
  endpoint:
    path: /getBlockHash
    method: GET
- name: getBlockNumber
  endpoint:
    path: /getBlockNumber
    method: GET
- name: getChainId
  endpoint:
    path: /getChainId
    method: GET
- name: getCurrentBlockCoinbase
  endpoint:
    path: /getCurrentBlockCoinbase
    method: GET
- name: getCurrentBlockDifficulty
  endpoint:
    path: /getCurrentBlockDifficulty
    method: GET
- name: getCurrentBlockGasLimit
  endpoint:
    path: /getCurrentBlockGasLimit
    method: GET
- name: getCurrentBlockTimestamp
  endpoint:
    path: /getCurrentBlockTimestamp
    method: GET
- name: getEthBalance
  endpoint:
    path: /getEthBalance
    method: GET
- name: getLastBlockHash
  endpoint:
    path: /getLastBlockHash
    method: GET
- name: tryAggregate
  endpoint:
    path: /tryAggregate
    method: POST
- name: aggregate
  endpoint:
    path: /MULTICALL3/aggregate
    method: POST
- name: aggregate3
  endpoint:
    path: /MULTICALL3/aggregate3
    method: POST
- name: aggregate3Value
  endpoint:
    path: /MULTICALL3/aggregate3Value
    method: POST
- name: blockAndAggregate
  endpoint:
    path: /MULTICALL3/blockAndAggregate
    method: POST
- name: getBasefee
  endpoint:
    path: /MULTICALL3/getBasefee
    method: POST
- name: getAllRoleMembers
  endpoint:
    path: /permissions/getAllRoleMembers
    method: GET
    data_selector: members
    params: {}
- name: getBlockHash
  endpoint:
    path: /getBlockHash
    method: GET
    data_selector: returnType
- name: getBlockNumber
  endpoint:
    path: /getBlockNumber
    method: GET
    data_selector: returnType
- name: getChainId
  endpoint:
    path: /getChainId
    method: GET
    data_selector: returnType
- name: getCurrentBlockCoinbase
  endpoint:
    path: /getCurrentBlockCoinbase
    method: GET
    data_selector: returnType
- name: getCurrentBlockDifficulty
  endpoint:
    path: /getCurrentBlockDifficulty
    method: GET
    data_selector: returnType
- name: getCurrentBlockGasLimit
  endpoint:
    path: /getCurrentBlockGasLimit
    method: GET
    data_selector: returnType
- name: getCurrentBlockTimestamp
  endpoint:
    path: /getCurrentBlockTimestamp
    method: GET
    data_selector: returnType
- name: getEthBalance
  endpoint:
    path: /getEthBalance
    method: GET
    data_selector: returnType
- name: getLastBlockHash
  endpoint:
    path: /getLastBlockHash
    method: GET
    data_selector: returnType
- name: tryAggregate
  endpoint:
    path: /tryAggregate
    method: GET
    data_selector: returnType
- name: getRoleAdmin
  endpoint:
    path: /permissions/getRoleAdmin
    method: GET
- name: getRoleHash
  endpoint:
    path: /permissions/getRoleHash
    method: GET
- name: getRoleMember
  endpoint:
    path: /permissions/getRoleMember
    method: GET
- name: getRoleMemberCount
  endpoint:
    path: /permissions/getRoleMemberCount
    method: GET
- name: grantRole
  endpoint:
    path: /permissions/grantRole
    method: POST
- name: hasRole
  endpoint:
    path: /permissions/hasRole
    method: GET
- name: isGetAllRoleMembersSupported
  endpoint:
    path: /permissions/isGetAllRoleMembersSupported
    method: GET
- name: isGetRoleAdminSupported
  endpoint:
    path: /permissions/isGetRoleAdminSupported
    method: GET
- name: isGetRoleMemberCountSupported
  endpoint:
    path: /permissions/isGetRoleMemberCountSupported
    method: GET
- name: isGetRoleMemberSupported
  endpoint:
    path: /permissions/isGetRoleMemberSupported
    method: GET
- name: getAllRoleMembers
  endpoint:
    path: /getAllRoleMembers
    method: GET
    data_selector: members
    params: {}
- name: distribute
  endpoint:
    path: /SPLIT/distribute
    method: POST
    data_selector: returnType
    params: {}
- name: getRoleAdmin
  endpoint:
    path: /permissions/getRoleAdmin
    method: GET
- name: getRoleHash
  endpoint:
    path: /permissions/getRoleHash
    method: GET
- name: getRoleMember
  endpoint:
    path: /permissions/getRoleMember
    method: GET
- name: getRoleMemberCount
  endpoint:
    path: /permissions/getRoleMemberCount
    method: GET
- name: grantRole
  endpoint:
    path: /permissions/grantRole
    method: POST
- name: hasRole
  endpoint:
    path: /permissions/hasRole
    method: GET
- name: isGetAllRoleMembersSupported
  endpoint:
    path: /permissions/isGetAllRoleMembersSupported
    method: GET
- name: isGetRoleAdminSupported
  endpoint:
    path: /permissions/isGetRoleAdminSupported
    method: GET
- name: isGetRoleMemberCountSupported
  endpoint:
    path: /permissions/isGetRoleMemberCountSupported
    method: GET
- name: isGetRoleMemberSupported
  endpoint:
    path: /permissions/isGetRoleMemberSupported
    method: GET
- name: distribute
  endpoint:
    path: /SPLIT/distribute
    method: POST
- name: distributeByToken
  endpoint:
    path: /SPLIT/distributeByToken
    method: POST
    data_selector: returnType
    params: {}
- name: getAllRecipientsAddresses
  endpoint:
    path: /SPLIT/getAllRecipientsAddresses
    method: POST
    data_selector: returnType
    params: {}
- name: getAllRecipientsPercentages
  endpoint:
    path: /SPLIT/getAllRecipientsPercentages
    method: POST
    data_selector: returnType
    params: {}
- name: getRecipientSplitPercentage
  endpoint:
    path: /SPLIT/getRecipientSplitPercentage
    method: POST
    data_selector: returnType
    params: {}
- name: payee
  endpoint:
    path: /SPLIT/payee
    method: POST
    data_selector: returnType
    params: {}
- name: payeeCount
  endpoint:
    path: /SPLIT/payeeCount
    method: POST
    data_selector: returnType
    params: {}
- name: releasable
  endpoint:
    path: /SPLIT/releasable
    method: POST
    data_selector: returnType
    params: {}
- name: release
  endpoint:
    path: /SPLIT/release
    method: POST
    data_selector: returnType
    params: {}
- name: releaseByToken
  endpoint:
    path: /SPLIT/releaseByToken
    method: POST
    data_selector: returnType
    params: {}
- name: releaseByToken
  endpoint:
    path: /SPLIT/releaseByToken
    method: POST
- name: getAll
  endpoint:
    path: /THIRDWEB/getAll
    method: GET
- name: add
  endpoint:
    path: /THIRDWEB/add
    method: GET
- name: contractType
  endpoint:
    path: /THIRDWEB/contractType
    method: GET
- name: count
  endpoint:
    path: /THIRDWEB/count
    method: GET
- name: deployProxyByImplementation
  endpoint:
    path: /THIRDWEB/deployProxyByImplementation
    method: GET
- name: getAll
  endpoint:
    path: /getAll
    method: POST
- name: add
  endpoint:
    path: /add
    method: POST
- name: contractType
  endpoint:
    path: /contractType
    method: POST
- name: count
  endpoint:
    path: /count
    method: POST
- name: deployProxyByImplementation
  endpoint:
    path: /deployProxyByImplementation
    method: POST
- name: getAllPublishedContracts
  endpoint:
    path: /getAllPublishedContracts
    method: GET
- name: getMetadataUri
  endpoint:
    path: /getMetadataUri
    method: GET
- name: getPublishedContract
  endpoint:
    path: /getPublishedContract
    method: GET
- name: getPublishedContractVersions
  endpoint:
    path: /getPublishedContractVersions
    method: GET
- name: getPublishedUriFromCompilerUri
  endpoint:
    path: /getPublishedUriFromCompilerUri
    method: GET
- name: getPublisherProfileUri
  endpoint:
    path: /getPublisherProfileUri
    method: GET
- name: isContractTypeSupported
  endpoint:
    path: /isContractTypeSupported
    method: GET
- name: publishContract
  endpoint:
    path: /publishContract
    method: POST
- name: remove
  endpoint:
    path: /remove
    method: POST
- name: setPublisherProfileUri
  endpoint:
    path: /setPublisherProfileUri
    method: POST
- name: getAllPublishedContracts
  endpoint:
    path: /getAllPublishedContracts
    method: GET
    data_selector: returnType
- name: getMetadataUri
  endpoint:
    path: /getMetadataUri
    method: GET
    data_selector: returnType
- name: getPublishedContract
  endpoint:
    path: /getPublishedContract
    method: GET
    data_selector: returnType
- name: getPublishedContractVersions
  endpoint:
    path: /getPublishedContractVersions
    method: GET
    data_selector: returnType
- name: getPublishedUriFromCompilerUri
  endpoint:
    path: /getPublishedUriFromCompilerUri
    method: GET
    data_selector: returnType
- name: getPublisherProfileUri
  endpoint:
    path: /getPublisherProfileUri
    method: GET
    data_selector: returnType
- name: isContractTypeSupported
  endpoint:
    path: /isContractTypeSupported
    method: GET
    data_selector: returnType
- name: publishContract
  endpoint:
    path: /publishContract
    method: POST
    data_selector: returnType
- name: remove
  endpoint:
    path: /remove
    method: POST
    data_selector: returnType
- name: setPublisherProfileUri
  endpoint:
    path: /setPublisherProfileUri
    method: POST
    data_selector: returnType
- name: getPool
  endpoint:
    path: /getPool
    method: POST
- name: createPool
  endpoint:
    path: /createPool
    method: POST
- name: unpublishContract
  endpoint:
    path: /unpublishContract
    method: POST
- name: enableFeeAmount
  endpoint:
    path: /enableFeeAmount
    method: POST
- name: exactInput
  endpoint:
    path: /exactInput
    method: POST
- name: exactInputSingle
  endpoint:
    path: /exactInputSingle
    method: POST
- name: exactOutput
  endpoint:
    path: /exactOutput
    method: POST
- name: exactOutputSingle
  endpoint:
    path: /exactOutputSingle
    method: POST
- name: feeAmountEnabledEvent
  endpoint:
    path: /feeAmountEnabledEvent
    method: POST
- name: feeAmountTickSpacing
  endpoint:
    path: /feeAmountTickSpacing
    method: POST
- name: namehash
  endpoint:
    path: /namehash
    method: POST
    data_selector: result
- name: getPool
  endpoint:
    path: getPool
    method: GET
- name: createPool
  endpoint:
    path: createPool
    method: GET
- name: unpublishContract
  endpoint:
    path: unpublishContract
    method: GET
- name: enableFeeAmount
  endpoint:
    path: enableFeeAmount
    method: GET
- name: exactInput
  endpoint:
    path: exactInput
    method: GET
- name: exactInputSingle
  endpoint:
    path: exactInputSingle
    method: GET
- name: exactOutput
  endpoint:
    path: exactOutput
    method: GET
- name: exactOutputSingle
  endpoint:
    path: exactOutputSingle
    method: GET
- name: feeAmountEnabledEvent
  endpoint:
    path: feeAmountEnabledEvent
    method: GET
- name: feeAmountTickSpacing
  endpoint:
    path: feeAmountTickSpacing
    method: GET
- name: namehash
  endpoint:
    path: /namehash
    method: POST
- name: resolveAddress
  endpoint:
    path: /UNSTOPPABLE-DOMAINS/resolveAddress
    method: GET
- name: resolveName
  endpoint:
    path: /UNSTOPPABLE-DOMAINS/resolveName
    method: GET
- name: reverseNameOf
  endpoint:
    path: /UNSTOPPABLE-DOMAINS/reverseNameOf
    method: GET
- name: canExecute
  endpoint:
    path: /VOTE/canExecute
    method: GET
- name: castVote
  endpoint:
    path: /VOTE/castVote
    method: POST
- name: castVoteBySig
  endpoint:
    path: /VOTE/castVoteBySig
    method: POST
- name: castVoteWithReason
  endpoint:
    path: /VOTE/castVoteWithReason
    method: POST
- name: castVoteWithReasonAndParams
  endpoint:
    path: /VOTE/castVoteWithReasonAndParams
    method: POST
- name: castVoteWithReasonAndParamsBySig
  endpoint:
    path: /VOTE/castVoteWithReasonAndParamsBySig
    method: POST
- name: execute
  endpoint:
    path: /VOTE/execute
    method: POST
- name: execute
  endpoint:
    path: VOTE.execute
    method: POST
- name: canExecute
  endpoint:
    path: VOTE.canExecute
    method: POST
- name: castVote
  endpoint:
    path: VOTE.castVote
    method: POST
- name: castVoteBySig
  endpoint:
    path: VOTE.castVoteBySig
    method: POST
- name: castVoteWithReason
  endpoint:
    path: VOTE.castVoteWithReason
    method: POST
- name: castVoteWithReasonAndParams
  endpoint:
    path: VOTE.castVoteWithReasonAndParams
    method: POST
- name: castVoteWithReasonAndParamsBySig
  endpoint:
    path: VOTE.castVoteWithReasonAndParamsBySig
    method: POST
- name: executeProposal
  endpoint:
    path: /executeProposal
    method: POST
- name: getAll
  endpoint:
    path: /getAll
    method: GET
- name: getAllProposals
  endpoint:
    path: /getAllProposals
    method: GET
- name: getProposalVoteCounts
  endpoint:
    path: /getProposalVoteCounts
    method: GET
- name: getVotes
  endpoint:
    path: /getVotes
    method: GET
- name: getVotesWithParams
  endpoint:
    path: /getVotesWithParams
    method: GET
- name: hashProposal
  endpoint:
    path: /hashProposal
    method: POST
- name: hasVoted
  endpoint:
    path: /hasVoted
    method: GET
- name: proposalDeadline
  endpoint:
    path: /proposalDeadline
    method: GET
- name: proposalExists
  endpoint:
    path: /proposalExists
    method: GET
- name: executeProposal
  endpoint:
    path: /executeProposal
    method: POST
    data_selector: returnType
    params: {}
- name: getAll
  endpoint:
    path: /getAll
    method: GET
    data_selector: returnType
    params: {}
- name: getAllProposals
  endpoint:
    path: /getAllProposals
    method: GET
    data_selector: returnType
    params: {}
- name: getProposalVoteCounts
  endpoint:
    path: /getProposalVoteCounts
    method: GET
    data_selector: returnType
    params: {}
- name: getVotes
  endpoint:
    path: /getVotes
    method: GET
    data_selector: returnType
    params: {}
- name: getVotesWithParams
  endpoint:
    path: /getVotesWithParams
    method: GET
    data_selector: returnType
    params: {}
- name: hashProposal
  endpoint:
    path: /hashProposal
    method: POST
    data_selector: returnType
    params: {}
- name: hasVoted
  endpoint:
    path: /hasVoted
    method: GET
    data_selector: returnType
    params: {}
- name: proposalDeadline
  endpoint:
    path: /proposalDeadline
    method: GET
    data_selector: returnType
    params: {}
- name: proposalExists
  endpoint:
    path: /proposalExists
    method: GET
    data_selector: returnType
    params: {}
- name: proposalIndex
  endpoint:
    path: /proposalIndex
    method: GET
- name: proposals
  endpoint:
    path: /proposals
    method: GET
- name: proposalSnapshot
  endpoint:
    path: /proposalSnapshot
    method: GET
- name: proposalThreshold
  endpoint:
    path: /proposalThreshold
    method: GET
- name: proposalVotes
  endpoint:
    path: /proposalVotes
    method: GET
- name: propose
  endpoint:
    path: /propose
    method: POST
- name: quorum
  endpoint:
    path: /quorum
    method: GET
- name: quorumDenominator
  endpoint:
    path: /quorumDenominator
    method: GET
- name: quorumNumeratorByBlockNumber
  endpoint:
    path: /quorumNumeratorByBlockNumber
    method: GET
- name: relay
  endpoint:
    path: /relay
    method: POST
- name: cancelOwnershipHandover
  endpoint:
    path: /cancelOwnershipHandover
    method: POST
- name: completeOwnershipHandover
  endpoint:
    path: /completeOwnershipHandover
    method: POST
- name: proposalIndex
  endpoint:
    path: /VOTE/proposalIndex
    method: GET
- name: proposals
  endpoint:
    path: /VOTE/proposals
    method: GET
- name: proposalSnapshot
  endpoint:
    path: /VOTE/proposalSnapshot
    method: GET
- name: proposalThreshold
  endpoint:
    path: /VOTE/proposalThreshold
    method: GET
- name: proposalVotes
  endpoint:
    path: /VOTE/proposalVotes
    method: GET
- name: propose
  endpoint:
    path: /VOTE/propose
    method: POST
- name: quorum
  endpoint:
    path: /VOTE/quorum
    method: GET
- name: quorumDenominator
  endpoint:
    path: /VOTE/quorumDenominator
    method: GET
- name: quorumNumeratorByBlockNumber
  endpoint:
    path: /VOTE/quorumNumeratorByBlockNumber
    method: GET
- name: relay
  endpoint:
    path: /VOTE/relay
    method: POST
- name: cancelOwnershipHandover
  endpoint:
    path: /cancelOwnershipHandover
    method: POST
- name: completeOwnershipHandover
  endpoint:
    path: /completeOwnershipHandover
    method: POST
- name: getInstalledModules
  endpoint:
    path: /getInstalledModules
    method: GET
    data_selector: returnType
- name: getModuleConfig
  endpoint:
    path: /getModuleConfig
    method: GET
    data_selector: returnType
- name: getSupportedCallbackFunctions
  endpoint:
    path: /getSupportedCallbackFunctions
    method: GET
    data_selector: returnType
- name: grantRoles
  endpoint:
    path: /grantRoles
    method: POST
    data_selector: returnType
- name: hasAllRoles
  endpoint:
    path: /hasAllRoles
    method: GET
    data_selector: returnType
- name: hasAnyRole
  endpoint:
    path: /hasAnyRole
    method: GET
    data_selector: returnType
- name: installModule
  endpoint:
    path: /installModule
    method: POST
    data_selector: returnType
- name: isGetInstalledModulesSupported
  endpoint:
    path: /isGetInstalledModulesSupported
    method: GET
    data_selector: returnType
- name: isGetModuleConfigSupported
  endpoint:
    path: /isGetModuleConfigSupported
    method: GET
    data_selector: returnType
- name: isGetSupportedCallbackFunctionsSupported
  endpoint:
    path: /isGetSupportedCallbackFunctionsSupported
    method: GET
    data_selector: returnType
- name: getInstalledModules
  endpoint:
    path: /getInstalledModules
    method: GET
    data_selector: returnType
    params: {}
- name: getModuleConfig
  endpoint:
    path: /getModuleConfig
    method: GET
    data_selector: returnType
    params: {}
- name: getSupportedCallbackFunctions
  endpoint:
    path: /getSupportedCallbackFunctions
    method: GET
    data_selector: returnType
    params: {}
- name: grantRoles
  endpoint:
    path: /grantRoles
    method: POST
    data_selector: returnType
    params: {}
- name: hasAllRoles
  endpoint:
    path: /hasAllRoles
    method: GET
    data_selector: returnType
    params: {}
- name: hasAnyRole
  endpoint:
    path: /hasAnyRole
    method: GET
    data_selector: returnType
    params: {}
- name: installModule
  endpoint:
    path: /installModule
    method: POST
    data_selector: returnType
    params: {}
- name: isGetInstalledModulesSupported
  endpoint:
    path: /isGetInstalledModulesSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isGetModuleConfigSupported
  endpoint:
    path: /isGetModuleConfigSupported
    method: GET
    data_selector: returnType
    params: {}
- name: isGetSupportedCallbackFunctionsSupported
  endpoint:
    path: /isGetSupportedCallbackFunctionsSupported
    method: GET
    data_selector: returnType
    params: {}
- name: rolesOf
  endpoint:
    path: /modules/rolesOf
    method: GET
- name: requestOwnershipHandover
  endpoint:
    path: /modules/requestOwnershipHandover
    method: POST
- name: renounceOwnership
  endpoint:
    path: /modules/renounceOwnership
    method: POST
- name: renounceRoles
  endpoint:
    path: /modules/renounceRoles
    method: POST
- name: revokeRoles
  endpoint:
    path: /modules/revokeRoles
    method: POST
- name: ownershipHandoverExpiresAt
  endpoint:
    path: /modules/ownershipHandoverExpiresAt
    method: GET
- name: owner
  endpoint:
    path: /modules/owner
    method: GET
- name: moduleInstalledEvent
  endpoint:
    path: /modules/moduleInstalledEvent
    method: POST
- name: isInstallModuleSupported
  endpoint:
    path: /modules/isInstallModuleSupported
    method: GET
- name: isUninstallModuleSupported
  endpoint:
    path: /modules/isUninstallModuleSupported
    method: GET
- name: moduleInstalledEvent
  endpoint:
    path: /modules/moduleInstalledEvent
    method: GET
- name: isInstallModuleSupported
  endpoint:
    path: /modules/isInstallModuleSupported
    method: GET
- name: isUninstallModuleSupported
  endpoint:
    path: /modules/isUninstallModuleSupported
    method: GET
- name: renounceOwnership
  endpoint:
    path: /modules/renounceOwnership
    method: POST
- name: requestOwnershipHandover
  endpoint:
    path: /modules/requestOwnershipHandover
    method: POST
- name: renounceRoles
  endpoint:
    path: /modules/renounceRoles
    method: POST
- name: revokeRoles
  endpoint:
    path: /modules/revokeRoles
    method: POST
- name: rolesOf
  endpoint:
    path: /modules/rolesOf
    method: GET
- name: getCallsStatus
  endpoint:
    path: /getCallsStatus
    method: GET
    data_selector: returnType
- name: getCapabilities
  endpoint:
    path: /getCapabilities
    method: GET
    data_selector: returnType
- name: sendBatchTransaction
  endpoint:
    path: /sendBatchTransaction
    method: POST
    data_selector: returnType
- name: sendTransaction
  endpoint:
    path: /sendTransaction
    method: POST
    data_selector: returnType
- name: getCallsStatus
  endpoint:
    path: /eip5792/getCallsStatus
    method: GET
    data_selector: returnType
    params: {}
- name: getCapabilities
  endpoint:
    path: /eip5792/getCapabilities
    method: GET
    data_selector: returnType
    params: {}
- name: batchMetadataUpdateEvent
  endpoint:
    path: /batchMetadataUpdateEvent
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
    data_selector: returnType
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
- name: module
  endpoint:
    path: /module
    method: POST
    data_selector: returnType
- name: batchMetadataUpdateEvent
  endpoint:
    path: /BatchMetadataERC1155/batchMetadataUpdateEvent
    method: POST
    data_selector: returnType
    params: {}
- name: encodeInstall
  endpoint:
    path: /BatchMetadataERC1155/encodeInstall
    method: POST
    data_selector: returnType
    params: {}
- name: install
  endpoint:
    path: /BatchMetadataERC1155/install
    method: POST
    data_selector: returnType
    params: {}
- name: module
  endpoint:
    path: /BatchMetadataERC1155/module
    method: POST
    data_selector: returnType
    params: {}
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
    data_selector: returnType
- name: getClaimCondition
  endpoint:
    path: /getClaimCondition
    method: POST
    data_selector: returnType
- name: getSaleConfig
  endpoint:
    path: /getSaleConfig
    method: POST
    data_selector: returnType
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
- name: getClaimCondition
  endpoint:
    path: /getClaimConditionByTokenId
    method: GET
- name: getSaleConfig
  endpoint:
    path: /getSaleConfig
    method: GET
- name: install
  endpoint:
    path: /install
    method: POST
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
- name: mint
  endpoint:
    path: /mint
    method: POST
    data_selector: returnType
- name: getClaimCondition
  endpoint:
    path: /getClaimCondition
    method: GET
    data_selector: returnType
- name: getSaleConfig
  endpoint:
    path: /getSaleConfig
    method: GET
    data_selector: returnType
- name: mint
  endpoint:
    path: /mint
    method: POST
- name: install
  endpoint:
    path: /install
    method: POST
- name: getClaimCondition
  endpoint:
    path: /getClaimCondition
    method: GET
- name: getSaleConfig
  endpoint:
    path: /getSaleConfig
    method: GET
- name: setSaleConfig
  endpoint:
    path: /setSaleConfig
    method: POST
    data_selector: returnType
    params: {}
- name: setClaimCondition
  endpoint:
    path: /setClaimCondition
    method: POST
    data_selector: returnType
    params: {}
- name: getClaimCondition
  endpoint:
    path: /getClaimCondition
    method: GET
    data_selector: returnType
    params: {}
- name: getSaleConfig
  endpoint:
    path: /getSaleConfig
    method: GET
    data_selector: returnType
    params: {}
- name: mint
  endpoint:
    path: /mint
    method: POST
    data_selector: returnType
    params: {}
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
    params: {}
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
    data_selector: returnType
    params: {}
- name: module
  endpoint:
    path: /module
    method: POST
    data_selector: returnType
    params: {}
- name: setSaleConfig
  endpoint:
    path: /setSaleConfig
    method: POST
    data_selector: returnType
- name: setClaimCondition
  endpoint:
    path: /setClaimCondition
    method: POST
    data_selector: returnType
- name: getSaleConfig
  endpoint:
    path: /getSaleConfig
    method: GET
    data_selector: returnType
- name: getClaimCondition
  endpoint:
    path: /getClaimCondition
    method: GET
    data_selector: returnType
- name: mint
  endpoint:
    path: /mint
    method: POST
    data_selector: returnType
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
    data_selector: returnType
- name: module
  endpoint:
    path: /module
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
- name: generateMintSignature
  endpoint:
    path: /generateMintSignature
    method: POST
- name: generateMintSignature
  endpoint:
    path: /generateMintSignature
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /MintableERC721/encodeInstall
    method: POST
    data_selector: returnType
    params: {}
- name: generateMintSignature
  endpoint:
    path: /MintableERC721/generateMintSignature
    method: POST
    data_selector: returnType
    params: {}
- name: getSaleConfig
  endpoint:
    path: /MintableERC721/getSaleConfig
    method: POST
    data_selector: returnType
    params: {}
- name: install
  endpoint:
    path: /MintableERC721/install
    method: POST
    data_selector: returnType
    params: {}
- name: getSaleConfig
  endpoint:
    path: /getSaleConfig
    method: GET
    data_selector: returnType
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
- name: mintWithRole
  endpoint:
    path: /mintWithRole
    method: POST
    data_selector: returnType
- name: mintWithSignature
  endpoint:
    path: /mintWithSignature
    method: POST
    data_selector: returnType
- name: setSaleConfig
  endpoint:
    path: /setSaleConfig
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: POST
    data_selector: returnType
- name: generateMintSignature
  endpoint:
    path: /generateMintSignature
    method: POST
    data_selector: returnType
- name: batchMetadataUpdateEvent
  endpoint:
    path: /OpenEditionMetadataERC721/batchMetadataUpdateEvent
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /OpenEditionMetadataERC721/encodeInstall
    method: POST
    data_selector: returnType
- name: install
  endpoint:
    path: /OpenEditionMetadataERC721/install
    method: POST
    data_selector: returnType
- name: setSharedMetadata
  endpoint:
    path: /OpenEditionMetadataERC721/setSharedMetadata
    method: POST
    data_selector: returnType
- name: sharedMetadataUpdatedEvent
  endpoint:
    path: /OpenEditionMetadataERC721/sharedMetadataUpdatedEvent
    method: POST
    data_selector: returnType
- name: batchMetadataUpdateEvent
  endpoint:
    path: /batchMetadataUpdateEvent
    method: GET
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /encodeInstall
    method: GET
    data_selector: returnType
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
- name: module
  endpoint:
    path: /module
    method: POST
    data_selector: returnType
- name: setSharedMetadata
  endpoint:
    path: /setSharedMetadata
    method: POST
    data_selector: returnType
- name: sharedMetadataUpdatedEvent
  endpoint:
    path: /sharedMetadataUpdatedEvent
    method: GET
    data_selector: returnType
- name: royaltyInfo
  endpoint:
    path: royaltyInfo
    method: POST
    data_selector: returnType
    params: {}
- name: setDefaultRoyaltyInfo
  endpoint:
    path: setDefaultRoyaltyInfo
    method: POST
    data_selector: returnType
    params: {}
- name: setRoyaltyInfoForToken
  endpoint:
    path: setRoyaltyInfoForToken
    method: POST
    data_selector: returnType
    params: {}
- name: setRoyaltyInfoForToken
  endpoint:
    path: /setRoyaltyInfoForToken
    method: POST
    data_selector: returnType
- name: setDefaultRoyaltyInfo
  endpoint:
    path: /setDefaultRoyaltyInfo
    method: POST
    data_selector: returnType
- name: getRoyaltyInfoForToken
  endpoint:
    path: /getRoyaltyInfoForToken
    method: GET
    data_selector: returnType
- name: getDefaultRoyaltyInfo
  endpoint:
    path: /getDefaultRoyaltyInfo
    method: GET
    data_selector: returnType
- name: install
  endpoint:
    path: /install
    method: POST
    data_selector: returnType
- name: module
  endpoint:
    path: /module
    method: POST
    data_selector: returnType
- name: setDefaultRoyaltyInfo
  endpoint:
    path: /RoyaltyERC721/setDefaultRoyaltyInfo
    method: POST
- name: getDefaultRoyaltyInfo
  endpoint:
    path: /RoyaltyERC721/getDefaultRoyaltyInfo
    method: GET
- name: getRoyaltyInfoForToken
  endpoint:
    path: /RoyaltyERC721/getRoyaltyInfoForToken
    method: GET
- name: getTransferValidationFunction
  endpoint:
    path: /RoyaltyERC721/getTransferValidationFunction
    method: GET
- name: setTransferValidator
  endpoint:
    path: /RoyaltyERC721/setTransferValidator
    method: POST
- name: install
  endpoint:
    path: /RoyaltyERC721/install
    method: POST
- name: module
  endpoint:
    path: /RoyaltyERC721/module
    method: POST
- name: royaltyInfo
  endpoint:
    path: /RoyaltyERC721/royaltyInfo
    method: GET
- name: setDefaultRoyaltyInfo
  endpoint:
    path: /RoyaltyERC721.setDefaultRoyaltyInfo
    method: POST
    data_selector: returnType
    params: {}
- name: getDefaultRoyaltyInfo
  endpoint:
    path: /RoyaltyERC721.getDefaultRoyaltyInfo
    method: POST
    data_selector: returnType
    params: {}
- name: getRoyaltyInfoForToken
  endpoint:
    path: /RoyaltyERC721.getRoyaltyInfoForToken
    method: POST
    data_selector: returnType
    params: {}
- name: getTransferValidationFunction
  endpoint:
    path: /RoyaltyERC721.getTransferValidationFunction
    method: POST
    data_selector: returnType
    params: {}
- name: getTransferValidator
  endpoint:
    path: /RoyaltyERC721.getTransferValidator
    method: POST
    data_selector: returnType
    params: {}
- name: install
  endpoint:
    path: /RoyaltyERC721.install
    method: POST
    data_selector: returnType
    params: {}
- name: module
  endpoint:
    path: /RoyaltyERC721.module
    method: POST
    data_selector: returnType
    params: {}
- name: royaltyInfo
  endpoint:
    path: /RoyaltyERC721.royaltyInfo
    method: POST
    data_selector: returnType
    params: {}
- name: encodeInstall
  endpoint:
    path: /TransferableERC1155/encodeInstall
    method: POST
    data_selector: returnType
- name: install
  endpoint:
    path: /TransferableERC1155/install
    method: POST
    data_selector: returnType
- name: isTransferEnabled
  endpoint:
    path: /TransferableERC1155/isTransferEnabled
    method: POST
    data_selector: returnType
- name: isTransferEnabledFor
  endpoint:
    path: /TransferableERC1155/isTransferEnabledFor
    method: POST
    data_selector: returnType
- name: module
  endpoint:
    path: /TransferableERC1155/module
    method: POST
    data_selector: returnType
- name: encodeInstall
  endpoint:
    path: /TransferableERC1155/encodeInstall
    method: POST
    data_selector: returnType
- name: install
  endpoint:
    path: /TransferableERC1155/install
    method: POST
    data_selector: returnType
- name: isTransferEnabled
  endpoint:
    path: /TransferableERC1155/isTransferEnabled
    method: GET
    data_selector: returnType
- name: isTransferEnabledFor
  endpoint:
    path: /TransferableERC1155/isTransferEnabledFor
    method: GET
    data_selector: returnType
- name: module
  endpoint:
    path: /TransferableERC1155/module
    method: POST
    data_selector: returnType
- name: setTransferable
  endpoint:
    path: /setTransferable
    method: POST
    data_selector: returnType
- name: setTransferableFor
  endpoint:
    path: /setTransferableFor
    method: POST
    data_selector: returnType
- name: isTransferEnabled
  endpoint:
    path: /isTransferEnabled
    method: GET
    data_selector: returnType
- name: isTransferEnabledFor
  endpoint:
    path: /isTransferEnabledFor
    method: GET
    data_selector: returnType
- name: setTransferable
  endpoint:
    path: /setTransferable
    method: POST
    data_selector: returnType
    params: {}
- name: setTransferableFor
  endpoint:
    path: /setTransferableFor
    method: POST
    data_selector: returnType
    params: {}
- name: Buy
  endpoint:
    path: /Buy/prepare
    method: POST
    data_selector: quote
    params:
      originChainId: 1
      originTokenAddress: NATIVE_TOKEN_ADDRESS
      destinationChainId: 10
      destinationTokenAddress: NATIVE_TOKEN_ADDRESS
      amount: toWei('0.01')
- name: Onramp
  endpoint:
    path: /Onramp/prepare
    method: POST
    data_selector: transactionLink
    params: {}
- name: Buy.prepare
  endpoint:
    path: /prepare
    method: POST
    data_selector: quote
    params: {}
- name: Buy.quote
  endpoint:
    path: /quote
    method: GET
    data_selector: quote
    params: {}
- name: Onramp.prepare
  endpoint:
    path: /onramp/prepare
    method: POST
    data_selector: transaction
    params: {}
- name: Onramp.status
  endpoint:
    path: /Onramp/status
    method: GET
- name: Sell.prepare
  endpoint:
    path: /Sell/prepare
    method: POST
- name: Webhook.parse
  endpoint:
    path: /Webhook/parse
    method: POST
- name: chains
  endpoint:
    path: /chains
    method: GET
- name: routes
  endpoint:
    path: /routes
    method: GET
- name: status
  endpoint:
    path: /status
    method: GET
- name: TOKENS.claimRewards
  endpoint:
    path: /TOKENS/claimRewards
    method: POST
- name: OnrampStatus
  endpoint:
    path: /onramp/status
    method: GET
- name: SellPrepare
  endpoint:
    path: /sell/prepare
    method: POST
- name: WebhookParse
  endpoint:
    path: /webhook/parse
    method: POST
- name: Chains
  endpoint:
    path: /chains
    method: GET
- name: Routes
  endpoint:
    path: /routes
    method: GET
- name: Status
  endpoint:
    path: /status
    method: GET
- name: ClaimRewards
  endpoint:
    path: /tokens/claimRewards
    method: POST
- name: createWallet
  endpoint:
    path: /createWallet
    method: POST
    data_selector: wallet
    params: {}
- name: getUser
  endpoint:
    path: /getUser
    method: GET
    data_selector: user
    params: {}
- name: authenticate
  endpoint:
    path: /authenticate
    method: POST
    data_selector: auth
    params: {}
- name: authenticateWithRedirect
  endpoint:
    path: /authenticateWithRedirect
    method: GET
    data_selector: authRedirect
    params: {}
- name: createWallet
  endpoint:
    path: /wallets/create
    method: POST
    data_selector: returnType
    params: {}
- name: authenticate
  endpoint:
    path: /wallets/authenticate
    method: POST
    data_selector: returnType
    params: {}
- name: authenticateWithRedirect
  endpoint:
    path: /wallets/authenticateWithRedirect
    method: POST
    data_selector: returnType
    params: {}
- name: getUser
  endpoint:
    path: /wallets/getUser
    method: GET
    data_selector: returnType
    params: {}
- name: deploySmartAccount
  endpoint:
    path: /wallets/deploySmartAccount
    method: POST
    data_selector: returnType
    params: {}
- name: getActiveWalletConnectSessions
  endpoint:
    path: /getActiveWalletConnectSessions
    method: GET
- name: getProfiles
  endpoint:
    path: /getProfiles
    method: GET
- name: getUserEmail
  endpoint:
    path: /getUserEmail
    method: GET
- name: getUserPhoneNumber
  endpoint:
    path: /getUserPhoneNumber
    method: GET
- name: createUnsignedUserOp
  endpoint:
    path: /createUnsignedUserOp
    method: POST
- name: createWallet
  endpoint:
    path: /createWallet
    method: POST
- name: createWalletAdapter
  endpoint:
    path: /createWalletAdapter
    method: POST
- name: createWalletConnectClient
  endpoint:
    path: /createWalletConnectClient
    method: POST
- name: createWalletConnectSession
  endpoint:
    path: /createWalletConnectSession
    method: POST
- name: disconnectWalletConnectSession
  endpoint:
    path: /disconnectWalletConnectSession
    method: POST
- name: ecosystemWallet
  endpoint:
    path: /ecosystemWallet
    method: POST
- name: getActiveWalletConnectSessions
  endpoint:
    path: /getActiveWalletConnectSessions
    method: GET
- name: getProfiles
  endpoint:
    path: /getProfiles
    method: GET
- name: getUserEmail
  endpoint:
    path: /getUserEmail
    method: GET
- name: getUserPhoneNumber
  endpoint:
    path: /getUserPhoneNumber
    method: GET
- name: inAppWallet
  endpoint:
    path: /inAppWallet
    method: POST
- name: prepareUserOp
  endpoint:
    path: /prepareUserOp
    method: POST
    data_selector: returnType
    params: {}
- name: estimateUserOpGas
  endpoint:
    path: /estimateUserOpGas
    method: POST
    data_selector: returnType
    params: {}
- name: getPaymasterAndData
  endpoint:
    path: /getPaymasterAndData
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpGasFees
  endpoint:
    path: /getUserOpGasFees
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpHash
  endpoint:
    path: /getUserOpHash
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpReceipt
  endpoint:
    path: /getUserOpReceipt
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpReceiptRaw
  endpoint:
    path: /getUserOpReceiptRaw
    method: POST
    data_selector: returnType
    params: {}
- name: predictSmartAccountAddress
  endpoint:
    path: /predictSmartAccountAddress
    method: POST
    data_selector: returnType
    params: {}
- name: check_verification_status
  endpoint:
    path: /checkVerificationStatus
    method: GET
    data_selector: returnType
- name: fetch_published_contract
  endpoint:
    path: /fetchPublishedContract
    method: GET
    data_selector: returnType
- name: createUnsignedUserOp
  endpoint:
    path: /createUnsignedUserOp
    method: POST
    data_selector: returnType
- name: generateAccount
  endpoint:
    path: /generateAccount
    method: POST
    data_selector: returnType
- name: getWalletBalance
  endpoint:
    path: /getWalletBalance
    method: GET
    data_selector: returnType
- name: injectedProvider
  endpoint:
    path: /injectedProvider
    method: GET
    data_selector: returnType
- name: getSocialIcon
  endpoint:
    path: /getSocialIcon
    method: GET
    data_selector: returnType
- name: hasStoredPasskey
  endpoint:
    path: /hasStoredPasskey
    method: GET
    data_selector: returnType
- name: bundleUserOp
  endpoint:
    path: /bundleUserOp
    method: POST
    data_selector: returnType
- name: createAndSignUserOp
  endpoint:
    path: /createAndSignUserOp
    method: POST
    data_selector: returnType
- name: sendBatchTransaction
  endpoint:
    path: /sendBatchTransaction
    method: POST
    data_selector: returnType
- name: getInitializeTransaction
  endpoint:
    path: /getInitializeTransaction
    method: POST
- name: prepareUserOp
  endpoint:
    path: /prepareUserOp
    method: POST
    data_selector: returnType
    params: {}
- name: estimateUserOpGas
  endpoint:
    path: /estimateUserOpGas
    method: POST
    data_selector: returnType
    params: {}
- name: getPaymasterAndData
  endpoint:
    path: /getPaymasterAndData
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpGasFees
  endpoint:
    path: /getUserOpGasFees
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpHash
  endpoint:
    path: /getUserOpHash
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpReceipt
  endpoint:
    path: /getUserOpReceipt
    method: POST
    data_selector: returnType
    params: {}
- name: getUserOpReceiptRaw
  endpoint:
    path: /getUserOpReceiptRaw
    method: POST
    data_selector: returnType
    params: {}
- name: predictSmartAccountAddress
  endpoint:
    path: /predictSmartAccountAddress
    method: POST
    data_selector: returnType
    params: {}
- name: check_verification_status
  endpoint:
    path: /checkVerificationStatus
    method: GET
    data_selector: address
- name: fetch_published_contract
  endpoint:
    path: /fetchPublishedContract
    method: GET
    data_selector: address
- name: getApprovalForTransaction
  endpoint:
    path: /getApprovalForTransaction
    method: POST
    data_selector: ''
    params: {}
- name: getOrDeployInfraForPublishedContract
  endpoint:
    path: /getOrDeployInfraForPublishedContract
    method: POST
    data_selector: ''
    params: {}
- name: getContractEvents
  endpoint:
    path: /getContractEvents
    method: GET
    data_selector: ''
    params: {}
- name: parseEventLogs
  endpoint:
    path: /parseEventLogs
    method: POST
    data_selector: ''
    params: {}
- name: prepareEvent
  endpoint:
    path: /prepareEvent
    method: POST
    data_selector: ''
    params: {}
- name: watchContractEvents
  endpoint:
    path: /watchContractEvents
    method: GET
    data_selector: ''
    params: {}
- name: resolveMethod
  endpoint:
    path: /resolveMethod
    method: POST
    data_selector: ''
    params: {}
- name: detectMethod
  endpoint:
    path: /detectMethod
    method: POST
    data_selector: ''
    params: {}
- name: isContractDeployed
  endpoint:
    path: /isContractDeployed
    method: GET
    data_selector: ''
    params: {}
- name: resolveImplementation
  endpoint:
    path: /resolveImplementation
    method: GET
    data_selector: ''
    params: {}
- name: getInitializeTransaction
  endpoint:
    path: /getInitializeTransaction
    method: POST
- name: getApprovalForTransaction
  endpoint:
    path: /getApprovalForTransaction
    method: POST
    data_selector: returnType
    params: {}
- name: sendTransaction
  endpoint:
    path: /sendTransaction
    method: POST
    data_selector: returnType
    params: {}
- name: sendBatchTransaction
  endpoint:
    path: /sendBatchTransaction
    method: POST
    data_selector: returnType
    params: {}
- name: estimateGas
  endpoint:
    path: /estimateGas
    method: POST
    data_selector: returnType
    params: {}
- name: prepareTransaction
  endpoint:
    path: /prepareTransaction
    method: POST
    data_selector: returnType
    params: {}
- name: readContract
  endpoint:
    path: /readContract
    method: GET
    data_selector: returnType
    params: {}
- name: sendTransaction
  endpoint:
    path: /sendTransaction
    method: POST
    data_selector: returnType
- name: sendBatchTransaction
  endpoint:
    path: /sendBatchTransaction
    method: POST
    data_selector: returnType
- name: estimateGas
  endpoint:
    path: /estimateGas
    method: POST
    data_selector: returnType
- name: getContractEvents
  endpoint:
    method: GET
- name: getContractNFTs
  endpoint:
    method: GET
- name: getNFT
  endpoint:
    method: GET
- name: getContractEvents
  endpoint:
    path: /getContractEvents
    method: GET
- name: getContractNFTs
  endpoint:
    path: /getContractNFTs
    method: GET
- name: getNFT
  endpoint:
    path: /getNFT
    method: GET
- name: createServerWallet
  endpoint:
    path: /createServerWallet
    method: POST
    data_selector: returnType
- name: getServerWallets
  endpoint:
    path: /getServerWallets
    method: GET
    data_selector: returnType
- name: getTransactionStatus
  endpoint:
    path: /getTransactionStatus
    method: GET
    data_selector: returnType
- name: searchTransactions
  endpoint:
    path: /searchTransactions
    method: POST
    data_selector: returnType
- name: waitForTransactionHash
  endpoint:
    path: /waitForTransactionHash
    method: POST
    data_selector: returnType
- name: getOwnedNFTs
  endpoint:
    path: /getOwnedNFTs
    method: GET
    data_selector: returnType
- name: getOwnedTokens
  endpoint:
    path: /getOwnedTokens
    method: GET
    data_selector: returnType
- name: getTransactions
  endpoint:
    path: /getTransactions
    method: GET
    data_selector: returnType
- name: createServerWallet
  endpoint:
    path: /createServerWallet
    method: POST
    data_selector: returnType
- name: getServerWallets
  endpoint:
    path: /getServerWallets
    method: GET
    data_selector: returnType
- name: getTransactionStatus
  endpoint:
    path: /getTransactionStatus
    method: GET
    data_selector: returnType
- name: searchTransactions
  endpoint:
    path: /searchTransactions
    method: POST
    data_selector: returnType
- name: serverWallet
  endpoint:
    path: /serverWallet
    method: POST
    data_selector: returnType
- name: waitForTransactionHash
  endpoint:
    path: /waitForTransactionHash
    method: POST
    data_selector: returnType
- name: getSocialProfiles
  endpoint:
    path: /getSocialProfiles
    method: GET
    data_selector: returnType
    params: {}
- name: createAuth
  endpoint:
    path: /createAuth
    method: POST
    data_selector: returnType
    params: {}
- name: isErc6492Signature
  endpoint:
    path: /isErc6492Signature
    method: POST
    data_selector: returnType
    params: {}
- name: parseErc6492Signature
  endpoint:
    path: /parseErc6492Signature
    method: POST
    data_selector: returnType
    params: {}
- name: serializeErc6492Signature
  endpoint:
    path: /serializeErc6492Signature
    method: POST
    data_selector: returnType
    params: {}
- name: signLoginPayload
  endpoint:
    path: /signLoginPayload
    method: POST
    data_selector: returnType
    params: {}
- name: verifyContractWalletSignature
  endpoint:
    path: /verifyContractWalletSignature
    method: POST
    data_selector: returnType
    params: {}
- name: verifyEOASignature
  endpoint:
    path: /verifyEOASignature
    method: POST
    data_selector: returnType
    params: {}
- name: getSocialProfiles
  endpoint:
    path: /getSocialProfiles
    method: GET
- name: createAuth
  endpoint:
    path: /createAuth
    method: POST
- name: TokenIcon
  endpoint:
    path: /token/icon
    method: GET
- name: TokenName
  endpoint:
    path: /token/name
    method: GET
- name: TokenIcon
  endpoint:
    path: /token/icon
    method: GET
- name: TokenName
  endpoint:
    path: /token/name
    method: GET
- name: eth_blockNumber
  endpoint:
    path: /eth/blockNumber
    method: GET
    data_selector: returnType
- name: eth_call
  endpoint:
    path: /eth/call
    method: POST
    data_selector: returnType
- name: eth_estimateGas
  endpoint:
    path: /eth/estimateGas
    method: POST
    data_selector: returnType
- name: eth_blockNumber
  endpoint:
    path: /eth/blockNumber
    method: GET
    data_selector: result
- name: eth_call
  endpoint:
    path: /eth/call
    method: POST
    data_selector: result
- name: eth_estimateGas
  endpoint:
    path: /eth/estimateGas
    method: POST
    data_selector: result
- name: eth_getTransactionReceipt
  endpoint:
    path: /eth_getTransactionReceipt
    method: GET
    data_selector: returnType
    params: {}
- name: eth_gasPrice
  endpoint:
    path: /eth_gasPrice
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getBalance
  endpoint:
    path: /eth_getBalance
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getBlockByHash
  endpoint:
    path: /eth_getBlockByHash
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getBlockByNumber
  endpoint:
    path: /eth_getBlockByNumber
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getCode
  endpoint:
    path: /eth_getCode
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getLogs
  endpoint:
    path: /eth_getLogs
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getStorageAt
  endpoint:
    path: /eth_getStorageAt
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getTransactionByHash
  endpoint:
    path: /eth_getTransactionByHash
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getTransactionCount
  endpoint:
    path: /eth_getTransactionCount
    method: GET
    data_selector: returnType
    params: {}
- name: eth_getTransactionReceipt
  endpoint:
    path: /eth_getTransactionReceipt
    method: GET
    data_selector: returnType
- name: eth_gasPrice
  endpoint:
    path: /eth_gasPrice
    method: GET
    data_selector: returnType
- name: eth_getBalance
  endpoint:
    path: /eth_getBalance
    method: GET
    data_selector: returnType
- name: eth_getBlockByHash
  endpoint:
    path: /eth_getBlockByHash
    method: GET
    data_selector: returnType
- name: eth_getBlockByNumber
  endpoint:
    path: /eth_getBlockByNumber
    method: GET
    data_selector: returnType
- name: eth_getCode
  endpoint:
    path: /eth_getCode
    method: GET
    data_selector: returnType
- name: eth_getLogs
  endpoint:
    path: /eth_getLogs
    method: GET
    data_selector: returnType
- name: eth_getStorageAt
  endpoint:
    path: /eth_getStorageAt
    method: GET
    data_selector: returnType
- name: eth_getTransactionByHash
  endpoint:
    path: /eth_getTransactionByHash
    method: GET
    data_selector: returnType
- name: eth_getTransactionCount
  endpoint:
    path: /eth_getTransactionCount
    method: GET
    data_selector: returnType
- name: getContractPublisher
  endpoint:
    path: /getContractPublisher
    method: GET
- name: getDefaultToken
  endpoint:
    path: /getDefaultToken
    method: GET
- name: getLastAuthProvider
  endpoint:
    path: /getLastAuthProvider
    method: GET
- name: boolToBytes
  endpoint:
    path: /boolToBytes
    method: GET
- name: getContractPublisher
  endpoint:
    path: /getContractPublisher
    method: GET
- name: getDefaultToken
  endpoint:
    path: /getDefaultToken
    method: GET
- name: getLastAuthProvider
  endpoint:
    path: /getLastAuthProvider
    method: GET
- name: boolToBytes
  endpoint:
    path: /boolToBytes
    method: GET
- name: address
  endpoint:
    path: /getAddress
    method: GET
    data_selector: address
    params: {}
- name: getAddress
  endpoint:
    path: /utils/getAddress
    method: GET
    data_selector: address
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: returnType
- name: account
  endpoint:
    method: POST
- name: buy_with_crypto_history
  endpoint:
    path: /getBuyWithCryptoHistory
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: result
    params: {}
- name: buy_with_fiat_quote
  endpoint:
    path: /getBuyWithFiatQuote
    method: GET
    data_selector: returnType
- name: buy_with_crypto_quote
  endpoint:
    path: /getPostOnRampQuote
    method: GET
    data_selector: returnType
- name: create7702MinimalAccount
  endpoint:
    path: /create7702MinimalAccount
    method: POST
    data_selector: returnType
- name: randomPrivateKey
  endpoint:
    path: /randomPrivateKey
    method: GET
    data_selector: returnType
- name: getInstalledWallets
  endpoint:
    path: /getInstalledWallets
    method: GET
    data_selector: returnType
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transactionData
- name: getBuyWithCryptoHistory
  endpoint:
    path: /getBuyWithCryptoHistory
    method: GET
- name: swap_tokens
  endpoint:
    path: /bridge/swap
    method: GET
- name: get_routes
  endpoint:
    path: /payments/routes
    method: GET
- name: token_prices
  endpoint:
    path: /payments/tokens
    method: GET
- name: getBuyWithFiatQuote
  endpoint:
    method: GET
- name: getBuyWithFiatStatus
  endpoint:
    method: GET
- name: getPostOnRampQuote
  endpoint:
    method: GET
- name: prepareCreateToken
  endpoint:
    path: /prepareCreateToken
    method: POST
- name: isSwapRequiredPostOnramp
  endpoint:
    path: /isSwapRequiredPostOnramp
    method: POST
- name: isPoolRouterEnabled
  endpoint:
    path: /isPoolRouterEnabled
    method: POST
- name: create7702MinimalAccount
  endpoint:
    path: /create7702MinimalAccount
    method: POST
    data_selector: returnType
    params: {}
- name: randomPrivateKey
  endpoint:
    path: /randomPrivateKey
    method: GET
    data_selector: returnType
    params: {}
- name: swap
  endpoint:
    path: /bridge/swap
    method: POST
- name: getRoutes
  endpoint:
    path: /payments/routes
    method: GET
- name: getTokenPrices
  endpoint:
    path: /payments/tokens
    method: GET
notes:
- New Bridge Contracts have been deployed
- Custom slippage tolerance can be specified on the Bridge Swap endpoint
- 'Standard Chat Format: Follows industry-standard conversational AI patterns'
- 'Better Message History: Support for multi-turn conversations with role-based messages'
- 'Structured Context: Type-safe object format instead of string parsing'
- 'Enhanced Session Management: More flexible session handling'
- 'Future-Proof: Aligned with modern chat API standards'
- New Bridge API allows cross-chain swaps and transfers.
- Requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Supports batch transactions and EIP-5792 compliance
- An Account object with enhanced capabilities including batch transactions and EIP-5792
  support.
- An Account object with enhanced capabilities including batch transactions and EIP-5792
  support
- API supports enhanced capabilities for batch transactions.
- Uses OAuth2 with refresh token — requires setup of connected app in Farcaster
- Some endpoints may require additional parameters based on the request
- A client is necessary for most functions in the thirdweb SDK.
- Requires setup of Thirdweb Client with secret key.
- Supports batch transactions.
- Batch transactions are supported and may require additional setup.
- Uses OAuth2 with refresh token — requires setup of connected app in Thirdweb
- Some objects may not return expected results in certain scenarios
- Cross-chain swaps - Exchange tokens across 50+ supported chains
- Real-time quotes - Get up-to-date pricing and execution estimates
- Route optimization - Find the best path for any token pair
errors:
- '400: Invalid parameters, malformed request, or unsupported chain'
- '401: Invalid authentication credentials or insufficient permissions'
- '500: Internal server error'
- '502: Upstream bundler provider error'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Invalid client credentials or token.'
- '400 Bad Request: Ensure the request body is correctly formatted.'
- '401 Unauthorized: Check if the token is valid and has the required scopes'
- '404 Not Found: Verify the endpoint path and parameters'
- '500 Internal Server Error: Retry the request later'
- 'INVALID_ARGUMENT: Check the parameters passed to the transaction.'
- 'INSUFFICIENT_FUNDS: Ensure the account has enough funds for the transaction.'
- 'CALL_REVERTED: The transaction was rejected by the smart contract.'
- '401 Unauthorized: Check OAuth token and permissions.'
- '500 Internal Server Error: Retry the request later.'
- 'INVALID_CREDENTIALS: Check your client ID and secret'
- 'UNAUTHORIZED: Token may have expired or is invalid'
- 'RATE_LIMIT_EXCEEDED: Too many requests made in a short time'
auth_info:
  mentioned_objects:
  - Account
  - ThirdwebClient
  - AuthorizationRequest
  - PreparedTransaction
  - WalletSendCallsId
  - GetCallsStatusResponse
  - GetCapabilitiesResult
  - SignedAuthorization
  - SignableMessage
  - SerializableTransaction
  - ox__TypedData
  - SendTransactionOption
client:
  base_url: https://api.thirdweb.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
