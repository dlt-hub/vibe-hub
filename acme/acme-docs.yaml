resources:
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: objects
- name: statements
  endpoint:
    path: /v1/statements
    method: GET
    data_selector: object
- name: refunds
  endpoint:
    path: /v1/refunds
    method: GET
    data_selector: object
- name: hosted_payments
  endpoint:
    path: /v1/hosted-payments
    method: GET
    data_selector: object
- name: direct_debit_authorizations
  endpoint:
    path: /v1/direct-debit-authorizations
    method: GET
    data_selector: object
- name: direct_debit_payments
  endpoint:
    path: /v1/direct-debit-payments
    method: GET
    data_selector: object
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: object
- name: batch_payments
  endpoint:
    path: /v1/payment-batches
    method: GET
    data_selector: object
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      order: DESC
      limit: 10
- name: statements
  endpoint:
    path: /v1/statements
    method: GET
    data_selector: data
    params:
      order: DESC
      limit: 10
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      order: DESC
      limit: 10
- name: statements
  endpoint:
    path: /v1/statements
    method: GET
    data_selector: data
    params:
      order: DESC
      limit: 10
- name: payment_batches
  endpoint:
    path: /v1/payment-batches
    method: GET
    data_selector: payments
- name: create_batch_payment
  endpoint:
    path: /v1/payment-batches
    method: POST
    data_selector: id
- name: get_batch_payment
  endpoint:
    path: /v1/payment-batches/{id}
    method: GET
    data_selector: id
- name: Payments
  endpoint:
    path: /payments
    method: GET
    data_selector: account_numbers
    params: {}
- name: Direct Debit Payments
  endpoint:
    path: /direct-debit-payments
    method: GET
    data_selector: customer_references
    params: {}
- name: Hosted Payments
  endpoint:
    path: /hosted-payments
    method: GET
    data_selector: payment_method_ids
    params: {}
- name: payment_batches
  endpoint:
    path: /v1/payment-batches
    method: GET
    data_selector: records
- name: create_batch_payment
  endpoint:
    path: /v1/payment-batches
    method: POST
    data_selector: id
- name: get_batch_payment
  endpoint:
    path: /v1/payment-batches/{id}
    method: GET
    data_selector: id
- name: Payments
  endpoint:
    path: /payments/test
    method: POST
    data_selector: payments
    params: {}
- name: Direct Debit Payments
  endpoint:
    path: /direct-debit/test
    method: POST
    data_selector: direct_debits
    params: {}
- name: Hosted Payments
  endpoint:
    path: /hosted-payments/test
    method: POST
    data_selector: hosted_payments
    params: {}
- name: List Transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: Create a test transaction
  endpoint:
    path: /reference/post-transactions
    method: POST
- name: statements
  endpoint:
    path: /reference/get-statements
    method: GET
- name: statement
  endpoint:
    path: /reference/get-statements-id
    method: GET
- name: create_statement
  endpoint:
    path: /reference/post-statements
    method: POST
- name: List Transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: Create a test transaction
  endpoint:
    path: /reference/post-transactions
    method: POST
- name: statements
  endpoint:
    path: /reference/get-statements
    method: GET
- name: list_hosted_payments
  endpoint:
    path: /reference/get-hosted-payments
    method: GET
- name: create_hosted_payment
  endpoint:
    path: /reference/post-hosted-payments
    method: POST
- name: get_hosted_payment
  endpoint:
    path: /reference/get-hosted-payments-id
    method: GET
- name: direct_debit_authorization
  endpoint:
    path: /reference/get-direct-debit-authorizations
    method: GET
- name: create_direct_debit_authorization
  endpoint:
    path: /reference/post-direct-debit-authorizations
    method: POST
- name: get_direct_debit_authorization
  endpoint:
    path: /reference/get-direct-debit-authorizations-id
    method: GET
- name: cancel_direct_debit_authorization
  endpoint:
    path: /reference/post-direct-debit-authorizations-id-cancel
    method: POST
- name: Direct Debit Authorizations
  endpoint:
    path: /reference/get-direct-debit-authorizations
    method: GET
- name: Create Direct Debit Authorization
  endpoint:
    path: /reference/post-direct-debit-authorizations
    method: POST
- name: Get Direct Debit Authorization
  endpoint:
    path: /reference/get-direct-debit-authorizations-id
    method: GET
- name: Cancel Direct Debit Authorization
  endpoint:
    path: /reference/post-direct-debit-authorizations-id-cancel
    method: POST
- name: List Direct Debit Payments
  endpoint:
    path: /reference/get-direct-debit-payments
    method: GET
- name: Create a Direct Debit Payment
  endpoint:
    path: /reference/post-direct-debit-payments
    method: POST
- name: Get a Direct Debit Payment
  endpoint:
    path: /reference/get-direct-debit-payments-id
    method: GET
- name: List Direct Debit Payments
  endpoint:
    path: /reference/get-direct-debit-payments
    method: GET
- name: Create a Direct Debit Payment
  endpoint:
    path: /reference/post-direct-debit-payments
    method: POST
- name: Get a Direct Debit Payment
  endpoint:
    path: /reference/get-direct-debit-payments-id
    method: GET
- name: create_batch_direct_debit_payment
  endpoint:
    path: /reference/post-direct-debit-payment-batches
    method: POST
- name: list_batch_direct_debit_payments
  endpoint:
    path: /reference/get-direct-debit-payment-batches
    method: GET
- name: get_batch_direct_debit_payment
  endpoint:
    path: /reference/get-direct-debit-payment-batch-id
    method: GET
- name: Create a Batch Direct Debit Payment
  endpoint:
    path: /reference/post-direct-debit-payment-batches
- name: List Batch Direct Debit Payments
  endpoint:
    path: /reference/get-direct-debit-payment-batches
- name: Get a Batch Direct Debit Payment
  endpoint:
    path: /reference/get-direct-debit-payment-batch-id
- name: list_direct_debit_banks
  endpoint:
    path: /reference/get-direct-debit-banks
    method: GET
- name: list_direct_debit_banks
  endpoint:
    path: /reference/get-direct-debit-banks
    method: GET
- name: List Internal Accounts
  endpoint:
    path: /reference/get-internal-accounts
- name: Get an Internal Account
  endpoint:
    path: /reference/get-internal-accounts-id
- name: Look up account balance
  endpoint:
    path: /reference/post-internal-accounts-id-balance
- name: List Internal Accounts
  endpoint:
    path: /reference/get-internal-accounts
- name: Get an Internal Account
  endpoint:
    path: /reference/get-internal-accounts-id
- name: Look up account balance
  endpoint:
    path: /reference/post-internal-accounts-id-balance
- name: payments
  endpoint:
    path: /reference/get-payments
    method: GET
- name: list_batch_payments
  endpoint:
    path: /reference/list-batch-payments
    method: GET
- name: create_batch_payment
  endpoint:
    path: /reference/post-batch-payments
    method: POST
- name: get_batch_payment
  endpoint:
    path: /reference/get-batch-payments-id
    method: GET
- name: list_batch_payments
  endpoint:
    path: /reference/list-batch-payments
    method: GET
- name: create_batch_payment
  endpoint:
    path: /reference/post-batch-payments
    method: POST
- name: get_batch_payment
  endpoint:
    path: /reference/get-batch-payments-id
    method: GET
- name: list_refunds
  endpoint:
    path: /reference/get-refunds
    method: GET
- name: create_refund
  endpoint:
    path: /reference/post-refunds
    method: POST
- name: get_refund
  endpoint:
    path: /reference/get-refunds-id
    method: GET
- name: list_refunds
  endpoint:
    path: /reference/get-refunds
    method: GET
- name: create_refund
  endpoint:
    path: /reference/post-refunds
    method: POST
- name: get_refund
  endpoint:
    path: /reference/get-refunds-id
    method: GET
- name: create_payment_qr_code
  endpoint:
    path: /reference/post-payment-qr-codes
    method: POST
- name: create_payment_qr_code
  endpoint:
    path: /reference/post-payment-qr-codes
    method: POST
- name: list_tracked_qr_code_payments
  endpoint:
    path: /reference/list-tracked-payment-qr-codes
    method: GET
- name: create_tracked_qr_code
  endpoint:
    path: /reference/post-tracked-payment-qr-codes
    method: POST
- name: get_tracked_qr_code_payment
  endpoint:
    path: /reference/get-tracked-payment-qr-codes
    method: GET
- name: lookup_tracked_qr_code
  endpoint:
    path: /reference/lookup-tracked-payment-qr-codes
    method: GET
- name: list_tracked_qr_code_payments
  endpoint:
    path: /reference/list-tracked-payment-qr-codes
    method: GET
- name: create_tracked_qr_code
  endpoint:
    path: /reference/post-tracked-payment-qr-codes
    method: POST
- name: get_tracked_qr_code_payment
  endpoint:
    path: /reference/get-tracked-payment-qr-codes
    method: GET
- name: lookup_tracked_qr_code
  endpoint:
    path: /reference/lookup-tracked-payment-qr-codes
    method: GET
- name: payment_proxy_lookup
  endpoint:
    path: /reference/post-payment-proxy-lookup
    method: POST
- name: lookup_payment_proxy_address
  endpoint:
    path: /reference/post-payment-proxy-lookup
    method: POST
- name: verify_identity
  endpoint:
    path: /reference/post-bank-account-verifications
    method: POST
- name: verify_identity
  endpoint:
    path: /reference/post-bank-account-verifications
    method: POST
- name: forex_rate_lookup
  endpoint:
    path: /reference/forex-rate-lookup
    method: GET
    data_selector: rates
    params: {}
- name: create_forex_booking
  endpoint:
    path: /reference/create-a-forex-booking
    method: POST
    data_selector: booking
    params: {}
notes:
- Webhook signing keys must be stored securely. Do not store them in source control,
  web applications, or mobile applications.
- Reject the webhook request if the timestamp in the HTTP header is more than 1 minute
  away from the current time.
- Webhooks for transactions created will be received for new transactions.
- End-of-day statements may contain a large number of transactions.
- New transactions are available immediately after processing.
- Use the `after` query parameter to retrieve newer transactions.
- Payments in a batch share a common payment type, payment date, currency, and source
  account.
- The batch will be submitted together in a single file to the bank.
- Payments created within a batch are sent to the bank over files.
- The batch itself also has an ID.
- You may use PGP to encrypt sensitive or confidential information before sending
  it to Acme.
- Acme exposes a REST API to facilitate money movement and treasury operations by
  abstracting away the different underlying banking services and protocols.
- The API operates over HTTPS and all requests and responses are JSON encoded.
- You must convert major currency units to the smallest unit before sending to Acme
  (e.g. send `1050` for SGD $10.50).
- All amounts will be returned in the smallest unit. Your system must convert these
  back to major units if needed for display.
- Amounts must not include decimal points. Submissions with decimal points (e.g. `10.50`)
  will be rejected.
- Acme APIs support idempotency for safely retrying requests without accidentally
  duplicating the result.
- 'For POST requests, in order to perform an idempotent request, you have to provide
  an `Idempotency-Key: <key>` header in the request for the endpoint that supports
  it.'
- By default, all List * endpoints return paginated results in reverse chronological
  order and support cursor based pagination.
- Banks and the eGIRO Industry Aggregator may undergo scheduled maintenance downtimes.
- 'During these downtimes, the affected Acme APIs will return HTTP status code 503
  (Service Unavailable) with the following response body: {"message": "Bank is under
  maintenance."}'
- Please ensure that your applications and systems handle HTTP 503 errors appropriately.
- 'During these downtimes, the affected Acme APIs will return HTTP status code 503
  (Service Unavailable) with the following response body: {"message": "Bank is under
  maintenance."}.'
- Create a test mode statement to simulate receiving the bank's end-of-day statement.
- This API only supports PayNow in Singapore.
errors:
- Reject the webhook request if the signature that you have calculated does not match
  one of the signatures in the Acme-Signature HTTP header.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Invalid type for batch
- Invalid payment date for batch
- Invalid currency for batch
- Invalid source account for batch
- 'HTTP 503: Service Unavailable'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.tryacme.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
