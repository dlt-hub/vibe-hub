resources:
- name: getAllEvents
  endpoint:
    path: /getAllEvents
    method: POST
- name: getEvent
  endpoint:
    path: /getEvent
    method: POST
- name: trackSummary
  endpoint:
    path: /trackSummary
    method: POST
- name: noonSummary
  endpoint:
    path: /noonSummary
    method: POST
- name: trackCii
  endpoint:
    path: /trackCii
    method: POST
- name: noonCii
  endpoint:
    path: /noonCii
    method: POST
- name: getAllEvents
  endpoint:
    path: /getAllEvents
    method: POST
- name: trackSummary
  endpoint:
    path: /trackSummary
    method: POST
- name: noonSummary
  endpoint:
    path: /noonSummary
    method: POST
- name: trackCii
  endpoint:
    path: /trackCii
    method: POST
- name: noonCii
  endpoint:
    path: /noonCii
    method: POST
- name: getEvent
  endpoint:
    path: /getEvent
    method: POST
- name: getEvent
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.getEvent
    params: {}
- name: trackSummary
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.trackSummary
    params: {}
- name: noonSummary
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.noonSummary
    params: {}
- name: getEvent
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.getEvent
    params:
      id: string
- name: trackSummary
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.trackSummary
    params:
      query:
        imo: number
        from: string
        to: string
- name: noonSummary
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.noonSummary
    params:
      query:
        imo: number
        from: string
        to: string
- name: observed_weather
  endpoint:
    path: /path/to/observed_weather
    method: GET
    data_selector: records
- name: bunker_analysis_data
  endpoint:
    path: /path/to/bunker_analysis_data
    method: GET
    data_selector: records
- name: bunker_data
  endpoint:
    path: /path/to/bunker_data
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /path/to/event
    method: GET
    data_selector: records
- name: observedWeather
  endpoint:
    path: /observedWeather
    method: GET
    data_selector: records
- name: bunkerData
  endpoint:
    path: /bunkerData
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: records
- name: EventFacts
  endpoint:
    path: /events
    method: GET
    data_selector: items
    params: {}
- name: GetAllEventsQueryInput
  endpoint:
    path: /events/query
    method: POST
    data_selector: items
    params: {}
- name: TrackSummary
  endpoint:
    path: /track/summary
    method: GET
    data_selector: summary
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: items
    params:
      limit: 100
notes:
- Vessel Insights API is a GraphQL API.
- Uses OAuth for authentication.
- Calculations are based on normalized AIS tracks & ABB's weather and digital twin
  models.
- Customer can subscribe a vessel to Vessel Insights API to use summary queries.
- Calculations are based on noon report data received from the customer's fleet.
- Requires setup of OAuth2 authentication.
errors:
- '200 OK: Successful operation'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request parameters'
auth_info:
  mentioned_objects:
  - Shipping Auth0 API
  - Vessel Insights Subscription API
  - Insert Noon API
client:
  base_url: https://api.voyageoptimization.abb.com/vessel/insights/v2
  auth:
    type: oauth2
    token_url: https://identity.genix.abilityplatform.abb/public/api/oauth2/token
    client_id: '{client_id}'
    client_secret: '{client_secret}'
source_metadata: null
