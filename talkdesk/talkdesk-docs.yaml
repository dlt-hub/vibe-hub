resources:
- name: Attributes API
  endpoint:
    path: /docs/attributes-api
    method: GET
- name: Callback API
  endpoint:
    path: /docs/callback-api
    method: GET
- name: Campaign Management API
  endpoint:
    path: /docs/campaign-management-api
    method: GET
- name: Contacts API
  endpoint:
    path: /docs/contacts-api
    method: GET
- name: Do Not Call Lists API
  endpoint:
    path: /docs/do-not-call-lists-api
    method: GET
- name: Fallback Experience API
  endpoint:
    path: /docs/fallback-experience-api
    method: GET
- name: Flows API
  endpoint:
    path: /docs/flows-api
    method: GET
- name: Prompts API
  endpoint:
    path: /docs/prompts-api
    method: GET
- name: Phone Validation API
  endpoint:
    path: /docs/phone-validation-api
    method: GET
- name: Recordings API
  endpoint:
    path: /docs/recordingsapi
    method: GET
- name: Record Lists API
  endpoint:
    path: /docs/record-lists-api
    method: GET
- name: Ring Groups API
  endpoint:
    path: /docs/ring-groups-api
    method: GET
- name: Simulated Email API
  endpoint:
    path: /docs/simulated-email-api
    method: GET
- name: Scheduled Time Off API
  endpoint:
    path: /docs/scheduled-time-off-api
    method: GET
- name: Voice Biometrics Opt-In API
  endpoint:
    path: /docs/voice-biometrics-opt-in-api
    method: GET
- name: Voice Biometrics Opt-Out API
  endpoint:
    path: /docs/voice-biometrics-opt-out-api
    method: GET
- name: Identity Insights API
  endpoint:
    path: /docs/identity-insights-api
    method: GET
- name: Accounts API
  endpoint:
    params:
      scope: account:read
- name: Apps API
  endpoint:
    params:
      scope:
      - apps:read
      - apps:write
- name: Attributes API
  endpoint:
    params:
      scope:
      - attributes:read
      - attributes:write
- name: Bulk Import API
  endpoint:
    params:
      scope:
      - bulk-imports:read
      - bulk-imports:write
- name: Callback API
  endpoint:
    params:
      scope: callback:write
- name: Campaign Management API
  endpoint:
    params:
      scope:
      - campaigns:read
      - campaigns:write
- name: Case API
  endpoint:
    params:
      scope:
      - cases-public:write
      - case-fields-public:write
      - cases-public:read
- name: Contacts API
  endpoint:
    params:
      scope:
      - contacts:read
      - contacts:write
- name: Customer Feedback Management (CFM) API
  endpoint:
    params:
      scope: cfm-public:write
- name: Do Not Call Lists (DNCL) API
  endpoint:
    params:
      scope: do-not-call-lists:manage
- name: Explore API
  endpoint:
    params:
      scope:
      - data-reports:write
      - data-reports:read
- name: Events API
  endpoint:
    params:
      scope: events:write
- name: Fallback Experience API
  endpoint:
    params:
      scope:
      - continuity-settings-activation:write
      - continuity-settings-activation:read
- name: Flows API
  endpoint:
    params:
      scope: flows-interactions:start
- name: Guardian Cases API
  endpoint:
    params:
      scope: guardian-cases:read
- name: Guardian Sessions API
  endpoint:
    params:
      scope: guardian-session:read
- name: Guardian Users API
  endpoint:
    params:
      scope: guardian-users:read
- name: Guardian Call Quality API
  endpoint:
    params:
      scope: guardian-call-quality:read
- name: Identity Insights API
  endpoint:
    params:
      scope: identity-activity:read
- name: Live API
  endpoint:
    params:
      scope:
      - live-queries:read
      - live-subscriptions:read
      - live-subscriptions:write
- name: Prompts API
  endpoint:
    params:
      scope:
      - prompts:write
      - prompts:delete
      - prompts:read
- name: Phone Validation API
  endpoint:
    params:
      scope: identity-phone-validation:read
- name: Recordings API
  endpoint:
    params:
      scope: recordings:read
- name: Record Lists API
  endpoint:
    params:
      scope: record-lists:manage
- name: Reporting API
  endpoint:
    params:
      scope:
      - reports:write
      - reports:read
- name: Ring Groups API
  endpoint:
    params:
      scope:
      - ring-groups:read
      - user-ring-groups:read
- name: Simulated Email API
  endpoint:
    params:
      scope: simulated-emails:write
- name: Time Off API
  endpoint:
    params:
      scope: wfm-aion-public:write
- name: Users API
  endpoint:
    params:
      scope: users:read
- name: Usage-Manage API
  endpoint:
    params:
      scope:
      - account-wallets:read
      - bucket-configurations:read
- name: Voice Biometrics Opt-In API
  endpoint:
    params:
      scope:
      - voicebiometrics-consent:write
      - voicebiometrics-consent:read
- name: Voice Biometrics Opt-Out API
  endpoint:
    params:
      scope: voicebiometrics-enroll:write
- name: Webhook Trigger API
  endpoint:
    params:
      scope:
      - webhooks-trigger:write
      - webhooks-trigger:read
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: _embedded.users
    params:
      per_page: '50'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: webchat
  endpoint:
    path: /talkdeskchatsdk.js
    method: GET
    data_selector: ''
    params: {}
- name: chat_widget_methods
  endpoint:
    path: /docs/chat-widget-v1#chat-widget-methods
    method: GET
    data_selector: methods
- name: chat_widget_events
  endpoint:
    path: /docs/chat-widget-v1#chat-widget-events
    method: GET
    data_selector: events
- name: chat_widget_methods
  endpoint:
    path: /docs/chat-widget-v2#chat-widget-methods
    method: GET
    data_selector: methods
    params: {}
- name: chat_widget_events
  endpoint:
    path: /docs/chat-widget-v2#chat-widget-events
    method: GET
    data_selector: events
    params: {}
- name: webchat
  endpoint:
    path: /v2/talkdeskchatsdk
    method: GET
- name: webchat
  endpoint:
    path: /v2/talkdeskchatsdk.js
    method: GET
    data_selector: ''
    params: {}
- name: props
  endpoint:
    path: /docs/chat-widget-v2#props-configuration
    method: GET
    data_selector: props
    params: {}
- name: configs
  endpoint:
    path: /docs/chat-widget-v2#configs-configuration
    method: GET
    data_selector: configs
    params: {}
- name: chat_widget
  endpoint:
    path: /v2/talkdeskchatsdk.js
    method: GET
    data_selector: chat widget script
    params: {}
- name: app_versions
  endpoint:
    path: /api/app_versions
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts-api
    method: GET
- name: Accounts API
  endpoint:
    path: /accountsapi
    method: GET
- name: Apps API
  endpoint:
    path: /appsapi
    method: GET
- name: Events API
  endpoint:
    path: /events-api
    method: GET
- name: users_me
  endpoint:
    path: /users/me
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: app_installed
  endpoint:
    path: /app.installed
    method: GET
- name: app_updated
  endpoint:
    path: /app.updated
    method: GET
- name: app_information
  endpoint:
    path: /reference/appsid
    method: GET
- name: installation_information
  endpoint:
    path: /reference/appsapp_idinstallationsid
    method: GET
- name: users_enabled
  endpoint:
    path: /reference/appsapp_idinstallationsidusers
    method: GET
- name: installation_state
  endpoint:
    path: /reference/appsapp_idinstallationsidstate
    method: POST
- name: subscription_information
  endpoint:
    path: /reference/appsapp_idinstallationsidsubscription
    method: GET
- name: activate_channels
  endpoint:
    path: /reference/appsapp_idinstallationsidchannels
    method: POST
- name: acknowledged_transition
  endpoint:
    path: /reference/appsapp_idinstallationsinstallation_idcredentialsclient_idstate
    method: POST
- name: rotate_credentials
  endpoint:
    path: /reference/credentials-rotation
    method: POST
- name: list_of_apps
  endpoint:
    path: /reference/list-of-apps
    method: GET
- name: installation_channels
  endpoint:
    path: /reference/installation-channels
    method: GET
- name: installation_trial_information
  endpoint:
    path: /reference/installation-trial-information
    method: GET
- name: event_from_app_id
  endpoint:
    path: /reference/event-from-app-id
    method: GET
- name: event_subscription
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: apps
  endpoint:
    path: /apps/{app_id}/installations/{id}
    method: GET
    data_selector: records
- name: app_installed
  endpoint:
    path: /app/installed
    method: GET
- name: app_updated
  endpoint:
    path: /app/updated
    method: GET
- name: app_uninstalled
  endpoint:
    path: /app/uninstalled
    method: GET
- name: user_logout
  endpoint:
    path: /user/logout
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: campaign_management
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: create_ticket
  endpoint:
    path: /actions/create_ticket
    method: POST
    data_selector: inputs
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: auth
- name: action
  endpoint:
    path: /new_action
    method: POST
    data_selector: data
    params: {}
- name: agents
  endpoint:
    path: /agent_sync
    method: POST
    data_selector: agents
- name: contact_sync
  endpoint:
    path: /const_sync
    method: POST
    data_selector: contacts
    params: {}
- name: interaction
  endpoint:
    path: /new_interaction
    method: POST
    data_selector: data
    params: {}
- name: init_td_embedded
  endpoint:
    path: /talkdesk-embedded/latest/generic/index.html
    method: POST
    data_selector: data
    params:
      int: < name_of_your_custom_integration >
      env: < prd-us | prd-ca | prd-eu | prd-au >
      aid: < agent_crm_id >
      view: < external | workspace | headless >
      app: < conversation | agent-assist | live | canvas-embedded ... >
      show_cti_status: <true | false>
      renderMode: < host | renderer >
- name: action_status
  endpoint:
    path: /actions/status
    method: POST
    data_selector: status
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: flow_trigger
  endpoint:
    path: /services/data/vXX.X/actions/flow
    method: POST
    data_selector: records
- name: users
  endpoint:
    path: /api/v2/search.json
    method: GET
    data_selector: results
    params:
      query: type:user role:"end-user" phone:"{{phone_number}}"
- name: panels
  endpoint:
    path: /api/panels
    method: GET
    data_selector: data
    params: {}
- name: array_variable
  endpoint:
    data_selector: array
    params: {}
- name: array_of_objects_variable
  endpoint:
    data_selector: array_of_objects
    params: {}
- name: custom_field
  endpoint:
    data_selector: custom_html_jsx
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: queues
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: role
- name: Render State
  endpoint:
    path: /docs/render-state
    method: GET
    data_selector: configuration
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /v1/events
    method: GET
- name: Canvas Trigger
  endpoint:
    path: /canvas/trigger
    method: POST
- name: Available Talkdesk Events
  endpoint:
    path: /events
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tracking_order
  endpoint:
    path: /CustomerArea/PublicArea_Detail
    method: GET
    data_selector: records
    params:
      tracking_number: Context.getVariable("tracking_number")
- name: cards
  endpoint:
    path: /docs/cards
    method: POST
    data_selector: cards
- name: variables
  endpoint:
    path: /docs/variables
    method: POST
    data_selector: variables
- name: Get active user team
  endpoint:
    path: /get_user_team
    method: GET
    data_selector: outputs
    params:
      user_id: e8077283-19e6-4a9b-890d-c88784851a19
- name: attributes
  endpoint:
    path: /docs/attributes-api
    method: GET
    data_selector: records
- name: callback
  endpoint:
    path: /docs/callback-api
    method: GET
    data_selector: records
- name: campaign_management
  endpoint:
    path: /docs/campaign-management-api
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /docs/contacts-api
    method: GET
    data_selector: records
- name: do_not_call_lists
  endpoint:
    path: /docs/do-not-call-lists-api
    method: GET
    data_selector: records
- name: fallback_experience
  endpoint:
    path: /docs/fallback-experience-api
    method: GET
    data_selector: records
- name: flows
  endpoint:
    path: /docs/flows-api
    method: GET
    data_selector: records
- name: identity_insights
  endpoint:
    path: /docs/identity-insights-api
    method: GET
    data_selector: records
- name: prompts
  endpoint:
    path: /docs/prompts-api
    method: GET
    data_selector: records
- name: phone_validation
  endpoint:
    path: /docs/phone-validation-api
    method: GET
    data_selector: records
- name: recordings
  endpoint:
    path: /docs/recordingsapi
    method: GET
    data_selector: records
- name: record_lists
  endpoint:
    path: /docs/record-lists-api
    method: GET
    data_selector: records
- name: ring_groups
  endpoint:
    path: /docs/ring-groups-api
    method: GET
    data_selector: records
- name: simulated_email
  endpoint:
    path: /docs/simulated-email-api
    method: GET
    data_selector: records
- name: voice_biometrics_opt_out
  endpoint:
    path: /docs/voice-biometrics-opt-out-api
    method: GET
    data_selector: records
- name: voice_biometrics_opt_in
  endpoint:
    path: /docs/voice-biometrics-opt-in-api
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /reference/billing-insights-get-accounts
    method: GET
- name: products
  endpoint:
    path: /reference/billing-insights-get-products
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/billing-insights-get-subscriptions
    method: GET
- name: invoices
  endpoint:
    path: /reference/billing-insights-get-invoices
    method: GET
- name: usage/month
  endpoint:
    path: /reference/billing-insights-get-monthly-usage
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
    data_selector: contacts
- name: contact_by_id
  endpoint:
    path: /reference/contacts/contact_id
    method: GET
    data_selector: contact
- name: contact_removal
  endpoint:
    path: /reference/contacts/contact_id
    method: DELETE
    data_selector: response
- name: contact_integrations
  endpoint:
    path: /reference/contacts/contact_id/integrations
    method: GET
    data_selector: integrations
- name: enable_disable_fallback_experience
  endpoint:
    path: /reference/enabledisable-fallback-experience
- name: get_fallback_experience_state
  endpoint:
    path: /reference/fallback-experience-state
- name: set_fallback_experience_configuration
  endpoint:
    path: /reference/set-fallback-experience-configuration
- name: get_fallback_experience_configuration
  endpoint:
    path: /reference/get-fallback-experience-configuration
- name: Get accounts
  endpoint:
    path: /reference/get-accounts
    method: GET
- name: Get accounts by account number
  endpoint:
    path: /reference/get-accounts-by-account-number
    method: GET
- name: Get all type list names
  endpoint:
    path: /reference/get-all-type-list-names
    method: GET
- name: Get policy details by account number
  endpoint:
    path: /reference/get-policy-details-by-account-number
    method: GET
- name: Get policy details by policy number
  endpoint:
    path: /reference/get-policy-details-by-policy-number
    method: GET
- name: Get claims for an account number
  endpoint:
    path: /reference/get-claims-for-an-account-number
    method: GET
- name: Get claim detail for claim number
  endpoint:
    path: /reference/get-claim-detail-for-claim-number
    method: GET
- name: Get account details
  endpoint:
    path: /reference/get-account-details
    method: GET
- name: Get billing card details
  endpoint:
    path: /reference/get-billing-card-details
    method: GET
- name: identity_insights
  endpoint:
    path: /docs/identity-insights-api
    method: GET
- name: phone_validation
  endpoint:
    path: /docs/phone-validation-api
    method: GET
- name: voice_biometrics_opt_in
  endpoint:
    path: /docs/voice-biometrics-opt-in-api
    method: GET
- name: voice_biometrics_opt_out
  endpoint:
    path: /docs/voice-biometrics-opt-out-api
    method: GET
- name: remove_contact_enrollment
  endpoint:
    path: /voicebiometricscontacts/{contact_id}/enrollment
    method: DELETE
    data_selector: response
    params: {}
- name: set_contact_enrolled
  endpoint:
    path: /voicebiometricscontacts/{contact_id}/enrollment
    method: PUT
    data_selector: response
    params: {}
- name: patient_omnichannel_report
  endpoint:
    path: /data/reports/patient_omnichannel_report/jobs
    method: GET
    data_selector: entries
- name: create_prompt
  endpoint:
    path: /reference/create-a-prompt
    method: POST
- name: request_upload_link
  endpoint:
    path: /reference/request-link-to-upload-audio-file
    method: POST
- name: delete_prompt
  endpoint:
    path: /reference/delete-a-prompt
    method: DELETE
- name: update_prompt
  endpoint:
    path: /reference/update-a-prompt
    method: PATCH
- name: list_prompt
  endpoint:
    path: /reference/list-a-prompt
    method: GET
- name: get_prompt_detail
  endpoint:
    path: /reference/get-a-prompt-by-its-id
    method: GET
- name: download_audio_file
  endpoint:
    path: /reference/download-audio-file
    method: GET
- name: get_prompt_usage
  endpoint:
    path: /reference/get-a-prompt-usage
    method: GET
- name: get_prompt_flows
  endpoint:
    path: /reference/get-a-prompt-usage-copy
    method: GET
- name: all_ring_groups
  endpoint:
    path: /reference/list-all-ring-groups
    method: GET
- name: users_assigned_to_ring_group
  endpoint:
    path: /reference/users-assigned-to-ring-group
    method: GET
- name: teams
  endpoint:
    path: /industries-scheduler/teams
    method: GET
- name: availabilities
  endpoint:
    path: /industries-scheduler/availabilities
    method: POST
- name: appointments
  endpoint:
    path: /industries-scheduler/appointments
    method: GET
- name: create_appointment
  endpoint:
    path: /industries-scheduler/appointments
    method: POST
- name: cancel_appointment
  endpoint:
    path: /industries-scheduler/appointment/cancel
    method: POST
- name: advanced_dialer_calls_report
  endpoint:
    path: /data/reports/advanced_dialer_calls_report/jobs
    method: GET
    data_selector: entries
    params: {}
- name: va_conversation_markers
  endpoint:
    path: /data/reports/va_conversation_markers/jobs
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /data/reports/audit_logs/jobs
    method: GET
    data_selector: entries
    params: {}
- name: audit_logs_report
  endpoint:
    path: /docs/audit-logs-report
    method: GET
- name: calls_report
  endpoint:
    path: /docs/calls-report
    method: GET
- name: calls_report_all_data_status
  endpoint:
    path: /docs/calls-report-all-data-status
    method: GET
- name: contacts_report
  endpoint:
    path: /docs/contacts-report
    method: GET
- name: contacts_report_all_data_status
  endpoint:
    path: /docs/contacts-report-all-data-status
    method: GET
- name: explore_calls_report
  endpoint:
    path: /docs/explore-calls-report
    method: GET
- name: feedback_flow_report
  endpoint:
    path: /docs/feedback-flow-report
    method: GET
- name: interaction_custom_fields_report
  endpoint:
    path: /docs/interaction-custom-fields-report
    method: GET
- name: messaging_contacts_report
  endpoint:
    path: /docs/messaging-contacts-report
    method: GET
- name: messaging_traffic_report
  endpoint:
    path: /docs/messaging-traffic-report
    method: GET
- name: outbound_dialer_calls_report
  endpoint:
    path: /docs/outbound-dialer-calls-report
    method: GET
- name: quality_management_evaluation_analysis_report
  endpoint:
    path: /docs/quality-management-evaluation-analysis-report
    method: GET
- name: ring_attempts_report
  endpoint:
    path: /docs/ring-attempts-report
    method: GET
- name: studio_flow_execution_report
  endpoint:
    path: /docs/studio-flow-execution-report
    method: GET
- name: user_status_report
  endpoint:
    path: /docs/user-status-explore
    method: GET
- name: wfm_schedule_adherence_report
  endpoint:
    path: /docs/wfm-schedule-adherence-report
    method: GET
- name: wfm_timeseries_report
  endpoint:
    path: /docs/wfm-timeseries-report
    method: GET
- name: calls
  endpoint:
    path: /data/reports/calls/jobs
    method: GET
    data_selector: entries
- name: explore_calls_all_data_status
  endpoint:
    path: /data/reports/explore_calls_all_data_status/jobs
    method: GET
- name: contacts
  endpoint:
    path: /data/reports/contacts/jobs
    method: GET
    data_selector: entries
    params: {}
- name: contacts_all_data_status
  endpoint:
    path: /data/reports/contacts_all_data_status/jobs
    method: GET
    data_selector: entries
- name: erc_omnichannel_report
  endpoint:
    path: /data/reports/erc_omnichannel_report/jobs
    method: GET
- name: entries
  endpoint:
    path: /path/to/entries
    method: GET
    data_selector: entries
    params: {}
- name: explore_calls
  endpoint:
    path: /data/reports/explore_calls/jobs
    method: GET
    data_selector: entries
    params: {}
- name: feedback_flow
  endpoint:
    path: /data/reports/feedback_flow/jobs
    method: GET
    data_selector: entries
- name: messaging_contacts
  endpoint:
    path: /data/reports/messaging_contacts/jobs
    method: GET
    data_selector: entries
    params: {}
- name: messaging_traffic
  endpoint:
    path: /data/reports/messaging_traffic/jobs
    method: GET
    data_selector: entries
- name: outbound_dialer_calls
  endpoint:
    path: /data/reports/outbound_dialer_calls/jobs/
    method: GET
    data_selector: report_data
    params: {}
- name: qm_evaluation_analysis
  endpoint:
    path: /data/reports/qm_evaluation_analysis/jobs
    method: GET
    data_selector: records
    params: {}
- name: ring_attempts
  endpoint:
    path: /data/reports/ring_attempts/jobs
    method: GET
    data_selector: entries
    params: {}
- name: studio_flow_execution_report
  endpoint:
    path: /data/reports/studio_flow_execution/jobs
    method: GET
    data_selector: entries
    params: {}
- name: user_status
  endpoint:
    path: /data/reports/user_status/jobs
    method: GET
    data_selector: entries
    params: {}
- name: WFM Schedule Adherence Report
  endpoint:
    path: /data/reports/adherence/jobs
    method: GET
    data_selector: records
    params:
      report_type: adherence
- name: wfm_team_schedule_report
  endpoint:
    path: /wfm_team_schedule_report/jobs
    method: GET
    data_selector: records
    params: {}
- name: timeseries_report
  endpoint:
    path: /data/reports/timeseries_report/jobs
    method: GET
    data_selector: records
    params: {}
- name: guardian_sessions
  endpoint:
    path: /docs/guardian-sessions-api
    method: GET
- name: guardian_users
  endpoint:
    path: /docs/guardian-users-api
    method: GET
- name: guardian_cases
  endpoint:
    path: /docs/guardian-cases-api
    method: GET
- name: guardian_call_quality
  endpoint:
    path: /docs/guardian-call-quality-api
    method: GET
- name: all_users
  endpoint:
    path: /reference/guardianusers
    method: GET
- name: user_by_identifier
  endpoint:
    path: /reference/guardianusersid
    method: GET
- name: user_roles_history
  endpoint:
    path: /reference/guardianusersidroles
    method: GET
- name: cases
  endpoint:
    path: /reference/guardian-cases
    method: GET
    data_selector: cases
    params: {}
- name: Accounts
  endpoint:
    path: /docs/accountsapi
    method: GET
- name: Case
  endpoint:
    path: /docs/case-api
    method: GET
- name: Customer Feedback Management
  endpoint:
    path: /docs/cfm-api
    method: GET
- name: Bulk Import
  endpoint:
    path: /docs/bulk-import-api
    method: GET
- name: Usage-Manager
  endpoint:
    path: /docs/usage-manager-api
    method: GET
- name: Users
  endpoint:
    path: /docs/usersapi
    method: GET
- name: Webhook Trigger
  endpoint:
    path: /docs/webhook-trigger-api
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: user_details
  endpoint:
    path: /reference/usersid
    method: GET
- name: user_info
  endpoint:
    path: /reference/usersme
    method: GET
- name: SCIM API
  endpoint:
    path: /docs/scim-api
    method: GET
- name: user
  endpoint:
    path: /scim/v2/Users
    method: POST
    data_selector: data
    params: {}
- name: group
  endpoint:
    path: /scim/v2/Groups
    method: POST
    data_selector: data
    params: {}
- name: create_case
  endpoint:
    path: /reference/create-a-new-case
    method: POST
    data_selector: case
    params: {}
- name: update_case
  endpoint:
    path: /reference/update-a-case
    method: PUT
    data_selector: case
    params: {}
- name: get_case_list
  endpoint:
    path: /reference/get-case-list
    method: GET
    data_selector: cases
    params: {}
- name: get_case_details
  endpoint:
    path: /reference/get-case-details
    method: GET
    data_selector: case
    params: {}
- name: delete_cases_softly
  endpoint:
    path: /reference/delete-cases-softly
    method: DELETE
    data_selector: deleted_case
    params: {}
- name: delete_cases_permanently
  endpoint:
    path: /reference/delete-cases-permanently
    method: DELETE
    data_selector: deleted_case
    params: {}
- name: get_case_fields
  endpoint:
    path: /reference/get-a-list-of-case-fields
    method: GET
    data_selector: fields
    params: {}
- name: update_case_note
  endpoint:
    path: /reference/update-a-case-note
    method: PUT
    data_selector: note
    params: {}
- name: Get the ERC e-commerce integrations customer by ID
  endpoint:
    path: /reference/integrations-customer-by-id
    method: GET
- name: Get the ERC e-commerce customer orders provided by the customer ID
  endpoint:
    path: /reference/customer-orders-provided-by-the-customer-id
    method: GET
- name: Get the ERC e-commerce Cart provided by the Customer ID or Cart ID
  endpoint:
    path: /reference/integrations-erc-e-commerce-cart-by-customer-id-or-cart-id
    method: GET
- name: Get the ERC e-commerce customer order items for the provided customer ID and
    order ID
  endpoint:
    path: /reference/customer-order-items-for-the-provided-customer-id-and-order-id
    method: GET
- name: Get the ERC e-commerce customer order for the provided customer and order
    ID
  endpoint:
    path: /reference/customer-order-for-the-provided-customer-and-order-id
    method: GET
- name: Change the shipping address of a customer's order
  endpoint:
    path: /reference/change-the-shipping-address
    method: POST
- name: Get the ERC e-commerce customer's most recent order for the provided customer
    ID
  endpoint:
    path: /reference/most-recent-order-for-the-provided-customer-id
    method: GET
- name: Cancel a customer's order
  endpoint:
    path: /reference/cancel-a-customers-order
    method: POST
- name: Cancel items from the ERC e-commerce customer order with the provided customer
    and order ID.
  endpoint:
    path: /reference/cancel-item-from-the-erc-e-commerce-cart-with-customer-id-or-cart-id
    method: POST
- name: Get the ERC e-commerce orders provided by the account ID
  endpoint:
    path: /reference/orders-provided-by-the-account-id
    method: GET
- name: See the products of the store integrated with Talkdesk
  endpoint:
    path: /reference/search-the-products-of-the-store
    method: GET
- name: instantiate_trial
  endpoint:
    path: /reference/instantiate-a-trial
    method: POST
- name: get_contract_actions
  endpoint:
    path: /reference/get-contract-actions
    method: GET
- name: get_reseller_contract_information
  endpoint:
    path: /reference/get-reseller-contract-information
    method: GET
- name: create_contract_actions
  endpoint:
    path: /reference/create-contract-actions
    method: POST
- name: time_off_created
  endpoint:
    path: /docs/a-time-off-is-created-in-wfm
    method: POST
- name: time_off_updated
  endpoint:
    path: /docs/a-time-off-is-updated-in-wfm
    method: POST
- name: time_off_deleted
  endpoint:
    path: /docs/a-time-off-is-deleted-in-wfm
    method: POST
- name: time_off_creation
  endpoint:
    path: /time-off
    method: POST
    data_selector: time_off
    params: {}
- name: time_off
  endpoint:
    path: /api/v1/time_off
    method: POST
    data_selector: data
    params: {}
- name: time_off_deleted
  endpoint:
    path: /api/v1/time_off/deleted
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_status
  endpoint:
    path: /reports/user_status/jobs
    method: GET
    data_selector: entries
    params: {}
- name: end_user_session
  endpoint:
    path: /oauth/end_user_session
    method: POST
- name: end_user_session
  endpoint:
    path: /oauth/end_user_session
    method: POST
    data_selector: '204'
    params:
      user_id: string
- name: app_details
  endpoint:
    path: /apps/{app_id}
    method: GET
    data_selector: id
- name: app_information
  endpoint:
    path: /apps/app_id
    method: GET
- name: app_information
  endpoint:
    path: /apps/{app_id}
    method: GET
- name: installation_information
  endpoint:
    path: /apps/{app_id}/installations/{id}
    method: GET
- name: installation
  endpoint:
    path: /apps/{app_id}/installations/{id}
    method: GET
    data_selector: id
    params: {}
- name: users_for_an_installation
  endpoint:
    path: /apps/app_id/installations/id/users
    method: GET
- name: users_for_installation
  endpoint:
    path: /apps/{app_id}/installations/{id}/users
    method: GET
- name: users
  endpoint:
    path: /apps/{app_id}/installations/{installation_id}/users
    method: GET
    data_selector: _embedded.users
    params:
      app_id: required
      id: required
- name: installation_state
  endpoint:
    path: /apps/{app_id}/installations/{id}/state
    method: POST
- name: installation_subscription
  endpoint:
    path: /apps/{app_id}/installations/{id}/subscription
    method: GET
- name: Installation Channels
  endpoint:
    path: /apps/app_id/installations/id/channels
    method: GET
- name: installation_channels
  endpoint:
    path: /apps/{app_id}/installations/{id}/channels
    method: GET
- name: channels
  endpoint:
    path: /apps/{app_id}/installations/{installation_id}/channels
    method: GET
    data_selector: _embedded.channels
- name: installation_channels
  endpoint:
    path: /apps/{app_id}/installations/{id}/channels
    method: POST
- name: credentials_transition
  endpoint:
    path: /apps/{app_id}/installations/{id}/credentials/{client_id}/state
    method: POST
    data_selector: state
    params: {}
- name: credentials_rotation
  endpoint:
    path: /apps/{app_id}/installations/{id}/credentials/actions/rotate
    method: POST
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: _embedded.apps
- name: list_of_apps
  endpoint:
    path: /apps
    method: GET
- name: installation_trial_information
  endpoint:
    path: /apps/{app_id}/installations/{id}/trial
    method: GET
    data_selector: state
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params:
      app_id: required
      id: required
- name: event
  endpoint:
    path: /apps/{app_id}/events/{id}
    method: GET
- name: app_installed_event
  endpoint:
    path: /reference/app-installed
    method: GET
- name: app_installed
  endpoint:
    path: /apps/f918e2623486417791f3b5a18ca746ce/events/3214155a170c4d4aaa344a540ceckrik1
    method: GET
    data_selector: data
    params: {}
- name: app.updated
  endpoint:
    path: /reference/app.updated
    method: GET
    data_selector: payload
- name: event
  endpoint:
    path: /apps/f918e2623486417791f3b5a18ca746ce/events/{id}
    method: GET
    data_selector: data
- name: app.uninstalled
  endpoint:
    path: /apps/{app_id}/events/{event_id}
    method: GET
    data_selector: data
- name: app_uninstalled_event
  endpoint:
    path: /app/uninstalled
    method: GET
    data_selector: payload
    params: {}
- name: trial_started_event
  endpoint:
    path: /apps/8fcf7a3762d94f938e71b3a42618fd14/events/a16521d26f89418dab1402e68c5a4ba7
    method: GET
- name: trial_started
  endpoint:
    path: /reference/apptrial_started
    method: GET
    data_selector: payload
    params: {}
- name: trial_extended_event
  endpoint:
    path: /reference/app.trial_extended
    method: GET
- name: trial_ended_event
  endpoint:
    path: /reference/app.trial_ended
    method: GET
    data_selector: payload
    params: {}
- name: trial_ended_event
  endpoint:
    path: /apps/8fcf7a3762d94f938e71b3a42618fd14/events/a16521d26f89418dab1402e68c5a4ba7
    method: GET
    data_selector: data
- name: user_logout_event
  endpoint:
    path: /user/logout
    method: GET
- name: acknowledge_credential_rotation
  endpoint:
    path: /apps/{app_id}/installations/{installation_id}/credentials/{client_id}/state
    method: POST
- name: new_direct_callback
  endpoint:
    path: /calls/callback
    method: POST
- name: recordings
  endpoint:
    path: /calls/{call_id}/recordings
    method: GET
- name: recording
  endpoint:
    path: /recordings
    method: GET
    data_selector: recordings
- name: recording
  endpoint:
    path: /recordings/{id}
    method: GET
- name: recording_details
  endpoint:
    path: /recordings/id
    method: GET
- name: list_of_recordings_for_a_call
  endpoint:
    path: /calls/id/recordings
    method: GET
- name: redirect_to_recording_file
  endpoint:
    path: /recordings/{id}/media
    method: GET
    data_selector: _links
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: _embedded.contacts
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: _embedded.contacts
    params:
      page: 1
      per_page: 50
- name: contact_by_id
  endpoint:
    path: /contacts/{contact_id}
    method: GET
    data_selector: contact
- name: contact
  endpoint:
    path: /contacts/contact_id
    method: DELETE
- name: contact_removal
  endpoint:
    path: /contacts/{contact_id}
    method: DELETE
- name: contact_integrations
  endpoint:
    path: /contacts/{contact_id}/integrations
    method: GET
    data_selector: _embedded.integrations
- name: contact_integrations
  endpoint:
    path: /contacts/contact_id/integrations
    method: GET
- name: gdpr_contact
  endpoint:
    path: /contacts-management/contacts/{contact_id}/gdpr
    method: POST
- name: ring_groups
  endpoint:
    path: /ring-groups
    method: GET
- name: ring_groups
  endpoint:
    path: /ring-groups/id/users
    method: GET
- name: users_assigned_to_ring_group
  endpoint:
    path: /ring-groups/{id}/users
    method: GET
    data_selector: _embedded.users
- name: execute_publish_flow
  endpoint:
    path: /flows/{flow_id}/interactions
    method: POST
- name: do_not_call_lists
  endpoint:
    path: /do-not-call-lists
    method: GET
- name: do_not_call_lists
  endpoint:
    path: /do-not-call-lists
    method: GET
- name: do_not_call_lists
  endpoint:
    path: /do_not_call_lists
    method: GET
    data_selector: _embedded.do_not_call_lists
    params:
      page: 1
      per_page: 20
- name: do_not_call_list
  endpoint:
    path: /do-not-call-lists
    method: POST
    data_selector: signed_url
- name: do_not_call_lists
  endpoint:
    path: /do-not-call-lists
    method: POST
- name: do_not_call_list
  endpoint:
    path: /do_not_call_list
    method: GET
    data_selector: object
    params: {}
- name: do_not_call_list
  endpoint:
    path: /do-not-call-lists/{id}
    method: GET
- name: do_not_call_list
  endpoint:
    path: /do-not-call-lists
    method: GET
- name: do_not_call_list_details
  endpoint:
    path: /do-not-call-lists/id
    method: GET
- name: entry_in_do_not_call_list
  endpoint:
    path: /do-not-call-lists/identries
    method: GET
- name: do_not_call_entries
  endpoint:
    path: /do_not_call_list
    method: GET
    data_selector: _embedded.entries
    params:
      per_page: '10'
      page: '1'
- name: do_not_call_list_entries
  endpoint:
    path: /do-not-call-lists/{id}/entries
    method: GET
- name: do_not_call_list_entries
  endpoint:
    path: /do-not-call-lists/id/entries
    method: GET
- name: do_not_call_lists_entries
  endpoint:
    path: /do-not-call-lists/id/entries
    method: POST
- name: do_not_call_list_entries
  endpoint:
    path: /do-not-call-lists/{id}/entries
    method: POST
    data_selector: entry
    params: {}
- name: delete_entry
  endpoint:
    path: /do-not-call-lists/{id}/entries/{id_entry}
    method: DELETE
- name: do_not_call_list_entries
  endpoint:
    path: /do-not-call-lists/{id}/entries
    method: PATCH
- name: do_not_call_lists
  endpoint:
    path: /do-not-call-lists/id/entries
    method: PATCH
- name: entries_updated
  endpoint:
    path: /do_not_call_list/{id}/update
    method: POST
    data_selector: entries
    params: {}
- name: do_not_call_list_entry
  endpoint:
    path: /do-not-call-lists/{id}/entries/{id_entry}
    method: PATCH
    data_selector: body
- name: update_multiple_entries
  endpoint:
    path: /do-not-call-lists/id/entries/id_entry
    method: PATCH
- name: bulk_delete_entries
  endpoint:
    path: /do-not-call-lists/{id}/entries
    method: DELETE
- name: entries
  endpoint:
    path: /dncl/entries
    method: GET
    data_selector: _embedded.entries
    params:
      incremental: created_at
- name: entries
  endpoint:
    path: /do-not-call-lists/{id}/entries/queries
    method: POST
- name: Bulk Delete Entries
  endpoint:
    path: /do-not-call-lists/id/entries/queries
    method: POST
- name: record_lists
  endpoint:
    path: /record-lists
    method: GET
- name: records
  endpoint:
    path: /get-a-list-of-records
    method: GET
- name: record_lists
  endpoint:
    path: /record_lists
    method: GET
    data_selector: record_lists
    params:
      page: 1
      per_page: 50
- name: record_lists
  endpoint:
    path: /record-lists
    method: GET
- name: get_a_list_of_records
  endpoint:
    path: /record-lists/id/records
    method: GET
- name: record_list_records
  endpoint:
    path: /record-lists/{id}/records
    method: GET
- name: records
  endpoint:
    params:
      order_by: updated_at:desc
      per_page: 50
- name: record_list
  endpoint:
    path: /record-lists
    method: POST
    data_selector: id
- name: record_list_details
  endpoint:
    path: /record-lists/{id}
    method: GET
- name: record_list
  endpoint:
    path: /record-lists/id/records
    method: POST
- name: create_record
  endpoint:
    path: /record-lists/{id}/records
    method: POST
- name: phone_numbers
  endpoint:
    path: /phone_numbers
    method: POST
    data_selector: phone_numbers
    params:
      id: required
      phone_number: required
      first_name: required
      last_name: required
- name: record_lists
  endpoint:
    path: /record-lists/id/records
    method: DELETE
- name: delete_record
  endpoint:
    path: /record-lists/{id}/records
    method: DELETE
    params:
      phone_number: ''
- name: get_a_record
  endpoint:
    path: /record-lists/{id}/records/{id_record}
    method: GET
- name: delete_record
  endpoint:
    path: /record-lists/{id}/records/{id_record}
    method: DELETE
    params: {}
- name: record
  endpoint:
    path: /api/records
    method: POST
    data_selector: _embedded.records
    params: {}
- name: create_multiple_records
  endpoint:
    path: /record-lists/{id}/records/bulks
    method: POST
- name: signed_url
  endpoint:
    path: /record-lists/{id}/upload-requests
    method: POST
- name: callback_request
  endpoint:
    path: /callback_action
    method: POST
    data_selector: none
    params: {}
- name: upload_requests
  endpoint:
    path: /record-lists/id/upload-requests
    method: POST
- name: upload_request
  endpoint:
    path: /record-lists/{id}/upload-requests/{id_upload_request}
    method: PATCH
- name: update_record_lists
  endpoint:
    path: /record-lists/{id}
    method: PATCH
- name: update_record_lists
  endpoint:
    path: /record-lists/id/records/id_record
    method: PATCH
- name: update_record
  endpoint:
    path: /record-lists/{id}/records/{id_record}
    method: PATCH
- name: update_list_of_records
  endpoint:
    path: /record-lists/{id}/records/bulks
    method: PATCH
    data_selector: records
- name: bulk_delete_records
  endpoint:
    path: /record-lists/{id}/records/bulks
    method: DELETE
- name: delete_records_by_provider_id
  endpoint:
    path: /record-lists/{id}/external-records
    method: DELETE
    params:
      external_id: ''
      external_provider: ''
- name: activities
  endpoint:
    path: /identity/activities
    method: GET
- name: activities
  endpoint:
    path: /identity/activities
    method: GET
- name: contact_voice_authentication_history
  endpoint:
    path: /identity/voice_authentication_history
    method: GET
    data_selector: _embedded
    params:
      page: 1
      per_page: 10
- name: phone_validation
  endpoint:
    path: /phone_validation
    method: GET
    data_selector: _embedded
    params:
      phone_number: string
- name: phone_validation
  endpoint:
    path: /identity/phonevalidations/{phone_number}
    method: GET
- name: phone_number_insights
  endpoint:
    path: /identity/phonevalidations/{phone_number}
    method: GET
- name: enrollment
  endpoint:
    path: /voicebiometrics/contacts/contact_id/enrollment
    method: PUT
- name: enrollment
  endpoint:
    path: /voicebiometrics/contacts/{contact_id}/enrollment
    method: PUT
    data_selector: object
    params: {}
- name: contact_enrollment
  endpoint:
    path: /voicebiometrics/contacts/contact_id/enrollment
    method: DELETE
- name: enrollment_info_removal
  endpoint:
    path: /voicebiometrics/contacts/{contact_id}/enrollment
    method: DELETE
- name: contact_consent_status
  endpoint:
    path: /voicebiometrics/contacts/{contact_id}/consent
    method: GET
- name: set_contact_consent_status
  endpoint:
    path: /voicebiometrics/contacts/{contact_id}/consent
    method: PUT
    data_selector: status
- name: contact_consent
  endpoint:
    path: /voicebiometrics/contacts/{contact_id}/consent
    method: PUT
    data_selector: object
- name: start_conversation
  endpoint:
    path: /digital-connect/conversations
    method: POST
- name: send_message
  endpoint:
    path: /digital-connect/conversations
    method: POST
- name: send_message
  endpoint:
    path: /digital-connect/conversations/id/messages
    method: POST
- name: send_message
  endpoint:
    path: /digital-connect/conversations/{id}/messages
    method: POST
- name: end_conversation
  endpoint:
    path: /digital-connect/conversations/{id}
    method: DELETE
- name: attributes_list
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: new_attribute
  endpoint:
    path: /attributes
    method: POST
    data_selector: id
    params: {}
- name: attributes_categories
  endpoint:
    path: /attributes-categories
    method: GET
    data_selector: _embedded.categories
- name: attributes_categories
  endpoint:
    path: /attributes-categories
    method: POST
    data_selector: object
- name: attributes_categories
  endpoint:
    path: /attributes-categories/category_id
    method: PATCH
- name: update_attribute_category
  endpoint:
    path: /attributes-categories/{category_id}
    method: PATCH
    data_selector: object
- name: attribute_category
  endpoint:
    path: /attributes-categories/{category_id}
    method: DELETE
    params:
      category_id: string
- name: attributes
  endpoint:
    path: /users/user_id/attributes
    method: GET
- name: attribute_details
  endpoint:
    path: /attributes/{attribute_id}
    method: GET
- name: update_attribute
  endpoint:
    path: /attributes/{attribute_id}
    method: PUT
- name: users
  endpoint:
    path: /attributes/{attribute_id}/users
    method: GET
    data_selector: users
    params:
      page: '1'
      per_page: '50'
- name: associate_users_to_attribute
  endpoint:
    path: /attributes/{attribute_id}/users
    method: POST
- name: attribute_users
  endpoint:
    path: /attributes/attribute_id/users
    method: POST
- name: remove_users_from_attribute
  endpoint:
    path: /attributes/{attribute_id}/users
    method: DELETE
    data_selector: object
- name: associate_users_to_an_attribute
  endpoint:
    path: /attributes/attribute_id/users
    method: DELETE
- name: user_attributes_list
  endpoint:
    path: /user-attributes-list
    method: GET
- name: user_attributes
  endpoint:
    path: /users/{user_id}/attributes
    method: GET
- name: users_attributes
  endpoint:
    path: /users/user_id/attributes
    method: GET
- name: time_offs
  endpoint:
    path: /wfm/aion/externals/schedules/time-offs
    method: POST
- name: time_off
  endpoint:
    path: /wfm/aion/externals/schedules/time-offs
    method: POST
- name: update_time_off
  endpoint:
    path: /wfm/aion/externals/schedules/time-offs/{id}
    method: PATCH
    data_selector: object
    params: {}
- name: time_off
  endpoint:
    path: /wfm/aion/externals/schedules/time-offs/{id}
    method: DELETE
    data_selector: object
    params:
      id: string
- name: create_duplicate_campaign
  endpoint:
    path: /campaigns
    method: POST
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: campaign_details
  endpoint:
    path: /campaigns/{id}
    method: GET
- name: delete_campaign
  endpoint:
    path: /campaigns/{id}
    method: DELETE
    data_selector: n/a
    params: {}
- name: patch_campaign
  endpoint:
    path: /campaigns/{id}
    method: PATCH
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: _embedded.do_not_call_lists
    params:
      page: 1
      per_page: 50
- name: do_not_call_lists
  endpoint:
    path: /campaigns/{id}/do-not-call-lists
    method: GET
- name: associate_dncl
  endpoint:
    path: /campaigns/{id}/do-not-call-lists
    method: POST
    data_selector: response
- name: dissociate_dncl
  endpoint:
    path: /campaigns/{id}/do-not-call-lists
    method: DELETE
- name: get_record_lists
  endpoint:
    path: /campaigns/{id}/record-lists
    method: GET
- name: record_lists
  endpoint:
    path: /campaigns/id/record-lists
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: _embedded.record_lists
    params:
      page: 1
      per_page: 50
- name: record_lists
  endpoint:
    path: /campaigns/id/record-lists
    method: POST
- name: associate_record_lists
  endpoint:
    path: /campaigns/{id}/record-lists
    method: POST
- name: dissociate_record_lists
  endpoint:
    path: /campaigns/{id}/record-lists
    method: DELETE
- name: users
  endpoint:
    path: /campaigns/{id}/users
    method: GET
- name: users
  endpoint:
    params:
      page: 1
      per_page: 50
- name: associate_users
  endpoint:
    path: /campaigns/{id}/users
    method: POST
- name: dissociate_users
  endpoint:
    path: /campaigns/{id}/users
    method: DELETE
- name: numbers
  endpoint:
    path: /campaigns/{id}/numbers
    method: GET
- name: campaign_numbers
  endpoint:
    path: /campaigns/id/numbers
    method: GET
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: _embedded.numbers
    params:
      page: 1
      per_page: 50
notes:
- All API calls referenced in the documentation start with base URLs.
- You need to make sure that you are using the right base URL for your customer's
  region-based installation.
- Talkdesk APIs are available to platform partners and enterprise customers.
- Talkdesk doesn't give API access to third-parties other than customers.
- The private key is not stored in Talkdesk systems. Talkdesk only stores the customer’s
  public key to validate the customer’s requests.
- If you're using an Authorization Code grant, and the access token expires after
  10 minutes, you must request a new token using the Refresh Token functionality.
- If you plan on listing your app on AppConnect, use a Signed JWT for additional security
  when retrieving a token.
- API responses are paginated by default, with 50 items per page.
- Pagination on the client must be implemented by issuing a GET request to the next
  link.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Automatically opens TD chat on page load if configured.
- Chat widget allows embedding into your own website.
- When a website has a Content Security Policy (CSP) enabled, it restricts the types
  of content that can be loaded on the site.
- Specific sources must be whitelisted to ensure chat functionalities run properly.
- TalkDesk Chat Widget JSSDK remote domain
- TalkDesk Gateway domain for US region
- TalkDesk Gateway domain for EU region
- TalkDesk Gateway domain for CA region
- TalkDesk Gateway domain for FedRAMP region
- setContextParam does not support multi-layer nested objects.
- The enablePointMoveTriggerButton is used to turn on the drag and move of the chat
  launcher, and the value of this field is false by default.
- Enabled sound notifications by default — can be disabled via configuration.
- The chat widget supports customizing themes to have a better UX for Customers.
- CSP tool rules need to be updated for v2 due to iframe usage.
- Do not manually modify the chat widget domain in the snippet code.
- Requests to the Talkdesk APIs are possible when they include a valid access token
  generated from OAuth 2.0 client credentials.
- Client credentials are installation-specific.
- Integration requires OAuth client credentials from Talkdesk.
- Talkdesk does not provide sample data in these accounts, so it is recommended that
  you make some sample calls to populate the account with data.
- All partner apps must meet the requirements to be approved by Talkdesk.
- Expired tokens must be handled seamlessly without any actions from the user.
- Integrating with the Events API is a prerequisite for accessing Talkdesk APIs.
- The Talkdesk ID is not hard-coded from your side; you must save all information
  related to the installation OAuth client.
- Single Sign-On is accomplished using the OAuth 2.0 Authorization Code grant type.
- Access tokens are valid for 10 minutes.
- Use the value of the root link provided in events for region-agnostic access.
- Talkdesk Partner Project offers a self-service experience to easily register and
  manage partner apps, allowing you to generate OAuth Clients.
- If you don't have a Talkdesk partner account, you may not have access to the OAuth
  Clients tab.
- App is the only project type available in Partner Project.
- You can only create a new app version if the previous version has been published.
- Any changes made to a partner app take about five minutes to be reflected on the
  user's side.
- The app icon and subscription plans have to be reviewed by Talkdesk.
- For an app to be installable, the app must have the Available status, having the
  technical workflow approved (except for the user's and Talkdesk accounts).
- For an app to be published on the Talkdesk AppConnect marketplace, the marketplace
  workflow needs to be approved.
- For an app to be installable for the customer, the Technical workflow needs to be
  finalized.
- For an app to be published on the AppConnect marketplace, the Marketplace workflow
  needs to be finalized and made visible by the AppConnect team.
- There are different badges for the several app installation status.
- If you have questions or technical issues, please open a ticket using the provided
  form.
- Talkdesk does not provide sample data in these accounts.
- Developer account includes three free licenses and $25 worth of credits.
- Customer has seven days to confirm installation/update/uninstallation before timeout
- Talkdesk recommends synchronous installation process
- SSO is accomplished using the OAuth 2.0 Authorization Code grant type.
- If the SSO fails for any reason, or if you can’t resolve the Talkdesk user to an
  authenticated user in your system, you must present an error page with the user's
  contact.
- Obtainable from our public endpoint
- All events are delivered via HTTPS.
- Talkdesk guarantees, at least once, semantics for event delivery.
- Talkdesk restricts the user access to the installed app after 30 days.
- The trial period can be extended while still active.
- The app will only be listed on AppConnect if it is approved by Talkdesk.
- If an app has not been explicitly approved, contacting a Talkdesk customer directly
  to install the app will result in the violation of the AppConnect partnership agreement.
- Integration allows connecting external services with Talkdesk systems.
- Self-service custom integration can be configured by setting base URL and authentication.
- Only POST requests are allowed.
- When using a custom authentication type, the associated fields will be sent in the
  request body inside the auth field.
- The first request for retrieving agents is always executed with a null offset.
- There is a possibility that the volume of response data might be too high to process,
  leading to a failure. To avoid this, it's recommended to reduce the maximum number
  of contacts retrieved per request.
- All requests are expected to take less than 10 seconds. If a request exceeds this
  limit, it will automatically fail.
- The bridge must retrieve all contacts during initial sync.
- Use synchronization_checkpoint for incremental sync.
- Talkdesk's interaction updater will send an HTTP POST request to the bridge to retrieve
  a contact's interactions.
- Agents must have Conversations open in at least one tab or have Conversations/Workspace
  Embedded, since a Conversations session is required.
- Connections doesn't support Contact/Agent Sync.
- The timeout of an action indicates the amount of time, in seconds, that Talkdesk
  waits for the third-party system to respond before considering the execution a failure.
- Once an action is published, its status is set to Active, and it can no longer be
  set as Draft.
- Once it is Active, it can no longer be edited, but it can be used in Studio.
- You need permission to manually execute an action.
- An action can be tested regardless of its status.
- Although an issue might have occurred, this does not mean that the action was not
  properly executed on the external system, as the error only indicates that a response
  was not properly received.
- Editing an action depends on its status.
- If there is an issue with the Relative URL, with the query parameters, or with one
  of the schemas, you will need to add a new action and set the status of the old
  action as Deprecated or End of Life.
- If you have questions or technical issues, please open a ticket using the support
  form.
- By default, Full encoding (RFC 3986) is being applied to all custom actions when
  creating.
- OAuth2 Authentication Code Flow doesn’t work in Talkdesk Workspace.
- Talkdesk doesn't manage actions from connections. You must define and configure
  these actions according to your needs.
- The Match input is case-sensitive.
- Match input is case-sensitive
- Received value is higher than the Match value only works with numbers
- Received value is lower than the Match value only works with numbers
- Is One Of filter does not function as intended when dealing with list values
- Each automation can be filtered by one or more filter conditions.
- Default timeout for actions is 10 seconds.
- OAuth2 Authentication Code Flow doesn’t currently work in Talkdesk Workspace.
- No scopes are necessary for triggering a Salesforce Flow.
- Default timeout setting is 10 seconds.
- Cards use a grid, so it’s only possible to increase/decrease the size in predefined
  steps.
- Only JSON files are permissible for uploads.
- No canvas apps are installed by default. To install a canvas, follow the steps below.
- A Render Form must always have at least one field.
- There is no maximum number of fields.
- Only read-write variables are available for storing selected options after form
  submission.
- Certain HTML functionalities may not work correctly.
- Native React components are not supported.
- If you have questions or technical issues, please open a ticket using [this form](https://support.talkdesk.com/hc/en-us/requests/new).
- Setup required for OAuth2 authentication
- The automation flow must end with a Render Iframe or a Render View component.
- Uses OAuth2 with refresh token — requires setup of connected app in Talkdesk
- The Render Panel is the automation ending point.
- Each state type has its own image, but all of them share the same configuration.
- To enable the external exit, it is possible to choose on the dropdown between a
  value or a variable.
- The Card Trigger component is mandatory and is always included in a flow.
- The Canvas Trigger is mandatory and is always included in a flow.
- Using Event Triggers for both cards and the canvas may result in a conflict.
- Uses OAuth2 with authorization code flow for authentication.
- Uses tracking number variable via Context.getVariable
- To fulfill scenarios 2.1 and 2.2, we will need to add one more Split Flow component.
- You can also use the Card Preview feature to visualize your card during the configuration
  process.
- Keep in mind that to test this card, you need to make a real call to get the other
  outcomes based on the phone number.
- This tutorial explains how to use the Split Flow component to display different
  outcomes depending on certain conditions.
- In this particular use case, an exit is not required.
- Due to the account-specific nature of panels, you will need to edit each Render
  Panel component and select the appropriate panels accordingly.
- If you have questions or technical issues, please open a ticket using this form
- The Billing Insights API becomes available on January 31st 2024.
- The Billing Insights API rate limit is 25 reqs per second.
- It’s not possible to edit running campaigns. To do that, it’s necessary to pause
  the campaign.
- Early Access campaign features are not available in these endpoints. It will be
  necessary to configure these features manually through the UI.
- Global limit of 25 requests per second in all endpoints except for bulk delete endpoint
- 'Maximum number of DNC lists per account: 60'
- The Identity Insights API doesn’t allow filtering and sorting data by the field
  name (the caller’s name).
- When filtering by timestamp, it is only possible to do it by date ranges and not
  by a specific date.
- The Voice Biometrics Opt-In API has been in General Availability since February
  2022.
- The Prompts API doesn’t provide built-in bulk operations.
- The Recordings API is only available for customers enrolled in Talkdesk's Early
  Access (EA) program.
- Industries Scheduler API has been in General Availability since September 2024.
- 'Maximum number of record lists per account: 200'
- 'Maximum number of records inside a record list: 250,000'
- The Simulated Email API has been in GA since November 2023.
- Real-time metrics are obtained via HTTP SSE notifications.
- The data obtained via Explore API has a five-minute delay to real-time.
- Transport Layer Security 1.2 (TLS) is the minimum version of the TLS protocol allowed
  for use on the Explore API endpoints.
- Up to a month of data per request.
- Data for the Audit Logs Report will have a freshness of one hour.
- Data is refreshed every minute.
- There are no limits on the data availability regarding timeframe.
- The data becomes available as soon as the survey is sent, or a survey response event
  is generated and is available on the Talkdesk database.
- There are no limits on the data available regarding the timeframe.
- There are no limits on the data available regarding the time frame.
- It may occur that, for some users, there seems to be duplicated records.
- Up to a month of data per request via the Explore API for DRAFT edition only.
- The report doesn't show any adherence data related to ongoing presence status.
- Specify wfm_team_schedule_report as report type in the Explore API request path
- You can request up to one month of data through the Explore API, applicable for
  the DRAFT edition only, including required and predicted timeseries.
- The report displays the most recent data within the Talkdesk WFM product, and it
  doesn't support querying data evolution over time.
- Reporting Custom Fields API has been in General Availability since October 2024.
- The SCIM API only supports the User resource.
- The SCIM API does not work for Talkdesk Phone user creation.
- The rate limit for this API is 4 requests per second, if you encounter a 429 response
  status code (Too many requests), please retry within the next second.
- If the active field is not mapped, Talkdesk will try to create the user with active=true.
- If the Role field is not mapped, Talkdesk will create the user with the default
  Role Agent.
- If the Team field is not mapped, Talkdesk will not assign the user to any team.
- The rolesString value must contain a role name that already exists in your Talkdesk
  Account and has been previously created.
- The teamsString value must contain a team name that already exists in your Talkdesk
  Account and has been previously created.
- When the active field is not mapped, OneLogin will automatically send the value
  from the User Active field.
- The Usage-Manager API retrieves information about wallet and bucket configurations
  in an account and its detailed information.
- The Usage-Manager API has been in General Availability since October 2022.
- The Case API has been in General Availability since October 2023.
- When the Power Automate integration is deleted, the user will only receive an email
  with the information regarding the information the user has to disable/delete in
  their Talkdesk instance.
- Synchronization for the deleted Power Automate connection doesn't occur in real
  time. It will have a periodic timer of five minutes.
- The Bulk Import API doesn’t support all agents' settings.
- Uploads are only stored for up to 20 days.
- The CFM API has been in General Availability since April 2023.
- The Talkdesk Express API is in GA since the 5th of July, 2024.
- Utilizes data and information from past contact center activities to predict future
  trends.
- This trigger is activated when a user manually creates a time-off in the WFM app.
- This trigger is activated when a time-off is manually updated.
- Trigger is published when a time off is manually deleted in the WFM app.
- The Scheduled Time-Off API has been in General Availability since August 2022.
- To enter the EA program, contact a Customer Success Manager.
- User status data from as far back as 2016 is available in this report type.
- At this moment, only a selected set of Talkdesk API's supports STS tokens.
- A signed JWT must be used for additional security when retrieving a token.
- You will get an `invalid_client` error message if your signed JWT has expired.
- The URL for this request expired after 30 days.
- 'Scope: apps:read'
- 'Scope: apps:write'
- Sensitive information will not be available in any other form.
- URL to retrieve the event content is available in the self link.
- URL for this request expired after 30 days.
- Screen Recording is not included.
- 'Scope required: contacts:read'
- Talkdesk can only display 10 thousand contacts (Talkdesk displays 50 contacts per
  page, so the total limit is 10 thousand contacts).
- 'Scope required: ring-groups:read'
- 'Scope required: flows-interactions:start'
- 'Scope required: do-not-call-lists:manage'
- Returns a list of entries from a DNCL object filtering by phone numbers and timezones
- 'Scope required: `record-lists:manage`'
- Scope required for creating a record list is 'record-lists:manage'.
- 'Scope: record-lists:manage'
- The data is filtered for up to 90 days by default.
- The Digital Connect API is only available for customers enrolled in Talkdesk's Early
  Access (EA) program.
- Requires scope digital-connect:write
- The Digital Connect API has been in EA since April 2022.
- 'Scope required: digital-connect:write'
- 'Scope: attributes:read'
- 'Scope: attributes:write'
- Requires scope 'attributes:write'
- 'Scope required: attributes:write'
- Created via an external service, returning the newly created time off item
- The Campaign Management API is only available for customers enrolled in Talkdesk's
  Early Access (EA) program.
- The Campaign Management APII has been in EA since November 2022.
- 'Scope: campaigns:read'
- The Campaign Management API has been in EA since November 2022.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your client credentials and scopes.'
- '401 unauthorized: Retrieve a new access token'
- '400 Bad Request: Check the request parameters and body format.'
- 'Invalid event ID: Check if the event ID is correct.'
- '201: Success'
- '400: Bad Request'
- '401 Unauthorized: Ensure correct authentication fields are provided.'
- 'timeout: Error while waiting for the API response'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Ensure the endpoint exists'
- Global limit of 25 requests per second in all endpoints
- Limit of 20 lists per request (per campaign) for associate or disassociate record
  lists
- Limit of 1 do not call list per request (per campaign) for associate or disassociate
  do not call lists
- Limit of 20 users per request (per campaign) for associate or disassociate users
- Limit of 20 numbers per request (per campaign) for associate or disassociate numbers
- '400 Bad Request: Check the request body for correct parameters.'
- '401 Unauthorized: Check the authentication credentials.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- 'invalid_client: Ensure the signed JWT has not expired'
- '400 Bad Request: n/a'
- '401 Unauthorized: n/a'
- '401: Unauthorized'
- 'invalid_client: The signed JWT has expired'
- '400: error and error_description are required'
- '401: error and error_description are required'
- 'invalid_client: Signed JWT has expired'
- '400: bad request'
- '401: unauthorized'
- '400 (bad request): The error message.'
- '404 app not found: Ensure the app_id is correct'
- '404: Not Found'
- '403: Forbidden'
- '403 Forbidden: n/a'
- '404 app/installation not found: n/a'
- '401 Unauthorized: Recheck authentication credentials'
- '403 Forbidden: Check permissions for the requested resource'
- 401 401
- 403 403
- 404 404
- 403 (forbidden)
- 404 (app or installation not found)
- 403 (forbidden), 404 (app or installation not found)
- 'URL Expired: The URL for this request expired after 30 days.'
- '403 Forbidden: The error message'
- '404 Not Found: App or installation not found'
- 400 - Result
- 401 - Result
- 403 - Result
- 404 - Result
- 409 - Result
- 502 - Result
- 504 - Result
- '403: forbidden'
- '404: app or installation not found'
- '409: resource already in use'
- '403 Forbidden: Access is denied'
- '404 Not Found: App/installation not found'
- '409 Conflict: Requested state conflicts with the current state of the target resource'
- 404 - App Not Found
- 404 - Installation Not Found
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck authentication'
- '403 Forbidden: Access denied'
- '404 Not Found: Check app or installation ID'
- 400 (bad request)
- 401 (unauthorized)
- 404 (installation not found)
- 404 - event not found
- 500 - failed to get event
- '404 Event not found: Ensure the event ID is correct'
- '500 Failed to get event: Try again later'
- 401 Unauthorized - Invalid Authentication
- 401 Unauthorized - Account does not Exist
- 403 Forbidden Access
- 404 Result
- 415 Result
- 422 Result
- 429 Result
- '400 (bad request): Missing Parameters'
- 415 (unsupported media type)
- 422 (unprocessable entity)
- 429 (too many requests)
- '403 Forbidden: Check access permissions'
- '404 Recording not found: Ensure the recording ID is correct'
- 404 recording not found
- '404 Not Found: Ensure the endpoint is correct'
- '403 Forbidden: Access denied to the resource'
- '404 Not Found: The requested resource could not be found'
- '410 Gone: The media file has been deleted'
- '400: contact not found'
- '404: contact not found'
- 400 - Verification Error
- 401 - Unauthorized Error
- 403 - Forbidden Error
- 400 (verification error)
- 401 (unauthorized error)
- 403 (forbidden error)
- 404 (contact not found)
- 400 - Invalid Ring Group
- 400 - User without Ring Group
- 400 - Error Assigning Chained Ring Group to User
- 400 - Maxium Ring Groups Allowed for Agents
- 400 - Invalid order by Parameter
- '400: Invalid Ring Group'
- '401: User without Ring Group'
- '403: Error Assigning Chained Ring Group to User'
- 401 (the request does not contain one of the mandatory headers)
- 403 (the user is authenticated but does not have sufficient permissions to perform
  the action)
- 404 (not found)
- 400 (invalid JSON)
- 404 (flow not found)
- 413 (request too large)
- 400 - Invalid JSON
- 401 - Unauthorized
- 403 - Forbidden
- 404 - Not found
- 413 - Request too large
- 429 - Too many requests
- '400: errors were found in the submitted data'
- '404: not found'
- 400 - Errors found in the submitted data
- 413 - Result
- '403 Forbidden: Access to the resource is denied'
- '404: do not call list not found'
- '401 Unauthorized: Recheck code and message'
- '403 Forbidden: Recheck code and message'
- '404 Do not call list not found: Check the ID provided'
- 404 - (DNCL not found)
- '403: Result'
- '404: Entry not found'
- 404 (entry not found)
- '422: Result'
- '413: Payload Too Large'
- '400: (errors were found in the submitted data)'
- '401: (unauthorized)'
- '403: (forbidden)'
- '404: (entry not found)'
- '422: (unprocessable entity)'
- 400 - Errors were found in the submitted data
- 404 - Entry not found
- 422 - Result
- '400: errors found in the submitted data'
- '404: entry not found'
- 404 - DNCL not found
- '400: Errors found in the submitted data'
- '404: DNCL not found'
- '404: Record list not found'
- 400 (errors were found in the submitted data)
- 413 (payload too large)
- 413 - Payload too large
- 404 (record list not found)
- '404: record list not found'
- 404 - Resource not found
- '404: resource not found'
- '404 resource not found: n/a'
- 401 - Resource not found
- '404 Resource Not Found: Ensure the record ID and list ID are correct'
- 400 Unable to find suitable timezone
- 400 Request with too many records
- 400 Request with a full record list
- 400 Request with invalid upload request
- 400 General bad request
- '400: CSV metadata is missing'
- '400: Callback endpoint missing'
- '400: Callback method missing'
- '404: Resource not found'
- '413: Payload too large'
- 400 - General bad request
- 400 - CSV metadata is missing
- 400 - Callback endpoint missing
- 400 - Callback method missing
- '400: errors found in the submitted request'
- '409: request conflicts with current state of record list or upload request'
- 400 - Errors found in the submitted request
- 409 - Request conflicts with current state of record list or upload request
- 422 - Unable to perform the requested operation on target resource
- URL Expired
- 404 - Record list not found
- 409 - Request conflicts with current state of Record List
- '422: unprocessable record'
- 422 - Unprocessable record
- '400: code is required'
- '400: message is required'
- '401: code is required'
- '401: message is required'
- '403: code is required'
- '403: message is required'
- 404 - Record List Not Found
- '400: bad request in the submitted data'
- '400: Result'
- '401: Result'
- '400 Bad Request: Check the submitted data.'
- '401 Unauthorized: Check authentication credentials.'
- '403 Forbidden: Ensure you have access to the resource.'
- '404 Resource Not Found: Verify the endpoint path.'
- '404 Not Found: Ensure the contact ID is correct'
- '403 Forbidden: Verify API permissions'
- '404 Not Found: Check if the contact_id exists'
- '403'
- '404'
- 400 - Bad Request
- 404 - Not Found
- '400: Touchpoint Not Available'
- '409: Conflict'
- '400: malformed request'
- '409: conflict'
- '404 Not Found: Resource could not be found'
- '410 Gone: Resource is no longer available'
- '500 Internal Server Error: An unexpected error occurred'
- '404: conversation not found'
- '410: gone'
- '500: internal error'
- 201 - Result
- 204 - Result
- '403 Forbidden: Insufficient permissions for the requested operation'
- '400 Bad Request: Check request body for errors'
- '401 Unauthorized: Check authentication and scopes'
- '403 Forbidden: Verify permissions for the requested operation'
- 401 Unauthorized
- 403 Forbidden
- '400: validation errors were found in the submitted data'
- 400 - Validation errors were found in the submitted data
- 404 - Time off not found
- '404: time off not found'
- '401 Unauthorized: Invalid token or insufficient permissions'
- '403 Forbidden: Access denied for the requested resource'
- 404 - Campaign not found
- 204 - Campaign deleted successfully
- 409 - Request conflict with current state of the campaign
- '401 Unauthorized: Access denied due to invalid credentials'
- '403 Forbidden: Client does not have access rights'
- '404 Not Found: Campaign not found'
- '409 Conflict: Request conflicts with the current state of the campaign'
- '404: campaign not found'
- '422: unprocessable entity'
- 422 - Unprocessable Entity
- 400 (errors found in the submitted data)
- 404 (campaign not found)
- '400: code, message'
- '401: code, message'
- '403: code, message'
- '400: code'
- '401: code'
- '403: code'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth2
  - industries-scheduler-teams:read
  - industries-scheduler-availabilities:read
  - industries-scheduler-appointment:read
  - industries-scheduler-appointment:write
  - apps:read
  - client_id
  - client_secret
  - public_key
  - private_key
  - key_id
  - key_algorithm
  - installation_id
  - account_id
  - account_name
  - app_id
  - event_id
  - app_version_id
  - app_version_name
  - recordings:read
  - user-ring-groups:read
  - do-not-call-lists:manage
  - record-lists:manage
  - identity-phone-validation:read
  - attributes:read
  - campaigns:read
  - campaigns:write
client:
  base_url: https://api.talkdeskapp.com/
  auth:
    type: oauth2
source_metadata: null
