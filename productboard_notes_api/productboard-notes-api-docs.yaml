resources:
- name: notes
  endpoint:
    path: /reference/create_note
    method: POST
- name: companies
  endpoint:
    path: /reference/createcompany
    method: POST
- name: users
  endpoint:
    path: /reference/createuser
    method: POST
- name: features
  endpoint:
    path: /reference/createfeature
    method: POST
- name: objectives
  endpoint:
    path: /reference/createobjective
    method: POST
- name: key_results
  endpoint:
    path: /reference/createkeyresult
    method: POST
- name: initiatives
  endpoint:
    path: /reference/createinitiative
    method: POST
- name: plugin_integrations
  endpoint:
    path: /reference/postpluginintegration
    method: POST
- name: jira_integrations
  endpoint:
    path: /reference/getjiraintegration
    method: GET
- name: webhooks
  endpoint:
    path: /reference/postwebhook
    method: POST
- name: notes
  endpoint:
    path: /reference/create_note
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /reference/createcompany
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /reference/createuser
    method: GET
    data_selector: records
- name: features
  endpoint:
    path: /reference/createfeature
    method: GET
    data_selector: records
- name: objectives
  endpoint:
    path: /reference/getobjectives
    method: GET
    data_selector: records
- name: key_results
  endpoint:
    path: /reference/getkeyresults-1
    method: GET
    data_selector: records
- name: initiatives
  endpoint:
    path: /reference/getinitiatives-1
    method: GET
    data_selector: records
- name: plugin_integrations
  endpoint:
    path: /reference/postpluginintegration
    method: GET
    data_selector: records
- name: jira_integrations
  endpoint:
    path: /reference/getjiraintegration
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /reference/postwebhook
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
- name: notes
  endpoint:
    path: /reference/create_note
    method: POST
- name: companies
  endpoint:
    path: /reference/createcompany
    method: POST
- name: users
  endpoint:
    path: /reference/createuser-1
    method: POST
- name: features
  endpoint:
    path: /reference/createfeature
    method: POST
- name: custom_fields
  endpoint:
    path: /reference/getcustomfields
    method: GET
- name: release_groups
  endpoint:
    path: /reference/createreleasegroup
    method: POST
- name: objectives
  endpoint:
    path: /reference/getobjectives
    method: GET
- name: key_results
  endpoint:
    path: /reference/getkeyresults-1
    method: GET
- name: initiatives
  endpoint:
    path: /reference/getinitiatives-1
    method: GET
- name: plugin_integrations
  endpoint:
    path: /reference/postpluginintegration
    method: POST
- name: jira_integrations
  endpoint:
    path: /reference/getjiraintegration
    method: GET
- name: webhooks
  endpoint:
    path: /reference/postwebhook
    method: POST
- name: notes
  endpoint:
    path: /notes
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: features
  endpoint:
    path: /features
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: notes
  endpoint:
    path: /reference/create_note
    method: POST
- name: companies
  endpoint:
    path: /reference/createcompany
    method: POST
- name: users
  endpoint:
    path: /reference/createuser-1
    method: POST
- name: features
  endpoint:
    path: /reference/createfeature
    method: POST
- name: custom_fields
  endpoint:
    path: /reference/getcustomfields
    method: GET
- name: release_groups
  endpoint:
    path: /reference/createreleasegroup
    method: POST
- name: objectives
  endpoint:
    path: /reference/getobjectives
    method: GET
- name: key_results
  endpoint:
    path: /reference/getkeyresults-1
    method: GET
- name: initiatives
  endpoint:
    path: /reference/getinitiatives-1
    method: GET
- name: plugin_integrations
  endpoint:
    path: /reference/postpluginintegration
    method: POST
- name: jira_integrations
  endpoint:
    path: /reference/getjiraintegration
    method: GET
- name: webhooks
  endpoint:
    path: /reference/postwebhook
    method: POST
- name: notes
  endpoint:
    path: /reference/create_note
    method: POST
- name: companies
  endpoint:
    path: /reference/createcompany
    method: POST
- name: users
  endpoint:
    path: /reference/createuser-1
    method: POST
- name: features
  endpoint:
    path: /reference/createfeature
    method: POST
- name: custom_fields
  endpoint:
    path: /reference/getcustomfields
    method: GET
- name: release_groups
  endpoint:
    path: /reference/createreleasegroup
    method: POST
- name: objectives
  endpoint:
    path: /reference/getobjectives
    method: GET
- name: key_results
  endpoint:
    path: /reference/getkeyresults-1
    method: GET
- name: initiatives
  endpoint:
    path: /reference/getinitiatives-1
    method: GET
- name: plugin_integrations
  endpoint:
    path: /reference/postpluginintegration
    method: POST
- name: jira_integrations
  endpoint:
    path: /reference/getjiraintegration
    method: GET
- name: webhooks
  endpoint:
    path: /reference/postwebhook
    method: POST
- name: note
  endpoint:
    path: /notes
    method: POST
    data_selector: data
- name: notes
  endpoint:
    path: /notes
    method: GET
    data_selector: data
- name: note
  endpoint:
    path: /notes/{id}
    method: GET
    data_selector: data
    params: {}
- name: notes
  endpoint:
    path: /notes/id
    method: GET
- name: delete_note
  endpoint:
    path: /notes/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: add_followers_to_note
  endpoint:
    path: /notes/{noteId}/user-followers
    method: POST
- name: remove_follower
  endpoint:
    path: /notes/{noteId}/user-followers/{email}
    method: DELETE
    data_selector: '204'
    params: {}
- name: tags
  endpoint:
    path: /notes/{noteId}/tags
    method: GET
    data_selector: tags
    params:
      noteId: uuid
- name: create_tag
  endpoint:
    path: /notes/{noteId}/tags/{tagName}
    method: POST
- name: remove_tag_from_note
  endpoint:
    path: /notes/{noteId}/tags/{tagName}
    method: DELETE
    data_selector: null
    params: {}
- name: list_links
  endpoint:
    path: /notes/{noteId}/links
    method: GET
    data_selector: data
    params:
      noteId: uuid
- name: create_link
  endpoint:
    path: /notes/{noteId}/links/{entityId}
    method: POST
- name: feedback_form_configurations
  endpoint:
    path: /feedback-form-configurations
    method: GET
    data_selector: ''
- name: feedback_form_configurations
  endpoint:
    path: /feedback-form-configurations
    method: GET
    data_selector: data
- name: feedback_form_configuration
  endpoint:
    path: /feedback-form-configurations/{id}
    method: GET
    data_selector: data
    params:
      id: uuid
- name: submit_feedback_form
  endpoint:
    path: /feedback-forms
    method: POST
    data_selector: data
    params: {}
- name: update_note
  endpoint:
    path: /notes/{id}
    method: PATCH
- name: company
  endpoint:
    path: /companies
    method: POST
    data_selector: data
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params:
      pageLimit: 100
      pageOffset: 0
- name: company
  endpoint:
    path: /companies/{id}
    method: GET
    data_selector: data
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: delete_company
  endpoint:
    path: /companies/{id}
    method: DELETE
    data_selector: ok
    params:
      id: uuid
- name: create_company_field
  endpoint:
    path: /companies/custom-fields
    method: POST
    data_selector: data
- name: company_fields
  endpoint:
    path: /companies/custom-fields
    method: GET
    data_selector: data
- name: company_field
  endpoint:
    path: /companies/custom-fields/{id}
    method: GET
    data_selector: data
    params: {}
- name: update_company_field
  endpoint:
    path: /companies/custom-fields/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: delete_company_field
  endpoint:
    path: /companies/custom-fields/{id}
    method: DELETE
    data_selector: null
    params:
      id: uuid
- name: company_field_value
  endpoint:
    path: /companies/{companyId}/custom-fields/{companyCustomFieldId}/value
    method: GET
- name: company_field_value
  endpoint:
    path: /companies/{companyId}/custom-fields/{companyCustomFieldId}/value
    method: PUT
    data_selector: data
    params: {}
- name: delete_company_field_value
  endpoint:
    path: /companies/{companyId}/custom-fields/{companyCustomFieldId}/value
    method: DELETE
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: delete_user
  endpoint:
    path: /users/{id}
    method: DELETE
    data_selector: null
    params:
      id: uuid
- name: update_company
  endpoint:
    path: /companies/{id}
    method: PATCH
- name: feature
  endpoint:
    path: /features
    method: POST
    data_selector: data
- name: features
  endpoint:
    path: /features
    method: GET
    data_selector: data
- name: feature
  endpoint:
    path: /features/{id}
    method: GET
    data_selector: data
- name: update_feature
  endpoint:
    path: /features/{id}
    method: PATCH
- name: delete_feature
  endpoint:
    path: /features/{id}
    method: DELETE
    data_selector: '204'
    params: {}
- name: initiatives_linked_to_feature
  endpoint:
    path: /features/{id}/links/initiatives
    method: GET
    data_selector: data
- name: create_link_between_feature_and_initiative
  endpoint:
    path: /features/{id}/links/initiatives/{initiativeId}
    method: POST
- name: delete_initiative_link
  endpoint:
    path: /features/{id}/links/initiatives/{initiativeId}
    method: DELETE
    data_selector: null
    params: {}
- name: objectives
  endpoint:
    path: /features/{id}/links/objectives
    method: GET
    data_selector: data
- name: create_objective_link
  endpoint:
    path: /features/{id}/links/objectives/{objectiveId}
    method: POST
- name: delete_link
  endpoint:
    path: /features/{id}/links/objectives/{objectiveId}
    method: DELETE
    data_selector: ''
    params: {}
- name: component
  endpoint:
    path: /components
    method: POST
- name: components
  endpoint:
    path: /components
    method: GET
    data_selector: data
- name: component
  endpoint:
    path: /components/{id}
    method: GET
    data_selector: data
    params: {}
- name: update_component
  endpoint:
    path: /components/{id}
    method: PATCH
- name: component
  endpoint:
    path: /components/{id}
    method: PUT
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
- name: product
  endpoint:
    path: /products/{id}
    method: GET
    data_selector: data
    params: {}
- name: update_product
  endpoint:
    path: /products/{id}
    method: PATCH
    data_selector: data
- name: update_product
  endpoint:
    path: /products/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: feature_status
  endpoint:
    path: /feature-statuses
    method: GET
    data_selector: data
- name: custom_fields
  endpoint:
    path: /hierarchy-entities/custom-fields
    method: GET
    data_selector: data
    params:
      type: ''
- name: custom_field_values
  endpoint:
    path: /hierarchy-entities/custom-fields-values
    method: GET
    data_selector: data
    params: {}
- name: custom_field
  endpoint:
    path: /hierarchy-entities/custom-fields/{id}
    method: GET
    data_selector: data
    params: {}
- name: custom_field_value
  endpoint:
    path: /hierarchy-entities/custom-fields-values/value
    method: GET
    params:
      customField.id: json
      hierarchyEntity.id: json
- name: custom_field_value
  endpoint:
    path: /hierarchy-entities/custom-fields-values/value
    method: PUT
    data_selector: data
    params:
      customField.id: required
      hierarchyEntity.id: required
- name: delete_custom_field_value
  endpoint:
    path: /hierarchy-entities/custom-fields-values/value
    method: DELETE
    data_selector: errors
    params:
      customField.id: ''
      hierarchyEntity.id: ''
- name: release_group
  endpoint:
    path: /release-groups
    method: POST
- name: release_groups
  endpoint:
    path: /release-groups
    method: GET
    data_selector: data
- name: release_group
  endpoint:
    path: /release-groups/{id}
    method: GET
    data_selector: data
    params: {}
- name: release_group
  endpoint:
    path: /release-groups/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: release_group
  endpoint:
    path: /release-groups/{id}
    method: DELETE
    params: {}
- name: release
  endpoint:
    path: /releases
    method: POST
    data_selector: data
- name: releases
  endpoint:
    path: /releases
    method: GET
    data_selector: data
- name: release
  endpoint:
    path: /releases/{id}
    method: GET
    data_selector: data
    params: {}
- name: release
  endpoint:
    path: /releases/{id}
    method: PATCH
    data_selector: data
- name: delete_release
  endpoint:
    path: /releases/{id}
    method: DELETE
    params: {}
- name: feature_release_assignments
  endpoint:
    path: /feature-release-assignments
    method: GET
    data_selector: data
    params: {}
- name: feature_release_assignment
  endpoint:
    path: /feature-release-assignments/assignment
    method: GET
    params:
      release.id: json
      feature.id: json
- name: feature_release_assignment
  endpoint:
    path: /feature-release-assignments/assignment
    method: PUT
    data_selector: data
    params:
      release.id: required
      feature.id: required
- name: objectives
  endpoint:
    path: /objectives
    method: GET
    data_selector: data
- name: objectives
  endpoint:
    path: /objectives
    method: POST
- name: objective
  endpoint:
    path: /objectives/{id}
    method: GET
- name: update_objective
  endpoint:
    path: /objectives/{id}
    method: PATCH
- name: delete_objective
  endpoint:
    path: /objectives/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: features_linked_to_objective
  endpoint:
    path: /objectives/{id}/links/features
    method: GET
    data_selector: data
- name: initiatives_linked_to_objective
  endpoint:
    path: /objectives/{id}/links/initiatives
    method: GET
    data_selector: data
    params:
      id: uuid
- name: create_objective_initiative_link
  endpoint:
    path: /objectives/{id}/links/initiatives/{initiativeId}
    method: POST
- name: delete_link_objective_initiative
  endpoint:
    path: /objectives/{id}/links/initiatives/{initiativeId}
    method: DELETE
    data_selector: null
    params: {}
- name: create_objective_feature_link
  endpoint:
    path: /objectives/{id}/links/features/{featureId}
    method: POST
- name: delete_objective_feature_link
  endpoint:
    path: /objectives/{id}/links/features/{featureId}
    method: DELETE
    data_selector: null
    params:
      id: uuid
      featureId: uuid
- name: key_results
  endpoint:
    path: /key-results
    method: GET
    data_selector: data
- name: key_result
  endpoint:
    path: /key-results
    method: POST
- name: key_result
  endpoint:
    path: /key-results/{id}
    method: GET
    data_selector: data
    params: {}
- name: key_result
  endpoint:
    path: /key-results/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: key_result
  endpoint:
    path: /key-results/{id}
    method: DELETE
    data_selector: errors
    params: {}
- name: initiatives
  endpoint:
    path: /initiatives
    method: GET
    data_selector: data
- name: initiatives
  endpoint:
    path: /initiatives
    method: POST
- name: initiative
  endpoint:
    path: /initiatives/{id}
    method: GET
    data_selector: data
    params: {}
- name: initiative
  endpoint:
    path: /initiatives/{id}
    method: PATCH
    data_selector: data
- name: delete_initiative
  endpoint:
    path: /initiatives/{id}
    method: DELETE
    data_selector: null
    params:
      id: uuid
- name: objectives_linked_to_initiative
  endpoint:
    path: /initiatives/{id}/links/objectives
    method: GET
    data_selector: data
- name: features_linked_to_initiative
  endpoint:
    path: /initiatives/{id}/links/features
    method: GET
    data_selector: data
- name: create_initiative_to_objective_link
  endpoint:
    path: /initiatives/{id}/links/objectives/{objectiveId}
    method: POST
- name: delete_link_initiative_objective
  endpoint:
    path: /initiatives/{id}/links/objectives/{objectiveId}
    method: DELETE
- name: create_link_between_initiative_and_feature
  endpoint:
    path: /initiatives/{id}/links/features/{featureId}
    method: POST
- name: delete_initiative_feature_link
  endpoint:
    path: /initiatives/{id}/links/features/{featureId}
    method: DELETE
    data_selector: null
    params: {}
- name: plugin_integration
  endpoint:
    path: /plugin-integrations
    method: POST
    data_selector: data
- name: plugin_integration
  endpoint:
    path: /plugin-integrations
    method: GET
    data_selector: data
- name: plugin_integration
  endpoint:
    path: /plugin-integrations/{id}
    method: GET
    data_selector: data
    params: {}
- name: plugin_integration
  endpoint:
    path: /plugin-integrations/{id}
    method: PATCH
    data_selector: data
- name: plugin_integration
  endpoint:
    path: /plugin-integrations/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: delete_plugin_integration
  endpoint:
    path: /plugin-integrations/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: plugin_integration_connections
  endpoint:
    path: /plugin-integrations/{id}/connections
    method: GET
    data_selector: data
- name: plugin_integration_connection
  endpoint:
    path: /plugin-integrations/{id}/connections/{featureId}
    method: GET
    data_selector: data
    params: {}
- name: plugin_integration_connection
  endpoint:
    path: /plugin-integrations/{id}/connections/{featureId}
    method: PUT
- name: delete_plugin_integration_connection
  endpoint:
    path: /plugin-integrations/{id}/connections/{featureId}
    method: DELETE
- name: jira_integration
  endpoint:
    path: /jira-integrations/{id}
    method: GET
- name: jira_integration
  endpoint:
    path: /jira-integrations
    method: GET
    data_selector: data
- name: jira_integration_connection
  endpoint:
    path: /jira-integrations/{id}/connections/{featureId}
    method: GET
    data_selector: data
    params: {}
- name: jira_integration_connections
  endpoint:
    path: /jira-integrations/{id}/connections
    method: GET
    data_selector: data
- name: webhook_subscription
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: webhook_subscriptions
  endpoint:
    path: /webhooks
    method: GET
    data_selector: data
- name: webhook_subscription
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    data_selector: errors
    params: {}
- name: note
  endpoint:
    path: /notes
    method: POST
    data_selector: data
- name: company
  endpoint:
    path: /companies
    method: POST
    data_selector: data
    params: {}
- name: feature
  endpoint:
    path: /features
    method: POST
    data_selector: data
- name: custom_fields
  endpoint:
    path: /hierarchy-entities/custom-fields
    method: GET
    data_selector: data
    params:
      type: ''
- name: release_group
  endpoint:
    path: /release-groups
    method: POST
    data_selector: data
- name: objectives
  endpoint:
    path: /objectives
    method: GET
    data_selector: data
- name: key_results
  endpoint:
    path: /key-results
    method: GET
    data_selector: data
- name: initiatives
  endpoint:
    path: /initiatives
    method: GET
    data_selector: data
- name: plugin_integration
  endpoint:
    path: /plugin-integrations
    method: POST
- name: jira_integration
  endpoint:
    path: /jira-integrations/{id}
    method: GET
    data_selector: data
    params: {}
- name: webhook_subscription
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: Productboard Note
  endpoint:
    path: /services/data/vXX.X/sobjects/Productboard_Note__c
    method: POST
    data_selector: records
    params: {}
notes:
- It is not yet possible to highlight insights within notes. You can only associate
  entire notes with features via the API.
- Embarking on your journey with the Productboard API starts with creating an API
  token.
- For trial extensions, please contact your account manager or reach out to support@productboard.com.
- Ensure all tags in rich text are properly closed.
- Unsupported tags will be stripped out or return an error.
- Our API comes with a friendly rate limit — 50 requests per second, to be exact.
  Hit this limit, and you'll be greeted with a cheeky `429 Too Many Requests` response.
- Just add a `Productboard-Partner-Id` header to your requests, along with your unique
  partner ID.
- 429 The client's request rate limit has been exceeded
- This API is paginated, only the first 100 items are returned by default.
- The URL for this request expired after 30 days.
- The client's request rate limit has been exceeded. Retry after specified seconds.
- Returns a list of entities (product, component, feature, or subfeature) associated
  with a given note.
- API version required in headers.
- The client's request rate limit has been exceeded
- Uses Bearer token for authentication
- We support just manual fields for now.
- API version is required in the header.
- Feature creation request requires a data object.
- URL for this request expired after 30 days.
- This API only returns the data regarding the custom field definition, not the values
  for hierarchy entities.
- Part of the creation process is a probe request to verify that the referenced service
  really intends to receive the notifications.
- Creates a new webhook subscription to be actively notified on each change in the
  specified entities.
- Productboard REST API 2.0 is currently in Beta.
- We recommend not using the Beta API in production yet.
- The client should recursively follow links.next link in the response to fetch the
  next page.
- The integration service is an application (or process) fully developed, deployed,
  and taken care of by you.
- Productboard only provides the API you can call or webhooks you can subscribe to.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Integration configuration allows multiple configurations.
- Integration service is not part of the third-party service.
- Only Makers with admin access are able to authorize OAuth2 applications to access
  their workspaces.
errors:
- '400 Bad Request: Unsupported tag sent to Feature APIs.'
- '429 Too Many Requests: Hit the rate limit'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'validation.*: Didn''t pass validation? Check against our OpenAPI spec for the nitty-gritty
  details.'
- 'space.notFound: Like a missing puzzle piece, we couldn''t locate the requested
  Productboard space.'
- 'planUpgrade.required: Time for an upgrade? This endpoint might need a more robust
  plan.'
- 'scopes.invalid: Missing the right access? Your OAuth2 scopes might need a second
  look.'
- 'system.timeout: A bit of a wait time; part of our system didn''t respond quickly
  enough.'
- 'system.httpMethodNotSupported: This HTTP method isn''t on our dance card.'
- 'system.internalServerError: Something''s amiss on our end. We''re on it!'
- 'system.apiNotEnabled: Your space might not be set up for API calls just yet.'
- '409: One of the following: * provided email address does not match an existing
  email address associated with the user identified by the given external ID * provided
  external ID does not match the existing external ID of the user identified by the
  given email address * the domain specified in `company.domain` does not correspond
  with the user''s assigned company domain based on the external ID provided * `company.domain`
  doesn''t match the external ID of the company'
- '422: One of the following: * `source` already exists * `display_url` is not a properly
  formatted url * Combination of `customer_email`, `user.email` and `company.domain`
  is supplied. Only one of the provided fields is allowed at a time. * User does not
  exist and cannot be set as note owner * company does not exist and cannot be set
  on note (when `company.id` has been provided) * cannot set both company `id` and
  `domain` attributes'
- '422: `pageCursor` is invalid or expired'
- 429 The client's request rate limit has been exceeded
- user.notFound
- follower.alreadyExists
- follower.notFound
- request.invalid
- 404 Not found
- 422 Unprocessable entity
- '422 Unprocessable Entity: The specified search parameter is not valid.'
- 'note.notFound: Note with the requested ID cannot be found.'
- '429: The client''s request rate limit has been exceeded'
- 422 Unprocessable Entity
- '422 Unprocessable Entity: Consult the list below for possible values and their
  meanings: parameter.invalid - The specified search parameter is not valid. note.notFound
  - Note with the requested ID cannot be found. tag.notFound - Tag with the requested
  name cannot be found on the specified note. tag.notOnNote - Tag with the requested
  name is not associated with the specified note.'
- '429: The client''s request rate limit has been exceeded. Retry after specified
  seconds.'
- id: note.notFound
  status: '404'
  code: note.notFound
  title: Requested Note could not be found.
  detail: The note you are trying to access does not exist.
- id: entity.notFound
  status: '404'
  code: entity.notFound
  title: Requested Entity could not be found.
  detail: The entity you are trying to access does not exist.
- id: note.notFound
  status: '404'
  code: note.notFound
  title: Requested Note could not be found.
  detail: More detail about what exactly happened is usually provided within the other
    properties of this object.
- id: entity.notFound
  status: '404'
  code: entity.notFound
  title: Requested Entity could not be found.
  detail: More detail about what exactly happened is usually provided within the other
    properties of this object.
- 'URL Expired: The URL for this request expired after 30 days.'
- id: feedbackFormConfiguration.notFound
  status: '404'
  code: feedbackFormConfiguration.notFound
  title: Requested configuration could not be found.
  detail: The requested configuration could not be found.
- id: field.notFound
  status: '404'
  code: field.notFound
  title: Provided field could not be found.
  detail: The provided field could not be found.
- id: field.required
  status: '400'
  code: field.required
  title: Required field is missing.
  detail: A required field is missing from the request.
- id: field.duplicate
  status: '400'
  code: field.duplicate
  title: Provided field is a duplicate.
  detail: The provided field is a duplicate.
- id: value.required
  status: '400'
  code: value.required
  title: Required field is missing a value.
  detail: A required field is missing a value.
- id: value.unprocessable
  status: '422'
  code: value.unprocessable
  title: Provided value for a field is unprocessable.
  detail: The provided value for a field is unprocessable.
- id: user.notFound
  status: '404'
  code: user.notFound
  title: Field value references a user that could not be found.
  detail: The field value references a user that could not be found.
- id: company.notFound
  status: '404'
  code: company.notFound
  title: Field value references a company that could not be found.
  detail: The field value references a company that could not be found.
- id: entity.notFound
  status: '404'
  code: entity.notFound
  title: Field value references an entity that could not be found.
  detail: The field value references an entity that could not be found.
- feedbackFormConfiguration.notFound
- field.notFound
- field.required
- field.duplicate
- value.required
- value.unprocessable
- company.notFound
- entity.notFound
- code: feedbackFormConfiguration.notFound
  title: Requested configuration could not be found.
  detail: The specified feedback form configuration is unavailable.
- code: field.notFound
  title: Provided field could not be found.
  detail: The specified field does not exist in the provided context.
- code: field.required
  title: Required field is missing.
  detail: A necessary field is not included in the request.
- code: field.duplicate
  title: Provided field is a duplicate.
  detail: The request contains a field that has been submitted multiple times.
- code: value.required
  title: Required field is missing a value.
  detail: A required field does not have an associated value.
- code: value.unprocessable
  title: Provided value for a field is unprocessable.
  detail: The value provided cannot be processed due to its format or content.
- code: user.notFound
  title: Field value references a user that could not be found.
  detail: The user ID provided does not correspond to any existing user.
- code: company.notFound
  title: Field value references a company that could not be found.
  detail: The company ID provided does not correspond to any existing company.
- code: entity.notFound
  title: Field value references an entity that could not be found.
  detail: The entity ID provided does not correspond to any existing entity.
- 400 Bad request.
- 404 Not found.
- '422 One of the following: * Cannot update content of notes of this type (can only
  update simple notes content) * Cannot update note with snippets * Cannot set both
  user and company parameters * User does not exist and cannot be set as note owner
  * company does not exist and cannot be set on note (when `company.id` provided)
  * cannot set both company `id` and `domain` attributes'
- parameter.invalid
- feature.notFound
- 'parameter.invalid: The specified search parameter is not valid.'
- 'feature.notFound: Feature with the requested ID cannot be found.'
- name.blank - Company Field name can't be blank. You have to specify a name in the
  request.
- companyField.notFound - Requested Company Field could not be found.
- 'name.blank: Company Field name can''t be blank. You have to specify a name in the
  request.'
- 'companyField.notFound: Requested Company Field could not be found.'
- validation.request.body.schema.oneOf
- validation.request.body.schema.required
- validation.request.body.schema.type
- validation.request.body.schema.outOfRange
- companyFieldValue.notFound
- '204: Success, the company custom field value has been deleted.'
- externalId.conflict
- email.conflict
- 'user.notFound: Requested user could not be found.'
- 'externalId.conflict: Provided externalId is in conflict with externalId of a different
  user'
- 'email.conflict: Provided email is in conflict with email of a different user'
- user.notFound - Requested user could not be found.
- externalId.conflict - Provided externalId is in conflict with externalId of a different
  user
- email.conflict - Provided email is in conflict with email of a different user
- '204: Success, the User has been deleted.'
- feature.deletionForbidden.isParent
- feature.limitExceeded
- product.notFound
- component.notFound
- parent.notFound
- parent.invalid
- parent.invalidHierarchy
- featureStatus.notFound
- featureStatus.name.ambiguous
- featureStatus.idAndNameSpecified
- featureStatus.notSpecified
- type.invalid
- startDate.invalidValue
- startDate.isMissing
- startDate.invalidFormat
- timeframeGranularity.invalidValue
- member.notFound
- 200 Success, the response contains valid data.
- 'feature.notFound: Requested feature could not be found.'
- 'feature.deletionForbidden.isParent: Requested feature could not be deleted since
  it has subfeatures.'
- 'feature.limitExceeded: It''s not possible to create new features via API in this
  space, you reached the limit.'
- 'product.notFound: Requested product could not be found.'
- 'component.notFound: Requested component could not be found.'
- 'parent.notFound: Entity specified as a parent could not be found.'
- 'parent.invalid: Specified entity (e.g. subfeature) can not be a parent of another
  entity in feature hierarchy.'
- 'parent.invalidHierarchy: Specified entity can not be a parent of another entity
  in feature hierarchy as it violates one of the constraints.'
- 'featureStatus.notFound: Requested feature status could not be found.'
- 'featureStatus.name.ambiguous: Feature status could not be updated to a status with
  given name since the name is not unique.'
- 'featureStatus.idAndNameSpecified: Feature status could not be updated since both
  ID and name was specified.'
- 'featureStatus.notSpecified: Feature status could not be updated since it was not
  specified.'
- 'type.invalid: The selected entity cannot be a parent of the entity being created/updated.'
- 'startDate.invalidValue: Start date has invalid value.'
- 'startDate.isMissing: Start date is missing.'
- 'startDate.invalidFormat: Start date has invalid format.'
- 'timeframeGranularity.invalidValue: Timeframe granularity has invalid value.'
- 'member.notFound: Specified member is not a valid member in requested space.'
- 'objective.notFound: Requested objective could not be found.'
- objective.notFound
- '204: Successfully deleted the link. No content returned.'
- code: feature.notFound
  detail: Requested feature could not be found.
- code: feature.deletionForbidden.isParent
  detail: Requested feature could not be deleted since it has subfeatures.
- code: feature.limitExceeded
  detail: It's not possible to create new features via API in this space, you reached
    the limit.
- code: product.notFound
  detail: Requested product could not be found.
- code: component.notFound
  detail: Requested component could not be found.
- code: parent.notFound
  detail: Entity specified as a parent could not be found.
- code: parent.invalid
  detail: Specified entity (e.g. subfeature) can not be a parent of another entity
    in feature hierarchy.
- code: parent.invalidHierarchy
  detail: Specified entity can not be a parent of another entity in feature hierarchy
    as it violates one of the constraints.
- code: featureStatus.notFound
  detail: Requested feature status could not be found.
- code: featureStatus.name.ambiguous
  detail: Feature status could not be updated to a status with given name since the
    name is not unique.
- code: featureStatus.idAndNameSpecified
  detail: Feature status could not be updated since both ID and name was specified.
- code: featureStatus.notSpecified
  detail: Feature status could not be updated since it was not specified.
- code: type.invalid
  detail: The selected entity cannot be a parent of the entity being created/updated.
- code: startDate.invalidValue
  detail: Start date has invalid value.
- code: startDate.isMissing
  detail: Start date is missing.
- code: startDate.invalidFormat
  detail: Start date has invalid format.
- code: timeframeGranularity.invalidValue
  detail: Timeframe granularity has invalid value.
- code: member.notFound
  detail: Specified member is not a valid member in requested space.
- code: feature.notFound
  title: 404 Not Found
  detail: Requested feature could not be found.
- code: product.notFound
  title: 404 Not Found
  detail: Requested product could not be found.
- code: component.notFound
  title: 404 Not Found
  detail: Requested component could not be found.
- code: parent.notFound
  title: 404 Not Found
  detail: Entity specified as a parent could not be found.
- code: startDate.invalidValue
  title: Invalid Start Date
  detail: Start date has invalid value.
- code: member.notFound
  title: 404 Not Found
  detail: Specified member is not a valid member in requested space.
- hierarchyEntity.notFound
- customField.notFound
- type.mismatch
- customFieldsValues.filter.invalid
- dropdownOption.invalid
- hierarchyEntity.notFound - Requested hierarchy entity could not be found.
- customField.notFound - Requested custom field could not be found.
- type.mismatch - Specified custom field type and value type do not match.
- customFieldsValues.filter.invalid - Either customField.id or at least one custom
  field type must be specified via query parameters.
- dropdownOption.invalid - Specified dropdown option is not a valid option for this
  custom field.
- member.notFound - Specified member is not a valid member in requested space.
- 'hierarchyEntity.notFound: Requested hierarchy entity could not be found.'
- 'customField.notFound: Requested custom field could not be found.'
- 'type.mismatch: Specified custom field type and value type do not match.'
- 'customFieldsValues.filter.invalid: Either customField.id or at least one custom
  field type must be specified via query parameters.'
- 'dropdownOption.invalid: Specified dropdown option is not a valid option for this
  custom field.'
- releaseGroup.notFound
- release.notFound
- name.conflict
- releaseGroup.deletionForbidden.hasReleases
- release.deletionForbidden.hasAssignments
- planUpgrade.required
- releaseGroups.disabled
- releaseGroup.notAssociated
- releaseGroup.notFound - Requested release group could not be found.
- release.notFound - Requested release could not be found.
- feature.notFound - Requested feature could not be found.
- name.conflict - Provided name is in conflict with different name.
- releaseGroup.deletionForbidden.hasReleases - Requested release group could not be
  deleted since it has releases.
- release.deletionForbidden.hasAssignments - Requested release could not be deleted
  since it has feature release assignments.
- startDate.invalidValue - Start date has invalid value.
- startDate.isMissing - Start date is missing.
- startDate.invalidFormat - Start date has invalid format.
- timeframeGranularity.invalidValue - Timeframe granularity has invalid value.
- planUpgrade.required - The current plan on space does not allow access to this endpoint.
- releaseGroups.disabled - The Multiple release groups option in Settings is disabled
  for your Productboard space.
- releaseGroup.notAssociated - The product of the feature you are assigning is not
  associated with the release group of the release you are assigning to.
- 'releaseGroup.notFound: Requested release group could not be found.'
- 'release.notFound: Requested release could not be found.'
- 'name.conflict: Provided name is in conflict with different name.'
- 'releaseGroup.deletionForbidden.hasReleases: Requested release group could not be
  deleted since it has releases.'
- 'release.deletionForbidden.hasAssignments: Requested release could not be deleted
  since it has feature release assignments.'
- 'planUpgrade.required: The current plan on space does not allow access to this endpoint.'
- 'releaseGroups.disabled: The Multiple release groups option in Settings is disabled
  for your Productboard space.'
- 'releaseGroup.notAssociated: The product of the feature you are assigning is not
  associated with the release group of the release you are assigning to.'
- '204: Successfully deleted the objective. No content returned.'
- 'objective.notFound: Requested objective could not be found'
- objective.notFound - Requested objective could not be found.
- '400 Bad request: Errors that occurred.'
- 204 Successfully deleted the initiative. No content returned.
- pluginIntegration.notFound
- pluginIntegration.connection.notFound
- callback.invalidUrl
- callback.probeFailed
- code: pluginIntegration.notFound
  title: 404 Not found
  detail: Requested plugin integration could not be found.
- code: pluginIntegration.connection.notFound
  title: 404 Not found
  detail: Plugin integration Connection not found.
- code: callback.invalidUrl
  title: Invalid URL
  detail: Given URL for receiving callbacks is either not valid or cannot be used.
- code: callback.probeFailed
  title: Probe Failed
  detail: Callback probe failed. Callback receiver either doesn't have the specified
    contract implemented or it is not accessible on network level.
- 'pluginIntegration.notFound: Requested plugin integration could not be found.'
- 'pluginIntegration.connection.notFound: Plugin integration Connection not found.'
- 'callback.invalidUrl: Given URL for receiving callbacks is either not a syntactically
  valid URL or it cannot be used as a callback receiver.'
- 'callback.probeFailed: Callback probe failed. Callback receiver either doesn''t
  have the specified contract implemented or it is not accessible on network level.'
- 'jiraIntegration.notFound: Jira integration can not be found'
- 'jiraConnection.notFound: Productboard feature - Jira issue connection not found'
- jiraIntegration.notFound
- jiraConnection.notFound
- jiraIntegration.notFound - Jira integration can not be found
- jiraConnection.notFound - Productboard feature - Jira issue connection not found
- webhook.notFound
- webhook.notFound - Requested webhook subscription could not be found.
- callback.invalidUrl - Given URL for receiving callbacks is either not a syntactically
  valid URL or it cannot be used as a callback receiver.
- callback.probeFailed - Callback probe failed. Callback receiver either doesn't have
  the specified contract implemented or it is not accessible on network level.
- 'webhook.notFound: Requested webhook subscription could not be found.'
- '429: Too Many Requests - If you exceed the rate limit.'
- '409 One of the following: * provided email address does not match an existing email
  address associated with the user identified by the given external ID * provided
  external ID does not match the existing external ID of the user identified by the
  given email address * the domain specified in `company.domain` does not correspond
  with the user''s assigned company domain based on the external ID provided * `company.domain`
  doesn''t match the external ID of the company'
- '422 One of the following: * `source` already exists * `display_url` is not a properly
  formatted url * Combination of `customer_email`, `user.email` and `company.domain`
  is supplied. Only one of the provided fields is allowed at a time. * User does not
  exist and cannot be set as note owner * company does not exist and cannot be set
  on note (when `company.id` has been provided) * cannot set both company `id` and
  `domain` attributes'
- code: objective.notFound
  title: Requested objective could not be found.
  detail: Note that more detail about what exactly happened is usually provided within
    the other properties of this object.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - Application Registration
  - JWT Token
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.productboard.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    X-Version: '1'
source_metadata: null
