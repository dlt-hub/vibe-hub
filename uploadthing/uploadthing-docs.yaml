resources:
- name: generateUploadButton
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: response
- name: generateUploadDropzone
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: response
- name: files
  endpoint:
    path: myUploadEndpoint
    method: POST
    data_selector: files
    params: {}
- name: profilePicture
  endpoint:
    path: /file-routes/profilePicture
    method: POST
- name: messageAttachment
  endpoint:
    path: /file-routes/messageAttachment
    method: POST
- name: strictImageAttachment
  endpoint:
    path: /file-routes/strictImageAttachment
    method: POST
- name: mediaPost
  endpoint:
    path: /file-routes/mediaPost
    method: POST
- name: withAwaitedServerData
  endpoint:
    path: /file-routes/withAwaitedServerData
    method: POST
- name: upload
  endpoint:
    path: /route-metadata
    method: POST
    data_selector: fileKeys
    params: {}
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: file
    params: {}
- name: FileRoute
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: upload
    params: {}
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: metadata
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
- name: imageUploader
  endpoint:
    path: /file-routes/imageUploader
    method: POST
    data_selector: file
    params:
      maxFileSize: 4MB
      maxFileCount: 1
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: data
    params: {}
- name: fileRouter
  endpoint:
    path: /api/uploadthing
    method: POST
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: upload
    params:
      maxFileSize: 4MB
      maxFileCount: 1
- name: imageUploader
  endpoint:
    path: /api/uploadthing
    method: POST
    data_selector: data
    params:
      maxFileSize: 4MB
      maxFileCount: 1
- name: uploadthing
  endpoint:
    path: /api/uploadthing
    method: GET
- name: uploadFiles
  endpoint:
    path: /uploadFiles
    method: POST
    data_selector: files
    params: {}
- name: createUpload
  endpoint:
    path: /createUpload
    method: POST
    data_selector: files
    params: {}
- name: createUploadthing
  endpoint:
    path: /api-reference/server#create-uploadthing
    method: POST
- name: createRouteHandler
  endpoint:
    path: /api-reference/server#create-route-handler
    method: POST
- name: UTApi
  endpoint:
    path: /api-reference/server#ut-api
    method: GET
- name: UTFile
  endpoint:
    path: /api-reference/server#ut-file
    method: GET
- name: document
  endpoint:
    path: /api/uploadthing
    method: POST
- name: pollUpload
  endpoint:
    path: /v6/pollUpload/:fileKey
    method: GET
- name: serverCallback
  endpoint:
    path: /v6/serverCallback
    method: GET
- name: serverCallback
  endpoint:
    path: /v6/serverCallback
    method: POST
- name: prepareUpload
  endpoint:
    path: /v6/prepareUpload
    method: POST
- name: uploadFiles
  endpoint:
    path: /v6/uploadFiles
    method: POST
- name: completeMultipart
  endpoint:
    path: /v6/completeMultipart
    method: POST
- name: listFiles
  endpoint:
    path: /v6/listFiles
    method: POST
- name: renameFiles
  endpoint:
    path: /v6/renameFiles
    method: POST
- name: deleteFiles
  endpoint:
    path: /v6/deleteFiles
    method: POST
- name: getAppInfo
  endpoint:
    path: /v7/getAppInfo
    method: POST
- name: getUsageInfo
  endpoint:
    path: /v6/getUsageInfo
    method: POST
- name: failureCallback
  endpoint:
    path: /v6/failureCallback
    method: POST
- name: requestFileAccess
  endpoint:
    path: /v6/requestFileAccess
    method: POST
- name: updateACL
  endpoint:
    path: /v6/updateACL
    method: POST
- name: prepareUpload_v7
  endpoint:
    path: /v7/prepareUpload
    method: POST
- name: pollUpload
  endpoint:
    path: /v6/pollUpload/:fileKey
    method: GET
- name: serverCallback
  endpoint:
    path: /v6/serverCallback
    method: GET
- name: serverCallback
  endpoint:
    path: /v6/serverCallback
    method: POST
- name: prepareUpload
  endpoint:
    path: /v6/prepareUpload
    method: POST
- name: uploadFiles
  endpoint:
    path: /v6/uploadFiles
    method: POST
- name: completeMultipart
  endpoint:
    path: /v6/completeMultipart
    method: POST
- name: listFiles
  endpoint:
    path: /v6/listFiles
    method: POST
- name: renameFiles
  endpoint:
    path: /v6/renameFiles
    method: POST
- name: deleteFiles
  endpoint:
    path: /v6/deleteFiles
    method: POST
- name: getAppInfo
  endpoint:
    path: /v7/getAppInfo
    method: POST
- name: getUsageInfo
  endpoint:
    path: /v6/getUsageInfo
    method: POST
- name: failureCallback
  endpoint:
    path: /v6/failureCallback
    method: POST
- name: requestFileAccess
  endpoint:
    path: /v6/requestFileAccess
    method: POST
- name: updateACL
  endpoint:
    path: /v6/updateACL
    method: POST
- name: prepareUpload
  endpoint:
    path: /v7/prepareUpload
    method: POST
- name: uploadFiles
  endpoint:
    path: /uploadFiles
    method: POST
    data_selector: data
    params: {}
- name: uploadFilesFromUrl
  endpoint:
    path: /uploadFilesFromUrl
    method: POST
    data_selector: data
    params: {}
- name: deleteFiles
  endpoint:
    path: /deleteFiles
    method: DELETE
    data_selector: data
    params: {}
- name: listFiles
  endpoint:
    path: /listFiles
    method: GET
    data_selector: data
    params:
      limit: 500
      offset: 0
- name: generateSignedURL
  endpoint:
    path: /generateSignedURL
    method: POST
    data_selector: data
    params: {}
- name: getSignedURL
  endpoint:
    path: /getSignedURL
    method: GET
    data_selector: data
    params: {}
- name: updateACL
  endpoint:
    path: /updateACL
    method: POST
    data_selector: object
    params: {}
- name: uploadFiles
  endpoint:
    path: /uploadFiles
    method: POST
    data_selector: data
    params:
      files: MaybeArray<FileEsque>
- name: uploadFilesFromUrl
  endpoint:
    path: /uploadFilesFromUrl
    method: POST
    data_selector: data
    params:
      urls: MaybeArray<MaybeURL | URLWithOverrides>
- name: deleteFiles
  endpoint:
    path: /deleteFiles
    method: DELETE
    data_selector: data
    params:
      keys: MaybeArray<string>
- name: listFiles
  endpoint:
    path: /listFiles
    method: GET
    data_selector: data
    params:
      limit: number
      offset: number
- name: renameFiles
  endpoint:
    path: /renameFiles
    method: PATCH
    data_selector: data
    params: {}
- name: generateSignedURL
  endpoint:
    path: /generateSignedURL
    method: POST
    data_selector: data
    params:
      key: string
- name: getSignedURL
  endpoint:
    path: /getSignedURL
    method: GET
    data_selector: data
    params:
      key: string
- name: updateACL
  endpoint:
    path: /updateACL
    method: POST
    data_selector: object
    params: {}
notes:
- The url to where you are serving your uploadthing file router is required if your
  route handler is not served from /api/uploadthing.
- The maximum file size for images is 4MB.
- The maximum file size for videos is 16MB.
- The two boolean flags are optional, and used to alter the behaviour of the upload.
- The upload will fail if any parameter doesn't match the uploaded file (e.g. the
  file is larger than the specified size).
- Do not use the raw file URL from the storage provider, e.g. https://bucket.s3.region.amazonaws.com/<FILE_KEY>.
  We reserve the right to move objects between different storage providers and/or
  buckets, so this URL is not guaranteed to remain valid.
- A token for interacting with the SDK is required
- A token for interacting with the SDK is required.
- Requires setup of uploadthing secret key from the dashboard
- Tanstack Start is currently in beta, this guide works at the time of writing
- All files uploaded to uploadthing are associated with a FileRoute.
- You might need to setup some CORS rules on your server to allow the client to make
  requests to the server.
- Callback data is signed (HMAC SHA256) using the API key that uploaded the file.
- Ensure your endpoint is appropriately protected by using version ^6.7 of the Uploadthing
  SDK.
- Regions and Private files are only available on paid plans.
- Our prebuilt components are customizable so you can make them fit with the theme
  of your application.
- Enable more verbose logging.
- What format log entries should be in.
- Use the UploadThing dashboard to manage your API settings.
- The UploadThing REST API has moved to a separate domain, api.uploadthing.com.
- Make sure that /api/uploadthing is NOT blocked through your middleware.
- In production, we require your application to be reachable over the Internet.
- The UploadThing REST API has moved to a separate domain.
- If you are seeing this issue in development, and are using edge runtime, there is
  a limitation in Next.js where it does not allow an edge function to fetch itself.
errors:
- 'Unauthorized: If the user is not authenticated'
- 'Rate limit exceeded: The request limit has been exceeded.'
- 'BAD_REQUEST: 400'
- 'NOT_FOUND: 404'
- 'FORBIDDEN: 403'
- 'INTERNAL_SERVER_ERROR: 500'
- 'INTERNAL_CLIENT_ERROR: 500'
- 'TOO_LARGE: 413'
- 'TOO_SMALL: 400'
- 'TOO_MANY_FILES: 400'
- 'KEY_TOO_LONG: 400'
- 'URL_GENERATION_FAILED: 500'
- 'UPLOAD_FAILED: 500'
- 'MISSING_ENV: 500'
- 'FILE_LIMIT_EXCEEDED: 500'
- 'Invalid API Key: Check your API key configuration.'
- 'File Not Found: Ensure the file key provided is correct.'
- 'Rate Limit Exceeded: Reduce the frequency of API calls.'
- Failed to simulate callback for file. Is your webhook configured correctly?
- 'Invalid Signing Secret: This error most likely occurs due to an outdated Node.js
  version.'
- 'Invalid Signing Secret: Most likely occurs due to an outdated Node.js version.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.uploadthing.com
  auth:
    type: ApiKeyAuth
    location: header
    header_name: x-uploadthing-api-key
  headers:
    Accept: '*/*'
source_metadata: null
