resources:
- name: User Collection Portfolio
  endpoint:
    path: /reference/getuserportfoliocollections
    method: GET
- name: User Listings
  endpoint:
    path: /reference/getuseractivelistings-1
    method: GET
- name: User NFT Bids
  endpoint:
    path: /reference/getusernftbids
    method: GET
- name: User Transactions
  endpoint:
    path: /reference/getusertransactions-1
    method: GET
- name: collections
  endpoint:
    path: /api/v1/collections
    method: GET
    params:
      sortBy: statsV2.volume24h:desc
      limit: 10
- name: marketplace
  endpoint:
    path: /api/v1/marketplace
    method: GET
    data_selector: records
- name: amm
  endpoint:
    path: /api/v1/amm
    method: GET
    data_selector: records
- name: whitelist
  endpoint:
    path: /api/v1/whitelist
    method: GET
    data_selector: records
- name: escrow
  endpoint:
    path: /api/v1/escrow
    method: GET
    data_selector: records
- name: User Collection Portfolio
  endpoint:
    path: /api/v1/mint/collection
    method: GET
- name: NFT Buy
  endpoint:
    path: /api/v1/tx/buy
    method: GET
- name: User Listings
  endpoint:
    path: /user/active_listings
    method: GET
- name: close_tswap_pool
  endpoint:
    path: /api/v1/tx/tswap/close_order
    method: GET
    data_selector: txs
    params:
      poolAddress: string
      blockhash: string
      compute: int32
      priorityMicroLamports: int32
- name: edit_tswap_pool
  endpoint:
    path: /api/v1/tx/tswap/edit_order
    method: GET
    data_selector: txs
    params:
      poolAddress: string
      poolType: string
      curveType: string
      startingPrice: float
      delta: float
      blockhash: string
      mmKeepFeesSeparate: boolean
      mmFeeBps: double
      maxTakerSellCount: int32
      useSharedEscrow: boolean
      compute: int32
      priorityMicroLamports: int32
- name: deposit_withdraw_nft
  endpoint:
    path: /api/v1/tx/tswap/deposit_withdraw
    method: GET
    data_selector: txs
    params:
      action: DEPOSIT
      poolAddress: ''
      mint: ''
      blockhash: ''
      compute: 0
      priorityMicroLamports: 0
      nftSource: ''
- name: deposit_withdraw_sol
  endpoint:
    path: /deposit_withdraw_sol
    method: GET
    data_selector: txs
    params:
      action: DEPOSIT
      poolAddress: ''
      lamports: 0
      blockhash: ''
- name: NFT Buy
  endpoint:
    path: /tx/buy
    method: GET
    data_selector: txs
- name: sell
  endpoint:
    path: /api/v1/tx/sell
    method: GET
    data_selector: txs
    params: {}
- name: NFT List
  endpoint:
    path: /api/v1/tx/list
    method: GET
    data_selector: txs
- name: delist
  endpoint:
    path: /api/v1/tx/delist
    method: GET
    data_selector: txs
    params:
      mint: ''
      owner: ''
      blockhash: ''
      feePayer: ''
      compute: 0
      priorityMicroLamports: 0
- name: edit_listing
  endpoint:
    path: /api/v1/tx/edit
    method: GET
    data_selector: txs
- name: place_nft_bid
  endpoint:
    path: /tx/bid
    method: GET
    data_selector: BidResponse
- name: place_trait_bid
  endpoint:
    path: /api/v1/tx/trait_bid
    method: GET
    data_selector: BidResponse
    params: {}
- name: collection_bid
  endpoint:
    path: /tx/collection_bid
    method: GET
    data_selector: BidResponse
    params: {}
- name: edit_bid
  endpoint:
    path: /tx/edit_bid
    method: GET
    data_selector: txs
    params: {}
- name: cancel_bid
  endpoint:
    path: /api/v1/tx/cancel_bid
    method: GET
    data_selector: txs
    params:
      bidStateAddress: string
      blockhash: string
      compute: int32
      priorityMicroLamports: int32
- name: deposit_withdraw_escrow
  endpoint:
    path: /api/v1/tx/deposit_withdraw_escrow
    method: GET
    data_selector: json
    params: {}
- name: create_tamm_pool
  endpoint:
    path: /tx/tamm/create_order
    method: GET
    data_selector: txs
    params:
      collId: string
      owner: string
      poolType: string
      curveType: string
      startingPrice: int32
      delta: int32
      mmCompoundFees: boolean
      blockhash: string
      makerBroker: string
      useSharedEscrow: boolean
      mmFeeBps: int32
      depositLamports: int32
      maxTakerSellCount: int32
      expireInSec: int32
      topUpMargin: boolean
      compute: int32
      priorityMicroLamports: int32
- name: close_tamm_pool
  endpoint:
    path: /api/v1/tx/tamm/close_order
    method: GET
    data_selector: txs
    params:
      poolAddress: required
      blockhash: required
      compute: ≥ 0
      priorityMicroLamports: ≥ 0
- name: edit_tamm_pool
  endpoint:
    path: /api/v1/tx/tamm/edit_order
    method: GET
    data_selector: txs
    params:
      poolAddress: ''
      curveType: ''
      startingPrice: ''
      delta: ''
      mmCompoundFees: ''
      resetPriceOffset: ''
      blockhash: ''
      makerBroker: ''
      mmFeeBps: ''
      maxTakerSellCount: ''
      expireInSec: ''
      compute: ''
      priorityMicroLamports: ''
- name: Deposit/Withdraw NFT
  endpoint:
    path: /api/v1/tx/tamm/deposit_withdraw
    method: GET
    params:
      action: DEPOSIT
      excludeMintProof: 'false'
- name: deposit_withdraw_sol
  endpoint:
    path: /api/v1/tx/tamm/deposit_withdraw_sol
    method: GET
    data_selector: txs
    params: {}
- name: user_collection_portfolio
  endpoint:
    path: /user/portfolio
    method: GET
    data_selector: json
    params:
      wallet: string
- name: active_listings
  endpoint:
    path: /api/v1/user/active_listings
    method: GET
    data_selector: json
    params:
      wallets: array of strings
      sortBy: string
      limit: int32
      cursor: string
      collId: string
      currencies: array of strings
- name: user_nft_bids
  endpoint:
    path: /user/nft_bids
    method: GET
    data_selector: response body
    params:
      owner: string
      limit: int32
      collId: string
      cursor: string
      bidAddresses: array of strings
- name: collection_bids
  endpoint:
    path: /user/coll_bids
    method: GET
    params:
      owner: string
      limit: int32
      collId: string
      cursor: string
      bidAddresses: array of strings
- name: trait_bids
  endpoint:
    path: /user/trait_bids
    method: GET
    data_selector: json
    params:
      owner: string
      limit: int32
      collId: string
      cursor: string
      bidAddresses: array of strings
- name: amm_pools
  endpoint:
    path: /user/amm_pools
    method: GET
    data_selector: json
    params:
      owner: ''
      poolAddresses: ''
      limit: ''
      cursor: ''
- name: tamm_pools
  endpoint:
    path: /user/tamm_pools
    method: GET
    data_selector: json
    params:
      owner: string
      poolAddresses: array of strings
      limit: int32
      cursor: string
- name: escrow_accounts
  endpoint:
    path: /user/escrow_accounts
    method: GET
    params:
      owner: string
- name: user_inventory
  endpoint:
    path: /user/inventory_by_collection
    method: GET
    data_selector: json
    params:
      wallet: string
      collId: string
      limit: int32
      cursor: string
- name: priority_fees
  endpoint:
    path: /rpc/priority_fees
    method: GET
    data_selector: object
    params: {}
- name: NFTs
  endpoint:
    path: /api/v1/mint
    method: GET
    data_selector: json
    params:
      mints: array of strings
- name: nfts_by_collection
  endpoint:
    path: /mint/collection
    method: GET
    params:
      collId: required
      sortBy: required
      limit: required
      onlyListings: boolean
      cursor: string
      minPrice: float
      maxPrice: float
      traitCountMin: int32
      traitCountMax: int32
      name: string
      excludeOwners: array of strings
      includeOwners: array of strings
      includeCurrencies: array of strings
      traits: array of strings
      raritySystem: string
      rarityMin: float
      rarityMax: float
      onlyInscriptions: boolean
      immutableStatus: string
- name: active_listings
  endpoint:
    path: /mint/active_listings
    method: GET
    data_selector: json
    params: {}
- name: nft_bids
  endpoint:
    path: /collections/nft_bids
    method: GET
    data_selector: json
    params:
      mints: array of strings
- name: collection_bids
  endpoint:
    path: /collections/coll_bids
    method: GET
    data_selector: json
    params:
      collId: string
      limit: int32
      cursor: string
- name: trait_bids
  endpoint:
    path: /trait_bids
    method: GET
    data_selector: json
    params:
      collId: string
      limit: int32
      cursor: string
- name: TSwap Pools
  endpoint:
    path: /collections/pools
    method: GET
    data_selector: json
    params:
      collId: required
- name: tamm_pools
  endpoint:
    path: /tamm_pools
    method: GET
    data_selector: json
    params:
      collId: required
- name: collection_transaction_history
  endpoint:
    path: /api/v1/collections/tx_history
    method: GET
    data_selector: json
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: find_collection
  endpoint:
    path: /collections/find_collection
    method: GET
    data_selector: object
    params:
      filter: string
- name: get_collections_by_nfts
  endpoint:
    path: /collections/mints
    method: GET
    data_selector: array of objects
    params:
      mints: array of strings
- name: mint_list
  endpoint:
    path: /api/v1/collections/list
    method: GET
    data_selector: array of strings
    params:
      collId: string
      limit: int32
      after: string
- name: collection_traits
  endpoint:
    path: /collections/traits
    method: GET
    data_selector: json
- name: Refresh Mint Metadata
  endpoint:
    path: /trigger/refresh_metadata
    method: POST
- name: refresh_rarities
  endpoint:
    path: /api/v1/trigger/refresh_rarities
    method: POST
    data_selector: boolean
    params:
      collId: string
- name: mint_proof
  endpoint:
    path: /mint_proof
    method: GET
    data_selector: array of arrays of doubles | null
    params:
      whitelist: string
      mint: string
- name: trait_bid_attributes
  endpoint:
    path: /trait_bid_attributes
    method: GET
    data_selector: json
    params:
      bidStateAddress: required
- name: whitelist_info
  endpoint:
    path: /whitelist_info
    method: GET
    data_selector: json
    params: {}
- name: initialize_market
  endpoint:
    path: /initialize-market
    method: GET
    data_selector: string
    params: {}
- name: approve_seat
  endpoint:
    path: /api/v1/sft/approve-seat
    method: GET
    data_selector: string
    params:
      payer: string
      trader: string
      marketAuthority: string
      market: string
- name: list_transaction
  endpoint:
    path: /list
    method: GET
    data_selector: string
    params:
      payer: string
      maker: string
      market: string
      priceInTicks: double
      numBaseLots: double
- name: edit_transaction
  endpoint:
    path: /edit
    method: GET
    data_selector: response
    params: {}
- name: buy_transaction
  endpoint:
    path: /sft/buy
    method: GET
    data_selector: string
    params:
      trader: string
      market: string
      amount: double
      orderType: string
- name: cancel_transaction
  endpoint:
    path: /api/v1/sft/cancel
    method: GET
    data_selector: string
    params:
      payer: string
      trader: string
      market: string
      orderSequenceNumber: double
- name: listings
  endpoint:
    path: /api/v1/sft/listings
    method: GET
    data_selector: json
    params:
      market: string
- name: newTransaction
  endpoint:
    path: /reference/newtransaction
    method: GET
    data_selector: ''
    params: {}
- name: ping
  endpoint:
    path: /reference/ping
    method: GET
    data_selector: ''
    params: {}
- name: tcompBidUpdateAll
  endpoint:
    path: /reference/tcompbidupdateall
    method: GET
    data_selector: ''
    params: {}
- name: tcompBidUpdate
  endpoint:
    path: /reference/tcompbidupdate
    method: GET
    data_selector: ''
    params:
      collId: string
- name: ammOrderUpdateAll
  endpoint:
    path: /reference/ammorderupdateall
    method: GET
    data_selector: ''
    params: {}
- name: ammOrderUpdate
  endpoint:
    path: /reference/ammorderupdate
    method: GET
    data_selector: ''
    params:
      collId: string
- name: newTransaction
  endpoint:
    path: /reference/newtransaction
    method: GET
    data_selector: data.tx
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: type
    params: {}
- name: tcompBidUpdateAll
  endpoint:
    path: /tcompBidUpdateAll
    method: GET
    data_selector: data
    params: {}
- name: tcompBidUpdate
  endpoint:
    path: /reference/tcompbidupdate
    method: GET
    data_selector: data
    params: {}
- name: ammOrderUpdateAll
  endpoint:
    path: /reference/ammorderupdateall
    method: GET
    data_selector: data.tx
- name: ammOrderUpdate
  endpoint:
    path: /reference/ammorderupdate
    method: GET
- name: unsubscribe
  endpoint:
    path: /unsubscribe
    method: POST
    data_selector: status
    params:
      subscriptionId: string
- name: ohlc_candles
  endpoint:
    path: /tv/history
    method: GET
    data_selector: object
    params:
      from: '1'
- name: close_tswap_pool
  endpoint:
    path: /api/v1/tx/tswap/close_order
    method: GET
    data_selector: txs
    params:
      poolAddress: string
      blockhash: string
      compute: int32
      priorityMicroLamports: int32
- name: nft_buy
  endpoint:
    path: /tx/buy
    method: GET
    data_selector: txs
    params: {}
- name: deposit_withdraw_escrow
  endpoint:
    path: /api/v1/tx/deposit_withdraw_escrow
    method: GET
    data_selector: json
    params: {}
- name: create_tamm_pool
  endpoint:
    path: /tx/tamm/create_order
    method: GET
    data_selector: txs
    params:
      collId: string
      owner: string
      poolType: TOKEN
      curveType: LINEAR
      mmCompoundFees: 'true'
      startingPrice: int32
      delta: int32
      blockhash: string
      makerBroker: string
      useSharedEscrow: boolean
      mmFeeBps: int32
      depositLamports: int32
      maxTakerSellCount: int32
      expireInSec: int32
      topUpMargin: boolean
      compute: int32
      priorityMicroLamports: int32
- name: user_collection_portfolio
  endpoint:
    path: /user/portfolio
    method: GET
    data_selector: json
    params:
      wallet: string
- name: priority_fees
  endpoint:
    path: /rpc/priority_fees
    method: GET
    data_selector: object
- name: NFTs Info
  endpoint:
    path: /mint
    method: GET
    data_selector: json
    params:
      mints: array of strings
- name: active_listings
  endpoint:
    path: /mint/active_listings
    method: GET
    params:
      sortBy: ListingPriceAsc
      includePrivateTaker: 'false'
- name: verified_collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
    params:
      sortBy: statsV2.volume1h:desc
      limit: 100
- name: refresh_mint_metadata
  endpoint:
    path: /trigger/refresh_metadata
    method: POST
    data_selector: object
    params:
      mint: string
- name: mint_proof
  endpoint:
    path: /mint_proof
    method: GET
    data_selector: array of arrays of doubles
    params:
      whitelist: string
      mint: string
- name: whitelist_info
  endpoint:
    path: /api/v1/sdk/whitelist_info
    method: GET
    data_selector: json
    params: {}
- name: initialize_market
  endpoint:
    path: /initialize-market
    method: GET
notes:
- This API is in Alpha! Breaking changes may occur without warning!
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The old SDKs will not be supported going forward and will partially lose their functionality.
- The new SDKs depend on the new backwards breaking web3.js version.
- Creates the transaction to edit an NFT listing
- Including `includeBidCount`, `includeFavouriteCount`, `includeUnverified`, `includeCompressed`
  will affect the response time
- There is a 1 hour cooldown
- Creates the transaction to deposit or withdraw from an escrow account
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 404 Not Found
- '400: Validation Error'
- 400 Validation Error
- '422: Validation Error'
- '400: Bad Request - message required'
- '404: Not Found - message required'
- '422: Unprocessable Entity - message required'
- '400'
- '404: Resource not found'
- '404: Not Found'
- '400: Bad Request'
- '422: Unprocessable Entity'
- '400: required'
- '404: required'
- '422: required'
- '400: message required'
- '404: message required'
- '404'
- '422'
- '400: Required message'
- '404: Required message'
- '422: Required message'
- '400: required message'
- '404: required message'
- '422: required message'
- '422: message required'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.mainnet.tensordev.io/api/v1/tx/tswap
  headers:
    accept: application/json
source_metadata: null
