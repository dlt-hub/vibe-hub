resources:
- name: Population Weighted HDD
  endpoint:
    path: /hdd
    method: GET
    params:
      initialization_time: string
      ens_member: string
      intracycle: boolean
      external_model: string
- name: Population Weighted CDD
  endpoint:
    path: /cdd
    method: GET
    params:
      initialization_time: string
      ens_member: string
      intracycle: boolean
      external_model: string
- name: points
  endpoint:
    path: /points.json
    method: GET
    data_selector: forecasts
- name: gridded
  endpoint:
    path: /gridded/{variable}
    method: GET
- name: gridded_full
  endpoint:
    path: /gridded/FULL
    method: GET
- name: initialization_times
  endpoint:
    path: /initialization_times.json
    method: GET
    data_selector: available
    params: {}
- name: historical_initialization_times
  endpoint:
    path: /historical_initialization_times.json
    method: GET
    data_selector: records
    params: {}
- name: generation_times
  endpoint:
    path: /generation_times.json
    method: GET
    data_selector: records
    params: {}
- name: forecast_hours
  endpoint:
    path: /forecast_hours.json
    method: GET
    data_selector: records
    params: {}
- name: tropical_cyclones
  endpoint:
    path: /tropical_cyclones
    method: GET
    data_selector: records
    params: {}
- name: gridded_surface
  endpoint:
    path: /gridded/{variable}
    method: GET
    data_selector: data
    params: {}
- name: gridded_upper_level
  endpoint:
    path: /gridded/{level}/{variable}
    method: GET
    data_selector: data
    params: {}
- name: points
  endpoint:
    path: /points
    method: GET
    data_selector: response
    params: {}
- name: init_times
  endpoint:
    path: /init_times
    method: GET
    data_selector: initialization_times
    params: {}
- name: hist_init_times
  endpoint:
    path: /hist_init_times
    method: GET
    data_selector: historical_initialization_times
    params: {}
- name: generation_times
  endpoint:
    path: /generation_times
    method: GET
    data_selector: creation_times
    params: {}
- name: forecast_hours
  endpoint:
    path: /forecast_hours
    method: GET
    data_selector: forecast_hours
    params: {}
- name: gridded
  endpoint:
    path: /gridded
    method: GET
    data_selector: gridded_forecast
    params: {}
- name: super_observations
  endpoint:
    path: /api/data/super_observations
    method: GET
    data_selector: records
- name: observations
  endpoint:
    path: /api/data/observations
    method: GET
    data_selector: records
- name: flying_missions
  endpoint:
    path: /api/data/flying_missions
    method: GET
    data_selector: records
- name: mission_launch_site
  endpoint:
    path: /api/data/mission_launch_site
    method: GET
    data_selector: records
- name: predicted_path
  endpoint:
    path: /api/data/predicted_path
    method: GET
    data_selector: records
- name: population_weighted_cdd
  endpoint:
    path: /population_weighted_cdd
    method: GET
    data_selector: forecasts
    params:
      initialization_time: YYYY-MM-DDTHH:mm:ss
- name: tropical_cyclones
  endpoint:
    path: /tropical_cyclones
    method: GET
    data_selector: cyclones
    params:
      initialization_time: YYYY-MM-DDTHH:mm:ss
      basin: string
- name: grid_wind_v_10m
  endpoint:
    path: /windborne/grid_wind_v_10m
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: grid_wind_u_100m
  endpoint:
    path: /windborne/grid_wind_u_100m
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: grid_wind_v_100m
  endpoint:
    path: /windborne/grid_wind_v_100m
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: grid_pressure_msl
  endpoint:
    path: /windborne/grid_pressure_msl
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: grid_500hpa_temperature
  endpoint:
    path: /windborne/grid_500hpa_temperature
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: grid_850hpa_temperature
  endpoint:
    path: /windborne/grid_850hpa_temperature
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: grid_500hpa_wind_u
  endpoint:
    path: /windborne/grid_500hpa_wind_u
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: grid_500hpa_wind_v
  endpoint:
    path: /windborne/grid_500hpa_wind_v
    method: GET
    data_selector: forecast
    params:
      time: string
      save_to_file: string
- name: hist_gridded
  endpoint:
    path: /windborne/hist_gridded
    method: GET
    data_selector: forecast
    params:
      variable: string
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: hist_temp_2m
  endpoint:
    path: /windborne/hist_temp_2m
    method: GET
    data_selector: forecast
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: hist_500hpa_geopotential
  endpoint:
    path: /windborne/hist_500hpa_geopotential
    method: GET
    data_selector: forecast
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: hist_500hpa_wind_u
  endpoint:
    path: /windborne/hist_500hpa_wind_u
    method: GET
    data_selector: forecast
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: hist_500hpa_wind_v
  endpoint:
    path: /windborne/hist_500hpa_wind_v
    method: GET
    data_selector: forecast
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: hdd
  endpoint:
    path: /windborne/hdd
    method: GET
    data_selector: forecast
    params:
      initialization_time: string
      output: string
- name: missions
  endpoint:
    path: /missions.json
    method: GET
    data_selector: missions
- name: launch_site
  endpoint:
    path: /missions/<MISSION_ID>/launch_site.json
    method: GET
    data_selector: launch_site
- name: prediction
  endpoint:
    path: /missions/<MISSION_ID>/prediction.json
    method: GET
    data_selector: prediction
- name: observations
  endpoint:
    path: /observations.json
    method: GET
    data_selector: observations
    params:
      since: unix_timestamp
- name: super_observations
  endpoint:
    path: /super_observations.json
    method: GET
    data_selector: observations
    params:
      since: unix_timestamp
- name: super_observations
  endpoint:
    path: /api/super_observations
    method: GET
    data_selector: observations
- name: observations
  endpoint:
    path: /api/observations
    method: GET
    data_selector: observations
- name: super_observations
  endpoint:
    path: /api/data/super_observations
    method: GET
    data_selector: observations
    params: {}
- name: flying_missions
  endpoint:
    path: /api/data/flying_missions
    method: GET
    data_selector: missions
    params: {}
- name: mission_launch_site
  endpoint:
    path: /api/data/mission_launch_site
    method: GET
    data_selector: launch_site_info
    params: {}
- name: predicted_path
  endpoint:
    path: /api/data/predicted_path
    method: GET
    data_selector: coordinates
    params: {}
- name: tropical_cyclones
  endpoint:
    path: /tropical_cyclones
    method: GET
    data_selector: cyclones
    params:
      initialization_time: initialization_time
      basin: basin
      output_file: output_file
- name: get_point_forecasts
  endpoint:
    path: /api/forecasts/points
    method: GET
- name: get_initialization_times
  endpoint:
    path: /api/forecasts/initialization_times
    method: GET
- name: get_historical_initialization_times
  endpoint:
    path: /api/forecasts/historical_initialization_times
    method: GET
- name: get_generation_times
  endpoint:
    path: /api/forecasts/generation_times
    method: GET
- name: get_forecast_hours
  endpoint:
    path: /api/forecasts/forecast_hours
    method: GET
- name: get_gridded_forecast
  endpoint:
    path: /api/forecasts/gridded
    method: GET
- name: get_full_gridded_forecast
  endpoint:
    path: /api/forecasts/full
    method: GET
- name: get_temperature_2m
  endpoint:
    path: /api/forecasts/temperature_2m
    method: GET
- name: get_wind_u_10m
  endpoint:
    path: /get_wind_u_10m
    method: GET
    data_selector: response
    params:
      time: string
      output_file: string
- name: get_wind_v_10m
  endpoint:
    path: /get_wind_v_10m
    method: GET
    data_selector: response
    params:
      time: string
      output_file: string
- name: get_pressure_msl
  endpoint:
    path: /get_pressure_msl
    method: GET
    data_selector: response
    params:
      time: string
      output_file: string
- name: get_500hpa_temperature
  endpoint:
    path: /get_500hpa_temperature
    method: GET
    data_selector: response
    params:
      time: string
      output_file: string
- name: get_850hpa_temperature
  endpoint:
    path: /get_850hpa_temperature
    method: GET
    data_selector: response
    params:
      time: string
      output_file: string
- name: get_500hpa_wind_u
  endpoint:
    path: /get_500hpa_wind_u
    method: GET
    data_selector: response
    params:
      time: string
      output_file: string
- name: get_500hpa_wind_v
  endpoint:
    path: /get_500hpa_wind_v
    method: GET
    data_selector: response
    params:
      time: string
      output_file: string
- name: historical_temperature_2m
  endpoint:
    path: /historical_temperature_2m
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: historical_wind_u_10m
  endpoint:
    path: /historical_wind_u_10m
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: historical_wind_v_10m
  endpoint:
    path: /historical_wind_v_10m
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: historical_pressure_msl
  endpoint:
    path: /historical_pressure_msl
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: historical_500hpa_temperature
  endpoint:
    path: /historical_500hpa_temperature
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: historical_850hpa_temperature
  endpoint:
    path: /historical_850hpa_temperature
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: historical_500hpa_wind_u
  endpoint:
    path: /historical_500hpa_wind_u
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: historical_500hpa_wind_v
  endpoint:
    path: /historical_500hpa_wind_v
    method: GET
    data_selector: response
    params:
      initialization_time: string
      forecast_hour: integer
      output_file: string
- name: get_population_weighted_hdd
  endpoint:
    path: /get_population_weighted_hdd
    method: GET
    data_selector: response
    params:
      initialization_time: string
      intracycle: bool
      ens_member: string
      external_model: string
      output_file: string
      print_response: bool
notes:
- WindBorne uses API keys to authenticate API requests.
- API keys are required for authentication
- Make sure to keep your API key safe and secure
- API requests must be authenticated using API keys.
errors:
- '404: No forecast available within an hour of the requested time.'
- '401 Unauthorized: Check API key'
auth_info:
  mentioned_objects:
  - client_id
  - api_key
  - WB_CLIENT_ID
  - WB_API_KEY
  - YOUR_CLIENT_ID
  - YOUR_API_KEY
client:
  base_url: https://forecasts.windbornesystems.com/api/v1/gridded/temperature_2m
source_metadata: null
