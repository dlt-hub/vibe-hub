resources:
- name: users
  endpoint:
    path: /iam/v2/users
    method: GET
- name: service_accounts
  endpoint:
    path: /iam/v2/service-accounts
    method: GET
- name: Provider Shared Resources
  endpoint:
    path: /cdx/v1/ProviderSharedResources
    method: GET
- name: Consumer Shared Resources
  endpoint:
    path: /cdx/v1/ConsumerSharedResources
    method: GET
- name: Networks
  endpoint:
    path: /networking/v1/Networks
    method: GET
- name: Peerings
  endpoint:
    path: /networking/v1/Peerings
    method: GET
- name: Transit Gateway Attachments
  endpoint:
    path: /networking/v1/TransitGatewayAttachments
    method: GET
- name: Private Link Accesses
  endpoint:
    path: /networking/v1/PrivateLinkAccesses
    method: GET
- name: Access Points
  endpoint:
    path: /networking/v1/AccessPoints
    method: GET
- name: Gateways
  endpoint:
    path: /networking/v1/Gateways
    method: GET
- name: DNS Forwarders
  endpoint:
    path: /networking/v1/DNSForwarders
    method: GET
- name: api_keys
  endpoint:
    path: /iam/v2/api-keys
    method: GET
    data_selector: api_keys
    params: {}
- name: users
  endpoint:
    path: /iam/v2/users
    method: GET
    data_selector: users
    params: {}
- name: invitations
  endpoint:
    path: /iam/v2/invitations
    method: GET
    data_selector: invitations
    params:
      page_size: 10
- name: ip_groups
  endpoint:
    path: /iam/v2/ip-groups
    method: GET
    data_selector: ip_groups
    params:
      page_size: 25
- name: IpFilterSummary
  endpoint:
    path: /iam/v2/ip-filter-summaries
    method: GET
- name: RoleBinding
  endpoint:
    path: /iam/v2/role-bindings
    method: GET
- name: IdentityProvider
  endpoint:
    path: /iam/v2/identity-providers
    method: GET
- name: identity_pool
  endpoint:
    path: /iam/v2/identity-pools
    method: GET
    data_selector: identity_pools
- name: certificate_authority
  endpoint:
    path: /iam/v2/certificate-authorities
    method: GET
- name: certificate_identity_pool
  endpoint:
    path: /iam/v2/certificate-identity-pools
    method: GET
- name: notification_types
  endpoint:
    path: /notifications/v1/notification-types
    method: GET
    data_selector: notification_types
- name: clusters
  endpoint:
    path: /srcm/v3/clusters
    method: GET
    data_selector: clusters
- name: create_certificate_identity_pool
  endpoint:
    path: /ccpm/v1/certificate-identity-pools
    method: POST
    data_selector: data
- name: read_certificate_identity_pool
  endpoint:
    path: /ccpm/v1/certificate-identity-pools/{id}
    method: GET
    data_selector: data
- name: update_certificate_identity_pool
  endpoint:
    path: /ccpm/v1/certificate-identity-pools/{id}
    method: PUT
    data_selector: data
- name: delete_certificate_identity_pool
  endpoint:
    path: /ccpm/v1/certificate-identity-pools/{id}
    method: DELETE
    data_selector: data
- name: list_environments
  endpoint:
    path: /org/v2/environments
    method: GET
    data_selector: data
- name: create_environment
  endpoint:
    path: /org/v2/environments
    method: POST
    data_selector: data
- name: read_environment
  endpoint:
    path: /org/v2/environments/{id}
    method: GET
    data_selector: data
- name: update_environment
  endpoint:
    path: /org/v2/environments/{id}
    method: PUT
    data_selector: data
- name: delete_environment
  endpoint:
    path: /org/v2/environments/{id}
    method: DELETE
    data_selector: data
- name: clusters
  endpoint:
    path: /srcm/v3/clusters
    method: GET
    data_selector: clusters
    params:
      environment: env-00000
      page_size: 10
- name: connectors
  endpoint:
    path: /connect/v1/connectors
    method: GET
    data_selector: connectors
    params:
      environment_id: string
      kafka_cluster_id: string
- name: dynamic_broker_config
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: topic_configs
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Custom Connector Plugin
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Get Connector Offsets
  endpoint:
    path: /connect/v1/connectors/{connector_name}/offsets
    method: GET
- name: Alter Connector Offsets
  endpoint:
    path: /connect/v1/connectors/{connector_name}/offsets
    method: PATCH
- name: Get Status of Alter Offset Request
  endpoint:
    path: /connect/v1/connectors/{connector_name}/offsets/status
    method: GET
- name: Custom Connector Plugin
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Cluster
  endpoint:
    path: /v3/clusters/{cluster_id}
    method: GET
- name: Dynamic Broker Configs
  endpoint:
    path: /v3/clusters/{cluster_id}/configs
    method: GET
- name: Batch Alter Dynamic Broker Configs
  endpoint:
    path: /v3/clusters/{cluster_id}/configs
    method: POST
- name: List Consumer Lags
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
    params:
      cluster_id: cluster-1
- name: List ACLs
  endpoint:
    path: /acls
    method: GET
    data_selector: records
    params:
      cluster_id: cluster-1
- name: Get Consumer Group
  endpoint:
    path: /consumer-groups/{consumer_group_id}
    method: GET
    data_selector: records
    params:
      cluster_id: cluster-1
- name: List Consumers
  endpoint:
    path: /consumers
    method: GET
    data_selector: records
    params:
      cluster_id: cluster-1
- name: Get Consumer Group Lag Summary
  endpoint:
    path: /consumer-groups/{consumer_group_id}/lag
    method: GET
    data_selector: records
    params:
      cluster_id: cluster-1
- name: Get Consumer Lag
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: Get Consumer
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: List Partitions
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: Get Partition
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: List Topics
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: Create Topic
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: Get Topic
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: Update Partition Count
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: Delete Topic
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
- name: applied_quota
  endpoint:
    path: /service-quota/v1/applied-quotas
    method: GET
    data_selector: records
    params:
      scope: ORGANIZATION
- name: scope
  endpoint:
    path: /service-quota/v1/scopes
    method: GET
    data_selector: records
    params: {}
- name: entitlement
  endpoint:
    path: /partner/v2/entitlements
    method: GET
    data_selector: records
    params: {}
- name: Batch Alter Cluster Link Configs
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params:
      validate_only: 'false'
- name: Create a mirror topic
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params:
      validate_only: 'false'
- name: List mirror topics
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params: {}
- name: Describe the mirror topic
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params: {}
- name: Promote the mirror topics
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params:
      validate_only: 'false'
- name: Failover the mirror topics
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params:
      validate_only: 'false'
- name: Pause the mirror topics
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params:
      validate_only: 'false'
- name: Resume the mirror topics
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: none
    params:
      validate_only: 'false'
- name: entitlements
  endpoint:
    path: /ccpm/v1/entitlements
    method: GET
    data_selector: entitlements
    params:
      page_size: 10
- name: organizations
  endpoint:
    path: /partner/v2/organizations
    method: GET
    data_selector: organizations
    params:
      page_size: 10
- name: schema_exporters
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
    params: {}
- name: clusters
  endpoint:
    path: /srcm/v3/clusters
    method: GET
    data_selector: clusters
    params:
      environment: env-00000
      page_size: 10
- name: schema_compatibility
  endpoint:
    path: /compatibility/test
    method: POST
    data_selector: compatibilityCheck
    params:
      subject: string
      version: string
- name: signup_organization
  endpoint:
    path: /partner/v2/signup
    method: POST
    data_selector: organization
    params: {}
- name: activate_signup
  endpoint:
    path: /partner/v2/signup/activate
    method: POST
    data_selector: user
    params: {}
- name: link_customer
  endpoint:
    path: /partner/v2/signup/link
    method: POST
    data_selector: entitlement
    params: {}
- name: regions
  endpoint:
    path: /srcm/v2/regions
    method: GET
    data_selector: regions
    params: {}
- name: clusters
  endpoint:
    path: /srcm/v2/clusters
    method: GET
    data_selector: clusters
    params: {}
- name: schema_exporter
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: get_subject_mode
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: GET
    params:
      defaultToGlobal: boolean
- name: delete_kek
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_kek_by_name
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: GET
    data_selector: ''
    params: {}
- name: create_kek
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: POST
    data_selector: ''
    params: {}
- name: update_kek
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: undelete_kek
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_business_metadata_definition
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: null
    params:
      bmName: string
- name: bulk_read_business_metadata_definitions
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: GET
    data_selector: null
    params:
      prefix: string
- name: bulk_create_business_metadata_definitions
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: POST
    data_selector: null
    params: {}
- name: bulk_update_business_metadata_definitions
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: PUT
    data_selector: null
    params: {}
- name: networks
  endpoint:
    path: /networking/v1/networks
    method: GET
- name: delete_consumer_share
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Delete a Provider Share
  endpoint:
    path: /delete/ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Update a Provider Shared Resource
  endpoint:
    path: /update/ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: PUT
- name: Upload image for shared resource
  endpoint:
    path: /upload/ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: POST
- name: Get image for shared resource
  endpoint:
    path: /get/ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: GET
- name: Delete the shared resource's image
  endpoint:
    path: /delete-image/ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: List of Provider Shares
  endpoint:
    path: /provider-shares
    method: GET
- name: Create a provider share
  endpoint:
    path: /create/provider-share
    method: POST
- name: Read a Provider Share
  endpoint:
    path: /read/provider-share/{id}
    method: GET
- name: ConsumerSharedResource
  endpoint:
    path: /cdx/v1/consumer-shared-resources
    method: GET
    data_selector: records
    params: {}
- name: ConsumerShare
  endpoint:
    path: /cdx/v1/consumer-shares
    method: GET
    data_selector: records
    params: {}
- name: Peerings
  endpoint:
    path: /networking/v1/peerings
    method: GET
    data_selector: peerings
    params:
      environment: env-00000
- name: Create Peering
  endpoint:
    path: /networking/v1/peerings
    method: POST
    data_selector: peering
    params: {}
- name: Update Peering
  endpoint:
    path: /networking/v1/peerings/{id}
    method: PUT
    data_selector: peering
    params: {}
- name: Delete Peering
  endpoint:
    path: /networking/v1/peerings/{id}
    method: DELETE
    data_selector: peering
    params:
      environment: env-00000
- name: private_link_access
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
    params:
      environment: env-00000
- name: network_link_service
  endpoint:
    path: /networking/v1/network-link-services/{id}
    method: GET
    data_selector: errors
    params:
      environment: env-00000
- name: delete_peering
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: null
    params:
      environment: env-00000
- name: transit_gateway_attachments
  endpoint:
    path: /networking/v1/transit-gateway-attachments
    method: GET
    data_selector: null
    params:
      environment: env-00000
- name: private_link_accesses
  endpoint:
    path: /networking/v1/private-link-accesses
    method: GET
    data_selector: null
    params:
      environment: env-00000
- name: Network Link Service
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    data_selector: errors
    params:
      environment: env-00000
- name: network_link_service_association
  endpoint:
    path: /networking/v1/network-link-service-associations
    method: GET
    params: {}
- name: ip_address
  endpoint:
    path: /networking/v1/ip-addresses
    method: GET
    params: {}
- name: private_link_attachment
  endpoint:
    path: /networking/v1/private-link-attachments
    method: GET
    params: {}
- name: dns_forwarder
  endpoint:
    path: /networking/v1/dns-forwarders
    method: GET
    data_selector: dns_forwarders
    params:
      environment: string
- name: access_point
  endpoint:
    path: /networking/v1/access-points
    method: GET
    data_selector: access_points
    params:
      environment: string
- name: gateways
  endpoint:
    path: /networking/v1/gateways
    method: GET
    data_selector: gateways
    params:
      environment: string
- name: client_quotas
  endpoint:
    path: /kafka-quotas/v1/client-quotas
    method: GET
    data_selector: client_quotas
    params:
      spec.cluster: string
      environment: string
- name: costs
  endpoint:
    path: /billing/v1/costs
    method: GET
    data_selector: costs
    params:
      start_date: ''
      end_date: ''
- name: compute_pools
  endpoint:
    path: /fcpm/v2/compute-pools
    method: GET
    data_selector: computePools
    params:
      environment: ''
- name: StatementResult
  endpoint:
    path: /sql/v1/statements
    method: GET
    data_selector: results.data
- name: StatementException
  endpoint:
    path: /sql/v1/statements/exceptions
    method: GET
    data_selector: results
- name: Connection
  endpoint:
    path: /sql/v1/connections
    method: GET
    data_selector: results
- name: delete_compute_pool
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    params:
      environment: env-00000
- name: list_regions
  endpoint:
    path: /tableflow/v1/regions
    method: GET
    params:
      cloud: AWS
      page_size: 10
- name: list_statements
  endpoint:
    path: /sql/v1/environments/{environment_id}/statements
    method: GET
    params:
      organization_id: string
      environment_id: string
- name: create_statement
  endpoint:
    path: /sql/v1/environments/{environment_id}/statements
    method: POST
- name: read_statement
  endpoint:
    path: /sql/v1/environments/{environment_id}/statements/{statement_name}
    method: GET
    params:
      organization_id: string
      environment_id: string
      statement_name: string
- name: delete_statement
  endpoint:
    path: /sql/v1/environments/{environment_id}/statements/{statement_name}
    method: DELETE
    params:
      organization_id: string
      environment_id: string
      statement_name: string
- name: Flink Artifacts
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
    params:
      environment: env-00000
- name: Delete a Connection
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Update a Connection
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: PUT
- name: Delete an Integration
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: custom_models
  endpoint:
    path: /artifact/v1/custom-models
    method: GET
    data_selector: models
    params:
      cloud: AWS
      region: us-west-2
      environment: env-00000
      page_size: 10
- name: custom_model_versions
  endpoint:
    path: /artifact/v1/custom-model-versions
    method: GET
    data_selector: versions
    params: {}
- name: custom_code_logging
  endpoint:
    path: /ccl/v1/custom-code-loggings
    method: GET
    data_selector: custom_code_loggings
    params: {}
- name: regions
  endpoint:
    path: /tableflow/v1/regions
    method: GET
    data_selector: regions
    params: {}
- name: regions
  endpoint:
    path: /ccpm/v1/regions
    method: GET
    data_selector: regions
    params: {}
- name: tableflow_topics
  endpoint:
    path: /tableflow/v1/tableflow-topics
    method: GET
    data_selector: tableflow_topics
    params: {}
- name: catalog_integrations
  endpoint:
    path: /tableflow/v1/catalog-integrations
    method: GET
    data_selector: catalog_integrations
    params: {}
- name: Custom Connect Plugin
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Create Custom Connect Plugin
  endpoint:
    path: /ccpm/v1/plugins
    method: POST
- name: Read Custom Connect Plugin
  endpoint:
    path: /ccpm/v1/plugins/{id}
    method: GET
- name: Update Custom Connect Plugin
  endpoint:
    path: /ccpm/v1/plugins/{id}
    method: PUT
- name: Delete Custom Connect Plugin
  endpoint:
    path: /ccpm/v1/plugins/{plugin_id}/versions/{id}
    method: DELETE
- name: Producer API
  endpoint:
    path: /producer-api
    method: POST
    data_selector: records
    params: {}
- name: Consumer API
  endpoint:
    path: /consumer-api
    method: POST
    data_selector: records
    params: {}
- name: Admin Client API
  endpoint:
    path: /admin-client-api
    method: POST
    data_selector: records
    params: {}
- name: Connect API
  endpoint:
    path: /connect-api
    method: POST
    data_selector: records
    params: {}
- name: Kafka Streams API
  endpoint:
    path: /kafka-streams-api
    method: POST
    data_selector: records
    params: {}
- name: consumer_group
  endpoint:
    path: /consumer_groups
    method: GET
    data_selector: groups
    params: {}
- name: log_compaction
  endpoint:
    path: /kafka/log/compaction
    method: GET
    data_selector: records
- name: topics
  endpoint:
    path: --bootstrap-server host1:9092 --topic test-topic --partitions 3
    method: GET
    data_selector: configs
    params: {}
- name: kafka-log-dirs
  endpoint:
    path: /kafka-log-dirs
    method: GET
    data_selector: replicas
    params: {}
- name: kafka-replica-verification
  endpoint:
    path: /kafka-replica-verification
    method: GET
    data_selector: replicaConsistency
    params: {}
- name: kafka-client-metrics
  endpoint:
    path: /kafka-client-metrics
    method: GET
    data_selector: clientMetrics
    params: {}
- name: kafka-configs
  endpoint:
    path: /bin/kafka-configs.sh
    method: POST
    data_selector: output
    params: {}
- name: kafka-get-offsets
  endpoint:
    path: /bin/kafka-get-offsets.sh
    method: POST
    data_selector: output
    params: {}
- name: kafka-leader-election
  endpoint:
    path: /bin/kafka-leader-election.sh
    method: POST
    data_selector: output
    params: {}
- name: kafka-transactions
  endpoint:
    path: /bin/kafka-transactions.sh
    method: POST
    data_selector: output
    params: {}
- name: kafka-reassign-partitions
  endpoint:
    path: /bin/kafka-reassign-partitions.sh
    method: POST
    data_selector: output
    params: {}
- name: kafka-delete-records
  endpoint:
    path: /bin/kafka-delete-records.sh
    method: POST
    data_selector: output
    params: {}
- name: kafka-server-start
  endpoint:
    path: /bin/kafka-server-start.sh
    method: POST
    data_selector: server.properties
    params:
      override: property=value
- name: kafka-server-stop
  endpoint:
    path: /bin/kafka-server-stop.sh
    method: POST
    data_selector: process-role or node-id
    params: {}
- name: kafka-storage
  endpoint:
    path: /bin/kafka-storage.sh
    method: POST
    data_selector: Cluster UUID generation and storage formatting
    params:
      config: config/kraft/server.properties
- name: kafka-cluster
  endpoint:
    path: /bin/kafka-cluster.sh
    method: GET
    data_selector: cluster-id
    params:
      bootstrap-server: host:port
- name: kafka-features
  endpoint:
    path: /bin/kafka-features.sh
    method: POST
    data_selector: feature flags management
    params:
      bootstrap-server: host:port
- name: kafka-broker-api-versions
  endpoint:
    path: /bin/kafka-broker-api-versions.sh
    method: GET
    data_selector: broker version information
    params:
      bootstrap-server: host:port
- name: kafka-metadata-quorum
  endpoint:
    path: /bin/kafka-metadata-quorum.sh
    method: POST
    data_selector: metadata quorum status
    params:
      bootstrap-server: host:port
- name: kafka-metadata-shell
  endpoint:
    path: /bin/kafka-metadata-shell.sh
    method: GET
    data_selector: metadata log directory
    params:
      directory: path/to/metadata/log
- name: verifiable-producer
  endpoint:
    path: /kafka-verifiable-producer.sh
    method: POST
    data_selector: messages
    params: {}
- name: console-consumer
  endpoint:
    path: /kafka-console-consumer.sh
    method: POST
    data_selector: records
    params: {}
- name: console-producer
  endpoint:
    path: /kafka-console-producer.sh
    method: POST
    data_selector: records
    params: {}
- name: console-share-consumer
  endpoint:
    path: /kafka-console-share-consumer.sh
    method: POST
    data_selector: messages
    params: {}
- name: producer-perf-test
  endpoint:
    path: /kafka-producer-perf-test.sh
    method: POST
    data_selector: performance
    params: {}
- name: groups
  endpoint:
    path: /kafka-groups.sh
    method: GET
    data_selector: groups
    params: {}
- name: kafka-consumer-groups
  endpoint:
    path: /kafka-consumer-groups
    method: GET
    data_selector: groups
    params: {}
- name: kafka-consumer-perf-test
  endpoint:
    path: /kafka-consumer-perf-test
    method: GET
    data_selector: performance
    params: {}
- name: kafka-share-groups
  endpoint:
    path: /kafka-share-groups
    method: GET
    data_selector: share_groups
    params: {}
- name: connect-distributed
  endpoint:
    path: /connect-distributed
    method: GET
    data_selector: distributed
    params: {}
- name: connect-standalone
  endpoint:
    path: /connect-standalone
    method: GET
    data_selector: standalone
    params: {}
- name: connect-mirror-maker
  endpoint:
    path: /connect-mirror-maker
    method: GET
    data_selector: mirror_maker
    params: {}
- name: kafka-streams-application-reset
  endpoint:
    path: /kafka-streams-application-reset
    method: GET
    data_selector: application_reset
    params: {}
- name: kafka-acls
  endpoint:
    path: /kafka-acls
    method: POST
- name: kafka-delegation-tokens
  endpoint:
    path: /kafka-delegation-tokens
    method: POST
- name: kafka-e2e-latency
  endpoint:
    path: /kafka-e2e-latency
    method: POST
- name: kafka-dump-log
  endpoint:
    path: /kafka-dump-log
    method: POST
- name: kafka-jmx
  endpoint:
    path: /kafka-jmx
    method: GET
- name: trogdor
  endpoint:
    path: /trogdor
    method: POST
- name: kafka-run-class
  endpoint:
    path: /kafka-run-class
    method: POST
- name: topics
  endpoint:
    path: /kafka-topics
    method: GET
    data_selector: topics
    params: {}
- name: brokers
  endpoint:
    path: /kafka-brokers
    method: GET
    data_selector: brokers
    params: {}
- name: kafka-configs
  endpoint:
    path: /kafka-configs
    method: GET
- name: kafka-get-offsets
  endpoint:
    path: /kafka-get-offsets
    method: GET
- name: kafka-leader-election
  endpoint:
    path: /kafka-leader-election
    method: GET
- name: kafka-transactions
  endpoint:
    path: /kafka-transactions
    method: GET
- name: kafka-reassign-partitions
  endpoint:
    path: /kafka-reassign-partitions
    method: GET
- name: kafka-delete-records
  endpoint:
    path: /kafka-delete-records
    method: GET
- name: kafka-log-dirs
  endpoint:
    path: /kafka/log-dirs
    method: GET
- name: kafka-replica-verification
  endpoint:
    path: /kafka/replica-verification
    method: GET
- name: kafka-client-metrics
  endpoint:
    path: /kafka/client-metrics
    method: GET
- name: kafka-verifiable-consumer
  endpoint:
    path: /kafka/verifiable-consumer
    method: GET
- name: kafka-configs
  endpoint:
    path: /kafka/configs
    method: GET
- name: kafka-server-start
  endpoint:
    path: /bin/kafka-server-start.sh
    method: GET
    data_selector: usage
    params: {}
- name: kafka-server-stop
  endpoint:
    path: /bin/kafka-server-stop.sh
    method: GET
    data_selector: usage
    params: {}
- name: kafka-storage
  endpoint:
    path: /bin/kafka-storage.sh
    method: GET
    data_selector: usage
    params: {}
- name: kafka-cluster
  endpoint:
    path: /bin/kafka-cluster.sh
    method: GET
    data_selector: usage
    params: {}
- name: kafka-features
  endpoint:
    path: /bin/kafka-features.sh
    method: GET
    data_selector: usage
    params: {}
- name: kafka-broker-api-versions
  endpoint:
    path: /bin/kafka-broker-api-versions.sh
    method: GET
    data_selector: usage
    params: {}
- name: kafka-metadata-quorum
  endpoint:
    path: /bin/kafka-metadata-quorum.sh
    method: GET
    data_selector: usage
    params: {}
- name: kafka-metadata-shell
  endpoint:
    path: /bin/kafka-metadata-shell.sh
    method: GET
    data_selector: usage
    params: {}
- name: verifiable-producer
  endpoint:
    path: /kafka-verifiable-producer
    method: POST
    data_selector: metadata
    params:
      topic: TOPIC
      max-messages: MAX-MESSAGES
      throughput: THROUGHPUT
      acks: ACKS
      producer.config: CONFIG_FILE
      message-create-time: CREATETIME
      value-prefix: VALUE-PREFIX
      repeating-keys: REPEATING-KEYS
- name: console-consumer
  endpoint:
    path: /kafka-console-consumer
    method: GET
    data_selector: records
    params:
      bootstrap-server: HOST1:PORT1,HOST2:PORT2
      consumer.config: config.properties
      topic: testTopic
      property: print.key=true
- name: console-producer
  endpoint:
    path: /kafka-console-producer
    method: POST
    data_selector: records
    params:
      bootstrap-server: HOST1:PORT1,HOST2:PORT2
      producer.config: config.properties
      topic: testTopic
      property: 'key.separator=:'
- name: producer-perf-test
  endpoint:
    path: /kafka-producer-perf-test
    method: POST
    data_selector: performance
    params:
      topic: topic-a
      num-records: '200000'
      record-size: '1000'
      throughput: '10000000'
      producer-props: bootstrap.servers=host1:9092
- name: consumer_groups
  endpoint:
    path: /kafka-consumer-groups.sh
    method: GET
    data_selector: groups
    params:
      group: user-group
- name: consumer_performance
  endpoint:
    path: /kafka-consumer-perf-test.sh
    method: GET
    data_selector: performance
    params:
      messages: required
      topic: required
- name: share_groups
  endpoint:
    path: /kafka-share-groups.sh
    method: GET
    data_selector: share_groups
    params:
      group: share group
- name: streams_application_reset
  endpoint:
    path: /kafka-streams-application-reset.sh
    method: POST
    data_selector: application_reset
    params:
      application-id: required
      input-topics: optional
      intermediate-topics: optional
- name: topic_operations
  endpoint:
    path: /kafka/topics
    method: POST
    data_selector: topics
- name: kafka_tool
  endpoint:
    path: /v1/kafka/tools
    method: POST
    data_selector: tools
    params: {}
- name: consumer_groups
  endpoint:
    path: /kafka-consumer-groups
    method: GET
    data_selector: groups
    params: {}
- name: Java Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/java/current/overview.html
    method: GET
- name: C/C++ Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/librdkafka/current/overview.html
    method: GET
- name: Python Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/python/current/overview.html
    method: GET
- name: Go Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/go/current/overview.html
    method: GET
- name: C# Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/dotnet/current/overview.html
    method: GET
- name: JavaScript Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/javascript/current/overview.html
    method: GET
- name: Java Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/java/current/overview.html
    method: GET
- name: C/C++ Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/librdkafka/current/overview.html
    method: GET
- name: Python Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/python/current/overview.html
    method: GET
- name: Go Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/go/current/overview.html
    method: GET
- name: DotNet Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/dotnet/current/overview.html
    method: GET
- name: JavaScript Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/javascript/current/overview.html
    method: GET
- name: mssql_cdc
  endpoint:
    path: /services/data/vXX.X/sobjects/MSSQLCDC
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: cluster_status
  endpoint:
    path: /api/v1/clusters/status
    method: GET
    data_selector: status
    params: {}
- name: info
  endpoint:
    path: /api/v1/info
    method: GET
    data_selector: info
    params: {}
- name: Kafka Java Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/java/current/overview.html
    method: GET
- name: Kafka C/C++ Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/librdkafka/current/overview.html
    method: GET
- name: Kafka Python Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/python/current/overview.html
    method: GET
- name: Kafka Go Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/go/current/overview.html
    method: GET
- name: Kafka .NET Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/dotnet/current/overview.html
    method: GET
- name: Kafka JavaScript Client
  endpoint:
    path: https://docs.confluent.io/kafka-clients/javascript/current/overview.html
    method: GET
- name: audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: logs
    params: {}
- name: topics
  endpoint:
    path: /v1/topics
    method: GET
    data_selector: data
    params: {}
- name: schemas
  endpoint:
    path: /v1/schemas
    method: GET
    data_selector: data
    params: {}
- name: confluent-cli
  endpoint:
    path: /deb/archive.key
    method: GET
- name: confluent-cli-repo
  endpoint:
    path: /deb/stable/main
    method: GET
- name: iam_ip_filter
  endpoint:
    path: /iam/ip-filter
    method: list
- name: iam_ip_group
  endpoint:
    path: /iam/ip-group
    method: list
- name: iam_pool
  endpoint:
    path: /iam/pool
    method: list
- name: iam_provider
  endpoint:
    path: /iam/provider
    method: list
- name: iam_rbac_role
  endpoint:
    path: /iam/rbac/role
    method: list
- name: iam_rbac_role_binding
  endpoint:
    path: /iam/rbac/role-binding
    method: list
- name: iam_service_account
  endpoint:
    path: /iam/service-account
    method: list
- name: iam_user
  endpoint:
    path: /iam/user
    method: list
- name: kafka_acl
  endpoint:
    path: /kafka/acl
    method: list
- name: kafka_broker
  endpoint:
    path: /kafka/broker
    method: list
- name: kafka_cluster
  endpoint:
    path: /kafka/cluster
    method: list
- name: kafka_consumer
  endpoint:
    path: /kafka/consumer
    method: list
- name: kafka_topic
  endpoint:
    path: /kafka/topic
    method: list
- name: ksql_cluster
  endpoint:
    path: /ksql/cluster
    method: list
- name: Connect
  endpoint:
    path: /etc/schema-registry/connect-avro-distributed.properties
- name: Control Center
  endpoint:
    path: /etc/confluent-control-center/control-center-dev.properties
- name: KRaft Controller
  endpoint:
    path: /etc/kafka/controller.properties
- name: Kafka (KRaft mode)
  endpoint:
    path: /etc/kafka/broker.properties
- name: Kafka (ZooKeeper mode, Legacy)
  endpoint:
    path: /etc/kafka/server.properties
- name: REST Proxy
  endpoint:
    path: /etc/kafka-rest/kafka-rest.properties
- name: ksqlDB
  endpoint:
    path: /etc/ksqldb/ksql-server.properties
- name: Schema Registry
  endpoint:
    path: /etc/schema-registry/schema-registry.properties
- name: ZooKeeper
  endpoint:
    path: /etc/kafka/zookeeper.properties
- name: ip-filter
  endpoint:
    path: /iam/ip-filter
    method: GET
    data_selector: filters
    params: {}
- name: ip-group
  endpoint:
    path: /iam/ip-group
    method: GET
    data_selector: groups
    params: {}
- name: pool
  endpoint:
    path: /iam/pool
    method: GET
    data_selector: pools
    params: {}
- name: provider
  endpoint:
    path: /iam/provider
    method: GET
    data_selector: providers
    params: {}
- name: rbac
  endpoint:
    path: /iam/rbac
    method: GET
    data_selector: roles
    params: {}
- name: service-account
  endpoint:
    path: /iam/service-account
    method: GET
    data_selector: serviceAccounts
    params: {}
- name: user
  endpoint:
    path: /iam/user
    method: GET
    data_selector: users
    params: {}
- name: network_private-link_attachment
  endpoint:
    path: /command-reference/network/private-link/attachment/confluent_network_private-link_attachment_list.html
    method: GET
- name: network_region
  endpoint:
    path: /command-reference/network/region/confluent_network_region_list.html
    method: GET
- name: organization
  endpoint:
    path: /command-reference/organization/confluent_organization_list.html
    method: GET
- name: plugin
  endpoint:
    path: /command-reference/plugin/confluent_plugin_list.html
    method: GET
- name: provider-integration
  endpoint:
    path: /command-reference/provider-integration/confluent_provider-integration_list.html
    method: GET
- name: schema-registry
  endpoint:
    path: /command-reference/schema-registry/confluent_schema-registry_cluster_list.html
    method: GET
- name: secret
  endpoint:
    path: /command-reference/secret/confluent_secret_file.html
    method: GET
- name: service-quota
  endpoint:
    path: /command-reference/service-quota/confluent_service-quota_list.html
    method: GET
- name: stream-share
  endpoint:
    path: /command-reference/stream-share/confluent_stream-share_consumer_share_list.html
    method: GET
- name: tableflow
  endpoint:
    path: /command-reference/tableflow/catalog-integration/confluent_tableflow_catalog-integration_list.html
    method: GET
- name: Apache Kafka
  endpoint:
    path: /services/data/kafka
    method: POST
- name: Confluent Schema Registry
  endpoint:
    path: /services/data/schema-registry
    method: POST
- name: REST Proxy
  endpoint:
    path: /services/data/rest-proxy
    method: POST
- name: Confluent Control Center
  endpoint:
    path: /services/data/control-center
    method: POST
- name: Kafka Connect (distributed mode)
  endpoint:
    path: /services/data/kafka-connect
    method: POST
- name: ksqlDB
  endpoint:
    path: /services/data/ksql
    method: POST
- name: Confluent Replicator
  endpoint:
    path: /services/data/replicator
    method: POST
- name: Apache Kafka Raft (KRaft)
  endpoint:
    path: /services/data/kraft
    method: POST
notes:
- Ensure proper OAuth scopes are set up for the client.
- Quota limits apply to API keys per organization.
- Uses cloud-api-key for authorization
- IdentityProvider objects represent external OAuth-OIDC providers in Confluent Cloud.
- Kafka is designed to be able to act as a unified platform for handling all the real-time
  data feeds.
- Kafka's partitioning and consumer model supports partitioned, distributed, real-time
  processing feeds.
- Kafka is designed to be very fast and efficient for multi-tenant operations.
- Excessive byte copying and too many small I/O operations can lead to inefficiencies.
- Batching enables efficiency, and to enable batching the Kafka producer tries to
  accumulate data in memory, and sends larger batches in a single request.
- Kafka uses a pull-based system for consuming messages.
- Kafka supports exactly-once delivery in Kafka Streams and uses transactional producers
  and consumers.
- By default Kafka guarantees at-least-once delivery.
- Kafka guarantees that a committed message will not be lost, as long as there is
  at least one in-sync replica alive at all times.
- 'If all of the replicas die, there are two possible behaviors: wait for a replica
  in the ISR to come back to life or choose the first replica that comes back to life.'
- Compacted topics must have records with keys in order to implement record retention.
- Log compaction guarantees the retention of the latest value for each message key.
- This tool helps to manipulate and describe entity config for a topic, client, user,
  broker, ip or client-metrics
- This tool produces increasing integers to the specified topic and prints JSON metadata
  to STDOUT on each send request.
- You can create, modify and delete topics using the kafka-topics.sh tool.
- Currently each cluster can safely have up to 200,000 partitions.
- In the near future, when KRaft is available for production use, a Kafka cluster
  can potentially support up to 2 million partitions.
- Keep the configuration file in a secure location.
- To use the kafka-consumer-groups tool with Confluent Cloud, add the --command-config
  parameter with a value that points to the properties configuration file containing
  all the required properties for connecting.
- Confluent recommends upgrading to the latest client since current fixes are generally
  not found in older clients.
- Fully-managed data streaming platform with a cloud-native Kafka engine (KORA) for
  elastic scaling, with enterprise security, stream processing, governance.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Client libraries must include a Server Name Indication (SNI) extension in the TLS
  handshake.
- Any forward proxies must be configured to forward the SNI extension unmodified.
- Requires setup of connected app in Confluent
- Some requests may have rate limits
- Some operations may require elevated permissions.
- Ensure to set up the correct OAuth2 permissions for accessing the API
- Rate limits may apply based on the plan
- Confluent Cloud for Government is an Early Access release.
- You must contact Confluent to setup a Confluent Cloud for Government organization
  before you can use the service.
- Some objects may return nulls in deeply nested fields
- Some objects like Contact may return nulls in deeply nested fields
- Confluent Cloud is a fully-managed data streaming platform with a cloud-native Apache
  Kafka engine for elastic scaling, enterprise-grade security, stream processing,
  and governance.
- Confluent Platform is an enterprise-grade distribution of Apache Kafka available
  on-premises as self-managed software.
- Fully-managed data streaming platform with a cloud-native Apache Kafka engine.
- Fully-managed data streaming platform with a cloud-native Kafka engine
errors:
- '429 Too Many Requests: Reduce request frequency or concurrency'
- '401 Unauthorized: Check client credentials and scopes'
- '403 Forbidden: Insufficient permissions for the action'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 429 Rate Limit Exceeded
- 500 Oops, something went wrong!
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '429: Rate Limit Exceeded'
- '500: Oops, something went wrong!'
- 500 Oops, something went wrong
- id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
  status: '400'
  code: invalid_filter
  title: Invalid Filter
  detail: The 'delorean' resource can't be filtered by 'num_doors'
  source:
    parameter: num_doors
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Kafka’s guarantee for data loss relies on at least one replica remaining in sync.
- '401 Unauthorized: Check API key and secret.'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Ensure the resource exists.'
- '500 Internal Server Error: Retry the request later.'
- '429 Too Many Requests: Adjust request frequency'
- '401 Unauthorized: Verify OAuth2 configuration and tokens'
- '404 Not Found: Check endpoint path and parameters'
auth_info:
  mentioned_objects:
  - cloud-api-key
  - confluent-sts-access-token
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.confluent.cloud
  auth:
    type: cloud-api-key
    location: header
    header_name: Authorization
source_metadata: null
