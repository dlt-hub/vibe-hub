resources:
- name: metadata
  endpoint:
    path: /quarto/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: variables
  endpoint:
    path: /quarto/variables
    method: GET
    data_selector: variables
    params: {}
- name: seattle_precipitation
  endpoint:
    path: /seattle-weather.csv
    method: GET
    data_selector: data
    params: {}
- name: shortcodes_and_filters
  endpoint:
    path: /docs/extensions/listing-filters.html
    method: GET
    data_selector: extensions
    params: {}
- name: journal_articles
  endpoint:
    path: /docs/extensions/listing-journals.html
    method: GET
    data_selector: extensions
    params: {}
- name: custom_formats
  endpoint:
    path: /docs/extensions/listing-formats.html
    method: GET
    data_selector: extensions
    params: {}
- name: revealjs_extensions
  endpoint:
    path: /docs/extensions/listing-revealjs.html
    method: GET
    data_selector: extensions
    params: {}
- name: current_release
  endpoint:
    path: /docs/download/
    method: GET
- name: pre_release
  endpoint:
    path: /docs/download/
    method: GET
- name: older_releases
  endpoint:
    path: /docs/download/
    method: GET
- name: python_code_blocks
  endpoint:
    path: /docs/computations/python.html
    method: GET
    data_selector: content
- name: rendering
  endpoint:
    path: /docs/computations/python.html
    method: GET
    data_selector: content
- name: figures
  endpoint:
    path: /docs/authoring/figures.html
    method: GET
    data_selector: figures
    params: {}
- name: markdown_table
  endpoint:
    path: /authoring/tables
    method: GET
    data_selector: tables
    params: {}
- name: fruit
  endpoint:
    path: /fruit/prices
    method: GET
    data_selector: prices
    params: {}
- name: fruit
  endpoint:
    path: /fruit
    method: GET
    data_selector: records
- name: shortcodes
  endpoint:
    path: /shortcodes
    method: GET
    data_selector: records
    params: {}
- name: placeholder_image
  endpoint:
    path: /authoring/placeholder
    method: GET
    data_selector: images
    params: {}
- name: placeholder_image
  endpoint:
    path: /authoring/placeholder
    method: GET
    data_selector: placeholder_image_data
    params: {}
- name: lipsum
  endpoint:
    path: /lipsum
    method: GET
    data_selector: text
    params: {}
- name: lipsum
  endpoint:
    path: /lipsum
    method: GET
    data_selector: text
    params:
      nparas: number of paragraphs
- name: contents
  endpoint:
    path: /docs/authoring/contents.html
    method: GET
    data_selector: contents
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: version
- name: version
  endpoint:
    path: /authoring/version
    method: GET
    data_selector: version
    params: {}
- name: video_embed
  endpoint:
    path: /authoring/videos
    method: GET
    data_selector: videos
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: video_records
    params: {}
- name: video_with_title
  endpoint:
    path: /video/title
    method: GET
    data_selector: video
    params: {}
- name: video_without_title
  endpoint:
    path: /video/no_title
    method: GET
    data_selector: video
    params: {}
- name: background_video
  endpoint:
    path: /video/background
    method: GET
    data_selector: video
    params: {}
- name: video
  endpoint:
    path: https://www.youtube.com/embed/wo9vZccmqwc
    method: GET
    data_selector: title
- name: background_video
  endpoint:
    path: https://videos.example.com/intro-cern.mp4
    method: GET
    data_selector: background-video
- name: notebook_embed
  endpoint:
    path: /docs/authoring/notebook-embed.html
    method: GET
    data_selector: output
    params: {}
- name: fig-size-scatter
  endpoint:
    path: penguins.qmd#fig-size-scatter
    method: GET
- name: fig-bill-marginal
  endpoint:
    path: penguins.ipynb#fig-bill-marginal
    method: GET
- name: species-counts
  endpoint:
    path: penguins.ipynb#species-counts
    method: GET
- name: penguins.qmd#fig-size-scatter
  endpoint:
    path: penguins.qmd#fig-size-scatter
    method: GET
    data_selector: output
- name: penguins.ipynb#bill-ratio
  endpoint:
    path: penguins.ipynb#bill-ratio
    method: GET
    data_selector: output
- name: penguins.ipynb#fig-bill-marginal
  endpoint:
    path: penguins.ipynb#fig-bill-marginal
    method: GET
    data_selector: output
- name: penguins.ipynb#species-counts
  endpoint:
    path: penguins.ipynb#species-counts
    method: GET
    data_selector: output
- name: colors
  endpoint:
    path: /color
    method: GET
    data_selector: color
- name: logo
  endpoint:
    path: /logo
    method: GET
    data_selector: logo
- name: typography
  endpoint:
    path: /typography
    method: GET
    data_selector: typography
- name: brand_file
  endpoint:
    path: /_brand.yml
    method: GET
    data_selector: brand
- name: brand
  endpoint:
    path: /_brand.yml
    method: GET
    data_selector: color
    params: {}
- name: brand
  endpoint:
    path: /_brand.yml
    method: GET
    data_selector: brands
    params: {}
- name: brand
  endpoint:
    path: _brand.yml
    method: GET
    data_selector: ''
    params: {}
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
    params: {}
- name: overview
  endpoint:
    path: /docs/overview
    method: GET
    data_selector: content
    params: {}
- name: body_column
  endpoint:
    path: /docs/authoring/article-layout.html#body-column
    method: GET
    data_selector: content
    params: {}
- name: margin_content
  endpoint:
    path: /docs/authoring/article-layout.html#margin-content
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: front_matter
  endpoint:
    path: /authoring/front-matter
    method: GET
    data_selector: metadata
    params: {}
- name: author
  endpoint:
    path: /author
    method: GET
    data_selector: records
- name: affiliation
  endpoint:
    path: /affiliation
    method: GET
    data_selector: records
- name: title_blocks
  endpoint:
    path: /docs/authoring/title-blocks
    method: GET
    data_selector: title_blocks
- name: bibliography_files
  endpoint:
    path: /authoring/citations.html#bibliography-files
    method: GET
- name: citation_syntax
  endpoint:
    path: /authoring/citations.html#sec-citations
    method: GET
- name: citation_style
  endpoint:
    path: /authoring/citations.html#sec-citations-style
    method: GET
- name: bibliography_generation
  endpoint:
    path: /authoring/citations.html#bibliography-generation
    method: GET
- name: including_uncited_items
  endpoint:
    path: /authoring/citations.html#including-uncited-items
    method: GET
- name: latex_using_biblatex_or_natbib
  endpoint:
    path: /authoring/citations.html#sec-biblatex
    method: GET
- name: options
  endpoint:
    path: /authoring/citations.html#options
    method: GET
- name: typst
  endpoint:
    path: /authoring/citations.html#typst
    method: GET
- name: Citation Syntax
  endpoint:
    path: /docs/authoring/citations.html#sec-citations-syntax
    method: GET
    data_selector: citations
- name: Citation Style
  endpoint:
    path: /docs/authoring/citations.html#sec-citations-style
    method: GET
    data_selector: citation_style
- name: Bibliography Generation
  endpoint:
    path: /docs/authoring/citations.html#sec-bibliography-generation
    method: GET
    data_selector: bibliography_generation
- name: Including Uncited Items
  endpoint:
    path: /docs/authoring/citations.html#sec-including-uncited-items
    method: GET
    data_selector: including_uncited_items
- name: 'LaTeX: using BibLaTeX or natbib'
  endpoint:
    path: /docs/authoring/citations.html#sec-latex-using-biblatex-or-natbib
    method: GET
    data_selector: latex_biblatex_natbib
- name: Typst
  endpoint:
    path: /docs/authoring/citations.html#sec-typst
    method: GET
    data_selector: typst
- name: page_geometry
  endpoint:
    path: /docs/authoring/page-geometry
    method: GET
    data_selector: geometry
    params: {}
- name: landscape_mode
  endpoint:
    path: /docs/authoring/landscape-mode
    method: GET
    data_selector: landscape
    params: {}
- name: metadata
  endpoint:
    path: /authoring/front-matter
    method: GET
    data_selector: metadata
    params: {}
- name: author
  endpoint:
    path: /author
    method: GET
    data_selector: authors
    params: {}
- name: affiliation
  endpoint:
    path: /affiliation
    method: GET
    data_selector: affiliations
    params: {}
- name: funding
  endpoint:
    path: /funding
    method: GET
    data_selector: fundings
    params: {}
- name: titles
  endpoint:
    path: /docs/authoring/cross-reference-options.html#titles
    method: GET
    data_selector: crossref
    params: {}
- name: references
  endpoint:
    path: /docs/authoring/cross-reference-options.html#references
    method: GET
    data_selector: crossref
    params: {}
- name: numbering
  endpoint:
    path: /docs/authoring/cross-reference-options.html#numbering
    method: GET
    data_selector: crossref
    params: {}
- name: chapter_numbering
  endpoint:
    path: /docs/authoring/cross-reference-options.html#chapter-numbering
    method: GET
    data_selector: crossref
    params: {}
- name: title_block
  endpoint:
    path: /docs/authoring/title-blocks
    method: GET
    data_selector: title_blocks
- name: bibliography_files
  endpoint:
    path: /docs/authoring/citations.html#bibliography-files
    method: GET
    data_selector: bibliography
- name: crossref
  endpoint:
    path: /authoring/cross-references-custom
    method: GET
    data_selector: crossref
- name: supplemental_figures
  endpoint:
    path: /crossref/custom/suppfig
    method: GET
    data_selector: custom
    params: {}
- name: web_article
  endpoint:
    path: /authoring/create-citeable-articles/web
    method: GET
    data_selector: article_metadata
- name: journal_article
  endpoint:
    path: /authoring/create-citeable-articles/journal
    method: GET
    data_selector: article_metadata
- name: crossref_options
  endpoint:
    path: /crossref/options
    method: GET
    data_selector: options
    params: {}
- name: citation
  endpoint:
    path: /citation
    method: GET
    data_selector: citation
    params: {}
- name: custom_float
  endpoint:
    path: /docs/authoring/cross-references-custom.html
    method: GET
    data_selector: crossref
    params: {}
- name: Custom Appendix Sections
  endpoint:
    path: /quarto/docs/authoring/appendices.html#custom-appendix-sections
    method: GET
    data_selector: sections
- name: License
  endpoint:
    path: /quarto/docs/authoring/appendices.html#license
    method: GET
    data_selector: sections
- name: Appendix Style
  endpoint:
    path: /quarto/docs/authoring/appendices.html#appendix-style
    method: GET
    data_selector: sections
- name: supplemental_figures
  endpoint:
    path: /crossref/custom
    method: POST
    data_selector: custom
    params: {}
- name: web_articles
  endpoint:
    path: /docs/authoring/create-citeable-articles/web-articles
    method: GET
- name: journal_articles
  endpoint:
    path: /docs/authoring/create-citeable-articles/journal-articles
    method: GET
- name: citation
  endpoint:
    path: /citation
    method: GET
    data_selector: citation
    params: {}
- name: appendix
  endpoint:
    path: /docs/authoring/appendices.html
    method: GET
    data_selector: sections
    params: {}
- name: air_quality
  endpoint:
    path: /air_quality
    method: GET
    data_selector: data
    params: {}
- name: caching_example
  endpoint:
    path: /execute/cache
    method: POST
    data_selector: cache
    params: {}
- name: julia_engine
  endpoint:
    path: /docs/computations/julia.html
    method: GET
- name: jupyter_engine
  endpoint:
    path: /docs/computations/julia.html
    method: GET
- name: julia_engine
  endpoint:
    path: /julia/engine
    method: GET
- name: document
  endpoint:
    path: /render/document.qmd
    method: POST
    data_selector: output
    params: {}
- name: julia_code_blocks
  endpoint:
    path: /docs/computations/julia.html
    method: GET
    data_selector: content
    params: {}
- name: using_julia
  endpoint:
    path: /docs/computations/julia.html
    method: GET
    data_selector: records
    params: {}
- name: quarto_render
  endpoint:
    path: /render
    method: POST
    data_selector: output
    params: {}
- name: quarto_preview
  endpoint:
    path: /preview
    method: POST
    data_selector: output
    params: {}
- name: document
  endpoint:
    path: /render
    method: POST
    data_selector: output
    params: {}
- name: notebook
  endpoint:
    path: /convert
    method: POST
    data_selector: output
    params: {}
- name: julia
  endpoint:
    path: /docs/computations/julia.html
    method: GET
- name: python
  endpoint:
    path: /docs/computations/python.html
    method: GET
- name: penguins
  endpoint:
    path: /palmer-penguins.csv
    method: GET
    data_selector: data
    params: {}
- name: penguins
  endpoint:
    path: /palmer-penguins.csv
    method: GET
    data_selector: data
    params: {}
- name: light mode
  endpoint:
    path: /renderings/light
    method: GET
- name: dark mode
  endpoint:
    path: /renderings/dark
    method: GET
- name: Polar Axis
  endpoint:
    path: /polar_axis
    method: GET
    data_selector: records
- name: Matplotlib Demo
  endpoint:
    path: /matplotlib_demo
    method: GET
    data_selector: records
- name: Polar Axis
  endpoint:
    path: /notebook.ipynb
    method: GET
    data_selector: cells
    params: {}
- name: knitr_engine
  endpoint:
    path: /knitr/engine
    method: GET
    data_selector: records
- name: jupyter_engine
  endpoint:
    path: /jupyter/engine
    method: GET
    data_selector: records
- name: yaml_intelligence
  endpoint:
    path: /yaml/intelligence
    method: GET
    data_selector: records
- name: r_package
  endpoint:
    path: /r/package
    method: GET
    data_selector: records
- name: editing_tables
  endpoint:
    path: /docs/visual-editor/content.html#editing-tables
    method: GET
    data_selector: content
    params: {}
- name: editing_lists
  endpoint:
    path: /docs/visual-editor/content.html#editing-lists
    method: GET
    data_selector: content
    params: {}
- name: text_editors
  endpoint:
    path: /tools/text-editors
    method: GET
    data_selector: editor_resources
- name: table_of_contents
  endpoint:
    path: toc
    method: GET
    data_selector: toc
    params:
      toc: 'true'
      toc_depth: 2
      toc_expand: 2
      toc_title: Contents
      toc_location: left
- name: quarto_nvim
  endpoint:
    path: /quarto-nvim
    method: GET
- name: quarto_nvim_kickstarter
  endpoint:
    path: /quarto-nvim-kickstarter
    method: GET
- name: code
  endpoint:
    path: /docs/output-formats/html-code.html
    method: GET
    data_selector: overview
    params: {}
- name: quarto_document
  endpoint:
    path: /quarto/document
    method: GET
    data_selector: documents
    params: {}
- name: themes
  endpoint:
    path: /themes
    method: GET
    data_selector: themes
    params: {}
- name: table_of_contents
  endpoint:
    path: /docs/output-formats/html-basics.html#table-of-contents
    method: GET
    data_selector: toc-options
    params: {}
- name: basic_options
  endpoint:
    path: /basic_options
    method: GET
    data_selector: options
    params: {}
- name: theme_options
  endpoint:
    path: /theme_options
    method: GET
    data_selector: options
    params: {}
- name: dark_mode
  endpoint:
    path: /dark_mode
    method: GET
    data_selector: modes
    params: {}
- name: custom_themes
  endpoint:
    path: /custom_themes
    method: GET
    data_selector: themes
    params: {}
- name: Other Formats
  endpoint:
    path: /docs/output-formats/html-multi-format.html
    method: GET
    data_selector: formats
    params: {}
- name: overview
  endpoint:
    path: /docs/output-formats/html-code.html#overview
    method: GET
- name: hiding_code
  endpoint:
    path: /docs/output-formats/html-code.html#hiding-code
    method: GET
- name: folding_code
  endpoint:
    path: /docs/output-formats/html-code.html#folding-code
    method: GET
- name: code_overflow
  endpoint:
    path: /docs/output-formats/html-code.html#code-overflow
    method: GET
- name: code_tools
  endpoint:
    path: /docs/output-formats/html-code.html#code-tools
    method: GET
- name: appearance
  endpoint:
    path: /docs/output-formats/html-code.html#appearance
    method: GET
- name: code_filename
  endpoint:
    path: /docs/output-formats/html-code.html#code-filename
    method: GET
- name: highlighting
  endpoint:
    path: /docs/output-formats/html-code.html#highlighting
    method: GET
- name: code_annotation
  endpoint:
    path: /docs/output-formats/html-code.html#code-annotation
    method: GET
- name: line_numbers
  endpoint:
    path: /docs/output-formats/html-code.html#line-numbers
    method: GET
- name: executable_blocks
  endpoint:
    path: /docs/output-formats/html-code.html#executable-blocks
    method: GET
- name: copy_button
  endpoint:
    path: /docs/output-formats/html-code.html#copy-button
    method: GET
- name: code_linking
  endpoint:
    path: /docs/output-formats/html-code.html#code-linking
    method: GET
- name: themes
  endpoint:
    path: /themes
    method: GET
    data_selector: available_themes
- name: basic_options
  endpoint:
    path: /basic-options
    method: GET
    data_selector: options
    params: {}
- name: theme_options
  endpoint:
    path: /theme-options
    method: GET
    data_selector: themes
    params: {}
- name: custom_themes
  endpoint:
    path: /custom-themes
    method: GET
    data_selector: customThemes
    params: {}
- name: dark_mode
  endpoint:
    path: /dark-mode
    method: GET
    data_selector: darkMode
    params: {}
- name: sass_variables
  endpoint:
    path: /sass-variables
    method: GET
    data_selector: sassVariables
    params: {}
- name: document_front_matter
  endpoint:
    path: /docs/output-formats/html-multi-format.html
    method: GET
    data_selector: formats
- name: images
  endpoint:
    path: /lightbox/images
    method: GET
    data_selector: images
    params: {}
- name: Standalone HTML
  endpoint:
    path: /embed-resources
    method: POST
    data_selector: resources
    params: {}
- name: HTML Accessibility Checks
  endpoint:
    path: /docs/output-formats/html-accessibility.html
    method: GET
    data_selector: output
    params: {}
- name: quarto_publish
  endpoint:
    path: /docs/publishing
    method: GET
    data_selector: services
- name: pdf
  endpoint:
    path: /output-formats/pdf-basics.html
    method: GET
    data_selector: records
    params: {}
- name: html_accessibility_checks
  endpoint:
    path: /docs/output-formats/html-accessibility.html
    method: GET
    data_selector: format
    params: {}
- name: document_class
  endpoint:
    path: /docs/output-formats/pdf-basics.html#document-class
    method: GET
    data_selector: documentclass
    params: {}
- name: output_options
  endpoint:
    path: /docs/output-formats/pdf-basics.html#output-options
    method: GET
    data_selector: output_options
    params: {}
- name: toc
  endpoint:
    path: toc
    method: GET
    data_selector: contents
    params: {}
- name: number-sections
  endpoint:
    path: number-sections
    method: GET
    data_selector: sections
    params: {}
- name: highlight-style
  endpoint:
    path: highlight-style
    method: GET
    data_selector: styles
    params: {}
- name: include-in-header
  endpoint:
    path: include-in-header
    method: GET
    data_selector: header
    params: {}
- name: keep-tex
  endpoint:
    path: keep-tex
    method: GET
    data_selector: tex
    params: {}
- name: toc
  endpoint:
    path: toc
    method: GET
    data_selector: contents
    params: {}
- name: number-sections
  endpoint:
    path: number-sections
    method: GET
    data_selector: sections
    params: {}
- name: highlight-style
  endpoint:
    path: highlight-style
    method: GET
    data_selector: styles
    params: {}
- name: fonts
  endpoint:
    path: fonts
    method: GET
    data_selector: fontList
    params: {}
- name: cite-method
  endpoint:
    path: cite-method
    method: GET
    data_selector: citationMethods
    params: {}
- name: PDF Compilation Options
  endpoint:
    path: /pdf/compilation/options
    method: GET
    data_selector: options
    params: {}
- name: Package Installation Options
  endpoint:
    path: /package/installation/options
    method: GET
    data_selector: options
    params: {}
- name: Alternate PDF Engines
  endpoint:
    path: /pdf/alternate-engines
    method: GET
    data_selector: engines
    params: {}
- name: Latexmk Options
  endpoint:
    path: /latexmk/options
    method: GET
    data_selector: options
    params: {}
- name: PDF Compilation Options
  endpoint:
    path: /pdf/compilation/options
    method: GET
- name: Package Installation Options
  endpoint:
    path: /pdf/package/installation
    method: GET
- name: Alternate PDF Engines
  endpoint:
    path: /pdf/alternate/engines
    method: GET
- name: Latexmk
  endpoint:
    path: /pdf/latexmk
    method: GET
- name: MS Word Basics
  endpoint:
    path: /docs/output-formats/ms-word.html
    method: GET
    data_selector: sections
    params: {}
- name: reference_document
  endpoint:
    path: /docs/output-formats/ms-word-templates.html
    method: GET
    data_selector: reference-doc
    params: {}
- name: Poster
  endpoint:
    path: quarto use template quarto-ext/typst-templates/poster
- name: IEEE
  endpoint:
    path: quarto use template quarto-ext/typst-templates/ieee
- name: AMS
  endpoint:
    path: quarto use template quarto-ext/typst-templates/ams
- name: Letter
  endpoint:
    path: quarto use template quarto-ext/typst-templates/letter
- name: Fiction
  endpoint:
    path: quarto use template quarto-ext/typst-templates/fiction
- name: Dept News
  endpoint:
    path: quarto use template quarto-ext/typst-templates/dept-news
- name: poster
  endpoint:
    path: /quarto-ext/typst-templates/poster
    method: GET
    data_selector: templates
    params: {}
- name: ieee
  endpoint:
    path: /quarto-ext/typst-templates/ieee
    method: GET
    data_selector: templates
    params: {}
- name: ams
  endpoint:
    path: /quarto-ext/typst-templates/ams
    method: GET
    data_selector: templates
    params: {}
- name: letter
  endpoint:
    path: /quarto-ext/typst-templates/letter
    method: GET
    data_selector: templates
    params: {}
- name: fiction
  endpoint:
    path: /quarto-ext/typst-templates/fiction
    method: GET
    data_selector: templates
    params: {}
- name: dept_news
  endpoint:
    path: /quarto-ext/typst-templates/dept-news
    method: GET
    data_selector: templates
    params: {}
- name: typst
  endpoint:
    path: template.typ
    method: POST
- name: gfm_format
  endpoint:
    path: /docs/output-formats/gfm.html
    method: GET
    data_selector: content
    params: {}
- name: gfm
  endpoint:
    path: /docs/output-formats/gfm.html
    method: GET
    data_selector: records
    params: {}
- name: hugo_site_config
  endpoint:
    path: /config.toml
    method: GET
    data_selector: site_config
    params: {}
- name: quarto
  endpoint:
    path: /quarto/render
    method: POST
    data_selector: results
- name: hugo
  endpoint:
    path: /hugo/serve
    method: GET
    data_selector: status
- name: index
  endpoint:
    path: /index.qmd
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /_quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: JATS
  endpoint:
    path: https://quarto.org/docs/reference/formats/jats.html
    method: GET
- name: Jupyter
  endpoint:
    path: https://quarto.org/docs/reference/formats/ipynb.html
    method: GET
- name: ConTeXt
  endpoint:
    path: https://quarto.org/docs/reference/formats/context.html
    method: GET
- name: RTF
  endpoint:
    path: https://quarto.org/docs/reference/formats/rtf.html
    method: GET
- name: reST
  endpoint:
    path: https://quarto.org/docs/reference/formats/rst.html
    method: GET
- name: AsciiDoc
  endpoint:
    path: https://quarto.org/docs/reference/formats/asciidoc.html
    method: GET
- name: Org-Mode
  endpoint:
    path: https://quarto.org/docs/reference/formats/org.html
    method: GET
- name: Muse
  endpoint:
    path: https://quarto.org/docs/reference/formats/muse.html
    method: GET
- name: GNU Texinfo
  endpoint:
    path: https://quarto.org/docs/reference/formats/texinfo.html
    method: GET
- name: Groff Man Page
  endpoint:
    path: https://quarto.org/docs/reference/formats/man.html
    method: GET
- name: Groff Manuscript
  endpoint:
    path: https://quarto.org/docs/reference/formats/ms.html
    method: GET
- name: Haddock markup
  endpoint:
    path: https://quarto.org/docs/reference/formats/haddock.html
    method: GET
- name: OPML
  endpoint:
    path: https://quarto.org/docs/reference/formats/opml.html
    method: GET
- name: Textile
  endpoint:
    path: https://quarto.org/docs/reference/formats/textile.html
    method: GET
- name: DocBook
  endpoint:
    path: https://quarto.org/docs/reference/formats/docbook.html
    method: GET
- name: InDesign
  endpoint:
    path: https://quarto.org/docs/reference/formats/icml.html
    method: GET
- name: TEI Simple
  endpoint:
    path: https://quarto.org/docs/reference/formats/tei.html
    method: GET
- name: FictionBook
  endpoint:
    path: https://quarto.org/docs/reference/formats/fb2.html
    method: GET
- name: HTML
  endpoint:
    path: /docs/reference/formats/html.html
    method: GET
    data_selector: formats
    params: {}
- name: PDF
  endpoint:
    path: /docs/reference/formats/pdf.html
    method: GET
    data_selector: formats
    params: {}
- name: MS Word
  endpoint:
    path: /docs/reference/formats/docx.html
    method: GET
    data_selector: formats
    params: {}
- name: OpenDocument
  endpoint:
    path: /docs/reference/formats/odt.html
    method: GET
    data_selector: formats
    params: {}
- name: ePub
  endpoint:
    path: /docs/reference/formats/epub.html
    method: GET
    data_selector: formats
    params: {}
- name: Revealjs
  endpoint:
    path: /docs/reference/formats/presentations/revealjs.html
    method: GET
    data_selector: formats
    params: {}
- name: PowerPoint
  endpoint:
    path: /docs/reference/formats/presentations/pptx.html
    method: GET
    data_selector: formats
    params: {}
- name: Beamer
  endpoint:
    path: /docs/reference/formats/presentations/beamer.html
    method: GET
    data_selector: formats
    params: {}
- name: GitHub
  endpoint:
    path: /docs/reference/formats/markdown/gfm.html
    method: GET
    data_selector: formats
    params: {}
- name: CommonMark
  endpoint:
    path: /docs/reference/formats/markdown/commonmark.html
    method: GET
    data_selector: formats
    params: {}
- name: Hugo
  endpoint:
    path: /docs/reference/formats/hugo.html
    method: GET
    data_selector: formats
    params: {}
- name: Docusaurus
  endpoint:
    path: /docs/reference/formats/docusaurus.html
    method: GET
    data_selector: formats
    params: {}
- name: Markua
  endpoint:
    path: /docs/reference/formats/markdown/markua.html
    method: GET
    data_selector: formats
    params: {}
- name: MediaWiki
  endpoint:
    path: /docs/reference/formats/wiki/mediawiki.html
    method: GET
    data_selector: formats
    params: {}
- name: DokuWiki
  endpoint:
    path: /docs/reference/formats/wiki/dokuwiki.html
    method: GET
    data_selector: formats
    params: {}
- name: ZimWiki
  endpoint:
    path: /docs/reference/formats/wiki/zimwiki.html
    method: GET
    data_selector: formats
    params: {}
- name: Jira Wiki
  endpoint:
    path: /docs/reference/formats/wiki/jira.html
    method: GET
    data_selector: formats
    params: {}
- name: XWiki
  endpoint:
    path: /docs/reference/formats/wiki/xwiki.html
    method: GET
    data_selector: formats
    params: {}
- name: Creating Slides
  endpoint:
    path: /docs/presentations/powerpoint.html#creating-slides
    method: GET
    data_selector: slides
    params: {}
- name: Incremental Lists
  endpoint:
    path: /docs/presentations/powerpoint.html#incremental-lists
    method: GET
    data_selector: incremental_lists
    params: {}
- name: Multiple Columns
  endpoint:
    path: /docs/presentations/powerpoint.html#multiple-columns
    method: GET
    data_selector: multiple_columns
    params: {}
- name: Speaker Notes
  endpoint:
    path: /docs/presentations/powerpoint.html#speaker-notes
    method: GET
    data_selector: speaker_notes
    params: {}
- name: PowerPoint Templates
  endpoint:
    path: /docs/presentations/powerpoint.html#powerpoint-templates
    method: GET
    data_selector: templates
    params: {}
- name: Slide Layouts
  endpoint:
    path: /slide/layouts
    method: GET
    data_selector: layouts
    params: {}
- name: Background Images
  endpoint:
    path: /background/images
    method: GET
    data_selector: images
    params: {}
- name: presentations
  endpoint:
    path: /presentations
    method: GET
    data_selector: presentations
- name: slides
  endpoint:
    path: /slides
    method: GET
    data_selector: slides
    params: {}
- name: incremental
  endpoint:
    path: incremental
    method: GET
    data_selector: records
- name: nonincremental
  endpoint:
    path: nonincremental
    method: GET
    data_selector: records
- name: slides
  endpoint:
    path: /presentations/slides
    method: GET
    data_selector: slides
    params: {}
- name: Slide Layouts
  endpoint:
    path: /layouts
    method: GET
    data_selector: layouts
    params: {}
- name: dashboard
  endpoint:
    path: /docs/dashboards/layout.html
    method: GET
    data_selector: components
    params: {}
- name: Scrolling
  endpoint:
    path: /scrolling
    method: GET
- name: Pages
  endpoint:
    path: /pages
    method: GET
- name: Tabsets
  endpoint:
    path: /tabsets
    method: GET
- name: Cards
  endpoint:
    path: /cards
    method: GET
- name: incremental_lists
  endpoint:
    path: /incremental_lists
    method: GET
    data_selector: lists
    params: {}
- name: multiple_columns
  endpoint:
    path: /multiple_columns
    method: GET
    data_selector: columns
    params: {}
- name: beamer_options
  endpoint:
    path: /beamer_options
    method: GET
    data_selector: options
    params: {}
- name: frame_attributes
  endpoint:
    path: /frame_attributes
    method: GET
    data_selector: attributes
    params: {}
- name: background_images
  endpoint:
    path: /background_images
    method: GET
    data_selector: images
    params: {}
- name: dashboard
  endpoint:
    path: /docs/dashboards/layout
    method: GET
    data_selector: records
    params: {}
- name: dashboard_parameters
  endpoint:
    path: /docs/dashboards/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: dashboard_inputs
  endpoint:
    path: /docs/dashboards/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: global_toolbar
  endpoint:
    path: /docs/dashboards/images/toolbar.png
    method: GET
- name: static_dashboard
  endpoint:
    path: /docs/dashboards/deployment/static-dashboards
    method: GET
- name: shiny_dashboard
  endpoint:
    path: /docs/dashboards/deployment/shiny-dashboards
    method: GET
- name: themes
  endpoint:
    path: /bootswatch/themes
    method: GET
    data_selector: themes
    params: {}
- name: shiny_for_python
  endpoint:
    path: /shiny_for_python
    method: GET
- name: shiny_for_r
  endpoint:
    path: /shiny_for_r
    method: GET
- name: config_file
  endpoint:
    path: _quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: theme_options
  endpoint:
    path: /themes
    method: GET
    data_selector: themes
    params: {}
- name: sass_variables
  endpoint:
    path: /sass/variables
    method: GET
    data_selector: variables
    params: {}
- name: website
  endpoint:
    path: /project
    method: POST
    data_selector: project
    params: {}
- name: preview
  endpoint:
    path: /preview
    method: GET
    data_selector: preview
    params: {}
- name: shinyapps.io
  endpoint:
    path: https://docs.posit.co/shinyapps.io/getting-started.html#working-with-shiny-for-python
    method: GET
- name: Hugging Face
  endpoint:
    path: https://huggingface.co/docs/hub/spaces-sdks-docker-shiny#shiny-for-python
    method: GET
- name: Shiny Server
  endpoint:
    path: https://shiny.posit.co/py/docs/deploy.html#deploy-to-shiny-server-open-source
    method: GET
- name: Posit Connect
  endpoint:
    path: https://shiny.posit.co/py/docs/deploy.html#deploy-to-posit-connect-commercial
    method: GET
- name: Other Services
  endpoint:
    path: https://shiny.posit.co/py/docs/deploy.html#other-hosting-options
    method: GET
- name: repo-url
  endpoint:
    path: repo-url
    method: GET
    data_selector: links
    params: {}
- name: repo-actions
  endpoint:
    path: repo-actions
    method: GET
    data_selector: actions
    params: {}
- name: config_file
  endpoint:
    path: /_quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: drafts
  endpoint:
    path: /docs/websites/website-drafts.html
    method: GET
    data_selector: drafts
    params: {}
- name: website_search
  endpoint:
    path: /docs/websites/website-search
    method: GET
    data_selector: search
    params: {}
- name: config_file
  endpoint:
    path: _quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: algolia_index
  endpoint:
    path: /1/indexes/<my-index-name>/search
    method: POST
    data_selector: hits
    params: {}
- name: announcement_bar
  endpoint:
    path: /_quarto.yml
    method: GET
    data_selector: website.announcement
    params: {}
- name: navbar
  endpoint:
    path: /navbar
    method: GET
    data_selector: items
    params: {}
- name: sidebar
  endpoint:
    path: /sidebar
    method: GET
    data_selector: items
    params: {}
- name: redirects
  endpoint:
    path: /redirects
    method: GET
    data_selector: aliases
    params: {}
- name: 404_pages
  endpoint:
    path: /404
    method: GET
    data_selector: '404'
    params: {}
- name: favicon
  endpoint:
    path: /favicon
    method: GET
    data_selector: favicon
- name: twitter-card
  endpoint:
    path: /twitter-card
    method: GET
    data_selector: twitter-card
- name: open-graph
  endpoint:
    path: /open-graph
    method: GET
    data_selector: open-graph
- name: google-analytics
  endpoint:
    path: /google-analytics
    method: GET
    data_selector: google-analytics
- name: cookie-consent
  endpoint:
    path: /cookie-consent
    method: GET
    data_selector: cookie-consent
- name: about_pages
  endpoint:
    path: /docs/websites/website-about.html
    method: GET
    data_selector: content
- name: drafts
  endpoint:
    path: /docs/websites/website-drafts.html
    method: GET
    data_selector: drafts
    params: {}
- name: about
  endpoint:
    path: /about
    method: GET
    data_selector: about
    params: {}
- name: website_search
  endpoint:
    path: /docs/websites/website-search.html
    method: GET
    data_selector: results
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params: {}
- name: document_listings
  endpoint:
    path: /docs/websites/website-listings.html
    method: GET
    data_selector: listings
    params: {}
- name: announcement_bar
  endpoint:
    path: /website/announcement
    method: GET
    data_selector: announcement
    params: {}
- name: default_listing
  endpoint:
    path: /listing
    method: GET
    data_selector: contents
- name: table_listing
  endpoint:
    path: /listing
    method: GET
    data_selector: contents
- name: grid_listing
  endpoint:
    path: /listing
    method: GET
    data_selector: contents
- name: custom_listing
  endpoint:
    path: /docs/websites/website-listings-custom.html
    method: GET
    data_selector: items
    params: {}
- name: listing
  endpoint:
    path: /listing
    method: GET
    data_selector: items
    params:
      sort-ui: true
      filter-ui: true
      page-size: 10
- name: favicon
  endpoint:
    path: /favicon
    method: GET
    data_selector: favicon
    params: {}
- name: twitter-card
  endpoint:
    path: /twitter-card
    method: GET
    data_selector: twitter-card
    params: {}
- name: open-graph
  endpoint:
    path: /open-graph
    method: GET
    data_selector: open-graph
    params: {}
- name: google-analytics
  endpoint:
    path: /google-analytics
    method: GET
    data_selector: google-analytics
    params: {}
- name: cookie-consent
  endpoint:
    path: /cookie-consent
    method: GET
    data_selector: cookie-consent
    params: {}
- name: books
  endpoint:
    path: /docs/books/
    method: GET
    data_selector: documents
    params: {}
- name: about_pages
  endpoint:
    path: /docs/websites/website-about.html
    method: GET
    data_selector: about
    params: {}
- name: about_page
  endpoint:
    path: /about
    method: GET
    data_selector: about
    params: {}
- name: book_project
  endpoint:
    path: /create/project
    method: POST
    data_selector: project
    params: {}
- name: document_listings
  endpoint:
    path: /docs/websites/website-listings
    method: GET
    data_selector: listings
    params: {}
- name: books
  endpoint:
    path: /docs/books/
    method: GET
    data_selector: books
    params: {}
- name: book
  endpoint:
    path: _quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: Listing Example
  endpoint:
    path: /listing/example
    method: GET
    data_selector: items
    params: {}
- name: book
  endpoint:
    path: /_book/
    method: GET
    data_selector: files
    params: {}
- name: custom_listings
  endpoint:
    path: /docs/websites/website-listings-custom.html
    method: GET
    data_selector: contents
    params: {}
- name: book_structure
  endpoint:
    path: /docs/books/book-structure.html
    method: GET
    data_selector: sections
- name: listing
  endpoint:
    params:
      sort-ui: true
      filter-ui: true
      field-required:
      - name
      - custom-field
- name: books
  endpoint:
    path: /docs/books/
    method: GET
    data_selector: chapters
- name: book_project
  endpoint:
    path: /projects/book
    method: POST
    data_selector: project
    params: {}
- name: books
  endpoint:
    path: /docs/books/
    method: GET
    data_selector: books
    params: {}
- name: format_options
  endpoint:
    path: /_quarto.yml
    method: GET
    data_selector: format
- name: reader_tools
  endpoint:
    path: /reader/tools
    method: GET
    data_selector: tools
- name: book_project
  endpoint:
    path: _quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: book
  endpoint:
    path: /books
    method: GET
    data_selector: books
- name: manuscript
  endpoint:
    path: /manuscripts
    method: GET
    data_selector: articles
    params: {}
- name: book_structure
  endpoint:
    path: /docs/books/book-structure
    method: GET
    data_selector: content
- name: format_options
  endpoint:
    path: /docs/books/book-output.html#format-options
    method: GET
    data_selector: format_options
    params: {}
- name: reader_tools
  endpoint:
    path: /docs/books/book-output.html#reader-tools
    method: GET
    data_selector: reader_tools
    params: {}
- name: book
  endpoint:
    path: /book
    method: GET
    data_selector: records
    params: {}
- name: manuscript
  endpoint:
    path: /manuscripts
    method: GET
    data_selector: records
    params: {}
- name: manuscript
  endpoint:
    path: /manuscripts
    method: POST
    data_selector: manuscript
    params: {}
- name: publish_manuscript
  endpoint:
    path: /docs/manuscripts/publishing.html
    method: GET
    data_selector: null
    params: {}
- name: manuscript
  endpoint:
    path: /docs/manuscripts/components.html
    method: GET
    data_selector: manuscript
    params: {}
- name: manuscript
  endpoint:
    path: /docs/manuscripts/components.html
    method: GET
    data_selector: content
- name: code-links
  endpoint:
    path: /manuscript/code-links
    method: GET
    data_selector: resources
    params: {}
- name: meca-bundle
  endpoint:
    path: /manuscript/meca-bundle
    method: GET
    data_selector: resources
    params: {}
- name: manuscript-url
  endpoint:
    path: /manuscript/manuscript-url
    method: GET
    data_selector: resources
    params: {}
- name: data-import-code
  endpoint:
    path: data-import.py
    method: GET
- name: earthquakes-csv
  endpoint:
    path: data/earthquakes.csv
    method: GET
- name: Quarto Pub
  endpoint:
    path: /docs/publishing/quarto-pub.html
    method: GET
- name: GitHub Pages
  endpoint:
    path: /docs/publishing/github-pages.html
    method: GET
- name: Posit Connect
  endpoint:
    path: /docs/publishing/rstudio-connect.html
    method: GET
- name: Netlify
  endpoint:
    path: /docs/publishing/netlify.html
    method: GET
- name: Confluence
  endpoint:
    path: /docs/publishing/confluence.html
    method: GET
- name: Hugging Face Spaces
  endpoint:
    path: /docs/publishing/hugging-face.html
    method: GET
- name: Other Services
  endpoint:
    path: /docs/publishing/other.html
    method: GET
- name: quarto_pub
  endpoint:
    path: /docs/publishing/quarto-pub.html
    method: GET
- name: github_pages
  endpoint:
    path: /docs/publishing/github-pages.html
    method: GET
- name: posit_connect
  endpoint:
    path: /docs/publishing/rstudio-connect.html
    method: GET
- name: netlify
  endpoint:
    path: /docs/publishing/netlify.html
    method: GET
- name: confluence
  endpoint:
    path: /docs/publishing/confluence.html
    method: GET
- name: hugging_face_spaces
  endpoint:
    path: /docs/publishing/hugging-face.html
    method: GET
- name: other_services
  endpoint:
    path: /docs/publishing/other.html
    method: GET
- name: publish_command
  endpoint:
    path: /docs/publishing/quarto-pub.html#publish-command
    method: POST
    data_selector: project
    params: {}
- name: quarto_publish_command
  endpoint:
    path: /quarto/publish
    method: POST
    data_selector: result
    params: {}
- name: Render to docs
  endpoint:
    path: /docs
    method: POST
    data_selector: output-dir
    params:
      type: website
- name: render_to_docs
  endpoint:
    path: /docs
    method: POST
    data_selector: output-dir
    params:
      type: website
- name: Publish Command
  endpoint:
    path: /quarto/publish
    method: POST
    data_selector: publish
    params: {}
- name: GitHub Action
  endpoint:
    path: /github/actions
    method: POST
    data_selector: actions
    params: {}
- name: publish_command
  endpoint:
    path: /publish
    method: POST
    data_selector: result
    params: {}
- name: quarto_publish
  endpoint:
    path: /publish
    method: POST
- name: rsconnect_python
  endpoint:
    path: /rsconnect-python
    method: POST
- name: git_backed_content
  endpoint:
    path: /git-backed-content
    method: POST
- name: continuous_integration
  endpoint:
    path: /ci
    method: POST
- name: publish
  endpoint:
    path: /quarto/publish
    method: POST
    data_selector: response
    params: {}
- name: publish_action
  endpoint:
    path: /publish
    method: POST
    data_selector: data
- name: publish_command
  endpoint:
    path: /quarto/publish/netlify
    method: POST
    data_selector: netlify
    params: {}
- name: publish_action
  endpoint:
    path: /.github/workflows/publish.yml
    method: POST
- name: publish
  endpoint:
    path: /publish
    method: POST
    data_selector: result
- name: confluence_demo
  endpoint:
    path: /confluence-demo.qmd
    method: POST
    data_selector: content
    params: {}
- name: _publish.yml
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: project
  endpoint:
    path: /wiki/spaces/ABBR
    method: GET
- name: page
  endpoint:
    path: /wiki/spaces/ABBR/pages/123456
    method: GET
- name: publish
  endpoint:
    path: /publish
    method: POST
- name: Hugging Face Spaces Overview
  endpoint:
    path: /docs/hub/spaces-overview
    method: GET
    data_selector: overview
- name: Creating a New Space
  endpoint:
    path: /docs/publishing/hugging-face.html#create-a-new-space
    method: GET
    data_selector: create_space
- name: Publish Command
  endpoint:
    path: /docs/publishing/hugging-face.html#publish-command
    method: GET
    data_selector: publish_command
- name: Firebase
  endpoint:
    path: /docs/hosting/quickstart
    method: GET
    data_selector: Firebase websites
    params: {}
- name: Site44
  endpoint:
    path: /docs/publishing/other.html#site44
    method: GET
    data_selector: Site44
    params: {}
- name: Amazon S3
  endpoint:
    path: /docs/publishing/other.html#amazon-s3
    method: GET
    data_selector: Amazon S3
    params: {}
- name: project
  endpoint:
    path: /user/applications
    method: POST
    data_selector: netlify
    params:
      id: 5f3abafe-68f9-4c1d-835b-9d668b892001
- name: quarto_publish
  endpoint:
    path: /publish
    method: POST
    data_selector: result
    params: {}
- name: Quarto Actions
  endpoint:
    path: https://github.com/quarto-dev/quarto-actions
    method: GET
- name: Quarto Pub
  endpoint:
    path: https://quarto.org/docs/publishing/quarto-pub.html#github-action
    method: GET
- name: GitHub Pages
  endpoint:
    path: https://quarto.org/docs/publishing/github-pages.html#github-action
    method: GET
- name: Netlify
  endpoint:
    path: https://quarto.org/docs/publishing/netlify.html#github-action
    method: GET
- name: project
  endpoint:
    path: _quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: directory
  endpoint:
    path: _metadata.yml
    method: GET
    data_selector: format
    params: {}
- name: project
  endpoint:
    path: _publish.yml
    method: POST
    data_selector: netlify
    params:
      id: 5f3abafe-68f9-4c1d-835b-9d668b892001
- name: publish
  endpoint:
    path: /publish
    method: GET
    data_selector: records
    params: {}
- name: quarto_config
  endpoint:
    path: /docs/projects/profiles.html
    method: GET
    data_selector: profiles
    params: {}
- name: project_metadata
  endpoint:
    path: _quarto.yml
    method: GET
    data_selector: project
    params: {}
- name: directory_metadata
  endpoint:
    path: _metadata.yml
    method: GET
    data_selector: format
    params: {}
- name: articles
  endpoint:
    path: articles
    method: GET
- name: profile_configuration
  endpoint:
    path: /profile/configuration
    method: GET
    data_selector: profiles
    params: {}
- name: profile_content
  endpoint:
    path: /profile/content
    method: GET
    data_selector: content
    params: {}
- name: profile_groups
  endpoint:
    path: /profile/groups
    method: GET
    data_selector: groups
    params: {}
- name: default_profile
  endpoint:
    path: /profile/default
    method: GET
    data_selector: default
    params: {}
- name: DATABASE_API
  endpoint:
    path: /api
    params: {}
- name: quarto
  endpoint:
    path: /quarto/profiles
    method: GET
    data_selector: profiles
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: ''
- name: project_scripts
  endpoint:
    path: /projects/scripts
    method: GET
    data_selector: scripts
    params: {}
- name: venv
  endpoint:
    path: /projects/virtual-environments.html#using-venv
    method: GET
- name: conda
  endpoint:
    path: /projects/virtual-environments.html#using-conda
    method: GET
- name: renv
  endpoint:
    path: /projects/virtual-environments.html#using-renv
    method: GET
- name: JupyterLab
  endpoint:
    path: /projects/virtual-environments.html#jupyterlab
    method: GET
- name: RStudio
  endpoint:
    path: /projects/virtual-environments.html#rstudio
    method: GET
- name: Positron
  endpoint:
    path: /projects/virtual-environments.html#positron
    method: GET
- name: VS Code
  endpoint:
    path: /projects/virtual-environments.html#vs-code
    method: GET
- name: using_venv
  endpoint:
    path: /using/venv
    method: GET
- name: using_conda
  endpoint:
    path: /using/conda
    method: GET
- name: using_renv
  endpoint:
    path: /using/renv
    method: GET
- name: jupyterlab
  endpoint:
    path: /using/jupyterlab
    method: GET
- name: rstudio
  endpoint:
    path: /using/rstudio
    method: GET
- name: positron
  endpoint:
    path: /using/positron
    method: GET
- name: vscode
  endpoint:
    path: /using/vscode
    method: GET
- name: venv
  endpoint:
    path: /docs/projects/virtual-environments.html#using-venv
    method: GET
- name: conda
  endpoint:
    path: /docs/projects/virtual-environments.html#using-conda
    method: GET
- name: renv
  endpoint:
    path: /docs/projects/virtual-environments.html#using-renv
    method: GET
- name: JupyterLab
  endpoint:
    path: /docs/projects/virtual-environments.html#jupyterlab
    method: GET
- name: RStudio
  endpoint:
    path: /docs/projects/virtual-environments.html#rstudio
    method: GET
- name: Positron
  endpoint:
    path: /docs/projects/virtual-environments.html#positron
    method: GET
- name: VS Code
  endpoint:
    path: /docs/projects/virtual-environments.html#vs-code
    method: GET
- name: project_configuration
  endpoint:
    path: /project/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: create_virtual_environment
  endpoint:
    path: create_virtual_environment
    method: POST
    data_selector: commands
    params: {}
- name: activate_environment
  endpoint:
    path: activate_environment
    method: POST
    data_selector: commands
    params: {}
- name: install_packages
  endpoint:
    path: install_packages
    method: POST
    data_selector: commands
    params: {}
- name: deactivate_environment
  endpoint:
    path: deactivate_environment
    method: POST
    data_selector: commands
    params: {}
- name: variables
  endpoint:
    path: /docs/authoring/variables.html
    method: GET
    data_selector: content
    params: {}
- name: project_configuration
  endpoint:
    path: /detected/project/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: page_layout
  endpoint:
    path: /docs/output-formats/page-layout
    method: GET
    data_selector: layout_options
- name: variables
  endpoint:
    path: /authoring/variables
    method: GET
    data_selector: variables
    params: {}
- name: document_language
  endpoint:
    path: /docs/authoring/language
    method: GET
    data_selector: language_options
    params: {}
- name: page_layout
  endpoint:
    path: /docs/output-formats/page-layout
    method: GET
    data_selector: page-layout-options
    params: {}
- name: ipynb-filters
  endpoint:
    path: /extensions/nbfilter.html
    method: GET
    data_selector: filters
    params: {}
- name: language_options
  endpoint:
    path: /docs/authoring/language.html
    method: GET
    data_selector: language_options
    params: {}
- name: shortcode_filter
  endpoint:
    path: /extensions/shortcodes
    method: GET
    data_selector: extensions
    params: {}
- name: journal_articles
  endpoint:
    path: /extensions/journal-articles
    method: GET
    data_selector: extensions
    params: {}
- name: custom_formats
  endpoint:
    path: /extensions/custom-formats
    method: GET
    data_selector: extensions
    params: {}
- name: revealjs
  endpoint:
    path: /extensions/revealjs
    method: GET
    data_selector: extensions
    params: {}
- name: journal_articles
  endpoint:
    path: /docs/extensions/listing-journals.html
    method: GET
    data_selector: articles
    params: {}
- name: ipynb-filters
  endpoint:
    path: /nbfilter
    method: POST
    data_selector: output
    params: {}
- name: Shortcodes
  endpoint:
    path: /docs/extensions/shortcodes.html
    method: GET
- name: Filters
  endpoint:
    path: /docs/extensions/filters.html
    method: GET
- name: Journal Articles
  endpoint:
    path: /docs/journals/formats.html
    method: GET
- name: Custom Formats
  endpoint:
    path: /docs/extensions/formats.html
    method: GET
- name: Revealjs Plugins
  endpoint:
    path: /docs/extensions/revealjs.html
    method: GET
- name: Project Types
  endpoint:
    path: /docs/extensions/project-types.html
    method: GET
- name: Starter Templates
  endpoint:
    path: /docs/extensions/starter-templates.html
    method: GET
- name: Metadata
  endpoint:
    path: /docs/extensions/metadata.html
    method: GET
- name: Brand
  endpoint:
    path: /docs/extensions/brand.html
    method: GET
- name: shortcodes_and_filters
  endpoint:
    path: /docs/extensions/listing-filters.html
    method: GET
    data_selector: extensions
- name: journal_articles
  endpoint:
    path: /docs/extensions/listing-journals.html
    method: GET
    data_selector: extensions
- name: custom_formats
  endpoint:
    path: /docs/extensions/listing-formats.html
    method: GET
    data_selector: extensions
- name: revealjs
  endpoint:
    path: /docs/extensions/listing-revealjs.html
    method: GET
    data_selector: extensions
- name: Journal Articles
  endpoint:
    path: /docs/extensions/listing-journals.html
    method: GET
    data_selector: articles
    params: {}
- name: custom_formats
  endpoint:
    path: /docs/extensions/
    method: GET
    data_selector: formats
    params: {}
- name: revealjs_extensions
  endpoint:
    path: /docs/extensions/listing-revealjs.html
    method: GET
    data_selector: extensions
- name: academic-typst
  endpoint:
    path: https://github.com/kazuyanagimoto/quarto-academic-typst
    method: GET
- name: aog-article
  endpoint:
    path: https://github.com/AaronGullickson/aog-article-quarto
    method: GET
- name: awesomecv-typst
  endpoint:
    path: https://github.com/kazuyanagimoto/quarto-awesomecv-typst
    method: GET
- name: bookup
  endpoint:
    path: https://github.com/juba/bookup-html
    method: GET
- name: clean-typst
  endpoint:
    path: https://github.com/kazuyanagimoto/quarto-clean-typst
    method: GET
- name: diaquarto
  endpoint:
    path: https://github.com/skriptum/diatypst/blob/main/diaquarto
    method: GET
- name: fancy-doc
  endpoint:
    path: https://github.com/DamonCharlesRoberts/fancy-doc
    method: GET
- name: hikmah-pdf
  endpoint:
    path: https://github.com/andrewheiss/hikmah-academic-quarto
    method: GET
- name: inrae
  endpoint:
    path: https://github.com/davidcarayon/quarto-inrae-extension
    method: GET
- name: invoice-typst
  endpoint:
    path: https://github.com/mcanouil/quarto-invoice
    method: GET
- name: letter-pdf
  endpoint:
    path: https://github.com/mcanouil/quarto-letter
    method: GET
- name: lumo
  endpoint:
    path: https://github.com/holtzy/lumo
    method: GET
- name: PrettyPDF
  endpoint:
    path: https://github.com/nrennie/PrettyPDF
    method: GET
- name: projector
  endpoint:
    path: https://github.com/christopherkenny/projector
    method: GET
- name: quarto-letter
  endpoint:
    path: https://github.com/produnis/quarto-letter
    method: GET
- name: quarto-live
  endpoint:
    path: https://github.com/r-wasm/quarto-live
    method: GET
- name: quarto-preprint
  endpoint:
    path: https://github.com/mvuorre/quarto-preprint
    method: GET
- name: sketchy-html
  endpoint:
    path: https://github.com/schochastics/quarto-sketchy-html
    method: GET
- name: stanford
  endpoint:
    path: https://github.com/coatless-quarto/stanford
    method: GET
- name: texnative
  endpoint:
    path: https://github.com/wearetechnative/texnative
    method: GET
- name: titlepage-pdf
  endpoint:
    path: https://github.com/nmfs-opensci/quarto_titlepages
    method: GET
- name: Tufte-Inspired
  endpoint:
    path: https://github.com/fredguth/tufte-inspired
    method: GET
- name: blackboard-revealjs
  endpoint:
    path: https://github.com/schochastics/quarto-blackboard-theme
    method: GET
- name: clean-revealjs
  endpoint:
    path: https://github.com/grantmcdermott/quarto-revealjs-clean
    method: GET
- name: coeos-revealjs
  endpoint:
    path: https://github.com/mcanouil/quarto-revealjs-coeos
    method: GET
- name: illinois-revealjs
  endpoint:
    path: https://github.com/coatless-quarto/illinois-revealjs
    method: GET
- name: metropolis-revealjs
  endpoint:
    path: https://github.com/shafayetShafee/metropolis
    method: GET
- name: nes-revealjs
  endpoint:
    path: https://github.com/EmilHvitfeldt/quarto-nes-theme
    method: GET
- name: onyxia-revealjs
  endpoint:
    path: https://github.com/InseeFrLab/onyxia-quarto
    method: GET
- name: rladies-revealjs
  endpoint:
    path: https://github.com/beatrizmilz/quarto-rladies-theme
    method: GET
- name: extension_metadata
  endpoint:
    path: /extensions/distributing.html
    method: GET
    data_selector: extension_contents
- name: shortcodes
  endpoint:
    path: /docs/extensions/shortcodes.html
    method: GET
    data_selector: shortcodes
    params: {}
- name: fancy-header
  endpoint:
    path: /_extensions/fancy-header/
    method: GET
    data_selector: filters
- name: acm
  endpoint:
    path: /_extensions/acm/_extension.yml
    method: GET
    data_selector: formats
- name: author
  endpoint:
    path: /docs/journals/authors.html
    method: GET
    data_selector: author
- name: affiliations
  endpoint:
    path: /docs/journals/authors.html
    method: GET
    data_selector: affiliations
- name: author
  endpoint:
    path: /authors
    method: GET
    data_selector: authors
- name: affiliations
  endpoint:
    path: /affiliations
    method: GET
    data_selector: affiliations
- name: animate
  endpoint:
    path: https://github.com/fradav/quarto-revealjs-animate
    method: GET
    data_selector: ''
    params: {}
- name: animate-graph
  endpoint:
    path: https://github.com/ofkoru/quarto-animate-graph
    method: GET
    data_selector: ''
    params: {}
- name: appearance
  endpoint:
    path: https://github.com/martinomagnifico/quarto-appearance
    method: GET
    data_selector: ''
    params: {}
- name: attribution
  endpoint:
    path: https://github.com/quarto-ext/attribution
    method: GET
    data_selector: ''
    params: {}
- name: audio-slideshow
  endpoint:
    path: https://github.com/kapsner/audio-slideshow
    method: GET
    data_selector: ''
    params: {}
- name: auto-agenda
  endpoint:
    path: https://github.com/andrie/reveal-auto-agenda
    method: GET
    data_selector: ''
    params: {}
- name: code-fullscreen
  endpoint:
    path: https://github.com/shafayetShafee/code-fullscreen
    method: GET
    data_selector: ''
    params: {}
- name: codefocus
  endpoint:
    path: https://github.com/reuning/codeFocus
    method: GET
    data_selector: ''
    params: {}
- name: confetti
  endpoint:
    path: https://github.com/ArthurData/quarto-confetti
    method: GET
    data_selector: ''
    params: {}
- name: detective
  endpoint:
    path: https://github.com/ThinkR-open/quarto-detective
    method: GET
    data_selector: ''
    params: {}
- name: drop
  endpoint:
    path: https://github.com/r-wasm/quarto-drop
    method: GET
    data_selector: ''
    params: {}
- name: excalidraw
  endpoint:
    path: https://github.com/parmsam/quarto-excalidraw
    method: GET
    data_selector: ''
    params: {}
- name: flashcards
  endpoint:
    path: https://github.com/parmsam/quarto-flashcards
    method: GET
    data_selector: ''
    params: {}
- name: i18n
  endpoint:
    path: https://github.com/ArthurData/quarto-i18n
    method: GET
    data_selector: ''
    params: {}
- name: leader-line
  endpoint:
    path: https://github.com/ofkoru/quarto-leader-line
    method: GET
    data_selector: ''
    params: {}
- name: pointer
  endpoint:
    path: https://github.com/quarto-ext/pointer
    method: GET
    data_selector: ''
    params: {}
- name: qdraw
  endpoint:
    path: https://github.com/mahmudstat/qdraw
    method: GET
    data_selector: ''
    params: {}
- name: quiz
  endpoint:
    path: https://github.com/parmsam/quarto-quiz
    method: GET
    data_selector: ''
    params: {}
- name: reveal-header
  endpoint:
    path: https://github.com/shafayetShafee/reveal-header
    method: GET
    data_selector: ''
    params: {}
- name: roughnotation
  endpoint:
    path: https://github.com/EmilHvitfeldt/quarto-roughnotation
    method: GET
    data_selector: ''
    params: {}
- name: simplemenu
  endpoint:
    path: https://github.com/martinomagnifico/quarto-simplemenu
    method: GET
    data_selector: ''
    params: {}
- name: speech
  endpoint:
    path: https://github.com/parmsam/quarto-speech
    method: GET
    data_selector: ''
    params: {}
- name: spotlight
  endpoint:
    path: https://github.com/mcanouil/quarto-spotlight
    method: GET
    data_selector: ''
    params: {}
- name: style-speaker-note
  endpoint:
    path: https://github.com/shafayetShafee/style-speaker-note
    method: GET
    data_selector: ''
    params: {}
- name: subtitles
  endpoint:
    path: https://github.com/parmsam/quarto-subtitles
    method: GET
    data_selector: ''
    params: {}
- name: tts
  endpoint:
    path: https://github.com/parmsam/quarto-tts
    method: GET
    data_selector: ''
    params: {}
- name: verticator
  endpoint:
    path: https://github.com/martinomagnifico/quarto-verticator
    method: GET
    data_selector: ''
    params: {}
- name: webcam
  endpoint:
    path: https://github.com/parmsam/quarto-webcam
    method: GET
    data_selector: ''
    params: {}
- name: blackboard-revealjs
  endpoint:
    path: https://github.com/schochastics/quarto-blackboard-theme
    method: GET
    data_selector: ''
    params: {}
- name: clean-revealjs
  endpoint:
    path: https://github.com/grantmcdermott/quarto-revealjs-clean
    method: GET
    data_selector: ''
    params: {}
- name: affiliations
  endpoint:
    path: /affiliations
    method: GET
    data_selector: affiliations
    params: {}
- name: lexdoc
  endpoint:
    path: /_extensions/lexdoc/_extension.yml
    method: GET
    data_selector: formats
    params: {}
- name: lexconf
  endpoint:
    path: /_extensions/lexconf/_extension.yml
    method: GET
    data_selector: formats
    params: {}
- name: Lua Extensions
  endpoint:
    path: /docs/extensions/
    method: GET
    data_selector: extensions
- name: shuffler
  endpoint:
    path: /_extensions/shuffler/_extension.yml
    method: GET
    data_selector: plugins
- name: attribution
  endpoint:
    path: /_extensions/attribution/_extension.yml
    method: GET
    data_selector: plugins
- name: extension
  endpoint:
    path: _extension.yml
    method: GET
    data_selector: contributes
- name: project_type_extension
  endpoint:
    path: /_extensions/lexdocs/_extension.yml
    method: GET
    data_selector: contributes
    params: {}
- name: shortcodes
  endpoint:
    path: /docs/extensions/shortcodes.html
    method: GET
    data_selector: shortcodes
    params: {}
- name: template.qmd
  endpoint:
    path: /docs/extensions/starter-templates.html
    method: GET
    data_selector: content
- name: fancy-header
  endpoint:
    path: /extensions/fancy-header
    method: POST
    data_selector: contributes.filters
    params: {}
- name: my-prerender-scripts
  endpoint:
    path: /extensions/my-prerender-scripts
    method: GET
    data_selector: project
    params: {}
- name: aps
  endpoint:
    path: /_extensions/aps/_extension.yml
    method: GET
    data_selector: formats
    params: {}
- name: acm
  endpoint:
    path: /_extensions/acm/_extension.yml
    method: GET
    data_selector: formats
    params: {}
- name: article_templates
  endpoint:
    path: /docs/journals/templates.html
    method: GET
    data_selector: templates
    params: {}
- name: author
  endpoint:
    path: /authors
    method: GET
    data_selector: authors
- name: affiliations
  endpoint:
    path: /affiliations
    method: GET
    data_selector: affiliations
- name: author
  endpoint:
    path: /authors
    method: GET
    data_selector: authors
- name: affiliations
  endpoint:
    path: /affiliations
    method: GET
    data_selector: affiliations
- name: lexdoc
  endpoint:
    path: /_extensions/lexdoc/_extension.yml
    method: GET
    data_selector: formats
    params: {}
- name: lexconf
  endpoint:
    path: /_extensions/lexconf/_extension.yml
    method: GET
    data_selector: formats
    params: {}
- name: shuffler
  endpoint:
    path: /extensions/shuffler
    method: POST
- name: attribution
  endpoint:
    path: /extensions/attribution
    method: POST
- name: project_type
  endpoint:
    path: /extensions/project-types
    method: GET
    data_selector: projects
- name: my-prerender-scripts
  endpoint:
    path: /_extensions/my-prerender-scripts/_extension.yml
    method: GET
    data_selector: metadata
- name: brand
  endpoint:
    path: /extensions/my-brand/brand.yml
    method: GET
    data_selector: metadata
- name: extension
  endpoint:
    path: /extensions/my-brand/_extension.yml
    method: GET
    data_selector: metadata
notes:
- Quarto is open source and we welcome contributions in our github repository.
- Quarto supports executable Python code blocks within markdown.
- Jupyter Cache enables caching of cell outputs for a notebook.
- If you are working exclusively with prose / markdown, you may want to disable execution
  entirely.
- You can use the freeze option to denote that computational documents should never
  be re-rendered during a global project render.
- Quarto keeps a daemon with a running Jupyter kernel alive for each document.
- Quarto includes features aimed at making it easy to author and customize markdown
  table output.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Quarto includes features for customizing markdown table output.
- Quarto includes a number of features aimed at making it easy to to author and customize
  markdown table output.
- Quarto has native support for embedding Mermaid and Graphviz diagrams.
- For print output formats like pdf or docx, diagram rendering makes use of the Chrome
  or Edge web browser to create a high-quality PNG.
- Diagrams can be treated as figures the same way that images and plot output are.
- Quarto shortcodes are similar in form and function to Hugo shortcodes and WordPress
  shortcodes.
- Quarto 1.6 and later offers a simpler solution that works in many use cases.
- '`{{< contents >}}` shortcode allows rearranging content in documents.'
- Videos can refer to video files (e.g. .mp4) or links to videos published on YouTube,
  Vimeo, or Brightcove.
- You can include the output of another Quarto document (`.qmd` or `.ipynb`) with
  the `embed` shortcode.
- Cell IDs are checked first to allow for future compatibility.
- Code cell options are propagated to the document in which they are embedded.
- Callouts are an excellent way to draw extra attention to certain concepts, or to
  more clearly indicate that certain content is supplemental or applicable to only
  some scenarios.
- Using callouts is an effective way to highlight content that your reader give special
  consideration or attention.
- The default HTML annotation style displays annotations in a list below the code
  block.
- Other HTML styles hide the annotations, revealing them in a tooltip when a user
  hovers or selects a marker.
- Quarto's support for brand.yml is not yet complete.
- Quarto’s support for brand.yml is not yet complete.
- Quarto supports brand.yml—a single YAML file that can be used to customize the appearance
  of your documents across multiple formats.
- Colors in the palette cannot currently be specified with light and dark variants.
- The brand.yml specification is an active area of work at Posit. Quarto’s support
  for brand.yml is not yet complete.
- Quarto does nothing with `meta` values.
- You can’t currently access `typography`, `meta`, or `defaults` values using the
  `brand` shortcode.
- When you render a PDF using content in the margin or content that spans the page,
  Quarto will automatically adjust the page geometry for the default Quarto LaTeX
  document classes.
- HTML pages rendered with Quarto include a formatted title block at the start of
  the article.
- Quarto supports a variety of page layout options that enable you to author content
  that fills the main content region, overflows the content region, spans the entire
  page, occupies the document margin, or uses landscape mode in paginated formats.
- Quarto automatically adjusts page geometry for PDF output.
- Quarto includes the document’s date in the title block.
- You may use special keywords like 'today' and 'now' for date generation.
- Quarto will use Pandoc to automatically generate citations and a bibliography in
  a number of styles.
- 'By default citation processing is handled by Typst, not Pandoc when using format:
  typst.'
- Floats can appear in the rendered document at locations other than where they are
  defined.
- Supplemental figures have their own counter, distinct from that of figures.
- Supplemental figures have labels that look like 'Figure S1', 'Figure S2' etc.
- Supplemental figures appear in their own 'List of Supplementary Figures' listing.
- Citation appendix is automatically added when metadata is provided.
- Not all options apply when rendering to PDF.
- Quarto documents can include metadata compatible with the format indexed by Google
  Scholar.
- You can define custom float cross-reference types using the custom key to the crossref
  option.
- Appendices include sections for citations and footnotes.
- YAML front-matter is used for metadata.
- Quarto includes many more built in output formats and options for customizing each
  format.
- You can control how data frames are printed by default using the df-print document
  option.
- Metadata compatible with Google Scholar format.
- Content will not be processed or organized if appendix processing is disabled.
- If you are authoring using Jupyter .ipynb notebooks then this is already the default
  behavior.
- Quarto supports executable Julia code blocks within markdown.
- Quarto is a multi-language, next generation version of R Markdown from RStudio,
  with many new features and capabilities.
- For most users, the julia engine should offer the best experience.
- However, for backwards compatibility the jupyter engine remains the default engine
  for Julia code.
- The julia engine has to be specifically enabled either in the frontmatter or the
  project file.
- Using either of the two engines will require manually installing Julia if you have
  not done so already.
- Installation via juliaup is recommended.
- The Quarto R package is a convenience for command line rendering from R.
- RStudio v2022.07 and later includes support for editing and preview of Quarto documents.
- Uses a daemon with default timeout (300 sec)
- By default Julia cells will automatically print the value of their last statement
- The engine has built-in support for caching notebook results. This feature is disabled
  by default but can be enabled by setting the execute.cache option to true in a notebook’s
  frontmatter.
- Quarto supports executable Julia code blocks within markdown. This allows you to
  create fully reproducible documents and reports.
- For most users, the `julia` engine should offer the best experience.
- For backwards compatibility the `jupyter` engine remains the default engine for
  Julia code.
- Installation via `juliaup` is recommended.
- However, for backwards compatibility the `jupyter` engine remains the default engine
  for Julia code.
- Uses the QuartoNotebookRunner.jl package to render notebooks.
- The server spins up a separate Julia worker process for each notebook.
- QuartoNotebookRunner currently supports running Julia versions from 1.6 onwards.
- Support for earlier versions is not planned.
- The engine has built-in support for caching notebook results. This feature is disabled
  by default but can be enabled by setting the `execute.cache` option to `true` in
  a notebook’s frontmatter.
- In order to render documents with embedded Julia code, you’ll need to install IJulia,
  Revise.jl, and optionally Jupyter Cache.
- Revise.jl helps you keep your Julia sessions running longer, reducing the need to
  restart when you make changes to code.
- The julia engine has to be specifically enabled either in the frontmatter or the
  project file
- Uses `juliaup` to manage Julia versions.
- Notebook caches are invalidated based on changes to the environment or frontmatter.
- IJulia is a Julia-language execution kernel for Jupyter.
- Revise.jl helps keep Julia sessions running longer.
- Jupyter Cache enables caching of cell outputs.
- Uses Julia versions from 1.6 onwards
- Caching is disabled by default but can be enabled
- To mitigate the start-up time for the Jupyter kernel Quarto keeps a daemon with
  a running Jupyter kernel alive for each document.
- Uses the julia engine for rendering notebooks.
- The julia engine requires manual installation of Julia for usage.
- Jupyter Cache enables you to cache all of the cell outputs for a notebook.
- use a daemon w/ default timeout (300 sec)
- If you do an incremental render of either a single document or a project sub-directory
  then code is always executed.
- Quarto does not use a daemon by default on Windows.
- Quarto includes native support for Observable JS, a set of enhancements to vanilla
  JavaScript.
- Uses FileAttachment to read CSV files
- Using either of the two engines will require manually installing Julia if you have
  not done so already. Installation via juliaup is recommended.
- Engine supports using juliaup's + channel specifier to select Julia version.
- By default, the output of inline expressions is treated as ordinary text
- To explicitly create markdown output, you’ll need to use a function specific to
  your engine
- Inline expressions should be confined to simple values that you have pre-computed
  within normal code cells.
- Uses options for customizing output in code execution.
- Code block options are included in a special comment at the top of the block (lines
  at the top prefaced with `#|` are considered options).
- 'Options available for customizing output include: eval, echo, output, warning,
  error, include, renderings.'
- The Quarto contents shown in your Notebooks will not match the rendered output precisely.
- The `renderings` cell option does not currently work correctly with cell cross-reference
  options.
- When using the Jupyter engine, `fig-width` and `fig-height` are only supported if
  specified at the document- or project-level.
- RStudio v2022.07 and later includes support for editing and preview of Quarto documents
- It is strongly recommended that you use the latest release of RStudio
- Uses comment-based syntax for chunk options for better portability and consistency.
- Quarto can render Jupyter notebooks represented as plain text (.qmd) or as a normal
  notebook file (.ipynb).
- The ideal workflow for authoring Quarto notebooks in JupyterLab is to run the `quarto
  preview` command from within a terminal.
- The Quarto visual editor provides a WYSIWYM editing interface for all of Pandoc
  markdown.
- Markdown documents can be edited in either source or visual mode.
- Visual mode includes extensive support for Quarto features frequently used in technical
  writing.
- Editing mode supports standard formatting commands.
- Supports editing links, images, blockquotes, lists, tables, and special characters.
- There are a handful of Pandoc markdown extensions not currently supported by visual
  editing.
- The Quarto Neovim plugin aims to not reinvent the wheel. Existing plugins in the
  Neovim ecosystem are leveraged to provide the full experience.
- You can quickly insert a new code cell using the Alt+I and Alt+Shift+I keyboard
  shortcuts
- If you are editing plain markdown documents (with no embedded computations) you
  may want to use your favorite text editor (Vim, Emacs, Sublime, etc.) to author
  Quarto documents.
- Note that if you are using either the Jupyter or Knitr computational engine you
  will likely be better off using JupyterLab or VS Code (for .ipynb notebooks) or
  Positron or RStudio (for .qmd documents) as these environments provide code-completion,
  incremental cell execution, and other useful tools for working with executable code.
- Visual editor is unable to parse non-YAML title blocks.
- In some cases the width of source code will overflow the available horizontal display
  space.
- By default, this will result in a horizontal scroll bar for the code block.
- The ideal workflow for authoring Quarto markdown documents is to run the `quarto
  preview` command from within a terminal.
- Quarto includes 25 themes from the Bootswatch project.
- Use the `toc` option to include an automatically generated table of contents in
  the output document.
- The default depth for `toc` is 3, meaning level-1, 2, and 3 headings will be included.
- Use of Sass variables for customization.
- Support for light and dark mode themes.
- Links to additional formats are displayed by default, but you can control whether
  they are shown or even which specific formats are included with the format-links
  YAML option.
- The Render button in RStudio, and the Preview button in Positron and VS Code, will
  not automatically render all formats if the document isn’t part of a Quarto website.
- Available themes include default, cerulean, cosmo, cyborg, darkly, flatly, journal,
  litera, lumen, lux, materia, minty, morph, pulse, quartz, sandstone, simplex, sketchy,
  slate, solar, spacelab, superhero, united, vapor, yeti, zephyr.
- 'To enable lightbox treatment for all images in a document add lightbox: true in
  the YAML header.'
- HTML pages can automatically include links to other formats specified in the document
  front matter.
- Automatic lightboxing can be enabled or disabled using yaml options.
- 'To enable lightbox treatment for all images in a document add `lightbox: true`
  in the YAML header.'
- Publishing service for Quarto documents, websites, and books.
- Use GitHub Pages when the source code for your document or site is hosted on GitHub.
- Use Posit Connect when you want to publish content within an organization rather
  than on the public internet.
- Use Netlify when you want support for custom domains, authentication, previewing
  branches, and other more advanced capabilities.
- You can select specific images to receive the lightbox treatment by applying the
  `lightbox` class on the images.
- When lightbox is explicitly disabled, no images will receive the lightbox treatment.
- If automatic lightboxing of images is enabled, you can select specific images to
  not receive the treatment by marking them with a `nolightbox` class.
- To create galleries of images, apply a `group` attribute (with a name) to the images
  that you’d like to gather into a gallery.
- 'When using embed-resources: true, math libraries like MathJax and KaTeX are not
  embedded by default.'
- This feature was introduced in Quarto 1.8.
- Publishing services include Quarto Pub, GitHub Pages, Netlify, and Posit Connect.
- 'When using embed-resources: true, math libraries like MathJax and KaTeX are not
  embedded by default because they are quite large and often time consuming to download.'
- Quarto uses KOMA Script document classes by default for PDF documents.
- You will need to install a recent distribution of TeX.
- In order to create PDFs you will need to install a recent distribution of TeX.
- Quarto uses KOMA Script document classes by default for PDF documents and books.
- Pandoc supports a wide range of TeX distributions and PDF compilation engines including
  pdflatex, xelatex, lualatex, tectonic, and latexmk.
- Quarto’s automatic installation of missing TeX packages will work for TinyTeX and
  TeX Live, but not for other TeX distributions.
- Uses Quarto for PDF generation
- Supports multiple PDF engines including lualatex and pdflatex
- Quarto’s built-in PDF compilation engine handles running LaTeX multiple times to
  resolve index and bibliography entries, and also performs automatic LaTeX package
  installation.
- Use the `docx` format to create MS Word output.
- The default toc-depth is 3.
- Pandoc supports a special type of template called a reference document.
- Quarto includes the Typst CLI so no separate installation of Typst is required.
- Since Typst is under active development, there are still some limitations to Quarto’s
  Typst support.
- The default size of images may not reflect the behavior you are used to in other
  output formats.
- Advanced page layout is not implemented.
- Various other small things might not yet be implemented.
- Typst templates can be packaged as custom formats for Quarto to allow them to be
  easily used and shared.
- Uses Quarto to generate GitHub Flavored Markdown from markdown input
- Supports dynamic content generation from Python or R
- Many of the Quarto features related to theming, page layout, and navigation are
  not applicable when you are using Quarto with Hugo.
- Make sure that .qmd and .ipynb files and other source code or data files are not
  published as part of the site.
- Configure Hugo’s markdown renderer to allow raw HTML.
- Uses Quarto for rendering markdown documents
- Hugo serves the rendered markdown files as HTML
- Uses Quarto to generate markdown files for Hugo.
- Docusaurus has its own theming system, syntax highlighting, table of contents, page
  layout, navigational menus, and full text search.
- Many of the Quarto features related to theming, page layout, and navigation are
  not applicable when you are using Quarto with Docusaurus.
- You can add a bibliography in the configuration file.
- If you provide an explicit _quarto.yml file, you need to specify the project type.
- The template should contain layouts with specific names such as Title Slide, Title
  and Content, Section Header, Two Content, Comparison, Content with Caption, and
  Blank.
- You can create PowerPoint presentations using the pptx format.
- PowerPoint presentations support core presentation features like incremental bullets,
  2-column layouts, and speaker notes.
- Dashboards are a feature in the Quarto v1.4.
- Nearly all templates included with recent versions of PowerPoint (either with .pptx
  or .potx extension) are known to work.
- The specific requirement is that the template should contain layouts with the specified
  names.
- Dashboards are compositions of components used to provide navigation and present
  data.
- You can also have tabs that contain only markdown.
- Cards are the fundamental unit of display within dashboards.
- If you are using traditional plotting libraries within static dashboards, you’ll
  need to pay a bit more attention to getting the size of plots right for the layout
  they’ll be viewed in.
- Note that this is not a concern for plots in interactive Shiny dashboards since
  all plot types are resized dynamically by Shiny.
- Sidebars provide a collapsible vertical panel for inputs.
- Toolbars provide a horizontal panel for inputs.
- Card Inputs provide a panel for card-specific inputs.
- You can do extensive customization of themes using Sass.
- Bootstrap defines over 1,400 Sass variables that control fonts, colors, padding,
  borders, and much more.
- Parameters can be defined using various engines like Jupyter, Knitr, and Julia.
- Dashboards can include sidebars, toolbars, and card inputs.
- Static dashboards can be published to any web server using the `quarto publish`
  command.
- Shiny dashboards require a server for deployment and cannot be deployed to a generic
  web host.
- Quarto Dashboards use same Bootstrap 5 based theming system as regular HTML documents.
- Extensive customization of themes using Sass.
- Bootstrap defines over 1,400 Sass variables.
- Quarto Websites are a convenient way to publish groups of documents.
- Documents published as part of a website share navigational elements, rendering
  options, and visual style.
- Static dashboards can be published to any web server.
- Dashboards using Shiny require a server for deployment.
- Changes to configuration files will cause an automatic refresh of the preview.
- If the name of your output file needs to start with `.` or `_`, you must name the
  Quarto input file without the prefix and add an explicit `output-file` parameter
  in the YAML.
- Website navigation can be provided through a global navbar, a sidebar with links,
  or a combination of both for sites that have multiple levels of content.
- You can also enable full text search for websites.
- Every website has a _quarto.yml config file that provides website options as well
  as defaults for HTML documents created within the site.
- Draft pages will be blank in your rendered site, and will not appear in navigation,
  listings, search results, or the sitemap.
- The project is providing a simple list of draft documents.
- Search is enabled by default for websites and books.
- 'You can disable it with search: false.'
- The announcement bar can be positioned to fit seamlessly within your site’s layout.
- Supports both top and side navigation configurations
- Quarto makes it easy to create a simple about page for an individual or organization.
- You can provide standard headers and footers for pages on your site.
- Add an announcement to display a prominent, customizable bar at the top of your
  website.
- By default, listings will appear in full width rows that display the item’s metadata
  (author and date), title, description, and image.
- When providing a list of targets, these will be identified relative to the location
  of the listings page.
- Quarto uses lodash to render the EJS templates.
- Quarto project file (_quarto.yml) contains the initial configuration for your book.
- To have an item in the list, it must contain at least the 'title' metadata.
- If you provide a path to a directory, it will be treated as '<directory>/**'.
- In addition to the 3 built in types of listings, you can also build a completely
  custom display of the items.
- The index.qmd file is required for Quarto books.
- A Quarto project file (_quarto.yml) is contained within the book project directory.
- Quarto Books can be published to a wide variety of destinations including GitHub
  Pages, Netlify, RStudio Connect, or any other static hosting service or intranet
  web server.
- The project file contains the initial configuration for your book.
- Uses Quarto for book output configuration
- The `index.qmd` file is required.
- You can mix together numbered and unnumbered chapters.
- If you want to specify rendering options (including format-specific options), you
  do it within the _quarto.yml project file rather than within the individual markdown
  documents.
- HTML books are at their core Quarto Websites with some special navigational behavior
  built in.
- Books automatically include a navigational sidebar that can optionally include tools
  for searching book contents, sharing links to the book, etc.
- The search box enables full text search of the entire book
- The buttons immediately below the book title in the sidebar provide a link to the
  GitHub repo for the book, downloads for PDF and ePub versions of the book, and links
  for sharing the book on Twitter and Facebook.
- The Hypothesis commenting bar appears on the far right of the page.
- Publishing a Quarto manuscript is the process of taking the preview you’ve been
  viewing on your computer and making it available to anyone on the web.
- The template manuscript is configured with a GitHub Action in `.github/workflows/publish.yml`.
- Quarto manuscripts are a type of Quarto project
- Ensure to run 'quarto render' in the Terminal for full output generation.
- Any notebook files (.qmd or .ipynb) that are included in your project directory
  will become part of your manuscript.
- The text for link under 'Notebooks' will be the notebook title as set in its YAML
  metadata.
- Manuscripts are a type of Quarto project that allow you to write scholarly articles
  where computational notebooks are both the source of the article, and part of the
  published record.
- When you introduce interactive components into a document you’ll want to be sure
  to lay them out in a fashion that optimizes for readability and navigation.
- There are of course a wide variety of ways you can incorporate interactivity spanning
  from visualizations embedded within a longer-form article all the way up to a more
  application/dashboard style layout.
- By default Quarto documents center their content within the document viewport, and
  don’t exceed a maximum width of around 900 pixels. This behavior exists to optimize
  readability, but for an application layout you generally want to occupy the entire
  page.
- 'The panel: fill option is added to the plot output chunk. You can alternately use
  panel: center if you want to leave some horizontal margin around the contents of
  the panel.'
- Quarto Pub sites are publicly visible, can be no larger than 100 MB and have a soft
  limit of 10 GB of bandwidth per month.
- You can customize the behavior of `quarto publish` by providing command line options
- It's important to note that you don’t need to check your `_site` or `_book` directory
  into version control
- All documents and sites published to Quarto Pub are publicly visible.
- Quarto Pub sites can be no larger than 100 MB and have a soft limit of 10 GB of
  bandwidth per month.
- You can optionally configure a custom domain for a GitHub Pages site.
- You can customize the behavior of `quarto publish` by providing command line options.
- If you have multiple Quarto Pub accounts it’s important to understand the relationship
  between the use of accounts in the CLI interface and the use of accounts in your
  browser.
- You don’t need to check your _site or _book directory into version control
- If you’ve already checked these files into source control you may need to remove
  them explicitly
- You need to have a Git repository on your local machine that is synced to GitHub.
- Add a .nojekyll file to the root of your repository to prevent GitHub Pages from
  processing your site with Jekyll.
- You don’t need to check your _site or _book directory into version control.
- Ensure that GitHub Actions has permission to write to your repository.
- Use the `quarto publish` command to publish locally rendered content.
- Quarto must be installed on the Connect server before you attempt to publish with
  code
- Content may be deployed to Posit Connect directly from a remote Git repository
- Ensure that your Connect server address and credentials are available as environment
  variables on the CI server.
- The _publish.yml file is created or updated whenever you execute the quarto publish
  command.
- Quarto must be installed on the Connect server before you attempt to publish.
- Content may be deployed to Posit Connect directly from a remote Git repository.
- 'You can customize the behavior of `quarto publish` by providing the following command
  line options: --no-prompt, --no-browser, --no-render.'
- It’s important to note that you don’t need to check your `_site` or `_book` directory
  into version control.
- Requires setup of Posit Connect API Key.
- Uses Quarto to publish documents to Confluence.
- The format is set to confluence-html in the document YAML.
- Netlify has the ability to automatically deploy sites when changes are committed
  to Git repositories hosted on GitHub, GitLab, Bitbucket, and Azure DevOps.
- Uses Quarto format set to confluence-html for local preview
- To publish a document use `quarto publish confluence` followed by the file name
- Confluence API Tokens are specific to your account.
- Create an authorization token if you lack one
- In order to publish the results to Hugging Face, `quarto publish` needs access to
  your credentials.
- Content is automatically published whenever source code changes (you don’t need
  to remember to explicitly render).
- Rendering on another system ensures that your code is reproducible (but note that
  this can be double-edged sword if rendering has special requirements).
- Continuous Integration (CI) refers to the practice of automatically publishing content
  from code checked in to a version control system.
- You can specify publishing credentials either using environment variables or via
  command line parameters.
- If you want to use the standard Quarto actions as part of another workflow
- While publishing using CI is a bit more involved to configure, it has several benefits,
  including content is automatically published whenever source code changes.
- All Quarto projects include a _quarto.yml configuration file.
- You can also define metadata that should be inherited by only files within a directory.
- Uses metadata merging from multiple YAML files
- Files with prefixes of . or _ are not rendered
- Rendering a list of input files has the potential to be quite time consuming depending
  on the computations required.
- Freeze controls whether execution occurs during global project renders.
- The computational results of documents executed with freeze are stored in the _freeze
  directory.
- You can use the `cache` option to cache the results of computations.
- Cache invalidation is triggered by changes in chunk source code.
- By default, the working directory for rendering files within a project is the directory
  of the file itself.
- Profiles enable distinct execution behavior for different environments.
- Quarto projects include a _quarto.yml configuration file for shared metadata.
- Directory metadata can be defined in a _metadata.yml file.
- Files listed in `metadata-files` are merged with the parent file in the same fashion
  that project, directory, and document options are merged.
- metadata-files are not resolved in profiles
- To render the project, you always need to have a profile defined.
- You can render a single file (or single directory or list of files) incrementally
  by specifying it on the command-line.
- The computational results of documents executed with `freeze` are stored in the
  `_freeze` directory, and re-used when needed to fulfill document renders.
- Cache invalidation is triggered by changes in chunk source code
- Manually refresh the cache if some other input has changed sufficiently
- Profiles enable distinct execution behavior and access credentials based on the
  scenario.
- Pre and post render scripts are run with the main project directory.
- To successfully render the project, you always need to have a profile defined
- Quarto 1.6 includes updates to Deno and Deno’s standard library which forced us
  to make breaking changes to the import syntax.
- Quarto 1.6 might download some files (once, and then cache them) when the standard
  library is invoked.
- Credentials should not be checked into version control.
- Use an _environment.required file to document required variables.
- Quarto 1.6 ships with a version of Deno that has an unfortunate interaction between
  its standard library and the feature that disables downloading the library from
  the remote servers.
- If you want to enforce the behavior from Quarto 1.5, you can set the environment
  variable QUARTO_RUN_NO_NETWORK to true.
- Quarto can automatically create configuration files with the `quarto use binder`
  command.
- Quarto detects the versions of Quarto and R in use, that our Quarto document uses
  the Knitr engine, and chooses an appropriate editor for the project.
- No files which provide dependencies were discovered. If you continue, no dependencies
  will be restored when running this project with Binder.
- Default layout width is optimized for readability (typically from 600px to 900px
  wide).
- Uses an underscore prefix for included files to ignore them in `quarto render`.
- The values of these variables don’t directly specify the display width of the corresponding
  component, instead they specify a maximum base value.
- Requiring pixel sizing is a limitation of our approach to the Quarto’s layout.
- Conditional content can be marked for specific output formats using classes.
- By default Quarto HTML documents display content centered at a width optimized for
  readability (typically from 600px to 900px wide).
- For other types of pages (e.g. landing or index pages) you may want to use other
  layouts.
- The values of component widths should be specified in pixels (px) for sidebar-width,
  body-width, and margin-width.
- gutter-width may be specified in pixels or other units such as em or rem.
- Notebook filters are only run when the original input is an .ipynb file.
- Document language plays a role in Pandoc’s processing of most formats.
- 'The following languages currently have full translations available: English, Chinese,
  Spanish, French, Japanese, German, Portuguese, Russian, Czech, Finnish, Dutch, Italian,
  Polish, Korean.'
- Quarto extensions may execute code when documents are rendered. Therefore, if you
  do not trust the author of an extension, we recommend that you do not install or
  use the extension.
- Quarto extensions have no additional runtime dependencies or requirements.
- Each extension is defined by its _extension.yml file which contains the metadata
  about the extension
- The only thing strictly required is the _extensions directory
- Shortcodes are special markdown directives that generate various types of content.
- Custom formats can be used just like normal Quarto formats (e.g. pdf and html)
- You can specify a custom format beneath the format key just like a built-in format.
- Journal article formats often require fine grained control of generated output as
  well as the ability to use Journal-specific commands and directives.
- Quarto processes and normalizes the author and affiliation data into a standard
  schema.
- The order the authors appear in the metadata will be preserved.
- You may specify either state or region- either will be normalized into the region
  key.
- If you specify only a string for an affiliation, it will be used as the name of
  affiliation.
- You may omit an id and the id will be automatically generated (a simple counter
  based id will be used).
- The url field may also be populated by an affiliation-url key in the author, which
  preserves compatibility with Distill metadata for authors and affiliations.
- Extensions may execute code when documents are rendered. Therefore, if you do not
  trust the author of an extension, we recommend that you do not install or use the
  extension.
- Uses Quarto for creating custom formats
- You can create formats for html, pdf, docx, and revealjs
- Quarto extensions are directories that contain an _extensions sub-directory with
  one or more extensions.
- Currently, brand extensions merge project-level metadata, so they can only be used
  with a _quarto.yml project present in the place where they are installed.
- Any color in the color or typography sections of brand.yml can be specified with
  light and dark components or as a string.
- Quarto uses Pandoc templates to generate the rendered output from a markdown file.
- You can test your extension by rendering the template.qmd file.
- Extensions must include an _extensions directory.
- Currently, metadata extensions only merge project-level metadata.
- This limitation will be lifted in the future.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- When providing images in a gallery, ensure they have the same group name to be treated
  as a gallery.
- Your TexLive version is not updated enough to connect to the remote repository and
  download packages. Please update your installation of TexLive or TinyTex.
- '401 Unauthorized: Check API key and permissions.'
- '401 Unauthorized: Check API Key or permissions.'
- These version-bound imports will not work with Quarto.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - QUARTO_PUB_AUTH_TOKEN
  - NETLIFY_AUTH_TOKEN
  - CONNECT_SERVER
  - CONNECT_API_KEY
  - CONFLUENCE_AUTH_TOKEN
  - CONFLUENCE_USER_EMAIL
  - CONFLUENCE_DOMAIN
client:
  base_url: https://quarto.org
  headers:
    Accept: application/json
source_metadata: null
