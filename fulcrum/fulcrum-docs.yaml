resources:
- name: form
  endpoint:
    path: /api/v2/forms/{form_id}.json
    method: GET
    data_selector: form
- name: form
  endpoint:
    path: /api/v2/forms
    method: GET
    data_selector: forms
    params: {}
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: users
- name: records
  endpoint:
    path: /api/v2/records
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/v2/attachments
    method: POST
    data_selector: text
- name: files
  endpoint:
    path: /api/v2/file/upload_url.json
    method: GET
    data_selector: file
- name: finalize_attachment
  endpoint:
    path: /api/v2/attachments/finalize
    method: POST
    data_selector: text
- name: records
  endpoint:
    path: /api/v2/records/{record_id}.json
    method: PUT
    data_selector: record
- name: form
  endpoint:
    path: /tables
    method: GET
    data_selector: tables
- name: records
  endpoint:
    path: /api/v1/records
    method: GET
    data_selector: records
- name: photos
  endpoint:
    path: /api/v1/photos
    method: GET
    data_selector: photos
- name: videos
  endpoint:
    path: /api/v1/videos
    method: GET
    data_selector: videos
- name: audios
  endpoint:
    path: /api/v1/audios
    method: GET
    data_selector: audios
- name: signatures
  endpoint:
    path: /api/v1/signatures
    method: GET
    data_selector: signatures
- name: query
  endpoint:
    path: /api/v2/query
    method: GET
- name: POST Query
  endpoint:
    path: /api/v2/query
    method: POST
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: user
- name: user
  endpoint:
    path: /api/v2/users.json
    method: GET
    data_selector: user
    params: {}
- name: Get All Authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: Get Single Authorization
  endpoint:
    path: /authorizations/{id}
    method: GET
- name: Create Authorization
  endpoint:
    path: /authorizations
    method: POST
    params:
      organization_id: string
      note: string
- name: Update Authorization
  endpoint:
    path: /authorizations/{id}
    method: PUT
- name: Delete Authorization
  endpoint:
    path: /authorizations/{id}
    method: DELETE
- name: authorizations
  endpoint:
    path: /authorizations.json
    method: GET
    data_selector: authorizations
    params: {}
- name: authorization
  endpoint:
    path: /api/v2/authorizations/{authorization_id}.json
    method: GET
    data_selector: authorization
- name: authorizations
  endpoint:
    path: /authorizations.json
    method: POST
    data_selector: authorization
- name: authorizations
  endpoint:
    path: /api/v2/authorizations/{authorization_id}.json
    method: PUT
    data_selector: authorization
    params: {}
- name: authorizations
  endpoint:
    path: /api/v2/authorizations/{authorization_id}.json
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: roles
  endpoint:
    path: /api/v2/roles.json
    method: GET
    data_selector: roles
    params: {}
- name: roles
  endpoint:
    path: /api/v2/roles.json
    method: GET
    data_selector: object
    params: {}
- name: memberships
  endpoint:
    path: /memberships
    method: GET
    data_selector: memberships
    params: {}
- name: memberships
  endpoint:
    path: /api/v2/memberships.json
    method: GET
    data_selector: memberships
    params:
      form_id: string
      project_id: string
      layer_id: string
      page: int32
      per_page: int32
- name: memberships
  endpoint:
    path: /api/v2/memberships.json
    method: GET
    data_selector: records
    params:
      page: 1
      per_page: 20000
- name: membership
  endpoint:
    path: /memberships/{membership_id}.json
    method: GET
    data_selector: records
- name: membership_permissions
  endpoint:
    path: /api/v2/permissions.json
    method: GET
    data_selector: permissions
- name: change_permissions
  endpoint:
    path: /api/v2/memberships/change_permissions.json
    method: POST
    data_selector: change
    params: {}
- name: memberships
  endpoint:
    path: /memberships.json
    method: POST
- name: update_member
  endpoint:
    path: /api/v2/memberships/{membership_id}.json
    method: PUT
- name: delete_member
  endpoint:
    path: /api/v2/memberships/{membership_id}.json
    method: DELETE
    data_selector: membership
    params: {}
- name: groups
  endpoint:
    path: /groups.json
    method: GET
    data_selector: group
    params: {}
- name: single_group
  endpoint:
    path: /groups/{id}.json
    method: GET
    data_selector: group
    params: {}
- name: create_group
  endpoint:
    path: /create-group
    method: POST
    data_selector: group
    params: {}
- name: update_group_permissions
  endpoint:
    path: /groups/change_permissions.json
    method: POST
    data_selector: group
    params: {}
- name: groups
  endpoint:
    path: /groups.json
    method: GET
    data_selector: records
- name: group
  endpoint:
    path: /groups/{group_id}.json
    method: GET
    data_selector: response
    params: {}
- name: group_resource
  endpoint:
    path: /groups/{group_id}/{resource}.json
    method: GET
    data_selector: members, projects, layers, forms
    params: {}
- name: group
  endpoint:
    path: /api/v2/groups.json
    method: POST
    data_selector: group
    params: {}
- name: change_permissions
  endpoint:
    path: /api/v2/groups/change_permissions.json
    method: POST
    data_selector: change
- name: update_group_name_description
  endpoint:
    path: /api/v2/groups/{group_id}.json
    method: PUT
    data_selector: group
- name: delete_group
  endpoint:
    path: /api/v2/groups/{group_id}.json
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: records
  endpoint:
    path: /records
    method: GET
    data_selector: records
    params: {}
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v2/forms.json
    method: GET
    data_selector: forms
- name: form_history
  endpoint:
    path: /forms/{form_id}/history.json
    method: GET
    data_selector: objects
    params: {}
- name: form
  endpoint:
    path: /api/v2/forms.json
    method: POST
    data_selector: form
    params: {}
- name: update_form
  endpoint:
    path: /{form_id}.json
    method: PUT
- name: delete_form
  endpoint:
    path: /api/v2/forms/{form_id}.json
    method: DELETE
    data_selector: null
    params: {}
- name: records
  endpoint:
    path: /records
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /api/v2/records.json
    method: GET
    data_selector: records
    params: {}
- name: record
  endpoint:
    path: /api/v2/records/{record_id}.json
    method: GET
    data_selector: record
- name: record_history
  endpoint:
    path: /records/{record_id}/history.json
    method: GET
    data_selector: objects
- name: records_history
  endpoint:
    path: /records/history.json
    method: GET
- name: records
  endpoint:
    path: /records.json
    method: POST
    data_selector: record
- name: records
  endpoint:
    path: /api/v2/records/{record_id}.json
    method: PUT
    data_selector: record
    params: {}
- name: delete_record
  endpoint:
    path: /api/v2/records/{record_id}.json
    method: DELETE
- name: choice_list
  endpoint:
    path: /reference/choice-lists
    method: GET
    data_selector: choice_list
    params: {}
- name: choice_list
  endpoint:
    path: /choice_lists.json
    method: GET
    data_selector: choice_lists
- name: choice_list
  endpoint:
    path: /api/v2/choice_lists/{choice_list_id}.json
    method: GET
- name: choice_list
  endpoint:
    path: /api/v2/choice_lists/{choice_list_id}.json
    method: GET
    data_selector: ''
- name: choice_list
  endpoint:
    path: /choice_lists/{choice_list_id}
    method: GET
    data_selector: choice_list
- name: choice_list
  endpoint:
    path: /choice_lists/{choice_list_id}.json
    method: GET
- name: choice_list
  endpoint:
    path: /choice_lists.json
    method: POST
    data_selector: choice_list
    params: {}
- name: choice_list
  endpoint:
    path: /choice_lists.json
    method: POST
    data_selector: choice_list
- name: choice_list
  endpoint:
    path: /api/v2/choice_lists/{choice_list_id}.json
    method: PUT
    data_selector: choice_list
    params: {}
- name: choice_list
  endpoint:
    path: /api/v2/choice_lists/{choice_list_id}
    method: DELETE
    data_selector: null
    params: {}
- name: choice_list
  endpoint:
    path: /choice_lists/{choice_list_id}
    method: PUT
    data_selector: choice_list
- name: classification_set
  endpoint:
    path: /classification_sets
    method: GET
    data_selector: classification_set
    params: {}
- name: choice_list
  endpoint:
    path: /api/v2/choice_lists/{choice_list_id}
    method: DELETE
    data_selector: null
    params: {}
- name: classification_set
  endpoint:
    path: /classification_sets
    method: GET
    data_selector: classification_set
    params: {}
- name: classification_sets
  endpoint:
    path: /classification_sets.json
    method: GET
    data_selector: classification_sets
- name: classification_sets
  endpoint:
    path: /classification_sets.json
    method: GET
    data_selector: classification_sets
- name: classification_set
  endpoint:
    path: /classification_sets/{classification_set_id}.json
    method: GET
    data_selector: classification_set
- name: classification_set
  endpoint:
    path: /classification_sets/{classification_set_id}.json
    method: GET
    data_selector: classification_set
- name: classification_set
  endpoint:
    path: /classification_sets.json
    method: POST
- name: classification_set
  endpoint:
    path: /api/v2/classification_sets.json
    method: POST
- name: classification_sets
  endpoint:
    path: /classification_sets/{classification_set_id}
    method: PUT
    data_selector: classification_set
- name: classification_set
  endpoint:
    path: /classification_sets/{classification_set_id}
    method: PUT
    data_selector: classification_set
- name: classification_set
  endpoint:
    path: /classification_sets/{classification_set_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: classification_set
  endpoint:
    path: /api/v2/classification_sets/{classification_set_id}.json
    method: DELETE
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /projects.json
    method: GET
    data_selector: projects
- name: project
  endpoint:
    path: /api/v2/projects/{project_id}.json
    method: GET
    data_selector: project
- name: projects
  endpoint:
    path: /projects.json
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /api/v2/projects.json
    method: POST
    data_selector: project
- name: project
  endpoint:
    path: /api/v2/projects/{project_id}.json
    method: GET
    data_selector: project
- name: projects
  endpoint:
    path: /api/v2/projects.json
    method: POST
- name: projects
  endpoint:
    path: /projects/{project_id}
    method: PUT
    data_selector: project
- name: projects
  endpoint:
    path: /projects/{project_id}.json
    method: PUT
- name: delete_project
  endpoint:
    path: /api/v2/projects/{project_id}.json
    method: DELETE
- name: projects
  endpoint:
    path: /api/v2/projects/{project_id}.json
    method: DELETE
- name: layers
  endpoint:
    path: /api/v2/layers.json
    method: POST
    data_selector: layer
- name: file_upload
  endpoint:
    path: /api/v2/file/upload_url.json
    method: GET
    data_selector: file
- name: layers
  endpoint:
    path: /api/v2/layers.json
    method: POST
    data_selector: layer
    params: {}
- name: upload_file
  endpoint:
    path: /api/v2/file/upload_url.json
    method: GET
    data_selector: file
    params: {}
- name: layers
  endpoint:
    path: /api/v2/layers.json
    method: GET
    data_selector: layers
- name: layers
  endpoint:
    path: /layers.json
    method: GET
    data_selector: layers
- name: layer
  endpoint:
    path: /layers/{layer_id}.json
    method: GET
    data_selector: layer
- name: layer
  endpoint:
    path: /api/v2/layers/{layer_id}.json
    method: GET
    data_selector: layer
- name: layers
  endpoint:
    path: /reference/layers-get-all
    method: GET
- name: records
  endpoint:
    path: /reference/records-get-all
    method: GET
- name: layers
  endpoint:
    path: /reference/layers-get-all
    method: GET
- name: photos
  endpoint:
    path: /reference/photos-get-all-metadata
    method: GET
- name: videos
  endpoint:
    path: /reference/videos-get-all
    method: GET
- name: audio
  endpoint:
    path: /reference/audio-get-all
    method: GET
- name: upload_layer
  endpoint:
    path: /api/v2/file/upload_url.json
    method: GET
    data_selector: file
- name: create_layer
  endpoint:
    path: /api/v2/layers.json
    method: POST
    data_selector: layer
- name: layers
  endpoint:
    path: /api/v2/layers.json
    method: POST
    data_selector: layer
- name: upload_layer
  endpoint:
    path: /api/v2/file/upload_url.json
    method: GET
    data_selector: file
- name: create_layer
  endpoint:
    path: /api/v2/layers.json
    method: POST
    data_selector: layer
- name: layers
  endpoint:
    path: /api/v2/layers/{layer_id}.json
    method: PUT
    data_selector: layer
- name: layers
  endpoint:
    path: /api/v2/layers.json
    method: POST
- name: delete_layer
  endpoint:
    path: /layers/{layer_id}
    method: DELETE
    data_selector: null
    params: {}
- name: update_layer
  endpoint:
    path: /layers/{layer_id}
    method: PUT
- name: delete_layer
  endpoint:
    path: /api/v2/layers/{layer_id}.json
    method: DELETE
- name: photos
  endpoint:
    path: /photos.json
    method: GET
    data_selector: photos
    params: {}
- name: photos
  endpoint:
    path: /api/v2/photos
    method: GET
    data_selector: photo
    params: {}
- name: photo_metadata
  endpoint:
    path: /api/v2/photos/{photo_id}.json
    method: GET
    data_selector: photo
- name: photos
  endpoint:
    path: /photos.json
    method: GET
    data_selector: photos
    params: {}
- name: photo_thumbnail
  endpoint:
    path: /{photo_id}/thumbnail.json
    method: GET
    data_selector: response
- name: photo_large_metadata
  endpoint:
    path: /api/v2/photos/{photo_id}/large.json
    method: GET
    data_selector: response
- name: photo_metadata
  endpoint:
    path: /photos/{photo_id}.json
    method: GET
    data_selector: photo
- name: photo
  endpoint:
    path: /api/v2/photos/{photo_id}.jpg
    method: GET
    data_selector: media
    params: {}
- name: photo_thumbnail
  endpoint:
    path: /api/v2/photos/{photo_id}/thumbnail.json
    method: GET
- name: photo_thumbnail
  endpoint:
    path: /api/v2/photos/{photo_id}/thumbnail.jpg
    method: GET
    data_selector: response
- name: photo_large_metadata
  endpoint:
    path: /api/v2/photos/{photo_id}/large.json
    method: GET
    data_selector: response
- name: photo_large_file
  endpoint:
    path: /api/v2/photos/{photo_id}/large.jpg
    method: GET
    data_selector: photo
- name: photos
  endpoint:
    path: /api/v2/photos/{photo_id}.jpg
    method: GET
    data_selector: media
- name: photos
  endpoint:
    path: /api/v2/photos.json
    method: POST
- name: photo_thumbnail
  endpoint:
    path: /api/v2/photos/{photo_id}/thumbnail.jpg
    method: GET
- name: signature
  endpoint:
    path: /api/v2/signatures
    method: GET
    data_selector: signature
- name: photo_large_file
  endpoint:
    path: /api/v2/photos/{photo_id}/large.jpg
    method: GET
- name: signatures
  endpoint:
    path: /api/v2/signatures.json
    method: GET
    data_selector: signatures
    params: {}
- name: photo
  endpoint:
    path: /api/v2/photos.json
    method: POST
    data_selector: data
    params: {}
- name: signature
  endpoint:
    path: /api/v2/signatures/{signature_id}.json
    method: GET
    data_selector: signature
- name: signatures
  endpoint:
    path: /api/v2/signatures
    method: GET
    data_selector: signatures
- name: signature_thumbnail_metadata
  endpoint:
    path: /api/v2/signatures/{signature_id}/thumbnail.json
    method: GET
    data_selector: response
- name: signatures
  endpoint:
    path: /api/v2/signatures.json
    method: GET
    data_selector: signatures
    params: {}
- name: signatures
  endpoint:
    path: /signatures/{signature_id}.png
    method: GET
    data_selector: signature
- name: signature
  endpoint:
    path: /api/v2/signatures/{signature_id}.json
    method: GET
    data_selector: signature
- name: signature_thumbnail
  endpoint:
    path: /api/v2/signatures/{signature_id}/thumbnail.png
    method: GET
    data_selector: response
- name: signature_thumbnail_metadata
  endpoint:
    path: /api/v2/signatures/{signature_id}/thumbnail.json
    method: GET
    data_selector: response
- name: signatures
  endpoint:
    path: /api/v2/signatures.json
    method: POST
- name: signature
  endpoint:
    path: /api/v2/signatures/{signature_id}.png
    method: GET
    data_selector: signature
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: upload_video
  endpoint:
    path: /videos/upload
    method: POST
    data_selector: video
    params: {}
- name: signature_thumbnail
  endpoint:
    path: /signatures/{signature_id}/thumbnail.png
    method: GET
    data_selector: response
- name: video
  endpoint:
    path: /api/v2/videos
    method: GET
    data_selector: video
- name: video_track
  endpoint:
    path: /api/v2/videos/{video_id}/track.json
    method: GET
    data_selector: tracks
- name: signature
  endpoint:
    path: /signatures.json
    method: POST
    data_selector: data
- name: videos
  endpoint:
    path: /videos.json
    method: GET
    data_selector: videos
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: upload_video
  endpoint:
    path: /videos/upload
    method: POST
    data_selector: video
- name: geojson_tracks
  endpoint:
    path: /api/v2/videos/tracks.geojson
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /api/v2/videos
    method: GET
    data_selector: video
- name: track
  endpoint:
    path: /api/v2/videos/{video_id}/track.json
    method: GET
    data_selector: tracks
- name: kml_tracks
  endpoint:
    path: /api/v2/videos/tracks.kml
    method: GET
    data_selector: response
- name: videos
  endpoint:
    path: /videos.json
    method: GET
    data_selector: videos
    params: {}
- name: gpx_tracks
  endpoint:
    path: /videos/tracks.gpx
    method: GET
    data_selector: tracks
- name: original_video_file
  endpoint:
    path: /api/v2/videos/{video_id}.mp4
    method: GET
    data_selector: null
    params: {}
- name: geojson_tracks
  endpoint:
    path: /videos/tracks.geojson
    method: GET
    data_selector: tracks
- name: video
  endpoint:
    path: /api/v2/videos/{video_id}.json
    method: GET
    data_selector: video
- name: kml_tracks
  endpoint:
    path: /videos/tracks.kml
    method: GET
- name: geojson_video_track
  endpoint:
    path: /videos/{video_id}/track.geojson
    method: GET
    data_selector: track
- name: gpx_tracks
  endpoint:
    path: /videos/tracks.gpx
    method: GET
    data_selector: response
- name: get_kml_video_track
  endpoint:
    path: /videos/{video_id}/track.kml
    method: GET
    data_selector: track
- name: original_video_file
  endpoint:
    path: /videos/{video_id}.mp4
    method: GET
- name: gpx_video_track
  endpoint:
    path: /api/v2/videos/{video_id}/track.gpx
    method: GET
    data_selector: track
    params: {}
- name: videos
  endpoint:
    path: /api/v2/videos/{video_id}.json
    method: GET
    data_selector: video
- name: video_track
  endpoint:
    path: /videos/{video_id}/track.json
    method: GET
    data_selector: track
    params: {}
- name: geojson_video_track
  endpoint:
    path: /api/v2/videos/{video_id}/track.geojson
    method: GET
    data_selector: tracks
- name: kml_video_track
  endpoint:
    path: /videos/{video_id}/track.kml
    method: GET
    data_selector: ''
- name: small_video_file
  endpoint:
    path: /api/v2/videos/{video_id}/small.mp4
    method: GET
    data_selector: video
    params: {}
- name: medium_video_file
  endpoint:
    path: /videos/{video_id}/medium.mp4
    method: GET
    data_selector: video
- name: gpx_video_track
  endpoint:
    path: /videos/{video_id}/track.gpx
    method: GET
    data_selector: track
- name: small_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_small.jpg
    method: GET
- name: video_track
  endpoint:
    path: /api/v2/videos/{video_id}/track.json
    method: GET
    data_selector: tracks
    params: {}
- name: small_square_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_small_square.jpg
    method: GET
- name: small_video_file
  endpoint:
    path: /api/v2/videos/{video_id}/small.mp4
    method: GET
- name: medium_video_thumbnail
  endpoint:
    path: /videos/{video_id}/thumbnail_medium.jpg
    method: GET
    data_selector: ''
- name: medium_video_file
  endpoint:
    path: /api/v2/videos/{video_id}/medium.mp4
    method: GET
    data_selector: ''
- name: medium_square_video_thumbnail
  endpoint:
    path: /videos/{video_id}/thumbnail_medium_square.jpg
    method: GET
    data_selector: response
    params: {}
- name: small_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_small.jpg
    method: GET
- name: large_video_thumbnail
  endpoint:
    path: /videos/{video_id}/thumbnail_large.jpg
    method: GET
    data_selector: null
    params: {}
- name: large_square_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_large_square.jpg
    method: GET
- name: small_square_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_small_square.jpg
    method: GET
- name: huge_video_thumbnail
  endpoint:
    path: /videos/{video_id}/thumbnail_huge.jpg
    method: GET
    data_selector: response
    params: {}
- name: huge_square_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_huge_square.jpg
    method: GET
    data_selector: response
    params: {}
- name: medium_video_thumbnail
  endpoint:
    path: /videos/{video_id}/thumbnail_medium.jpg
    method: GET
- name: upload_video
  endpoint:
    path: /upload.json
    method: POST
- name: medium_square_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_medium_square.jpg
    method: GET
- name: audio
  endpoint:
    path: /api/v2/audio
    method: GET
    data_selector: audio
    params: {}
- name: attachments
  endpoint:
    path: /api/v2/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: large_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_large.jpg
    method: GET
- name: tracks
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
    params: {}
- name: large_square_video_thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_large_square.jpg
    method: GET
- name: audio
  endpoint:
    path: /api/v2/audio.json
    method: GET
    data_selector: audio
    params: {}
- name: huge_video_thumbnail
  endpoint:
    path: /videos/{video_id}/thumbnail_huge.jpg
    method: GET
    data_selector: ''
- name: geojson_tracks
  endpoint:
    path: /audio/tracks.geojson
    method: GET
- name: Huge Square Video Thumbnail
  endpoint:
    path: /api/v2/videos/{video_id}/thumbnail_huge_square.jpg
    method: GET
- name: get_kml_tracks_for_all_audio
  endpoint:
    path: /audio/tracks.kml
    method: GET
    data_selector: null
    params: {}
- name: gpx_tracks
  endpoint:
    path: /tracks.gpx
    method: GET
    data_selector: tracks
- name: videos
  endpoint:
    path: /videos/upload.json
    method: POST
- name: audio_tracks
  endpoint:
    path: /audio/tracks.json
    method: GET
    data_selector: tracks
    params: {}
- name: audio
  endpoint:
    path: /audio
    method: GET
    data_selector: audio
    params: {}
- name: tracks
  endpoint:
    path: /audio/track
    method: GET
    data_selector: tracks
- name: audio
  endpoint:
    path: /api/v2/audio/{audio_id}.mp4
    method: GET
    data_selector: audio
- name: audio
  endpoint:
    path: /api/v2/audio/{audio_id}.json
    method: GET
    data_selector: audio
- name: audio
  endpoint:
    path: /audio.json
    method: GET
    data_selector: audio
    params: {}
- name: geojson_audio_track
  endpoint:
    path: /audio/{audio_id}/track.geojson
    method: GET
    data_selector: tracks
- name: audio_tracks
  endpoint:
    path: /api/v2/audio/tracks.geojson
    method: GET
- name: kml_audio_track
  endpoint:
    path: /audio/{audio_id}/track.kml
    method: GET
    data_selector: tracks
    params: {}
- name: kml_tracks
  endpoint:
    path: /api/v2/audio/tracks.kml
    method: GET
- name: gpx_audio_track
  endpoint:
    path: /audio/{audio_id}/track.gpx
    method: GET
    data_selector: ''
- name: gpx_tracks
  endpoint:
    path: /api/v2/audio/tracks.gpx
    method: GET
- name: audio_track
  endpoint:
    path: /api/v2/audio/{audio_id}/track.json
    method: GET
    data_selector: tracks
    params: {}
- name: tracks
  endpoint:
    path: /audio/tracks.json
    method: GET
    data_selector: tracks
- name: audio_file
  endpoint:
    path: /audio/{audio_id}.mp4
    method: GET
- name: audio_upload
  endpoint:
    path: /api/v2/audio/upload.json
    method: POST
    data_selector: data
- name: audio
  endpoint:
    path: /audio/{audio_id}.json
    method: GET
    data_selector: audio
- name: geojson_audio_track
  endpoint:
    path: /api/v2/audio/{audio_id}/track.geojson
    method: GET
    data_selector: ''
- name: attachments
  endpoint:
    path: /reference/get-all-attachments
    method: GET
- name: single_attachment
  endpoint:
    path: /reference/get-single-attachment
    method: GET
- name: create_attachment
  endpoint:
    path: /reference/create-attachment
    method: POST
- name: finalize_attachment
  endpoint:
    path: /reference/finalize-attachment
    method: POST
- name: delete_attachment
  endpoint:
    path: /reference/delete-attachment
    method: DELETE
- name: audio_track
  endpoint:
    path: /audio/{audio_id}/track.kml
    method: GET
- name: attachments
  endpoint:
    path: /api/v2/attachments
    method: GET
    data_selector: records
    params: {}
- name: gpx_audio_track
  endpoint:
    path: /api/v2/audio/{audio_id}/track.gpx
    method: GET
    data_selector: ''
- name: attachment
  endpoint:
    path: /api/v2/attachments/{attachment_id}
    method: GET
    data_selector: response
    params: {}
- name: audio_track
  endpoint:
    path: /audio/{audio_id}/track.json
    method: GET
    data_selector: track
    params: {}
- name: attachments
  endpoint:
    path: /api/v2/attachments
    method: POST
    data_selector: url
    params: {}
- name: audio_upload
  endpoint:
    path: /api/v2/audio/upload.json
    method: POST
- name: finalize_attachment
  endpoint:
    path: /api/v2/attachments/finalize
    method: POST
- name: delete_attachment
  endpoint:
    path: /attachments/{attachment_id}
    method: DELETE
- name: get_all_attachments
  endpoint:
    path: /get-all-attachments
    method: GET
    data_selector: attachments
- name: get_single_attachment
  endpoint:
    path: /get-single-attachment
    method: GET
    data_selector: attachment
- name: create_attachment
  endpoint:
    path: /create-attachment
    method: POST
    data_selector: attachment
- name: finalize_attachment
  endpoint:
    path: /finalize-attachment
    method: POST
    data_selector: finalized_attachment
- name: delete_attachment
  endpoint:
    path: /delete-attachment
    method: DELETE
    data_selector: deleted_attachment
- name: changeset
  endpoint:
    path: /changesets
    method: GET
    data_selector: changeset
    params: {}
- name: attachments
  endpoint:
    path: /api/v2/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: changesets
  endpoint:
    path: /changesets.json
    method: GET
    data_selector: changesets
    params:
      per_page: 5
      page: 1
- name: attachment
  endpoint:
    path: /api/v2/attachments/{attachment_id}
    method: GET
- name: changeset
  endpoint:
    path: /api/v2/changesets/{changeset_id}.json
    method: GET
    data_selector: changeset
- name: attachment
  endpoint:
    path: /api/v2/attachments
    method: POST
    data_selector: response
    params:
      owners: required
- name: changeset
  endpoint:
    path: /changesets.json
    method: POST
    data_selector: changeset
- name: finalize_attachment
  endpoint:
    path: /api/v2/attachments/finalize
    method: POST
- name: changeset
  endpoint:
    path: /api/v2/changesets/{changeset_id}.json
    method: PUT
- name: delete_attachment
  endpoint:
    path: /attachments/{attachment_id}
    method: DELETE
    data_selector: null
    params: {}
- name: changeset
  endpoint:
    path: /api/v2/changesets/{changeset_id}/close.json
    method: PUT
- name: changeset
  endpoint:
    path: /changesets
    method: GET
    data_selector: changeset
    params:
      form_id: string
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhook
    params: {}
- name: changeset
  endpoint:
    path: /api/v2/changesets.json
    method: GET
    data_selector: changesets
    params:
      per_page: 5
      page: 1
- name: webhook
  endpoint:
    path: /api/v2/webhooks.json
    method: GET
    data_selector: webhooks
    params: {}
- name: webhook
  endpoint:
    path: /api/v2/webhooks/{webhook_id}.json
    method: GET
- name: changeset
  endpoint:
    path: /api/v2/changesets/{changeset_id}.json
    method: GET
    data_selector: changeset
- name: webhook
  endpoint:
    path: /webhooks.json
    method: POST
- name: webhook
  endpoint:
    path: /api/v2/webhooks/{webhook_id}.json
    method: PUT
- name: changeset
  endpoint:
    path: /changesets.json
    method: POST
    data_selector: changeset
    params: {}
- name: webhook
  endpoint:
    path: /api/v2/webhooks/{webhook_id}.json
    method: DELETE
    data_selector: response
    params: {}
- name: changeset
  endpoint:
    path: /api/v2/changesets/{changeset_id}.json
    method: PUT
- name: audit_logs
  endpoint:
    path: /audit_logs
    method: GET
    data_selector: audit_logs
- name: audit_logs
  endpoint:
    path: /api/v2/audit_logs.json
    method: GET
    data_selector: audit_logs
    params:
      per_page: 5
      page: 1
- name: changeset
  endpoint:
    path: /api/v2/changesets/{changeset_id}/close.json
    method: PUT
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhook
- name: audit_log
  endpoint:
    path: /api/v2/audit_logs/{audit_log_id}.json
    method: GET
    data_selector: audit_log
    params: {}
- name: workflows
  endpoint:
    path: /get-all-workflows
    method: GET
    data_selector: workflows
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks.json
    method: GET
    data_selector: webhooks
- name: workflows
  endpoint:
    path: /workflows.json
    method: GET
    data_selector: workflows
    params: {}
- name: webhook
  endpoint:
    path: /api/v2/webhooks/{webhook_id}.json
    method: GET
    data_selector: webhook
- name: workflow
  endpoint:
    path: /workflows/{workflow_id}.json
    method: GET
    data_selector: workflow
    params: {}
- name: webhook
  endpoint:
    path: /api/v2/webhooks.json
    method: POST
    data_selector: webhook
- name: workflows
  endpoint:
    path: /api/v2/workflows.json
    method: POST
- name: webhook
  endpoint:
    path: /api/v2/webhooks/{webhook_id}.json
    method: PUT
- name: workflows
  endpoint:
    path: /workflows/{workflow_id}.json
    method: PUT
    data_selector: workflow
- name: webhook
  endpoint:
    path: /api/v2/webhooks/{webhook_id}.json
    method: DELETE
    data_selector: null
    params: {}
- name: audit_logs
  endpoint:
    path: /audit_logs
    method: GET
    data_selector: audit_logs
- name: workflows
  endpoint:
    path: /api/v2/workflows/{workflow_id}.json
    method: DELETE
- name: audit_logs
  endpoint:
    path: /api/v2/audit_logs.json
    method: GET
    data_selector: audit_logs
- name: batch
  endpoint:
    path: /batch
    method: POST
    data_selector: batch
    params: {}
- name: audit_log
  endpoint:
    path: /audit_logs/{audit_log_id}.json
    method: GET
    data_selector: audit_log
- name: batches
  endpoint:
    path: /api/v2/batch.json
    method: GET
    data_selector: records
- name: workflows
  endpoint:
    path: /get-all-workflows
    method: GET
    data_selector: workflow
- name: single_batch
  endpoint:
    path: /api/v2/batch/{batch_id}.json
    method: GET
    data_selector: ''
- name: workflows
  endpoint:
    path: /workflows.json
    method: GET
    data_selector: workflows
    params: {}
- name: batch
  endpoint:
    path: /api/v2/batch.json
    method: POST
    data_selector: batch
    params: {}
- name: workflow
  endpoint:
    path: /workflows/{workflow_id}.json
    method: GET
    data_selector: workflow
    params: {}
- name: batch
  endpoint:
    path: /api/v2/batch.json
    method: POST
    data_selector: batch
- name: workflows
  endpoint:
    path: /api/v2/workflows.json
    method: POST
- name: batch_operations
  endpoint:
    path: /api/v2/batch/{batch_id}/operations.json
    method: POST
    data_selector: operations
    params: {}
- name: start_batch
  endpoint:
    path: /batch/{batch_id}/start.json
    method: POST
- name: update_workflow
  endpoint:
    path: /workflows/{workflow_id}.json
    method: PUT
- name: report_templates
  endpoint:
    path: /reference/report-templates-api
    method: GET
    data_selector: report_templates
- name: workflow
  endpoint:
    path: /api/v2/workflows/{workflow_id}
    method: DELETE
    data_selector: response
- name: Report
  endpoint:
    path: /report_template
    method: GET
    data_selector: body
    params: {}
- name: batch
  endpoint:
    path: /batch
    method: POST
    data_selector: batch
    params: {}
- name: batch_operations
  endpoint:
    path: /batch/batch_id/start.json
    method: POST
    data_selector: batch
    params: {}
- name: batches
  endpoint:
    path: /api/v2/batch.json
    method: GET
- name: batch
  endpoint:
    path: /batch/{batch_id}.json
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: batch_update
  endpoint:
    path: /api/v2/batch.json
    method: POST
    data_selector: batch
- name: batch
  endpoint:
    path: /api/v2/batch.json
    method: POST
    data_selector: batch
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: batch_operations
  endpoint:
    path: /api/v2/batch/{batch_id}/operations.json
    method: POST
    data_selector: operations
- name: start_batch
  endpoint:
    path: /batch/{batch_id}/start.json
    method: POST
- name: report_template
  endpoint:
    path: /reference/report-templates-api
    method: GET
    data_selector: records
    params: {}
- name: Report
  endpoint:
    path: /services/report_template
    method: GET
    data_selector: body
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: report_templates
  endpoint:
    path: /report_templates.json
    method: GET
    data_selector: records
    params: {}
- name: report_template
  endpoint:
    path: /api/v2/report_templates/{id}.json
    method: GET
    data_selector: response
- name: report_template
  endpoint:
    path: /report_templates.json
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: report_template
  endpoint:
    path: /api/v2/report_templates/{id}.json
    method: PUT
- name: report_template
  endpoint:
    path: /api/v2/report_templates/{id}.json
    method: DELETE
- name: pdf_report
  endpoint:
    path: /get-pdf-report
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: get_pdf_report
  endpoint:
    path: /api/v2/reports.json
    method: GET
    data_selector: report
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: form
  endpoint:
    path: /forms
    method: POST
    data_selector: data
- name: record
  endpoint:
    path: /records
    method: POST
    data_selector: data
- name: choice_list
  endpoint:
    path: /choice_lists
    method: POST
    data_selector: data
- name: classification_set
  endpoint:
    path: /classification_sets
    method: POST
    data_selector: data
- name: parameters
  endpoint:
    path: /parameters
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: report_templates
  endpoint:
    path: /report_templates.json
    method: GET
    data_selector: records
    params: {}
- name: data_shares
  endpoint:
    path: /data/shares
    method: GET
    data_selector: shares
    params: {}
- name: report_template
  endpoint:
    path: /api/v2/report_templates/{id}.json
    method: GET
- name: report_template
  endpoint:
    path: /api/v2/report_templates.json
    method: POST
- name: report_template
  endpoint:
    path: /report_templates/{id}
    method: PUT
- name: report_template
  endpoint:
    path: /api/v2/report_templates/{id}.json
    method: DELETE
- name: Get PDF Report
  endpoint:
    path: /get-pdf-report
    method: GET
- name: get_pdf_report
  endpoint:
    path: /api/v2/reports.json
    method: GET
    data_selector: report
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: form.create
  endpoint:
    path: /form/create
    method: POST
    data_selector: data
    params: {}
- name: form.update
  endpoint:
    path: /form/update
    method: PUT
    data_selector: data
    params: {}
- name: form.delete
  endpoint:
    path: /form/delete
    method: DELETE
    data_selector: data
    params: {}
- name: record.create
  endpoint:
    path: /record/create
    method: POST
    data_selector: data
    params: {}
- name: record.update
  endpoint:
    path: /record/update
    method: PUT
    data_selector: data
    params: {}
- name: record.delete
  endpoint:
    path: /record/delete
    method: DELETE
    data_selector: data
    params: {}
- name: choice_list.create
  endpoint:
    path: /choice_list/create
    method: POST
    data_selector: data
    params: {}
- name: choice_list.update
  endpoint:
    path: /choice_list/update
    method: PUT
    data_selector: data
    params: {}
- name: choice_list.delete
  endpoint:
    path: /choice_list/delete
    method: DELETE
    data_selector: data
    params: {}
- name: classification_set.create
  endpoint:
    path: /classification_set/create
    method: POST
    data_selector: data
    params: {}
- name: classification_set.update
  endpoint:
    path: /classification_set/update
    method: PUT
    data_selector: data
    params: {}
- name: classification_set.delete
  endpoint:
    path: /classification_set/delete
    method: DELETE
    data_selector: data
    params: {}
- name: ALTITUDE
  endpoint:
    path: /altitude
    method: GET
    data_selector: Number
    params: {}
- name: data_shares
  endpoint:
    path: /shares/{ACCESS_TOKEN}
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: altitude
  endpoint:
    path: /altitude
    method: GET
    data_selector: number
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: choice_value
  endpoint:
    path: /CHOICEVALUE
    method: GET
    data_selector: selected_value
    params:
      field: Object
- name: choice_values
  endpoint:
    path: /CHOICEVALUES
    method: GET
    data_selector: Array
    params:
      field: Object
- name: choice_value
  endpoint:
    path: /CHOICEVALUE
    method: GET
    data_selector: String
    params:
      field: Object
- name: choice_values
  endpoint:
    path: /CHOICEVALUES
    method: GET
    data_selector: Array
    params:
      field: Object
- name: COSH
  endpoint:
    path: /docs/calculations-ref-cosh
    method: GET
    data_selector: Number
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: count
  endpoint:
    path: /count
    method: GET
    data_selector: Number
    params:
      values: Array
- name: forms
  endpoint:
    path: /v2/forms
    method: GET
    data_selector: forms
- name: records
  endpoint:
    path: /v2/records
    method: GET
    data_selector: records
- name: Data Events Reference
  endpoint:
    path: /docs/data-events-reference
    method: GET
- name: Report Builder
  endpoint:
    path: /docs/reports-introduction
    method: GET
- name: App Extensions
  endpoint:
    path: /docs/app-extensions-introduction
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: COUNTA
  endpoint:
    path: /docs/calculations-ref-count
    method: GET
    data_selector: value
    params:
      value: Array
- name: count_blank
  endpoint:
    path: /services/data/vXX.X/sobjects/CountBlank
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /api/v1/records
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: field_description
    params:
      field: Data Name
- name: device_info
  endpoint:
    path: /DEVICEINFO
    method: GET
    data_selector: String
- name: device
  endpoint:
    path: /api/v2/devices
    method: GET
    data_selector: devices
- name: device_manufacturer
  endpoint:
    path: /devicemanufacturer
    method: GET
    data_selector: String
- name: device_model
  endpoint:
    path: /api/v1/device_model
    method: GET
- name: device_model
  endpoint:
    path: /devicemodel
    method: GET
    data_selector: String
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: field_description
    params:
      field: String
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: device_info
  endpoint:
    path: /deviceinfo
    method: GET
    data_selector: String
- name: device_manufacturer
  endpoint:
    path: /device/manufacturer
    method: GET
    data_selector: manufacturer
- name: device_model
  endpoint:
    path: /devicemodel
    method: GET
    data_selector: String
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /email
    method: GET
    data_selector: String
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculations
  endpoint:
    path: /calculations
    method: GET
    data_selector: results
    params: {}
- name: calculations
  endpoint:
    path: /calculations
    method: GET
    data_selector: results
    params: {}
- name: records
  endpoint:
    path: /api/v2/records
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: factdouble
  endpoint:
    path: /docs/calculations-ref-factdouble
    method: GET
    data_selector: returns
    params:
      value: Number
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: field_type
  endpoint:
    path: /FIELDTYPE
    method: GET
    data_selector: Field Types
    params:
      dataName: String
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculation
  endpoint:
    path: /services/data/vXX.X/calculations
    method: GET
    data_selector: records
    params: {}
- name: form
  endpoint:
    path: /FORM
    method: GET
    data_selector: Object
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: geometry
  endpoint:
    path: /geometry
    method: GET
    data_selector: geometry
    params: {}
- name: geometry_along
  endpoint:
    path: /geometry/along
    method: POST
    data_selector: Feature
    params: {}
- name: FORM
  endpoint:
    path: /FORM
    method: GET
    data_selector: Object
- name: geometry_buffer
  endpoint:
    path: /geometrybuffer
    method: POST
    data_selector: FeatureCollection
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: address
  endpoint:
    path: /formataddress
    method: POST
    data_selector: formatted_string
    params: {}
- name: geometry_intersects
  endpoint:
    path: /geometry/intersects
    method: GET
    data_selector: boolean
    params:
      feature1: input feature 1
      feature2: input feature 2
- name: geometry_length
  endpoint:
    path: /geometry/length
    method: POST
    data_selector: number
    params:
      geojson: required
      options: optional
- name: geometry
  endpoint:
    path: /geometry
    method: GET
- name: geometry_nearest_point
  endpoint:
    path: /geometry/nearest_point
    method: POST
    data_selector: features
    params: {}
- name: geometry_nearest_point
  endpoint:
    path: /geometry/nearest-point
    method: POST
    data_selector: Feature
    params:
      lines: LineString | MultiLineString
      point: Point
      options: object
- name: geometry_buffer
  endpoint:
    path: /geometrybuffer
    method: POST
    data_selector: FeatureCollection
    params:
      geometry: Feature
      radius: number
- name: geometry_tag
  endpoint:
    path: /geometrytag
    method: POST
    data_selector: features
    params: {}
- name: geometry_within
  endpoint:
    path: /geometry/within
    method: GET
    data_selector: boolean
    params:
      feature1: input feature 1
      feature2: input feature 2
- name: get_result
  endpoint:
    path: /GETRESULT
    method: GET
    data_selector: current result value
    params: {}
- name: geometry_length
  endpoint:
    path: /geometry/length
    method: POST
    data_selector: number
    params:
      geojson: required
- name: GROUP
  endpoint:
    path: /group
    method: GET
    data_selector: Array
    params:
      values: Array
- name: geometry_nearest_point
  endpoint:
    path: /geometry/nearestpoint
    method: GET
    data_selector: data
    params: {}
- name: geometry_nearest_point
  endpoint:
    path: /geometry/nearest-point-online
    method: POST
    data_selector: Feature
    params:
      lines: LineString | MultiLineString
      point: Point
      options: object
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: geometry
  endpoint:
    path: /services/data/vXX.X/sobjects/Geometry
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: geometry_tag
  endpoint:
    path: /geometrytag
    method: POST
    data_selector: features
    params: {}
- name: geometry_within
  endpoint:
    path: /geometry/within
    method: POST
    data_selector: boolean
    params:
      feature1: input feature 1
      feature2: input feature 2
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: result
  endpoint:
    path: /getresult
    method: GET
    data_selector: current_result_value
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ISNAN
  endpoint:
    path: /docs/parameters
    method: GET
    data_selector: value
    params:
      value: Number
- name: isupdate
  endpoint:
    path: /isupdate
    method: GET
    data_selector: boolean
- name: data_events
  endpoint:
    path: /docs/data-events-reference
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: latitude
  endpoint:
    path: /latitude
    method: GET
    data_selector: Number
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ISUPDATE
  endpoint:
    path: /ISUPDATE
    method: GET
    data_selector: boolean
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: label
  endpoint:
    path: /label
    method: GET
    data_selector: String
    params:
      field: String
- name: calculation
  endpoint:
    path: /api/v1/calculations
    method: GET
    data_selector: records
    params: {}
- name: data_records
  endpoint:
    path: /api/v2/data
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /api/v2/records
    method: GET
    data_selector: records
    params: {}
- name: maxa
  endpoint:
    path: /docs/calculations-ref-maxa
    method: GET
    data_selector: returns
    params:
      var_args_values: Number
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: max_numeric_value
  endpoint:
    path: /docs/calculations-ref-max
    method: GET
    data_selector: returns
    params:
      var_args_values: Number
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: median
  endpoint:
    path: /docs/calculations-ref-median
    method: GET
    data_selector: Number
    params:
      var_args_values: Number
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculations
  endpoint:
    path: /docs/calculations
    method: GET
    data_selector: records
    params: {}
- name: MINA
  endpoint:
    path: /docs/calculations-ref-min
    method: GET
    data_selector: returns
    params:
      var_args_values: Number (required)
- name: calculations
  endpoint:
    path: /calculations
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Fulcrum is designed to be user-friendly and developer-friendly.
- The platform offers a comprehensive API and integration capabilities.
- Requires OAuth2 authentication setup.
- Creating attachments requires a POST request to the attachments endpoint.
- Finalizing an attachment requires a POST request to the finalize endpoint.
- The Query API is read-only and cannot modify data in your account.
- All requests to the Query API require an authentication token and an SQL query.
- The Query API is subject to the same 5,000 calls an hour per user rate limits as
  the REST API. Additionally, queries cannot exceed 10 seconds of processing time
  to complete.
- As of May 19th 2023 the Query API can be used to index all the same objects that
  the REST API can index except for authorizations, audit logs, layers, workflows
  and groups.
- Postgres has a table name limitation of 63 characters.
- Uses OAuth2 with refresh token — requires setup of connected app in Fulcrum
- The Users API supports HTTP Basic authentication while most other endpoints require
  the API token as either an HTTP request header or query string parameter.
- The Users API only allows GET requests. You must create new users or modify existing
  users via the web admin console.
- The POST method on the Authorizations API supports only HTTP Basic authentication
  while other methods require an API token.
- Uses OAuth2 with token for authentication
- Users with a role of *Owner* always have access to all resources within the organization.
- The `change permissions` endpoint accepts a JSON object labeled `change` with three
  parameters.
- Users with a role of Owner always have access to all resources within the organization.
- Permissions provided from Groups take priority over normal permissions. If you attempt
  to remove a member's Group-provided access to a form, project, or layer, the request
  will fail with a 422 status code response and the member's permissions will not
  change.
- You cannot assign permissions to a group before the group has been created.
- if you are looking to manage a groups members, layers, projects and forms, you will
  need to use the Update Group Permissions endpoint
- The entire form object is required when making an update. Omitting existing elements
  will result in data loss!
- 'When adding new fields to a form, you MUST supply a key like ''key'': ''2832''
  in the snippet below.'
- Uses optional headers for create, update, and delete actions.
- The Records API does not enforce any validation against your custom form fields.
- The entire record object is required when making an update. Omitting fields with
  existing data will result in data loss! The typical workflow for updating an existing
  record is to fetch the record object, modify it, and then submit the PUT request.
- A repeatable's updated_at is only updated from device, similar to the client_updated_at
  in the parent record. A repeatable cannot have a server updated at different than
  its parent because they save/sync at the same time.
- If an assigned_to user does not exist in the organization, the record will be created
  with no assignee.
- If the project does not exist in the organization, the record will be created with
  no project.
- Get Single Record API allows retrieval of an individual record by ID.
- Update Record endpoint requires the record ID to be specified in the URL.
- The entire choice_list object is required when making an update. Omitting fields
  with existing data will result in data loss!
- Requires setup of connected app in api
- The endpoint creates a new choice list.
- Uses API key for authentication
- The entire classification_set object is required when making an update. Omitting
  fields with existing data will result in data loss!
- The entire project object is required when making an update. Omitting fields with
  existing data will result in data loss!
- The entire layer object is required when making an update. Omitting fields with
  existing data will result in data loss!
- The entire layer object is required when making an update.
- For more information on uploading MBTiles files, please see AWS Interactions.
- Not currently supported
- The URL for this request expired after 30 days.
- There is no DELETE method for photos. Photos can be effectively deleted by unlinking
  them from their associated record.
- Use the correct photo_id to retrieve the desired photo.
- There is no DELETE method for signatures. Signatures can be effectively deleted
  by unlinking them from their associated record.
- Requires a valid token to access the API
- There is no `DELETE` method for videos. Videos can be effectively deleted by unlinking
  them from their associated record.
- There is no DELETE method for videos. Videos can be effectively deleted by unlinking
  them from their associated record.
- Uses token-based authentication
- The video_id must be provided in the endpoint path.
- Requires valid token for authentication
- There is no DELETE method for audio. Audio files can be effectively deleted by unlinking
  them from their associated record.
- Each audio track consists of an array of track point arrays.
- Credentials must be included in the headers.
- Each track point array may include timestamp, latitude, longitude, altitude, horizontal_accuracy,
  vertical_accuracy, course, speed, heading, inclination.
- API requires a token for authentication
- The entire changeset object is required when making an update. Omitting fields with
  existing data will result in data loss!
- Your plan must include the Developer Pack and the member must have a role with permissions
  to Change Organization Profile to manage webhooks.
- Requires setup of token for authentication
- Requires setup of connected app in Fulcrum
- When requesting the Get All Audit Logs endpoint, use `activity` instead of `action`
  if you'd like to find logs by a specific `action`
- Is the API token correct?
- if you receive a 'Unique index violation' error when updating your workflows, you
  will need to make sure that the `id`s of your workflow steps are unique in your
  organization.
- When requesting the Get All Audit Logs endpoint, use activity instead of action
  if you'd like to find logs by a specific action
- Once a batch change has started it CANNOT BE TERMINATED
- Do not include multiple operations within the same batch. Only the first operation
  will run.
- The maximum amount of records that can be deleted per batch request at this time
  is 10,000
- The Workflows API gives you access to the workflows that you have created for your
  apps
- Once a batch update has started it CANNOT BE TERMINATED
- You will need to include an SQL query that indicates which records you want to delete,
  and make sure to alias the _record_id field as id. For example, if you wanted to
  delete all records in an app, your query would be"SELECT _record_id AS id FROM "Testing
  App""
- The maximum amount of records that can be deleted at this time is 10,000
- Once a batch delete has started it CANNOT BE TERMINATED
- You will need to include an SQL query that indicates which records you want to delete,
  and make sure to alias the _record_id field as id. For example, if you wanted to
  delete all records in an app, your query would be 'SELECT _record_id AS id FROM
  "Testing App"'
- Make sure that the `id`s of your workflow steps are unique in your organization.
- This endpoint can be helpful if you need to update multiple CSS classes across several
  reports, or if you want to move reports from one app to another.
- You will need to include an SQL query that indicates which records you want to delete,
  and make sure to alias the _record_id field as id.
- You will need to include an SQL query that indicates which records you want to delete,
  and make sure to alias the `_record_id` field as `id`. For example, if you wanted
  to delete all records in an app, your query would be`"SELECT _record_id AS id FROM
  \"Testing App\""`
- Fulcrum's cloud storage provides redundancy and high-availability.
- Webhook requests require a successful response code within 20 seconds.
- Webhook events can be either active or inactive.
- Data Shares provide read-only access to records
- Enabling data shares allows you to publish a live data feed
- Provides a private data store accessible only to the account owner.
- You must select a format for displaying the expression result.
- Some objects may return nulls in deeply nested fields
- Webhook events are delivered as a JSON-encoded string in the POST request.
- Data shares provide read-only access to the records in your Fulcrum app.
- Be cautious when sharing the data share URL as it provides access to all current
  and future records for that app.
- 'Compatibility with Core Android Apps: Several core Android apps do not support
  custom schemes.'
- 'URL Actions and Record Updates: When using URL actions to fetch data from external
  systems and update Fulcrum records via return URLs and URL actions, the record remains
  in edit mode which blocks updates.'
- Ensure that the OAuth app is set up correctly in Fulcrum.
- If using a classification field as a parameter, it will only return the first entry
  of the classification field.
- This can only be used on fields that store the values as a string. Fields like choice
  fields and classification sets store the values in an array.
- This can only be used on fields that store the values as a string.
- Ensure proper permissions are set for OAuth access.
- Some endpoints may have rate limits.
- Ensure to have valid OAuth credentials.
- Returns number rounded up to the nearest even integer.
- Some calculations may return nulls in deeply nested fields
- Some records may return null values for certain fields
- No parameters required for API calls.
- Leverages Turf.js for calculations, which may differ from other libraries.
- Leverages Turf.js for calculations
- Leverages Turf.js (https://turfjs.org) for calculations
- If the record has no location, GEOMETRY returns null.
- Leverages Turf.js (https://turfjs.org) for calculations, which may differ from other
  libraries.
- Returns the latitude of the current feature (record or repeatable item). For records
  with a Polygon or LineString geometry type, this function will return NaN.
- No authentication required for accessing data events.
- Some records may return null values in certain fields
- Requires OAuth2 for access.
- Ensure to handle API limits properly.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your credentials and permissions.'
- '401 Unauthorized: Check your API token.'
- '400 Bad Request: Ensure the request body is correctly formatted.'
- '{"error":"relation \"organization_1234.form_123456_undefined_view\" does not exist"}:
  Shorten names or use form ID.'
- 'UnauthorizedException: email and/or password is incorrect'
- '401: Incorrect credentials, please try again.'
- '422: Request will fail if trying to remove a member''s Group-provided access.'
- '422: Unprocessable Entity: Validation errors occurred'
- '422: Validation errors for required properties.'
- '422: Validation errors will return an object with a list of validation errors.'
- '422: Validation errors, such as missing required properties.'
- '422: Validation error if required properties are not included'
- '422: Validation errors returned if required properties are missing'
- '422: must be one of fulcrum, xyz, tilejson, geojson, mbtiles, wms, feature-service'
- '422: Validation errors if required properties are missing.'
- '422: Validation errors if required properties are missing'
- '422: Validation errors when required properties are not included'
- '422: Validation errors will return a list of validation errors.'
- '401 Unauthorized: Invalid token or token expired'
- '422: Validation errors will return a list of validation errors if required properties
  are not included.'
- '401 Unauthorized: Recheck API token validity'
- At least one owner type and owner ID is required
- Unauthorized
- '422: Validation errors if required properties are not included'
- '422: Validation error when required properties are missing.'
- '422: Validation errors returned if required properties are not included.'
- 'Unique index violation: Ensure workflow step ids are unique'
- 'Unique index violation: Ensure that the `id`s of your workflow steps are unique.'
- 'Unique index violation: Ensure workflow step IDs are unique.'
- Maximum amount of records that can be deleted at this time is 10,000
- '403 Forbidden: You do not have permission to access this resource.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check client credentials and permissions.'
- '401 Unauthorized: Check your OAuth credentials and scopes.'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify endpoint and resource ID'
- '500 Internal Server Error: Retry the request after some time'
- '401 Unauthorized: Check your OAuth token'
- '403 Forbidden: Insufficient permissions for this action'
- '404 Not Found: Ensure the endpoint is correct'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Resource does not exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.fulcrumapp.com/api/v2/query
source_metadata: null
