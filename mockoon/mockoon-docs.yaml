resources:
- name: Account
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: records
- name: Amendment
  endpoint:
    path: /v1/amendments
    method: GET
    data_selector: records
- name: CreditMemo
  endpoint:
    path: /v1/credit-memos
    method: GET
    data_selector: records
- name: Invoice
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: records
- name: Payment
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: records
- name: mockoon-cli
  endpoint:
    path: /endpoint
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: movies
  endpoint:
    path: /movies
    method: GET
    data_selector: records
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: records
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: records
- name: pokemons
  endpoint:
    path: /pokemons
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: records
- name: sales
  endpoint:
    path: /sales
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: Accounts
  endpoint:
    path: /templates/accounts/
    method: GET
- name: Activities
  endpoint:
    path: /templates/activities/
    method: GET
- name: Addresses
  endpoint:
    path: /templates/addresses/
    method: GET
- name: Alerts
  endpoint:
    path: /templates/alerts/
    method: GET
- name: Articles
  endpoint:
    path: /templates/articles/
    method: GET
- name: Birthdays
  endpoint:
    path: /templates/birthdays/
    method: GET
- name: Books
  endpoint:
    path: /templates/books/
    method: GET
- name: Calling codes
  endpoint:
    path: /templates/calling-codes/
    method: GET
- name: Cars
  endpoint:
    path: /templates/cars/
    method: GET
- name: Categories
  endpoint:
    path: /templates/categories/
    method: GET
- name: Certificates
  endpoint:
    path: /templates/certificates/
    method: GET
- name: Cities
  endpoint:
    path: /templates/cities/
    method: GET
- name: Clients
  endpoint:
    path: /templates/clients/
    method: GET
- name: Colors
  endpoint:
    path: /templates/colors/
    method: GET
- name: Contacts
  endpoint:
    path: /templates/contacts/
    method: GET
- name: Continent codes
  endpoint:
    path: /templates/continent-codes/
    method: GET
- name: Coordinates
  endpoint:
    path: /templates/coordinates/
    method: GET
- name: Country codes
  endpoint:
    path: /templates/country-codes/
    method: GET
- name: Currency codes
  endpoint:
    path: /templates/currency-code/
    method: GET
- name: Customers
  endpoint:
    path: /templates/customers/
    method: GET
- name: Employees
  endpoint:
    path: /templates/employees/
    method: GET
- name: Flights
  endpoint:
    path: /templates/flights/
    method: GET
- name: Hotels
  endpoint:
    path: /templates/hotels/
    method: GET
- name: Invoices
  endpoint:
    path: /templates/invoices/
    method: GET
- name: Jobs
  endpoint:
    path: /templates/jobs/
    method: GET
- name: Language codes (alpha-2 and 3)
  endpoint:
    path: /templates/language-codes-apha2-3/
    method: GET
- name: Language codes (alpha-2)
  endpoint:
    path: /templates/language-codes-apha2/
    method: GET
- name: Locales
  endpoint:
    path: /templates/locales/
    method: GET
- name: Movies
  endpoint:
    path: /templates/movies/
    method: GET
- name: NACE codes
  endpoint:
    path: /templates/nace-codes/
    method: GET
- name: Orders
  endpoint:
    path: /templates/orders/
    method: GET
- name: Photos
  endpoint:
    path: /templates/photos/
    method: GET
- name: Products
  endpoint:
    path: /templates/products/
    method: GET
- name: Ratings
  endpoint:
    path: /templates/ratings/
    method: GET
- name: React Flow configuration with one parent and two children
  endpoint:
    path: /templates/react-flow-config/
    method: GET
- name: Restaurants
  endpoint:
    path: /templates/restaurants/
    method: GET
- name: Roles
  endpoint:
    path: /templates/roles/
    method: GET
- name: Shipments
  endpoint:
    path: /templates/shipments/
    method: GET
- name: Social media post
  endpoint:
    path: /templates/posts/
    method: GET
- name: Sport teams
  endpoint:
    path: /templates/sport-teams/
    method: GET
- name: Stocks
  endpoint:
    path: /templates/stocks/
    method: GET
- name: Support tickets
  endpoint:
    path: /templates/support-tickets/
    method: GET
- name: Testimonials
  endpoint:
    path: /templates/testimonials/
    method: GET
- name: Timezones
  endpoint:
    path: /templates/timezones/
    method: GET
- name: Todos
  endpoint:
    path: /templates/todos/
    method: GET
- name: Transactions
  endpoint:
    path: /templates/transactions/
    method: GET
- name: Users
  endpoint:
    path: /templates/users/
    method: GET
- name: Video games
  endpoint:
    path: /templates/video-games/
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: response
    params: {}
- name: mock_api
  endpoint:
    path: /mockoon-admin/logs
    method: GET
    data_selector: logs
- name: people
  endpoint:
    path: /people/90
    method: GET
    data_selector: body
- name: static_files
  endpoint:
    path: /static/:path?
    method: GET
    data_selector: files
    params: {}
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: AccountingCode
  endpoint:
    path: /services/data/vXX.X/sobjects/AccountingCode
    method: GET
- name: AccountingPeriod
  endpoint:
    path: /services/data/vXX.X/sobjects/AccountingPeriod
    method: GET
- name: Amendment
  endpoint:
    path: /services/data/vXX.X/sobjects/Amendment
    method: GET
- name: ApplicationGroup
  endpoint:
    path: /services/data/vXX.X/sobjects/ApplicationGroup
    method: GET
- name: BillingRun
  endpoint:
    path: /services/data/vXX.X/sobjects/BillingRun
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: CreditMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/CreditMemo
    method: GET
- name: DebitMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/DebitMemo
    method: GET
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
- name: Payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
- name: Product
  endpoint:
    path: /services/data/vXX.X/sobjects/Product
    method: GET
- name: Subscription
  endpoint:
    path: /services/data/vXX.X/sobjects/Subscription
    method: GET
- name: TaxationItem
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxationItem
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: taxationItems
  endpoint:
    path: /taxationItems
    method: GET
    data_selector: records
    params: {}
- name: chargeId
  endpoint:
    path: /chargeId
    method: GET
    data_selector: records
    params: {}
- name: productRatePlanChargeId
  endpoint:
    path: /productRatePlanChargeId
    method: GET
    data_selector: records
    params: {}
- name: comment
  endpoint:
    path: /comment
    method: GET
    data_selector: records
    params: {}
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: records
    params: {}
- name: SandboxBankAccount
  endpoint:
    path: /sandbox/bank-account
    method: GET
    data_selector: transactions
- name: SandboxUser
  endpoint:
    path: /sandbox/user
    method: GET
    data_selector: users
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Account
  endpoint:
    path: /services/data/v207.0/sobjects/Account
    method: GET
    data_selector: records
    params: {}
- name: Contact
  endpoint:
    path: /services/data/v207.0/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CreditMemo
  endpoint:
    path: /services/data/v207.0/sobjects/CreditMemo
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/v207.0/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: Payment
  endpoint:
    path: /services/data/v207.0/sobjects/Payment
    method: GET
    data_selector: records
    params: {}
- name: taxationItems
  endpoint:
    path: /taxationItems
    method: GET
    data_selector: Container for the taxation items of the memo item.
- name: chargeId
  endpoint:
    path: /chargeId
    method: POST
    data_selector: ID of the product rate plan charge that the memo is created from.
- name: productRatePlanChargeId
  endpoint:
    path: /productRatePlanChargeId
    method: POST
    data_selector: ID of the product rate plan charge that the memo is created from.
- name: comment
  endpoint:
    path: /comment
    method: POST
    data_selector: Comments about the product rate plan charge, invoice item, or memo
      item.
- name: description
  endpoint:
    path: /description
    method: POST
    data_selector: Description of the the product rate plan charge, invoice item,
      or memo item.
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: payment_attachments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: CreditMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/CreditMemo
    method: GET
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Sandbox
  endpoint:
    path: /sandbox
    method: GET
    data_selector: users
    params: {}
- name: SandboxBankAccount
  endpoint:
    path: /sandbox/bank-accounts
    method: GET
    data_selector: accounts
    params: {}
- name: SandboxUser
  endpoint:
    path: /sandbox/users
    method: GET
    data_selector: users
    params: {}
- name: OBReadDataTransaction6
  endpoint:
    path: /path/to/OBReadDataTransaction6
    method: GET
    data_selector: Transaction
    params: {}
- name: OBReadTransaction6
  endpoint:
    path: /path/to/OBReadTransaction6
    method: GET
    data_selector: Data
    params: {}
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: records
- name: invoices
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: records
- name: taxationItems
  endpoint:
    path: /taxationItems
    method: GET
    data_selector: records
- name: chargeId
  endpoint:
    path: /chargeId
    method: GET
    data_selector: records
- name: productRatePlanChargeId
  endpoint:
    path: /productRatePlanChargeId
    method: GET
    data_selector: records
- name: comment
  endpoint:
    path: /comment
    method: GET
    data_selector: records
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: records
- name: taxationItems
  endpoint:
    path: /taxationItems
    method: GET
    data_selector: Container for the taxation items of the memo item.
- name: chargeId
  endpoint:
    path: /chargeId
    method: POST
    data_selector: ID of the product rate plan charge that the memo is created from.
- name: productRatePlanChargeId
  endpoint:
    path: /productRatePlanChargeId
    method: POST
    data_selector: ID of the product rate plan charge that the memo is created from.
- name: comment
  endpoint:
    path: /comment
    method: POST
    data_selector: Comments about the product rate plan charge, invoice item, or memo
      item.
- name: description
  endpoint:
    path: /description
    method: POST
    data_selector: Description of the the product rate plan charge, invoice item,
      or memo item.
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
    params: {}
- name: CreditMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/CreditMemo
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: OBReadDataBalance1
  endpoint:
    path: /OBReadDataBalance1
    method: GET
    data_selector: Data
    params: {}
- name: OBReadDataBeneficiary5
  endpoint:
    path: /OBReadDataBeneficiary5
    method: GET
    data_selector: Data
    params: {}
- name: OBReadDataParty2
  endpoint:
    path: /OBReadDataParty2
    method: GET
    data_selector: Data
    params: {}
- name: OBReadDataScheduledPayment3
  endpoint:
    path: /OBReadDataScheduledPayment3
    method: GET
    data_selector: Data
    params: {}
- name: OBReadDataStandingOrder5
  endpoint:
    path: /OBReadDataStandingOrder5
    method: GET
    data_selector: Data
    params: {}
- name: OBReadDataStatement2
  endpoint:
    path: /OBReadDataStatement2
    method: GET
    data_selector: Data
    params: {}
- name: OBTransaction6
  endpoint:
    path: /OBTransaction6
    method: GET
    data_selector: Data
    params: {}
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: CreditMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/CreditMemo
    method: GET
- name: DebitMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/DebitMemo
    method: GET
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
- name: Payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
- name: Subscription
  endpoint:
    path: /services/data/vXX.X/sobjects/Subscription
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: OBReadDataTransaction6
  endpoint:
    path: /path/to/OBReadDataTransaction6
    method: GET
    data_selector: Transaction
    params: {}
- name: sandbox
  endpoint:
    path: /sandbox
    method: GET
    data_selector: users
- name: sandbox_user
  endpoint:
    path: /sandbox/users
    method: GET
    data_selector: accounts
- name: sandbox_bank_account
  endpoint:
    path: /sandbox/bank-accounts
    method: GET
    data_selector: transactions
- name: sandbox_statement
  endpoint:
    path: /sandbox/statements
    method: GET
    data_selector: statement
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: CreditMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/CreditMemo
    method: GET
- name: DebitMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/DebitMemo
    method: GET
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
- name: Payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: CreditMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/CreditMemo
    method: GET
    data_selector: records
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: Data
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: Data
- name: taxationItems
  endpoint:
    path: /taxationItems
    method: GET
    data_selector: items
- name: chargeId
  endpoint:
    path: /chargeId
    method: POST
    data_selector: item
- name: productRatePlanChargeId
  endpoint:
    path: /productRatePlanChargeId
    method: POST
    data_selector: item
- name: comment
  endpoint:
    path: /comment
    method: POST
    data_selector: item
- name: description
  endpoint:
    path: /description
    method: POST
    data_selector: item
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: records
- name: Sandbox
  endpoint:
    path: /sandbox
    method: GET
    data_selector: users
- name: SandboxUser
  endpoint:
    path: /sandbox/users
    method: GET
    data_selector: accounts
- name: transaction
  endpoint:
    data_selector: array[OBTransaction6]
- name: read_transaction
  endpoint:
    data_selector: OBReadDataTransaction6 Transaction array[[OBTransaction6]]
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: SandboxBankAccount
  endpoint:
    path: /SandboxBankAccount
    method: GET
    data_selector: transactions
- name: SandboxCard
  endpoint:
    path: /SandboxCard
    method: GET
    data_selector: transactions
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: account_details
  endpoint:
    path: /accounts/{AccountId}
    method: GET
- name: account_balances
  endpoint:
    path: /accounts/{AccountId}/balances
    method: GET
- name: account_transactions
  endpoint:
    path: /accounts/{AccountId}/transactions
    method: GET
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: attachments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Sandbox
  endpoint:
    path: /sandbox
    method: GET
    data_selector: users
- name: SandboxBankAccount
  endpoint:
    path: /sandbox/bank-accounts
    method: GET
    data_selector: accounts
- name: SandboxCard
  endpoint:
    path: /sandbox/cards
    method: GET
    data_selector: cards
- name: SandboxUser
  endpoint:
    path: /sandbox/users
    method: GET
    data_selector: users
- name: OBReadDataTransaction6
  endpoint:
    path: /OBReadDataTransaction6
    method: GET
- name: OBReadTransaction6
  endpoint:
    path: /OBReadTransaction6
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: Data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: Data
    params: {}
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: CreditMemo
  endpoint:
    path: /services/data/vXX.X/sobjects/CreditMemo
    method: GET
    data_selector: records
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
- name: Payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
    data_selector: records
- name: Sandbox
  endpoint:
    path: /sandbox
    method: GET
    data_selector: users
    params: {}
- name: SandboxBankAccount
  endpoint:
    path: /sandbox/bank-account
    method: GET
    data_selector: transactions
    params: {}
- name: OBReadDataTransaction
  endpoint:
    path: /OBReadDataTransaction6
    method: GET
- name: OBReadTransaction
  endpoint:
    path: /OBReadTransaction6
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: Data
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: Data
- name: payments
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment
    method: GET
- name: note_attachment
  endpoint:
    path: /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment
    method: GET
- name: attachment_content
  endpoint:
    path: /user/{userID}/attachment/{attachmentID}/content
    method: GET
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
- name: Payment
  endpoint:
    path: /services/data/vXX.X/sobjects/Payment
    method: GET
    data_selector: records
- name: Product
  endpoint:
    path: /services/data/vXX.X/sobjects/Product
    method: GET
    data_selector: records
notes:
- NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept
  payments in a wide range of cryptos and get them instantly converted into a coin
  of your choice and sent to your wallet.
- Zuora recommends using OAuth v2.0 to authenticate to the Zuora REST API.
- Create a dedicated API user with API write access for OAuth authentication.
- No remote deployment, no account required, free and open-source.
- The web application is only available for paid plans.
- Free trial is available once per user.
- While the playground offers a lot of flexibility, it's not meant to be used in production.
- The service is frequently reset to its initial state and goes to sleep after ~15
  minutes of inactivity.
- The web application is still in beta and requires a Mockoon Cloud subscription to
  access.
- Offline and privacy friendly making Mockoon the best choice for highly regulated
  or high-security environments
- Mockoon is a desktop application using a local Node.js server to avoid latency.
- Mockoon creates a local mock server running on Node.js and does not require internet
  access.
- This roadmap is intended to give you an idea of what we are working on, and we may
  change it at any time.
- You can create a more complex configurations by adding multiple responses triggered
  by rules.
- Uses Node.js and NPM for installation
- CLI can run in any environment where Node.js is installed
- Mockoon CLI can run on any environment where Node.js is installed.
- Multiple mocks can be run at the same time by providing multiple data files and
  ports.
- You can enable recording mode to automatically create new endpoints when a new request
  is made to your mock server.
- Mockoon allows for dynamic templating to generate various types of mock data.
- API mocking helps overcome issues and speeds up development.
- Mock APIs can be used for testing purposes without the need to give access to your
  product.
- All services operational
- Average uptime (last 90 days) 100.000%
- Completely free to use, Mockoon saves time for thousands of developers around the
  world every day.
- Maintaining and improving a tool at this scale takes a lot of time and effort.
- Your email will not be shared or used for any other purpose.
- 'The Service is provided by 1kB SARL-S, Luxembourg business register: B257186'
- 'Contact email: support@mockoon.com'
- Mockoon offers a unique set of features, such as templating and rules, that allow
  users to set up great mocks in no time.
- Mockoon's advanced features enable Impala to quickly create realistic scenarios
  without the hassle of assembling multiple tools or libraries.
- Zuora recommends that you create a dedicated API user with API write access on a
  tenant when authenticating via OAuth.
- Stock and Forex Data and Realtime Quotes
- The second Payment Services Directive (PSD2) may affect your current or planned
  usage of our public API, as some of the API services are now subject to a permit.
- Zuora recommends creating a dedicated API user with API write access.
- TPPs are required to present a QWAC certificate during API consumption.
- In sandbox mode the certificate validations are optional.
- Fetch the latest currency exchange rates via API. ExchangeRate-API is free and unlimited.
- Authorization requires the 'X-API-KEY' header with your API key.
- To get started, you will require an API Key - check out our guide at https://www.bigredcloud.com/support/generating-api-key-guide/
  for information on how to get one.
- Zuora recommends that you use OAuth v2.0 to authenticate to the Zuora REST API.
- If you have Zuora Multi-entity enabled, you need to set an additional header to
  specify the ID of the entity that you want to access.
- 'Currency Authority: Exchange Rate of 1453 country currencies and crypto currencies'
- Zuora recommends creating a dedicated API user with API write access when authenticating
  via OAuth.
- Paylocity Web Services API uses OAuth2.0 Authentication with JSON Message Format.
- Uses OAuth2 with refresh token — requires setup of connected app in bunq
- Some features may require a PSD2 permit.
- Paylocity will send you an e-mail 10 days prior to the expiration date for the current
  secret.
- If not renewed, the second e-mail notification will be sent 5 days prior to secret's
  expiration.
- Paylocity reserves the right to impose rate limits on the number of calls made to
  our APIs.
- Changes to API features/functionality may be made at anytime with or without prior
  notice.
- API is based on JSON API standard.
- 'Your requests should always include the header: application/vnd.api+json.'
- The second Payment Services Directive (PSD2) may affect your current or planned
  usage of our public API.
- If you will gain access to the account information of other bunq users or initiate
  a payment for them, you may require a PSD2 permit.
- All API access is over HTTPS, and accessed from https://api.abr.ato.gov.au.
- Using our public API without the required PSD2 permit is at your own risk.
- Use the 'Enter API Key' button below to enter your API key and start interacting
  with your Big Red Cloud data right on this page.
- All data is sent and received as JSON.
- OAuth v2.0 recommended for authentication
- Create a dedicated API user with API write access
- Integrate with NaviPlan API from naviplancentral.com in no time with Mockoon's ready
  to use mock sample.
- Ensure that a valid API credential is specified.
- Paylocity API uses OAuth2.0 Authentication with JSON Message Format
- Rate limits may be imposed on the number of calls made to the APIs
- To validate your certificate in sandbox implementation, please send us your QWAC
  certificate at developer@nbg.gr and set the HTTP Header "x-sandbox-qwac-certificate-check"
  with the value "true" in your requests.
- The service maintains updated database based on the community and other third-party
  services to make sure all BINs in the database are accurate and up to date.
- If a user is deactivated, all of the user's OAuth clients will be automatically
  deactivated.
- API Interface to retrieve company data and products from business registers
- 'PSD2 NOTICE: The second Payment Services Directive (PSD2) may affect your current
  or planned usage of our public API, as some of the API services are now subject
  to a permit.'
- API based on REST software architectural style
- API has resource-oriented URLs, accepts JSON-encoded request bodies and returns
  JSON-encoded responses
- Zuora recommends creating a dedicated API user with API write access for OAuth
- If you have Zuora Multi-entity enabled, you need to set an additional header to
  specify the ID of the entity
- Portfolio Optimizer is free to use, but not free to run.
- 'The possible Approaches are: Redirect SCA Approach, OAuth SCA Approach, Decoupled
  SCA Approach, Embedded SCA Approach without SCA method, Embedded SCA Approach with
  only one SCA method available, Embedded SCA Approach with Selection of a SCA method.'
- Not every message defined in this API definition is necessary for all approaches.
- Please make sure not to expose your API key publicly!
- To use the NOWPayments API you should sign up at nowpayments.io and generate an
  API key.
- Users may require a PSD2 permit to access account information of other bunq users.
- API requires setup of connected app in NBG Technology HUB
- Uses SMS OTP for Consent Authorization
- OAuth is not available in every environment.
errors:
- '10: Permission or access denied'
- '11: Authentication failed'
- '20: Invalid format or value'
- '21: Unknown field in request'
- '22: Missing required field'
- '30: Rule restriction'
- '40: Not found'
- '45: Unsupported request'
- '50: Locking contention'
- '60: Internal error'
- '70: Request exceeded limit'
- '90: Malformed request'
- '99: Integration error'
- '429 Too Many Requests: Rate limiting may apply.'
- 'JSON parsing error: If the JSON body from an entering request is erroneous, Mockoon
  will log a JSON parsing error.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '11: Authentication failed: Authentication fails due to invalid API authentication
  credentials.'
- '20: Invalid format or value: The request cannot be processed due to an invalid
  field format or value.'
- '22: Missing required field: The request cannot be processed because a required
  field in the request body is missing.'
- '200 - OK: Everything worked as expected.'
- '400 - Bad Request: The request was unacceptable, often due to missing a required
  parameter.'
- '401 - Unauthorized: No valid API key provided.'
- '402 - Request Failed: The parameters were valid but the request failed.'
- '404 - Not Found: The requested resource doesn''t exist.'
- '409 - Conflict: The request conflicts with another request (perhaps due to using
  the same idempotent key).'
- '429 - Too Many Requests: Too many requests hit the API too quickly. We recommend
  an exponential backoff of your requests.'
- '500, 502, 503, 504 - Server Errors: Something went wrong on OpenFinTech''s end.
  (These are rare.)'
- '11: Authentication failed: Ensure that a valid API credential is specified.'
- '21: Unknown field in request: Check the unknown field name in the response message.'
- '22: Missing required field: Ensure that you include all required fields in the
  request body.'
- 'UK.OBIE.Field.Expected: A mandatory field isn''t supplied'
- 'UK.OBIE.Field.Invalid: RequestedExecutionDateTime must be in future'
- '10: Permission or access denied: Check the missing tenant or user permission in
  the response message and contact Zuora Global Support for enablement.'
- '20: Invalid format or value: Check the invalid field in the error message, and
  ensure that the format and value of all fields you passed in are valid.'
- '21: Unknown field in request: Check the unknown field name in the response message,
  and ensure that you do not include any unknown field in the request body.'
- '22: Missing required field: Check the missing field name in the response message,
  and ensure that you include all required fields in the request body.'
- '40: Not found: Check the response message and ensure that the specified resource
  exists in your Zuora tenant.'
- '45: Unsupported request: Check your request and ensure that the endpoint and method
  matches.'
- '90: Malformed request: Check the syntax error in the JSON request body and ensure
  that the request is in the correct JSON format.'
- '400: Request failed to be processed because of incorrect content'
- '401: Request failed to be processed because of invalid API key'
- '404: Request failed to be processed because of non existing endpoint'
- '429: Request failed to be processed because of API limits violated'
- '500: Request failed to be processed because of an internal error'
- '502: Request failed to be processed because of a temporary connectivity error'
- '409 - Conflict: The request conflicts with another request.'
- '429 - Too Many Requests: Too many requests hit the API too quickly.'
- '500, 502, 503, 504 - Server Errors: Something went wrong on OpenFinTech''s end.'
- UK.OBIE.Field.Expected
- UK.OBIE.Field.Invalid
- UK.OBIE.Field.InvalidDate
- UK.OBIE.Field.Missing
- UK.OBIE.Field.Unexpected
- UK.OBIE.Header.Invalid
- UK.OBIE.Header.Missing
- UK.OBIE.Resource.ConsentMismatch
- UK.OBIE.Resource.InvalidConsentStatus
- UK.OBIE.Resource.InvalidFormat
- UK.OBIE.Resource.NotFound
- UK.OBIE.Rules.AfterCutOffDateTime
- UK.OBIE.Rules.DuplicateReference
- UK.OBIE.Signature.Invalid
- UK.OBIE.Signature.InvalidClaim
- UK.OBIE.Signature.MissingClaim
- UK.OBIE.Signature.Malformed
- UK.OBIE.Signature.Missing
- UK.OBIE.Signature.Unexpected
- UK.OBIE.Unsupported.AccountIdentifier
- UK.OBIE.Unsupported.AccountSecondaryIdentifier
- UK.OBIE.Unsupported.Currency
- UK.OBIE.Unsupported.EventType
- UK.OBIE.Unsupported.Frequency
- UK.OBIE.Unsupported.LocalInstrument
- UK.OBIE.Unsupported.Scheme
- UK.OBIE.Reauthenticate
- UK.OBIE.Rules.ResourceAlreadyExists
- UK.OBIE.UnexpectedError
- '11: Authentication failed - Ensure valid API credential is specified.'
- '20: Invalid format or value - Check the invalid field in the error message.'
- '21: Unknown field in request - Ensure no unknown field is included in the request
  body.'
- 'UK.OBIE.Field.Invalid: Field provided is invalid'
- 'UK.OBIE.Resource.NotFound: Resource not found'
- 400 Bad Request – Your request format is bad.
- 401 Unauthorized – Your API key is wrong.
- 404 Not Found – The specified resource could not be found.
- 405 Method Not Allowed – You tried to access a resource with an invalid method.
- 429 Too Many Requests – You’re requesting too many resources! Slow down!
- 500 Internal Server Error – We had a problem with our server. Try again later.
- 503 Service Unavailable – We’re temporarily offline for maintenance. Try again later.
- '70: Request exceeded limit: The total number of concurrent requests exceeds the
  limit allowed by the system.'
- '500 - Server Errors: Something went wrong on OpenFinTech''s end.'
- '11: Authentication failed - Ensure that a valid API credential is specified.'
- '22: Missing required field - Ensure that you include all required fields in the
  request body.'
- 'UK.OBIE.Field.Invalid: Invalid field'
- 'UK.OBIE.Resource.NotFound: The resource was not found'
- 'UK.OBIE.Resource.InvalidConsentStatus: Consent status is invalid'
- '401 Unauthorized: Recheck API key'
- 'UK.OBIE.Field.Invalid: The provided field value is invalid'
- 'UK.OBIE.Resource.InvalidConsentStatus: The consent is not in a valid status'
- 'UK.OBIE.Field.Invalid: A mandatory field isn''t supplied'
- 'UK.OBIE.Signature.Invalid: Invalid signature'
auth_info:
  mentioned_objects:
  - OauthToken
  - API User
  - OAuth client
  - OAuth Client
  - Installation
  - DeviceServer
  - SessionServer
  - Consent
  - ApiUser
client:
  base_url: https://rest.zuora.com
  auth:
    type: oauth2
    flow: client_credentials
    location: header
    header_name: Authorization
source_metadata: null
