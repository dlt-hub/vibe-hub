resources:
- name: sphinx_gallery_conf
  endpoint:
    path: sphinx_gallery_conf
    method: SET
    data_selector: configurations
    params:
      examples_dirs: ../examples
      gallery_dirs: auto_examples
- name: examples
  endpoint:
    path: ../examples
    method: GET
    data_selector: files
    params: {}
- name: output
  endpoint:
    path: auto_examples
    method: GET
    data_selector: files
    params: {}
- name: examples_dirs
  endpoint:
    path: ../examples
    method: GET
    data_selector: records
- name: gallery_dirs
  endpoint:
    path: auto_examples
    method: GET
    data_selector: records
- name: reset_argv
  endpoint:
    path: sphinxext.reset_argv
    method: CALLABLE
    data_selector: callable
    params: {}
- name: subsection_order
  endpoint:
    path: ExplicitOrder
    method: CALLABLE
    data_selector: callable
    params: {}
- name: within_subsection_order
  endpoint:
    path: NumberOfCodeLinesSortKey
    method: CALLABLE
    data_selector: callable
    params: {}
- name: reference_url
  endpoint:
    path: reference_url
    method: CALLABLE
    data_selector: callable
    params: {}
- name: reset_argv
  endpoint:
    path: sphinxext.reset_argv
    method: CALLABLE
- name: subsection_order
  endpoint:
    path: sphinx_gallery_conf.subsection_order
    method: LIST
- name: within_subsection_order
  endpoint:
    path: sphinx_gallery_conf.within_subsection_order
    method: CALLABLE
- name: reference_url
  endpoint:
    path: sphinx_gallery_conf.reference_url
    method: DICTIONARY
- name: minigallery
  endpoint:
    path: /minigallery
    method: GET
    data_selector: records
    params: {}
- name: sphinx_gallery
  endpoint:
    path: /sphinx_gallery
    method: GET
    data_selector: records
    params: {}
- name: sphinx_gallery.utils
  endpoint:
    path: /sphinx_gallery/utils
    method: GET
    data_selector: records
    params: {}
- name: sphinx_gallery_conf
  endpoint:
    path: /configuration
    method: GET
    data_selector: records
    params: {}
- name: example1
  endpoint:
    path: /examples/plot_0_sin.py
    method: GET
- name: example2
  endpoint:
    path: /examples/plot_4*
    method: GET
- name: sphinx_gallery
  endpoint:
    path: /sphinx_gallery
    method: GET
    data_selector: records
- name: matplotlib_animations
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: sphinx_gallery_dummy_images
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: abort_on_example_error
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: expected_failing_examples
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: only_warn_on_example_error
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: parallel
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: recommender
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: thumbnail_size
  endpoint:
    path: /sphinx_gallery_conf
    method: SET
    data_selector: thumbnail_size
    params:
      default: (400, 280)
      new_value: (250, 250)
- name: show_memory
  endpoint:
    path: /sphinx_gallery_conf
    method: SET
    data_selector: show_memory
    params:
      default: 'True'
- name: capture_repr
  endpoint:
    path: /sphinx_gallery_conf
    method: SET
    data_selector: capture_repr
    params:
      default: ('_repr_html_', '__repr__')
- name: thumbnail_size
  endpoint:
    path: /setting/gallery/thumbnail/size
    method: GET
    data_selector: settings
    params: {}
- name: min_reported_time
  endpoint:
    path: /minimal/reported/time
    method: GET
    data_selector: settings
    params: {}
- name: show_memory
  endpoint:
    path: /show/memory
    method: GET
    data_selector: settings
    params: {}
- name: show_signature
  endpoint:
    path: /show/signature
    method: GET
    data_selector: settings
    params: {}
- name: capture_repr
  endpoint:
    path: /controlling/output
    method: GET
    data_selector: settings
    params: {}
- name: sphinx_gallery_conf
  endpoint:
    path: /configuration
    method: GET
    data_selector: configuration_options
    params: {}
- name: examples_dirs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: gallery_dirs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: filename_pattern
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ignore_pattern
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: example_extensions
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: example
  endpoint:
    path: /examples
    method: GET
    data_selector: examples
    params: {}
- name: sphinx_gallery
  endpoint:
    path: /sphinx_gallery
    method: GET
    data_selector: records
- name: sphinx_gallery_conf
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
- name: sphinx_gallery_conf
  endpoint:
    path: /<path_to_conf.py>
    method: POST
    data_selector: configs
    params: {}
- name: sphinx_gallery_conf
  endpoint:
    path: /sphinx_gallery_conf
    method: GET
    data_selector: records
    params: {}
- name: reset_modules
  endpoint:
    path: /reset_modules
    method: GET
    data_selector: records
    params: {}
- name: custom_css
  endpoint:
    path: /custom_css
    method: GET
    data_selector: records
    params: {}
- name: convert_python_scripts
  endpoint:
    path: /convert/python/scripts
    method: GET
    data_selector: records
- name: embedding_script
  endpoint:
    path: /embedding/script
    method: GET
    data_selector: records
- name: minigallery_directive
  endpoint:
    path: /minigallery/directive
    method: GET
    data_selector: records
- name: example
  endpoint:
    path: /example/path
    method: GET
    data_selector: records
    params: {}
- name: BlockParser
  endpoint:
    path: /sphinx_gallery/block_parser
    method: GET
    data_selector: records
- name: image_scrapers
  endpoint:
    path: /Resetting/modules
    method: GET
    data_selector: records
- name: reset_modules
  endpoint:
    path: /Resetting/before_each/example
    method: GET
    data_selector: records
- name: sidebar_components
  endpoint:
    path: /Using/Sphinx-Gallery/sidebar/components
    method: GET
    data_selector: records
- name: ImageSg
  endpoint:
    path: /sphinx_gallery/directives/ImageSg
    method: GET
    data_selector: records
- name: MiniGallery
  endpoint:
    path: /sphinx_gallery/directives/MiniGallery
    method: GET
    data_selector: records
- name: imgsgnode
  endpoint:
    path: /sphinx_gallery/directives/imgsgnode
    method: GET
    data_selector: records
- name: optimize_png
  endpoint:
    path: /optimize/png
    method: POST
    data_selector: result
    params: {}
- name: matplotlib
  endpoint:
    path: /matplotlib
    method: GET
    data_selector: images
    params: {}
- name: BlockParser
  endpoint:
    path: /sphinx_gallery/block_parser
    method: GET
    data_selector: records
    params: {}
- name: add_code_cell
  endpoint:
    path: /add_code_cell
    method: POST
    data_selector: code
    params: {}
- name: add_markdown_cell
  endpoint:
    path: /add_markdown_cell
    method: POST
    data_selector: markdown
    params: {}
- name: convert_code_to_md
  endpoint:
    path: /convert_code_to_md
    method: POST
    data_selector: text
    params: {}
- name: fill_notebook
  endpoint:
    path: /fill_notebook
    method: POST
    data_selector: script_blocks
    params: {}
- name: generate_image_src
  endpoint:
    path: /generate_image_src
    method: POST
    data_selector: image_path
    params: {}
- name: jupyter_notebook
  endpoint:
    path: /jupyter_notebook
    method: POST
    data_selector: script_blocks
    params: {}
- name: save_notebook
  endpoint:
    path: /save_notebook
    method: POST
    data_selector: work_notebook
    params: {}
- name: generate_zipfiles
  endpoint:
    path: /sphinx_gallery/downloads/generate_zipfiles
    method: POST
    data_selector: download_rst
    params: {}
- name: list_downloadable_sources
  endpoint:
    path: /sphinx_gallery/downloads/list_downloadable_sources
    method: GET
    data_selector: source_files
    params: {}
- name: python_zip
  endpoint:
    path: /sphinx_gallery/downloads/python_zip
    method: POST
    data_selector: zipname
    params: {}
- name: generate_zipfiles
  endpoint:
    path: /sphinx_gallery/downloads/generate_zipfiles
    method: GET
    data_selector: download_rst
    params: {}
- name: list_downloadable_sources
  endpoint:
    path: /sphinx_gallery/downloads/list_downloadable_sources
    method: GET
    data_selector: list
    params: {}
- name: python_zip
  endpoint:
    path: /sphinx_gallery/downloads/python_zip
    method: GET
    data_selector: zipname
    params: {}
- name: ExampleTitleSortKey
  endpoint:
    path: /module/sphinx_gallery.sorting.ExampleTitleSortKey
    method: GET
    data_selector: src_dir
    params: {}
- name: ExplicitOrder
  endpoint:
    path: /module/sphinx_gallery.sorting.ExplicitOrder
    method: GET
    data_selector: ordered_list
    params: {}
- name: FileNameSortKey
  endpoint:
    path: /module/sphinx_gallery.sorting.FileNameSortKey
    method: GET
    data_selector: src_dir
    params: {}
- name: FileSizeSortKey
  endpoint:
    path: /module/sphinx_gallery.sorting.FileSizeSortKey
    method: GET
    data_selector: src_dir
    params: {}
- name: FunctionSortKey
  endpoint:
    path: /module/sphinx_gallery.sorting.FunctionSortKey
    method: GET
    data_selector: func
    params: {}
- name: NumberOfCodeLinesSortKey
  endpoint:
    path: /module/sphinx_gallery.sorting.NumberOfCodeLinesSortKey
    method: GET
    data_selector: src_dir
    params: {}
- name: ImageSg
  endpoint:
    path: /_modules/sphinx_gallery/directives.html#ImageSg
    method: GET
- name: MiniGallery
  endpoint:
    path: /_modules/sphinx_gallery/directives.html#MiniGallery
    method: GET
- name: imgsgnode
  endpoint:
    path: /_modules/sphinx_gallery/directives.html#imgsgnode
    method: GET
- name: optimize_png
  endpoint:
    path: /sphinx_gallery/utils/optipng
    method: POST
    data_selector: response
    params: {}
- name: sg_download_links
  endpoint:
    path: /sg_download_links
    method: GET
    data_selector: source_code_links
- name: sg_launcher_links
  endpoint:
    path: /sg_launcher_links
    method: GET
    data_selector: launcher_links
- name: sg_download_links
  endpoint:
    path: /sg_download_links
    method: GET
- name: sg_launcher_links
  endpoint:
    path: /sg_launcher_links
    method: GET
- name: reset_modules
  endpoint:
    path: /reset/modules
    method: GET
    data_selector: records
    params: {}
- name: altering_css
  endpoint:
    path: /css/altering
    method: GET
    data_selector: records
    params: {}
- name: generate_zipfiles
  endpoint:
    path: sphinx_gallery/downloads/generate_zipfiles
    method: POST
    data_selector: download_rst
    params: {}
- name: list_downloadable_sources
  endpoint:
    path: sphinx_gallery/downloads/list_downloadable_sources
    method: GET
    data_selector: source_files
    params: {}
- name: python_zip
  endpoint:
    path: sphinx_gallery/downloads/python_zip
    method: POST
    data_selector: zipname
    params: {}
notes:
- Support for Python 3.8 and Sphinx 4 dropped in this release.
- Requirement is now Python >= 3.9 and Sphinx >= 5.
- Support for Sphinx < 4 dropped in this release. Requirement is Sphinx >= 4.
- Support for Sphinx < 3 dropped in this release. Requirement is Sphinx >= 3.
- Support for Python 3.6 dropped in this release. Requirement is Python >=3.7.
- Generalising image_scrapers facility for non-images
- Add a mode that fails only for rst warnings and does not run examples
- Add a “template”, to make it easy to get started
- Add config that generates dummy images to prevent missing image warnings
- Add hidpi option to matplotlib_scraper and directive
- Added experimental support to auto-generate Binder links for examples via binder
  config. Note that this API may change in the future.
- Added ignore_pattern configurable to allow not adding some python files into the
  gallery.
- ENH Add config that generates dummy images to prevent missing image warnings
- 'ENH: add hidpi option to matplotlib_scraper and directive'
- Dropped support for Sphinx < 1.8.3.
- Dropped support for Python < 3.5.
- Working sphinx builders for sphinx_gallery include html, dirhtml and latex.
- Sphinx-Gallery expects each Python file to have a docstring that defines the header
  for the example.
- You can embed reST in your Python examples by including a line of >= 20 '#' symbols,
  '#%%', or '# %%'.
- Sphinx-Gallery only supports one level of subfolder nesting in its gallery directories.
- Sphinx-Gallery only rebuilds examples that have changed.
- 'To force rebuild examples without changing file contents, use ''run_stale_examples'':
  True.'
- Working sphinx builders include html, dirhtml and latex.
- Sphinx-Gallery only re-runs examples that have changed (according to their md5 hash).
- By default, Sphinx-Gallery only rebuilds examples that have changed.
- This design feature allows for more rapid documentation iteration by only rebuilding
  examples when they change.
- You can bypass Sphinx-Gallery automatically creating an `index.rst` from a `GALLERY_HEADER.rst`
  in a gallery directory or nested sub-gallery directory.
- You can bypass Sphinx-Gallery automatically creating an index.rst from a GALLERY_HEADER.rst
  in a gallery directory or nested sub-gallery directory.
- If you pass your own index.rst file, you are responsible for adding your own Sphinx
  toctree in that index that includes any gallery items or other files in that directory.
- Sphinx-Gallery does not manage hyperlinks in reST text blocks. These depend on your
  Sphinx setup.
- You can specify minigallery thumbnails order via the minigallery_sort_order configuration.
- Sorting is done on the full paths to all the gallery examples.
- When using these flags, it is good practice to make sure the source Python files
  are equivalent to the generated HTML and iPython notebooks (i.e. make sure `.py
  == .html == .ipynb`). This principle should be violated only when necessary, and
  on a case-by-case basis.
- By default, Sphinx-Gallery will inspect global variables (and code objects) at the
  end of each code block to try to find classes of variables and method calls.
- This feature might not work properly in all instances.
- Sphinx-Gallery enables you to add hyperlinks to the code blocks in your example
  files.
- Sphinx-Gallery does not manage hyperlinks in reST text blocks.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- It is not currently possible to host notebooks generated by Sphinx-Gallery with
  readthedocs.org, as RTD does not provide you with a GitHub repository you could
  link Binder to.
- The default value of thumbnail_size will change from (400, 280) to (320, 224) in
  version 0.9.0.
- The default value of `thumbnail_size` will change from `(400, 280)` (2.5x maximum
  specified by CSS) to `(320, 224)` (2x maximum specified by CSS) in version 0.9.0.
- Sphinx-Gallery is typically used indirectly via Sphinx execution and configuration
  variables.
- Binder is still beta technology, so there may be instability in the experience of
  users who click Binder links.
- JupyterLite is still beta technology and less mature than Binder, so there may be
  instability or unexpected behaviour in the experience of users who click JupyterLite
  links.
- By default, images are scraped following each code block in an example.
- This configuration only works when the example is set to not execute.
- 'The default setting is: sphinx_gallery_conf = { ''capture_repr'': (''_repr_html_'',
  ''__repr__'') }.'
- By default, Sphinx-Gallery creates all the files that are written in the sphinx-build
  directory.
- If you pass your own index.rst file, you are responsible for adding your own Sphinx
  toctree.
- 'Default setting is: ''capture_repr'': (''_repr_html_'', ''__repr__'')'
- 'To capture only data directed to standard output, configure ''capture_repr'' to
  be an empty tuple: ''capture_repr'': ()'
- Remember to add sphinx_gallery to your version control
- 'Use in case of git: $ git add sphinx_gallery'
- Using resetters such as reset_mpl that deviate from the standard behavior that users
  will experience when manually running examples themselves is discouraged due to
  the inconsistency that results between the rendered examples and local outputs.
- 'Using literalinclude is fragile and can break easily when examples are changed
  (all the more when line numbers are used instead of start-after and end-before).
  Use with caution: linking directly to examples is a more robust alternative.'
- Using literalinclude is fragile and can break easily when examples are changed
- SVG images do not work with latex build modes, thus will not work while building
  a PDF version of your documentation.
- Using literalinclude is fragile and can break easily when examples are changed.
- It is safe to use these components on any page, even if the page is not a Sphinx-Gallery
  example page.
- Using these components does not mean that the original download and launcher links
  will be removed from the page.
- Integration with Binder and Jupyterlite is on an experimental stage.
- Optimize a PNG in place.
- 'To visually remove the original links in favor of the components, one can use `display:
  none` in CSS.'
- Integration with Binder and Jupyterlite is on an experimental stage. Note that this
  API may change in the future.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'NameError: name ''iae'' is not defined'
- Explicit markup ends without a blank line; unexpected unindent.
- 'WARNING: Explicit markup ends without a blank line; unexpected unindent.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://sphinx-gallery.github.io
  headers:
    Accept: application/json
source_metadata: null
