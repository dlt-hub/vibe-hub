resources:
- name: create_ticket
  endpoint:
    path: /v1/conversations/{subcompany_id}/create-ticket
    method: POST
    data_selector: id
- name: get_customer
  endpoint:
    path: /v1/customers/{subcompany_id}/customer/{provided_unique_id}/get-customer
    method: GET
    data_selector: customer_info
- name: insert_customer
  endpoint:
    path: /v1/customers/{subcompany_id}/create-customer/{provided_unique_id}
    method: PUT
    data_selector: created_customer
- name: add_tags
  endpoint:
    path: /v1/customers/{subcompany_id}/customer/{provided_unique_id}/add-tags
    method: PUT
- name: add_custom_fields
  endpoint:
    path: /v1/customers/{subcompany_id}/customer/{provided_unique_id}/add-custom-fields
    method: PUT
- name: list_custom_fields
  endpoint:
    path: /v1/custom-fields/{subcompany_id}/list-custom-fields
    method: GET
- name: create_custom_fields
  endpoint:
    path: /v1/custom-fields/{subcompany_id}/create-custom-field
    method: POST
- name: delete_custom_fields
  endpoint:
    path: /v1/custom-fields/{subcompany_id}/custom-field/{custom_field_id}/delete-custom-fields
    method: DELETE
- name: create_ticket
  endpoint:
    path: /api/platform/v1/conversations/{subcompany_id}/create-ticket
    method: POST
    data_selector: id
- name: get_customer
  endpoint:
    path: /api/platform/v1/customers/{subcompany_id}/customer/{provided_unique_id}/get-customer
    method: GET
    data_selector: customer_info
- name: insert_customer
  endpoint:
    path: /api/platform/v1/customers/{subcompany_id}/create-customer/{provided_unique_id}
    method: PUT
    data_selector: created_customer
- name: add_tags
  endpoint:
    path: /api/platform/v1/customers/{subcompany_id}/customer/{provided_unique_id}/add-tags
    method: PUT
- name: add_custom_fields
  endpoint:
    path: /api/platform/v1/customers/{subcompany_id}/customer/{provided_unique_id}/add-custom-fields
    method: PUT
- name: list_custom_fields
  endpoint:
    path: /api/platform/v1/custom-fields/{subcompany_id}/list-custom-fields
    method: GET
- name: create_custom_fields
  endpoint:
    path: /api/platform/v1/custom-fields/{subcompany_id}/create-custom-field
    method: POST
- name: delete_custom_fields
  endpoint:
    path: /api/platform/v1/custom-fields/{subcompany_id}/custom-field/{custom_field_id}/delete-custom-fields
    method: DELETE
- name: send_api_request
  endpoint:
    path: /actions/send-api-request
    method: POST
    data_selector: response
    params: {}
- name: AI Agent
  endpoint:
    path: /ai-agents
    method: GET
- name: action
  endpoint:
    path: /api/v1/actions
    method: GET
    data_selector: actions
- name: trigger
  endpoint:
    path: /api/v1/triggers
    method: GET
    data_selector: triggers
- name: Webchat
  endpoint:
    path: /aicx-modules/ai-agents/publishing/webchat
    method: GET
- name: Facebook Messenger
  endpoint:
    path: /aicx-modules/ai-agents/publishing/facebook-messenger
    method: GET
- name: WhatsApp
  endpoint:
    path: /aicx-modules/ai-agents/publishing/whatsapp
    method: GET
- name: Telegram
  endpoint:
    path: /aicx-modules/ai-agents/publishing/telegram
    method: GET
- name: LINE
  endpoint:
    path: /aicx-modules/ai-agents/publishing/line
    method: GET
- name: Africa's Talking
  endpoint:
    path: /aicx-modules/ai-agents/publishing/africas-talking
    method: GET
- name: Zendesk
  endpoint:
    path: /aicx-modules/ai-agents/publishing/zendesk
    method: GET
- name: Bitrix24
  endpoint:
    path: /aicx-modules/ai-agents/publishing/bitrix24
    method: GET
- name: Existing Training
  endpoint:
    path: /existing-training
    method: GET
    data_selector: resources
- name: Add Training
  endpoint:
    path: /add-training
    method: POST
    data_selector: status
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: conversations
    params: {}
- name: livechat
  endpoint:
    path: /livechats
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: tickets
- name: Webchat
  endpoint:
    path: /aicx-modules/ai-agents/publishing/webchat
    method: GET
- name: Facebook Messenger
  endpoint:
    path: /aicx-modules/ai-agents/publishing/facebook-messenger
    method: GET
- name: WhatsApp
  endpoint:
    path: /aicx-modules/ai-agents/publishing/whatsapp
    method: GET
- name: Telegram
  endpoint:
    path: /aicx-modules/ai-agents/publishing/telegram
    method: GET
- name: LINE
  endpoint:
    path: /aicx-modules/ai-agents/publishing/line
    method: GET
- name: Africa's Talking
  endpoint:
    path: /aicx-modules/ai-agents/publishing/africas-talking
    method: GET
- name: Bitrix24
  endpoint:
    path: /aicx-modules/ai-agents/publishing/bitrix24
    method: GET
- name: Zendesk
  endpoint:
    path: /aicx-modules/ai-agents/publishing/zendesk
    method: GET
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: players
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: conversations
- name: canned_reply
  endpoint:
    path: /general/settings/teamspaces/canned-replies
    method: GET
    data_selector: records
- name: email_template
  endpoint:
    path: /general/settings/teamspaces/email-templates
    method: GET
    data_selector: records
- name: livechat
  endpoint:
    path: /aicx-modules/livechats
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /aicx-modules/tickets
    method: GET
    data_selector: records
- name: teamspace
  endpoint:
    path: /general/settings/teamspaces
    method: GET
    data_selector: teamspaces
- name: user_account
  endpoint:
    path: /general/settings/user-account
    method: GET
    data_selector: settings
- name: create_ticket
  endpoint:
    path: /api/tickets/create
    method: POST
- name: reply_ticket
  endpoint:
    path: /api/tickets/reply
    method: POST
- name: manage_ticket
  endpoint:
    path: /api/tickets/manage
    method: GET
- name: find_tickets
  endpoint:
    path: /api/tickets/find
    method: GET
- name: delete_tickets
  endpoint:
    path: /api/tickets/delete
    method: DELETE
- name: players
  endpoint:
    path: /api/v1/players
    method: GET
    data_selector: data
    params: {}
- name: chat_variables
  endpoint:
    path: /api/chat_variables
    method: GET
    data_selector: data
    params: {}
- name: chat_scripts
  endpoint:
    path: /api/chat_scripts
    method: GET
    data_selector: data
    params: {}
- name: _user_input
  endpoint:
    data_selector: records
- name: _lang
  endpoint:
    data_selector: records
- name: _channel_profile
  endpoint:
    data_selector: records
- name: _customer
  endpoint:
    data_selector: records
- name: _channel
  endpoint:
    data_selector: records
- name: _new_ticket
  endpoint:
    data_selector: records
- name: _track.fetch_ticket_by_ticket_id
  endpoint:
    data_selector: records
- name: _track.fetch_tickets_by_email
  endpoint:
    data_selector: records
- name: workspace_settings
  endpoint:
    path: /general/settings/workspace
    method: GET
- name: teamspaces
  endpoint:
    path: /general/settings/teamspaces
    method: GET
- name: plan_and_billing
  endpoint:
    path: /general/settings/workspace/plan-and-billing
    method: GET
- name: roles_and_permissions
  endpoint:
    path: /general/settings/workspace/roles-and-permissions
    method: GET
- name: users
  endpoint:
    path: /general/settings/workspace/users
    method: GET
- name: teams
  endpoint:
    path: /general/settings/workspace/teams
    method: GET
- name: webchat
  endpoint:
    path: /index.umd.js
    method: GET
    data_selector: script
    params: {}
- name: account_settings
  endpoint:
    path: /general/settings/user-account
    method: GET
    data_selector: settings
    params: {}
- name: platform
  endpoint:
    path: /api/platform/
    method: GET
- name: chatbot
  endpoint:
    path: /api/chatbot/
    method: GET
- name: chat_variables
  endpoint:
    path: /api/chat_variables
    method: GET
    data_selector: variables
- name: chat_scripts
  endpoint:
    path: /api/chat_scripts
    method: GET
    data_selector: scripts
- name: webchat_script
  endpoint:
    path: /api/webchat_script
    method: GET
    data_selector: scripts
- name: developer_api
  endpoint:
    path: /api/developer_api
    method: GET
    data_selector: apis
- name: _user_input
  endpoint: {}
- name: _lang
  endpoint: {}
- name: _channel_profile
  endpoint: {}
- name: _customer
  endpoint: {}
- name: _channel
  endpoint: {}
- name: _new_ticket
  endpoint: {}
- name: _track.fetch_ticket_by_ticket_id
  endpoint: {}
- name: _track.fetch_tickets_by_email
  endpoint: {}
- name: actions
  endpoint:
    path: /aicx-modules/ai-agents/actions
    method: GET
    data_selector: actions
    params: {}
- name: scripts
  endpoint:
    path: /developers/developer-tools/chat-scripts
    method: GET
    data_selector: scripts
    params: {}
- name: sendgrid
  endpoint:
    path: /api/sendgrid
    method: POST
    data_selector: records
    params: {}
- name: openai
  endpoint:
    path: /api/openai
    method: POST
    data_selector: records
    params: {}
- name: platform
  endpoint:
    path: /api/platform/
    method: GET
    data_selector: ''
    params: {}
- name: chatbot
  endpoint:
    path: /api/chatbot/
    method: GET
    data_selector: ''
    params: {}
notes:
- Each request to the developer API must include a bearer token in the Authorization
  header.
- Sign-in uses passwordless user authentication
- Sign-up requires a work email
- AI-powered chatbots serving as the first line of support in conversations, which
  can hand off chats to live agents as directed.
- API Account Access for accessing your Yola account's data, functionalities, and
  resources.
- Yola uses passwordless user authentication for heightened security.
- Sign-up requires a work email. Domains associated with spam are ineligible for Yola
  login.
- Managing AI agents requires the Manage AI agents permission.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires your workspace members to sign-in to Yola through Google or Microsoft's
  direct authentication methods.
- Triggers and actions can be localised to each of the AI agent's languages.
- All new workspaces begin with a 'Default AI Agents' AI, which can be modified or
  deleted.
- Every action is initiated by a trigger.
- Certain triggers and actions may only be available for some parents, depending on
  compatibility.
- Conversation transfers require the Amateur plan or above.
- Requires the Transfer and takeover livechats/tickets they manage permissions.
- Requires the Manage/view all players permissions to view or edit.
- Certain native analytics require the Pro plan or higher.
- Custom Analytics require the VIP plan.
- Requires the Champion or VIP plans for AI Text Enhancements.
- Requires the VIP plan and VIP Club add-on for AI Realtime Translation.
- Requires various permissions to view, manage, transfer, export, and download livechats
  at the individual or team levels.
- VIP Club contains the Yola platform's highest enterprise-level features, offering
  maximum support and capabilities for your AI live agents.
- Tickets are based on email threads and require various permissions for management.
- Requires setup of connected app in Yola
- Ensure proper permissions are granted for API access
- Chat scripts are simple Python expressions used for data manipulation in certain
  AI agent actions triggered during a chat.
- On-premise or hybrid hosting gives you location control over data residency.
- VIP Club contains the Yola platform's highest enterprise-level features
- The VIP Club add-on is available with the VIP plan
- Make sure to only send the window.yola.identify('') line when the player is authenticated
  on your website and the ID is not empty.
- If the player is not authenticated and/or you don't have their ID, this line should
  not be included or will send an empty ID value.
- Use Azure's OpenAI service instead of OpenAI directly for data privacy.
- On-premise or hybrid hosting are available with the VIP Club add-on.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://v3.yola.ai
source_metadata: null
