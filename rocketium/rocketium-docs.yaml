resources:
- name: text_to_speech
  endpoint:
    path: /speech
    method: POST
    data_selector: response
    params: {}
- name: create_workspace
  endpoint:
    path: /workspaces
    method: POST
    data_selector: response
    params: {}
- name: create_video
  endpoint:
    path: /videos
    method: POST
    data_selector: null
    params: {}
- name: create_image
  endpoint:
    path: /videos
    method: POST
    data_selector: null
    params: {}
- name: get_video
  endpoint:
    path: /videos/<ID>
    method: GET
    data_selector: null
    params: {}
- name: get_image
  endpoint:
    path: /videos/<ID>
    method: GET
    data_selector: null
    params: {}
- name: create_workspace
  endpoint:
    path: /workspaces
    method: POST
    data_selector: null
    params: {}
- name: motion_graphics
  endpoint:
    path: /motion-graphics
    method: POST
    data_selector: ''
    params: {}
- name: share
  endpoint:
    path: /share
    method: POST
    data_selector: ''
    params: {}
- name: themes_v2
  endpoint:
    path: /api/v2/themes
    method: GET
    data_selector: ''
    params: {}
- name: themes_v3
  endpoint:
    path: /api/v3/getThemes
    method: GET
    data_selector: ''
    params: {}
- name: templates_v3
  endpoint:
    path: /api/v3/getTemplates
    method: GET
    data_selector: ''
    params: {}
- name: template
  endpoint:
    path: /api/v1/template/<template_id>
    method: GET
    data_selector: ''
    params: {}
- name: stock_content_search
  endpoint:
    path: /stock-content-search
    method: GET
    data_selector: ''
    params:
      query: summer
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: ''
    params:
      workspaceID: my-workspace-12345
      query: summer
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Import from Spreadsheet
  endpoint:
    path: /campaign/scale/spreadsheet-import
    method: GET
- name: media_library
  endpoint:
    path: /api/media_library
    method: GET
    data_selector: media_items
- name: campaign
  endpoint:
    path: /campaign/facebook-ads-integration/facebook-ad-integrationion
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: creatives
  endpoint:
    path: /creatives/:project-id
    method: GET
    data_selector: url
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: create_video
  endpoint:
    path: /v1/videos
    method: POST
    data_selector: videoId
- name: create_image
  endpoint:
    path: /v1/images
    method: POST
    data_selector: imageId
- name: text_to_speech
  endpoint:
    path: /speech
    method: POST
    data_selector: url
- name: create_workspace
  endpoint:
    path: /workspaces
    method: POST
    data_selector: id
- name: create_motion_graphic
  endpoint:
    path: /motion-graphics
    method: POST
    data_selector: url
- name: analytics_workspace
  endpoint:
    path: /api/v3/analytics/{workspaceId}
    method: GET
    data_selector: data
- name: analytics_table_data
  endpoint:
    path: /api/v3/analytics/{workspaceId}/tableData
    method: GET
    data_selector: data
- name: stock_content_search
  endpoint:
    path: /stock-content-search
    method: GET
    data_selector: images
- name: color_breakdown
  endpoint:
    path: /v1/colors
    method: GET
    data_selector: colors
- name: search_images_videos
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: delete_video
  endpoint:
    path: /videos/:id
    method: DELETE
- name: delete_image
  endpoint:
    path: /videos/:id
    method: DELETE
- name: webhook_callback
  endpoint:
    path: /webhook/callback
    method: POST
    data_selector: body
    params: {}
- name: share
  endpoint:
    path: /share
    method: POST
    data_selector: message
    params: {}
- name: publish_video
  endpoint:
    path: /v1/publish
    method: POST
    data_selector: message
    params: {}
- name: get_video
  endpoint:
    path: /videos/:id
    method: GET
    data_selector: message
    params: {}
- name: get_image
  endpoint:
    path: /videos/:id
    method: GET
    data_selector: message
    params: {}
- name: get_templates
  endpoint:
    path: /api/v3/getTemplates
    method: GET
    data_selector: message
    params: {}
- name: get_template
  endpoint:
    path: /api/v1/template/:id
    method: GET
    data_selector: message
    params: {}
- name: get_template_rules
  endpoint:
    path: /api/v1/template/:id/rules
    method: GET
    data_selector: template
    params: {}
- name: create_folder
  endpoint:
    path: /api/v1/assets/folder
    method: POST
    data_selector: success
    params: {}
- name: get_folders
  endpoint:
    path: /api/v1/assets/folder
    method: GET
    data_selector: id
    params: {}
- name: upload_file
  endpoint:
    path: /api/v1/assets/files
    method: POST
    data_selector: success
    params: {}
- name: get_files
  endpoint:
    path: /api/v1/assets/files
    method: GET
    data_selector: files
    params: {}
- name: search_assets
  endpoint:
    path: /api/v1/assets/search
    method: GET
    data_selector: results
    params: {}
- name: get_specific_media_in_folder
  endpoint:
    path: /api/v1/assets/folder/{folderId}/media/{mediaId}
    method: GET
    data_selector: id
    params: {}
- name: get_brand_rules
  endpoint:
    path: /api/v2/brandCompliance/rules
    method: GET
    data_selector: id
    params: {}
- name: create_brand_rules
  endpoint:
    path: /api/v2/brandCompliance/rules
    method: POST
    data_selector: success
    params: {}
- name: update_brand_rules
  endpoint:
    path: /api/v2/brandCompliance/rules
    method: PUT
    data_selector: success
    params: {}
- name: delete_brand_rules
  endpoint:
    path: /api/v2/brandCompliance/rules
    method: DELETE
    data_selector: success
    params: {}
- name: apply_brand_rules
  endpoint:
    path: /api/v2/brandCompliance/applyRules
    method: POST
    data_selector: success
    params: {}
- name: get_evaluation_status
  endpoint:
    path: /api/v2/brandCompliance/evaluation/status
    method: GET
    data_selector: status
    params: {}
- name: get_delayer_for_asset
  endpoint:
    path: /api/v1/ai-pilot/pixelsense/{assetId}/delayer
    method: GET
    data_selector: data
    params: {}
- name: search_asset
  endpoint:
    path: /api/v1/ai-pilot/pixelsense/{assetId}/search
    method: GET
    data_selector: results
    params: {}
- name: predict_asset
  endpoint:
    path: /api/v1/ai-pilot/pixelsense/{assetId}/predict
    method: GET
    data_selector: predictions
    params: {}
- name: rename_layers
  endpoint:
    path: /api/v1/ai-pilot/auto-rename
    method: POST
    data_selector: renamedLayers
    params: {}
- name: get_campaign_summary
  endpoint:
    path: /api/v1/ai-pilot/analyse-campaign/summary
    method: POST
    data_selector: workspaceId
    params: {}
- name: editor
  endpoint:
    path: /button/docs#configuration
    method: GET
    data_selector: methods
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: data
    params: {}
notes:
- Make sure to replace <YOUR_API_KEY> with your API key along with themeId and scenes
  data.
- Use this sandbox to run Rocketium's APIs with custom parameters and find the generated
  video in your Rocketium account.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Importing a PSD template involves a different set of steps as accounted here.
- The maximum resolution of the supported PSD is 3000 by 3000.
- A project in Rocketium is a workflow aimed at making visual creatives for one particular
  business objective.
- Workspaces are folders that can be created to manage your design projects.
- Each workspace has an Admin who can invite multiple team members to a workspace.
- Automatically removes the white background of images for banner creation.
- Users must have an account on Rocketium in order to edit the creative.
- Comments generally show up on the variant of the creative you have chosen. If you
  need to place a general comment, tick the checkbox ‘Mark as All Variants’. You will
  see that the comment appears on the campaign overall.
- If you notice that the Comment feature is not enabled for you, talk to your admin
  or account manager who can help you enable it.
- The campaign will be pushed to Facebook in the ‘paused’ state (as a draft).
- 'Zero manual effort: Eliminates all manual downloading and uploading, across segments.
  Edit and export to refresh live campaigns.'
- 'Flexibility to hyper-personalize content: The seamless process lets you personalize
  campaigns at micro-levels, unlocking better engagement.'
- 'More growth in fewer hours: Both campaign creation timelines, as well as operations,
  will be free from the last-minute hustle, letting you focus on strategy.'
- Each size should have its own exclusive artboard.
- Only 8-bit files are supported.
- The same layers must be present across all artboards.
- Adjustment layer must be merged and rasterized with the parent layer.
- Layer masks must be merged and rasterized with the parent layer.
- Image links should be URLs that should be publicly accessible
- All responses return a message indicating success or error.
- Some sources require attribution of the creator.
- You can generate your API access by going to the settings tab on your account dashboard.
- 'If you want to segregate the assets based on the workspace used to upload these
  assets, you need to pass this configuration parameter at button initialization:
  ''show-Workspacelevel-Media'': true.'
- 'You can disable the media-upload and stock-library options for the users by using
  the configurations: ''media-upload'': false, ''stock-library'': false.'
- The button product works perfectly well with the chrome browser, but on the firefox
  browser the button needs an additional x-frame option to be entered to make the
  function better.
- You can easily move creatives within teams by clicking on the three dots that can
  be seen on their card in the dashboard.
- Users can choose from royalty-free stock background music files from within Rocketium
  to add that extra flair to their videos.
- You can brand your video by uploading your own image/ video logo.
- Users can add upto 50 scenes in a video.
- The length of the video is limited to 3 minutes.
- Requires setup of connected app in Rocketium
- Uploading a font is allowed on Expert, Agency and API plans.
- Rocketium auto-saves your work periodically so that you do not lose your work accidentally.
- You can manually save your work before exiting by clicking on the 'Save' button.
- Rocketium provides free 10GB storage for all paid users.
- Should you need to test out our API solution, you can start by generating your API
  key and reach out to our support team for further information.
- Contact your account manager or Rocketium Support for custom requirements.
errors:
- 'RFSDK_MISSING_CONFIG: Missing parameters will be emitted to the console. Update
  the script to add these entries.'
- 'RFSDK_INVALID_CONFIG: Invalid parameters will be emitted to the console. Update
  the script to fix these entries.'
- 'RFSDK_OUT_OF_CREDITS: Get in touch with your account manager or our support team.'
- 'RFSDK_INVALID_CLIENT_ID_OR_DOMAIN_NOT_WHITELISTED: Check the client ID shared by
  the Rocketium team and ensure the current domain has been whitelisted.'
- 'RFSDK_INVALID_TEMPLATE_ID: Correct the template ID sent while initialising.'
- 'RFSDK_INVALID_WORKSPACE_ID: Correct the workspace ID sent while initialising.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Clip masks are not supported yet. Merge the clip mask and the layer.
- Your preview could be different from the imported file.
- Blending mode used is not supported.
- Layer styles are not supported yet.
- Rocketium only supports 8-bit RGB colorspace.
- 400 Invalid values for output-format or size.
- 401 User authentication is incorrect.
- 403 This status code is returned if the specified project belongs to a different
  account than the owner of the access token.
- 404 This status code is returned if the project-id does not exist, project-id is
  not rendered, or if project-id has no creatives.
- 413 Currently, only media files up to 6MB in size are supported.
- invalid token
- you reached the limit for using this api
- invalid user
- insufficient credits
- '200: Successful response'
- 'error: Image inaccessible'
- 'RFSDK_MISSING_CONFIG: Required parameters are missing'
- 'RFSDK_INVALID_CONFIG: One or more parameters are invalid'
- 'RFSDK_OUT_OF_CREDITS: Your account does not have any more video credits.'
- 'RFSDK_INVALID_CLIENT_ID_OR_DOMAIN_NOT_WHITELISTED: The client ID is invalid or
  the domain on which Rocketium Button is running has not been whitelisted.'
- 'RFSDK_INVALID_TEMPLATE_ID: The specified template ID is either invalid or unavailable
  for your account.'
- 'RFSDK_INVALID_WORKSPACE_ID: The specified workspace ID is either invalid or unavailable
  for your account.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://rocketium.com
  auth:
    type: apikey
source_metadata: null
