resources:
- name: startcall
  endpoint:
    path: /click2call
    method: POST
    data_selector: call_id
    params: {}
- name: start_call
  endpoint:
    path: /click2call
    method: POST
- name: stop_call
  endpoint:
    path: /api/v1/cc7c7b8981d...0ab6c3/click2call_hangup
    method: POST
    data_selector: error
    params:
      agent: '1002'
- name: stop_call
  endpoint:
    path: /click2call_hangup
    method: POST
- name: cdr
  endpoint:
    path: /api/v2/cdr
    method: GET
    data_selector: records
    params:
      key: a387aaf1f101fc...fe284aaf61
      search_token: dkeouof13kjhk4HHH59
      page: 1
      per_page: 20
      start_date: '2020-04-01'
      end_date: '2020-05-01'
      cli: 197
      number: '187'
      wildcard_cli: '971231'
      wildcard_number: '7751'
      queue_ids: 199,201
      agent_ids: 1,2,3
      team_ids: 3,4
      wrapup_codes: 0001,1002
      campaign_ids: 15,13,22
      duration_from: 1
      duration_to: 10
      dialing_time_from: 1
      dialing_time_to: 10
      talk_time_from: 1
      talk_time_to: 10
      hold_time_from: 1
      hold_time_to: 10
      ivr_time_from: 1
      ivr_time_to: 10
      queue_time_from: 1
      queue_time_to: 10
      deleted_agent_ids: 15,16,17
      lead_source: Google ADS
      start_datetime: '2022-08-19T02:56:02'
      end_datetime: '2022-08-19T02:56:02'
      uuid: a6c74840-574b-4e6e-baad-6b69bc38ccfc
      related_call_uuid: 8d1371d2-e166-4677-b158-b1782ddd412d
      destination_country: Germany - Other
- name: records
  endpoint:
    path: /records
    method: GET
    data_selector: records
- name: cdr
  endpoint:
    path: /api/v2/cdr
    method: GET
- name: cdr
  endpoint:
    path: /api/v2/cdr
    method: GET
    data_selector: records
    params:
      key: a387aaf1f101fc...fe284aaf61
      search_token: dkeouof13kjhk4HHH59
      page: 1
      per_page: 20
      start_date: '2020-04-01'
      end_date: '2020-05-01'
      cli: '197'
      number: '187'
      wildcard_cli: '971231'
      wildcard_number: '7751'
      queue_ids: 199,201
      agent_ids: 1,2,3
      team_ids: 3,4
      wrapup_codes: 0001,1002
      campaign_ids: 15,13,22
      duration_from: 1
      duration_to: 10
      dialing_time_from: 1
      dialing_time_to: 10
      talk_time_from: 1
      talk_time_to: 10
      hold_time_from: 1
      hold_time_to: 10
      ivr_time_from: 1
      ivr_time_to: 10
      queue_time_from: 1
      queue_time_to: 10
      deleted_agent_ids: 15,16,17
      lead_source: Google ADS
      start_datetime: '2022-08-19T02:56:02'
      end_datetime: '2022-08-19T02:56:02'
      uuid: a6c74840-574b-4e6e-baad-6b69bc38ccfc
      related_call_uuid: 8d1371d2-e166-4677-b158-b1782ddd412d
      destination_country: Germany - Other
- name: cdr_records
  endpoint:
    path: /retrieve/cdrs
    method: GET
    data_selector: records
- name: send_sms
  endpoint:
    path: /reference/createsms
    method: POST
    data_selector: sms_id
    params: {}
- name: cdr
  endpoint:
    path: /api/v2/cdr
    method: GET
- name: send_sms
  endpoint:
    path: /api/v1/{api_key}/sendsms
    method: POST
- name: sms_templates
  endpoint:
    path: /sms/templates
    method: GET
    data_selector: templates
    params:
      key: cc7c76b8987a27ab5...b89b00ab6c3
      page: 1
      limit: 50
- name: send_sms
  endpoint:
    path: /reference/createsms
    method: POST
    data_selector: sms_id
    params:
      agent: string
      number: string
      body: string
      sender_id: string
      crm: string
      account_id: string
      template.id: integer
      template.params: object
- name: sms_templates
  endpoint:
    path: /api/v3/messages/sms/templates
    method: GET
- name: send_sms
  endpoint:
    path: /api/v1/{api_key}/sendsms
    method: POST
- name: sms_templates
  endpoint:
    path: /api/v3/messages/sms/templates
    method: GET
    data_selector: templates
    params:
      key: cc7c76b8987a27ab5...b89b00ab6c3
      page: 1
      limit: 50
- name: sms_templates
  endpoint:
    path: /api/v3/messages/sms/templates
    method: GET
    data_selector: records
- name: balance
  endpoint:
    path: /api/v1/{cluster_id}/balance
    method: GET
    data_selector: balance
    params: {}
- name: balance
  endpoint:
    path: /balance
    method: GET
- name: balance
  endpoint:
    path: /cc7c76...b89bb6c3/balance
    method: GET
    data_selector: balance
    params: {}
- name: campaigns
  endpoint:
    path: /api/dialer/v1/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: balance
  endpoint:
    path: /balance
    method: GET
    data_selector: response
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: add_campaign_contacts
  endpoint:
    path: /campaigns/{campaign_id}/contacts
    method: POST
    data_selector: contacts
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: add_campaign_contacts
  endpoint:
    path: /campaigns/{campaign_id}/contacts
    method: POST
- name: add_campaign_contacts
  endpoint:
    path: /campaigns/{campaign_id}/contacts
    method: POST
    data_selector: contacts
- name: update_campaign_contacts
  endpoint:
    path: /api/v1/{cluster_id}/campaigns/{campaign_id}/contacts
    method: PUT
    data_selector: contacts
    params: {}
- name: add_campaign_contacts
  endpoint:
    path: /campaigns/{campaign_id}/contacts
    method: POST
- name: update_campaign_contacts
  endpoint:
    path: /campaigns/{campaign_id}/contacts
    method: PUT
- name: update_campaign_contacts
  endpoint:
    path: /campaigns/{campaign_id}/contacts
    method: PUT
    data_selector: contacts
    params:
      campaign_id: string
- name: update_campaign_agents
  endpoint:
    path: /campaigns/{campaign_id}/agents
    method: PATCH
    data_selector: body
    params:
      campaign_id: integer
- name: update_campaign_contacts
  endpoint:
    path: /campaigns/{campaign_id}/contacts
    method: PUT
- name: update_campaign_agents
  endpoint:
    path: /api/dialer/v1/campaigns/{campaign_id}/agents
    method: PATCH
- name: update_campaign_agents_and_teams
  endpoint:
    path: /campaigns/{campaign_id}/agents
    method: PATCH
    data_selector: response
    params:
      campaign_id: integer
- name: change_campaign_status
  endpoint:
    path: /campaigns/{campaign_id}/operation
    method: POST
    data_selector: operation
    params:
      campaign_id: integer
- name: update_campaign_agents
  endpoint:
    path: /api/dialer/v1/campaigns/{campaign_id}/agents
    method: PATCH
- name: change_campaign_status
  endpoint:
    path: /api/dialer/v1/campaigns/{campaign_id}/operation
    method: POST
- name: change_campaign_status
  endpoint:
    path: /campaigns/{campaign_id}/operation
    method: POST
    data_selector: id
    params:
      campaign_id: campaign_id
- name: create_campaign
  endpoint:
    path: /campaigns
    method: POST
    data_selector: null
    params: {}
- name: change_campaign_status
  endpoint:
    path: /api/dialer/v1/campaigns/{campaign_id}/operation
    method: POST
- name: create_campaign
  endpoint:
    path: /api/dialer/v1/campaigns
    method: POST
- name: create_campaign
  endpoint:
    path: /campaigns
    method: POST
    data_selector: body
- name: campaign
  endpoint:
    path: /campaigns/{campaign_id}
    method: GET
    data_selector: response
    params: {}
- name: create_campaign
  endpoint:
    path: /api/dialer/v1/campaigns
    method: POST
- name: campaign
  endpoint:
    path: /campaigns/{campaign_id}
    method: GET
- name: campaign
  endpoint:
    path: /campaigns/{campaign_id}
    method: GET
    data_selector: response
    params: {}
- name: update_campaign
  endpoint:
    path: /update-campaign
    method: PATCH
    data_selector: uuid
- name: campaign
  endpoint:
    path: /campaigns/{campaign_id}
    method: GET
- name: update_campaign
  endpoint:
    path: /api/dialer/v1/campaigns/{campaign_id}
    method: PUT
- name: update_campaign
  endpoint:
    path: /reference/update-campaign-description
    method: PATCH
    data_selector: uuid
- name: update_campaign
  endpoint:
    path: /api/dialer/v1/campaigns/{campaign_id}
    method: PUT
    data_selector: ''
    params: {}
- name: send_whatsapp_messages
  endpoint:
    path: /sendwhatsappmessages
    method: POST
    data_selector: status
    params: {}
- name: send_whatsapp_messages
  endpoint:
    path: /api/v3/messages/whatsapp
    method: POST
- name: send_whatsapp_messages
  endpoint:
    path: /api/v3/messages/whatsapp
    method: POST
    data_selector: null
    params: {}
- name: templates
  endpoint:
    path: /
    method: GET
    data_selector: templates
    params:
      key: cc7c76b8987a27ab5...b89b00ab6c3
- name: whatsapp_messages
  endpoint:
    path: /api/v3/messages/whatsapp
    method: POST
- name: whatsapp_templates
  endpoint:
    path: /api/v3/messages/whatsapp/templates
    method: GET
- name: list_whatsapp_templates
  endpoint:
    path: /api/v3/messages/whatsapp/templates
    method: GET
    data_selector: templates
    params:
      key: cc7c76b8987a27ab5...b89b00ab6c3
- name: whatsapp_templates
  endpoint:
    path: /api/v3/messages/whatsapp/templates
    method: GET
- name: users
  endpoint:
    path: /api/user_management/v1/users
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/user_management/v1/users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /user_management/v1/users
    method: GET
    data_selector: value
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: value
    params: {}
- name: deleted_users
  endpoint:
    path: /deleted_users
    method: GET
    data_selector: value
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: value
    params: {}
- name: users
  endpoint:
    path: /api/user_management/v1/users
    method: GET
    data_selector: users
- name: deleted_users
  endpoint:
    path: /api/v2/cdr/deleted_agents
    method: GET
    data_selector: ''
    params:
      key: cc7c76b8987a27ab5...b89b00ab6c3
- name: users
  endpoint:
    path: /api/user_management/v1/users
    method: GET
- name: deleted_agents
  endpoint:
    path: /api/v2/cdr/deleted_agents
    method: GET
- name: deleted_users
  endpoint:
    path: /api/v2/cdr/deleted_agents
    method: GET
    data_selector: ''
    params:
      key: cc7c76b8987a27ab5...b89b00ab6c3
- name: deleted_agents
  endpoint:
    path: /api/v2/cdr/deleted_agents
    method: GET
- name: teams
  endpoint:
    path: /api/v2/cdr/teams
    method: GET
    data_selector: ''
    params:
      key: cc7c76b8987a27a...b00ab6c3
- name: teams
  endpoint:
    path: /api/v2/cdr/teams
    method: GET
    data_selector: '[]'
    params:
      key: cc7c76b8987a27ab5...b89b00ab6c3
- name: teams
  endpoint:
    path: /api/v2/cdr/teams
    method: GET
    data_selector: ''
    params: {}
- name: teams
  endpoint:
    path: /api/v2/cdr/teams
    method: GET
- name: wrap_up_codes
  endpoint:
    path: /wrapup_codes
    method: GET
    data_selector: records
    params:
      key: cc7c76b8987a27ab57...00ab6c3
- name: wrapup_codes
  endpoint:
    path: /cdr/wrapup_codes
    method: GET
    data_selector: '[].description'
    params:
      key: cc7c76b8987a27ab57...00ab6c3
- name: wrapup_codes
  endpoint:
    path: /api/v2/cdr/wrapup_codes
    method: GET
- name: wrapup_codes
  endpoint:
    path: /api/v2/cdr/wrapup_codes
    method: GET
    data_selector: records
- name: agents_status
  endpoint:
    path: /cc7c76b8b...b80ab6c3/agents_status
    method: GET
    data_selector: response
    params: {}
- name: agents_status
  endpoint:
    path: /cc7c76b8b...b80ab6c3/agents_status
    method: GET
    data_selector: '[]'
- name: agent_status
  endpoint:
    path: /agents_status
    method: GET
- name: agent_status
  endpoint:
    path: /agents_status
    method: GET
- name: queues
  endpoint:
    path: /api/v2/cdr/queues
    method: GET
    data_selector: records
    params:
      key: cc7c76b8987a27ab57...00ab6c3
- name: queues
  endpoint:
    path: /api/v2/cdr/queues
    method: GET
    data_selector: ''
    params:
      key: cc7c76b8987a27ab57...00ab6c3
- name: queues
  endpoint:
    path: /api/v2/cdr/queues
    method: GET
- name: queues
  endpoint:
    path: /api/v2/cdr/queues
    method: GET
- name: numbers
  endpoint:
    path: /numbers
    method: GET
    data_selector: numbers
    params:
      page: '1'
- name: numbers
  endpoint:
    path: /numbers
    method: GET
    data_selector: numbers
    params:
      page: '1'
- name: numbers
  endpoint:
    path: /api/numbers/v1/numbers
    method: GET
- name: numbers
  endpoint:
    path: /api/numbers/v1/numbers
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{uuid}/messages
    method: GET
    data_selector: messages
    params:
      uuid: string
      offset: string
      limit: string
- name: conversation_messages
  endpoint:
    path: /conversations/{uuid}/messages
    method: GET
    data_selector: messages
    params:
      uuid: required
      offset: optional
      limit: optional
- name: conversation_messages
  endpoint:
    path: /api/conversation/v1/conversations/{uuid}/messages
    method: GET
    data_selector: messages
- name: conversation_messages
  endpoint:
    path: /api/conversation/v1/conversations/{uuid}/messages
    method: GET
- name: scheduled_callback
  endpoint:
    path: /scheduled_callbacks
    method: POST
    data_selector: body
- name: create_scheduled_callbacks
  endpoint:
    path: /scheduled_callbacks
    method: POST
    data_selector: body
- name: scheduled_callback
  endpoint:
    path: /api/task/v1/scheduled_callbacks
    method: POST
- name: scheduled_callback
  endpoint:
    path: /api/task/v1/scheduled_callbacks
    method: POST
- name: failed_webhooks
  endpoint:
    path: /api/webhooks/v1/failures
    method: GET
    data_selector: failures
    params:
      start_date: '2024-06-01T00:00:00Z'
      end_date: '2024-06-30T23:59:59Z'
      page: 1
      limit: 50
- name: webhook_failures
  endpoint:
    path: /api/webhooks/v1/failures
    method: GET
    data_selector: failures
    params: {}
- name: webhook_failures
  endpoint:
    path: /api/webhooks/v1/failures
    method: GET
- name: webhook_failures
  endpoint:
    path: /api/webhooks/v1/failures
    method: GET
- name: webhook_retrigger
  endpoint:
    path: /api/webhooks/v1/failures/{id}/retrigger
    method: POST
    data_selector: status
    params: {}
- name: webhook_retrigger
  endpoint:
    path: /api/webhooks/v1/failures/{id}/retrigger
    method: POST
    data_selector: status
    params:
      id: UUID of the failed webhook event
- name: webhook_retrigger
  endpoint:
    path: /api/webhooks/v1/failures/{id}/retrigger
    method: POST
- name: webhook_retrigger
  endpoint:
    path: /api/webhooks/v1/failures/{id}/retrigger
    method: POST
- name: webhook_failures
  endpoint:
    path: /reference/listwebhookfailures
    method: GET
- name: webhook_retrigger
  endpoint:
    path: /reference/retriggerwebhookfailure
    method: POST
- name: agent_activity
  endpoint:
    path: /webhooks/agent/status
    method: POST
    data_selector: event
    params: {}
- name: call_events
  endpoint:
    path: /webhooks/call/events
    method: POST
    data_selector: event
    params: {}
- name: digital_interaction
  endpoint:
    path: /webhooks/digital/interactions
    method: POST
    data_selector: event
    params: {}
- name: webhook_failures
  endpoint:
    path: /reference/listwebhookfailures
    method: GET
- name: webhook_retrigger
  endpoint:
    path: /reference/retriggerwebhookfailure
    method: POST
- name: agent_status
  endpoint:
    path: /agent/status
    method: GET
    data_selector: data
- name: agent_status_update
  endpoint:
    path: /agentstatusupdate
    method: GET
- name: outbound_call_events
  endpoint:
    path: /reference/outbound-call-events
    method: GET
- name: inbound_call_events
  endpoint:
    path: /reference/inbound-call-events
    method: GET
- name: dialer_call_events
  endpoint:
    path: /reference/dialer-call-events
    method: GET
- name: outbound_call_answered
  endpoint:
    path: /reference/outbound-call-events
    method: POST
    data_selector: data
    params: {}
- name: outbound_call_hangup
  endpoint:
    path: /reference/outbound-call-events
    method: POST
    data_selector: data
    params: {}
- name: outbound_call_ended
  endpoint:
    path: /reference/outbound-call-events
    method: POST
    data_selector: data
    params: {}
- name: outbound.call.answered
  endpoint:
    path: /reference/outbound-call-events
    method: GET
    data_selector: data
    params: {}
- name: outbound.call.hangup
  endpoint:
    path: /reference/outbound-call-events
    method: GET
    data_selector: data
    params: {}
- name: outbound.call.ended
  endpoint:
    path: /reference/outbound-call-events
    method: GET
    data_selector: data
    params: {}
- name: inbound.call.answered
  endpoint:
    path: /inbound.call.answered
    method: POST
    data_selector: data
- name: inbound.call.hangup
  endpoint:
    path: /inbound.call.hangup
    method: POST
    data_selector: data
- name: inbound.call.ended
  endpoint:
    path: /inbound.call.ended
    method: POST
    data_selector: data
- name: inbound.call.answered
  endpoint:
    path: /inbound/call/answered
    method: POST
    data_selector: data
- name: inbound.call.hangup
  endpoint:
    path: /inbound/call/hangup
    method: POST
    data_selector: data
- name: inbound.call.ended
  endpoint:
    path: /inbound/call/ended
    method: POST
    data_selector: data
- name: dialer.call.answered
  endpoint:
    path: /reference/dialer-call-events
    method: GET
    data_selector: ''
    params: {}
- name: dialer.call.hangup
  endpoint:
    path: /reference/dialer-call-events
    method: GET
    data_selector: ''
    params: {}
- name: dialer.call.ended
  endpoint:
    path: /reference/dialer-call-events
    method: GET
    data_selector: ''
    params: {}
- name: dialer.call.answered
  endpoint:
    path: /reference/dialer-call-events
    method: POST
    data_selector: data
- name: dialer.call.hangup
  endpoint:
    path: /reference/dialer-call-events
    method: POST
    data_selector: data
- name: dialer.call.ended
  endpoint:
    path: /reference/dialer-call-events
    method: POST
    data_selector: data
- name: call_recording_events
  endpoint:
    path: /reference/call-recording-events
    method: GET
- name: call.recording.available
  endpoint:
    path: /reference/call-recording-events
    method: GET
    data_selector: event
    params: {}
- name: call_recording
  endpoint:
    path: /call-recording-events
    method: GET
    data_selector: data
    params: {}
- name: message.received
  endpoint:
    path: /reference/digital-interaction-events
    method: GET
    data_selector: data
- name: message.sent
  endpoint:
    path: /reference/digital-interaction-events
    method: GET
    data_selector: data
- name: conversation.ended
  endpoint:
    path: /reference/digital-interaction-events
    method: GET
    data_selector: data
- name: message.received
  endpoint:
    path: /reference/digital-interaction-events
    method: POST
    data_selector: data
    params: {}
- name: message.sent
  endpoint:
    path: /reference/digital-interaction-events
    method: POST
    data_selector: data
    params: {}
- name: conversation.ended
  endpoint:
    path: /reference/digital-interaction-events
    method: POST
    data_selector: data
    params: {}
- name: call.analytics.available
  endpoint:
    path: /reference/speech-analytics-events
    method: GET
    data_selector: data
    params: {}
- name: call.analytics.available
  endpoint:
    path: /reference/speech-analytics-events
    method: GET
    data_selector: data
    params: {}
- name: Call Notify
  endpoint:
    path: /reference/call-notify
    method: GET
    data_selector: payload
    params: {}
- name: call_notify
  endpoint:
    path: /webhook/call_notify
    method: GET
    data_selector: payload
    params: {}
- name: call_outcome
  endpoint:
    path: /reference/call-outcome-logging
    method: POST
    data_selector: payload
    params: {}
- name: call_outcome_logging
  endpoint:
    path: /reference/call-outcome-logging
    method: POST
    data_selector: payload
    params: {}
- name: call_details
  endpoint:
    path: /reference/raw-data-streaming-to-sqs
    method: POST
    data_selector: records
- name: call_details_record
  endpoint:
    path: /reference/raw-data-streaming-to-sqs
    method: POST
    data_selector: records
- name: security_events
  endpoint:
    path: /security/logs
    method: POST
    data_selector: events
- name: allowed_ip_events
  endpoint:
    path: /allowed_ip_events
    method: GET
    data_selector: events
    params: {}
- name: security_events
  endpoint:
    path: /security/logs
    method: POST
    data_selector: event
    params: {}
- name: allowed_ip_events
  endpoint:
    path: /allowed_ip_events
    method: GET
    data_selector: events
    params: {}
- name: call_recordings
  endpoint:
    path: /call-recordings
    method: POST
    data_selector: recordings
    params: {}
- name: call_recordings
  endpoint:
    path: /reference/call-recordings-replication-to-s3
    method: GET
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /api/user_management/v1/users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /api/user_management/v1/users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: value
    params: {}
- name: deleted_users
  endpoint:
    path: /deleted_users
    method: GET
    data_selector: value
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: value
    params: {}
- name: users
  endpoint:
    path: /user_management/v1/users
    method: GET
    data_selector: value
    params: {}
- name: startcall
  endpoint:
    path: /click2call
    method: POST
    data_selector: call_id
- name: startcall
  endpoint:
    path: /click2call
    method: POST
    data_selector: call_id
    params: {}
- name: cdr
  endpoint:
    path: /cdr
    method: GET
    data_selector: records
    params:
      key: a387aaf1f101fc...fe284aaf61
      page: 1
      per_page: 1000
      type: outbound
      start_date: '2023-12-12'
- name: records
  endpoint:
    path: /cdrs
    method: GET
    data_selector: records
- name: cdr
  endpoint:
    path: /api/v2/cdr
    method: GET
    data_selector: records
    params:
      key: a387aaf1f101fc...fe284aaf61
      page: 1
      per_page: 1000
      type: outbound
      start_date: '2023-12-12'
- name: records
  endpoint:
    path: /api/v1/records
    method: GET
    data_selector: records
- name: send_sms
  endpoint:
    path: /reference/createsms
    method: POST
    data_selector: sms_id
- name: send_whatsapp_messages
  endpoint:
    path: /sendwhatsappmessages
    method: POST
    data_selector: status
- name: send_sms
  endpoint:
    path: /reference/createsms
    method: POST
    data_selector: sms_id
    params: {}
- name: campaigns
  endpoint:
    path: /api/dialer/v1/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: balance
  endpoint:
    path: /cc7c76...b89bb6c3/balance
    method: GET
    data_selector: balance
- name: send_whatsapp_messages
  endpoint:
    path: /api/v3/messages/whatsapp
    method: POST
    data_selector: status
    params: {}
- name: wrap_up_codes
  endpoint:
    path: /api/v2/cdr/wrapup_codes
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: queues
  endpoint:
    path: /api/v2/cdr/queues
    method: GET
    data_selector: records
    params:
      key: cc7c76b8987a27ab57...00ab6c3
- name: balance
  endpoint:
    path: /{cluster_id}/balance
    method: GET
    data_selector: balance
    params: {}
- name: wrap_up_codes
  endpoint:
    path: /api/v2/cdr/wrapup_codes
    method: GET
    data_selector: ''
- name: numbers
  endpoint:
    path: /numbers
    method: GET
    data_selector: numbers
    params:
      page: '1'
- name: queues
  endpoint:
    path: /api/v2/cdr/queues
    method: GET
    data_selector: records
    params:
      key: cc7c76b8987a27ab57...00ab6c3
- name: conversation_messages
  endpoint:
    path: /conversations/{uuid}/messages
    method: GET
    data_selector: messages
    params:
      uuid: Required
      offset: Optional
      limit: Optional
- name: numbers
  endpoint:
    path: /numbers/v1/numbers
    method: GET
    data_selector: numbers
    params:
      page: '1'
- name: conversation_messages
  endpoint:
    path: /conversations/{uuid}/messages
    method: GET
    data_selector: messages
    params:
      uuid: required
      offset: optional
      limit: optional
- name: create_scheduled_callbacks
  endpoint:
    path: /scheduled_callbacks
    method: POST
    data_selector: body
    params:
      contact_number: string
      agent: string
      scheduled_time: string
- name: webhook_failures
  endpoint:
    path: /api/webhooks/v1/failures
    method: GET
    data_selector: failures
    params:
      start_date: '2024-06-01T00:00:00Z'
      end_date: '2024-06-30T23:59:59Z'
      page: 1
      limit: 50
- name: create_scheduled_callbacks
  endpoint:
    path: /scheduled_callbacks
    method: POST
    data_selector: null
    params: {}
- name: webhook_failures
  endpoint:
    path: /api/webhooks/v1/failures
    method: GET
    data_selector: failures
    params:
      start_date: '2024-06-01T00:00:00Z'
      end_date: '2024-06-30T23:59:59Z'
      page: 1
      limit: 50
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Voiso recommends using the 'user key' of a user with administrator permissions.
- You may only query CDRs for which access has been granted to you by your account
  privileges.
- 'Maximum contacts: Each Add contacts API call supports a maximum of 1000 new contacts.'
- 'Rate limiting: Wait at least two seconds after the first request is complete before
  invoking a second one.'
- A maximum of 1000 contacts per minute is allowed. This limit is shared with the
  corresponding PUT request.
- Maximum contacts for each Add contacts API call is 1000.
- Rate limiting recommends waiting at least two seconds between calls.
- The campaign ID must be obtained by using the List campaigns API request or from
  the Outbound > Campaigns page.
- The phone number must be specified in E.164 format without the preceding '+'.
- A maximum of 1000 contacts per minute is allowed. This limit is shared with the
  corresponding POST request.
- The user must have either 'Edit all campaigns' or 'Edit own campaigns' permission.
- There is a throttling limit of 50 API calls per second.
- There is a maximum of 100 recipients per API call per second. Additional recipients
  are rejected.
- A maximum of 50 requests per second and 100 messages per second are allowed.
- A maximum of 50 requests per second is allowed.
- Request, response, and authentication for this endpoint have been completely updated
  as of October 9, 2024.
- The request, response, and authentication for this endpoint have been completely
  updated as of October 9, 2024.
- The requesting user must be configured in your contact center.
- You must have at least one queue configured for your contact center.
- The Messages API requires the user API key in the request header.
- The API requires the UUID of the conversation.
- User must have specific permissions granted to access CDRs.
- Only secure HTTPS endpoint URLs are supported for webhooks to protect your data.
- Voiso expects an HTTP 200 status code to indicate a successful operation.
- The Agent Status events are triggered whenever an agent's activity status changes.
- Subscribe to this webhook on the Administration > Webhooks page.
- Webhooks notify your system of call lifecycle changes during a manual outbound call
  initiated by an agent.
- The wrap_up_code and notes fields are available only in the final event.
- This is the only event that includes wrap_up_code and notes.
- The dialer webhooks are triggered when a Dialer campaign call event occurs.
- This event is only triggered when enabled for contact centers on the Pro Plus plan
  that have call recording enabled.
- Use the sla block to track SLA compliance metrics across all digital interactions.
- The Speech Analytics webhook notifies your system when the transcription and scoring
  of a completed call are available.
- This webhook is deprecated and no longer recommended for use in new integrations.
- This simplex communication channel only sends information in one direction. You
  CANNOT retrieve any records using this interface.
- Voiso cannot interact with your data once it is on AWS SQS.
- This communication channel only streams the call recordings to your Amazon S3 bucket.
  Customers CANNOT retrieve any records via the interface.
- The click-to-call feature must be enabled for the agent's security access group.
- Returns a total count of records and pagination information
- WhatsApp only supports pre-approved message templates when sending messages to WhatsApp
  users.
- There is a maximum of 100 recipients per API call per second.
- Permissions must be granted to the user account to access CDRs.
errors:
- '400 Bad request: The request could not be completed due to a client-related error.'
- '401 Unauthorised: The request is unsuccessful as it lacks valid authentication
  credentials for the resource.'
- '403 Access forbidden: The user does not have the required permissions assigned
  to their role.'
- '404 Not Found: The requested resource or endpoint is not found.'
- '405 Method Not Allowed: The requested resource is found, but it does not support
  the HTTP method used.'
- 'Agent click2call disabled: Update permissions in the security access group'
- 'Invalid destination number: Verify the phone number is correct and in E.164 format'
- 'Invalid agent''s extension or agent login ID: The value specified for the agent
  parameter is invalid'
- 'Agent logged off: Ensure that agents are logged in to their Voiso account'
- 'Rate limit exceeded: There must be a minimum of 2 seconds between Startcall requests
  for an agent'
- 'Invalid API key: Check that you use the correct contact center API key'
- 'No active calls: There is no active call on the extension you specified.'
- 'Rate limit exceeded: The number of permitted requests per agent to the server is
  exceeded.'
- 'Invalid agent''s extension: The extension specified is either in the wrong format
  or is not assigned to any agent.'
- 'Invalid API key: Check that you are using the correct contact center API key.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Invalid key: Check your contact center API key'
- 'Invalid agent extension: Make sure the extension exists and is assigned to an agent'
- 'SenderID is not available: Ensure you have a configured Sender ID in your contact
  center'
- 'Invalid destination number: Must be in E.164 format (no `+` sign)'
- 'SMS body length must be 1-1600 chars: Applies to free-text messages only'
- 'The request must include a valid `template_id`: When using a template, `template.id`
  is required'
- 'The provided `template_params` do not match placeholders: Check that your `params`
  match the template''s placeholders exactly'
- 'SMS is not allowed / disabled for agent / rate limit etc.: General SMS restrictions
  or agent-level permissions'
- The API key specified is invalid
- 'Invalid api_key: Check that you are using the correct contact center API key.'
- Invalid API key
- 'Invalid Key: Check that you are using the correct user API key.'
- 'Campaign not found: The campaign ID specified does not exist or is not accessible.'
- 'Campaign type should be live: The Live campaign option is not enabled for the specified
  campaign.'
- 'Maximum limit of 1000 contacts for each request: Your POST request is attempting
  to add more than 1000 contacts.'
- 'Required contact field missing: Ensure that you have a phone number for every contact.'
- '401 Unauthorized: Recheck API keys'
- 'Campaign not found: Verify the campaign ID.'
- 'Campaign type should be live: Ensure the Live campaign option is enabled.'
- 'Maximum limit of 1000 contacts for each request: Split into multiple requests.'
- 'Required contact field missing - phoneNumber: Ensure every contact has a phone
  number.'
- 'Campaign not found: Verify the campaign ID or user access.'
- 'Campaign type should be live: Ensure Live campaign option is enabled.'
- 'Maximum limit of 1000 contacts for each request: Make multiple requests for more
  than 1000 contacts.'
- 'Invalid Key: Check that you are using the correct user API key'
- 'Campaign not found: Verify the campaign ID'
- 'Campaign type should be live: Ensure Live campaign option is enabled'
- 'Maximum limit of 1000 contacts for each request: Make multiple requests if adding
  more than 1000 contacts'
- 'Required contact field missing - phoneNumber: Ensure every contact has a phone
  number'
- 'Invalid Key: Verify that your token is correct and has not expired.'
- 'Campaign not found: Ensure the campaign ID exists and is accessible to your user.'
- 'No access: Your user does not have the correct permissions.'
- 'Nothing to update: Include at least one updatable field.'
- 'Invalid Key: Verify that your token is correct and has not expired'
- 'Campaign not found: Ensure the campaign ID exists and is accessible to your user'
- 'No access: Your user does not have the correct permissions'
- 'Nothing to update: Include at least one updatable field'
- 'Invalid Key: Verify that you are using the correct bearer token.'
- 'Campaign not found: The specified campaign ID does not exist or is not accessible.'
- 'Campaign must have at least one agent to start: Campaign missing required resources.'
- 'Operation not allowed: Invalid operation specified.'
- 'Campaign not found: The specified campaign ID does not exist or is not accessible
  to the user.'
- 'Operation not allowed: An unsupported operation is specified or the campaign is
  not in a state that allows the requested change.'
- 'Invalid Key: Ensure your API token is correct and active.'
- Campaign name must be unique
- Invalid time or timezone format
- Some agents or teams not found
- 'Invalid Key: Ensure your API token is correct and active'
- '401: Unauthorized - Missing or invalid bearer token.'
- '404: Campaign not found - No campaign exists with the specified ID.'
- '401 Unauthorized: Missing or invalid bearer token.'
- '404 Campaign not found: No campaign exists with the specified ID.'
- '400 Bad Request: Returned when the request is invalid or contains incorrect parameters.'
- '401 Unauthorized: Authentication failed. Check the Bearer token.'
- '404 Not Found: The campaign does not exist.'
- '500 Internal Server Error: Unexpected error occurred on the server.'
- Invalid destination
- Provide at least one destination number
- The agent settings for the requested sending are incorrect
- Invalid agent extension
- Parameter mismatch
- The message to this destination already exists
- API rate limit exceeded
- Invalid sender
- Invalid message template UUID
- Invalid 'template_uuid' for specified 'from' option
- The WhatsApp Outbound Messaging is disabled
- Rate limit exceeded
- 'Invalid User API Key: Check that you use the correct user API key.'
- Invalid User API Key
- 'Invalid User API Key: Check that you use the correct user API key'
- 'Invalid User API Key: Check that you are using the correct user API key.'
- 'Invalid User API Key: Check that you are using the correct user API key'
- 'Invalid key: Check that you are using the correct contact center API key'
- 'API rate limit exceeded: Reduce the number of API requests you send per second'
- '401 Unauthorized: Check if the user API key is correct.'
- 'Conversation not found: A conversation with the specified UUID could not be found.'
- 'Invalid API key: Check that you use the correct contact center API key.'
- 'Specified parameters are not valid: Check syntax of the parameters in the request.'
- 'No access to API: The user does not have the correct permissions set in their access
  group.'
- '404: Not found'
- Scheduled Callbacks feature is disabled
- Agent does not have access
- Invalid agent login ID
- Agent logged off
- 'contact_number: phone number is missing'
- 'contact_number: incorrect phone number'
- 'agent: agent is missing'
- 'agent: [email address] does not exist'
- 'time_zone: is not included in the list'
- 'scheduled_time: incorrect format. Use YYYY-MM-DDThh:mm:ssTZD (iso8601)'
- 'scheduled_time: should be in the future, but less than 30 days from now'
- 'scheduled_time: can''t be blank'
- Scheduled time hours should be between 08 and 22 in the specified time zone
- Scheduled time minutes should be either 00 or 30
- Scheduled time seconds should be 00
- 'context_notes: is too long (maximum is 64 characters)'
- Too many requests
- '404 Not found: The specified contact center was not found or the Scheduled Callback
  feature is not activated for the contact center.'
- 'Scheduled Callbacks feature is disabled: The Scheduled Callback feature must be
  enabled by an admin in the System Settings for your contact center.'
- 'Agent does not have access: The Scheduled Callback feature must be enabled for
  the agent.'
- 'Invalid agent login ID: The value specified for the agent parameter is invalid.'
- 'Agent logged off: The target agent is not logged in to their softphone.'
- 'The API key specified is invalid: Check that you use the correct contact center
  API key.'
- 'contact_number: phone number is missing: The contact_number parameter has no value.'
- 'contact_number: incorrect phone number: The phone number provided for the contact_number
  parameter is not valid.'
- 'agent: agent is missing: The agent parameter has no value.'
- 'agent: - [email address] does not exist: The login ID for the specified agent does
  not exist in the contact center.'
- 'time_zone: is not included in the list: Verify that you are using the correct time
  zone name.'
- 'scheduled_time: incorrect format: Ensure that the time you specify for the scheduled_time
  parameter follows the ISO 8601 standard format.'
- 'scheduled_time: should be in the future, but less than 30 days from now: The time
  specified for the scheduled_time parameter is either in the past or more than 30
  days in the future.'
- 'scheduled_time: can''t be blank: Enter a valid time following the ISO 8601 standard
  format.'
- 'Scheduled time hours should be between 08 and 22 in the specified time zone: Enter
  a time between 08h and 22h.'
- 'Scheduled time minutes should be either 00 or 30: Enter either 00 or 30 for minutes.'
- 'Scheduled time seconds should be 00: Enter 00 for seconds.'
- 'context_notes: is too long (maximum is 64 characters): The text specified for the
  context_notes parameter exceeds the 64 character limit.'
- 'Too many requests: The number of permitted requests to the server is exceeded.'
- start_date must be within the last 31 days
- end_date must be after start_date
- 'Invalid API key: Ensure the contact center API key is passed in the Authorization
  header.'
- 'start_date must be within the last 31 days: The start_date specified is too far
  in the past.'
- 'end_date must be after start_date: Check that the end_date is chronologically after
  the start_date.'
- No failed webhook found with ID {UUID}
- HTTP 200 status code is expected to indicate a successful operation.
- 'TIMEOUT: No response received, indicating a possible timeout or error.'
- 'INVALID_EVENT: The event type is not supported.'
- 'Agent click2call disabled: Update permissions in the security access group.'
- 'Invalid destination number: Verify the phone number is correct and in E.164 format.'
- 'Invalid agent''s extension or agent login ID: The value specified for the agent
  parameter is invalid.'
- 'Agent logged off: Ensure that agents are logged in to their Voiso account.'
- 'Rate limit exceeded: There must be a minimum of 2 seconds between Startcall requests
  for an agent.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid api_key: Check that you are using the correct contact center API key'
- '401 Unauthorized: Check API key validity.'
- '404 Not Found: Ensure the UUID is correct.'
- '401 Unauthorized: Recheck API key or permissions'
- 'Invalid agent login ID: The agent''s login ID is invalid.'
- 'contact_number: incorrect phone number: The phone number provided is not valid.'
- 'agent: [email address] does not exist: The login ID for the specified agent does
  not exist.'
- 'scheduled_time: incorrect format. Use YYYY-MM-DDThh:mm:ssTZD (iso8601): Ensure
  that the scheduled_time parameter follows the ISO 8601 format.'
- 'scheduled_time: should be in the future, but less than 30 days from now: The specified
  time is either in the past or more than 30 days in the future.'
- 'scheduled_time: can''t be blank: Enter a valid time following the ISO 8601 format.'
- 'context_notes: is too long (maximum is 64 characters): The context_notes parameter
  exceeds the character limit.'
- 'Not found: specified contact center was not found or the Scheduled Callback feature
  is not activated'
- 'Scheduled Callbacks feature is disabled: must be enabled by an admin in the System
  Settings'
- 'Agent does not have access: must enable Scheduled Callback permission for the security
  access group'
- 'Invalid agent login ID: the value specified for the agent parameter is invalid'
- 'Agent logged off: target agent is not logged in to their softphone'
- 'The API key specified is invalid: check the correct contact center API key'
- 'agent: email address does not exist'
- 'Too many requests: the number of permitted requests to the server is exceeded'
auth_info:
  mentioned_objects: []
client:
  base_url: https://cluster1.contact_center_name.com/api/v1
  auth:
    type: apikey
  headers:
    Content-Type: application/json
source_metadata: null
