resources:
- name: clips
  endpoint:
    path: /clips
    method: GET
    data_selector: items
    params: {}
- name: catalogs
  endpoint:
    path: /catalogs
    method: GET
    data_selector: items
    params: {}
- name: session
  endpoint:
    path: /session
    method: GET
    data_selector: data
    params: {}
- name: uploads
  endpoint:
    path: /uploads
    method: POST
    data_selector: uploadSession
    params: {}
- name: sourcemedia
  endpoint:
    path: /sourcemedia
    method: GET
    data_selector: sourceMedia
    params: {}
- name: chat_channels
  endpoint:
    path: /chat/channels
    method: GET
    data_selector: channels
    params: {}
- name: chat_boxes
  endpoint:
    path: /chat/boxes
    method: GET
    data_selector: messageBoxes
    params: {}
- name: channels
  endpoint:
    path: /chat/channels
    method: GET
- name: boxes
  endpoint:
    path: /chat/boxes
    method: GET
- name: clips
  endpoint:
    path: /api/clips
    method: GET
    data_selector: clips
    params: {}
- name: catalogs
  endpoint:
    path: /api/catalogs
    method: GET
    data_selector: catalogs
    params: {}
- name: media_metadata
  endpoint:
    path: /media/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: import_warnings
  endpoint:
    path: /import/warnings
    method: GET
    data_selector: warnings
    params: {}
- name: media_files
  endpoint:
    path: /media/files
    method: GET
    data_selector: files
    params: {}
- name: proxies
  endpoint:
    path: /media/proxies
    method: GET
    data_selector: proxies
    params: {}
- name: thumbnails
  endpoint:
    path: /media/thumbnails
    method: GET
    data_selector: thumbnails
    params: {}
- name: Import
  endpoint:
    path: /import
    method: POST
    data_selector: media
    params: {}
- name: Export
  endpoint:
    path: /export
    method: POST
    data_selector: clips
    params: {}
- name: SbsMuPDF
  endpoint:
    path: /sbsmupdf
    method: POST
    data_selector: results
- name: page
  endpoint:
    path: /catdv/page
    method: GET
    data_selector: records
    params: {}
- name: media_importer
  endpoint:
    path: /import/media
    method: POST
    data_selector: clips
- name: catalog_sync
  endpoint:
    path: /catalog/sync
    method: POST
    data_selector: catalogs
- name: info
  endpoint:
    path: /info
    method: GET
    data_selector: data
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: data
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: data
- name: submit
  endpoint:
    path: /submit
    method: POST
    data_selector: data
- name: update_task
  endpoint:
    path: /tasks
    method: PUT
    data_selector: data
- name: delete_task
  endpoint:
    path: /tasks
    method: DELETE
    data_selector: data
- name: worker_extension
  endpoint:
    path: /extensions
    method: POST
    data_selector: plugin
    params: {}
- name: GPU Proxy
  endpoint:
    path: /Edit Presets
    method: POST
    data_selector: preset
    params:
      based_on_template: MP4
- name: accounts
  endpoint:
    path: /ManageActiveScaleArchive/accounts
    method: GET
- name: service_command
  endpoint:
    path: /ManageActiveScaleArchive/serviceCommand
    method: GET
- name: job
  endpoint:
    path: /services/data/vXX.X/sobjects/Job
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: clip
  endpoint:
    path: /services/data/vXX.X/sobjects/Clip
    method: GET
    data_selector: records
    params: {}
- name: archive_service
  endpoint:
    path: /archiving/service
    method: POST
    data_selector: service_status
    params: {}
- name: archive_status
  endpoint:
    path: /archive/status
    method: GET
    data_selector: archive_status
- name: job_queue
  endpoint:
    path: /job/queue
    method: GET
    data_selector: jobs
- name: tape_details
  endpoint:
    path: /tape/details
    method: GET
    data_selector: tapes
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Index Faces
  endpoint:
    path: /services/rekognition/indexfaces
    method: POST
- name: Submit Transcription Job
  endpoint:
    path: /submit/transcription
    method: POST
    data_selector: transcriptionResponse
- name: Retrieve Transcription Job
  endpoint:
    path: /retrieve/transcription
    method: GET
    data_selector: transcriptionResult
- name: translate
  endpoint:
    path: /translate
    method: POST
- name: DetectFaces
  endpoint:
    path: /detect-faces
    method: POST
- name: SearchFacesByImage
  endpoint:
    path: /search-faces-by-image
    method: POST
- name: Submit Rekognition Job
  endpoint:
    path: /rekognition/submit-job
    method: POST
- name: Retrieve Rekognition Job
  endpoint:
    path: /rekognition/retrieve-job
    method: GET
- name: Microsoft Office Docs
  endpoint:
    path: /view/microsoft-office-docs
    method: GET
    data_selector: documents
- name: User Defined Fields
  endpoint:
    path: /services/data/vXX.X/sobjects/UserDefinedFields
    method: GET
    data_selector: records
    params: {}
- name: Pick Lists
  endpoint:
    path: /services/data/vXX.X/sobjects/PickLists
    method: GET
    data_selector: records
    params: {}
- name: thumbnails
  endpoint:
    path: /thumbnails
    method: POST
    data_selector: thumbnails
    params: {}
- name: Worker Action
  endpoint:
    path: /worker/action
    method: POST
    data_selector: result
    params: {}
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: photos
- name: marker_categories
  endpoint:
    path: /marker/categories
    method: POST
    data_selector: records
    params: {}
- name: apply_subtitle
  endpoint:
    path: /apply/subtitle
    method: POST
    data_selector: records
    params: {}
- name: catalogs
  endpoint:
    path: /api/9/catalogs
    method: GET
    data_selector: data
- name: session
  endpoint:
    path: /api/9/session
    method: GET
    data_selector: data
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: web_socket_notifications
  endpoint:
    path: /catdv/notifications
    method: GET
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: records
- name: fieldgroups
  endpoint:
    path: /fieldgroups
    method: GET
    data_selector: records
- name: fields
  endpoint:
    path: /fields
    method: GET
    data_selector: records
- name: viewsets
  endpoint:
    path: /viewsets
    method: GET
    data_selector: records
- name: views
  endpoint:
    path: /views
    method: GET
    data_selector: records
- name: panelsets
  endpoint:
    path: /panelsets
    method: GET
    data_selector: records
- name: panels
  endpoint:
    path: /panels
    method: GET
    data_selector: records
- name: formsets
  endpoint:
    path: /formsets
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: mediastores
  endpoint:
    path: /mediastores
    method: GET
    data_selector: records
- name: mediastores
  endpoint:
    path: /mediastores
    method: GET
- name: mediastore_pathtypes
  endpoint:
    path: /mediastores/pathtypes
    method: GET
- name: mediastore_downloadtypes
  endpoint:
    path: /mediastores/downloadtypes
    method: GET
- name: mediastore_by_id
  endpoint:
    path: /mediastores/<mediastore_id>
    method: GET
- name: create_mediastore
  endpoint:
    path: /mediastores
    method: POST
- name: create_pathtype
  endpoint:
    path: /mediastores/pathtypes
    method: POST
- name: add_path_to_mediastore
  endpoint:
    path: /mediastores/<mediastore_id>/paths
    method: POST
- name: update_mediastore
  endpoint:
    path: /mediastores/<mediastore_id>
    method: PUT
- name: update_pathtype
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: PUT
- name: update_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: PUT
- name: delete_mediastore
  endpoint:
    path: /mediastores/<mediastore_id>
    method: DELETE
- name: delete_pathtype
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: DELETE
- name: delete_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: DELETE
- name: mediastores
  endpoint:
    path: /mediastores
    method: GET
- name: mediastore_path_types
  endpoint:
    path: /mediastores/pathtypes
    method: GET
- name: mediastore_download_types
  endpoint:
    path: /mediastores/downloadtypes
    method: GET
- name: mediastore_by_id
  endpoint:
    path: /mediastores/<mediastore_id>
    method: GET
- name: create_mediastore
  endpoint:
    path: /mediastores
    method: POST
- name: create_mediastore_path_type
  endpoint:
    path: /mediastores/pathtypes
    method: POST
- name: create_mediastore_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths
    method: POST
- name: update_mediastore
  endpoint:
    path: /mediastores/<mediastore_id>
    method: PUT
- name: update_mediastore_path_type
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: PUT
- name: update_mediastore_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: PUT
- name: delete_mediastore
  endpoint:
    path: /mediastores/<mediastore_id>
    method: DELETE
- name: delete_mediastore_path_type
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: DELETE
- name: delete_mediastore_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: DELETE
- name: mediastores
  endpoint:
    path: /mediastores
    method: GET
    data_selector: records
- name: mediastore_path_types
  endpoint:
    path: /mediastores/pathtypes
    method: GET
    data_selector: records
- name: mediastore_download_types
  endpoint:
    path: /mediastores/downloadtypes
    method: GET
    data_selector: records
- name: mediastore_by_id
  endpoint:
    path: /mediastores/<mediastore_id>
    method: GET
    data_selector: records
- name: create_mediastore
  endpoint:
    path: /mediastores
    method: POST
    data_selector: records
- name: create_mediastore_path_type
  endpoint:
    path: /mediastores/pathtypes
    method: POST
    data_selector: records
- name: create_mediastore_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths
    method: POST
    data_selector: records
- name: update_mediastore
  endpoint:
    path: /mediastores/<mediastore_id>
    method: PUT
    data_selector: records
- name: update_mediastore_path_type
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: PUT
    data_selector: records
- name: update_mediastore_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: PUT
    data_selector: records
- name: delete_mediastore
  endpoint:
    path: /mediastores/<mediastore_id>
    method: DELETE
    data_selector: records
- name: delete_mediastore_path_type
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: DELETE
    data_selector: records
- name: delete_mediastore_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: DELETE
    data_selector: records
- name: media_store
  endpoint:
    path: /mediastores
    method: GET
    data_selector: records
- name: media_store_path_type
  endpoint:
    path: /mediastores/pathtypes
    method: GET
    data_selector: records
- name: media_store_download_type
  endpoint:
    path: /mediastores/downloadtypes
    method: GET
    data_selector: records
- name: media_store_by_id
  endpoint:
    path: /mediastores/<mediastore_id>
    method: GET
    data_selector: records
- name: create_media_store
  endpoint:
    path: /mediastores
    method: POST
    data_selector: records
- name: create_media_store_path_type
  endpoint:
    path: /mediastores/pathtypes
    method: POST
    data_selector: records
- name: create_media_store_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths
    method: POST
    data_selector: records
- name: update_media_store
  endpoint:
    path: /mediastores/<mediastore_id>
    method: PUT
    data_selector: records
- name: update_media_store_path_type
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: PUT
    data_selector: records
- name: update_media_store_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: PUT
    data_selector: records
- name: delete_media_store
  endpoint:
    path: /mediastores/<mediastore_id>
    method: DELETE
    data_selector: records
- name: delete_media_store_path_type
  endpoint:
    path: /mediastores/pathtypes/<mediastorepathtype_id>
    method: DELETE
    data_selector: records
- name: delete_media_store_path
  endpoint:
    path: /mediastores/<mediastore_id>/paths/<mediapath_id>
    method: DELETE
    data_selector: records
- name: custom_objects
  endpoint:
    path: /objects
    method: GET
    data_selector: CustomObjects
    params: {}
- name: custom_objects
  endpoint:
    path: /objects
    method: GET
    data_selector: data
notes:
- CatDV works as a 30-day limited-functionality demo until you purchase a license.
- CatDV includes a copy of the open source FFmpeg application, invoked through the
  command line interface, which it uses for transcoding.
- A number of old players are now obsolete and have been removed.
- Summary mode is a legacy feature that may not be useful in modern workflows.
- Some features are specific to QuickTime .MOV files.
- Requires setup of CatDV Workgroup Server or Enterprise Server
- Users need to log on to access the server with user name and password
- Roles are a new feature in CatDV 9.
- You can keep the old permissions scheme by unchecking the 'User roles' option in
  the Server Control Panel.
- Some features may require a Pegasus Client or a CatDV MXF license.
- Notifications require Server 7.3.4, CatDV 13.0a6, and Worker 7.0.11 or 8.0b6, or
  later.
- SbsMuPDF is a command line utility for rendering PDF documents.
- Specify the server hostname and other details under the CatDV Server tab.
- Enter a valid worker node license by entering the user name and activation code
  under the License tab.
- Uses various importers for different media file types
- Supports batch file importing via CatDV XML format
- 'Although none of the fields are mandatory when importing a clip, in order to create
  a useful clip (without relying on CatDV or the Worker analysing a media file) as
  a minimum you should ideally provide all the following: <name>, <type>, <timecodeFormat>,
  <in>, <out> (or <duration>), plus a <media> object with <filePath>, <video> and
  <audio> elements.'
- Up to three external commands can be performed, at different stages in the processing.
- You can pass parameters to the external command via command line using a variable
  expression.
- The ‘catdv’ command line tool is now considered legacy and doesn’t support http
  or https connections.
- The REST API is disabled by default. To use it, enable the REST service in the worker
  config editor.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The worker service can run as a local session service or a background system service.
- The worker configuration is stored in a config.xml file.
- The worker service implements an HTTP REST API for monitoring.
- JavaScript support is not an end user feature and is provided for the use of the
  Square Box professional services team or by approved resellers and systems integrators.
- The features described are subject to change without notice.
- Technical support on JavaScript will normally constitute chargeable work.
- The use of JavaScript worker plugins, other than in development mode, will normally
  require a deployment license.
- Each extension function is defined by a .jx (or .jxe) JavaScript file.
- The 'batchMode' flag should be set to true if the extension can be used in bulk
  query.
- JavaScript within a web browser is single threaded and system calls are not allowed
  to block, so only asynchronous calls like callRestAPIAsync() that provide the results
  via a callback function can be used from there.
- Within the desktop client you can make both synchronous and asynchronous calls but
  should avoid making any synchronous calls from UI scripts, both because they can
  cause the UI to lock up and because they will prevent the script running in the
  web interface.
- It is always best to use the latest Graphics driver for your NVidia CUDA card
- GPU virtualization in Docker containers is a specialist area and so beyond the scope
  of normal CatDV support
- An account which is in use must be unlocked before it can be updated or deleted.
- Restore can overwrite read only files.
- This plugin supports the transfer of files between CatDV and Amazon S3.
- The plugin supports the restore of files that were automatically transferred to
  Glacier cold storage.
- Some objects like Clip may return nulls in deeply nested fields
- Fix to ensure plugin calls server rest API as /catdv/api/... instead of /api/...
  to prevent failed calls due to redirection of POST requests in some environments
- This S3 plugin does NOT support the direct transfer of files between CatDV and a
  Glacier Vault.
- The support for KMS encryption only works with Amazon S3, not with S3 compatible
  interfaces to other cloud services.
- 'IMPORTANT: If the encryption settings for a service account are changed after the
  account has been used to archive files, subsequent restores may be unable to decrypt
  those files.'
- 'IMPORTANT: Note that all purges are now carried out via scheduled jobs.'
- If any worker configuration relies on the assumption that a completed purge action
  means that the file(s) have been purged, it will need to be adjusted.
- Requires CatDV Server 10.1.2 or later
- Requires Archiware 5.6 or later
- Archiware does not support Windows UNC paths.
- Each Media Store is intended to represent a distinct segment of physical storage.
- Check whether any worker actions are impacted by the change to compound archive
  status for clips with members
- Add created date to job table on plugin UI job queue.
- Stop cascading Archiware job progress messages from parent down to child jobs, to
  reduce clip metadata updates.
- Implement rudimentary job progress updates for AW archive jobs (based on total size
  transferred from job report). Archiware does not support this, so these depend on
  the format of the job report and may not always work.
- Change status order in compound archive status for clips with members. The ‘complete’
  status will now always appear last if failed or other are present, e.g. 'Copy failed:1,
  other:2, complete:2'. This means that the text 'Copy complete' or 'Move complete'
  will only be present when all the clip members have been archived. This is to prevent
  worker queries from matching queries for 'xxx complete' when not all members have
  been archived.
- Fix to prevent overridden archive location from being erroneously recorded as a
  mirrored path when job is run
- Fix clip queries for 'View ... Jobs for Clip(s)' to try to address out of memory
  issue.
- Fix for occasional collation error running some helper DB scripts
- Fix for handling clip not found, as exception throw appears to have changed in server
  10.5
- Fix to enable files on Windows marked as read-only to be purged
- 'IMPORTANT: Account updates should be a rare occurrence.'
- When the host cannot be contacted, any call to Azure hangs for at least two minutes
  before timing out with an error.
- Fix for archiving files from a mapped media path
- Fix to exclude service paths when looking for a writable path for restore
- Amend the mechanism to get the next job to process to try and prevent an infinite
  loop for clips with corrupt archive data. NB jobs for such clips will be consistently
  skipped and need to be cancelled. The only indication of this will be info entries
  in the logs (it isn’t necessary for plugin debug to be on to see these).
- A BackBlaze account is required to use the plugin.
- Files in a private bucket can only be accessed via the console or using the application
  key.
- Restore jobs don't give progress updates. This is a limitation of the B2 Java SDK.
- A network outage causes the archive service to block for 2 minutes. This is a limitation
  of the B2 Java SDK.
- Each BlackPearl bucket has a data policy applied, for example ‘Single Copy on Tape’
  or ‘Dual Copy on Tape’. By default, the pre-configured data policies typically have
  versioning turned off, which means any attempt to write to the same path on the
  BlackPearl more than once will generate a 409 OBJECT_ALREADY_EXISTS error.
- To avoid having duplicate index entries for files with the same path and name from
  different drives, make sure they are mapped to either distinct BlackPearl buckets
  or distinct folders within the same BlackPearl bucket.
- This download depends on a registration code to function in normal operation but
  can be tested without a valid license by putting the worker into 'Development Mode'.
- By default all of the options in the processing steps are pre-defined to Mac settings.
- SbsMuPDF is a simple open source command line utility for rendering a PDF document
  and extracting a specified page as an uncompressed bitmap.
- Uses AWS Rekognition for face indexing.
- Ensure high-quality, well-lit images for accurate indexing.
- IAM access keys with permissions for the associated services (matching the region
  of the S3 volume)
- An S3 bucket with read-write permissions.
- An IAM user with access to AWS’s AI services (e.g. rekognition, transcribe, translate)
- AWS keeps the results for 7 days.
- The identifier for S3 volume must be enclosed in square brackets [].
- Apply Custom Face Detection Only to Relevant Images
- Filter Images Before Running Rekognition
- Batch Process Images Efficiently
- Monitor and Analyze Costs Regularly
- Video analysis can become expensive at scale.
- The way results are displayed depends on the various parameter settings.
- Adjusting the minimum confidence and marker interval plus whether to allow or disallow
  repeat matches can drastically change the output.
- The failed action should indicate if it’s an Amazon error or something else.
- 'If you see anything around ‘Error 403: Access Denied’ the most likely issue is
  that the IAM credentials provided do not have the correct permissions for the requested
  task.'
- The only field which end users should be concerned with on a day to day basis is
  the job status field which shows “IN_PROGRESS” or “SUCCEEDED” depending on the state
  of the job.
- 'CatDV user field identifier must use ‘.’ rather than ‘:’ as the namespace separator
  – e.g.: use xmpDM.cameraLabel rather than xmpDM:cameraLabel (i.e. dot rather than
  colon)'
- Nested xmpDM identifiers (e.g., Start Timecode, Duration) are not currently supported.
- At the time of writing there is compatibility issue with the latest version Adobe
  Extension Manager and the Adobe Premiere Panel Plug-in (v2.0.11).
- This is an open source tool, and our technical team have informally reviewed the
  source code (for malware etc).
- Requires CatDV Pegasus Server 10.7.0 or later
- Requires LibreOffice 24.8.4 or later
- SbsMuPDF must be configured
- CatDV is extremely flexible and offers many default catalogue views.
- Event Markers allow you to add comments or markers to individual frames or a range
  within a clip.
- You can rename the Category Name by double clicking it.
- If you delete a marker that has been used in previous catalogues it will still be
  available to view in the event markers tab in the summary details panel but the
  colour will reset to white.
- Thumbnails by default are set to be created on ingest this can be configured in
  the Preferences menu Proxies and Thumbnails.
- It is encouraged to keep the thumbnails small to medium in order to keep the database
  efficient.
- Requires Python installed on workstation.
- User defined field 'User1' must be configured to read 'FileTag'.
- Uses CatDV for managing digital photos
- Photos can be exported to iPad for convenient viewing
- WARNING this is a really powerful tool and with great power comes great responsibility
  (and the ability to really mess things up) so please be sure you understand the
  risks when using THE BULK EDIT tool
- There is no undo function
- Use of the REST API indicates agreement of the licensing condition.
errors:
- 'Timecode jump: Indicates that the DV timecode in the captured movie is not strictly
  continuous.'
- 'Dropped frame(s) between ? and ?: Indicates shorter timecode errors of just a few
  frames.'
- 'Audio sample rate mismatch: Indicates that the sample rate of the audio track doesn''t
  agree with that originally recorded in the DV stream.'
- 'FILE_NOT_FOUND: Check if the media file exists.'
- 'MEMORY_LIMIT_EXCEEDED: Reduce the number of open catalogs or memory usage.'
- 'MISSING_XYZ: Return ''Missing xyz'' if params[''xyz''] is not provided.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check API user credentials'
- '500 Internal Server Error: Contact support'
- Archiware NOT accessible / IO Error executing Archiware command.
- 'Failed to add file to Archiware job, Archiware command failed: cli: unknown meta
  key: ''user_file_size'''
- Network issue or invalid account name may lead to a generic error message.
- Call to Azure may block for several minutes.
- 'Index Error: Poor quality or no face detected.'
- 'RESULT_NOT_FOUND: The transcription results are no longer available.'
- 'INVALID_PARAMETER: Check input parameters for correctness.'
- '401 Unauthorized: Recheck API keys or token expiration'
- 'RESULT_NOT_AVAILABLE: Results are no longer available after 7 days.'
- 'Error 403: Access Denied - the IAM credentials provided do not have the correct
  permissions for the requested task.'
- 'AUTH: Authentication Required'
auth_info:
  mentioned_objects:
  - User
  - Group
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://www.quantum.com/
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
