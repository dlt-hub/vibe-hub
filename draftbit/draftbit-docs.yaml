resources:
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: Google Maps
  endpoint:
    path: /google/maps
    method: GET
    data_selector: maps
    params: {}
- name: OpenAI
  endpoint:
    path: /openai
    method: GET
    data_selector: openai
    params: {}
- name: GitHub
  endpoint:
    path: /github
    method: GET
    data_selector: github
    params: {}
- name: Apple App Store
  endpoint:
    path: /apple/app/store
    method: GET
    data_selector: app_store
    params: {}
- name: Google Play Store
  endpoint:
    path: /google/play/store
    method: GET
    data_selector: play_store
    params: {}
- name: screen
  endpoint:
    path: /screens
    method: GET
    data_selector: screens
    params: {}
- name: View
  endpoint:
    path: /docs/view
    method: GET
    data_selector: none
    params: {}
- name: Button
  endpoint:
    path: /docs/buttons
    method: GET
- name: icon_button
  endpoint:
    path: /docs/icon-button
    method: GET
    data_selector: component_properties
- name: Pressable
  endpoint:
    path: /docs/pressable
    method: GET
    data_selector: component
- name: Keyboard Avoiding View
  endpoint:
    path: /docs/keyboard-avoiding-view
    method: GET
    data_selector: component
    params: {}
- name: Configuration Properties
  endpoint:
    path: /docs/keyboard-aware-scroll-view/configuration-properties
    method: GET
    data_selector: properties
    params: {}
- name: Style Properties
  endpoint:
    path: /docs/keyboard-aware-scroll-view/style-properties
    method: GET
    data_selector: styles
    params: {}
- name: Center
  endpoint:
    path: /docs/view
    method: GET
    data_selector: default_styling
- name: Circle
  endpoint:
    path: /docs/circle
    method: GET
- name: Square
  endpoint:
    path: /Square
    method: GET
- name: Z Stack
  endpoint:
    path: /docs/z-stack
    method: GET
    data_selector: children
- name: Accordion
  endpoint:
    path: /docs/accordion
    method: GET
- name: Image
  endpoint:
    path: /docs/image
    method: GET
    data_selector: records
- name: Image Background
  endpoint:
    path: /docs/rest-services-endpoints
    method: GET
    data_selector: records
    params: {}
- name: Lottie Animation
  endpoint:
    path: /docs/lottie
    method: GET
- name: AudioPlayerConfig
  endpoint:
    path: /audio/player/config
    method: GET
    data_selector: config
    params: {}
- name: youtube_player
  endpoint:
    path: /docs/youtube-player
    method: GET
    data_selector: video_url
    params: {}
- name: video
  endpoint:
    path: /youtube/player
    method: GET
    data_selector: video_id
    params: {}
- name: playlist
  endpoint:
    path: /youtube/playlist
    method: GET
    data_selector: playlist_id
    params: {}
- name: List
  endpoint:
    path: /docs/rest-services-endpoints
    method: GET
    data_selector: data
    params: {}
- name: FlashList
  endpoint:
    path: /docs/flash
    method: GET
    data_selector: items
    params: {}
- name: Masonry List
  endpoint:
    path: /docs/masonry-list
    method: GET
    data_selector: data
    params: {}
- name: section_header
  endpoint:
    path: /docs/section-header
    method: GET
    data_selector: records
    params: {}
- name: Table
  endpoint:
    path: /docs/rest-api-services
    method: GET
    data_selector: data
    params: {}
- name: number_input
  endpoint:
    path: /docs/number-input
    method: GET
    data_selector: records
    params: {}
- name: styled_text_field
  endpoint:
    path: /docs/styled-text-field
    method: GET
    data_selector: configuration_properties
    params: {}
- name: styled_text_area
  endpoint:
    path: /docs/styled-text-area
    method: GET
    data_selector: configuration_properties
    params: {}
- name: Picker
  endpoint:
    path: /docs/picker
    method: GET
    data_selector: records
- name: date_picker
  endpoint:
    path: /docs/date-picker
    method: GET
    data_selector: date_picker_data
    params: {}
- name: Multi-Select Picker
  endpoint:
    path: /docs/multi-select-picker
    method: GET
    data_selector: options
    params: {}
- name: pin_input
  endpoint:
    path: /docs/pin-input
    method: GET
    data_selector: component
    params: {}
- name: form_controls
  endpoint:
    path: /docs/form-controls
    method: GET
    data_selector: components
    params: {}
- name: Switch
  endpoint:
    path: /docs/switch
    method: GET
    data_selector: value
    params: {}
- name: Switch Row
  endpoint:
    path: /docs/switch-row
    method: GET
    data_selector: properties
    params: {}
- name: Checkbox
  endpoint:
    path: /docs/rest-api-services
    method: GET
    data_selector: records
    params: {}
- name: Radio Button
  endpoint:
    path: /docs/radio-button
    method: GET
    data_selector: components
    params: {}
- name: Radio Button Row
  endpoint:
    path: /docs/radio-button-row
    method: GET
- name: Radio Button Row
  endpoint:
    path: /docs/radio-button-row
    method: GET
- name: Slider
  endpoint:
    path: /docs/slider
    method: GET
- name: Slider
  endpoint:
    path: /docs/slider
    method: GET
    data_selector: records
- name: Star Rating
  endpoint:
    path: /path/to/star-rating
    method: GET
    data_selector: rating
    params: {}
- name: Stepper
  endpoint:
    path: /docs/stepper
    method: GET
    data_selector: Configuration Properties
    params: {}
- name: Map View
  endpoint:
    path: /docs/map
    method: GET
- name: Map Marker
  endpoint:
    path: /docs/map-marker
    method: GET
- name: Map Callout
  endpoint:
    path: /docs/map-callout
    method: GET
- name: Map Marker Cluster
  endpoint:
    path: /docs/map-marker-cluster
    method: GET
- name: Map Marker Cluster View
  endpoint:
    path: /docs/map-marker-cluster-view
    method: GET
- name: Map Circle
  endpoint:
    path: /docs/map-circle
    method: GET
- name: Map Marker
  endpoint:
    path: /docs/map-marker
    method: GET
- name: Map Callout
  endpoint:
    path: /docs/map-callout
    method: GET
- name: Map Marker Cluster
  endpoint:
    path: /docs/map-marker-cluster
    method: GET
- name: Map Marker Cluster
  endpoint:
    path: /docs/map-marker-cluster
    method: GET
    data_selector: component
    params: {}
- name: Map Circle
  endpoint:
    path: /docs/map-circle
    method: GET
    data_selector: data
    params: {}
- name: Deck Swiper
  endpoint:
    path: /docs/deck-swiper
    method: GET
- name: Swiper
  endpoint:
    path: /docs/swiper
    method: GET
- name: Tab View
  endpoint:
    path: /docs/tab-view
    method: GET
- name: SwiperItem Data
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Swiper Item
  endpoint:
    path: /docs/swiper-item
    method: GET
- name: deck_swiper
  endpoint:
    path: /docs/deck-swiper
    method: GET
    data_selector: cards
    params: {}
- name: Deck Swiper Card
  endpoint:
    path: /docs/deck-swiper-card
    method: GET
- name: Tab View
  endpoint:
    path: /docs/tab-view
    method: GET
    data_selector: components
    params: {}
- name: modal
  endpoint:
    path: /docs/modal
    method: GET
- name: bottom_sheet
  endpoint:
    path: /docs/bottom-sheet
    method: GET
- name: action_sheet
  endpoint:
    path: /docs/action-sheet
    method: GET
- name: Action Sheet
  endpoint:
    path: /docs/action-sheet
    method: GET
- name: Action Sheet Item
  endpoint:
    path: /docs/action-sheet-item
    method: GET
    data_selector: components
    params: {}
- name: ActionSheetCancel
  endpoint:
    path: /docs/action-sheet-cancel
    method: GET
    data_selector: components
    params: {}
- name: Activity Indicator
  endpoint:
    path: /docs/activity-indicator
    method: GET
- name: Linear Progress
  endpoint:
    path: /docs/linear-progress
    method: GET
- name: Circular Progress
  endpoint:
    path: /docs/circular-progress
    method: GET
- name: Web View
  endpoint:
    path: /docs/web-view
    method: GET
- name: HTML View
  endpoint:
    path: /docs/html-view
    method: GET
- name: Custom Code
  endpoint:
    path: /docs/custom-code
    method: GET
- name: Timer
  endpoint:
    path: /docs/timer
    method: GET
    data_selector: properties
    params: {}
- name: Loading Indicator
  endpoint:
    path: /docs/loading-indicator
    method: GET
    data_selector: records
- name: Linear Progress
  endpoint:
    path: /docs/linear-progress
    method: GET
    data_selector: Value
    params: {}
- name: Circular Progress
  endpoint:
    path: /docs/circular-progress
    method: GET
    data_selector: properties
- name: Web View
  endpoint:
    path: /docs/rest-api-services
    method: GET
    data_selector: data
    params: {}
- name: themes
  endpoint:
    path: /docs/themes
    method: GET
    data_selector: themes
- name: Available Breakpoints
  endpoint:
    path: /docs/breakpoints
    method: GET
    data_selector: breakpoints
- name: Screen Variable
  endpoint:
    path: /docs/screen-variables
    method: GET
    data_selector: variables
    params: {}
- name: Window Dimensions
  endpoint:
    path: /system/variables/window-dimensions
    method: GET
    data_selector: dimensions
- name: Is Online
  endpoint:
    path: /system/variables/is-online
    method: GET
    data_selector: online_status
- name: Is iOS
  endpoint:
    path: /system/variables/is-ios
    method: GET
    data_selector: ios_status
- name: Is Android
  endpoint:
    path: /system/variables/is-android
    method: GET
    data_selector: android_status
- name: Is Web
  endpoint:
    path: /system/variables/is-web
    method: GET
    data_selector: web_status
- name: routes
  endpoint:
    data_selector: routes
- name: currentRoute
  endpoint:
    data_selector: currentRoute
- name: Drawer Items
  endpoint:
    path: /docs/drawer-nav-block
    method: GET
    data_selector: items
    params: {}
- name: Style Properties
  endpoint:
    path: /docs/tab-navigator#styles
    method: GET
    data_selector: styles
    params: {}
- name: Configuration Properties
  endpoint:
    path: /docs/intro-to-navigation
    method: GET
    data_selector: configurations
    params: {}
- name: routes
  endpoint:
    path: /routes
    method: GET
    data_selector: routes
    params: {}
- name: Navigation Params
  endpoint:
    path: /docs/passing-data
    method: GET
    data_selector: params
    params: {}
- name: triggers
  endpoint:
    path: /docs/triggers
    method: GET
    data_selector: triggers
    params: {}
- name: Open Browser
  endpoint:
    path: /open_browser
    method: GET
    data_selector: URL
    params: {}
- name: Open Camera
  endpoint:
    path: /open_camera
    method: GET
    data_selector: Output base64
    params: {}
- name: Open Image Picker
  endpoint:
    path: /open_image_picker
    method: GET
    data_selector: Output base64
    params: {}
- name: Open Share Dialog
  endpoint:
    path: /open_share_dialog
    method: GET
    data_selector: Share Text
    params: {}
- name: Update Map Location
  endpoint:
    path: /update_map_location
    method: POST
    data_selector: Target Component
    params: {}
- name: Get Expo Push Token
  endpoint:
    path: /get_expo_push_token
    method: GET
    data_selector: Show Permission Error Alert
    params: {}
- name: Get Location
  endpoint:
    path: /get_location
    method: GET
    data_selector: Result Name
    params: {}
- name: Swipe To
  endpoint:
    path: /docs/swipe-to
    method: GET
    data_selector: Target Component, Index
    params: {}
- name: Swipe Card
  endpoint:
    path: /docs/swipe-card
    method: GET
    data_selector: Target Component, Direction
    params: {}
- name: Change Theme
  endpoint:
    path: /docs/change-theme
    method: GET
    data_selector: Theme, Persistent
    params: {}
- name: Set Color Scheme
  endpoint:
    path: /docs/set-color-scheme
    method: GET
    data_selector: Color Scheme
    params: {}
- name: Request Review
  endpoint:
    path: /docs/request-review
    method: GET
    data_selector: Fallback App Store URL, Fallback Play Store URL, Web Review URL
    params: {}
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: data
    params: {}
- name: todos
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: single_todo
  endpoint:
    path: /{{id}}
    method: GET
    data_selector: fields
    params: {}
- name: todos
  endpoint:
    path: /v0/appkLwyequqaR6EWY/todolist
    method: POST
    data_selector: records
- name: update_todo
  endpoint:
    path: /v0/appkLwyequqaR6EWY/todolist/{{id}}
    method: PATCH
    data_selector: records
- name: delete_todo
  endpoint:
    path: /v0/appkLwyequqaR6EWY/todolist/{{id}}
    method: DELETE
    data_selector: records
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: records
    params:
      _limit: '10'
- name: single_todo
  endpoint:
    path: /{{id}}
    method: GET
    data_selector: record
    params: {}
- name: groceries
  endpoint:
    path: /groceries
    method: GET
    data_selector: response
- name: groceries
  endpoint:
    path: /groceries/{{id}}
    method: POST
    data_selector: records
    params: {}
- name: groceries
  endpoint:
    path: /groceries/{{id}}
    method: DELETE
    data_selector: records
    params: {}
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: results
- name: todos
  endpoint:
    path: /todos/{{id}}
    method: PUT
- name: todos
  endpoint:
    path: /todos/{{id}}
    method: DELETE
- name: groceries
  endpoint:
    path: /groceries
    method: GET
- name: single_grocery
  endpoint:
    path: /groceries/{{id}}
    method: GET
- name: create_grocery
  endpoint:
    path: /groceries/
    method: POST
- name: update_grocery
  endpoint:
    path: /groceries/{{id}}
    method: PUT
- name: groceries
  endpoint:
    path: /table-name/{{id}}
    method: DELETE
- name: books
  endpoint:
    path: /type-name
    method: GET
- name: book_detail
  endpoint:
    path: /type-name/{{id}}
    method: GET
- name: create_book
  endpoint:
    path: /type-name
    method: POST
    data_selector: records
    params: {}
- name: update_book
  endpoint:
    path: /type-name/{{id}}
    method: PATCH
    data_selector: records
    params: {}
- name: delete_book
  endpoint:
    path: /type-name/{{id}}
    method: DELETE
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
- name: single_item
  endpoint:
    path: /items/{{id}}
    method: GET
- name: items
  endpoint:
    path: /items
    method: POST
    data_selector: records
- name: items_update
  endpoint:
    path: /items/{{id}}
    method: PUT
    data_selector: records
- name: items_delete
  endpoint:
    path: /items/{{id}}
    method: DELETE
    data_selector: records
- name: entries
  endpoint:
    path: /entries
    method: GET
    data_selector: items
- name: single_entry
  endpoint:
    path: /entries/{{id}}
    method: GET
    data_selector: fields.title.en-US
- name: entries
  endpoint:
    path: /entries
    method: POST
    data_selector: fields
    params:
      role: Create
      object_type: groceries
- name: entries_update
  endpoint:
    path: entries/{{id}}
    method: PUT
    data_selector: fields
    params:
      role: Update
      object_type: groceries
- name: entries_delete
  endpoint:
    path: entries/{{id}}
    method: DELETE
    data_selector: fields
    params:
      role: Delete
      object_type: groceries
- name: books
  endpoint:
    path: /your-method-name
    method: GET
    data_selector: payload
    params:
      appID: '{{varName}}'
- name: create_book
  endpoint:
    path: /your-method-name
    method: POST
    data_selector: null
    params:
      appID: '{{varName}}'
- name: update_book
  endpoint:
    path: /your-method-name
    method: POST
    data_selector: null
    params:
      appID: '{{varName}}'
- name: delete_record
  endpoint:
    path: /api/endpoint_to_delete_record
    method: POST
    data_selector: response
    params:
      appID: '{{appID}}'
- name: groceries
  endpoint:
    path: /{{id}}
    method: GET
    data_selector: records
- name: groceries_create
  endpoint:
    path: /add_endpoint
    method: POST
    data_selector: sheet1
    params: {}
- name: groceries_update
  endpoint:
    path: /{{id}}
    method: PUT
    data_selector: sheet1
    params: {}
- name: groceries_delete
  endpoint:
    path: /{{id}}
    method: DELETE
    data_selector: sheet1
    params: {}
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: records
- name: photo
  endpoint:
    path: /photos/{{id}}
    method: GET
    data_selector: records
- name: Webhook
  endpoint:
    path: /hooks/catch
    method: POST
- name: update_data
  endpoint:
    path: /webhook/update
    method: PATCH
    data_selector: data
    params: {}
- name: Identify
  endpoint:
    path: /identify
    method: POST
- name: Screen
  endpoint:
    path: /screen
    method: POST
- name: Track
  endpoint:
    path: /track
    method: POST
- name: functions
  endpoint:
    path: /api/functions
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: records
- name: rn_vibrate
  endpoint:
    path: /expo/vibrate
    method: POST
    data_selector: vibration
    params: {}
- name: expo_permissions
  endpoint:
    path: /expo/permissions
    method: POST
    data_selector: permissions
    params: {}
- name: rn_platform
  endpoint:
    path: /expo/platform
    method: POST
    data_selector: platform
    params: {}
- name: rn_keyboard
  endpoint:
    path: /expo/keyboard
    method: POST
    data_selector: keyboard
    params: {}
- name: expo_sharing
  endpoint:
    path: /expo/sharing
    method: POST
    data_selector: sharing
    params: {}
- name: rn_appearance
  endpoint:
    path: /expo/appearance
    method: POST
    data_selector: appearance
    params: {}
- name: async_storage
  endpoint:
    path: /expo/storage
    method: POST
    data_selector: storage
    params: {}
- name: expo_sensors
  endpoint:
    path: /expo/sensors
    method: POST
    data_selector: sensors
    params: {}
- name: expo_sms
  endpoint:
    path: /expo/sms
    method: POST
    data_selector: sms
    params: {}
- name: custom_files
  endpoint:
    path: /v4.2/docs/introduction-to-the-builder
    method: GET
    data_selector: files
    params: {}
- name: '@shopify/mime-types'
  endpoint:
    path: /packages/@shopify/mime-types
    method: GET
    data_selector: version
    params: {}
- name: react-native-purchases
  endpoint:
    path: /packages/react-native-purchases
    method: GET
    data_selector: version
    params: {}
- name: stream-chat-expo
  endpoint:
    path: /packages/stream-chat-expo
    method: GET
    data_selector: version
    params: {}
- name: victory-native
  endpoint:
    path: /packages/victory-native
    method: GET
    data_selector: version
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: ''
    params: {}
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: /users/me
    method: GET
- name: user_registration
  endpoint:
    path: /users/register
    method: POST
    data_selector: user
    params: {}
- name: user_login
  endpoint:
    path: /users/login
    method: POST
    data_selector: user
    params: {}
- name: logout
  endpoint:
    path: /users/logout
    method: GET
    data_selector: ''
    params: {}
- name: fetch_user_data
  endpoint:
    path: /users/{{objectId}}
    method: GET
    data_selector: ''
    params: {}
- name: signup
  endpoint:
    path: /wf/signup
    method: POST
    data_selector: response
    params: {}
- name: login
  endpoint:
    path: /wf/login
    method: POST
    data_selector: response
    params: {}
- name: logout
  endpoint:
    path: /wf/logout
    method: POST
    data_selector: response
    params: {}
- name: signup
  endpoint:
    path: /wf/signup
    method: POST
- name: login
  endpoint:
    path: /wf/login
    method: POST
- name: logout
  endpoint:
    path: /wf/logout
    method: GET
- name: fetch_user_data
  endpoint:
    path: /obj/user/{D}
    method: GET
    params:
      api_token: token
- name: signup
  endpoint:
    path: /auth/v1/signup
    method: POST
    data_selector: user
    params: {}
- name: login
  endpoint:
    path: /auth/v1/token?grant_type=password
    method: POST
    data_selector: access_token
    params: {}
- name: user
  endpoint:
    path: /auth/v1/user
    method: GET
    data_selector: user
    params: {}
- name: logout
  endpoint:
    path: /logout
    method: POST
    data_selector: response
    params: {}
- name: login
  endpoint:
    path: /auth/login
    method: POST
    data_selector: authToken
    params: {}
- name: signup
  endpoint:
    path: /auth/signup
    method: POST
    data_selector: authToken
    params: {}
- name: App Publishing Status
  endpoint:
    path: /docs/app-publishing-status
    method: GET
- name: Publishing Environment
  endpoint:
    path: /docs/publishing-environment
    method: GET
- name: PWA Publishing
  endpoint:
    path: /docs/pwa-publishing
    method: GET
- name: App Store Publishing
  endpoint:
    path: /docs/app-store-publishing
    method: GET
- name: Exporting & Self-Publishing Your App
  endpoint:
    path: /docs/exporting-your-project
    method: GET
- name: Sharing Your App
  endpoint:
    path: /docs/sharing-your-project
    method: GET
- name: Account permissions
  endpoint:
    path: /users_and_permissions/invite_new_users
    method: POST
    data_selector: permissions
    params:
      permission: Admin
- name: App binary upload
  endpoint:
    path: /apps/upload
    method: POST
    data_selector: upload_status
    params: {}
- name: Privacy Policy
  endpoint:
    path: /app_content/privacy_policy
    method: POST
    data_selector: policy_status
    params: {}
- name: Testers
  endpoint:
    path: /internal_testing/testers
    method: POST
    data_selector: tester_list
    params: {}
- name: push_notification
  endpoint:
    path: /--/api/v2/push/send
    method: GET
    data_selector: data
    params: {}
- name: Get Expo Push Token
  endpoint:
    path: /getExpoPushToken
    method: POST
    data_selector: token
    params: {}
- name: Get Notification Count
  endpoint:
    path: /getNotificationCount
    method: GET
    data_selector: notification_count
    params: {}
- name: Set Notification Count
  endpoint:
    path: /setNotificationCount
    method: POST
    data_selector: set_count
    params: {}
notes:
- All API service Base URLs need to support SSL connections over HTTPS.
- API services need to be accessible over the internet.
- Get acquainted with the Dashboard
- Make sure you have Live Preview app on your phone
- Join the Community
- Requires setup of connected app in Draftbit
- The Dashboard is the main hub in Draftbit.
- Defaults to No.
- Defaults to Draft when selecting release status.
- Draft view always uses the Dev environment
- Changes that you make in the Builder are immediately reflected in the previews.
- Console Logs are only viewable when your Draftbit app is being previewed using Web,
  iOS, and Android previews.
- Make sure to remove any console.log() statements in your app's Custom Code, and
  remove or disable any Console Log Actions, when you are preparing to publish your
  app.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Screens can be added to Stack and Tab navigators to organize different parts of
  your app.
- The Touchable is a wrapper component used to make other components responsive to
  the user's touch.
- A Blur View component is placed adjacent to the Component whose content you want
  to blur.
- The content of a child component on a Blur View will be displayed above to the adjacent
  component.
- 'Device-specific behaviour: Android and iOS both interact with the Resizing Behavior
  property differently.'
- Handles keyboard appearance and automatically scrolls to the focused Text Input
  component.
- Can add extra offsets for better user experience.
- The Linear Gradient component allows you to apply a linear gradient background to
  elements in your app's UI.
- A Surface component is a type of View that is used to provide elevation to its child
  component(s).
- Currently supported formats are png, jpg, jpeg, bmp, gif, webp, and svg.
- Only the .json Lottie file type is supported with a max size of 5MB.
- Use the Youtube Player to play YouTube videos and playlists.
- To enter a Youtube Video ID here.
- To enter a Youtube Playlist ID.
- Fetch component requires setup of REST API service and Endpoint.
- FlashList is made by Shopify and is optimized for large data sets and slow connections.
- Uses OAuth2 with refresh token — requires setup of connected app in Draftbit
- Some objects may return nulls in deeply nested fields
- You can have 1 or 2 buttons per side, but not more.
- You also cannot mix and match 'Left/Right Swipe Configuration' with Swipeable Item
  Buttons in the same direction.
- A Text input field that allows user to log their inputs in multi-lines. The Text
  Area expands vertically as needed, making it better equipped for large amounts of
  user input.
- The Picker component is a type of input that lets the user select an item from a
  list of options.
- Component allows selection of date and time
- 'Supports different modes: date, time, and datetime'
- To manipulate the value of the Checkbox row in an API request, you will use the
  Screen variable mapped to its Data Source property value to send as the body of
  the API request action.
- You can pass this array to the Map View’s Marker Data property just like you would
  for a List component.
- A slideshow component for cycling through elements—images or slides of text—like
  a carousel.
- With the Deck Swiper component you can add an interactive stack of swipeable cards
  to your app.
- A customizable Tab View component lets you switch between tabs smoothly along with
  having the option to swipe through the tabs.
- The Modal component overlays content on top of the Screen.
- Modal has a Visible property to control its visibility.
- Defaults to 1000 ms (1 second) for update interval
- Defaults to 0 for initial time
- A circular spinning activity/loading indicator.
- WebView allows for rendering a website on the screen in a native view.
- Sharing Blocks between different apps isn't possible yet, but we plan to add that
  ability in the future.
- Each app project comes with a default 'Draftbit' theme, which you can rename.
- You can configure how colors and typography are applied to your app's UI.
- Some objects like Contact may return nulls in deeply nested fields
- It is recommended to start developing the app at the Mobile breakpoint and make
  changes to component styles at other Breakpoints as needed to make the design look
  better across different breakpoints.
- Stylesheets allow you to apply consistent styling across components, and update
  them from a single place.
- Usually you want to use Flex Layout to position components on your Screen so that
  your UI will adapt to different device screen sizes.
- Safe Area View should usually be enabled if you've hidden the header from the Screen's
  parent navigator within the Navigation config
- Each time your App restarts, the App Variable will reset to the default value
- Don't set sensitive data as default values
- A Device Variable will not reset to the default value the next time the app starts.
- Don't set sensitive data as default values.
- Screen Variables will reset to their default value when your app is closed in addition
  to when the Screen is removed from the navigation stack.
- Built-in transform utility functions are available.
- You can customize the colors, icons, and select from several animation styles.
- It's possible to create a custom Drawer Navigator using a Block.
- Actions are combined into Workflows which are assigned to Triggers for a component.
- Uses OAuth2 for authentication
- Don't use Skip! Using Skip will let you use your Endpoint without testing.
- If your Endpoint is automatically managed from an OpenAPI spec, only a limited set
  of props will be editable.
- Requires setup of connected app in Xano
- Both of these headers will be sent with every API request made to the Back4App backend
  from the Draftbit app.
- 'Authorization header requires Bearer token format: ''Bearer api-token''.'
- Requires setup of connected app in Bubble CMS
- Using Webflow API with Draftbit Web Preview will give a no-cors issue.
- Base URL requires Space ID and default environment.
- Authorization header must include Bearer token.
- Use the appropriate method (POST, PUT, DELETE) based on the action required.
- Directual requires you to pass `appID` as a query parameter with each request.
- If you want to create an API using Sheety with public access, you do not need an
  authentication token.
- The Authorization token requires a header with the value 'Client-ID access-key'.
- Remove the Content-Type header from the Headers section when posting JSON data from
  a Web Browser.
- Configuration properties require a value to be set to enable the Integration
- Android apps require the android.permission.VIBRATE permission to be enabled explicitly.
- You can create custom files inside your project directory, then import and use them
  on your Screens.
- Supported File Types include .txt, .md, .json, .js, .ts.
- Supported file Locations include root-level and a directory named custom-files.
- Implementing user authentication in a Draftbit app, we recommend you to use an Email/Password
  or a unique identifier sign-in provider.
- All tokens to persist a logged-in user's session should be defined as a Device Variable.
- Requires setup of Back4App backend.
- Ensure to store sessionToken after user signup or login.
- To create a Backendless REST service, please go through the REST API Integration
  documentation.
- Base URL parameter has been updated to give you the ability to set separate base
  URLs for Development and Production.
- Ensure to enable Email Signup in Supabase Authentication settings
- Requires an access token for authenticated requests
- After testing all the authenticated endpoints set this Global Variable to its default
  value or an empty string.
- Requires setup of connected app in api
- Draftbit requires Push Notifications, so check the box next to that capability.
- Go to App Store Connect to find your Apple ID
- Paste the Apple ID into the App Store App ID field in Draftbit
- To publish your app it needs to be set from Draft to Live.
- Draftbit will only make use of admin access to automate the publishing process for
  your app.
- Google requires that all apps in the Play Store have an associated Privacy Policy.
- All the steps described in this guide must be followed after exporting your app
  from Draftbit and make sure to follow post export steps to add correct versioning.
- Apple requires a $99 (USD) enrollment fee per year to create a developer account.
- You will need an Expo account to submit to the Google Play Store.
- For the first submission to the Google Play Store, the app must be uploaded manually.
- All PWAs that are published through the Builder use the draftbit.app domain.
- GitHub recommends using a personal access token instead of the password of the GitHub
  account when communicating with third-party services
- Requires Initial Self-Publishing
- Apple now requires apps submitted to App Store Connect to be built with Xcode 16
  or later using the iOS 18 SDK (as of April 24, 2025).
- Google is discontinuing the FCM Legacy protocol on June 20, 2024. To keep sending
  Android notifications seamlessly, you'll need to switch to the new FCM V1 credentials.
- Uses Expo's Push API for sending notifications.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check API keys or permissions.'
- '404 Not Found: Verify the endpoint and resource ID.'
- If your Source is not connected to any Destinations, or is only connected to disabled
  Destinations, Segment automatically disables the Source after 14 days
- 'Invalid credentials: Please check your username and password.'
- 'Unauthorized: Token is missing or invalid.'
- '401 Unauthorized: Check session token or user credentials.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- Release Status Must Match The Release Status Of Your App In The Google Play Store
  Console
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AUTHORIZATION_HEADER
  - AuthToken
client:
  base_url: https://build.draftbit.com
  headers:
    Accept: application/json
source_metadata: null
