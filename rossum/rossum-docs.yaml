resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /v1/organizations
    method: GET
- name: workspaces
  endpoint:
    path: /v1/workspaces
    method: GET
- name: schemas
  endpoint:
    path: /v1/schemas
    method: GET
- name: connectors
  endpoint:
    path: /v1/connectors
    method: GET
- name: inboxes
  endpoint:
    path: /v1/inboxes
    method: GET
- name: queues
  endpoint:
    path: /v1/queues
    method: GET
- name: documents
  endpoint:
    path: /v1/documents
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: GET
- name: groups
  endpoint:
    path: /v1/groups
    method: GET
- name: annotations
  endpoint:
    path: /v1/annotations
    method: GET
- name: pages
  endpoint:
    path: /v1/pages
    method: GET
- name: line_item
  endpoint:
    path: /v1/datapoints
    method: GET
    data_selector: datapoints
- name: tax_details
  endpoint:
    path: /v1/tax_details
    method: GET
    data_selector: tax_details
- name: schema
  endpoint:
    path: /api/schemas
    method: GET
    data_selector: schemas
    params: {}
- name: document
  endpoint:
    path: /api/documents
    method: POST
    data_selector: documents
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /v1/organizations
    method: GET
    data_selector: organizations
- name: workspaces
  endpoint:
    path: /v1/workspaces
    method: GET
    data_selector: workspaces
- name: schemas
  endpoint:
    path: /v1/schemas
    method: GET
    data_selector: schemas
- name: connectors
  endpoint:
    path: /v1/connectors
    method: GET
    data_selector: connectors
- name: inboxes
  endpoint:
    path: /v1/inboxes
    method: GET
    data_selector: inboxes
- name: queues
  endpoint:
    path: /v1/queues
    method: GET
    data_selector: queues
- name: documents
  endpoint:
    path: /v1/documents
    method: GET
    data_selector: documents
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
- name: groups
  endpoint:
    path: /v1/groups
    method: GET
    data_selector: groups
- name: annotations
  endpoint:
    path: /v1/annotations
    method: GET
    data_selector: annotations
- name: pages
  endpoint:
    path: /v1/pages
    method: GET
    data_selector: pages
- name: usage_report
  endpoint:
    path: /api/annotations/usage_report
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: series
  endpoint:
    path: /api/v1/series
    method: GET
    data_selector: series
- name: totals
  endpoint:
    path: /api/v1/totals
    method: GET
    data_selector: totals
- name: annotation_status.changed
  endpoint:
    path: /api/v1/hooks/changed
    method: POST
- name: annotation_content.updated
  endpoint:
    path: /api/v1/hooks/updated
    method: POST
- name: upload.created
  endpoint:
    path: /api/v1/hooks/created
    method: POST
- name: email.received
  endpoint:
    path: /api/v1/hooks/received
    method: POST
- name: invocation.scheduled
  endpoint:
    path: /api/v1/hooks/scheduled
    method: POST
- name: annotation_status
  endpoint:
    path: /api/v1/hooks
    method: POST
    data_selector: annotation_status
- name: annotation_content
  endpoint:
    path: /api/v1/hooks
    method: POST
    data_selector: annotation_content
- name: email
  endpoint:
    path: /api/v1/hooks
    method: POST
    data_selector: email
- name: upload
  endpoint:
    path: /api/v1/hooks
    method: POST
    data_selector: upload
- name: validate
  endpoint:
    path: /validate
    method: POST
- name: save
  endpoint:
    path: /save
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /v1/organizations
    method: GET
- name: workspaces
  endpoint:
    path: /v1/workspaces
    method: GET
- name: schemas
  endpoint:
    path: /v1/schemas
    method: GET
- name: connectors
  endpoint:
    path: /v1/connectors
    method: GET
- name: inboxes
  endpoint:
    path: /v1/inboxes
    method: GET
- name: queues
  endpoint:
    path: /v1/queues
    method: GET
- name: documents
  endpoint:
    path: /v1/documents
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: GET
- name: groups
  endpoint:
    path: /v1/groups
    method: GET
- name: annotations
  endpoint:
    path: /v1/annotations
    method: GET
- name: pages
  endpoint:
    path: /v1/pages
    method: GET
- name: usage_report
  endpoint:
    path: /api/annotations/usage_report
    method: POST
    data_selector: results
    params: {}
- name: series
  endpoint:
    path: /api/v1/series
    method: GET
    data_selector: series
    params: {}
- name: totals
  endpoint:
    path: /api/v1/totals
    method: GET
    data_selector: totals
    params: {}
- name: files
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: files
- name: additional_files
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: additional_files
- name: validate
  endpoint:
    path: /validate
    method: POST
- name: save
  endpoint:
    path: /save
    method: POST
- name: annotation
  endpoint:
    path: /v1/annotations
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
- name: workspaces
  endpoint:
    path: /api/v1/workspaces
    method: GET
- name: schemas
  endpoint:
    path: /api/v1/schemas
    method: GET
- name: connectors
  endpoint:
    path: /api/v1/connectors
    method: GET
- name: inboxes
  endpoint:
    path: /api/v1/inboxes
    method: GET
- name: queues
  endpoint:
    path: /api/v1/queues
    method: GET
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: annotations
  endpoint:
    path: /api/v1/annotations
    method: GET
- name: pages
  endpoint:
    path: /api/v1/pages
    method: GET
- name: usage_report
  endpoint:
    path: /api/v1/annotations/usage_report
    method: POST
    data_selector: data
    params: {}
- name: totals
  endpoint:
    path: /api/v1/totals
    method: GET
    data_selector: totals
- name: series
  endpoint:
    path: /api/v1/series
    method: GET
    data_selector: series
- name: document
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: documents
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: emails
- name: hook
  endpoint:
    path: /api/v1/hooks
    method: GET
    data_selector: hooks
- name: validate
  endpoint:
    path: /validate
    method: POST
- name: save
  endpoint:
    path: /save
    method: POST
- name: annotation
  endpoint:
    path: /v1/annotations/{id}/{verb}
    method: POST
- name: annotations
  endpoint:
    path: /api/v1/annotations
    method: POST
- name: relations
  endpoint:
    path: /api/v1/relations
    method: POST
- name: annotations_search
  endpoint:
    path: /v1/annotations/search
    method: POST
    data_selector: results
- name: annotation_content_validate
  endpoint:
    path: /v1/annotations/{id}/content/validate
    method: POST
    data_selector: messages
- name: transform_grid_to_datapoints
  endpoint:
    path: /v1/annotations/{id}/content/{id of the child node}/transform_grid_to_datapoints
    method: POST
    data_selector: results
- name: add_empty_row
  endpoint:
    path: /v1/annotations/{id}/content/{id of the child node}/add_empty
    method: POST
- name: annotations
  endpoint:
    path: /v1/annotations/{id}/delete
    method: POST
- name: rotate_annotation
  endpoint:
    path: /v1/annotations/{id}/rotate
    method: POST
- name: edit_annotation
  endpoint:
    path: /v1/annotations/{id}/edit
    method: POST
- name: split_annotation
  endpoint:
    path: /v1/annotations/{id}/split
    method: POST
- name: edit_pages_start
  endpoint:
    path: /v1/annotations/{id}/edit_pages/start
    method: POST
- name: edit_pages_cancel
  endpoint:
    path: /v1/annotations/{id}/edit_pages/cancel
    method: POST
- name: edit_pages
  endpoint:
    path: /v1/annotations/{parent_id}/edit_pages
    method: POST
- name: edit_pages_in_place
  endpoint:
    path: /v1/annotations/{parent_id}/edit_pages/in_place
    method: POST
- name: annotations
  endpoint:
    path: /api/v1/annotations
    method: GET
    data_selector: results
- name: annotation_content
  endpoint:
    path: /v1/annotations/{id}/content
    method: GET
    data_selector: content
- name: update_annotation_content
  endpoint:
    path: /v1/annotations/{id}/content
    method: PATCH
    data_selector: content
- name: bulk_update_annotation_content
  endpoint:
    path: /v1/annotations/{id}/content/operations
    method: POST
    data_selector: operations
- name: replace_annotation_data_by_ocr
  endpoint:
    path: /v1/annotations/{id}/content/{id of child node}/select
    method: POST
    data_selector: rectangle
- name: annotation
  endpoint:
    path: /v1/annotations/{id}
    method: PUT
    data_selector: annotation
- name: update_status
  endpoint:
    path: /v1/annotations/{id}
    method: PATCH
    data_selector: annotation
- name: copy_annotation
  endpoint:
    path: /v1/annotations/{id}/copy
    method: POST
    data_selector: annotation
- name: delete_annotation
  endpoint:
    path: /v1/annotations/{id}
    method: DELETE
    data_selector: annotation
- name: suggested_recipients
  endpoint:
    path: /v1/annotations/suggested_recipients
    method: POST
    data_selector: results
- name: purge_deleted_annotations
  endpoint:
    path: /v1/annotations/purge_deleted
    method: POST
    data_selector: annotation
- name: page_data
  endpoint:
    path: /v1/annotations/{id}/page_data
    method: GET
    data_selector: results
- name: update_queue
  endpoint:
    path: /v1/queues/{id}
    method: PUT
    data_selector: queue
- name: automation_blockers
  endpoint:
    path: /api/v1/automation_blockers
    method: GET
    data_selector: results
- name: automation_blocker
  endpoint:
    path: /api/v1/automation_blockers/{id}
    method: GET
    data_selector: ''
- name: grid_operations
  endpoint:
    path: /v1/annotations/{id}/content/{id of the multivalue}/grid_operations
    method: POST
- name: grid_parts_operations
  endpoint:
    path: /v1/annotations/{id}/content/{id of the multivalue}/grid_parts_operations
    method: POST
- name: annotation_start
  endpoint:
    path: /v1/annotations/{id}/start
    method: POST
- name: annotation_content
  endpoint:
    path: /v1/annotations/{id}/content
    method: GET
- name: annotation_patch
  endpoint:
    path: /v1/annotations/{id}/content/{id of the child node}
    method: PATCH
- name: annotation_confirm
  endpoint:
    path: /v1/annotations/{id}/confirm
    method: POST
- name: processing_duration
  endpoint:
    path: /v1/annotations/{id}/processing_duration
    method: GET
- name: update_processing_duration
  endpoint:
    path: /v1/annotations/{id}/processing_duration
    method: PATCH
- name: audit_logs
  endpoint:
    path: /v1/audit_logs
    method: GET
- name: dedicated_engine
  endpoint:
    path: /api/v1/dedicated_engines
    method: GET
- name: dedicated_engine_schema
  endpoint:
    path: /api/v1/dedicated_engine_schemas
    method: GET
- name: document
  endpoint:
    path: /v1/documents/{id}
    method: DELETE
- name: document_relation
  endpoint:
    path: /v1/document_relations
    method: GET
- name: download
  endpoint:
    path: /v1/documents/downloads/{id}
    method: GET
- name: email
  endpoint:
    path: /v1/emails/{id}
    method: GET
- name: dedicated_engine_schemas
  endpoint:
    path: /api/v1/dedicated_engine_schemas/{id}
    method: GET
    data_selector: content
- name: delete_recommendations
  endpoint:
    path: /api/v1/delete_recommendations
    method: GET
    data_selector: results
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: results
- name: emails
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: results
- name: email_counts
  endpoint:
    path: /api/v1/emails/counts
    method: GET
    data_selector: incoming
- name: email_tracking_events
  endpoint:
    path: /api/v1/email_tracking_events
    method: POST
    data_selector: payload
- name: email_template
  endpoint:
    path: /email_templates
    method: GET
    data_selector: results
- name: email_template_stats
  endpoint:
    path: /email_templates/stats
    method: GET
    data_selector: results
- name: render_email_template
  endpoint:
    path: /email_templates/{id}/render
    method: POST
- name: hook
  endpoint:
    path: /hooks
    method: GET
    data_selector: results
- name: email_thread
  endpoint:
    path: /api/v1/email_threads
    method: GET
    data_selector: results
    params: {}
- name: generic_engine
  endpoint:
    path: /api/v1/generic_engines
    method: GET
    data_selector: results
    params: {}
- name: generic_engine_schema
  endpoint:
    path: /api/v1/generic_engine_schemas
    method: GET
    data_selector: results
    params: {}
- name: hook_call_logs
  endpoint:
    path: /v1/hooks/logs
    method: GET
    data_selector: results
- name: create_hook
  endpoint:
    path: /v1/hooks
    method: POST
- name: create_hook_from_template
  endpoint:
    path: /v1/hooks/create
    method: POST
- name: retrieve_hook
  endpoint:
    path: /v1/hooks/{id}
    method: GET
- name: update_hook
  endpoint:
    path: /v1/hooks/{id}
    method: PUT
- name: update_partial_hook
  endpoint:
    path: /v1/hooks/{id}
    method: PATCH
- name: delete_hook
  endpoint:
    path: /v1/hooks/{id}
    method: DELETE
- name: test_hook
  endpoint:
    path: /v1/hooks/{id}/test
    method: POST
- name: manual_hook_trigger
  endpoint:
    path: /v1/hooks/{id}/invoke
    method: POST
- name: retrieve_secrets_keys
  endpoint:
    path: /v1/hooks/{id}/secrets_keys
    method: GET
- name: inboxes
  endpoint:
    path: /api/v1/inboxes
    method: GET
    data_selector: results
- name: labels
  endpoint:
    path: /api/v1/labels
    method: GET
    data_selector: results
- name: memberships
  endpoint:
    path: /api/v1/organization_groups/{id}/memberships
    method: GET
    data_selector: results
- name: hook
  endpoint:
    path: /api/v1/hooks/{id}/generate_payload
    method: POST
    data_selector: payload
- name: hook_template
  endpoint:
    path: /api/v1/hook_templates
    method: GET
    data_selector: results
- name: organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
- name: membership_token
  endpoint:
    path: /api/v1/auth/membership_token
    method: POST
- name: membership
  endpoint:
    path: /organization_groups/{id}/memberships/{id}
    method: PUT
- name: notes
  endpoint:
    path: /notes
    method: GET
- name: organization
  endpoint:
    path: /organizations/create
    method: POST
- name: organization_limits
  endpoint:
    path: /organizations/{id}/limits
    method: GET
- name: billing_stats
  endpoint:
    path: /v1/organizations/{id}/billing_stats
    method: POST
    data_selector: results
    params:
      filters:
        begin_date: '2021-08-01'
        end_date: '2021-08-31'
        queues:
        - https://<example>.rossum.app/api/v1/queues/8199
      group_by:
      - queue
- name: billing_history
  endpoint:
    path: /v1/organizations/{id}/billing_history
    method: GET
    data_selector: results
    params: {}
- name: organization_groups
  endpoint:
    path: /v1/organization_groups
    method: GET
    data_selector: results
    params: {}
- name: organization_groups
  endpoint:
    path: /v1/organization_groups
    method: POST
- name: users
  endpoint:
    path: /v1/organization_groups/{organization_group_id}/users
    method: GET
- name: organizations
  endpoint:
    path: /v1/organization_groups/{organization_group_id}/organizations
    method: GET
- name: workspaces
  endpoint:
    path: /v1/organization_groups/{organization_group_id}/workspaces
    method: GET
- name: queues
  endpoint:
    path: /v1/organization_groups/{organization_group_id}/queues
    method: GET
- name: queue
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
- name: billing_stats
  endpoint:
    path: /v1/organization_groups/{id}/billing_stats
    method: POST
    data_selector: results
- name: billing_history
  endpoint:
    path: /v1/organization_groups/{id}/billing_history
    method: GET
    data_selector: results
- name: pages
  endpoint:
    path: /v1/pages
    method: GET
    data_selector: results
- name: questions
  endpoint:
    path: /v1/questions
    method: GET
    data_selector: results
- name: workflow_object
  endpoint:
    path: /api/workflows
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /api/v1/queues/{id}/upload
    method: POST
- name: export_annotations
  endpoint:
    path: /api/v1/queues/{id}/export
    method: GET
- name: suggested_recipients
  endpoint:
    path: /api/v1/queues/{id}/suggested_recipients
    method: POST
- name: list_all_queues
  endpoint:
    path: /api/v1/queues
    method: GET
- name: queue
  endpoint:
    path: /queues
    method: POST
    data_selector: id
- name: relation
  endpoint:
    path: /relations
    method: POST
    data_selector: id
- name: relations
  endpoint:
    path: /v1/relations/{id}
    method: DELETE
- name: schemas
  endpoint:
    path: /v1/schemas
    method: GET
- name: suggested_edits
  endpoint:
    path: /v1/suggested_edits
    method: GET
- name: surveys
  endpoint:
    path: /api/v1/surveys
    method: GET
    data_selector: results
- name: survey_templates
  endpoint:
    path: /api/v1/survey_templates
    method: GET
    data_selector: results
- name: triggers
  endpoint:
    path: /api/v1/triggers
    method: GET
    data_selector: results
- name: upload
  endpoint:
    path: /api/v1/uploads
    method: POST
    data_selector: url
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: results
    params: {}
- name: workflow_steps
  endpoint:
    path: /api/v1/workflow_steps
    method: GET
    data_selector: results
- name: workspaces
  endpoint:
    path: /api/v1/workspaces
    method: GET
    data_selector: results
- name: users
  endpoint:
    path: /v1/users/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: change_password
  endpoint:
    path: /v1/auth/password/change
    method: POST
    data_selector: null
    params: {}
- name: reset_password
  endpoint:
    path: /v1/auth/password/reset
    method: POST
    data_selector: null
    params: {}
- name: password_score
  endpoint:
    path: /v1/auth/password/score
    method: POST
    data_selector: null
    params: {}
- name: user_roles
  endpoint:
    path: /v1/groups
    method: GET
    data_selector: results
    params: {}
- name: workflows
  endpoint:
    path: /v1/workflows
    method: GET
    data_selector: results
    params: {}
- name: workflow_activities
  endpoint:
    path: /v1/workflow_activities
    method: GET
    data_selector: results
    params: {}
- name: workflow_runs
  endpoint:
    path: /v1/workflow_runs
    method: GET
    data_selector: results
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Users may delete a token using the logout endpoint or automatically after a configured
  time.
- Datapoint represents a single value or global document information
- Supports multiple schema versions at the same time.
- Annotations will be updated to match current schema shape when the schema is updated.
- Use the new 'https://<example>.rossum.app/api' endpoint for new integrations.
- Accounts created before Nov 2022 use the 'https://elis.rossum.ai/api' endpoint.
- Direct access to the API may require you to login using Rossum credentials. User
  must have admin or manager role.
- Webhooks require a public IP address for deployment.
- Webhook events specify when the hook should be notified.
- Webhook requests may also be authenticated using a client SSL certificate.
- The TxScript environment is geared just towards the annotation_content event.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Most of the API endpoints require a user to be authenticated.
- Login returns an access key to be used for token authentication.
- Direct access to the API may require you to login using Rossum credentials.
- User must have admin or manager role.
- Webhook extensions are more flexible and easier to use than connectors.
- In serverless functions, this object must be explicitly imported and instantiated
  using a .from_payload() function.
- The .hook_response() method yields a dict representing the prescribed event hook
  response.
- Rossum authorization token passing must be enabled on the hook.
- The webhook must be deployed with a public IP address.
- Webhook requests may also be authenticated using a client SSL certificate
- By default, no internet access is allowed from a serverless function, except the
  Rossum API
- 'All of the `annotation_content` events expect a JSON object with optional lists
  in the response: `messages` and `operations`.'
- Trigger events are in beta version and may change.
- Embedded annotation cannot be started by users with admin or organization group
  admin roles.
- 'Approval is allowed only for documents in states: in_workflow.'
- This functionality is in beta version right now and the API may change in the future.
- The endpoint for transforming grid structure to tabular data will be deprecated
  in the near future.
- Annotation with status deleted is still available in Rossum UI.
- When using the split endpoint, status of the original annotation is switched to
  split.
- Normally you create annotations via the upload endpoint.
- Never call the delete annotation API in production; use the mark as deleted approach
  instead.
- Automation blocker stores reasons why automation was not performed.
- Updating annotation content externally is not supported without a prior agreement.
- Patching the grid structure of a multivalue is not supported.
- Only administrators are currently allowed to view or manipulate delete-recommendation
  objects.
- This API may change in the future without any notice.
- The total number of recipients (`to`, `cc` and `bcc` together) cannot exceed 40.
- This hook does...
- The API may change without notice.
- The retention policy for the logs is set to 7 days.
- Users can use this endpoint to test the hook on a payload of specific events and
  actions.
- Note object and all endpoints related to it are deprecated.
- Data are accurate starting on June 1st 2021.
- The endpoint for billing for organization is deprecated in favor of billing stats
  for organization.
- Queues created with parameter rir_url will have corresponding generic_engine or
  dedicated_engine set automatically.
- Setting the data retention on per-queue level basis can be used only if custom data
  retention agreement is part of your contract.
- Upload endpoint supports basic authentication.
- Prevent upload of identical documents using `reject_identical` parameter.
- Only empty workspaces without queues can be deleted.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '408: Request Timeout'
- '502: Bad Gateway'
- '504: Gateway Timeout'
- '404 Not Found: Endpoint not implemented'
- '422 Unprocessable Entity: Validation failed'
- '500 Internal Server Error: Export failed'
- '405: Method Not Allowed'
- '409: Conflict'
- '413: Payload Too Large'
- '400 Bad Request: Check the request parameters'
- '4xx: Client error in request'
- '5xx: Server error in processing request'
- '400: Bad Request: Invalid input data or error from connector.'
- '401: Unauthorized: The username/password is invalid or token is invalid (e.g. expired).'
- '403: Forbidden: Insufficient permission, missing authentication, invalid CSRF token
  and similar issues.'
- '404: Not Found: Entity not found (e.g. already deleted).'
- '429: Too Many Requests: The allowed number of requests per minute has been exceeded.
  Please wait before sending more requests.'
- '500: Internal Server Error: We had a problem with the server. Try again later.'
- Invalid invoice number format
- '404 Not Found: Endpoint does not exist'
- '4xx: Client error'
- '5xx: Server error'
- '409 Conflict: Annotation fails to be in one of the specified states.'
- '200: New status of the annotation.'
- 'Status: 204 on success.'
- 'Status: 400 when preconditions are not met.'
- 'Status: 403 User doesn''t have a right to edit parent annotation.'
- 'Status: 200: Returns updated annotation object.'
- 'Status: 204: No content; indicates deletion of annotation.'
- 'Status: 404: No spatial data available for the given annotation.'
- '404 Not Found: The requested automation blocker does not exist.'
- '204 No Content: Successful deletion'
- '200 OK: Successful request'
- '201 Created: Successfully created'
- '401 Unauthorized: Recheck OAuth token expiration'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Check the hook ID'
- '200: Successful response'
- '201: Created'
- '204: No content'
- '400: Bad request'
- 'Unauthorized: Check your access token.'
- 'Not Found: Verify the organization ID.'
- '409 Conflict: Document with identical content already exists.'
- '500 Internal Server Error: Check that Content-Type header is set correctly.'
- '204 No Content: Success for delete request.'
- '409 Conflict: Workspace contains queues and cannot be deleted.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - User
  - Authorization
  - queue
client:
  base_url: https://<example>.rossum.app
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://accounts.google.com/.well-known/openid-configuration
    client_id: '{{ dlt.secrets[''client_id''] }}'
    client_secret: '{{ dlt.secrets[''client_secret''] }}'
    location: header
    header_name: Authorization
  paginator:
    type: page
    page_size_param: page_size
    default_page_size: 20
source_metadata: null
