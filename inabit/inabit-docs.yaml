resources:
- name: create_subscription
  endpoint:
    path: /api-reference/remote-approver-app/webhooks#create-subscription
    method: POST
    data_selector: data.createSubscription
    params: {}
- name: delete_subscription
  endpoint:
    path: /api-reference/remote-approver-app/webhooks#delete-subscription
    method: POST
    data_selector: data.deleteSubscription
    params: {}
- name: create_subscription
  endpoint:
    path: /api-reference/remote-approver-app/webhooks#create-subscription
    method: POST
- name: delete_subscription
  endpoint:
    path: /api-reference/remote-approver-app/webhooks#delete-subscription
    method: POST
- name: CreateApiWalletAddress
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createApiWalletAddress
    params: {}
- name: CreateWithdrawal
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createWithdrawal
    params: {}
- name: CreateApiWalletAddress
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createApiWalletAddress
    params: {}
- name: CreateWithdrawal
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createWithdrawal
    params: {}
- name: create_api_wallet_address
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createApiWalletAddress
    params: {}
- name: createApiWalletAddress
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createApiWalletAddress
    params: {}
- name: CreateWithdrawal
  endpoint:
    path: /mutations/CreateWithdrawal
    method: POST
    data_selector: data.createWithdrawal
    params: {}
- name: CreateWithdrawal
  endpoint:
    path: /createWithdrawal
    method: POST
    data_selector: data.createWithdrawal
    params: {}
- name: API Admin
  endpoint:
    path: /api/admin
    method: POST
- name: API Viewer
  endpoint:
    path: /api/viewer
    method: POST
- name: API Signer
  endpoint:
    path: /api/signer
    method: POST
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: organization
  endpoint:
    path: /organizations
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: inabit_wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: data
    params: {}
- name: exchange_wallets
  endpoint:
    path: /exchange_wallets
    method: GET
    data_selector: data
    params: {}
- name: web3_wallets
  endpoint:
    path: /web3_wallets
    method: GET
    data_selector: data
    params: {}
- name: monitored_wallets
  endpoint:
    path: /monitored_wallets
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: tokens
  endpoint:
    path: /api/tokens
    method: GET
    data_selector: data
    params: {}
- name: Binance
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Kucoin
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Kraken
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: OKX
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Bybit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Gemini
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Crypto.com
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Coinbase
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Binance
  endpoint:
    path: /supported/exchanges/binance
    method: GET
- name: Kucoin
  endpoint:
    path: /supported/exchanges/kucoin
    method: GET
- name: Kraken
  endpoint:
    path: /supported/exchanges/kraken
    method: GET
- name: OKX
  endpoint:
    path: /supported/exchanges/okx
    method: GET
- name: Bybit
  endpoint:
    path: /supported/exchanges/bybit
    method: GET
- name: Gemini
  endpoint:
    path: /supported/exchanges/gemini
    method: GET
- name: Crypto.com
  endpoint:
    path: /supported/exchanges/crypto-com
    method: GET
- name: Coinbase
  endpoint:
    path: /supported/exchanges/coinbase
    method: GET
- name: graphql
  endpoint:
    path: /graphql
    method: POST
- name: GetPost
  endpoint:
    path: /post
    method: POST
    data_selector: post
    params: {}
- name: UpdateProfile
  endpoint:
    path: /updateProfile
    method: POST
    data_selector: updateProfile
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: wallets
  endpoint:
    path: /api/v1/wallets
    method: GET
    data_selector: data
    params: {}
- name: organization_info
  endpoint:
    path: /api-reference/develop-with-inabit-api/organizations/organization-info
    method: GET
- name: organization_users
  endpoint:
    path: /api-reference/develop-with-inabit-api/organizations/organization-users
    method: GET
- name: organization_contacts
  endpoint:
    path: /api-reference/develop-with-inabit-api/organizations/organization-contacts
    method: GET
- name: organization_transactions
  endpoint:
    path: /api-reference/develop-with-inabit-api/organizations/organization-transactions
    method: GET
- name: wallets
  endpoint:
    path: /api/wallets
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
- name: organization_info
  endpoint:
    path: /api/organizations/info
    method: GET
- name: organization_users
  endpoint:
    path: /api/organizations/users
    method: GET
- name: organization_contacts
  endpoint:
    path: /api/organizations/contacts
    method: GET
- name: organization_transactions
  endpoint:
    path: /api/organizations/transactions
    method: GET
- name: contact
  endpoint:
    path: /api/contacts
    method: GET
- name: wallets
  endpoint:
    path: /api/wallets
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
- name: contact
  endpoint:
    path: /api-reference/develop-with-inabit-api/contacts/contact-info
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: financial_asset
  endpoint:
    path: /api/v1/financial_asset
    method: GET
    data_selector: data
- name: blockchains
  endpoint:
    path: /api/v1/blockchains
    method: GET
    data_selector: data
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: transactionData
- name: whitelist
  endpoint:
    path: /transaction/whitelist
    method: POST
    data_selector: whitelistData
- name: create_api_wallet_address
  endpoint:
    path: /api-wallets-generation
    method: POST
    data_selector: data.createApiWalletAddress
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: POST
- name: transactions
  endpoint:
    path: /transaction/validate
    method: POST
    data_selector: approved
    params: {}
- name: wallets
  endpoint:
    path: /wallets
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: assets
- name: tokens
  endpoint:
    path: /api/v1/tokens
    method: GET
    data_selector: tokens
- name: create_api_wallet_address
  endpoint:
    path: /api-reference/remote-approver-app/api-wallets-generation
    method: POST
    data_selector: data.createApiWalletAddress
    params: {}
- name: transaction_validation
  endpoint:
    path: /validation
    method: POST
    data_selector: approved
- name: organizations
  endpoint:
    path: /api-reference/develop-with-inabit-api/organizations
    method: GET
- name: wallets
  endpoint:
    path: /api-reference/develop-with-inabit-api/wallets
    method: GET
- name: contacts
  endpoint:
    path: /api-reference/develop-with-inabit-api/contacts
    method: GET
- name: transactions
  endpoint:
    path: /api-reference/develop-with-inabit-api/transactions
    method: GET
- name: utilities
  endpoint:
    path: /api-reference/develop-with-inabit-api/utilities
    method: GET
- name: wallets
  endpoint:
    path: /api/v1/wallets
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
- name: blockchain
  endpoint:
    path: /utilities/fetch-blockchains
    method: GET
    data_selector: blockchains
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params: {}
- name: approver
  endpoint:
    path: /validation
    method: POST
- name: approver
  endpoint:
    path: /transaction/validate
    method: POST
    data_selector: transactionValidationData
    params: {}
- name: whitelist
  endpoint:
    path: /transaction/whitelist
    method: GET
    data_selector: whitelistData
    params: {}
notes:
- inabit works exclusively with anonymized tokens, such as Universally Unique Identifiers
  (UUIDs), to represent client data.
- Businesses using inabit retain full control of their sensitive client data.
- All interactions with inabitâ€™s platform must use anonymized tokens when sending
  client-related data via GraphQL API.
- 'These fields must contain anonymized tokens: externalWalletId, externalTransactionId,
  externalContactId.'
- Approval Required for withdrawals using the API signer.
- Requires setup of API Admin user for authentication
- Withdrawals require approval
- Remember to authenticate to call our GraphQL API using an access token (bearer)
  with your API Admin credentials.
- Remember to authenticate to call our graphQL API using an access token (bearer)
  with your API Admin credentials.
- Withdrawals will require an approval.
- Approvals are given automatically according to the logic decided by the clearer.
- Ensure to complete the Approvals Docker Configuration and execute the API signer
  Setup as a one-time prerequisite.
- Users can grant viewing permissions to their accounts for accounting firms.
- A custom tailored Access Token is provided for integration.
- This token is for your accounting firm to have access and connect to your inabit
  account and have access credentials through our GraphQL API.
- Supports over 150 countries.
- Supports 45 different currencies.
- Device pairing can only be performed by 'Approver' roles.
- Device pairing is a vital security feature that enhances the safety and convenience
  of using the inabit platform.
- API Admin role can create transactions and manage users via API.
- API Viewer role has read-only access to API capabilities.
- Uses API keys for authentication
- Every change in a wallet's policy setting will require the owner's approval via
  the mobile application.
- All wallet types are protected by advanced security measures, including encryption,
  two-factor authentication (2FA), and optional multi-sig.
- Flexible solutions for individuals, developers, and enterprises.
- Accelerating Bitcoin transactions will require an additional approval as well as
  a charge higher fee than a regular Bitcoin transaction.
- inabit offers an organization-based disaster recovery (DR).
- inabit chose to partner with Vaultinum.
- Never perform this procedure unless a disaster event has occurred.
- The backup email is set by upgrading an organization's security level via the owner's
  settings.
- Supports multiple assets including ERC-20 and similar standards.
- Supports multiple blockchain standards such as ERC-20, BEP-20, TRC-20.
- This IP address must be whitelisted otherwise, the connectivity to inabit will fail.
- This IP address belongs to inabit and by whitelisting it in the exchange API, you
  enable access for inabit services to operate on your behalf.
- 'Make sure you''ve enabled the following API restrictions when generating the keys:
  General, Spot Trading, Transfer'
- Direct transfers to third parties from Kraken are disabled by default.
- Direct transfers to third parties from Kraken are disabled by default. In order
  to transfer funds from your kraken exchange wallet directly to a countryparty, you
  must manually save each destination address in Kraken's UI first.
- The endpoint remains constant no matter what operation you perform.
- Mutations are used to change data on the server.
- API calls require a valid Access Token for authorizing requests.
- Access tokens are valid for 15 hours and will expire afterwards.
- Ensure to handle OAuth2 token expiration properly.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Uses OAuth2 authentication
- Uses OAuth2 with refresh token â€” requires setup of connected app in inabit
- You must have an active account at inabit.com.
- You have received a login token that is related to your 'apiSigner' user.
- Some endpoints may have rate limits.
- During the first run, the pairing process is initiated.
- You will need to get the pairing code from the docker logs.
- Login token is valid for 30 days and is automatically refreshed.
- Ensure the WHITELIST_CSV_PATH environment variable corresponds to the path used
  inside the container.
- 'In that account, there must be 2 existing users, with the following roles: A. apiAdmin
  user. B. apiSigner user.'
- Requires a login token provided by representatives for the apiSigner user.
- Use Docker to run the approver app.
- The external validation endpoint is expected to expose a 'post' http endpoint for
  validation purpose.
- connectivity to the endpoint must be enabled.
- Requires a login token for access.
- Ensure that your server can access api.inabit.com.
- Supports multiple assets and tokens within supported standards like ERC-20.
- The list below is relevant only for inabit native wallets.
- Connectivity to the endpoint must be enabled
- Bitcoin Transactions Acceleration
- Increased support of different countries & currencies for off-ramp.
- Additional security updates in the mobile approvals app.
- Supports multiple assets including ERC-20 and equivalent standards
- Not all blockchains function identically, so we support different features depending
  on the technical constraints of each blockchain.
- Ensure to correctly map the volumes for persistency.
- Connectivity to the endpoint must be enabled.
- The login token is valid for 30 days and is refreshed automatically.
errors:
- 'INTERNAL_SERVER_ERROR: Delete subscription failed (organization: clu1dzpny0007vjto1gxhl5my)'
- Invalid request
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: Verify the endpoint path.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Verify your authentication credentials.'
- '401 Unauthorized: Recheck login token validity.'
- VALIDATION_RETRY_INTERVAL_MINUTES=3
- VALIDATION_RETRY_MAX_COUNT=10
- '401 Unauthorized: Check your login token.'
- '403 Forbidden: Ensure you have the right permissions.'
- 'VALIDATION_RETRY_MAX_COUNT: Up to 10 retries for validation call'
- 'VALIDATION_RETRY_INTERVAL_MINUTES: Retry every 3 minutes'
- '403 Forbidden: API access denied, check user permissions'
- '500 Internal Server Error: Unexpected error occurred, try again later'
- '401 Unauthorized: Recheck the login token.'
auth_info:
  mentioned_objects:
  - ApiWalletCreateAddressInput
  - API Admin
  - API Viewer
  - API Signer
client:
  base_url: https://api.inabit.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
