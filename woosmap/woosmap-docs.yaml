resources:
- name: assets_search
  endpoint:
    path: /assets/search
    method: GET
    data_selector: attributes
    params:
      stores_by_page: '100'
- name: assets_autocomplete
  endpoint:
    path: /assets/autocomplete
    method: GET
    data_selector: attributes
    params:
      limit: '5'
- name: assets_bounds
  endpoint:
    path: /assets/bounds
    method: GET
    data_selector: attributes
    params: {}
- name: create_assets
  endpoint:
    path: /assets/create
    method: POST
    data_selector: stores
- name: update_assets
  endpoint:
    path: /assets/update
    method: PUT
    data_selector: stores
- name: delete_assets
  endpoint:
    path: /assets/delete
    method: DELETE
    data_selector: stores
    params:
      query: idstore:[{storeId1},{storeId2}]
- name: get_asset_by_id
  endpoint:
    path: /assets/{storeId}
    method: GET
    data_selector: stores
- name: replace_assets
  endpoint:
    path: /assets/replace
    method: PUT
    data_selector: stores
- name: geolocation
  endpoint:
    path: /geolocation
    method: GET
    data_selector: location
- name: assets_nearby
  endpoint:
    path: /assets/nearby
    method: GET
    data_selector: stores
    params:
      ip_address: 75.134.29.90
      limit: 10
- name: timezone
  endpoint:
    path: /timezone
    method: GET
    data_selector: timezone
- name: localities
  endpoint:
    path: /localities
    method: GET
    data_selector: localities
- name: autocomplete_localities
  endpoint:
    path: /localities/autocomplete
    method: GET
    data_selector: predictions
    params:
      input: string
      types: locality|postal_code
      excluded_types: string
      components: string
      language: string
      location: string
      radius: integer
      data: standard
      extended: string
      custom_description: string
- name: details_of_locality
  endpoint:
    path: /localities/details
    method: GET
    data_selector: details
    params:
      public_id: string
      language: string
      fields: geometry
      cc_format: alpha2
- name: geocode_locality
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      address: string
      latlng: string
      types: locality|postal_code|address
      excluded_types: string
      list_sub_buildings: boolean
      components: string
      language: string
      fields: geometry
      data: standard
      cc_format: alpha2
- name: Nearby points of interest
  endpoint:
    path: /nearby_points_of_interest
    method: GET
    data_selector: results
    params:
      types: point_of_interest
      location: 40.71399,-74.00499
      radius: 1000
      page: 1
      limit: 10
- name: Distance Matrix
  endpoint:
    path: /distance_matrix
    method: GET
    data_selector: results
    params:
      language: en
      units: metric
- name: distance_matrix
  endpoint:
    path: /distance_matrix
    method: POST
    data_selector: attributes
- name: route
  endpoint:
    path: /route
    method: GET
    data_selector: attributes
- name: tolls
  endpoint:
    path: /tolls
    method: GET
    data_selector: attributes
- name: isochrone
  endpoint:
    path: /isochrone
    method: GET
    data_selector: attributes
- name: list_zones
  endpoint:
    path: /zones
    method: GET
    data_selector: attributes
- name: create_zones
  endpoint:
    path: /zones
    method: POST
    data_selector: attributes
- name: update_zones
  endpoint:
    path: /zones
    method: PUT
    data_selector: attributes
- name: get_datasets_features
  endpoint:
    path: /datasets/{dataset_id}/features/{feature_id}
    method: GET
    data_selector: attributes
- name: get_static_map
  endpoint:
    path: /static_map
    method: GET
    data_selector: attributes
- name: convert_to_what3words
  endpoint:
    path: /convert_to_what3words
    method: GET
    data_selector: attributes
- name: convert_to_address
  endpoint:
    path: /convert_to_address
    method: GET
    data_selector: attributes
- name: autosuggest
  endpoint:
    path: /autosuggest
    method: GET
    data_selector: attributes
- name: get_venue_by_key
  endpoint:
    path: /venues/{venue_id}
    method: GET
    data_selector: attributes
- name: get_venues_by_key
  endpoint:
    path: /venues
    method: GET
    data_selector: attributes
- name: get_datasets_features
  endpoint:
    path: /datasets/{dataset_id}/features/{feature_id}
    method: GET
    data_selector: attributes
- name: create_dataset
  endpoint:
    path: /datasets
    method: POST
    data_selector: attributes
- name: update_dataset
  endpoint:
    path: /datasets/{dataset_id}
    method: PUT
    data_selector: attributes
- name: delete_dataset
  endpoint:
    path: /datasets/{dataset_id}
    method: DELETE
    data_selector: attributes
- name: list_datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: attributes
- name: get_dataset_status
  endpoint:
    path: /datasets/{dataset_id}/status
    method: GET
    data_selector: attributes
- name: trigger_import
  endpoint:
    path: /datasets/{dataset_id}/import
    method: POST
    data_selector: attributes
- name: search_features
  endpoint:
    path: /datasets/{dataset_id}/features/search
    method: POST
    data_selector: attributes
- name: features
  endpoint:
    path: /datasets/{dataset_id}/features/{feature_id}
    method: GET
    data_selector: attributes
    params: {}
- name: store_search
  endpoint:
    path: /products/search-api
    method: GET
    data_selector: results
    params: {}
- name: localities
  endpoint:
    path: /products/localities
    method: GET
    data_selector: results
    params: {}
- name: geolocation
  endpoint:
    path: /products/geolocation
    method: GET
    data_selector: location
    params: {}
- name: localities_autocomplete
  endpoint:
    path: /localities/autocomplete/
    method: GET
    params:
      components: country:gb
      input: Lond
      no_deprecated_fields: 'true'
      key: YOUR_PUBLIC_API_KEY
- name: geolocation_position
  endpoint:
    path: /geolocation/position
    method: GET
    data_selector: application/json
    params: {}
- name: geolocation_stores
  endpoint:
    path: /geolocation/stores
    method: GET
    data_selector: application/json
    params: {}
- name: geolocation_stores
  endpoint:
    path: /geolocation/stores
    method: GET
    data_selector: stores
    params: {}
- name: geolocation_timezone
  endpoint:
    path: /geolocation/timezone
    method: GET
    data_selector: timezone
    params: {}
- name: create_stores
  endpoint:
    path: /stores
    method: POST
    data_selector: status
    params: {}
- name: stores
  endpoint:
    path: /stores
    method: GET
    data_selector: stores
- name: update_stores
  endpoint:
    path: /stores
    method: PUT
    data_selector: stores
- name: stores
  endpoint:
    path: /stores
    method: PUT
    data_selector: null
    params: {}
- name: storeId
  endpoint:
    path: /stores/{storeId}
    method: GET
    data_selector: null
    params:
      storeId: STORE_ID_123456
- name: stores_search
  endpoint:
    path: /stores/search
    method: GET
- name: stores_autocomplete
  endpoint:
    path: /stores/autocomplete
    method: GET
- name: autocomplete_localities
  endpoint:
    path: /localities/autocomplete
    method: GET
    data_selector: localities
- name: stores_autocomplete
  endpoint:
    path: /stores/autocomplete
    method: GET
    data_selector: predictions
- name: stores_search_bounds
  endpoint:
    path: /stores/search/bounds
    method: GET
    data_selector: bounds
- name: localities_autocomplete
  endpoint:
    path: /localities/autocomplete
    method: GET
    data_selector: results
    params: {}
- name: localities_details
  endpoint:
    path: /localities/details
    method: GET
    data_selector: result
    params: {}
- name: localities_geocode
  endpoint:
    path: /localities/geocode
    method: GET
    data_selector: result
    params: {}
- name: geocode
  endpoint:
    path: /localities/geocode
    method: GET
    data_selector: results
    params: {}
- name: nearby_points_of_interest
  endpoint:
    path: /localities/nearby
    method: GET
    data_selector: results
    params: {}
- name: localities_nearby
  endpoint:
    path: /localities/nearby
    method: GET
    data_selector: results
    params:
      types: point_of_interest
      location: 40.71399,-74.00499
      page: 3
- name: address_autocomplete
  endpoint:
    path: /address/autocomplete/json
    method: GET
    data_selector: predictions
- name: address_details
  endpoint:
    path: /address/details/json
    method: GET
    data_selector: result
- name: zones
  endpoint:
    path: /zones
    method: PUT
    data_selector: zones
    params: {}
- name: zone_by_id
  endpoint:
    path: /zones/{zone_id}
    method: GET
    data_selector: zone
    params: {}
- name: delete_zone
  endpoint:
    path: /zones/{zone_id}
    method: DELETE
    data_selector: status
    params: {}
- name: distance_matrix
  endpoint:
    path: /distance/distancematrix/json
    method: GET
    data_selector: rows
    params: {}
- name: distance_matrix
  endpoint:
    path: /distance/distancematrix/json
    method: GET
    data_selector: default
    params: {}
- name: route
  endpoint:
    path: /distance/route/json
    method: GET
    data_selector: default
    params: {}
- name: distance_route
  endpoint:
    path: /distance/route/json
    method: GET
- name: tolls
  endpoint:
    path: /distance/tolls/json
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: static_map
  endpoint:
    path: /maps/static
    method: GET
    data_selector: responses.200.content.image/webp.schema
    params:
      language: en
      lat: '43.6'
      lng: '3.883'
      zoom: 11
      width: 400
      height: 400
- name: convert_to_3wa
  endpoint:
    path: /what3words/convert-to-3wa
    method: GET
    data_selector: responses.200.content.application/json.schema
    params:
      coordinates: 48.858304,2.294514
- name: convert_to_address
  endpoint:
    path: /what3words/convert-to-address
    method: GET
    data_selector: responses.200.content.application/json.schema
    params:
      words: couch.spotted.amended
- name: autosuggest
  endpoint:
    path: /what3words/autosuggest
    method: GET
    params: {}
- name: autosuggest
  endpoint:
    path: /what3words/autosuggest
    method: GET
    params: {}
- name: venue_by_key
  endpoint:
    path: /indoor/venues/{venue_id}
    method: GET
    params: {}
- name: venues_by_key
  endpoint:
    path: /indoor/venues
    method: GET
    params: {}
- name: indoor_style
  endpoint:
    path: /indoor/style
    method: GET
    params: {}
- name: distance_matrix
  endpoint:
    path: /indoor/distancematrix/{venue_id}
    method: GET
    params: {}
- name: directions
  endpoint:
    path: /indoor/directions/{venue_id}
    method: GET
    data_selector: results
- name: search_venue_pois
  endpoint:
    path: /indoor/venues/{venue_id}/pois/search
    method: GET
    data_selector: results
- name: pois_search
  endpoint:
    path: /indoor/venues/west_pal/pois/search
    method: GET
    data_selector: features
- name: pois_autocomplete
  endpoint:
    path: /indoor/venues/{venue_id}/pois/autocomplete
    method: GET
    data_selector: features
- name: autocomplete
  endpoint:
    path: /indoor/venues/west_pal/pois/autocomplete
    method: GET
- name: feature_by_key
  endpoint:
    path: /indoor/venues/{venue_id}/features/{feature_id}
    method: GET
- name: tiles_by_key
  endpoint:
    path: /indoor/venues/{venue_id}/tiles/{z}/{x}/{y}.pbf
    method: GET
- name: transit_route
  endpoint:
    path: /transit/route
    method: GET
- name: datasets
  endpoint:
    path: /datasets/
    method: GET
    data_selector: datasets
    params:
      per_page: 10
      page: 1
- name: dataset_status
  endpoint:
    path: /datasets/{dataset_id}/status
    method: GET
    data_selector: status
    params: {}
- name: trigger_import
  endpoint:
    path: /datasets/{dataset_id}/import
    method: POST
    data_selector: import_status
    params: {}
- name: reimport_dataset_webhook
  endpoint:
    path: /datasets/hooks/reimport/{reimport_key}
    method: POST
- name: search_features
  endpoint:
    path: /datasets/{dataset_id}/features/search/
    method: POST
- name: nearby_features
  endpoint:
    path: /datasets/{dataset_id}/features/nearby/
    method: POST
- name: intersect_features
  endpoint:
    path: /datasets/{dataset_id}/features/intersects/
    method: POST
- name: contains_features
  endpoint:
    path: /datasets/{dataset_id}/features/contains/
    method: POST
- name: within_features
  endpoint:
    path: /datasets/{dataset_id}/features/within/
    method: POST
- name: get_feature
  endpoint:
    path: /datasets/{dataset_id}/features/{feature_id}
    method: GET
- name: query
  endpoint:
    path: /query
    method: GET
    data_selector: results
    params: {}
- name: limit
  endpoint:
    path: /limit
    method: GET
    data_selector: results
    params: {}
- name: lat
  endpoint:
    path: /lat
    method: GET
    data_selector: results
    params: {}
- name: lng
  endpoint:
    path: /lng
    method: GET
    data_selector: results
    params: {}
- name: radius
  endpoint:
    path: /radius
    method: GET
    data_selector: results
    params: {}
- name: encoded_polyline
  endpoint:
    path: /encoded_polyline
    method: GET
    data_selector: results
    params: {}
- name: stores_by_page
  endpoint:
    path: /stores_by_page
    method: GET
    data_selector: results
    params: {}
- name: page
  endpoint:
    path: /page
    method: GET
    data_selector: results
    params: {}
- name: zone
  endpoint:
    path: /zone
    method: GET
    data_selector: results
    params: {}
- name: language
  endpoint:
    path: /language
    method: GET
    data_selector: results
    params: {}
- name: input
  endpoint:
    path: /input
    method: GET
    data_selector: results
    params: {}
- name: types
  endpoint:
    path: /types
    method: GET
    data_selector: results
    params: {}
- name: excluded_types
  endpoint:
    path: /excluded_types
    method: GET
    data_selector: results
    params: {}
- name: components
  endpoint:
    path: /components
    method: GET
    data_selector: results
    params: {}
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: results
    params: {}
- name: latlng
  endpoint:
    path: /latlng
    method: GET
    data_selector: results
    params: {}
- name: geocode_types
  endpoint:
    path: /geocode_types
    method: GET
    data_selector: results
    params: {}
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: results
- name: distance
  endpoint:
    path: /distance
    method: GET
    data_selector: results
- name: AssetsCollectionRequest
  endpoint:
    path: /assets
    method: POST
    data_selector: stores
    params: {}
- name: Success
  endpoint:
    path: /success
    method: GET
    data_selector: value
    params: {}
- name: Error400
  endpoint:
    path: /error400
    method: GET
    data_selector: status
    params: {}
- name: AssetAutocompleteResponse
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: predictions
    params: {}
- name: BoundsResponse
  endpoint:
    path: /bounds
    method: GET
    data_selector: bounds
    params: {}
- name: LocalitiesAutocompleteResponse
  endpoint:
    path: /localities/autocomplete
    method: GET
    data_selector: localities
    params: {}
- name: localities_nearby
  endpoint:
    path: /localities/nearby
    method: GET
    data_selector: results
- name: address_autocomplete
  endpoint:
    path: /address/autocomplete
    method: GET
    data_selector: predictions
- name: address_details
  endpoint:
    path: /address/details
    method: GET
    data_selector: result
- name: address_geocode
  endpoint:
    path: /address/geocode
    method: GET
    data_selector: results
- name: Addresses
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: Zones
  endpoint:
    path: /zones
    method: GET
    data_selector: zones
- name: DistanceMatrix
  endpoint:
    path: /distance
    method: GET
    data_selector: rows
- name: DistanceMatrixRequest
  endpoint:
    path: /distance/matrix
    method: POST
    data_selector: results
- name: Transit
  endpoint:
    path: /transit
    method: GET
notes:
- 'Rate limit: 20/1s'
- Requires OAuth2 setup for API access
- It is recommended to only enable APIs that you really need.
- Support is only provided in English and French.
- Public API keys are used to implement Woosmap features on the client-side.
- Private API keys allow you to manage integrations on the server-side or in mobile
  environments.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- API requires an API key for access.
- Public key of the project usually starts with `woos-`
- Private key with or without write permission.
errors:
- '401: Unable to locate credentials.'
- '402: Out of free quota.'
- '403: Credentials found, but not matching.'
- '404: Feature or Dataset were not found'
- '422: Validation Error'
- '429: Rate limit reached'
- '404: Feature or Dataset were not found.'
- '422: Validation Error.'
- '429: Rate limit reached.'
- '401 Unauthorized: Check your API key or OAuth token'
- '404 Not Found: Ensure the endpoint is correct'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Incorrect authentication credentials. Please check or use a valid
  API Key'
- '403 Forbidden: You do not have permission to perform this action. Please check
  your domains restrictions, or the referer of the API call.'
- '403 Forbidden: This Woosmap API is not enabled for this project.'
- '429 Too Many Requests: The rate limit for this endpoint has been exceeded'
- '401: Incorrect authentication credentials. Please check or use a valid API Key'
- '403: This Woosmap API is not enabled for this project.'
- '429: The rate limit for this endpoint has been exceeded'
- '400: The request is invalid, the data is not a valid JSON.'
- '400: Invalid. The data is not a valid JSON.'
- '401: Unauthorized. Incorrect authentication credentials.'
- '429 Too Many Requests: The rate limit for this endpoint has been exceeded.'
- '401 Unauthorized: Incorrect authentication credentials.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401: Unauthorized'
- '402: Payment Required'
- '403: Forbidden'
- '422: Unprocessable Entity'
- '400: Bad Request'
- 401 Unauthorized
- 402 Payment Required
- 403 Forbidden
- 422 Unprocessable Entity
- '401 Unauthorized: Recheck API keys or authorization'
- '402 Payment Required: Check your billing status'
- '403 Forbidden: Ensure you have access to this resource'
- '422 Unprocessable Entity: Check for validation errors in your request'
- '404: Dataset was not found'
- 'Error401: Incorrect authentication credentials. Please check or use a valid API
  Key'
- 'Error403: This Woosmap API is not enabled for this project.'
- 'Error429: The rate limit for this endpoint has been exceeded'
- 'REQUEST_DENIED: Check your API key.'
- 'AuthenticationErrorResponse: AuthenticationErrorResponse is the base authentication
  error model.'
- 'HTTPErrorModel: HTTPErrorModel'
- 'HTTPValidationError: HTTPValidationError'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - PrivateApiKeyAuth
  - PublicApiKeyAuth
  - RefererHeader
client:
  base_url: https://api.woosmap.com
  auth:
    type: PublicApiKeyAuth
    location: query
    header_name: Referer
  paginator:
    type: page
    page_size_param: stores_by_page
    default_page_size: 100
source_metadata: null
