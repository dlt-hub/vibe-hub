resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trade_message
  endpoint:
    path: /trade/message
    method: POST
    data_selector: trade
    params: {}
- name: strategy_fields
  endpoint:
    path: /api/v1/strategy/fields
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trailing_stop
  endpoint:
    path: /api/v1/trailing_stop
    method: POST
    data_selector: stopLoss
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: strategies
  endpoint:
    path: /app/trading/strategies
    method: GET
- name: signals
  endpoint:
    path: /app/trading/strategies/{strategy_id}/signals
    method: GET
- name: Tradovate
  endpoint:
    path: /docs/all-supported-connections/tradovate
    method: GET
- name: default_quote_currency
  endpoint:
    path: /default-quote-currency
    method: GET
    data_selector: quote_markets
    params: {}
- name: contact_information
  endpoint:
    path: /contact-information
    method: GET
    data_selector: contact
    params: {}
- name: supported_asset_classes
  endpoint:
    path: /supported-asset-classes
    method: GET
    data_selector: asset_classes
    params: {}
- name: strategies
  endpoint:
    path: /app/trading/strategies
    method: GET
    data_selector: strategies
    params: {}
- name: signals
  endpoint:
    path: /app/trading/strategies/signals
    method: GET
    data_selector: signals
    params: {}
- name: signals
  endpoint:
    path: /signals
    method: POST
    data_selector: signal
- name: Alpaca
  endpoint:
    path: /docs/all-supported-connections/alpaca
    method: GET
- name: Coinbase
  endpoint:
    path: /docs/all-supported-connections/coinbase
    method: GET
- name: Kraken
  endpoint:
    path: /docs/all-supported-connections/kraken
    method: GET
- name: Bybit
  endpoint:
    path: /docs/all-supported-connections/bybit
    method: GET
- name: Tastytrade
  endpoint:
    path: /docs/all-supported-connections/tastytrade
    method: GET
- name: stocks
  endpoint:
    path: /api/v1/stocks
    method: GET
- name: Tradovate
  endpoint:
    path: /docs/all-supported-connections/tradovate
    method: GET
- name: trading_signal
  endpoint:
    path: /trading/webhook/{uuid}/{password}
    method: POST
    data_selector: payload
- name: webhook
  endpoint:
    path: /trading/webhook/{webhook_id}/{signal_id}
    method: POST
    data_selector: payload
- name: crypto_assets
  endpoint:
    path: /api/v2/assets
    method: GET
- name: trading_pairs
  endpoint:
    path: /api/v2/trading_pairs
    method: GET
- name: Invalid Nonce
  endpoint:
    path: /api/v3/nonces
    method: POST
    data_selector: nonce
    params: {}
- name: Contact Information
  endpoint:
    path: /api/v3/contact
    method: GET
    data_selector: contact
    params: {}
- name: trading_signal
  endpoint:
    path: /trading/webhook/{uuid}/{password}
    method: POST
    data_selector: payload
    params: {}
- name: signals
  endpoint:
    path: /signals
    method: POST
    data_selector: signal
- name: trading_signal
  endpoint:
    path: /trading/webhook/{uuid}/{password}
    method: POST
    data_selector: payload
- name: webhook
  endpoint:
    path: /trading/webhook/{webhook_id}/{token}
    method: POST
    data_selector: payload
- name: trading_webhook
  endpoint:
    path: /trading/webhook/{uuid}/{password}
    method: POST
    data_selector: payload
    params: {}
notes:
- The TradersPost Developer API is not available yet.
- Not Designed for High-Frequency or Sub-Minute Trading
- Signal Conflicts (Race Conditions)
- No Broker State or Order Feedback Loop
- Not a 'Set-It-and-Forget-It' Platform
- Uses OAuth2 with refresh token — requires setup of connected app in api
- You can enable or disable strategies or subscriptions in bulk.
- Search criteria are remembered when submitting a search form.
- TradersPost is not intended for ultra-short-term scalping or high-frequency trading
  strategies operating below the 1-minute timeframe.
- It's the trader’s responsibility to ensure that multiple signals do not conflict
  with one another.
- Uses OAuth2 with refresh token — requires setup of connected app in traderspost
- Some objects may return nulls in deeply nested fields
- Enable side swapping disabled by default for new strategies and subscriptions.
- Improved user experience when connecting accounts to TradersPost.
- Signal quantity multiplier allows for scaling positions up or down.
- Search feature helps locate brokers, exchanges, or prop firms.
- TradersPost now provides free options trading exclusively through TradeStation.
- The TradersPost affiliate program now includes support for affiliate coupon codes.
- Some objects like Contact may return nulls in deeply nested fields
- Signal quantity multiplier allows scaling positions up or down.
- You can now send the `ignoreTradingWindows` parameter in a webhook to bypass the
  trading windows specified in the strategy subscription settings.
- You now have more control over the open order canceling functionality by using the
  `cancel` property in the webhook JSON.
- Merged the standalone `Strategy > Submit Signal` page with the `Strategy > Ticker`
  page.
- Improved the ProjectX integration to display only active accounts when connecting
  ProjectX to TradersPost.
- Fixed a bug that caused a 500 Internal Server Error when an error response was received
  from the ProjectX API.
- Improved Tradovate and NinjaTrader integrations for multi-account setups.
- Fixed a bug that caused Robinhood accounts with positions in delisted tickers to
  fail to load properly in TradersPost.
- Added a warning to strategy settings about potential slippage when using market
  orders.
- Users can purchase additional broker connections beyond what is included in their
  plan.
- Fixed issue with Tradovate and NinjaTrader spread symbols like ES -H5 +M5 causing
  the the orders list to not render.
- We do not support these kinds of orders yet so the order list was changed to simply
  hide these orders for now until we are able to properly support calendar spreads.
- Fixed issue with billing checkout coupon code modal not loading correctly.
- Improve and optimize the Close All Positions functionality so the positions are
  closed in batches of 10 and progress is reported to the end user as each batch completes.
- Add breadcrumbs to the header to enhance navigation and clearly indicate the current
  page's location within the applications hierarchy.
- Show selected broker account IDs in more places throughout the application to make
  it clear which account a trade is being executed in.
- Improve Copy Webhook URL functionality to show the last 4 digits of the webhook
  URL and provide example webhook JSON that can be easily copied and pasted.
- Refresh quote whenever you open the quote modal so that you get a fresh quote from
  your broker.
- Webhook rate limiting has been turned on. You are allowed 60 requests per minute
  and 500 per hour.
- Uses OAuth2 with refresh token — requires setup of connected app in TradersPost
- The expiresAt field supports relative times, such as +5 minutes or +1 hour.
- System-wide cap of 200 subscriptions per strategy.
- Improve Close All Positions functionality so the positions are closed in batches
  of 10 and progress is reported to the end user as each batch completes.
- Anyone who hits the rate limits will have requests over the rate limits blocked.
- 'The webhook JSON now includes two optional fields: message and expiresAt.'
- Fixed an issue where the `Disable canceling open orders` setting mistakenly affected
  explicit `action=cancel` webhooks.
- Resolved an Interactive Brokers issue where orders for OTC tickers with empty quotes
  were not submitted correctly to the IBKR API.
- Fixed a bug that affected the rendering of Interactive Brokers orders submitted
  outside of TradersPost during the overnight trading session.
- Disallowed `+` to be used in email addresses when registering new accounts.
- Fixed Robinhood OAuth integration and Two-Factor authentication methods that would
  cause users to not be able to connect their Robinhood account to TradersPost.
- New fields 'Style' and 'Allow Auto Submit' added to strategy form.
- Fixed a bug in Tradovate symbol parsing where symbols such as `CLF5` were incorrectly
  parsed as `CLF2024` instead of `CLF2025`.
- Set a system-wide cap of 200 subscriptions per strategy.
- Disallow continuous contract symbols in the list of allowed tickers for strategies
  or subscriptions.
- This integration is in BETA and you may experience issues that we have not discovered
  yet.
- Integration is in BETA and you may experience issues that we have not discovered
  yet.
- Fix error that occurred when using `BTC-USD` as the symbol for Kraken instead of
  `XBT-USD`.
- Fix so that the 'Reconnect' button shows whenever Bybit access token expires and
  API calls to Bybit fail with access token expired response.
- Using continuous contracts like MNQ1! will prevent trades from executing
- Bybit integration is in beta and may experience issues.
- Testing with a paper account is recommended.
- The basic plan can now have 2 live connected brokers and can trade 2 asset classes.
- Added support for take profit and stop loss to Tradovate with entry orders.
- Audit Log added to track history of changes made to strategies, webhooks, subscriptions,
  and other account-related data.
- In this release we addressed a bug in the Trading Window functionality caused by
  day light savings time.
- Only the last queued trade will be sent to the broker at the next market open.
- It is recommended to test with a paper account first.
- Important warning regarding scammers and phishers when joining Discord.
- Only one trade can be executed in parallel per IBKR user due to API limitations
- Bybit integration is in BETA and may have undiscovered issues.
- For Tradier, limit sell short orders will now send DAY instead of GTC.
- The official TradersPost documentation has been more directly integrated with the
  application.
- Fixed bug that would cause the strategy subscription edit page to fail to load for
  options strategies when the connected broker is slow to load the option chain.
- Fixed bug that would cause strategy subscriptions to use the quote last price in
  some cases instead of the mark price for calculating take profit, stop losses and
  quantities.
- Fixed bug with Coinbase and Interactive Brokers that would cause trade execution
  to fail in some scenarios when TradersPost has to wait for an order to cancel or
  wait for an exit order to fill.
- In this release we made a change to the Interactive Brokers integration so that
  only one trade can be executed in parallel per IBKR user.
- This is due to a limitation with the IBKR API where they are not able to execute
  multiple trades in parallel and it would frequently cause API calls to timeout.
- Fixed bug that caused users to not be able to use a backup code to disable 2fa.
- Improved support for 'Add to Home Screen' functionality for iPhone + Safari so that
  header is not behind iPhone top bar and correct app icon is used.
- Fixed issue caused by complex orders created in TDAmeritrade outside of TradersPost.
- Fixed issue with trading windows day of week not respecting configured timezone.
- Beware that if you disable canceling open orders and you use take profit or stop
  losses in your broker and you send an exit signal, the broker may reject your exit
  order due to the take profit or stop loss orders still being open.
- In this release we added quote support to the Interactive Brokers integration.
- We will now make an attempt to fetch a quote from IBKR and if we cannot get a quote
  from IBKR, we will fallback to the Polygon market data provider.
- Fix generic 500 error when trying to connect a broker while the broker API is unavailable.
- Ability to ignore trades outside of a defined trading window.
- We removed beta flag from the Tradier integration. It has been in use for several
  months now by customers and we believe it is stable.
- A bug was inadvertently introduced to the TradeStation integration that was causing
  order history to not show Futures or Options orders when you have the Stocks asset
  class disabled.
- Fixed an issue with TradeStation symbols that impacted the ability to fetch quotes
  for symbols ending in the character P, C or D.
- Fixed an issue with inviting a user to an account a 2nd time.
- This only affected accounts with the Stocks asset class disabled under My Account
  > Asset Classes within TradersPost.
- This release is not that useful for customers yet because TradingView does not have
  Alpaca crypto data so it is not possible to build strategies in TradingView and
  PineScript using Alpaca crypto data.
- We patched a bug with the Robinhood integration today that was caused by a change
  they made in their API that broke our integration for market buy orders only.
- The changes they are making seem related to preparing for 24/7 trading on some tickers.
- Disabling a strategy will cause all strategy subscriptions to effectively be disabled.
- Improved security with Two-Factor (2FA) authentication
- This change should not affect anyone. It only adds some additional protection and
  security to the TradersPost system to protect us from bad actors.
- Market buy orders executed as limit orders with a collar on the price.
- Issue with market buy orders resolved after API integration upgrade.
- You can easily re-enable a strategy after disabling and strategy subscriptions will
  begin executing trades again.
- Prior to this release, the default was always Bid-ask midpoint and now you can configure
  which price to use in your TradersPost paper broker!
- Added support for trailing stops in the TradeStation broker integration.
- Added support for 100+ new futures tickers.
- You can see the full list of supported futures tickers here.
- Fixed an issue with Robinhood market buy orders not filling sometimes.
- Webhooks now live on the subdomain webhooks.traderspost.io
- Users commonly have issues with the JSON that gets sent to TradersPost.
- We adopted a new JSON5 parser that makes the JSON that we accept a bit more flexible.
- While Alpaca does support crypto, TradersPost has not integrated it with our platform
  yet but we plan to in the future.
- Fixed issue with the broker account balance not loading on the dashboard.
- Webhooks now live on the subdomain webhooks.traderspost.io. All you need to do to
  switch is change traderspost.io to webhooks.traderspost.io in your webhooks.
- The main application has moved to be hosted on app.traderspost.io. No change is
  required for you and all links are updated and redirected to the new subdomain.
- Improvements to make managing strategies more flexible and compatible with TradingView
  strategies.
- Fixed an issue with webhook requests sent from a client using an IPv6 ip address
  that caused the webhook request to fail when the webhook is restricted to certain
  ip addresses.
- TradersPost can lose connectivity with your broker in some scenarios.
- Fixed bug with Alpaca accounts erroring that have crypto orders or positions.
- Options settings fields are now hidden when the Options asset class is not selected.
- When the asset class is changed to Options the additional settings are shown.
- Fixed bug with futures continuous contract symbols in webhooks like NQ or NQ1! that
  caused some webhook requests to fail.
- Fixed bug with inviting users to your TradersPost account where user is already
  a registered TradersPost user. Accepting the invite and attempting to set a password
  would result in an error.
- Fixed bug with Robinhood integration authentication which would occasionally cause
  TradersPost to lose API access to some Robinhood accounts.
- Fix issue with TradeStation integration in accounts with a high volume of orders
  per day that can cause order creation and cancelation to fail sometimes.
- Fix issue with the Max strategy positions feature to consider positions being exited
  and entry orders being canceled when counting how many positions are open in comparison
  to the Max strategy positions setting.
- Fix issue with TradeStation order statuses not being properly handled in all scenarios
  which can result in trades failing.
- Improved concurrency locking when executing trades so that two trade signals for
  the same broker account and ticker cannot be executed in parallel at the exact same
  time.
- Fix issue with TD Ameritrade sometimes not returning quotes for requested symbols
  which would result in trades sometimes failing with the error `Could not find quote
  for Symbol TSLA`.
- Fix issue with Robinhood API integration causing order history API requests to return
  and display incorrect symbols names in order history.
- Fix issue with ticker search bar sometimes not returning results.
- TradersPost does not have access to your banking information and does not have the
  ability to transfer money in or out of your accounts.
- If you change your password in TD Ameritrade, then all 3rd parties that have access
  to your account will lose access and your account must be reconnected.
- Signals are created outside of TradersPost, typically by a charting platform, indicator,
  or strategy like TradingView or TrendSpider, and sent to TradersPost via a webhook
  URL.
- While TradeStation does support crypto, TradersPost has not integrated it with our
  platform yet but we plan to in the future.
- Tradier paper accounts are delayed by 15 minutes and there is no way to change this.
- Supports trading stocks
- TradersPost now fully supports the Traditional and Roth IRA accounts provided by
  Robinhood
- The TradersPost + Tradovate integration currently does not support market data so
  we are not able to fetch quotes.
- A TradersPost paper broker cannot use Tradovate as a connection for market data.
- E*TRADE access tokens last for two weeks (15 days) after you connect it to TradersPost.
- tastytrade does not provide access to market data through their API, so the we use
  market data from Polygon at no additional charge to you for stocks and crypto only.
- The futures asset class within tastytrade does not support market data, so you cannot
  fetch quotes for futures symbols or view the P&L for futures positions.
- While tastytrade technically allows holding fractional stock shares, fractional
  quantities are not fully supported for automated trading.
- This functionality is primarily intended to handle small fractional amounts received
  from dividends or account adjustments, not for executing full or partial trades.
- We strongly recommend disabling fractional quantities when using tastytrade with
  TradersPost.
- Improve performance of TradeStation integration for accounts with a high volume
  of orders per day.
- The Interactive Brokers API can sometimes be unreliable.
- IBKR WebAPI only supports the stocks asset class.
- The IBKR API has a daily 'reset' window between 23:45 and 00:45 ET.
- Some paper IBKR accounts have trouble connecting to TradersPost.
- Interactive Brokers only allows one order at a time per account.
- USD is the default value if nothing is selected or the asset cannot be quoted in
  the default quote currency selected.
- Does not currently support spot margin trading.
- Only works with unified trading accounts.
- When creating your API key and API secret, please be sure to set your Custom nonce
  window to at least 20000 ms to avoid an invalid nonce error.
- Webull accounts can be connected to TradersPost manually by getting an access token
  from Webull.
- Webull has not yet implemented OAuth with refresh tokens so you will need to manually
  do this and when the token expires, you will have to repeat the manual steps again
  to reconnect Webull to TradersPost.
- Add ability for users to enable and disable stocks, options and futures trading
  functionality without having to contact TradersPost support.
- Currently, only Binance.com is supported.
- TradersPost does not support Binance's IP whitelisting feature because our IP addresses
  are subject to change.
- No market data provided by ProjectX.
- No P&L data for positions or account provided by ProjectX.
- Account balances do not update in real-time. It only updates after you close a position.
- No bracket orders supported. This means you cannot send a take profit or stop loss
  with your entry order.
- Submitting a limit order with a price greater than current market price will convert
  the order to a market order.
- Ensure to understand the implications of stop loss and take profit settings based
  on the underlying ticker.
- Subscriptions allow you to connect a strategy to a broker and control the orders
  sent to the broker.
- TradersPost supports buying, selling and shorting futures contracts with support
  for over 100 tickers.
- 'Futures tickers will need to be formatted like this: MNQ, NQ, MES.'
- Allow adding to an existing open position. If this is not checked, trades will be
  rejected if there is already an open position.
- Supports decimal values like `0.1`, `1.5`, `2`, `10`, etc.
- Can be used to scale down as well as up.
- Works with both whole and fractional quantities (if your broker supports fractional
  trading and 'Use fractional quantity' is enabled).
- If the calculated final quantity results in a decimal and your broker does not support
  fractional shares/contracts, the value will be rounded down.
- If you encounter an order that gets rejected with a message like Price = 1.19500000
  not rounded to a valid price increment [0.01], it is usually caused by a discrepancy
  with the data provided by TradeStation.
- Alpaca does not support complex orders (OCO, OTO, bracket) for the Crypto or Options
  asset class.
- TradersPost is NOT designed to be a high frequency trading platform.
- Failed or rejected orders will never be retried.
- Alert webhooks from third parties can be delayed for an undetermined amount of time
  or may not be sent at all.
- You are responsible for ensuring that signals do not conflict with each other.
- TradersPost does not support sending back to back signals at the same time.
- Due to the lack of market data with Tradovate, a TradersPost paper broker cannot
  use Tradovate as a connection for market data.
- You are required to send a price in your signal since we aren't able to fetch quotes.
- Since we aren't able to use your market data or fetch quotes, we aren't able to
  show open position P&L.
- The JSON that gets sent to TradersPost has to be precisely accurate in order for
  us to accept it.
- Provide as much detail as possible about the trade for support.
- The IBKR API has a daily 'reset' window that occurs between 23:45 and 00:45 ET for
  the North America region.
- Interactive Brokers by default requires order confirmations under certain conditions.
- The Interactive Brokers API only has the ability to view todays orders.
- To send market orders, change the Entry order type and Exit order type from Limit
  to Market.
- To trade in extended hours, enable extended hours in TradingView or TrendSpider,
  and check Allow entry extended hours and Allow exit extended hours in TradersPost.
- In extended hours, only limit orders are allowed; market orders are not permitted.
- Ensure the Auto submit checkbox is checked for automatic order submission.
- Check TradingView Alerts log to ensure alerts are triggered.
- Review signal requests in TradersPost for execution details.
- TradersPost is a software as a service and is hosted in a shared cloud environment.
- TradersPost does not charge a fee per trade. Our service is a monthly or yearly
  Software as a Service (SaaS) fee.
- Webull has not yet implemented OAuth with refresh tokens
- TradingView alerts and TradersPost both work in the cloud and independently of your
  computer.
- Promotional discounts typically only last for 12 months.
- TradersPost has weekly scheduled maintenance windows on Saturdays from 01:30 AM
  to 05:30 AM UTC.
- At this time, TradersPost does not support Binance's IP whitelisting feature because
  our IP addresses are subject to change.
- No bracket orders supported. This means you cannot send a take profit or stop loss
  with your entry order. It is possible to set risk parameters in your prop firm risk
  settings with most prop firms that use ProjectX. Please get in touch with your firm's
  support team for help on setting this up.
- Submitting a limit order with a price greater then current market price will convert
  the order to a market order and will show as a market order in your order history
  instead of a limit order.
- Allows adding to an existing open position
- Supports both bullish and bearish trades
- By default, entry orders are submitted to your broker with extended hours disabled.
- By default, exit orders are submitted to your broker with extended hours disabled.
- Not a compatible position size option for the Futures asset class
- If the broker you are using does not support quotes (Tradovate and ProjectX) you
  must always send a price in your signal if you are sending limit orders or bracket
  orders (ProjectX does not yet support brackets).
- If you hire a developer to code your strategy, it is important that the coder is
  aware you intend to use the strategy with TradersPost for automation.
- Not all strategies can be automated so it is important it is built in a way that
  is compatible with automation and TradersPost.
- Start your journey of learning automated trading strategy development by exploring
  these free and paid resources.
- Uses webhooks to send signals to TradersPost from custom code.
- Provide the Trade Signal URL for support.
- Ensure to include context about the trade for better assistance.
- In your Strategy Subscription settings, scroll down to the Entry and Exit sections
  and change the Entry order type and Exit order type from Limit to Market.
- If you would like your strategy to trade in extended hours, you will need to setup
  the alert in TradingView or TrendSpider with extended hours enabled on the chart.
  Then, in TradersPost, make sure you have the Allow entry extended hours and Allow
  exit extended hours checkboxes checked so that TradersPost knows to send orders
  with extended hours enabled. This tells the broker that the order is allowed to
  be filled in extended hours. Note that in extended hours, you can only use limit
  orders and market orders are not allowed.
- To make your strategy submit orders to the broker automatically, make sure you have
  the Auto submit checkbox checked in your strategy subscription settings.
- This is likely due to you selecting a contract that you can't afford based on the
  Position Size settings you set. Check your Position Size settings and try removing
  your settings until you get an entry order generated.
- TradersPost does not require coding. You can easily connect strategies to TradersPost
  that other traders have created and published on TradingView.
- TradersPost supports Two-Factor (2FA) authentication with popular authenticator
  apps like Google Authenticator and Authy.
- TradersPost and TradingView work in the cloud and independently of your computer.
- During these maintenance windows, TradersPost may be temporarily unavailable.
- The JSON that gets sent to TradersPost has to be precisely accurate.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '500 Internal Server Error: Error response from ProjectX API.'
- Fixed bug with multi-leg options orders that would cause Alpaca orders to not load.
- '500 Internal Server Error: Check API response for details.'
- '429: Too many requests. You are only allowed 60 requests per minute and 500 requests
  per hour.'
- '500 Internal Server Error: Throttle API calls or reduce frequency'
- '500 internal server error: Occurs when trying to connect a broker to a strategy
  that does not support the strategy''s asset class.'
- '500 Internal Server Error: Generic error when broker API is unavailable'
- This was causing trade execution to not be able to see Futures or Options open orders
  orders to be able to cancel them before sending new orders.
- Your app version is missing important stock trading updates. You can still place
  orders on the web.
- Your app version is missing important stock trading updates.
- 'JSON Parse Errors: We are now able to provide more specific error messages to help
  you identify what is wrong with your JSON.'
- Occasionally some users would see an error when loading the dashboard after being
  inactive.
- Occasionally some users would see an error when loading the dashboard after coming
  back from being inactive for some time.
- Could not find quote for Symbol TSLA
- Order history API requests to return and display incorrect symbols names in order
  history.
- 'Broker Connection Error: If the connection error occurs when editing a strategy
  subscription, instead of letting the full page error, we will catch the error and
  allow you to continue editing your strategy subscription.'
- 'Dashboard Broker Connection Error: If the error occurs when loading data on the
  dashboard, the special error message will show instead of a regular internal server
  error page.'
- '401 Access Denied: If you get a 401 Access Denied when trying to submit orders
  to your live account, this is caused by having 2fa enabled.'
- Idle timeout reached
- Don't allow TradersPost paper accounts to be Reconnected. Clicking Reconnect on
  a TradersPost paper broker would cause the paper account balances to be corrupted.
- Price = 1.19500000 not rounded to a valid price increment [0.01]
- '401 Access Denied: Make sure you have approved TradersPost after connecting to
  TradersPost.'
- '400: Bad Request - Check the JSON structure and values.'
- '404: Resource not found.'
- '500: Internal server error.'
- API orders are not allowed for lite accounts
- 'Invalid Nonce: Set Custom nonce window to at least 20000 ms'
- There are no technical limits enforced today but TradersPost is NOT designed to
  be a high frequency trading platform.
- 400 Bad Request - The JSON that gets sent to TradersPost has to be precisely accurate
  in order for us to accept it.
- 404 Resource not found.
- 500 Internal server error.
- If you disable canceling open orders, the broker may reject your exit order due
  to the take profit or stop loss orders still being open.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API Application
  - App Secret
client:
  base_url: https://traderspost.io
  auth:
    type: oauth2
    flow: refresh_token
  headers:
    Accept: application/json
source_metadata: null
