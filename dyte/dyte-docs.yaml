resources:
- name: chat_messages
  endpoint:
    path: /api/chat/export
    method: GET
    data_selector: messages
    params: {}
- name: meeting
  endpoint:
    path: /api/v2/meetings
    method: POST
    data_selector: meeting
    params: {}
- name: participant
  endpoint:
    path: /api/v2/participants
    method: POST
    data_selector: participant
    params: {}
- name: meeting
  endpoint:
    path: /api/v2/meeting
    method: POST
    data_selector: meeting
    params: {}
- name: participant
  endpoint:
    path: /api/v2/participant
    method: POST
    data_selector: participant
    params: {}
- name: meeting
  endpoint:
    path: /api/v2/meetings
    method: POST
    data_selector: meeting
    params: {}
- name: add_participant
  endpoint:
    path: /api/v2/meetings/:meetingId/participants
    method: POST
    data_selector: participant
    params: {}
- name: meeting
  endpoint:
    path: /api?v=v2#/operations/create_meeting
    method: POST
- name: participant
  endpoint:
    path: /api?v=v2#/operations/add_participant
    method: POST
- name: meeting
  endpoint:
    path: /v1/meetings
    method: GET
    data_selector: meetings
    params: {}
- name: create_meeting
  endpoint:
    path: /api?v=v2#/operations/create_meeting
    method: POST
- name: add_participant
  endpoint:
    path: /api?v=v2#/operations/add_participant
    method: POST
- name: meeting
  endpoint:
    path: /meetings
    method: POST
    data_selector: data
- name: participant
  endpoint:
    path: /participants
    method: GET
    data_selector: data
- name: create_meeting
  endpoint:
    path: /api/v2/meetings
    method: POST
    data_selector: meeting
    params: {}
- name: add_participant
  endpoint:
    path: /api/v2/meetings/:meetingId/participants
    method: POST
    data_selector: participant
    params: {}
- name: create_meeting
  endpoint:
    path: /api?v=v2#/operations/create_meeting
    method: POST
- name: add_participant
  endpoint:
    path: /api?v=v2#/operations/add_participant
    method: POST
- name: create_meeting
  endpoint:
    path: /api?v=v2#/operations/create_meeting
    method: POST
    data_selector: meeting
    params: {}
- name: add_participant
  endpoint:
    path: /api?v=v2#/operations/add_participant
    method: POST
    data_selector: participant
    params: {}
- name: Add Participant
  endpoint:
    path: /api?v=v2#/operations/add_participant
    method: POST
- name: meeting
  endpoint:
    path: /api/v2/meetings
    method: POST
    data_selector: meetingData
    params: {}
- name: participant
  endpoint:
    path: /api/v2/participants
    method: POST
    data_selector: participantData
    params: {}
- name: meeting
  endpoint:
    path: /api?v=v2#/operations/create_meeting
    method: POST
    data_selector: meeting
    params: {}
- name: participant
  endpoint:
    path: /api?v=v2#/operations/add_participant
    method: POST
    data_selector: participant
    params: {}
- name: Add Participant
  endpoint:
    path: /api#/operations/addParticipant
    method: POST
- name: Create Meeting
  endpoint:
    path: /api#/operations/createMeeting
    method: POST
- name: Chat Replay API
  endpoint:
    path: /guides/export-chat-dump
    method: GET
- name: Session API
  endpoint:
    path: /api?v=v2#/operations/GetSessionDetails
    method: GET
- name: meeting
  endpoint:
    path: /api?v=v2#/operations/create_meeting
    method: POST
    data_selector: meetingInfo
    params: {}
- name: participant
  endpoint:
    path: /api?v=v2#/operations/add_participant
    method: POST
    data_selector: participantInfo
    params: {}
- name: meetings
  endpoint:
    path: /meetings
    method: POST
    data_selector: data
    params: {}
- name: participants
  endpoint:
    path: /meetings/<meetingId>/participants
    method: POST
    data_selector: data
    params: {}
- name: recordings
  endpoint:
    path: /recordings
    method: POST
    data_selector: data
    params: {}
- name: stop_recording
  endpoint:
    path: /recordings/<recordingId>
    method: PUT
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: null
    params: {}
- name: voice_conference
  endpoint:
    path: /api/voice/conference
    method: POST
    data_selector: conference
- name: meeting
  endpoint:
    path: /meetings
    method: POST
    data_selector: data
- name: participants
  endpoint:
    path: /participants
    method: GET
    data_selector: data
- name: create_meeting
  endpoint:
    path: /create_meeting
    method: POST
    data_selector: meeting_details
    params: {}
- name: meetings
  endpoint:
    path: /meetings
    method: POST
    data_selector: data
    params: {}
- name: participants
  endpoint:
    path: /meetings/<meetingId>/participants
    method: POST
    data_selector: data
    params: {}
- name: recordings
  endpoint:
    path: /recordings
    method: POST
    data_selector: data
    params: {}
- name: stop_recording
  endpoint:
    path: /recordings/<recordingId>
    method: PUT
    data_selector: data
    params: {}
- name: recording
  endpoint:
    path: /recording
    method: POST
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
- name: meeting_transcription
  endpoint:
    path: /api/v1/meeting/transcription
    method: POST
    data_selector: transcription
    params: {}
- name: meeting_summary
  endpoint:
    path: /api/v1/meeting/summary
    method: POST
    data_selector: summary
    params: {}
- name: polls
  endpoint:
    path: /api/polls
    method: GET
    data_selector: polls
- name: create_meeting
  endpoint:
    path: /api#/operations/createMeeting
    method: POST
- name: add_preset
  endpoint:
    path: /api#/operations/addPreset
    method: POST
- name: delete_participant
  endpoint:
    path: /api#/operations/deleteParticipant
    method: DELETE
- name: recording
  endpoint:
    path: /recording
    method: GET
    data_selector: records
    params: {}
- name: meetings
  endpoint:
    path: /meetings
    method: POST
    data_selector: ''
    params: {}
- name: participants
  endpoint:
    path: /meetings/{meetingId}/participants
    method: POST
    data_selector: ''
    params: {}
- name: start_livestream
  endpoint:
    path: /v2/meetings/{meetingId}/livestreams
    method: POST
- name: fetch_active_livestream
  endpoint:
    path: /v2/meetings/{meetingId}/active-livestream
    method: GET
- name: stop_livestream
  endpoint:
    path: /v2/meetings/{meetingId}/active-livestream/stop
    method: POST
- name: meeting_transcription
  endpoint:
    path: /transcription
    method: POST
    data_selector: transcription_results
    params: {}
- name: meeting_summary
  endpoint:
    path: /summary
    method: POST
    data_selector: summary_results
    params: {}
- name: polls
  endpoint:
    path: /polls
    method: POST
- name: meetings
  endpoint:
    path: /meetings
    method: POST
- name: participants
  endpoint:
    path: /meetings/{meetingId}/participants
    method: POST
- name: start_livestream
  endpoint:
    path: /v2/meetings/{meetingId}/livestreams
    method: POST
    data_selector: data
    params: {}
- name: fetch_active_livestream
  endpoint:
    path: /v2/meetings/{meetingId}/active-livestream
    method: GET
    data_selector: data
    params: {}
- name: stop_livestream
  endpoint:
    path: /v2/meetings/{meetingId}/active-livestream/stop
    method: POST
    data_selector: data
    params: {}
notes:
- The UI Kit is a design library of prebuilt UI components built on top of the core
  SDKs.
- Uses a layered design structure allowing you to start with a prebuilt component
  and slowly go down layers.
- Dyte's React Native UI Kit is built using React Native components.
- Customizations are available with design tokens and internationalization.
- Requires setup of Dyte Developer Account before using the API
- The authToken is obtained from the Add Participant API response.
- Ensure to create a Dyte Developer Account before proceeding.
- Auth token is obtained from the Add Participant API response.
- Ensure to manage meeting states and permissions through the UI Kit.
- The library uses a layered design structure allowing you to start with a prebuilt
  component and slowly go down layers and add custom UI incrementally as your needs
  evolve.
- You must complete the steps in the Integrate Dyte section.
- Requires OAuth2 token for authentication
- Ensure you have the correct permissions set in your OAuth app
- Minimum iOS version is 12.0.
- Requires a valid participant authToken obtained from the Add Participant API.
- If you intend to publish your app to the Google Play or App Store, you'll need to
  perform a few additional steps.
- The `UIBackgroundModes` key is used in the `Info.plist` file of an iOS app to declare
  the app's supported background execution modes.
- Uses OAuth2 with refresh token — requires setup of connected app in Dyte
- Make sure to pass a valid participant authToken when adding participants
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in Dyte
- Ensure compliance with App Store Review Guidelines for background modes
- The Add Participant API call returns your authentication token.
- Room name is generated when you create a meeting.
- 'In iOS, for downloading attachments in chat, add the following permissions in your
  app''s Info.plist: <key>LSSupportsOpeningDocumentsInPlace</key>  <true/>  <key>UIFileSharingEnabled</key>  <true/>'
- Empowering developers to create innovative solutions that go beyond our own use
  cases.
- Authentication token generated using the Add Participant API after meeting creation
  is required.
- Base URL of the Dyte environment must be provided.
- Dyte's recording feature will automatically stop recording if no participants are
  present in the meeting for 1 minute or longer.
- You can programmatically retrieve all chat messages of a Dyte session using Chat
  Replay API.
- Your Security, Our Priority.
- Dyte's APIs use API Keys to authenticate requests via HTTP Basic Auth
- At Dyte, we believe in empowering developers to create innovative solutions that
  go beyond our own use cases.
- The Dyte SDKs are now in maintenance mode and will no longer receive feature updates
  or bug fixes.
- Dyte's voice conferencing platform is built upon WebRTC.
- Migrating from Dyte to Cloudflare RealtimeKit is straightforward, as it primarily
  involves updating package names and renaming components, hooks, and classes.
- Migrating from Dyte to Cloudflare RealtimeKit involves updating package names.
- Ensure to replace all instances of 'Dyte' with 'RealtimeKit', 'Rtk', or 'RTK' based
  on context.
- Uses API Keys for authentication via HTTP Basic Auth.
- Dyte records the audio and video of multiple users in a meeting
- The Dyte SDKs are now in maintenance mode and will no longer receive feature updates
  or bug fixes. We strongly recommend migrating to the Cloudflare RealtimeKit SDKs
  to ensure you continue to receive the latest features and improvements.
- Migrating from Dyte to Cloudflare RealtimeKit is a straightforward process that
  mainly involves updating package names and renaming components and classes.
- Dyte uses webhooks to push real-time updates to your applications.
- This feature is in beta. Contact us to enable SIP Interconnect
- Basic authentication with organizationId as username and APIKEY as the password.
- Some features may have rate limits
- Polls can be integrated in all kinds of Dyte meetings ranging from voice to livestream.
- Dyte's SDK makes it really simple to perform all operations required to create and
  run a poll.
- Learn how Dyte uses webhooks to push real-time updates to your applications.
- The v2 APIs employ Basic authentication with the organizationId serving as the username
  and APIKEY as the password.
- API Keys are required to use Dyte REST APIs
- Meeting ID can be obtained from the Create a meeting or Fetch all meetings API
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Ensure the authToken is valid.'
- '404 Not Found: Check if the meeting ID is correct.'
- '401 Unauthorized: Check your authentication token.'
- '404 Not Found: Ensure the meeting ID is correct.'
- '401 Unauthorized: Recheck the provided authToken.'
- '401 Unauthorized: Check your client credentials'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '404 Not Found: Check the endpoint path and parameters'
- '500 Internal Server Error: Try again later or contact support'
- '401 Unauthorized: Check authToken'
- 'Meeting Initialization failed: Check SDK setup'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your API keys'
- 'INVALID_AUTH: Check your authentication credentials.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of your requests.'
- '401 Unauthorized: Check your credentials or refresh token'
- '401 Unauthorized: Recheck API keys or authorization token'
auth_info:
  mentioned_objects:
  - OAuth2
  - Client Credentials
  - AuthToken
  - DyteMeetingInfoV2
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.dyte.io
  auth:
    type: oauth2
source_metadata: null
