resources:
- name: createTrackInvite
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createTrackInvite
- name: inviteOrganizationUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.inviteOrganizationUser
- name: deleteChallenge
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.deleteChallenge
- name: trackInvites
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.trackInvites
- name: updateTrackInvite
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateTrackInvite
- name: track
  endpoint:
    path: /tracks
    method: POST
    data_selector: track
    params: {}
- name: challenge
  endpoint:
    path: /challenges
    method: POST
    data_selector: challenge
    params: {}
- name: create_track
  endpoint:
    path: /tracks/manage/create-tracks
    method: GET
    data_selector: tracks
    params: {}
- name: duplicate_track
  endpoint:
    path: /tracks/manage/duplicate-tracks
    method: GET
    data_selector: tracks
    params: {}
- name: track
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
    params: {}
- name: track_logs
  endpoint:
    path: /tracks/manage/viewing-logs
    method: GET
    data_selector: logs
    params: {}
- name: track_time_limits
  endpoint:
    path: /tracks/manage/time-limits-and-idle-timeouts
    method: GET
    data_selector: tracks
    params: {}
- name: idle_timeouts
  endpoint:
    path: /tracks/manage/time-limits-and-idle-timeouts
    method: GET
    data_selector: tracks
    params: {}
- name: track_feedback
  endpoint:
    path: /tracks/manage/track-feedback
    method: GET
    data_selector: feedback_data
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
    params: {}
- name: track_authors
  endpoint:
    path: /tracks/manage/set-the-track-authors
    method: GET
    data_selector: developers
    params: {}
- name: create_challenges
  endpoint:
    path: /tracks/challenges/create-challenges
    method: GET
    data_selector: challenges
    params: {}
- name: web_based_applications
  endpoint:
    path: /tracks/challenges/challenge-tabs/web-based-applications
    method: GET
    data_selector: tabs
- name: your_applications
  endpoint:
    path: /tracks/challenges/challenge-tabs/your-applications
    method: GET
    data_selector: tabs
- name: code_editor
  endpoint:
    path: /tracks/challenges/challenge-tabs/code-editor
    method: GET
    data_selector: tabs
- name: terminal
  endpoint:
    path: /tracks/challenges/challenge-tabs/terminal
    method: GET
    data_selector: tabs
- name: virtual_browser
  endpoint:
    path: /tracks/challenges/challenge-tabs/virtual-browser
    method: GET
    data_selector: tabs
- name: quiz
  endpoint:
    path: /tracks/challenges/add-quiz
    method: POST
    data_selector: challenge
    params: {}
- name: track
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
- name: Track Invite
  endpoint:
    path: /tracks/share/track-invite-links
    method: POST
    data_selector: invite
    params: {}
- name: Live Event Dashboard
  endpoint:
    path: /tracks/share/run-live-events
    method: GET
    data_selector: dashboard
    params: {}
- name: Activity Report
  endpoint:
    path: /tracks/share/track-invite-links/activity-report
    method: GET
    data_selector: activity
    params: {}
- name: track_invite
  endpoint:
    path: /tracks/share/track-invite-links
    method: GET
    data_selector: invites
    params: {}
- name: embed_track
  endpoint:
    path: /embed
    method: GET
    data_selector: embed_code
- name: kiosk_mode
  endpoint:
    path: /kiosk
    method: GET
    data_selector: kiosk_link
- name: landing_page
  endpoint:
    path: /pages/{your-page}
    method: GET
- name: sandboxes
  endpoint:
    path: /sandboxes
    method: GET
    data_selector: resources
    params: {}
- name: cloud_accounts
  endpoint:
    path: /sandboxes/cloud-accounts
    method: GET
    data_selector: resources
    params: {}
- name: lifecycle_scripts
  endpoint:
    path: /sandboxes/lifecycle-scripts
    method: GET
    data_selector: scripts
    params: {}
- name: virtualmachines
  endpoint:
    path: /sandboxes/hosts/add-hosts
    method: POST
    data_selector: virtualmachines
    params: {}
- name: containers
  endpoint:
    path: /sandboxes/hosts/add-hosts
    method: POST
    data_selector: containers
    params: {}
- name: custom_vm_image
  endpoint:
    path: /sandboxes/hosts/create-a-custom-vm-image
    method: GET
    data_selector: custom_vm_images
    params: {}
- name: public_vm_images
  endpoint:
    path: /sandboxes/hosts/public-vm-images
    method: GET
    data_selector: images
    params: {}
- name: public_container_images
  endpoint:
    path: /sandboxes/hosts/public-container-images
    method: GET
    data_selector: images
    params: {}
- name: guacamole
  endpoint:
    path: /gcr.io/instruqt/guacamole
    method: ADD
    data_selector: containers
    params: {}
- name: windows
  endpoint:
    path: /instruqt/windows-server
    method: ADD
    data_selector: virtualmachines
    params:
      machine_type: n1-standard-2
- name: guacamole
  endpoint:
    path: /config/guacamole/user-mapping.xml
    method: POST
    data_selector: null
    params: {}
- name: windows
  endpoint:
    path: /virtualmachines/windows
    method: POST
    data_selector: null
    params: {}
- name: virtualmachine
  endpoint:
    path: /sandbox/hosts/ssl-certificates
    method: POST
    data_selector: virtualmachines
    params:
      provision_ssl_certificate: true
- name: AWS accounts
  endpoint:
    path: /sandboxes/cloud-accounts/aws-accounts
    method: GET
- name: Azure subscriptions
  endpoint:
    path: /sandboxes/cloud-accounts/azure-subscriptions
    method: GET
- name: GCP projects
  endpoint:
    path: /sandboxes/cloud-accounts/gcp-projects
    method: GET
- name: cloud-client
  endpoint:
    path: /cloud-client
    method: GET
- name: awsaccount
  endpoint:
    path: /sandboxes/cloud-accounts/aws-accounts
    method: POST
    data_selector: aws_accounts
    params: {}
- name: azuresubscription
  endpoint:
    path: /azure_subscriptions
    method: POST
    data_selector: azure_subscriptions
- name: gcpproject
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: lifecycle_scripts
  endpoint:
    path: /sandboxes/lifecycle-scripts
    method: GET
    data_selector: scripts
    params: {}
- name: track_scripts
  endpoint:
    path: /sandboxes/lifecycle-scripts
    method: GET
    data_selector: ''
    params: {}
- name: challenge_scripts
  endpoint:
    path: /sandbox/lifecycle-scripts/add-a-script-to-check-challenge-execution
    method: GET
    data_selector: scripts
    params: {}
- name: UI Checks
  endpoint:
    path: /sandboxes/ui-checks
    method: GET
    data_selector: checks
    params: {}
- name: sandbox_presets
  endpoint:
    path: /settings/sandbox_presets
    method: GET
    data_selector: presets
    params: {}
- name: aws_instance
  endpoint:
    path: /
    method: POST
    data_selector: public_ip
    params: {}
- name: define_variables
  endpoint:
    path: /api/define_variables
    method: POST
    data_selector: variables
    params: {}
- name: retrieve_variables
  endpoint:
    path: /api/retrieve_variables
    method: GET
    data_selector: variables
    params: {}
- name: runtime_parameters
  endpoint:
    path: /tracks/share/embed-a-track
    method: GET
    data_selector: parameters
    params: {}
- name: runtime_secrets
  endpoint:
    path: /tracks/share/track-invite-links
    method: GET
    data_selector: secrets
    params: {}
- name: contacts
  endpoint:
    path: /crm/v3/objects/contacts
    method: POST
- name: LTI Tool Registration
  endpoint:
    path: /lti/tool_registration
    method: POST
    data_selector: data
    params: {}
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
- name: track
  endpoint:
    path: /api/track
    method: GET
    data_selector: tracks
- name: challenge
  endpoint:
    path: /api/challenge
    method: GET
    data_selector: challenges
- name: track
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
- name: upload_asset
  endpoint:
    path: /<track_id>
    method: POST
- name: fetch_asset
  endpoint:
    path: /<track_id>/<asset_hash>
    method: GET
- name: asset_info
  endpoint:
    path: /<track_id>/<asset_hash>
    method: HEAD
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: host_machine_types
  endpoint:
    path: /reference/platform/sandbox-host-machine-types
    method: GET
    data_selector: machine_types
    params: {}
- name: roles_and_permissions
  endpoint:
    path: /reference/platform/roles-and-permissions
    method: GET
    data_selector: roles
    params: {}
- name: track_access_control
  endpoint:
    path: /reference/platform/track-access-control
    method: GET
    data_selector: access_control
    params: {}
- name: AWS Cloud Account
  endpoint:
    path: /resources/aws-cloud-account
    method: GET
- name: Sandbox container
  endpoint:
    path: /resources/sandbox-container
    method: GET
- name: Sandbox virtual machine
  endpoint:
    path: /resources/sandbox-virtual-machine
    method: GET
- name: Helm chart
  endpoint:
    path: /resources/helm-chart
    method: GET
- name: Kubernetes
  endpoint:
    path: /resources/kubernetes
    method: GET
- name: Multi-node K3s cluster
  endpoint:
    path: /resources/multi-node-k3s-cluster
    method: GET
- name: VSCode & TypeScript
  endpoint:
    path: /resources/vscode-typescript
    method: GET
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: tracks
    params: {}
- name: challenge
  endpoint:
    path: /challenge
    method: POST
    data_selector: data.challenge
- name: challengeScript
  endpoint:
    path: /challengeScript
    method: POST
    data_selector: data.challengeScript
- name: challenges
  endpoint:
    path: /challenges
    method: POST
    data_selector: data.challenges
- name: cloudProviderConfigs
  endpoint:
    path: /cloudProviderConfigs
    method: POST
    data_selector: data.cloudProviderConfigs
- name: customResource
  endpoint:
    path: /customResource
    method: POST
    data_selector: data.customResource
- name: findTeamUsers
  endpoint:
    path: /findTeamUsers
    method: POST
    data_selector: data.findTeamUsers
- name: getCommit
  endpoint:
    path: /getCommit
    method: POST
    data_selector: data.getCommit
- name: getSandboxVariable
  endpoint:
    path: /getSandboxVariable
    method: POST
    data_selector: data.getSandboxVariable
- name: hostImage
  endpoint:
    path: /hostImage
    method: POST
    data_selector: data.hostImage
- name: hotStartPool
  endpoint:
    path: /hotStartPool
    method: POST
    data_selector: data.hotStartPool
- name: hotStartPools
  endpoint:
    path: /hotStartPools
    method: GET
    data_selector: data.hotStartPools
    params: {}
- name: imageMetadata
  endpoint:
    path: /imageMetadata
    method: GET
    data_selector: data.imageMetadata
    params: {}
- name: isContainerImageValid
  endpoint:
    path: /isContainerImageValid
    method: GET
    data_selector: data.isContainerImageValid
    params: {}
- name: isEmailConfirmed
  endpoint:
    path: /isEmailConfirmed
    method: GET
    data_selector: data.isEmailConfirmed
    params: {}
- name: isURLEmbeddable
  endpoint:
    path: /isURLEmbeddable
    method: GET
    data_selector: data.isURLEmbeddable
    params: {}
- name: isValidEmail
  endpoint:
    path: /isValidEmail
    method: GET
    data_selector: data.isValidEmail
    params: {}
- name: isWorkEmail
  endpoint:
    path: /isWorkEmail
    method: GET
    data_selector: data.isWorkEmail
    params: {}
- name: lab
  endpoint:
    path: /lab
    method: GET
    data_selector: data.lab
    params: {}
- name: labExists
  endpoint:
    path: /labExists
    method: GET
    data_selector: data.labExists
    params: {}
- name: labPlayReportItem
  endpoint:
    path: /labPlayReportItem
    method: GET
    data_selector: data.labPlayReportItem
    params: {}
- name: labPlayReports
  endpoint:
    path: /labPlayReports
    method: GET
    data_selector: data.labPlayReports
    params: {}
- name: labSession
  endpoint:
    path: /labSession
    method: GET
    data_selector: data.labSession
    params: {}
- name: labSessions
  endpoint:
    path: /labSessions
    method: GET
    data_selector: data.labSessions
    params: {}
- name: labs
  endpoint:
    path: /labs
    method: GET
    data_selector: data.labs
    params: {}
- name: labsV2
  endpoint:
    path: /labsV2
    method: GET
    data_selector: data.labsV2
    params: {}
- name: landingPage
  endpoint:
    path: /landingPage
    method: GET
    data_selector: data.landingPage
    params: {}
- name: me
  endpoint:
    path: /me
    method: GET
    data_selector: data.me
    params: {}
- name: myTracks
  endpoint:
    path: /myTracks
    method: GET
    data_selector: data.myTracks
    params: {}
- name: note
  endpoint:
    path: /note
    method: GET
    data_selector: data.note
    params:
      noteID: String!
- name: organization
  endpoint:
    path: /organization
    method: GET
    data_selector: data.organization
    params:
      organizationSlug: String
      organizationID: String
- name: organizationExists
  endpoint:
    path: /organizationExists
    method: GET
    data_selector: data.organizationExists
    params:
      organizationSlug: String!
- name: organizationInvite
  endpoint:
    path: /organizationInvite
    method: GET
    data_selector: data.organizationInvite
    params:
      token: String!
- name: organizationStatistics
  endpoint:
    path: /organizationStatistics
    method: GET
    data_selector: data.organizationStatistics
    params:
      organizationID: String
      organizationSlug: String
      trackIDs: '[String!]'
      start: Time
      end: Time
      filterDevelopers: Boolean
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: data.organizations
    params: {}
- name: playReportItem
  endpoint:
    path: /playReportItem
    method: GET
    data_selector: data.playReportItem
    params:
      playID: String!
      input: PlayReportInput!
- name: playReports
  endpoint:
    path: /playReports
    method: GET
    data_selector: data.playReports
    params:
      input: PlayReportInput!
- name: sandbox
  endpoint:
    path: /sandbox
    method: GET
    data_selector: data.sandbox
    params:
      ID: ID!
- name: sandboxConfig
  endpoint:
    path: /sandboxConfig
    method: GET
    data_selector: data.sandboxConfig
    params:
      teamID: String
      teamSlug: String
      configID: String
      configSlug: String
- name: sandboxConfigVersion
  endpoint:
    path: /sandboxConfigVersion
    method: GET
    data_selector: data.sandboxConfigVersion
    params:
      configVersionID: String!
- name: sandboxConfigVersionDiff
  endpoint:
    path: /sandboxConfigVersionDiff
    method: GET
    data_selector: data.sandboxConfigVersionDiff
    params:
      sourceConfigVersion: SandboxConfigInput
      sourceConfigVersionID: String
      targetConfigVersionID: String!
- name: sandboxConfigVersions
  endpoint:
    path: /sandboxConfigVersions
    method: GET
    data_selector: data.sandboxConfigVersions
    params:
      teamID: String
      teamSlug: String
      filter: SandboxConfigVersionsFilterInput
- name: sandboxConfigs
  endpoint:
    path: /sandboxConfigs
    method: GET
    data_selector: data.sandboxConfigs
    params:
      teamID: String
      teamSlug: String
- name: sandboxes
  endpoint:
    path: /sandboxes
    method: GET
    data_selector: data.sandboxes
    params:
      teamID: String
      teamSlug: String
      filter: SandboxFilterInput
      paging: Pagination
      ordering: Ordering
- name: searchTerraformModules
  endpoint:
    path: /searchTerraformModules
    method: GET
    data_selector: data.searchTerraformModules
    params:
      query: String!
- name: statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params:
      trackID: String
      trackSlug: String
      organizationSlug: String
      teamSlug: String
      start: Time
      end: Time
      filterDevelopers: Boolean
- name: student
  endpoint:
    path: /student
    method: POST
    data_selector: data.student
    params:
      inviteID: ID!
      userID: ID!
- name: studentStatistics
  endpoint:
    path: /studentStatistics
    method: POST
    data_selector: data.studentStatistics
    params:
      inviteID: ID!
- name: students
  endpoint:
    path: /students
    method: POST
    data_selector: data.students
    params:
      inviteID: ID!
- name: tab
  endpoint:
    path: /tab
    method: POST
    data_selector: data.tab
    params:
      tabID: String!
- name: team
  endpoint:
    path: /team
    method: POST
    data_selector: data.team
    params:
      teamSlug: String
      teamID: String
- name: teamExists
  endpoint:
    path: /teamExists
    method: POST
    data_selector: data.teamExists
    params:
      teamSlug: String!
- name: teamInvite
  endpoint:
    path: /teamInvite
    method: POST
    data_selector: data.teamInvite
    params:
      token: String!
- name: teamSecret
  endpoint:
    path: /teamSecret
    method: POST
    data_selector: data.teamSecret
    params:
      teamSlug: String
      teamID: String
      name: String!
- name: teamSecrets
  endpoint:
    path: /teamSecrets
    method: POST
    data_selector: data.teamSecrets
    params:
      teamSlug: String
      teamID: String
- name: teamStatistics
  endpoint:
    path: /teamStatistics
    method: POST
    data_selector: data.teamStatistics
    params:
      teamID: String
      teamSlug: String
      trackIDs: '[String!]'
      start: Time
      end: Time
      filterDevelopers: Boolean
- name: teams
  endpoint:
    path: /teams
    method: POST
    data_selector: data.teams
- name: terraformModule
  endpoint:
    path: /terraformModule
    method: POST
    data_selector: data.terraformModule
    params:
      id: ID
      module: String
      version: String
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: data.track
    params:
      trackID: String
      trackSlug: String
      organizationSlug: String
      teamSlug: String
      userID: String
      inviteID: String
- name: trackConfig
  endpoint:
    path: /trackConfig
    method: GET
    data_selector: trackConfig
    params: {}
- name: trackConfigPresets
  endpoint:
    path: /trackConfigPresets
    method: GET
    data_selector: trackConfigPresets
    params: {}
- name: trackExists
  endpoint:
    path: /trackExists
    method: GET
    data_selector: trackExists
    params: {}
- name: trackInvite
  endpoint:
    path: /trackInvite
    method: GET
    data_selector: trackInvite
    params: {}
- name: trackInviteClaim
  endpoint:
    path: /trackInviteClaim
    method: GET
    data_selector: trackInviteClaim
    params: {}
- name: trackInvites
  endpoint:
    path: /trackInvites
    method: GET
    data_selector: trackInvites
    params: {}
- name: trackInvitesV2
  endpoint:
    path: /trackInvitesV2
    method: GET
    data_selector: trackInvitesV2
    params: {}
- name: trackLibrary
  endpoint:
    path: /trackLibrary
    method: GET
    data_selector: trackLibrary
    params: {}
- name: trackPlayLimits
  endpoint:
    path: /trackPlayLimits
    method: GET
    data_selector: trackPlayLimits
    params: {}
- name: trackReview
  endpoint:
    path: /trackReview
    method: GET
    data_selector: trackReview
    params: {}
- name: trackReviews
  endpoint:
    path: /trackReviews
    method: GET
    data_selector: trackReviews
    params: {}
- name: trackScript
  endpoint:
    path: /trackScript
    method: GET
    data_selector: trackScript
    params: {}
- name: trackScripts
  endpoint:
    path: /trackScripts
    method: GET
    data_selector: trackScripts
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
    params: {}
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user
    params: {}
- name: userConsentedToPrivacyPolicy
  endpoint:
    path: /userConsentedToPrivacyPolicy
    method: GET
    data_selector: userConsentedToPrivacyPolicy
    params: {}
- name: userExists
  endpoint:
    path: /userExists
    method: GET
    data_selector: userExists
    params: {}
- name: virtualBrowserCheck
  endpoint:
    path: /virtualBrowserCheck
    method: GET
    data_selector: virtualBrowserCheck
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: changeTeamUserRole
  endpoint:
    path: /changeTeamUserRole
    method: POST
    data_selector: data.changeTeamUserRole
    params: {}
- name: changeTeamUserScope
  endpoint:
    path: /changeTeamUserScope
    method: POST
    data_selector: data.changeTeamUserScope
    params: {}
- name: checkChallenge
  endpoint:
    path: /checkChallenge
    method: POST
    data_selector: data.checkChallenge
    params: {}
- name: checkQuiz
  endpoint:
    path: /checkQuiz
    method: POST
    data_selector: data.checkQuiz
    params: {}
- name: claimLandingPage
  endpoint:
    path: /claimLandingPage
    method: POST
    data_selector: data.claimLandingPage
    params: {}
- name: claimTeamInvites
  endpoint:
    path: /claimTeamInvites
    method: POST
    data_selector: data.claimTeamInvites
    params: {}
- name: confirmEmailOwnership
  endpoint:
    path: /confirmEmailOwnership
    method: POST
    data_selector: data.confirmEmailOwnership
    params: {}
- name: consentToTeamPrivacyPolicy
  endpoint:
    path: /consentToTeamPrivacyPolicy
    method: POST
    data_selector: data.consentToTeamPrivacyPolicy
    params: {}
- name: createAwsAccountConfig
  endpoint:
    path: /createAwsAccountConfig
    method: POST
    data_selector: createAwsAccountConfig
- name: createAzureSubscriptionConfig
  endpoint:
    path: /createAzureSubscriptionConfig
    method: POST
    data_selector: createAzureSubscriptionConfig
- name: createChallenge
  endpoint:
    path: /createChallenge
    method: POST
    data_selector: createChallenge
- name: createChallengeNote
  endpoint:
    path: /createChallengeNote
    method: POST
    data_selector: createChallengeNote
- name: createChallengeTab
  endpoint:
    path: /createChallengeTab
    method: POST
    data_selector: createChallengeTab
- name: createContainerConfig
  endpoint:
    path: /createContainerConfig
    method: POST
    data_selector: createContainerConfig
- name: createGcpProjectConfig
  endpoint:
    path: /createGcpProjectConfig
    method: POST
    data_selector: createGcpProjectConfig
- name: createGithubIntegration
  endpoint:
    path: /createGithubIntegration
    method: POST
    data_selector: createGithubIntegration
- name: createHostImage
  endpoint:
    path: /createHostImage
    method: POST
    data_selector: createHostImage
- name: createHotStartPool
  endpoint:
    path: /createHotStartPool
    method: POST
    data_selector: createHotStartPool
- name: createInviteAuthor
  endpoint:
    path: /createInviteAuthor
    method: POST
    data_selector: createInviteAuthor
- name: createLab
  endpoint:
    path: /createLab
    method: POST
    data_selector: createLab
- name: createLandingPage
  endpoint:
    path: /createLandingPage
    method: POST
    data_selector: createLandingPage
- name: createLtiToolRegistration
  endpoint:
    path: /createLtiToolRegistration
    method: POST
    data_selector: createLtiToolRegistration
- name: createOrganization
  endpoint:
    path: /createOrganization
    method: POST
    data_selector: createOrganization
- name: createSamlSsoConnection
  endpoint:
    path: /createSamlSsoConnection
    method: POST
    data_selector: createSamlSsoConnection
- name: createSandboxConfig
  endpoint:
    path: /createSandboxConfig
    method: POST
    data_selector: data.createSandboxConfig
    params: {}
- name: createSsoConnection
  endpoint:
    path: /createSsoConnection
    method: POST
    data_selector: data.createSsoConnection
    params: {}
- name: createTag
  endpoint:
    path: /createTag
    method: POST
    data_selector: data.createTag
    params: {}
- name: createTagGroup
  endpoint:
    path: /createTagGroup
    method: POST
    data_selector: data.createTagGroup
    params: {}
- name: createTeam
  endpoint:
    path: /createTeam
    method: POST
    data_selector: data.createTeam
    params: {}
- name: createTrack
  endpoint:
    path: /createTrack
    method: POST
    data_selector: data.createTrack
    params: {}
- name: createTrackDeveloper
  endpoint:
    path: /createTrackDeveloper
    method: POST
    data_selector: data.createTrackDeveloper
    params: {}
- name: createTrackInstructor
  endpoint:
    path: /createTrackInstructor
    method: POST
    data_selector: data.createTrackInstructor
    params: {}
- name: createTrackInvite
  endpoint:
    path: /createTrackInvite
    method: POST
    data_selector: data.createTrackInvite
    params: {}
- name: createTrackReview
  endpoint:
    path: /createTrackReview
    method: POST
    data_selector: data.createTrackReview
    params: {}
- name: createVirtualBrowserConfig
  endpoint:
    path: /createVirtualBrowserConfig
    method: POST
    data_selector: data.createVirtualBrowserConfig
    params: {}
- name: deleteSsoConnection
  endpoint:
    path: /deleteSsoConnection
    method: POST
    data_selector: deleteSsoConnection
    params: {}
- name: deleteTag
  endpoint:
    path: /deleteTag
    method: POST
    data_selector: deleteTag
    params: {}
- name: deleteTagGroup
  endpoint:
    path: /deleteTagGroup
    method: POST
    data_selector: deleteTagGroup
    params: {}
- name: deleteTeamGithubData
  endpoint:
    path: /deleteTeamGithubData
    method: POST
    data_selector: deleteTeamGithubData
    params: {}
- name: deleteTeamInvite
  endpoint:
    path: /deleteTeamInvite
    method: POST
    data_selector: deleteTeamInvite
    params: {}
- name: deleteTeamSecret
  endpoint:
    path: /deleteTeamSecret
    method: POST
    data_selector: deleteTeamSecret
    params: {}
- name: deleteTrack
  endpoint:
    path: /deleteTrack
    method: POST
    data_selector: deleteTrack
    params: {}
- name: deleteTrackInstructor
  endpoint:
    path: /deleteTrackInstructor
    method: POST
    data_selector: deleteTrackInstructor
    params: {}
- name: deleteTrackInvite
  endpoint:
    path: /deleteTrackInvite
    method: POST
    data_selector: deleteTrackInvite
    params: {}
- name: deleteTrackInviteClaim
  endpoint:
    path: /deleteTrackInviteClaim
    method: POST
    data_selector: deleteTrackInviteClaim
    params: {}
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: POST
    data_selector: deleteUser
    params: {}
- name: deleteVirtualBrowserCheck
  endpoint:
    path: /deleteVirtualBrowserCheck
    method: POST
    data_selector: deleteVirtualBrowserCheck
    params: {}
- name: deleteVirtualBrowserConfig
  endpoint:
    path: /deleteVirtualBrowserConfig
    method: POST
    data_selector: deleteVirtualBrowserConfig
    params: {}
- name: deleteVirtualMachineConfig
  endpoint:
    path: /deleteVirtualMachineConfig
    method: POST
    data_selector: deleteVirtualMachineConfig
    params: {}
- name: deleteWebhook
  endpoint:
    path: /deleteWebhook
    method: POST
    data_selector: deleteWebhook
    params: {}
- name: discardChanges
  endpoint:
    path: /discardChanges
    method: POST
    data_selector: discardChanges
    params: {}
- name: generateOneTimePlayToken
  endpoint:
    path: /generateOneTimePlayToken
    method: POST
    data_selector: generateOneTimePlayToken
    params: {}
- name: generateOrganizationAPIKey
  endpoint:
    path: /generateOrganizationAPIKey
    method: POST
    data_selector: generateOrganizationAPIKey
    params: {}
- name: generateTeamAPIKey
  endpoint:
    path: /generateTeamAPIKey
    method: POST
    data_selector: generateTeamAPIKey
    params: {}
- name: generateTeamLTICredentials
  endpoint:
    path: /generateTeamLTICredentials
    method: POST
    data_selector: generateTeamLTICredentials
    params: {}
- name: generateTrackEmbedToken
  endpoint:
    path: /generateTrackEmbedToken
    method: POST
    data_selector: data.generateTrackEmbedToken
    params: {}
- name: icpStunCredentials
  endpoint:
    path: /icpStunCredentials
    method: POST
    data_selector: data.icpStunCredentials
    params: {}
- name: importLab
  endpoint:
    path: /importLab
    method: POST
    data_selector: data.importLab
    params: {}
- name: importTerraformModule
  endpoint:
    path: /importTerraformModule
    method: POST
    data_selector: data.importTerraformModule
    params: {}
- name: inviteLinkCopied
  endpoint:
    path: /inviteLinkCopied
    method: POST
    data_selector: data.inviteLinkCopied
    params: {}
- name: inviteOrganizationUser
  endpoint:
    path: /inviteOrganizationUser
    method: POST
    data_selector: data.inviteOrganizationUser
    params: {}
- name: inviteTeamUser
  endpoint:
    path: /inviteTeamUser
    method: POST
    data_selector: data.inviteTeamUser
    params: {}
- name: keepAlive
  endpoint:
    path: /keepAlive
    method: POST
    data_selector: data.keepAlive
    params: {}
- name: lowerHand
  endpoint:
    path: /lowerHand
    method: POST
    data_selector: data.lowerHand
    params: {}
- name: mergeAnonymousUser
  endpoint:
    path: /mergeAnonymousUser
    method: POST
    data_selector: data.mergeAnonymousUser
    params: {}
- name: newTrackInviteBroadcastChatMessage
  endpoint:
    path: /newTrackInviteBroadcastChatMessage
    method: POST
    data_selector: data.newTrackInviteBroadcastChatMessage
    params: {}
- name: newTrackInviteDirectChatMessage
  endpoint:
    path: /newTrackInviteDirectChatMessage
    method: POST
    data_selector: data.newTrackInviteDirectChatMessage
    params: {}
- name: pausePlay
  endpoint:
    path: /pausePlay
    method: POST
    data_selector: data.pausePlay
    params: {}
- name: publishSandboxConfig
  endpoint:
    path: /publishSandboxConfig
    method: POST
    data_selector: data.publishSandboxConfig
    params: {}
- name: removeOrganizationUser
  endpoint:
    path: /removeOrganizationUser
    method: POST
    data_selector: data.removeOrganizationUser
    params: {}
- name: removeTeamUser
  endpoint:
    path: /removeTeamUser
    method: POST
    data_selector: data.removeTeamUser
    params: {}
- name: removeTrackDeveloper
  endpoint:
    path: /removeTrackDeveloper
    method: POST
    data_selector: data.removeTrackDeveloper
    params: {}
- name: renameSandboxConfig
  endpoint:
    path: /renameSandboxConfig
    method: POST
    data_selector: data.renameSandboxConfig
    params: {}
- name: renameSandboxConfigHost
  endpoint:
    path: /renameSandboxConfigHost
    method: POST
    data_selector: data.renameSandboxConfigHost
    params: {}
- name: resendEmailOwnershipConfirmationCode
  endpoint:
    path: /resendEmailOwnershipConfirmationCode
    method: POST
    data_selector: data.resendEmailOwnershipConfirmationCode
    params: {}
- name: restoreLandingPage
  endpoint:
    path: /restoreLandingPage
    method: POST
    data_selector: data.restoreLandingPage
    params: {}
- name: resumePlay
  endpoint:
    path: /resumePlay
    method: POST
    data_selector: data.resumePlay
    params: {}
- name: saveChallengeScript
  endpoint:
    path: /saveChallengeScript
    method: POST
    data_selector: data.saveChallengeScript
    params: {}
- name: saveHostImage
  endpoint:
    path: /saveHostImage
    method: POST
    data_selector: data.saveHostImage
    params: {}
- name: saveTrackPlayLimit
  endpoint:
    path: /mutations/saveTrackPlayLimit
    method: POST
    data_selector: data.saveTrackPlayLimit
    params: {}
- name: saveTrackPlayLimits
  endpoint:
    path: /mutations/saveTrackPlayLimits
    method: POST
    data_selector: data.saveTrackPlayLimits
    params: {}
- name: saveTrackScript
  endpoint:
    path: /mutations/saveTrackScript
    method: POST
    data_selector: data.saveTrackScript
    params: {}
- name: sendEmailOwnershipConfirmationCode
  endpoint:
    path: /mutations/sendEmailOwnershipConfirmationCode
    method: POST
    data_selector: data.sendEmailOwnershipConfirmationCode
    params: {}
- name: sendScreenShareEvent
  endpoint:
    path: /mutations/sendScreenShareEvent
    method: POST
    data_selector: data.sendScreenShareEvent
    params: {}
- name: setChatMessagesAsRead
  endpoint:
    path: /mutations/setChatMessagesAsRead
    method: POST
    data_selector: data.setChatMessagesAsRead
    params: {}
- name: setInstructorRole
  endpoint:
    path: /mutations/setInstructorRole
    method: POST
    data_selector: data.setInstructorRole
    params: {}
- name: setInstructorTracks
  endpoint:
    path: /mutations/setInstructorTracks
    method: POST
    data_selector: data.setInstructorTracks
    params: {}
- name: setSandboxVariable
  endpoint:
    path: /mutations/setSandboxVariable
    method: POST
    data_selector: data.setSandboxVariable
    params: {}
- name: setTeamGithubInstallationID
  endpoint:
    path: /mutations/setTeamGithubInstallationID
    method: POST
    data_selector: data.setTeamGithubInstallationID
    params: {}
- name: setTrackMaintenance
  endpoint:
    path: /mutations/setTrackMaintenance
    method: POST
    data_selector: data.setTrackMaintenance
    params: {}
- name: setTrackSandboxConfigVersion
  endpoint:
    path: /mutations/setTrackSandboxConfigVersion
    method: POST
    data_selector: data.setTrackSandboxConfigVersion
    params: {}
- name: setupChallenge
  endpoint:
    path: /setupChallenge
    method: POST
    data_selector: data.setupChallenge
    params: {}
- name: skipChallenge
  endpoint:
    path: /skipChallenge
    method: POST
    data_selector: data.skipChallenge
    params: {}
- name: skipToChallenge
  endpoint:
    path: /skipToChallenge
    method: POST
    data_selector: data.skipToChallenge
    params: {}
- name: solveChallenge
  endpoint:
    path: /solveChallenge
    method: POST
    data_selector: data.solveChallenge
    params: {}
- name: startChallenge
  endpoint:
    path: /startChallenge
    method: POST
    data_selector: data.startChallenge
    params: {}
- name: startHostImage
  endpoint:
    path: /startHostImage
    method: POST
    data_selector: data.startHostImage
    params: {}
- name: startLab
  endpoint:
    path: /startLab
    method: POST
    data_selector: data.startLab
    params: {}
- name: startTrack
  endpoint:
    path: /startTrack
    method: POST
    data_selector: data.startTrack
    params: {}
- name: stopAllTracks
  endpoint:
    path: /stopAllTracks
    method: POST
    data_selector: data.stopAllTracks
    params: {}
- name: stopHostImage
  endpoint:
    path: /mutations/stopHostImage
    method: POST
    data_selector: data.stopHostImage
    params: {}
- name: stopLab
  endpoint:
    path: /mutations/stopLab
    method: POST
    data_selector: data.stopLab
    params: {}
- name: stopSandbox
  endpoint:
    path: /mutations/stopSandbox
    method: POST
    data_selector: data.stopSandbox
    params: {}
- name: stopTrack
  endpoint:
    path: /mutations/stopTrack
    method: POST
    data_selector: data.stopTrack
    params: {}
- name: toggleRaisedHand
  endpoint:
    path: /mutations/toggleRaisedHand
    method: POST
    data_selector: data.toggleRaisedHand
    params: {}
- name: updateAwsAccountConfig
  endpoint:
    path: /mutations/updateAwsAccountConfig
    method: POST
    data_selector: data.updateAwsAccountConfig
    params: {}
- name: updateAzureSubscriptionConfig
  endpoint:
    path: /mutations/updateAzureSubscriptionConfig
    method: POST
    data_selector: data.updateAzureSubscriptionConfig
    params: {}
- name: updateChallenge
  endpoint:
    path: /mutations/updateChallenge
    method: POST
    data_selector: data.updateChallenge
    params: {}
- name: updateChallengeIndexes
  endpoint:
    path: /mutations/updateChallengeIndexes
    method: POST
    data_selector: data.updateChallengeIndexes
    params: {}
- name: updateChallengeLabConfig
  endpoint:
    path: /mutations/updateChallengeLabConfig
    method: POST
    data_selector: data.updateChallengeLabConfig
    params: {}
- name: updateChallengeNote
  endpoint:
    path: /mutations/updateChallengeNote
    method: POST
    data_selector: data.updateChallengeNote
    params: {}
- name: updateChallengeNoteIndexes
  endpoint:
    path: /mutations/updateChallengeNoteIndexes
    method: POST
    data_selector: data.updateChallengeNoteIndexes
    params: {}
- name: updateChallengeTab
  endpoint:
    path: /mutations/updateChallengeTab
    method: POST
    data_selector: data.updateChallengeTab
    params: {}
- name: updateChallengeTabIndexes
  endpoint:
    path: /mutations/updateChallengeTabIndexes
    method: POST
    data_selector: data.updateChallengeTabIndexes
    params: {}
- name: updateCloudProviderConfig
  endpoint:
    path: /mutations/updateCloudProviderConfig
    method: POST
    data_selector: data.updateCloudProviderConfig
    params: {}
- name: updateCompleteTrack
  endpoint:
    path: /updateCompleteTrack
    method: POST
    data_selector: data.updateCompleteTrack
    params: {}
- name: updateCompleteTrackVersioned
  endpoint:
    path: /updateCompleteTrackVersioned
    method: POST
    data_selector: data.updateCompleteTrackVersioned
    params: {}
- name: updateContainerConfig
  endpoint:
    path: /updateContainerConfig
    method: POST
    data_selector: data.updateContainerConfig
    params: {}
- name: updateCustomResource
  endpoint:
    path: /updateCustomResource
    method: POST
    data_selector: data.updateCustomResource
    params: {}
- name: updateForm
  endpoint:
    path: /updateForm
    method: POST
    data_selector: data.updateForm
    params: {}
- name: updateGcpProjectConfig
  endpoint:
    path: /updateGcpProjectConfig
    method: POST
    data_selector: data.updateGcpProjectConfig
    params: {}
- name: updateHostImage
  endpoint:
    path: /updateHostImage
    method: POST
    data_selector: data.updateHostImage
    params: {}
- name: updateHotStartPool
  endpoint:
    path: /updateHotStartPool
    method: POST
    data_selector: data.updateHotStartPool
    params: {}
- name: updateLandingPage
  endpoint:
    path: /updateLandingPage
    method: POST
    data_selector: data.updateLandingPage
    params: {}
- name: updateLtiToolRegistration
  endpoint:
    path: /updateLtiToolRegistration
    method: POST
    data_selector: data.updateLtiToolRegistration
    params: {}
- name: updateOrganization
  endpoint:
    path: /updateOrganization
    method: POST
    data_selector: data.updateOrganization
    params: {}
- name: updateRemoteRepository
  endpoint:
    path: /updateRemoteRepository
    method: POST
    data_selector: data.updateRemoteRepository
    params: {}
- name: updateSamlSsoConnection
  endpoint:
    path: /updateSamlSsoConnection
    method: POST
    data_selector: data.updateSamlSsoConnection
    params: {}
- name: updateSandboxConfig
  endpoint:
    path: /updateSandboxConfig
    method: POST
    data_selector: data.updateSandboxConfig
    params: {}
- name: updateSandboxTTL
  endpoint:
    path: /updateSandboxTTL
    method: POST
    data_selector: data.updateSandboxTTL
    params: {}
- name: updateSecretConfig
  endpoint:
    path: /updateSecretConfig
    method: POST
    data_selector: data.updateSecretConfig
    params: {}
- name: updateSsoConnection
  endpoint:
    path: /updateSsoConnection
    method: POST
    data_selector: data.updateSsoConnection
    params: {}
- name: updateTag
  endpoint:
    path: /updateTag
    method: POST
    data_selector: data.updateTag
    params: {}
- name: updateTagGroup
  endpoint:
    path: /updateTagGroup
    method: POST
    data_selector: data.updateTagGroup
    params: {}
- name: updateTeam
  endpoint:
    path: /updateTeam
    method: POST
    data_selector: data.updateTeam
    params: {}
- name: updateTeamFeatures
  endpoint:
    path: /updateTeamFeatures
    method: POST
    data_selector: data.updateTeamFeatures
    params: {}
- name: updateTrack
  endpoint:
    path: /updateTrack
    method: POST
    data_selector: data.updateTrack
    params: {}
- name: updateTrackFeatures
  endpoint:
    path: /updateTrackFeatures
    method: POST
    data_selector: data.updateTrackFeatures
    params: {}
- name: TrackInvite
  endpoint:
    path: /updateTrackInvite
    method: POST
    data_selector: data.updateTrackInvite
- name: TrackReview
  endpoint:
    path: /updateTrackReview
    method: POST
    data_selector: data.updateTrackReview
- name: User
  endpoint:
    path: /updateUser
    method: POST
    data_selector: data.updateUser
- name: VirtualBrowserConfig
  endpoint:
    path: /updateVirtualBrowserConfig
    method: POST
    data_selector: data.updateVirtualBrowserConfig
- name: VirtualMachineConfig
  endpoint:
    path: /updateVirtualMachineConfig
    method: POST
    data_selector: data.updateVirtualMachineConfig
- name: Webhook
  endpoint:
    path: /updateWebhook
    method: POST
    data_selector: data.updateWebhook
- name: TeamSecret
  endpoint:
    path: /upsertTeamSecret
    method: POST
    data_selector: data.upsertTeamSecret
- name: VirtualBrowserCheck
  endpoint:
    path: /upsertVirtualBrowserCheck
    method: POST
    data_selector: data.upsertVirtualBrowserCheck
- name: aws_account_config
  endpoint:
    path: /aws/account/config
    method: POST
    data_selector: accountConfig
    params: {}
- name: ChallengeScriptInput
  endpoint:
    path: /path/to/challengescriptinput
    method: GET
    data_selector: records
    params: {}
- name: ChallengeSeries
  endpoint:
    path: /path/to/challengeseries
    method: GET
    data_selector: records
    params: {}
- name: ChallengeStatistics
  endpoint:
    path: /path/to/challengestatistics
    method: GET
    data_selector: records
    params: {}
- name: ChallengeStatus
  endpoint:
    path: /path/to/challengestatus
    method: GET
    data_selector: records
    params: {}
- name: ChallengeTab
  endpoint:
    path: /path/to/challengetab
    method: GET
    data_selector: records
    params: {}
- name: ChallengeTabInput
  endpoint:
    path: /path/to/challengetabinput
    method: GET
    data_selector: records
    params: {}
- name: Chapter
  endpoint:
    path: /path/to/chapter
    method: GET
    data_selector: records
    params: {}
- name: ChatChannelType
  endpoint:
    path: /path/to/chatchanneltype
    method: GET
    data_selector: records
    params: {}
- name: ChatSender
  endpoint:
    path: /path/to/chatsender
    method: GET
    data_selector: records
    params: {}
- name: CloudProvider
  endpoint:
    path: /path/to/cloudprovider
    method: GET
    data_selector: records
    params: {}
- name: CloudProviderConfig
  endpoint:
    path: /path/to/cloudproviderconfig
    method: GET
    data_selector: records
    params: {}
- name: CloudProviderConfigInput
  endpoint:
    path: /path/to/cloudproviderconfiginput
    method: GET
    data_selector: records
    params: {}
- name: CloudProviderRegion
  endpoint:
    path: /path/to/cloudproviderregion
    method: GET
    data_selector: records
    params: {}
- name: CloudProviderService
  endpoint:
    path: /path/to/cloudproviderservice
    method: GET
    data_selector: records
    params: {}
- name: Commit
  endpoint:
    path: /path/to/commit
    method: GET
    data_selector: records
    params: {}
- name: CommitAuthor
  endpoint:
    path: /path/to/commitauthor
    method: GET
    data_selector: records
    params: {}
- name: CommitAuthorProfile
  endpoint:
    path: /path/to/commitauthorprofile
    method: GET
    data_selector: records
    params: {}
- name: CompletionRateSeries
  endpoint:
    path: /path/to/completionrateseries
    method: GET
    data_selector: records
    params: {}
- name: CompletionRateSeriesItem
  endpoint:
    path: /path/to/completionrateseriesitem
    method: GET
    data_selector: records
    params: {}
- name: ConditionType
  endpoint:
    path: /path/to/conditiontype
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionInsight
  endpoint:
    path: /path/to/consumptioninsight
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionInsightSeries
  endpoint:
    path: /path/to/consumptioninsightseries
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionTrackInsight
  endpoint:
    path: /path/to/consumptiontrackinsight
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionTrackInsightItem
  endpoint:
    path: /path/to/consumptiontrackinsightitem
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionTrackInsightPage
  endpoint:
    path: /path/to/consumptiontrackinsightpage
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionTrackInsightsItemPeriod
  endpoint:
    path: /path/to/consumptiontrackinsightsitemperiod
    method: GET
    data_selector: records
    params: {}
- name: ContainerConfig
  endpoint:
    path: /ContainerConfig
    method: GET
    data_selector: containerConfigs
- name: HostImage
  endpoint:
    path: /hostImage
    method: GET
    data_selector: records
- name: HostImageInput
  endpoint:
    path: /hostImageInput
    method: GET
    data_selector: records
- name: HostImageSandbox
  endpoint:
    path: /hostImageSandbox
    method: GET
    data_selector: records
- name: HostImageStatus
  endpoint:
    path: /hostImageStatus
    method: GET
    data_selector: records
- name: HostImageVMConfigInput
  endpoint:
    path: /hostImageVMConfigInput
    method: GET
    data_selector: records
- name: HostImageVMInputs
  endpoint:
    path: /hostImageVMInputs
    method: GET
    data_selector: records
- name: HotStartPool
  endpoint:
    path: /hotStartPool
    method: GET
    data_selector: records
- name: HotStartPoolConnection
  endpoint:
    path: /hotStartPoolConnection
    method: GET
    data_selector: records
- name: InviteEvent
  endpoint:
    path: /invite/event
    method: GET
    data_selector: events
- name: InviteFilterStatus
  endpoint:
    path: /invite/filter/status
    method: GET
    data_selector: statuses
- name: InviteFilters
  endpoint:
    path: /invite/filters
    method: GET
    data_selector: filters
- name: InvitePlay
  endpoint:
    path: /invite/play
    method: GET
    data_selector: plays
- name: InviteStatus
  endpoint:
    path: /invite/status
    method: GET
    data_selector: statuses
- name: LabPlayReportItem
  endpoint:
    path: /LabPlayReportItem
    method: GET
    data_selector: items
    params: {}
- name: LabPlayReview
  endpoint:
    path: /LabPlayReview
    method: GET
    data_selector: reviews
    params: {}
- name: LabRefMetadata
  endpoint:
    path: /LabRefMetadata
    method: GET
    data_selector: metadata
    params: {}
- name: LabSession
  endpoint:
    path: /LabSession
    method: GET
    data_selector: sessions
    params: {}
- name: LabSessionEvent
  endpoint:
    path: /LabSessionEvent
    method: GET
    data_selector: events
    params: {}
- name: LabSummary
  endpoint:
    path: /LabSummary
    method: GET
    data_selector: summaries
    params: {}
- name: LtiToolRegistration
  endpoint:
    path: /LtiToolRegistration
    method: GET
    data_selector: records
- name: Play
  endpoint:
    path: /path/to/play/endpoint
    method: GET
    data_selector: data
- name: PlayActivity
  endpoint:
    path: /path/to/playactivity/endpoint
    method: GET
    data_selector: data
- name: PlayInsight
  endpoint:
    path: /path/to/playinsight/endpoint
    method: GET
    data_selector: data
- name: PlayReport
  endpoint:
    path: /path/to/playreport/endpoint
    method: GET
    data_selector: data
- containers: []
  virtualmachines: []
  virtualbrowsers: []
  gcp_projects: []
  aws_accounts: []
  azure_subscriptions: []
  secrets: []
  custom_resources: []
  blueprint: {}
- name: student
  endpoint:
    path: /students
    method: GET
    data_selector: records
- name: student_statistics
  endpoint:
    path: /studentStatistics
    method: GET
    data_selector: records
- name: student_track_statistics
  endpoint:
    path: /studentTrackStatistics
    method: GET
    data_selector: records
- name: tag
  endpoint:
    path: /tags
    method: GET
    data_selector: records
- name: tag_group
  endpoint:
    path: /tagGroups
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: records
- name: TeamFeatures
  endpoint:
    path: /team/features
    method: POST
    data_selector: features
    params: {}
- name: TotalSandboxTimeSeries
  endpoint:
    path: /TotalSandboxTimeSeries
    method: GET
    data_selector: sum, items
    params: {}
- name: TotalSandboxTimeSeriesItem
  endpoint:
    path: /TotalSandboxTimeSeriesItem
    method: GET
    data_selector: bucketStartTime, value
    params: {}
- name: Track
  endpoint:
    path: /Track
    method: GET
    data_selector: id, slug, version, revision, type, title, teaser, description,
      icon, level, tags, trackTags, owner, team, developers, userIsTrackDeveloper,
      instructors, updated_by, private, published, maintenance, challenges, config,
      sandboxConfig, trackConfig, status, started, creating, created, failed, stopped,
      completed, cleaned, permalink, play_limit, play_count, expiry_date, expiry_count,
      median_starttime, prestart, skipping_to, scripts, actual_pool_size, show_timer,
      skipping_enabled, can_skip, ttl, last_update, createdAt, deletedAt, accessible,
      embed_token, visibility, trackReviews, statistics, participant, idle_timeout,
      studentStatistics, timelimit, lab_config, sourceTrack, recommendations, commits,
      lastCommit, remote_repository, githubWebhookEvents, features, enhancedLoading,
      pausable, pausable_ttl
    params: {}
- name: TrackInsight
  endpoint:
    path: /trackinsight
    method: GET
    data_selector: page
    params: {}
- name: TrackInvite
  endpoint:
    path: /trackinvite
    method: GET
    data_selector: invites
    params: {}
- name: TrackInvite
  endpoint:
    path: /TrackInvite
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: records
- name: user_activity
  endpoint:
    path: /user/activity
    method: GET
    data_selector: records
- name: user_details
  endpoint:
    path: /user/details
    method: GET
    data_selector: records
- name: VirtualBrowserConfigInput
  endpoint:
    path: /virtual-browser-config
    method: GET
    data_selector: records
- name: VirtualMachineConfig
  endpoint:
    path: /virtual-machine-config
    method: GET
    data_selector: records
- name: VirtualMachineConfigInput
  endpoint:
    path: /virtual-machine-config-input
    method: GET
    data_selector: records
- name: VirtualMachineConfigPreset
  endpoint:
    path: /virtual-machine-config-preset
    method: GET
    data_selector: records
- name: VisibilityStatus
  endpoint:
    path: /visibility-status
    method: GET
    data_selector: records
- name: Webhook
  endpoint:
    path: /webhook
    method: GET
    data_selector: records
- name: WebhookInput
  endpoint:
    path: /webhook-input
    method: GET
    data_selector: records
- name: tracks
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.tracks
- name: challenges
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.challenges
- name: hotStartPools
  endpoint:
    path: /hotStartPools
    method: POST
    data_selector: hotStartPools
    params: {}
- name: imageMetadata
  endpoint:
    path: /imageMetadata
    method: POST
    data_selector: imageMetadata
    params: {}
- name: isContainerImageValid
  endpoint:
    path: /isContainerImageValid
    method: POST
    data_selector: isContainerImageValid
    params: {}
- name: isEmailConfirmed
  endpoint:
    path: /isEmailConfirmed
    method: POST
    data_selector: isEmailConfirmed
    params: {}
- name: isURLEmbeddable
  endpoint:
    path: /isURLEmbeddable
    method: POST
    data_selector: isURLEmbeddable
    params: {}
- name: isValidEmail
  endpoint:
    path: /isValidEmail
    method: POST
    data_selector: isValidEmail
    params: {}
- name: isWorkEmail
  endpoint:
    path: /isWorkEmail
    method: POST
    data_selector: isWorkEmail
    params: {}
- name: lab
  endpoint:
    path: /lab
    method: POST
    data_selector: lab
    params: {}
- name: labExists
  endpoint:
    path: /labExists
    method: POST
    data_selector: labExists
    params: {}
- name: labPlayReportItem
  endpoint:
    path: /labPlayReportItem
    method: POST
    data_selector: labPlayReportItem
    params: {}
- name: labPlayReports
  endpoint:
    path: /labPlayReports
    method: POST
    data_selector: labPlayReports
    params: {}
- name: labSession
  endpoint:
    path: /labSession
    method: POST
    data_selector: labSession
    params: {}
- name: labSessions
  endpoint:
    path: /labSessions
    method: POST
    data_selector: labSessions
    params: {}
- name: labs
  endpoint:
    path: /labs
    method: POST
    data_selector: labs
    params: {}
- name: labsV2
  endpoint:
    path: /labsV2
    method: POST
    data_selector: labsV2
    params: {}
- name: landingPage
  endpoint:
    path: /landingPage
    method: POST
    data_selector: landingPage
    params: {}
- name: me
  endpoint:
    path: /me
    method: POST
    data_selector: me
    params: {}
- name: myTracks
  endpoint:
    path: /myTracks
    method: POST
    data_selector: myTracks
    params: {}
- name: note
  endpoint:
    path: /note
    method: GET
    data_selector: data.note
    params: {}
- name: organization
  endpoint:
    path: /organization
    method: GET
    data_selector: data.organization
    params: {}
- name: organizationExists
  endpoint:
    path: /organizationExists
    method: GET
    data_selector: data.organizationExists
    params: {}
- name: organizationInvite
  endpoint:
    path: /organizationInvite
    method: GET
    data_selector: data.organizationInvite
    params: {}
- name: organizationStatistics
  endpoint:
    path: /organizationStatistics
    method: GET
    data_selector: data.organizationStatistics
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: data.organizations
    params: {}
- name: playReportItem
  endpoint:
    path: /playReportItem
    method: GET
    data_selector: data.playReportItem
    params: {}
- name: playReports
  endpoint:
    path: /playReports
    method: GET
    data_selector: data.playReports
    params: {}
- name: sandbox
  endpoint:
    path: /sandbox
    method: GET
    data_selector: data.sandbox
    params: {}
- name: sandboxConfig
  endpoint:
    path: /sandboxConfig
    method: GET
    data_selector: data.sandboxConfig
    params: {}
- name: sandboxConfigVersion
  endpoint:
    path: /sandboxConfigVersion
    method: GET
    data_selector: data.sandboxConfigVersion
    params: {}
- name: sandboxConfigVersionDiff
  endpoint:
    path: /sandboxConfigVersionDiff
    method: GET
    data_selector: data.sandboxConfigVersionDiff
    params: {}
- name: sandboxConfigVersions
  endpoint:
    path: /sandboxConfigVersions
    method: GET
    data_selector: data.sandboxConfigVersions
    params: {}
- name: sandboxConfigs
  endpoint:
    path: /sandboxConfigs
    method: GET
    data_selector: data.sandboxConfigs
    params: {}
- name: sandboxes
  endpoint:
    path: /sandboxes
    method: GET
    data_selector: data.sandboxes
    params: {}
- name: searchTerraformModules
  endpoint:
    path: /searchTerraformModules
    method: GET
    data_selector: data.searchTerraformModules
    params: {}
- name: statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: student
  endpoint:
    path: /student
    method: GET
    data_selector: data.student
    params:
      inviteID: ID!
      userID: ID!
- name: studentStatistics
  endpoint:
    path: /studentStatistics
    method: GET
    data_selector: data.studentStatistics
    params:
      inviteID: ID!
- name: students
  endpoint:
    path: /students
    method: GET
    data_selector: data.students
    params:
      inviteID: ID!
- name: tab
  endpoint:
    path: /tab
    method: GET
    data_selector: data.tab
    params:
      tabID: String!
- name: team
  endpoint:
    path: /team
    method: GET
    data_selector: data.team
    params:
      teamSlug: String
      teamID: String
- name: teamExists
  endpoint:
    path: /teamExists
    method: GET
    data_selector: data.teamExists
    params:
      teamSlug: String!
- name: teamInvite
  endpoint:
    path: /teamInvite
    method: GET
    data_selector: data.teamInvite
    params:
      token: String!
- name: teamSecret
  endpoint:
    path: /teamSecret
    method: GET
    data_selector: data.teamSecret
    params:
      teamSlug: String
      teamID: String
      name: String!
- name: teamStatistics
  endpoint:
    path: /teamStatistics
    method: GET
    data_selector: data.teamStatistics
    params:
      teamID: String
      teamSlug: String
      trackIDs: '[String!]'
      start: Time
      end: Time
      filterDevelopers: Boolean
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: data.teams
- name: terraformModule
  endpoint:
    path: /terraformModule
    method: GET
    data_selector: data.terraformModule
    params:
      id: ID
      module: String
      version: String
- name: track
  endpoint:
    path: /track
    method: GET
    data_selector: data.track
    params:
      trackID: String
      trackSlug: String
      organizationSlug: String
      teamSlug: String
      userID: String
      inviteID: String
- name: trackConfig
  endpoint:
    path: /trackConfig
    method: POST
    data_selector: data.trackConfig
    params: {}
- name: trackConfigPresets
  endpoint:
    path: /trackConfigPresets
    method: POST
    data_selector: data.trackConfigPresets
    params: {}
- name: trackExists
  endpoint:
    path: /trackExists
    method: POST
    data_selector: data.trackExists
    params: {}
- name: trackInvite
  endpoint:
    path: /trackInvite
    method: POST
    data_selector: data.trackInvite
    params: {}
- name: trackInviteClaim
  endpoint:
    path: /trackInviteClaim
    method: POST
    data_selector: data.trackInviteClaim
    params: {}
- name: trackInvites
  endpoint:
    path: /trackInvites
    method: POST
    data_selector: data.trackInvites
    params: {}
- name: trackInvitesV2
  endpoint:
    path: /trackInvitesV2
    method: POST
    data_selector: data.trackInvitesV2
    params: {}
- name: trackLibrary
  endpoint:
    path: /trackLibrary
    method: POST
    data_selector: data.trackLibrary
    params: {}
- name: trackPlayLimits
  endpoint:
    path: /trackPlayLimits
    method: POST
    data_selector: data.trackPlayLimits
    params: {}
- name: trackReview
  endpoint:
    path: /trackReview
    method: POST
    data_selector: data.trackReview
    params: {}
- name: trackReviews
  endpoint:
    path: /trackReviews
    method: POST
    data_selector: data.trackReviews
    params: {}
- name: trackScript
  endpoint:
    path: /trackScript
    method: POST
    data_selector: data.trackScript
    params: {}
- name: trackScripts
  endpoint:
    path: /trackScripts
    method: POST
    data_selector: data.trackScripts
    params: {}
- name: tracks
  endpoint:
    path: tracks
    method: POST
    data_selector: data.tracks
    params: {}
- name: user
  endpoint:
    path: user
    method: POST
    data_selector: data.user
    params: {}
- name: userConsentedToPrivacyPolicy
  endpoint:
    path: userConsentedToPrivacyPolicy
    method: POST
    data_selector: data.userConsentedToPrivacyPolicy
    params: {}
- name: userExists
  endpoint:
    path: userExists
    method: POST
    data_selector: data.userExists
    params: {}
- name: userTrackInvites
  endpoint:
    path: userTrackInvites
    method: POST
    data_selector: data.userTrackInvites
    params: {}
- name: viewInvite
  endpoint:
    path: viewInvite
    method: POST
    data_selector: data.viewInvite
    params: {}
- name: virtualBrowserCheck
  endpoint:
    path: virtualBrowserCheck
    method: POST
    data_selector: data.virtualBrowserCheck
    params: {}
- name: webhooks
  endpoint:
    path: webhooks
    method: POST
    data_selector: data.webhooks
    params: {}
- name: changeTeamUserRole
  endpoint:
    path: /changeTeamUserRole
    method: POST
    data_selector: data.changeTeamUserRole
    params: {}
- name: changeTeamUserScope
  endpoint:
    path: /changeTeamUserScope
    method: POST
    data_selector: data.changeTeamUserScope
    params: {}
- name: checkChallenge
  endpoint:
    path: /checkChallenge
    method: POST
    data_selector: data.checkChallenge
    params: {}
- name: checkQuiz
  endpoint:
    path: /checkQuiz
    method: POST
    data_selector: data.checkQuiz
    params: {}
- name: claimLandingPage
  endpoint:
    path: /claimLandingPage
    method: POST
    data_selector: data.claimLandingPage
    params: {}
- name: claimTeamInvites
  endpoint:
    path: /claimTeamInvites
    method: POST
    data_selector: data.claimTeamInvites
    params: {}
- name: confirmEmailOwnership
  endpoint:
    path: /confirmEmailOwnership
    method: POST
    data_selector: data.confirmEmailOwnership
    params: {}
- name: createAwsAccountConfig
  endpoint:
    path: /mutations/createAwsAccountConfig
    method: POST
    data_selector: data.createAwsAccountConfig
    params: {}
- name: createAzureSubscriptionConfig
  endpoint:
    path: /mutations/createAzureSubscriptionConfig
    method: POST
    data_selector: data.createAzureSubscriptionConfig
    params: {}
- name: createChallenge
  endpoint:
    path: /mutations/createChallenge
    method: POST
    data_selector: data.createChallenge
    params: {}
- name: createChallengeNote
  endpoint:
    path: /mutations/createChallengeNote
    method: POST
    data_selector: data.createChallengeNote
    params: {}
- name: createChallengeTab
  endpoint:
    path: /mutations/createChallengeTab
    method: POST
    data_selector: data.createChallengeTab
    params: {}
- name: createContainerConfig
  endpoint:
    path: /mutations/createContainerConfig
    method: POST
    data_selector: data.createContainerConfig
    params: {}
- name: createGcpProjectConfig
  endpoint:
    path: /mutations/createGcpProjectConfig
    method: POST
    data_selector: data.createGcpProjectConfig
    params: {}
- name: createGithubIntegration
  endpoint:
    path: /mutations/createGithubIntegration
    method: POST
    data_selector: data.createGithubIntegration
    params: {}
- name: createHostImage
  endpoint:
    path: /mutations/createHostImage
    method: POST
    data_selector: data.createHostImage
    params: {}
- name: createHotStartPool
  endpoint:
    path: /mutations/createHotStartPool
    method: POST
    data_selector: data.createHotStartPool
    params: {}
- name: createInviteAuthor
  endpoint:
    path: /mutations/createInviteAuthor
    method: POST
    data_selector: data.createInviteAuthor
    params: {}
- name: createLab
  endpoint:
    path: /mutations/createLab
    method: POST
    data_selector: data.createLab
    params: {}
- name: createLandingPage
  endpoint:
    path: /mutations/createLandingPage
    method: POST
    data_selector: data.createLandingPage
    params: {}
- name: createLtiToolRegistration
  endpoint:
    path: /mutations/createLtiToolRegistration
    method: POST
    data_selector: data.createLtiToolRegistration
    params: {}
- name: createOrganization
  endpoint:
    path: /mutations/createOrganization
    method: POST
    data_selector: data.createOrganization
    params: {}
- name: createSamlSsoConnection
  endpoint:
    path: /mutations/createSamlSsoConnection
    method: POST
    data_selector: data.createSamlSsoConnection
    params: {}
- name: createSandboxConfig
  endpoint:
    path: /createSandboxConfig
    method: POST
    data_selector: data.createSandboxConfig
    params: {}
- name: createSsoConnection
  endpoint:
    path: /createSsoConnection
    method: POST
    data_selector: data.createSsoConnection
    params: {}
- name: createTag
  endpoint:
    path: /createTag
    method: POST
    data_selector: data.createTag
    params: {}
- name: createTagGroup
  endpoint:
    path: /createTagGroup
    method: POST
    data_selector: data.createTagGroup
    params: {}
- name: createTeam
  endpoint:
    path: /createTeam
    method: POST
    data_selector: data.createTeam
    params: {}
- name: createTrack
  endpoint:
    path: /createTrack
    method: POST
    data_selector: data.createTrack
    params: {}
- name: createTrackDeveloper
  endpoint:
    path: /createTrackDeveloper
    method: POST
    data_selector: data.createTrackDeveloper
    params: {}
- name: createTrackInstructor
  endpoint:
    path: /createTrackInstructor
    method: POST
    data_selector: data.createTrackInstructor
    params: {}
- name: createTrackInvite
  endpoint:
    path: /createTrackInvite
    method: POST
    data_selector: data.createTrackInvite
    params: {}
- name: createTrackReview
  endpoint:
    path: /createTrackReview
    method: POST
    data_selector: data.createTrackReview
    params: {}
- name: createVirtualBrowserConfig
  endpoint:
    path: /createVirtualBrowserConfig
    method: POST
    data_selector: data.createVirtualBrowserConfig
    params: {}
- name: deleteSsoConnection
  endpoint:
    path: /deleteSsoConnection
    method: POST
    data_selector: deleteSsoConnection
    params:
      teamID: ID!
      connectionName: String!
- name: deleteTag
  endpoint:
    path: /deleteTag
    method: POST
    data_selector: deleteTag
    params:
      id: ID!
- name: deleteTagGroup
  endpoint:
    path: /deleteTagGroup
    method: POST
    data_selector: deleteTagGroup
    params:
      id: ID!
- name: deleteTeamGithubData
  endpoint:
    path: /deleteTeamGithubData
    method: POST
    data_selector: deleteTeamGithubData
    params:
      teamSlug: String!
- name: deleteTeamInvite
  endpoint:
    path: /deleteTeamInvite
    method: POST
    data_selector: deleteTeamInvite
    params:
      teamID: String!
      email: String!
- name: deleteTeamSecret
  endpoint:
    path: /deleteTeamSecret
    method: POST
    data_selector: deleteTeamSecret
    params:
      teamSlug: String
      teamID: String
      name: String!
- name: deleteTrack
  endpoint:
    path: /deleteTrack
    method: POST
    data_selector: deleteTrack
    params:
      trackID: String!
- name: deleteTrackInstructor
  endpoint:
    path: /deleteTrackInstructor
    method: POST
    data_selector: deleteTrackInstructor
    params:
      trackID: ID!
      userID: ID!
- name: deleteTrackInvite
  endpoint:
    path: /deleteTrackInvite
    method: POST
    data_selector: deleteTrackInvite
    params:
      inviteID: String!
- name: deleteTrackInviteClaim
  endpoint:
    path: /deleteTrackInviteClaim
    method: POST
    data_selector: deleteTrackInviteClaim
    params:
      claimID: String!
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: POST
    data_selector: deleteUser
    params: {}
- name: deleteVirtualBrowserCheck
  endpoint:
    path: /deleteVirtualBrowserCheck
    method: POST
    data_selector: deleteVirtualBrowserCheck
    params:
      id: String!
- name: deleteVirtualBrowserConfig
  endpoint:
    path: /deleteVirtualBrowserConfig
    method: POST
    data_selector: deleteVirtualBrowserConfig
    params:
      virtualbrowserID: String!
- name: deleteVirtualMachineConfig
  endpoint:
    path: /deleteVirtualMachineConfig
    method: POST
    data_selector: deleteVirtualMachineConfig
    params:
      virtualmachineID: String!
- name: deleteWebhook
  endpoint:
    path: /deleteWebhook
    method: POST
    data_selector: deleteWebhook
    params:
      id: String!
      teamID: String
      teamSlug: String
- name: discardChanges
  endpoint:
    path: /discardChanges
    method: POST
    data_selector: discardChanges
    params:
      track: TrackInput!
- name: generateOneTimePlayToken
  endpoint:
    path: /generateOneTimePlayToken
    method: POST
    data_selector: generateOneTimePlayToken
    params:
      trackID: String
      labID: String
- name: generateOrganizationAPIKey
  endpoint:
    path: /generateOrganizationAPIKey
    method: POST
    data_selector: generateOrganizationAPIKey
    params:
      organizationID: String
      organizationSlug: String
- name: generateTeamAPIKey
  endpoint:
    path: /generateTeamAPIKey
    method: POST
    data_selector: generateTeamAPIKey
    params:
      teamID: String
      teamSlug: String
- name: generateTeamLTICredentials
  endpoint:
    path: /generateTeamLTICredentials
    method: POST
    data_selector: generateTeamLTICredentials
    params:
      teamID: String
      teamSlug: String
- name: generateTrackEmbedToken
  endpoint:
    path: /mutations/generateTrackEmbedToken
    method: POST
    data_selector: data.generateTrackEmbedToken
    params:
      trackID: String!
- name: icpStunCredentials
  endpoint:
    path: /mutations/icpStunCredentials
    method: POST
    data_selector: data.icpStunCredentials
    params:
      input: StunIceInput!
- name: importLab
  endpoint:
    path: /mutations/importLab
    method: POST
    data_selector: data.importLab
    params:
      lab: ImportLabInput!
- name: importTerraformModule
  endpoint:
    path: /mutations/importTerraformModule
    method: POST
    data_selector: data.importTerraformModule
    params:
      teamID: String
      teamSlug: String
      input: ImportTerraformModuleInput!
- name: inviteLinkCopied
  endpoint:
    path: /mutations/inviteLinkCopied
    method: POST
    data_selector: data.inviteLinkCopied
    params:
      inviteID: String!
      teamID: String!
- name: inviteOrganizationUser
  endpoint:
    path: /mutations/inviteOrganizationUser
    method: POST
    data_selector: data.inviteOrganizationUser
    params:
      organizationID: String!
      userID: String
      email: String
      role: RoleName
- name: inviteTeamUser
  endpoint:
    path: /mutations/inviteTeamUser
    method: POST
    data_selector: data.inviteTeamUser
    params:
      teamID: String!
      userID: String
      email: String
      role: RoleName
- name: keepAlive
  endpoint:
    path: /mutations/keepAlive
    method: POST
    data_selector: data.keepAlive
    params:
      trackID: ID!
- name: lowerHand
  endpoint:
    path: /mutations/lowerHand
    method: POST
    data_selector: data.lowerHand
    params:
      inviteID: ID!
      userID: ID!
- name: mergeAnonymousUser
  endpoint:
    path: /mutations/mergeAnonymousUser
    method: POST
    data_selector: data.mergeAnonymousUser
    params:
      token: String!
- name: newTrackInviteBroadcastChatMessage
  endpoint:
    path: /mutations/newTrackInviteBroadcastChatMessage
    method: POST
    data_selector: data.newTrackInviteBroadcastChatMessage
    params:
      invite_id: ID!
      message: String!
- name: newTrackInviteDirectChatMessage
  endpoint:
    path: /mutations/newTrackInviteDirectChatMessage
    method: POST
    data_selector: data.newTrackInviteDirectChatMessage
    params:
      invite_id: ID!
      student_user_id: ID!
      message: String!
- name: pausePlay
  endpoint:
    path: /pausePlay
    method: POST
    data_selector: data.pausePlay
    params: {}
- name: publishSandboxConfig
  endpoint:
    path: /publishSandboxConfig
    method: POST
    data_selector: data.publishSandboxConfig
    params: {}
- name: removeOrganizationUser
  endpoint:
    path: /removeOrganizationUser
    method: POST
    data_selector: data.removeOrganizationUser
    params: {}
- name: removeTeamUser
  endpoint:
    path: /removeTeamUser
    method: POST
    data_selector: data.removeTeamUser
    params: {}
- name: removeTrackDeveloper
  endpoint:
    path: /removeTrackDeveloper
    method: POST
    data_selector: data.removeTrackDeveloper
    params: {}
- name: renameSandboxConfig
  endpoint:
    path: /renameSandboxConfig
    method: POST
    data_selector: data.renameSandboxConfig
    params: {}
- name: renameSandboxConfigHost
  endpoint:
    path: /renameSandboxConfigHost
    method: POST
    data_selector: data.renameSandboxConfigHost
    params: {}
- name: resendEmailOwnershipConfirmationCode
  endpoint:
    path: /resendEmailOwnershipConfirmationCode
    method: POST
    data_selector: data.resendEmailOwnershipConfirmationCode
    params: {}
- name: restoreLandingPage
  endpoint:
    path: /restoreLandingPage
    method: POST
    data_selector: data.restoreLandingPage
    params: {}
- name: resumePlay
  endpoint:
    path: /resumePlay
    method: POST
    data_selector: data.resumePlay
    params: {}
- name: saveChallengeScript
  endpoint:
    path: /saveChallengeScript
    method: POST
    data_selector: data.saveChallengeScript
    params: {}
- name: saveHostImage
  endpoint:
    path: /saveHostImage
    method: POST
    data_selector: data.saveHostImage
    params: {}
- name: saveTrackPlayLimit
  endpoint:
    path: /mutations/saveTrackPlayLimit
    method: POST
    data_selector: data.saveTrackPlayLimit
    params: {}
- name: saveTrackPlayLimits
  endpoint:
    path: /mutations/saveTrackPlayLimits
    method: POST
    data_selector: data.saveTrackPlayLimits
    params: {}
- name: saveTrackScript
  endpoint:
    path: /mutations/saveTrackScript
    method: POST
    data_selector: data.saveTrackScript
    params: {}
- name: sendEmailOwnershipConfirmationCode
  endpoint:
    path: /mutations/sendEmailOwnershipConfirmationCode
    method: POST
    data_selector: data.sendEmailOwnershipConfirmationCode
    params: {}
- name: sendScreenShareEvent
  endpoint:
    path: /mutations/sendScreenShareEvent
    method: POST
    data_selector: data.sendScreenShareEvent
    params: {}
- name: setChatMessagesAsRead
  endpoint:
    path: /mutations/setChatMessagesAsRead
    method: POST
    data_selector: data.setChatMessagesAsRead
    params: {}
- name: setInstructorRole
  endpoint:
    path: /mutations/setInstructorRole
    method: POST
    data_selector: data.setInstructorRole
    params: {}
- name: setInstructorTracks
  endpoint:
    path: /mutations/setInstructorTracks
    method: POST
    data_selector: data.setInstructorTracks
    params: {}
- name: setSandboxVariable
  endpoint:
    path: /mutations/setSandboxVariable
    method: POST
    data_selector: data.setSandboxVariable
    params: {}
- name: setTeamGithubInstallationID
  endpoint:
    path: /mutations/setTeamGithubInstallationID
    method: POST
    data_selector: data.setTeamGithubInstallationID
    params: {}
- name: setTrackMaintenance
  endpoint:
    path: /mutations/setTrackMaintenance
    method: POST
    data_selector: data.setTrackMaintenance
    params: {}
- name: setTrackSandboxConfigVersion
  endpoint:
    path: /mutations/setTrackSandboxConfigVersion
    method: POST
    data_selector: data.setTrackSandboxConfigVersion
    params: {}
- name: setupChallenge
  endpoint:
    path: /mutations/setupChallenge
    method: POST
    data_selector: data.setupChallenge
    params:
      challengeID: String!
- name: skipChallenge
  endpoint:
    path: /mutations/skipChallenge
    method: POST
    data_selector: data.skipChallenge
    params:
      trackID: String!
      challengeID: String!
      userID: String
      inviteID: String
- name: skipToChallenge
  endpoint:
    path: /mutations/skipToChallenge
    method: POST
    data_selector: data.skipToChallenge
    params:
      trackID: String!
      challengeID: String!
      userID: String
      inviteID: String
      force: Boolean
- name: solveChallenge
  endpoint:
    path: /mutations/solveChallenge
    method: POST
    data_selector: data.solveChallenge
    params:
      challengeID: String!
- name: startChallenge
  endpoint:
    path: /mutations/startChallenge
    method: POST
    data_selector: data.startChallenge
    params:
      challengeID: String!
- name: startHostImage
  endpoint:
    path: /mutations/startHostImage
    method: POST
    data_selector: data.startHostImage
    params:
      hostImageID: ID!
      vmConfig: HostImageVMConfigInput
- name: startLab
  endpoint:
    path: /mutations/startLab
    method: POST
    data_selector: data.startLab
    params:
      name: String!
      teamSlug: String!
      ref: String
      region: String
      inviteID: String
      landingPageID: String
      customParameters: '[CustomParametersInput!]'
- name: startTrack
  endpoint:
    path: /mutations/startTrack
    method: POST
    data_selector: data.startTrack
    params:
      trackID: String!
      force: Boolean
      prestart: Boolean
      mode: Mode
      inviteID: String
      landingPageID: String
      customParameters: '[CustomParametersInput!]'
      runtimeParameters: RuntimeParametersInput
      region: String
      referrer: String
- name: stopAllTracks
  endpoint:
    path: /mutations/stopAllTracks
    method: POST
    data_selector: data.stopAllTracks
    params: {}
- name: stopHostImage
  endpoint:
    path: /stopHostImage
    method: POST
    data_selector: data.stopHostImage
    params:
      hostImageID: ID!
- name: stopLab
  endpoint:
    path: /stopLab
    method: POST
    data_selector: data.stopLab
    params:
      labSessionID: ID!
- name: stopSandbox
  endpoint:
    path: /stopSandbox
    method: POST
    data_selector: data.stopSandbox
    params:
      sandboxID: String!
- name: stopTrack
  endpoint:
    path: /stopTrack
    method: POST
    data_selector: data.stopTrack
    params:
      trackID: String!
      reason: TrackStopReason
- name: toggleRaisedHand
  endpoint:
    path: /toggleRaisedHand
    method: POST
    data_selector: data.toggleRaisedHand
    params:
      inviteID: ID!
- name: updateAwsAccountConfig
  endpoint:
    path: /updateAwsAccountConfig
    method: POST
    data_selector: data.updateAwsAccountConfig
    params:
      config: AwsAccountConfigInput!
- name: updateAzureSubscriptionConfig
  endpoint:
    path: /updateAzureSubscriptionConfig
    method: POST
    data_selector: data.updateAzureSubscriptionConfig
    params:
      config: AzureSubscriptionConfigInput!
- name: updateChallenge
  endpoint:
    path: /updateChallenge
    method: POST
    data_selector: data.updateChallenge
    params:
      challenge: ChallengeInput!
- name: updateChallengeIndexes
  endpoint:
    path: /updateChallengeIndexes
    method: POST
    data_selector: data.updateChallengeIndexes
    params:
      trackID: String!
      challenges: '[String!]!'
- name: updateChallengeLabConfig
  endpoint:
    path: /updateChallengeLabConfig
    method: POST
    data_selector: data.updateChallengeLabConfig
    params:
      challengeID: ID!
      input: ChallengeLabConfigInput!
- name: updateChallengeNote
  endpoint:
    path: /updateChallengeNote
    method: POST
    data_selector: data.updateChallengeNote
    params:
      note: ChallengeNoteInput!
- name: updateChallengeNoteIndexes
  endpoint:
    path: /updateChallengeNoteIndexes
    method: POST
    data_selector: data.updateChallengeNoteIndexes
    params:
      challengeID: String!
      notes: '[String!]!'
- name: updateChallengeTab
  endpoint:
    path: /updateChallengeTab
    method: POST
    data_selector: data.updateChallengeTab
    params:
      tab: ChallengeTabInput!
- name: updateChallengeTabIndexes
  endpoint:
    path: /updateChallengeTabIndexes
    method: POST
    data_selector: data.updateChallengeTabIndexes
    params:
      challengeID: String!
      tabs: '[String!]!'
- name: updateCloudProviderConfig
  endpoint:
    path: /updateCloudProviderConfig
    method: POST
    data_selector: data.updateCloudProviderConfig
    params:
      teamID: ID!
      input: CloudProviderConfigInput!
- name: updateCompleteTrack
  endpoint:
    path: /mutations/updateCompleteTrack
    method: POST
    data_selector: data.updateCompleteTrack
    params: {}
- name: updateCompleteTrackVersioned
  endpoint:
    path: /mutations/updateCompleteTrackVersioned
    method: POST
    data_selector: data.updateCompleteTrackVersioned
    params: {}
- name: updateContainerConfig
  endpoint:
    path: /mutations/updateContainerConfig
    method: POST
    data_selector: data.updateContainerConfig
    params: {}
- name: updateCustomResource
  endpoint:
    path: /mutations/updateCustomResource
    method: POST
    data_selector: data.updateCustomResource
    params: {}
- name: updateForm
  endpoint:
    path: /mutations/updateForm
    method: POST
    data_selector: data.updateForm
    params: {}
- name: updateGcpProjectConfig
  endpoint:
    path: /mutations/updateGcpProjectConfig
    method: POST
    data_selector: data.updateGcpProjectConfig
    params: {}
- name: updateHostImage
  endpoint:
    path: /mutations/updateHostImage
    method: POST
    data_selector: data.updateHostImage
    params: {}
- name: updateHotStartPool
  endpoint:
    path: /mutations/updateHotStartPool
    method: POST
    data_selector: data.updateHotStartPool
    params: {}
- name: updateLandingPage
  endpoint:
    path: /mutations/updateLandingPage
    method: POST
    data_selector: data.updateLandingPage
    params: {}
- name: updateLtiToolRegistration
  endpoint:
    path: /mutations/updateLtiToolRegistration
    method: POST
    data_selector: data.updateLtiToolRegistration
    params: {}
- name: updateOrganization
  endpoint:
    path: /mutations/updateOrganization
    method: POST
    data_selector: data.updateOrganization
    params: {}
- name: updateRemoteRepository
  endpoint:
    path: /mutations/updateRemoteRepository
    method: POST
    data_selector: data.updateRemoteRepository
    params: {}
- name: updateSamlSsoConnection
  endpoint:
    path: /updateSamlSsoConnection
    method: POST
    data_selector: updateSamlSsoConnection
    params: {}
- name: updateSandboxConfig
  endpoint:
    path: /updateSandboxConfig
    method: POST
    data_selector: updateSandboxConfig
    params: {}
- name: updateSandboxTTL
  endpoint:
    path: /updateSandboxTTL
    method: POST
    data_selector: updateSandboxTTL
    params: {}
- name: updateSecretConfig
  endpoint:
    path: /updateSecretConfig
    method: POST
    data_selector: updateSecretConfig
    params: {}
- name: updateSsoConnection
  endpoint:
    path: /updateSsoConnection
    method: POST
    data_selector: updateSsoConnection
    params: {}
- name: updateTag
  endpoint:
    path: /updateTag
    method: POST
    data_selector: updateTag
    params: {}
- name: updateTagGroup
  endpoint:
    path: /updateTagGroup
    method: POST
    data_selector: updateTagGroup
    params: {}
- name: updateTeam
  endpoint:
    path: /updateTeam
    method: POST
    data_selector: updateTeam
    params: {}
- name: updateTeamFeatures
  endpoint:
    path: /updateTeamFeatures
    method: POST
    data_selector: updateTeamFeatures
    params: {}
- name: updateTrack
  endpoint:
    path: /updateTrack
    method: POST
    data_selector: updateTrack
    params: {}
- name: updateTrackFeatures
  endpoint:
    path: /updateTrackFeatures
    method: POST
    data_selector: updateTrackFeatures
    params: {}
- name: TrackInvite
  endpoint:
    path: /updateTrackInvite
    method: mutation
    data_selector: data.updateTrackInvite
    params: {}
- name: TrackReview
  endpoint:
    path: /updateTrackReview
    method: mutation
    data_selector: data.updateTrackReview
    params: {}
- name: User
  endpoint:
    path: /updateUser
    method: mutation
    data_selector: data.updateUser
    params: {}
- name: VirtualBrowserConfig
  endpoint:
    path: /updateVirtualBrowserConfig
    method: mutation
    data_selector: data.updateVirtualBrowserConfig
    params: {}
- name: VirtualMachineConfig
  endpoint:
    path: /updateVirtualMachineConfig
    method: mutation
    data_selector: data.updateVirtualMachineConfig
    params: {}
- name: Webhook
  endpoint:
    path: /updateWebhook
    method: mutation
    data_selector: data.updateWebhook
    params: {}
- name: TeamSecret
  endpoint:
    path: /upsertTeamSecret
    method: mutation
    data_selector: data.upsertTeamSecret
    params: {}
- name: VirtualBrowserCheck
  endpoint:
    path: /upsertVirtualBrowserCheck
    method: mutation
    data_selector: data.upsertVirtualBrowserCheck
    params: {}
- name: AwsAccountConfigInput
  endpoint:
    path: /AwsAccountConfigInput
    method: GET
    data_selector: AwsAccountConfigInput
    params: {}
- name: AzureSubscriptionConfig
  endpoint:
    path: /AzureSubscriptionConfig
    method: GET
    data_selector: AzureSubscriptionConfig
    params: {}
- name: AzureSubscriptionConfigInput
  endpoint:
    path: /AzureSubscriptionConfigInput
    method: GET
    data_selector: AzureSubscriptionConfigInput
    params: {}
- name: Blueprint
  endpoint:
    path: /Blueprint
    method: GET
    data_selector: Blueprint
    params: {}
- name: BlueprintInput
  endpoint:
    path: /BlueprintInput
    method: GET
    data_selector: BlueprintInput
    params: {}
- name: Challenge
  endpoint:
    path: /Challenge
    method: GET
    data_selector: Challenge
    params: {}
- name: ChallengeInput
  endpoint:
    path: /ChallengeInput
    method: GET
    data_selector: ChallengeInput
    params: {}
- name: ChallengeScriptInput
  endpoint:
    path: /challenges/scripts
    method: GET
    data_selector: records
    params: {}
- name: ChallengeSeries
  endpoint:
    path: /challenges/series
    method: GET
    data_selector: records
    params: {}
- name: ChallengeStatistics
  endpoint:
    path: /challenges/statistics
    method: GET
    data_selector: records
    params: {}
- name: ChallengeStatus
  endpoint:
    path: /challenges/status
    method: GET
    data_selector: records
    params: {}
- name: ChallengeTab
  endpoint:
    path: /challenges/tabs
    method: GET
    data_selector: records
    params: {}
- name: ChallengeTabInput
  endpoint:
    path: /challenges/tabs/input
    method: GET
    data_selector: records
    params: {}
- name: ChallengeType
  endpoint:
    path: /challenges/types
    method: GET
    data_selector: records
    params: {}
- name: Chapter
  endpoint:
    path: /chapters
    method: GET
    data_selector: records
    params: {}
- name: ChatChannelType
  endpoint:
    path: /chat/channels
    method: GET
    data_selector: records
    params: {}
- name: ChatSender
  endpoint:
    path: /chat/senders
    method: GET
    data_selector: records
    params: {}
- name: CloudProvider
  endpoint:
    path: /cloud/providers
    method: GET
    data_selector: records
    params: {}
- name: CloudProviderConfig
  endpoint:
    path: /cloud/providers/config
    method: GET
    data_selector: records
    params: {}
- name: Commit
  endpoint:
    path: /commits
    method: GET
    data_selector: records
    params: {}
- name: CompletionRateSeries
  endpoint:
    path: /completion/rate/series
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionInsight
  endpoint:
    path: /consumption/insight
    method: GET
    data_selector: records
    params: {}
- name: ConsumptionTrackInsight
  endpoint:
    path: /consumption/track/insight
    method: GET
    data_selector: records
    params: {}
- name: ContainerConfig
  endpoint:
    path: /container/config
    method: GET
    data_selector: records
- name: ContainerConfigInput
  endpoint:
    path: /container/config/input
    method: GET
    data_selector: records
- name: ContainerConfigPreset
  endpoint:
    path: /container/config/preset
    method: GET
    data_selector: records
- name: HostImage
  endpoint:
    path: /HostImage
    method: GET
    data_selector: data
- name: HostImageInput
  endpoint:
    path: /HostImageInput
    method: GET
    data_selector: data
- name: HostImageSandbox
  endpoint:
    path: /HostImageSandbox
    method: GET
    data_selector: data
- name: HostImageVMConfigInput
  endpoint:
    path: /HostImageVMConfigInput
    method: GET
    data_selector: data
- name: HostImageVMInputs
  endpoint:
    path: /HostImageVMInputs
    method: GET
    data_selector: data
- name: HotStartPool
  endpoint:
    path: /HotStartPool
    method: GET
    data_selector: data
- name: HotStartPoolConnection
  endpoint:
    path: /HotStartPoolConnection
    method: GET
    data_selector: data
- name: HotStartPoolInput
  endpoint:
    path: /HotStartPoolInput
    method: GET
    data_selector: data
- name: HotStartPoolTrackEdge
  endpoint:
    path: /HotStartPoolTrackEdge
    method: GET
    data_selector: data
- name: InviteEvent
  endpoint:
    path: /invite/event
    method: GET
    data_selector: events
- name: InviteFilterStatus
  endpoint:
    path: /invite/filter/status
    method: GET
    data_selector: statuses
- name: InviteFilters
  endpoint:
    path: /invite/filters
    method: GET
    data_selector: filters
- name: InvitePlay
  endpoint:
    path: /invite/play
    method: GET
    data_selector: plays
- name: InviteStatus
  endpoint:
    path: /invite/status
    method: GET
    data_selector: statuses
- name: LabPlayReportItem
  endpoint:
    path: /lab/play/report/item
    method: GET
    data_selector: items
- name: LabPlayReportPage
  endpoint:
    path: /lab/play/report/page
    method: GET
    data_selector: items
- name: LabPlayReview
  endpoint:
    path: /lab/play/review
    method: GET
    data_selector: items
- name: LabRefMetadata
  endpoint:
    path: /lab/ref/metadata
    method: GET
    data_selector: items
- name: LabSession
  endpoint:
    path: /lab/session
    method: GET
    data_selector: items
- name: LabSessionEvent
  endpoint:
    path: /lab/session/event
    method: GET
    data_selector: items
- name: LtiToolRegistration
  endpoint:
    path: /lti_tool_registrations
    method: POST
    data_selector: registration
    params: {}
- name: Play
  endpoint:
    path: /play
    method: GET
    data_selector: plays
- name: PlayActivity
  endpoint:
    path: /play/activity
    method: GET
    data_selector: activities
- name: PlayInsight
  endpoint:
    path: /play/insight
    method: GET
    data_selector: insights
- name: PlayReport
  endpoint:
    path: /play/report
    method: GET
    data_selector: reports
- name: student
  endpoint:
    path: /student
    method: GET
    data_selector: records
- name: student_statistics
  endpoint:
    path: /student_statistics
    method: GET
    data_selector: records
- name: student_track_statistics
  endpoint:
    path: /student_track_statistics
    method: GET
    data_selector: records
- name: tag
  endpoint:
    path: /tag
    method: GET
    data_selector: records
- name: tag_group
  endpoint:
    path: /tag_group
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /team
    method: GET
    data_selector: records
- name: TeamFeaturesInput
  endpoint:
    path: /team_features_input
    method: POST
    data_selector: data
    params: {}
- name: TotalSandboxTimeSeriesItem
  endpoint:
    path: /TotalSandboxTimeSeriesItem
    method: GET
    data_selector: items
    params: {}
- name: Track
  endpoint:
    path: /Track
    method: GET
    data_selector: tracks
    params: {}
- name: track
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
- name: track_insight
  endpoint:
    path: /track_insights
    method: GET
    data_selector: page
- name: track_invite
  endpoint:
    path: /track_invites
    method: GET
    data_selector: invites
- name: TrackInviteInput
  endpoint:
    path: /trackInvite
    method: POST
    data_selector: items
    params: {}
- name: TrackInvitePage
  endpoint:
    path: /trackInvitePage
    method: GET
    data_selector: items
    params: {}
- name: TrackInviteShareMethod
  endpoint:
    path: /trackInviteShareMethod
    method: GET
    data_selector: items
    params: {}
- name: TrackInviteStatus
  endpoint:
    path: /trackInviteStatus
    method: GET
    data_selector: items
    params: {}
- name: TrackInviteType
  endpoint:
    path: /trackInviteType
    method: GET
    data_selector: items
    params: {}
- name: User
  endpoint:
    path: /user
    method: GET
    data_selector: records
- name: UserActivity
  endpoint:
    path: /user/activity
    method: GET
    data_selector: records
- name: Webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: id
    params: {}
- name: WebhookInput
  endpoint:
    path: /webhook/input
    method: PUT
    data_selector: name
    params: {}
notes:
- Requires setup of API key for authorization
- Every GraphQL request responds with status code 200, check the response for errors.
- The Instruqt CLI collects basic usage information and sends crash reports by default.
  No personal information is collected.
- Uses Instruqt CLI or Web UI to create and manage tracks.
- The track time limit is required and restricts how long a user can interact with
  your track.
- The idle timeout is optional but highly encouraged.
- Instruqt only stores a single feedback submission per play.
- Tracks must be tagged with `no-ci`, `ci-skip`, or `skip-ci` to be excluded from
  automated tests.
- Tracks have an optional setting to allow challenge skipping.
- Learners can only skip challenges if you specifically enable that functionality.
- You cannot turn on skipping for specific challenges.
- The 'skip' functionality will be disabled for all challenges if even one challenge
  has a check script but is missing its corresponding solve script.
- Each challenge supports only one quiz.
- The solution field uses zero-based indexing, meaning 0 refers to the first choice.
- You can modify how the assignment section is displayed to learners using the Web
  UI or CLI.
- Attendees can access the invite link 24 hours before the start time.
- The invite link will expire on the end date.
- Embeds and kiosk mode links grant learners unlimited access to your track without
  any form of authentication.
- Each sandbox is subject to a limit of 15 containers and website services combined.
- Custom images can be have any disk size you like and are not restricted to the default
  10GB that ships with the stock Instruqt images.
- Instruqt only supports Linux *x86/amd64* based images.
- If you are using an Apple Silicon Macbook, use the `--platform=linux/amd64` flag
  for `docker build command.`
- Windows VMs support all the same features as our Linux-based sandbox hosts, including
  running Lifecycle scripts, PowerShell-based Terminal tabs, and the built-in file
  editor.
- The Instruqt platform injects an instruqt user with password Passw0rd! and a pre-configured
  ssh-key to facilitate interaction with other hosts in the environment.
- Windows VMs support Powershell lifecycle scripts with the same naming convention
  as Linux hosts.
- Each sandbox is subject to a limit of 15 containers and website services combined
  at any given time.
- Enable external ingress to port 443 (HTTPS) or high-ports on the VM to make use
  of the new certificates.
- Always be sure to implement the appropriate policies and restrictions before exposing
  tracks with cloud accounts to the public.
- Costs associated with cloud accounts are in addition to your standard Instruqt billing.
- Providing full access to cloud services/accounts is never recommended.
- Policy of least possible permissions should be in place according to the requirements
  of the track.
- Instruqt recommends following best practices for account security that are provided
  by the cloud provider of choice.
- cloud-client offers aws-cli version 1.36.32, while cloud-client:2 offers aws-cli
  version 2.22.27
- Cloud account usage can lead to abuse without the appropriate security policies
  in place.
- All lifecycle scripts are optional.
- The maximum size of a lifecycle script is 5 MB.
- Track setup scripts are executed in advanced as part of hot start pools.
- Waiting for the bootstrap to complete is especially important if you plan to modify
  files like /root/.bashrc in the setup script.
- The bootstrap process may overwrite user files like .bashrc. Wait is encouraged!
- Helper scripts assume the host has a POSIX shell available at /bin/sh.
- The set-workdir script is implemented using $HOME/.bashrc.
- You are billed for hot start sandboxes, even if learners are not using them.
- In order to allow Content Creators to define which services and regions can be used
  in a Track, a Team Owner must configure which ones are allowed within the team for
  every cloud provider.
- Runtime parameters are only injected during lifecycle script executions and are
  by default not stored in / accessible via containers or virtual machines.
- Tracks that need to be hot started and make use of runtime parameters should do
  setup in the first challenges setup script.
- Runtime parameters are key/value pairs that are injected as environment variables
  into lifecycle scripts.
- Runtime parameters specified when starting a track via the API will override the
  values configured on an invite if there are duplicate keys.
- This feature might not be available to all customers. Please contact Instruqt sales
  team to enable it for your organization.
- Most major LMS platforms such as Moodle, Thought Industries and Canvas support LTI
  1.1 and LTI 1.3.
- A unique Consumer Key and Consumer Secret will need to be generated for your team.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 'Callback URL that should be configured on the identity provider: https://sso.play.instruqt.com/login/callback'
- SSO is currently limited to organizations that create and manage Instruqt content.
- API keys are generated using the web UI.
- Endpoint URLs must be publicly accessible.
- Instruqt signs every webhook and metadata with a unique key for each endpoint.
- Track limits allow you to set a play limit for public track plays.
- The IP based limits affect the total number of plays a single IP address can do
  for tracks.
- The org/team for the destination is configured in the track.yml file under 'owner'.
- Instruqt tracks are Infrastructure-as-Code artifacts
- Use 2 or 4 spaces for indentation in YAML files.
- Some objects like Contact may return nulls in deeply nested fields
- Sandbox VMs have an external IP address. You can allow external ingress traffic
  to some ports or port ranges.
- Sandbox containers can never receive direct traffic from external sources.
- Instruqt charges based on resource usage, so make sure you choose the appropriate
  machine type for your workloads.
- An n1-standard-2 machine type is a good place to start for most use cases.
- Every project has a quota of 16 vCPUs per play, and this limitation does not apply
  to the sandbox hosts.
- Only General-Purpose type VM sizes with 16 vCPU or less are allowed in Azure subscriptions.
- Only General-Purpose instance types are allowed in AWS accounts.
- 'The platform has been successfully tested on the following browsers and versions:
  Chrome (>125), Firefox (>124), Safari (>17.3), Edge (>125).'
- It is highly recommended to use the most up-to-date version available.
- For the best experience, we recommend to use the platform at least with a stable
  connection with a minimum speed of 8 Mbps.
- The container mirror is open for anyone developing tracks on Instruqt.
- Instruqt reserves the right to block access to the container mirror if it is being
  used for purposes not related to Instruqt tracks and/or content creation.
- Design is a creative process by nature. You can propose a design flow and method
  like in this document, but you cannot give a detailed sequence of 'do this, do that'-instructions
  for designing.
- Increase IP limits for on-site events.
- Use Hot Start to preheat sandboxes.
- Windows 11 cannot be run on Google Cloud due to these restrictions.
- To provision the Windows 11 host on Azure, you can leverage a startup script.
- Once the host is provisioned, you can use Remote Desktop Protocol (RDP) to view
  the Windows host on Azure.
- This process requires an active Azure account and knowledge of how to use startup
  scripts and RDP.
- Cleanup scripts are a useful tool for managing and resetting SaaS software and Cloud
  accounts after they have been used in a sandbox environment.
- All Google-based resources and Cloud accounts provided by Instruqt are automatically
  cleaned up after the track is complete.
- Instruqt cannot be used in China.
- This error typically occurs when you run a command like 'instruqt track pull instruqt-demos/test'.
- The error is usually a result of expired authentication.
- In native sandboxes, users do not have control over IP and MAC addresses.
- Cloud accounts provide the ability to control networking via Virtual Private Networks
  (VPNs).
- Ensure that you've allocated an appropriate amount of memory to the container.
- Verify that the correct path and port number are being used.
- Try running the Docker container locally.
- Google Cloud Shell already has Docker installed and can run containers natively.
- Avoid ARM-based Mac for container creation.
- 'Note: you need to be a developer for this track'
- An invite can be used to grant external users (invitees) access to your tracks
- Create your API key for authorization
- Instruqt GraphQL API requires your queries and mutations to be authorized by an
  API key.
- you need to be a developer for this track
- Requires setup of connected app in labplay
- Some fields may return nulls in deeply nested structures.
- Requires authentication using OAuth2
errors:
- '401 Unauthorized: Recheck API key validity'
- Unknown argument "organisationSug" on field "tracks" of type "Query".
- 'Script timeout: Scripts are not retried when it times out.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your Consumer Key and Secret.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '200: Request was successful'
- '404: Requested asset not found'
- '500: Internal Instruqt error or error in the underlying storage'
- 'token is malformed: token contains an invalid number of segments'
- BE_001_ImageNotFound
- BE_002_InvalChallTabType
- BE_003_InvalPlayTypeSpeci
- BE_004_MultPlayNotAlloForMeth
- BE_005_MoreThanOnePlayForRequ
- BE_006_MoreThanOneUserForRequ
- BE_007_SecretNotFound
- BE_008_InvalidSecretName
- BE_009_UserHasAlreClaiInvi
- BE_010_UserNotFound
- BE_011_ArcadeTeamNotFound
- BE_012_ChallengeNotFound
- BE_013_ChalNotRighStatSkip
- BE_014_ChalTracArgsTracDon
- BE_015_CoulNotFindCurrPart
- BE_016_EnviNotStarNotReadYet
- BE_017_EnviHasBeenStopStar
- BE_018_CoulNotSkipChalHasAlre
- BE_019_CoulNotSkipChalWait
- BE_020_CustoResouCurreUse
- BE_021_SecrUsedTracConfRemo
- BE_022_SecrUsedTracInviRemo
- BE_023_SecrUsedSandConfRemo
- BE_024_HotStarPoolAttaTrac
- BE_025_EntityAlreadyExists
- BE_026_FailCreaSSOOrga
- BE_027_FailGetSSOOrga
- BE_028_SSOConnAlreExis
- BE_029_FailRollSSOConn
- BE_030_FailAddSSOConnOrga
- BE_031_FailGetSSOConn
- BE_032_SSOConnDoesNotExis
- BE_033_FailGetSSOConnForProv
- BE_034_EntityNotFound
- BE_035_CouldNotFindImage
- BE_036_InvalidImageName
- BE_037_HotStartPoolDelet
- BE_038_DomaNotValiDnsName
- BE_039_MustValidEmail
- BE_040_MustValiHostStarWith
- BE_041_MustValiSlugStarEnds
- BE_042_MustValidURL
- BE_043_MustValiURLFilePath
- BE_044_MustValiHTTPSURL
- BE_045_MustWorkEmail
- BE_046_RepositoryNotFound
- BE_047_FailSetSandVariHost
- BE_048_FailGetSandVariFrom
- BE_049_ImagCannDeleWhilUse
- BE_050_YourTeamNeedAPIKeyBefo
- BE_051_TrackNotVersioned
- BE_052_TeamNotFound
- BE_053_InvalidCloudProvider
- BE_054_ClouProvConfNotFoun
- BE_055_GitHubInteNotSetu
- BE_056_ClouProvConfNotEnab
- BE_057_UnauManaAWSAcco
- BE_058_UnauManaGCPProj
- BE_059_UnautManagAzureSubsc
- BE_060_PresCurrUsedMoreTrac
- BE_061_PresCurrUsedMoreHot
- BE_062_FileNotCorreForma
- BE_063_BranchDoesNotExist
- BE_064_MustValidWorkEmail
- BE_065_DetaRequWhenAcceSett
- BE_066_UnabRemoServUseTrac
- BE_067_UnabRemoRegiUseTrac
- BE_068_UserHasAlreClaiLand
- BE_069_MissArguUserIDEmaiSlug
- BE_070_CredentialsNotFound
- BE_071_CredentAlreadyExist
- BE_072_CoulNotCreaGithInte
- BE_073_RemotReposMustEmpty
- BE_074_VersNotEnabForTracTeam
- BE_075_RepoAlreLinkAnotTrac
- BE_076_NothCommWorkTreeClea
- BE_077_ExisUnpuChanForSame
- BE_078_UnexpVersiContrError
- BE_079_BranchNotFound
- BE_080_PubsubNotAvailab
- BE_081_CanNotMakeMachWithGive
- BE_082_ChannelNotFound
- BE_083_RefNotFound
- BE_084_ProvEithTracIDLabID
- BE_085_TracIDLabIDMustProv
- BE_086_RepositNotVersion
- BE_087_VersNotEnabForEntiTeam
- BE_088_RepoAlreLinkAnotEnti
- BE_089_ALabWithRepoPathAlre
- BE_090_EntiWithRepoPathAlre
- BE_091_EntiTeamAlreUsinRemo
- BE_092_BranWereFounForRepo
- BE_093_RepositoryEmpty
- BE_094_ScriExceMaxiAlloSize
- BE_095_Unauthorized
- BE_096_EmailProviNotAllow
- BE_097_LabNotAvailInvit
- BE_098_LandiPageNotPubli
- BE_099_LabNotAvaiLandPage
- BE_100_TracDoesNotSuppPaus
- BE_101_VcsInteTypeNotSupp
- BE_102_RefAlreadyExists
- Handling errors
- BE_103_PlayNotPausable
- '401 Unauthorized: Check your credentials'
- '400 Bad Request: Invalid input data'
auth_info:
  mentioned_objects:
  - serviceAccount:instruqt-participants-nodepool@instruqt-prod.iam.gserviceaccount.com
  - serviceAccount:instruqt-backend@instruqt-prod.iam.gserviceaccount.com
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://play.instruqt.com/graphql
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
