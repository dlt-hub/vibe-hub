resources:
- name: most_recent_results
  endpoint:
    path: /listguard/results
    method: GET
    data_selector: Email,StatusCode
    params: {}
- name: recent_runs
  endpoint:
    path: /listguard
    method: GET
    data_selector: list_id,records,created_at
    params: {}
- name: results_for_specific_list
  endpoint:
    path: /list/<list_id>/results
    method: GET
    data_selector: Email,StatusCode
    params: {}
- name: recent_results
  endpoint:
    path: /listguard/results
    method: GET
    data_selector: results
- name: recent_runs
  endpoint:
    path: /listguard
    method: GET
    data_selector: runs
- name: results_for_specific_list
  endpoint:
    path: /list/<list_id>/results
    method: GET
    data_selector: results
- name: list
  endpoint:
    path: /v5/list
    method: POST
    data_selector: null
    params:
      type: monitoring
      action: add
      email: '1'
- name: update_monitoring_file
  endpoint:
    path: /v5/list
    method: POST
    data_selector: list_id
    params:
      type: monitoring
      action: add
      email: '1'
- name: check_status
  endpoint:
    path: /v5/list/{list_id}
    method: GET
    data_selector: list_id
    params: {}
- name: update_suppression_file
  endpoint:
    path: /v5/list
    method: POST
    data_selector: ''
    params:
      type: suppression
      action: add
      email: '1'
      name: LOAD_FILE.csv
- name: retrieve_list_status
  endpoint:
    path: /v5/list/<YOUR_LIST_ID_HERE>
    method: GET
    data_selector: ''
    params: {}
- name: suppression_file
  endpoint:
    path: /v5/list
    method: POST
    data_selector: list_id
    params:
      type: suppression
      action: add
      email: '1'
- name: list_status
  endpoint:
    path: /v5/list/<YOUR_LIST_ID_HERE>
    method: GET
    data_selector: list_id
    params: {}
- name: wvi_output
  endpoint:
    path: /wvi_output/
    method: GET
- name: WVI JavaScript
  endpoint:
    path: /docs/atdata-wvi-pixel
    method: GET
    data_selector: records
- name: wvi_output
  endpoint:
    path: /wvi_output/
    method: GET
- name: xtarget
  endpoint:
    path: /adpixel.gif
    method: GET
    data_selector: query_string
    params:
      eqs: encrypted_query_string
      md5_email: email_hash
- name: list
  endpoint:
    path: /list
    method: POST
    data_selector: ''
    params:
      type: targeting
      action: add
      md5_email: '1'
      name: LOAD_FILE.csv
- name: list_status
  endpoint:
    path: /list/{list_id}
    method: GET
    data_selector: ''
    params: {}
- name: list
  endpoint:
    path: /v5/list
    method: POST
    data_selector: ''
    params:
      type: targeting
      action: add
      md5_email: '1'
- name: list_status
  endpoint:
    path: /v5/list/{list_id}
    method: GET
    data_selector: ''
    params: {}
- name: file_formatting
  endpoint:
    path: /reference/file-format
    method: GET
- name: SafeToSend
  endpoint:
    path: /reference/safe-to-send
    method: GET
    data_selector: ''
- name: Demographics Append
  endpoint:
    path: /reference/demographics-append
    method: GET
- name: Bulk Demographics Append
  endpoint:
    path: /reference/bulk-demographics-append
    method: POST
- name: SafeToSend
  endpoint:
    path: /reference/safe-to-send
    method: GET
- name: email_append
  endpoint:
    path: /reference/email-append
    method: GET
- name: postal_append
  endpoint:
    path: /reference/postal-append
    method: GET
- name: alternate_email
  endpoint:
    path: /reference/alternate-email
    method: GET
- name: Demographics Append
  endpoint:
    path: /reference/demographics-append
    method: GET
- name: Bulk Demographics Append
  endpoint:
    path: /reference/bulk-demographics-append
    method: POST
- name: most_recent_results
  endpoint:
    path: /v5/listguard/results
    method: GET
    data_selector: results
- name: list_of_recent_runs
  endpoint:
    path: /v5/listguard
    method: GET
    data_selector: runs
- name: results_for_specific_list
  endpoint:
    path: /v5/list/<list_id>/results
    method: GET
    data_selector: results
- name: Email Append
  endpoint:
    path: /reference/email-append
    method: GET
- name: Postal Append
  endpoint:
    path: /reference/postal-append
    method: GET
- name: Alternate Email
  endpoint:
    path: /reference/alternate-email
    method: GET
- name: recent_results
  endpoint:
    path: /listguard/results
    method: GET
    data_selector: records
- name: recent_runs
  endpoint:
    path: /listguard
    method: GET
    data_selector: '[]'
- name: specific_list_results
  endpoint:
    path: /list/<list_id>/results
    method: GET
    data_selector: records
- name: SafeToSend
  endpoint:
    path: /v5/ev
    method: GET
    data_selector: response
    params: {}
- name: email_verification
  endpoint:
    path: /ev
    method: GET
    data_selector: safe_to_send
    params: {}
- name: SafeToSend
  endpoint:
    path: /v5/ev
    method: GET
- name: email_verification
  endpoint:
    path: /ev
    method: GET
    data_selector: safe_to_send
    params: {}
- name: ip
  endpoint:
    path: /ip
    method: GET
    data_selector: ip
    params: {}
- name: alternate_email
  endpoint:
    path: /ae
    method: GET
- name: postal_append
  endpoint:
    path: /v5/eppend
    method: GET
    data_selector: postal_address
    params:
      email: string
      sha1_email: string
      md5_email: string
      api_key: string
- name: email_append
  endpoint:
    path: /v5/eppend
    method: GET
- name: demographics
  endpoint:
    path: /v5/td
    method: GET
- name: domain_types
  endpoint:
    path: /reference/domain-types
    method: GET
    data_selector: domain_types
    params: {}
- name: ip
  endpoint:
    path: /ip-address
    method: GET
    data_selector: ip
- name: bulk_demographics_append
  endpoint:
    path: /v5/ei/bulk
    method: POST
- name: demographics_append
  endpoint:
    path: /reference/demographics-append
    method: GET
    data_selector: response
- name: postal_append
  endpoint:
    path: /v5/eppend
    method: GET
    data_selector: postal_address
    params: {}
- name: phone_verification
  endpoint:
    path: /reference/phone-verification
    method: GET
    data_selector: phone_verification_response
- name: phone_verification
  endpoint:
    path: /pv
    method: GET
    data_selector: ''
- name: email_append
  endpoint:
    path: /eppend
    method: GET
- name: phone_verification
  endpoint:
    path: /phone-verification
    method: GET
    data_selector: phone_verification
    params: {}
- name: demographics
  endpoint:
    path: /v5/td
    method: GET
- name: bulk_demographics_append
  endpoint:
    path: /v5/ei/bulk
    method: POST
- name: submit_list
  endpoint:
    path: /reference/submit-lists
    method: POST
- name: check_list_status
  endpoint:
    path: /reference/check-list-status
    method: GET
- name: purchase_list_results
  endpoint:
    path: /reference/purchase-list-results
    method: POST
- name: retrieve_list_results
  endpoint:
    path: /reference/retrieve-list-results
    method: GET
- name: phone_verification
  endpoint:
    path: /reference/phone-verification
    method: GET
- name: submit_lists
  endpoint:
    path: /list
    method: POST
- name: check_list_status
  endpoint:
    path: /list/{list_id}
    method: GET
    data_selector: status
- name: phone_verification
  endpoint:
    path: /pv
    method: GET
- name: check_list_status
  endpoint:
    path: /check-list-status
    method: GET
    data_selector: list
    params: {}
- name: submit_list
  endpoint:
    path: /reference/submit-lists
    method: POST
- name: check_list_status
  endpoint:
    path: /reference/check-list-status
    method: GET
- name: purchase_list_results
  endpoint:
    path: /reference/purchase-list-results
    method: POST
- name: retrieve_list_results
  endpoint:
    path: /reference/retrieve-list-results
    method: GET
- name: check_list_status
  endpoint:
    path: /check-list-status
    method: GET
    data_selector: records
    params: {}
- name: submit_lists
  endpoint:
    path: /list
    method: POST
    data_selector: null
    params: {}
- name: purchase_list_results
  endpoint:
    path: /v5/list/{list_id}/purchase
    method: POST
- name: check_list_status
  endpoint:
    path: /v5/list/{list_id}
    method: GET
- name: retrieve_list_results
  endpoint:
    path: /v5/list/{list_id}/results
    method: GET
    data_selector: results
- name: list_status
  endpoint:
    path: /reference/check-list-status
    method: GET
    data_selector: records
    params: {}
- name: check_list_status
  endpoint:
    path: /check-list-status
    method: GET
- name: submit_list
  endpoint:
    path: /list
    method: POST
    data_selector: list_id
    params:
      action: report
- name: check_list_status
  endpoint:
    path: /list/{list_id}
    method: GET
    data_selector: status
    params: {}
- name: retrieve_list_results
  endpoint:
    path: /list/{list_id}/results
    method: GET
    data_selector: results
    params: {}
- name: purchase_list_results
  endpoint:
    path: /list/{list_id}/purchase
    method: POST
    data_selector: status
    params: {}
- name: purchase_list_results
  endpoint:
    path: /v5/list/{list_id}/purchase
    method: POST
- name: retrieve_list_results
  endpoint:
    path: /list/{list_id}/results
    method: GET
- name: submit_list
  endpoint:
    path: /list
    method: POST
    data_selector: list_id
    params:
      action: report
- name: check_list_status
  endpoint:
    path: /list/{list_id}
    method: GET
    data_selector: status
    params: {}
- name: retrieve_list_results
  endpoint:
    path: /list/{list_id}/results
    method: GET
    data_selector: results
    params: {}
- name: purchase_list_results
  endpoint:
    path: /list/{list_id}/purchase
    method: POST
    data_selector: status
    params: {}
- name: SafeToSend
  endpoint:
    path: /v5/ev
    method: GET
- name: email_status
  endpoint:
    path: /reference/email-status
    method: GET
notes:
- The email addresses that fall under the purview of these flags are edge cases, and
  the impact is typically under 1% of your total traffic.
- Ensure that filenames are unique. The system ignores files with duplicate names.
- Requests to endpoints should include your List Guard API key in the api_key header.
- Updates may take up to 24 hours to post to your account.
- Files must be in CSV format with a single column containing email addresses.
- <tracking_domain> and <data_id> are not unique to your account; you'll receive these
  with your pixel.
- 'LABELTEXT: Replace this with any data you want to track, such as a session ID or
  page ID. This data will be passed back to you with your WVI data.'
- '<YOUR_API_KEY>: This is a placeholder for the API key. Your script will include
  a unique API key tied to your account.'
- Your unique SFTP credentials will be provided to you by AtData's Client Services
  team.
- Your results file frequency is customizable, with a range of 1 file per hour to
  1 file per day.
- Your company's URL must be configured to process and decrypt the `eqs` query string
  parameter, and process the `md5_email` parameter within the decrypted data.
- Provide AtData with your encryption key. The key must be 32 characters in the [0-9,
  a-f] range.
- The encryption key must be 32 characters in the [0-9, a-f] range.
- Your company's URL must be configured to process and decrypt the eqs query string
  parameter, and process the md5_email parameter within the decrypted data.
- The encryption key must be 32 characters in the [0-9, a-f] range, e.g. "d6c60c8e688e0afa7f49416897aadc1f".
- AES-128-ECB does not use an initialization vector.
- Files must be in CSV format with a single column containing either plaintext or
  MD5 email addresses.
- This method is only for updating the database and cannot be used to retrieve data.
- A similarly named package, `stompy`, is not compatible and should not be used.
- 'Consistency: These IDs should remain consistent across process restarts.'
- Uploaded lists should use either UTF-8 or ISO 8859-1 character sets.
- There will be no change to the domain name or request URL.
- There will be no change to the response format.
- There will be no change to the SSL certificate, minimum TLS level (TLS 1.2), or
  TLS cipher list.
- Properly formatted files are essential for accurate data processing and verification.
- All requests to our APIs must be made using HTTPS and require an API key.
- All of AtData's Data Services API's have free trials you can use to test.
- Responses do not include metadata such as the run date.
- Treat your API key like a password. Do not expose it in publicly accessible areas
  such as GitHub, client-side code, etc.
- Some domains are known as 'accept all' or 'catchall' domains.
- Trap addresses are deliverable but confirmed spamtraps or otherwise high risk.
- The system doesn't provide addresses that are valid but missing an apartment number
  or secondary address by default.
- AtData’s Phone Verification API enables you to validate and verify phone numbers
  in real time, ensuring your data is accurate and up-to-date.
- All request parameters are required to be URL encoded.
- To use List API, you must use an API Key that has been enabled for the service.
- To use List API for a particular service, you must use an API Key that has been
  enabled for that service.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_API_KEY: Ensure the API key is correct'
- 'List ID not found: Ensure the correct ID is used.'
- 'Invalid API Key: Check your List Guard Key.'
- '400 Bad Request: Check the format of your request and parameters.'
- '401 Unauthorized: Ensure the API key is valid and included.'
- '400 Bad Request: Invalid API key or parameters.'
- '400: Bad request. Some part of the request was invalid. The response body will
  give further explanation as to what the problem is. Usually, this means the email
  address was invalid, some of the parameters were not URL encoded, or no parameters
  were passed.'
- '401: Unauthorized. Either the api_key was missing or invalid.'
- '403: Access denied. Your query limit has been exceeded, or the API key is not associated
  with any available response section.'
- '429: Too many requests. Rate limits have been exceeded. If you call the API more
  than 500 times per second, you will receive this error.'
- '500: Internal server error. Please contact support.'
- '502: Bad gateway. The API is not available. Please try again later or contact support.'
- '400: Bad request. Some part of the request was invalid.'
- '429: Too many requests. Rate limits have been exceeded.'
- '502: Bad gateway. The API is not available.'
- '400: Invalid email format or mailbox doesn''t exist'
- '525: Email is a trap or disposable'
- 'unknown: 5'
- 'valid: 10'
- 'valid: 20'
- 'valid: 45'
- 'safetosend: 50'
- 'valid: 55'
- 'invalid: 100'
- 'invalid: 110'
- 'invalid: 115'
- 'invalid: 120'
- 'invalid: 125'
- 'invalid: 130'
- 'invalid: 140'
- 'invalid: 145'
- 'invalid: 150'
- 'invalid: 155'
- 'invalid: 200'
- 'invalid: 210'
- 'invalid: 215'
- 'invalid: 255'
- 'invalid: 310'
- 'invalid: 325'
- 'invalid: 400'
- 'invalid: 410'
- 'invalid: 420'
- 'invalid: 500'
- 'invalid: 505'
- 'invalid: 510'
- 'invalid: 520'
- 'trap: 525'
- 'trap: 530'
- 'trap: 535'
- 'trap: 540'
- 'unknown: 999'
- '400: Invalid email address'
- '525: Email is a trap'
- 400 Bad Request
- 'unknown: 5: Timeout. The system did not receive a response in time.'
- 'valid: 10: The syntax is correct.'
- 'valid: 20: The syntax is correct, and the domain is valid.'
- 'valid: 45: The domain is a catch-all and does not support individual address validation.'
- 'safetosend: 50: The email address is valid and guaranteed SafeToSend.'
- 'valid: 55: The address is allowed by a client-configured exception.'
- 'invalid: 100: General syntax error in the email address.'
- 'invalid: 110: The email address contains an invalid character.'
- 'invalid: 115: The domain syntax in the email address is invalid.'
- 'invalid: 120: The username syntax in the email address is invalid.'
- 'invalid: 125: The username syntax is invalid for the specified domain.'
- 'invalid: 130: The email address is too long.'
- 'invalid: 140: The email address does not have a username.'
- 'invalid: 145: The email address does not have a domain.'
- 'invalid: 150: The email address does not contain an "@" sign.'
- 'invalid: 155: The email address contains more than one "@" sign.'
- 'invalid: 200: The top-level domain (TLD) in the email address is invalid.'
- 'invalid: 210: The email address contains an extra space or character.'
- 'invalid: 215: Unquoted spaces are not allowed in email addresses.'
- 'invalid: 255: The email address is not allowed due to client-configured suppression.'
- 'invalid: 310: The domain does not exist.'
- 'invalid: 325: The domain cannot receive email.'
- 'invalid: 400: The mailbox does not exist.'
- 'invalid: 410: The mailbox is full and cannot receive emails.'
- 'invalid: 420: Mail is not accepted for this domain.'
- 'invalid: 500: Emails with that username are not accepted.'
- 'invalid: 505: Emails with that domain are not accepted.'
- 'invalid: 510: The email address is not accepted.'
- 'invalid: 520*: The email address matches known bouncers.'
- 'trap: 525: The email address is a spam trap or is suppressed.'
- 'trap: 530: The email address has opted out of commercial emails.'
- 'trap: 535*: The email address is on ANA''s "Do Not Email List".'
- 'trap: 540*: The email address belongs to a known or frequent complainer.'
- 'unknown: 999: A system error occurred.'
- '200: Request OK.'
- '202: Request accepted.'
- '400: Bad request. Either an invalid parameter exists, or the data expected is not
  present.'
- '401: Unauthorized. Check you''re using the right api_key.'
- '403: Access denied. Your query limit has been exceeded, or the API key provided
  does not have the required permissions.'
- '404: The list or results file isn''t found. Verify you have the correct list_id
  and the list is in the right status.'
- '415: Invalid Content-Type submitted.'
- '422: Invalid file. Verify that the file has the proper name and format.'
- 'HTTP 401: If the result file is not ready'
- '401: Unauthorized. Check you''re using the right `api_key`.'
- '404: The list or results file isn''t found. Verify you have the correct `list_id`
  and the list is in the right status.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key validity'
- '401 Unauthorized: If the result file is not ready'
- '401 Unauthorized: Check your API key or permissions'
- '400 Bad Request: Check your request parameters'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.atdata.com
  auth:
    type: apikey
    location: header
    header_name: api_key
  headers:
    Content-Type: multipart/form-data
    Accept: application/json
source_metadata: null
