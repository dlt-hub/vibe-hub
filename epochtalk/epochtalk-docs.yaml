resources:
- name: ad_analytics
  endpoint:
    path: /ads/analytics/:round
    method: GET
    data_selector: round
    params: {}
- name: create_ad
  endpoint:
    path: /ads
    method: POST
    data_selector: id
    params: {}
- name: create_ad_round
  endpoint:
    path: /ads/rounds
    method: POST
    data_selector: round
    params: {}
- name: create_factoid
  endpoint:
    path: /ads/factoids
    method: POST
    data_selector: id
    params: {}
- name: disable_factoid
  endpoint:
    path: /ads/factoids/:id/disable
    method: PUT
    data_selector: Success
    params: {}
- name: duplicate_ad
  endpoint:
    path: /ads/:id/duplicate
    method: POST
    data_selector: id
    params: {}
- name: enable_factoid
  endpoint:
    path: /ads/factoids/:id/enable
    method: PUT
    data_selector: Success
    params: {}
- name: remove_ad
  endpoint:
    path: /ads/:id
    method: DELETE
    data_selector: Success
    params: {}
- name: remove_factoid
  endpoint:
    path: /ads/factoids/:id
    method: DELETE
    data_selector: HTTP
    params: {}
- name: rotate_ad_round
  endpoint:
    path: /ads/rounds/rotate
    method: POST
    data_selector: round
    params: {}
- name: save_ad_view_text
  endpoint:
    path: /ads/text
    method: POST
    data_selector: disclaimer
    params: {}
- name: update_ad
  endpoint:
    path: /ads/:id
    method: PUT
    data_selector: id
    params: {}
- name: update_factoid
  endpoint:
    path: /ads/factoids/:id
    method: PUT
    data_selector: id
    params: {}
- name: view_ad
  endpoint:
    path: /ads/
    method: GET
    data_selector: id
    params: {}
- name: view_ad_round
  endpoint:
    path: /ads/rounds/:roundNumber
    method: GET
    data_selector: ads
    params: {}
- name: view_round_information
  endpoint:
    path: /ads/rounds/info
    method: GET
    data_selector: ads
    params: {}
- name: authenticate_user
  endpoint:
    path: /authenticate
    method: GET
    data_selector: token
    params: {}
- name: confirm_account
  endpoint:
    path: /confirm
    method: POST
    data_selector: token
    params: {}
- name: email_availability
  endpoint:
    path: /register/email/:email
    method: GET
    data_selector: found
    params: {}
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: token
    params: {}
- name: login_auth_with_google
  endpoint:
    path: /auth/google
    method: POST
    data_selector: token
    params: {}
- name: logout
  endpoint:
    path: /logout
    method: DELETE
    data_selector: success
    params: {}
- name: recover_account
  endpoint:
    path: /recover/
    method: POST
    data_selector: success
    params: {}
- name: register_via_invitation
  endpoint:
    path: /join
    method: POST
    data_selector: token
    params: {}
- name: Ad Analytics
  endpoint:
    path: /reference/api-reference.html#ad-analytics
    method: GET
    data_selector: records
    params: {}
- name: register_with_account_verification
  endpoint:
    path: /register
    method: POST
    data_selector: null
    params: {}
- name: register_without_account_verification
  endpoint:
    path: /register
    method: POST
    data_selector: null
    params: {}
- name: reset_account_password
  endpoint:
    path: /reset
    method: POST
    data_selector: null
    params: {}
- name: username_availability
  endpoint:
    path: /register/username/:username
    method: GET
    data_selector: null
    params: {}
- name: validate_account_reset_token
  endpoint:
    path: /reset/:username/:token/validate
    method: GET
    data_selector: null
    params: {}
- name: add_rule
  endpoint:
    path: /automoderation/rules
    method: POST
    data_selector: null
    params: {}
- name: edit_rule
  endpoint:
    path: /automoderation/rules
    method: PUT
    data_selector: null
    params: {}
- name: remove_rule
  endpoint:
    path: /automoderation/rules/:id
    method: DELETE
    data_selector: null
    params: {}
- name: view_rules
  endpoint:
    path: /automoderation/rules
    method: GET
    data_selector: null
    params: {}
- name: add_ban_addresses
  endpoint:
    path: /ban/addresses
    method: POST
    data_selector: null
    params: {}
- name: ban_user
  endpoint:
    path: /users/ban
    method: PUT
    data_selector: null
    params: {}
- name: ad_analytics
  endpoint:
    path: /analytics/:round
    method: GET
    data_selector: round
    params: {}
- name: create_ad
  endpoint:
    path: /
    method: POST
    data_selector: id
    params: {}
- name: create_ad_round
  endpoint:
    path: /rounds
    method: POST
    data_selector: round
    params: {}
- name: create_factoid
  endpoint:
    path: /factoids
    method: POST
    data_selector: id
    params: {}
- name: disable_factoid
  endpoint:
    path: /factoids/:id/disable
    method: PUT
    data_selector: Success
    params: {}
- name: duplicate_ad
  endpoint:
    path: /:id/duplicate
    method: POST
    data_selector: id
    params: {}
- name: enable_factoid
  endpoint:
    path: /factoids/:id/enable
    method: PUT
    data_selector: Success
    params: {}
- name: remove_ad
  endpoint:
    path: /:id
    method: DELETE
    data_selector: Success
    params: {}
- name: ban_user_from_boards
  endpoint:
    path: /users/ban/board
    method: PUT
- name: delete_ban_address
  endpoint:
    path: /ban/addresses
    method: DELETE
- name: edit_ban_address
  endpoint:
    path: /ban/addresses
    method: PUT
- name: get_users_banned_boards
  endpoint:
    path: /users/:username/bannedboards
    method: GET
- name: page_by_banned_addresses
  endpoint:
    path: /ban/addresses
    method: GET
- name: page_by_banned_boards
  endpoint:
    path: /users/banned
    method: GET
- name: unban_user
  endpoint:
    path: /users/unban
    method: PUT
- name: unban_user_from_boards
  endpoint:
    path: /users/unban/board
    method: PUT
- name: all_boards
  endpoint:
    path: /boards/uncategorized
    method: GET
- name: convert_board_slug_to_id
  endpoint:
    path: /boards/:slug/id
    method: GET
- name: create_board
  endpoint:
    path: /boards
    method: POST
- name: delete_board
  endpoint:
    path: /boards/:id
    method: DELETE
- name: find_board
  endpoint:
    path: /boards/:id
    method: GET
- name: move_boards
  endpoint:
    path: /boards/move
    method: GET
    data_selector: boards
- name: update_boards
  endpoint:
    path: /boards/:id
    method: POST
    data_selector: id
- name: update_all_boards
  endpoint:
    path: /boards/all
    method: POST
    data_selector: operations
- name: get_breadcrumbs
  endpoint:
    path: /breadcrumbs
    method: GET
    data_selector: breadcrumbs
- name: get_all_categories
  endpoint:
    path: /boards
    method: GET
    data_selector: data.boards
- name: get_all_categories_unfiltered
  endpoint:
    path: /boards/unfiltered
    method: GET
    data_selector: categories
- name: create_categories
  endpoint:
    path: /categories
    method: POST
    data_selector: categories
- name: delete_categories
  endpoint:
    path: /categories/delete
    method: POST
    data_selector: category_ids
- name: create_conversations
  endpoint:
    path: /conversations
    method: POST
    data_selector: id
- name: delete_conversations
  endpoint:
    path: /conversations/:id
    method: DELETE
    data_selector: id
- name: remove_factoid
  endpoint:
    path: /ads/factoids/:id
    method: DELETE
    data_selector: null
    params: {}
- name: rotate_ad_round
  endpoint:
    path: /ads/rounds/rotate
    method: POST
    data_selector: null
    params: {}
- name: save_ad_view_text
  endpoint:
    path: /ads/text
    method: POST
    data_selector: null
    params: {}
- name: update_ad
  endpoint:
    path: /ads/:id
    method: PUT
    data_selector: null
    params: {}
- name: update_factoid
  endpoint:
    path: /ads/factoids/:id
    method: PUT
    data_selector: null
    params: {}
- name: view_ad
  endpoint:
    path: /ads/
    method: GET
    data_selector: null
    params: {}
- name: view_ad_round
  endpoint:
    path: /ads/rounds/:roundNumber
    method: GET
    data_selector: null
    params: {}
- name: view_round_information
  endpoint:
    path: /ads/rounds/info
    method: GET
    data_selector: null
    params: {}
- name: authenticate_user
  endpoint:
    path: /authenticate
    method: GET
    data_selector: null
    params: {}
- name: confirm_account
  endpoint:
    path: /confirm
    method: POST
    data_selector: null
    params: {}
- name: email_availability
  endpoint:
    path: /register/email/:email
    method: GET
    data_selector: null
    params: {}
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: null
    params: {}
- name: login_auth_with_google
  endpoint:
    path: /auth/google
    method: POST
    data_selector: null
    params: {}
- name: logout
  endpoint:
    path: /logout
    method: DELETE
    data_selector: null
    params: {}
- name: recover_account
  endpoint:
    path: /recover/
    method: POST
    data_selector: null
    params: {}
- name: register_via_invitation
  endpoint:
    path: /join
    method: POST
    data_selector: null
    params: {}
- name: messages_in_conversation
  endpoint:
    path: /conversations/:id
    method: GET
    data_selector: messages
- name: reset_legal_text
  endpoint:
    path: /api/legal/reset
    method: POST
- name: get_legal_text
  endpoint:
    path: /api/legal
    method: GET
- name: delete_mentions
  endpoint:
    path: /mentions
    method: DELETE
- name: get_mention_settings
  endpoint:
    path: /mentions/settings
    method: GET
- name: ignore_user_mentions
  endpoint:
    path: /mentions/ignore
    method: POST
- name: page_ignored_users
  endpoint:
    path: /mentions/ignored
    method: GET
- name: remove_thread_subscriptions
  endpoint:
    path: /threadnotifications
    method: DELETE
- name: toggle_mention_emails
  endpoint:
    path: /mentions/settings
    method: PUT
- name: unignore_user_mentions
  endpoint:
    path: /mentions/unignore
    method: POST
- name: view_mentions
  endpoint:
    path: /mentions
    method: GET
- name: create_message
  endpoint:
    path: /messages
    method: POST
- name: delete_message
  endpoint:
    path: /messages/:id
    method: DELETE
- name: get_message_draft
  endpoint:
    path: /messages/drafts
    method: GET
- name: get_messages_settings
  endpoint:
    path: /messages/settings
    method: GET
- name: get_recent_messages
  endpoint:
    path: /messages
    method: GET
- name: register_with_account_verification
  endpoint:
    path: /register
    method: POST
    data_selector: message
- name: register_without_account_verification
  endpoint:
    path: /register
    method: POST
    data_selector: token
- name: reset_account_password
  endpoint:
    path: /reset
    method: POST
    data_selector: message
- name: username_availability
  endpoint:
    path: /register/username/:username
    method: GET
    data_selector: found
- name: validate_account_reset_token
  endpoint:
    path: /reset/:username/:token/validate
    method: GET
    data_selector: token_valid
- name: add_auto_moderation_rule
  endpoint:
    path: /automoderation/rules
    method: POST
    data_selector: id
- name: edit_auto_moderation_rule
  endpoint:
    path: /automoderation/rules
    method: PUT
    data_selector: id
- name: remove_auto_moderation_rule
  endpoint:
    path: /automoderation/rules/:id
    method: DELETE
    data_selector: HTTP
- name: view_auto_moderation_rules
  endpoint:
    path: /automoderation/rules
    method: GET
    data_selector: rules
- name: add_ban_addresses
  endpoint:
    path: /ban/addresses
    method: POST
    data_selector: data
- name: ban_user
  endpoint:
    path: /users/ban
    method: PUT
    data_selector: id
- name: messages_ignore
  endpoint:
    path: /messages/ignore
    method: POST
    data_selector: success
- name: messages_ignored
  endpoint:
    path: /messages/ignored
    method: GET
    data_selector: data
- name: messages_drafts
  endpoint:
    path: /messages/drafts
    method: PUT
    data_selector: draft
- name: messages_settings
  endpoint:
    path: /messages/settings
    method: PUT
    data_selector: enabled
- name: messages_settings_newbie
  endpoint:
    path: /messages/settings/newbie
    method: PUT
    data_selector: enabled
- name: messages_unignore
  endpoint:
    path: /messages/unignore
    method: POST
    data_selector: success
- name: modlog
  endpoint:
    path: /admin/modlog
    method: GET
    data_selector: data
- name: add_moderator
  endpoint:
    path: /admin/moderators
    method: POST
    data_selector: moderators
- name: remove_moderator
  endpoint:
    path: /admin/moderators/remove
    method: POST
    data_selector: moderators
- name: motd_get
  endpoint:
    path: /motd
    method: GET
    data_selector: motd
- name: motd_set
  endpoint:
    path: /motd
    method: PUT
    data_selector: motd
- name: notifications_dismiss
  endpoint:
    path: /notifications
    method: POST
    data_selector: STATUS
- name: notifications_counts
  endpoint:
    path: /notifications/counts
    method: GET
    data_selector: notificationsCounts
- name: portal_contents
  endpoint:
    path: /portal
    method: GET
    data_selector: contents
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: post
  endpoint:
    path: /posts/:id
    method: GET
    data_selector: post
- name: create_post
  endpoint:
    path: /posts
    method: POST
    data_selector: post
- name: delete_post
  endpoint:
    path: /posts/:id
    method: DELETE
    data_selector: post
- name: page_by_thread
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: page_by_user
  endpoint:
    path: /posts/user/:username
    method: GET
    data_selector: posts
- name: ban_user
  endpoint:
    path: /users/ban/board
    method: PUT
    data_selector: user_id
    params: {}
- name: delete_ban_address
  endpoint:
    path: /ban/addresses
    method: DELETE
    data_selector: hostname
    params: {}
- name: edit_ban_address
  endpoint:
    path: /ban/addresses
    method: PUT
    data_selector: hostname
    params: {}
- name: get_users_banned_boards
  endpoint:
    path: /users/:username/bannedboards
    method: GET
    data_selector: banned_boards
    params: {}
- name: page_banned_addresses
  endpoint:
    path: /ban/addresses
    method: GET
    data_selector: data
    params: {}
- name: page_banned_boards
  endpoint:
    path: /users/banned
    method: GET
    data_selector: data
    params: {}
- name: unban_user
  endpoint:
    path: /users/unban
    method: PUT
    data_selector: user_id
    params: {}
- name: unban_from_boards
  endpoint:
    path: /users/unban/board
    method: PUT
    data_selector: user_id
    params: {}
- name: all_boards
  endpoint:
    path: /boards/uncategorized
    method: GET
    data_selector: boards
    params: {}
- name: convert_board_slug_to_id
  endpoint:
    path: /boards/:slug/id
    method: GET
    data_selector: id
    params: {}
- name: create_board
  endpoint:
    path: /boards
    method: POST
    data_selector: id
    params: {}
- name: delete_board
  endpoint:
    path: /boards/:id
    method: DELETE
    data_selector: boards
    params: {}
- name: find_board
  endpoint:
    path: /boards/:id
    method: GET
    data_selector: id
    params: {}
- name: first_posts_by_user
  endpoint:
    path: /posts/user/:username/started
    method: GET
    data_selector: posts
- name: search_posts
  endpoint:
    path: /search/posts
    method: GET
    data_selector: posts
- name: purge_post
  endpoint:
    path: /posts/:id/purge
    method: DELETE
    data_selector: ''
- name: save_post_draft
  endpoint:
    path: /posts/drafts
    method: PUT
    data_selector: ''
- name: undelete_post
  endpoint:
    path: /posts/:id
    method: POST
    data_selector: ''
- name: unlock_post
  endpoint:
    path: /posts/:id/unlock
    method: POST
    data_selector: ''
- name: update_post
  endpoint:
    path: /posts/:id
    method: POST
    data_selector: ''
- name: get_ranks
  endpoint:
    path: /rank
    method: GET
    data_selector: ranks
- name: upsert_rank
  endpoint:
    path: /rank
    method: PUT
    data_selector: ''
- name: create_message_report_note
  endpoint:
    path: /reports/messagenotes
    method: POST
    data_selector: ''
- name: create_post_report_note
  endpoint:
    path: /reports/postnotes
    method: POST
    data_selector: ''
- name: create_user_report_note
  endpoint:
    path: /reports/usernotes
    method: POST
    data_selector: ''
- name: move_boards
  endpoint:
    path: /boards/move
    method: GET
    data_selector: boards
- name: update_boards
  endpoint:
    path: /boards/:id
    method: POST
    data_selector: id
    params: {}
- name: update_all_boards
  endpoint:
    path: /boards/all
    method: POST
    data_selector: operations
    params: {}
- name: get_breadcrumbs
  endpoint:
    path: /breadcrumbs
    method: GET
    data_selector: breadcrumbs
    params: {}
- name: get_all_categories
  endpoint:
    path: /boards
    method: GET
    data_selector: data.boards
    params: {}
- name: get_all_categories_includes_private
  endpoint:
    path: /boards/unfiltered
    method: GET
    data_selector: categories
    params: {}
- name: create_categories
  endpoint:
    path: /categories
    method: POST
    data_selector: categories
    params: {}
- name: delete_categories
  endpoint:
    path: /categories/delete
    method: POST
    data_selector: category_ids
    params: {}
- name: create_conversations
  endpoint:
    path: /conversations
    method: POST
    data_selector: id
    params: {}
- name: delete_conversation
  endpoint:
    path: /conversations/:id
    method: DELETE
    data_selector: id
    params: {}
- name: message_reports
  endpoint:
    path: /reports/messages
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 15
      field: created_at
      desc: false
- name: user_reports
  endpoint:
    path: /reports/users
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 15
      field: created_at
      desc: false
- name: messages_in_conversation
  endpoint:
    path: /conversations/:id
    method: GET
    data_selector: messages
- name: reset_legal_text
  endpoint:
    path: /api/legal/reset
    method: POST
    data_selector: success
- name: get_message_draft
  endpoint:
    path: /messages/drafts
    method: GET
    data_selector: draft
- name: get_messages_settings
  endpoint:
    path: /messages/settings
    method: GET
    data_selector: email_messages
- name: get_recent_messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: message_report
  endpoint:
    path: /reports/messages
    method: POST
    data_selector: report
    params: {}
- name: post_report
  endpoint:
    path: /reports/users
    method: POST
    data_selector: report
    params: {}
- name: user_report
  endpoint:
    path: /reports/users
    method: POST
    data_selector: report
    params: {}
- name: message_report_note
  endpoint:
    path: /reports/messagenotes
    method: PUT
    data_selector: note
    params: {}
- name: post_report_note
  endpoint:
    path: /reports/usernotes
    method: PUT
    data_selector: note
    params: {}
- name: user_report_note
  endpoint:
    path: /reports/usernotes
    method: PUT
    data_selector: note
    params: {}
- name: update_post_report
  endpoint:
    path: /reports/posts
    method: PUT
    data_selector: report
    params: {}
- name: update_user_report
  endpoint:
    path: /reports/users
    method: PUT
    data_selector: report
    params: {}
- name: messages_ignore
  endpoint:
    path: /messages/ignore
    method: POST
    data_selector: null
    params: {}
- name: messages_ignored
  endpoint:
    path: /messages/ignored
    method: GET
    data_selector: data
    params: {}
- name: messages_drafts
  endpoint:
    path: /messages/drafts
    method: PUT
    data_selector: null
    params: {}
- name: messages_settings
  endpoint:
    path: /messages/settings
    method: PUT
    data_selector: null
    params: {}
- name: messages_settings_newbie
  endpoint:
    path: /messages/settings/newbie
    method: PUT
    data_selector: null
    params: {}
- name: messages_unignore
  endpoint:
    path: /messages/unignore
    method: POST
    data_selector: null
    params: {}
- name: admin_modlog
  endpoint:
    path: /admin/modlog
    method: GET
    data_selector: data
    params: {}
- name: admin_moderators_add
  endpoint:
    path: /admin/moderators
    method: POST
    data_selector: null
    params: {}
- name: admin_moderators_remove
  endpoint:
    path: /admin/moderators/remove
    method: POST
    data_selector: null
    params: {}
- name: motd_get
  endpoint:
    path: /motd
    method: GET
    data_selector: null
    params: {}
- name: motd_set
  endpoint:
    path: /motd
    method: PUT
    data_selector: null
    params: {}
- name: notifications_dismiss
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: notifications_counts
  endpoint:
    path: /notifications/counts
    method: GET
    data_selector: notificationsCounts
    params: {}
- name: portal_contents
  endpoint:
    path: /portal
    method: GET
    data_selector: null
    params: {}
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: blacklist
  endpoint:
    path: /admin/settings/blacklist
    method: GET
    data_selector: blacklist
- name: update_roles
  endpoint:
    path: /admin/roles/update
    method: PUT
- name: add_ip_rule_to_blacklist
  endpoint:
    path: /admin/settings/blacklist
    method: POST
- name: delete_existing_ip_rule_from_blacklist
  endpoint:
    path: /admin/settings/blacklist/:id
    method: DELETE
- name: find
  endpoint:
    path: /api/configurations
    method: GET
- name: get_theme
  endpoint:
    path: /theme
    method: GET
- name: preview_theme
  endpoint:
    path: /theme/preview
    method: PUT
- name: reset_theme
  endpoint:
    path: /theme
    method: POST
- name: set_theme
  endpoint:
    path: /theme
    method: PUT
- name: update_existing_ip_rule_in_blacklist
  endpoint:
    path: /admin/settings/blacklist
    method: PUT
- name: update
  endpoint:
    path: /api/configurations
    method: POST
- name: posts_by_user
  endpoint:
    path: /posts/user/:username/started
    method: GET
- name: search_posts
  endpoint:
    path: /search/posts
    method: GET
- name: purge_post
  endpoint:
    path: /posts/:id/purge
    method: DELETE
- name: save_post_draft
  endpoint:
    path: /posts/drafts
    method: PUT
- name: undelete_post
  endpoint:
    path: /posts/:id
    method: POST
- name: unlock_post
  endpoint:
    path: /posts/:id/unlock
    method: POST
- name: update_post
  endpoint:
    path: /posts/:id
    method: POST
- name: get_ranks
  endpoint:
    path: /rank
    method: GET
- name: upsert_rank
  endpoint:
    path: /rank
    method: PUT
- name: create_message_report_note
  endpoint:
    path: /reports/messagenotes
    method: POST
- name: create_post_report_note
  endpoint:
    path: /reports/postnotes
    method: POST
- name: create_user_report_note
  endpoint:
    path: /reports/usernotes
    method: POST
- name: Get Thread Notification Settings
  endpoint:
    path: /threadnotifications
    method: GET
    data_selector: notify_replied_threads
- name: Toggle Thread Notifications
  endpoint:
    path: /threadnotifications
    method: PUT
    data_selector: enabled
- name: Convert Thread Slug to Id
  endpoint:
    path: /threads/:slug/id
    method: GET
    data_selector: id
- name: Create Thread
  endpoint:
    path: /threads
    method: POST
    data_selector: id
- name: Create Poll
  endpoint:
    path: /threads/:id/polls
    method: POST
    data_selector: id
- name: Edit Poll
  endpoint:
    path: /threads/:thread_id/polls/:poll_id
    method: PUT
    data_selector: id
- name: Lock Thread
  endpoint:
    path: /threads/:id/lock
    method: POST
    data_selector: id
- name: Lock/Unlock Poll
  endpoint:
    path: /threads/:thread_id/polls/:poll_id/lock
    method: POST
    data_selector: id
- name: Mark Thread Viewed
  endpoint:
    path: /threads/:id
    method: POST
    data_selector: success
- name: Move Thread
  endpoint:
    path: /threads/:id/move
    method: POST
    data_selector: id
- name: Page By Board
  endpoint:
    path: /threads
    method: GET
    data_selector: threads
- name: message_report
  endpoint:
    path: /reports/messages
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 15
      filter: Pending
      field: created_at
      desc: false
- name: message_report_notes
  endpoint:
    path: /reports/messagenotes/:messageReportId
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 10
      desc: true
- name: post_report
  endpoint:
    path: /reports/posts
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 15
      filter: Pending
      field: created_at
      desc: false
- name: post_report_notes
  endpoint:
    path: /reports/postnotes/:postReportId
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 10
      desc: true
- name: user_report
  endpoint:
    path: /reports/users
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 15
      filter: Pending
      field: created_at
      desc: false
- name: user_report_notes
  endpoint:
    path: /reports/usernotes/:userReportId
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 10
      desc: true
- name: posted_threads
  endpoint:
    path: /threads/posted
    method: GET
    data_selector: threads
    params:
      page: 1
      limit: 25
- name: purge_thread
  endpoint:
    path: /threads/:id/purge
    method: DELETE
    data_selector: success
- name: remove_vote
  endpoint:
    path: /threads/:thread_id/polls/:poll_id/vote
    method: DELETE
    data_selector: id
- name: sticky_thread
  endpoint:
    path: /threads/:id/sticky
    method: POST
    data_selector: id
- name: update_title
  endpoint:
    path: /threads/:id
    method: POST
    data_selector: id
- name: vote_poll
  endpoint:
    path: /threads/:thread_id/polls/:poll_id/vote
    method: POST
    data_selector: id
- name: add_trust_board
  endpoint:
    path: /admin/trustboards
    method: POST
    data_selector: board_id
- name: add_trust_feedback
  endpoint:
    path: /trust
    method: POST
    data_selector: id
- name: delete_trust_board
  endpoint:
    path: /admin/trustboards/:board_id
    method: DELETE
    data_selector: success
- name: add_roles
  endpoint:
    path: /roles/add
    method: PUT
    data_selector: users
    params: {}
- name: count_users
  endpoint:
    path: /count
    method: GET
    data_selector: count
    params: {}
- name: create_user_note
  endpoint:
    path: /user/notes
    method: POST
    data_selector: id
    params: {}
- name: message_report
  endpoint:
    path: /reports/messages
    method: POST
    data_selector: report
    params: {}
- name: post_report
  endpoint:
    path: /reports/posts
    method: POST
    data_selector: report
    params: {}
- name: user_report
  endpoint:
    path: /reports/users
    method: POST
    data_selector: report
    params: {}
- name: update_message_report_note
  endpoint:
    path: /reports/messagenotes
    method: PUT
    data_selector: note
    params: {}
- name: update_post_report_note
  endpoint:
    path: /reports/usernotes
    method: PUT
    data_selector: note
    params: {}
- name: update_user_report_note
  endpoint:
    path: /reports/usernotes
    method: PUT
    data_selector: note
    params: {}
- name: update_roles
  endpoint:
    path: /admin/roles/update
    method: PUT
    data_selector: ''
    params: {}
- name: add_ip_rule_to_blacklist
  endpoint:
    path: /admin/settings/blacklist
    method: POST
    data_selector: ''
    params: {}
- name: delete_existing_ip_rule_from_blacklist
  endpoint:
    path: /admin/settings/blacklist/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: find
  endpoint:
    path: /api/configurations
    method: GET
    data_selector: ''
    params: {}
- name: get_blacklist
  endpoint:
    path: /admin/settings/blacklist
    method: GET
    data_selector: ''
    params: {}
- name: get_theme
  endpoint:
    path: /theme
    method: GET
    data_selector: ''
    params: {}
- name: preview_theme
  endpoint:
    path: /theme/preview
    method: PUT
    data_selector: ''
    params: {}
- name: reset_theme
  endpoint:
    path: /theme
    method: POST
    data_selector: ''
    params: {}
- name: set_theme
  endpoint:
    path: /theme
    method: PUT
    data_selector: ''
    params: {}
- name: update_existing_ip_rule_in_blacklist
  endpoint:
    path: /admin/settings/blacklist
    method: PUT
    data_selector: ''
    params: {}
- name: update
  endpoint:
    path: /api/configurations
    method: POST
    data_selector: ''
    params: {}
- name: delete_user_note
  endpoint:
    path: /user/notes
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: page_user_notes
  endpoint:
    path: /user/notes
    method: GET
    data_selector: data
    params:
      page: number
      limit: number
      user_id: string
- name: page_users
  endpoint:
    path: /admin/users
    method: GET
    data_selector: users
    params:
      page: number
      limit: number
      field: string
      desc: boolean
      filter: string
      search: string
      ip: boolean
- name: recover_account
  endpoint:
    path: /user/recover/
    method: POST
    data_selector: ''
    params:
      user_id: string
- name: remove_roles
  endpoint:
    path: /admin/users/roles/remove
    method: PUT
    data_selector: ''
    params:
      user_id: string
      role_id: string
- name: search_usernames
  endpoint:
    path: /admin/users/search
    method: GET
    data_selector: usernames
    params:
      username: string
      limit: number
- name: update_user_note
  endpoint:
    path: /user/notes
    method: PUT
    data_selector: ''
    params:
      id: string
      note: string
- name: deactivate_user
  endpoint:
    path: /users/:userId/deactivate
    method: POST
    data_selector: ''
    params:
      id: string
- name: delete_user
  endpoint:
    path: /users/:id
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: find_user
  endpoint:
    path: /users/:username
    method: GET
    data_selector: ''
    params:
      username: string
- name: ignore_user_posts
  endpoint:
    path: /ignoreUsers/ignore/:id
    method: POST
    data_selector: ''
    params:
      id: string
- name: invitation_exists
  endpoint:
    path: /invites/exists
    method: GET
    data_selector: ''
    params:
      email: string
- name: invitations
  endpoint:
    path: /invites
    method: GET
    data_selector: invitations
    params:
      page: string
      limit: string
- name: invite
  endpoint:
    path: /invites
    method: POST
    data_selector: ''
    params:
      email: string
- name: ThreadNotificationSettings
  endpoint:
    path: /threadnotifications
    method: GET
- name: ToggleThreadNotifications
  endpoint:
    path: /threadnotifications
    method: PUT
- name: ConvertThreadSlugToId
  endpoint:
    path: /threads/:slug/id
    method: GET
- name: CreateThread
  endpoint:
    path: /threads
    method: POST
- name: CreatePoll
  endpoint:
    path: /threads/:id/polls
    method: POST
- name: EditPoll
  endpoint:
    path: /threads/:thread_id/polls/:poll_id
    method: PUT
- name: LockThread
  endpoint:
    path: /threads/:id/lock
    method: POST
- name: LockUnlockPoll
  endpoint:
    path: /threads/:thread_id/polls/:poll_id/lock
    method: POST
- name: MarkThreadViewed
  endpoint:
    path: /threads/:id
    method: POST
- name: MoveThread
  endpoint:
    path: /threads/:id/move
    method: POST
- name: PageByBoard
  endpoint:
    path: /threads
    method: GET
- name: ignored_users
  endpoint:
    path: /ignoreUsers/ignored
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 25
- name: registered_users
  endpoint:
    path: /search/users
    method: GET
    data_selector: users
    params:
      page: 1
      limit: 25
- name: user_preferences
  endpoint:
    path: /users/preferences
    method: GET
    data_selector: posts_per_page
- name: reactivate_user
  endpoint:
    path: /users/:id/reactivate
    method: POST
- name: remove_invite
  endpoint:
    path: /invites/remove
    method: POST
- name: resend_invite
  endpoint:
    path: /invites/resend
    method: POST
- name: unignore_user_posts
  endpoint:
    path: /ignoreUsers/unignore/:id
    method: POST
- name: update_user
  endpoint:
    path: /users/:id
    method: PUT
- name: user_lookup
  endpoint:
    path: /users/lookup/{username}
    method: GET
- name: watchlist_boards
  endpoint:
    path: /watchlist
    method: GET
    data_selector: boards
    params:
      page: 1
      limit: 25
- name: watchlist_threads
  endpoint:
    path: /watchlist
    method: GET
    data_selector: threads
    params:
      page: 1
      limit: 25
- name: watchlist_unread
  endpoint:
    path: /watchlist
    method: GET
    data_selector: threads
    params:
      page: 1
      limit: 25
- name: threads_posted
  endpoint:
    path: /threads/posted
    method: GET
    data_selector: threads
    params:
      page: 1
      limit: 25
- name: purge_thread
  endpoint:
    path: /threads/:id/purge
    method: DELETE
    data_selector: success
- name: remove_vote
  endpoint:
    path: /threads/:thread_id/polls/:poll_id/vote
    method: DELETE
    data_selector: id
- name: sticky_thread
  endpoint:
    path: /threads/:id/sticky
    method: POST
    data_selector: id
- name: update_thread_title
  endpoint:
    path: /threads/:id
    method: POST
    data_selector: id
- name: vote_poll
  endpoint:
    path: /threads/:thread_id/polls/:poll_id/vote
    method: POST
    data_selector: id
- name: add_trust_board
  endpoint:
    path: /admin/trustboards
    method: POST
    data_selector: board_id
- name: add_trust_feedback
  endpoint:
    path: /trust
    method: POST
    data_selector: id
- name: delete_trust_board
  endpoint:
    path: /admin/trustboards/:board_id
    method: DELETE
    data_selector: success
- name: unwatch_thread
  endpoint:
    path: /watchlist/threads/:id
    method: DELETE
    data_selector: status
- name: view_edit_watchlist
  endpoint:
    path: /watchlist
    method: GET
    data_selector: threads
    params:
      limit: 25
- name: watch_board
  endpoint:
    path: /watchlist/boards/:id
    method: POST
    data_selector: status
- name: watch_thread
  endpoint:
    path: /watchlist/threads/:id
    method: POST
    data_selector: status
- name: edit_default_trust_list
  endpoint:
    path: /admin/trustlist
    method: POST
    data_selector: max_depth
    params: {}
- name: edit_trust_list
  endpoint:
    path: /trustlist
    method: POST
    data_selector: max_depth
    params: {}
- name: get_default_trust_list
  endpoint:
    path: /admin/trustlist
    method: GET
    data_selector: max_depth
    params: {}
- name: get_trust_boards
  endpoint:
    path: /admin/trustboards
    method: GET
    data_selector: trusted_boards
    params: {}
- name: get_trust_feedback
  endpoint:
    path: /trustfeedback/:username
    method: GET
    data_selector: trusted
    params: {}
- name: get_trust_list
  endpoint:
    path: /trustlist
    method: GET
    data_selector: max_depth
    params: {}
- name: get_trust_score_statistics
  endpoint:
    path: /trust/:username
    method: GET
    data_selector: score
    params: {}
- name: get_trust_tree
  endpoint:
    path: /trusttree
    method: GET
    data_selector: depthObj
    params: {}
- name: add_roles
  endpoint:
    path: /admin/users/roles/add
    method: PUT
    data_selector: users
    params: {}
- name: count_users
  endpoint:
    path: /admin/users/count
    method: GET
    data_selector: count
    params: {}
- name: create_user_note
  endpoint:
    path: /user/notes
    method: POST
    data_selector: id
    params: {}
- name: user_notes
  endpoint:
    path: /user/notes
    method: GET
    params:
      page: 1
      limit: 25
- name: invitation_exists
  endpoint:
    path: /invites/exists
    method: GET
    params: {}
- name: invitations
  endpoint:
    path: /invites
    method: GET
    params:
      page: 1
      limit: 25
- name: ignored_users
  endpoint:
    path: /ignoreUsers/ignored
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 25
- name: registered_users
  endpoint:
    path: /search/users
    method: GET
    data_selector: users
    params:
      page: 1
      limit: 25
- name: user_preferences
  endpoint:
    path: /users/preferences
    method: GET
    data_selector: data
- name: watchlist_boards
  endpoint:
    path: /watchlist
    method: GET
    data_selector: boards
    params:
      page: 1
      limit: 25
- name: watchlist_threads
  endpoint:
    path: /watchlist
    method: GET
    data_selector: threads
    params:
      page: 1
      limit: 25
- name: watchlist_unread
  endpoint:
    path: /watchlist
    method: GET
    data_selector: threads
    params:
      page: 1
      limit: 25
- name: user_lookup
  endpoint:
    path: /users/lookup/{username}
    method: GET
    data_selector: users
- name: unwatch_thread
  endpoint:
    path: /watchlist/threads/:id
    method: DELETE
    data_selector: status
- name: unwatch_board
  endpoint:
    path: /watchlist/boards/:id
    method: DELETE
    data_selector: status
- name: view_edit_watchlist
  endpoint:
    path: /watchlist
    method: GET
    data_selector: threads
    params:
      limit: 25
- name: watch_board
  endpoint:
    path: /watchlist/boards/:id
    method: POST
    data_selector: status
- name: watch_thread
  endpoint:
    path: /watchlist/threads/:id
    method: POST
    data_selector: status
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Ensure that Postgres is installed and running before initializing the first user.
- This can be set in the .env file by setting the var SAAS_MODE to true.
errors:
- 'InternalServerError: There was an error viewing the analytics for ads'
- 'InternalServerError: There was an error creating the ad'
- 'InternalServerError: There was an error creating the ad round'
- 'InternalServerError: There was an error creating the factoid'
- 'InternalServerError: There was an error disabling the factoid'
- 'InternalServerError: There was an error duplicating the ad'
- 'InternalServerError: There was an error enabling the factoid'
- 'InternalServerError: There was an error removing the ad'
- 'InternalServerError: There was an error rotating the ad round'
- 'InternalServerError: There was an error saving the ad view text'
- 'InternalServerError: There was an error updating the ad'
- 'InternalServerError: There was an error updating the factoid'
- 'InternalServerError: There was an error viewing the ad'
- 'InternalServerError: There was an error viewing the round'
- 'InternalServerError: There was an error viewing the round information'
- 'Unauthorized: returned when user is not authenticated'
- 'BadRequest: Account was not found or confirmation token doesn''t match'
- 'InternalServerError: There was an issue confirming the user account'
- 'InternalServerError: There was an issue checking email availability'
- 'BadRequest: Invalid credentials were provided or the account hasn''t been confirmed'
- 'InternalServerError: There was an issue logging in'
- 'InternalServerError: There was an issue deleting user''s web token'
- 'InternalServerError: There was an error recovering the user''s account'
- 'InternalServerError: There was an error registering a new account via invitation'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'BadRequest: There was an error creating the user via invitation.'
- 'InternalServerError: There was an issue registering user'
- 'InternalServerError: There was an error updating the user account''s reset token
  information'
- 'InternalServerError: There was an error creating the auto moderation rule'
- 'InternalServerError: There was an error editing the auto moderation rule'
- 'InternalServerError: There was an error removing the auto moderation rule'
- 'InternalServerError: There was an error viewing the auto moderation rules'
- 'InternalServerError: There was an error banning the addresses'
- 'InternalServerError: There was an error banning the user'
- 'InternalServerError: There was an issue finding the board'
- 'InternalServerError: There was an issue finding all boards'
- 'InternalServerError: There was an issue updating the boards'
- 'InternalServerError: There was an issue updating categories/boards'
- 'InternalServerError: There was an issue retrieving the breadcrumbs'
- 'InternalServerError: There was an issue retrieving boards'
- 'InternalServerError: There was an issue retrieving categories'
- 'InternalServerError: There was an issue creating the categories'
- 'InternalServerError: There was an issue deleting the categories'
- 'InternalServerError: There was an issue creating the conversation'
- 'InternalServerError: There was an issue deleting the conversation'
- 'InternalServerError: There was an error registering the user via invitation'
- '400 BadRequest: There was an error creating the user via invitation.'
- '500 InternalServerError: There was an issue registering user.'
- '400 BadRequest: The user account could not be found or the reset token is invalid.'
- '500 InternalServerError: There was an error updating the user account''s reset
  token information.'
- '500 InternalServerError: There was an error creating the auto moderation rule.'
- '500 InternalServerError: There was an error editing the auto moderation rule.'
- '500 InternalServerError: There was an error removing the auto moderation rule.'
- '500 InternalServerError: There was an error viewing the auto moderation rules.'
- '500 InternalServerError: There was an error banning the addresses.'
- '500 InternalServerError: There was an error banning the user.'
- 'BadRequest: Portal is disabled.'
- 'InternalServerError: There was an issue retrieving portal content.'
- 'InternalServerError: There was an issue creating the post.'
- 'InternalServerError: There was an issue deleting the post.'
- 'InternalServerError: There was an issue finding the post.'
- 'InternalServerError: There was an issue finding the post draft.'
- 'InternalServerError: There was an issue finding the posts for thread.'
- 'InternalServerError: There was an error banning the user from Boards'
- 'Forbidden: User tried to ban from a board they do not moderate, or tried to ban
  a user with higher permissions than themselves'
- 'InternalServerError: There was an error deleting the banned address'
- 'InternalServerError: There was an error updating the banned address'
- 'InternalServerError: There was an error retrieving the user''s banned boards'
- 'Forbidden: User doesn''t have permission to query for user''s banned boards'
- 'InternalServerError: There was an error paging banned addresses'
- 'Forbidden: User doesn''t have permission to query banned addresses'
- 'InternalServerError: There was an error paging board banned users'
- 'Forbidden: User doesn''t have permission to query board banned users'
- 'InternalServerError: There was an error unbanning the user'
- 'InternalServerError: There was an error unbanning the user from Boards'
- 'InternalServerError: There was an issue finding a board with the provided slug'
- 'InternalServerError: There was an issue creating the board'
- 'InternalServerError: There was an issue deleting the boards'
- 'InternalServerError: There was an issue paging posts for user'
- 'InternalServerError: There was an issue purging the post'
- 'InternalServerError: There was an issue saving the post draft'
- 'InternalServerError: There was an error retrieving the users'
- 'InternalServerError: There was an issue undeleting the post'
- 'InternalServerError: There was an issue deleting the post'
- 'InternalServerError: There was an issue updating the post'
- 'InternalServerError: There was an issue retrieving the list of ranks'
- 'InternalServerError: There was an issue upserting the rank'
- 'InternalServerError: There was an error creating the message report note'
- 'InternalServerError: There was an error creating the post report note'
- 'InternalServerError: There was an error creating the user report note'
- 'InternalServerError: There was an error retrieving the message reports'
- 'InternalServerError: There was an error retrieving the user reports'
- 'InternalServerError: There was an issue getting messages for this conversation'
- 'InternalServerError: There was an issue retrieving the ToS, privacy policy and
  disclaimer.'
- 'InternalServerError: There was an issue finding the message draft'
- 'InternalServerError: There was an issue getting message settings'
- 'InternalServerError: There was an error paging user mentions'
- 'InternalServerError: There was an error updating the message report'
- 'BadRequest: Note must not be empty'
- 'InternalServerError: There was an error updating the post report'
- 'InternalServerError: There was an error updating the user report'
- 'InternalServerError: There was an issue reporting the message report'
- 'InternalServerError: There was an issue reporting the post'
- 'InternalServerError: There was an issue reporting the user'
- 'InternalServerError: There was an issue reprioritizing the roles.'
- 'BadRequest: There name of the role must be unique.'
- 'InternalServerError: There was an issue adding the role.'
- 'InternalServerError: There was an issue adding to the blacklist.'
- 'InternalServerError: There was an issue deleting from the blacklist.'
- 'InternalServerError: There was an issue retrieving the blacklist.'
- 'InternalServerError: There was an issue retrieving the theme.'
- 'InternalServerError: There was an issue previewing the theme.'
- 'InternalServerError: There was an issue resetting the theme.'
- 'InternalServerError: There was an issue setting the theme.'
- 'InternalServerError: There was an issue updating the blacklist.'
- 'InternalServerError: There was an issue unlocking the post'
- 'InternalServerError: There was an issue creating the thread'
- 'Unauthorized: User doesn''t have permissions to create the poll'
- 'InternalServerError: There was an issue locking the thread'
- 'Unauthorized: User doesn''t have permissions to lock the thread'
- 'InternalServerError: There was an issue marking the thread viewed'
- 'Unauthorized: User doesn''t have permissions to move the thread'
- 'InternalServerError: There was an error retrieving the post reports'
- 'InternalServerError: There was an issue retrieving the threads'
- 'Unauthorized: User doesn''t have permissions to purge the thread'
- 'Unauthorized: User doesn''t have permissions to vote in the poll'
- 'Unauthorized: User doesn''t have permissions to sticky the thread'
- 'Unauthorized: User doesn''t have permissions to update the thread title.'
- 'Forbidden: User does not have permissions to add a trust board'
- 'Forbidden: User does not have permissions to add trust feedback'
- 'InternalServerError: There was an issue adding board to trust boards'
- 'InternalServerError: There was an issue adding feedback'
- 'InternalServerError: There was an error adding roles to the user'
- 'InternalServerError: There was an error calculating the user count'
- 'InternalServerError: There was an error creating user note'
- 'Forbidden: User doesn''t have permission to create user note'
- 'InternalServerError: There was an getting thread notification settings'
- 'InternalServerError: There was an issue find a thread with the provided slug'
- 'InternalServerError: There was an issue creating the poll'
- 'InternalServerError: There was an issue editing the thread'
- 'Unauthorized: User doesn''t have permissions to edit the poll'
- 'InternalServerError: There was an issue locking/unlocking the poll'
- 'InternalServerError: There was an issue moving the thread'
- 'BadRequest: There was an error creating the invitation'
- 'InternalServerError: There was an error ignoring the user''s posts'
- 'InternalServerError: There was an error getting the user''s preferences'
- 'InternalServerError: There was an error reactivating the user'
- 'InternalServerError: There was an error removing the invite'
- 'InternalServerError: There was an error resending the invitation'
- 'InternalServerError: There was an error unignoring the user''s posts'
- 'InternalServerError: There was an error updating the user'
- 'InternalServerError: There was an issue looking up usernames'
- 'InternalServerError: There was an issue retrieving the board watchlist threads.'
- 'InternalServerError: There was an issue retrieving the watchlist threads.'
- 'InternalServerError: There was an issue unwatching the board'
- 'InternalServerError: There was an issue unwatching the thread'
- 'InternalServerError: There was an issue watching the board'
- 'InternalServerError: There was an issue watching the thread'
- '403 Forbidden: User does not have permissions'
- '500 InternalServerError: There was an issue'
- 'InternalServerError: There was an error deleting the user note'
- 'Forbidden: User doesn''t have permission to delete user note'
- 'InternalServerError: There was an error paging user notes'
- 'Forbidden: User doesn''t have permission to query user notes'
- 'InternalServerError: There was an error recovering the user account'
- 'InternalServerError: There was an error removing roles from the user'
- 'InternalServerError: There was an error searching for usernames'
- 'InternalServerError: There was an error updating user note'
- 'InternalServerError: There was an error deactivating the user'
- 'InternalServerError: There was an error deleting the user'
- 'NotFound: The user was not found'
- 'InternalServerError: There was an error looking up the user'
- 'BadRequest: There was an error checking if the invitation exists.'
- 'BadRequest: There was an error paging invitations.'
auth_info:
  mentioned_objects: []
client:
  base_url: http://localhost:8080
source_metadata: null
