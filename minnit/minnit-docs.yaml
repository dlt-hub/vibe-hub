resources:
- name: getchats
  endpoint:
    path: /getchats
    method: POST
    data_selector: chats
    params:
      action: getchats
- name: createchat
  endpoint:
    path: /createchat
    method: POST
    data_selector: response
    params:
      action: createchat
      chatname: SecondChat
- name: deletechat
  endpoint:
    path: /deletechat
    method: POST
    data_selector: response
    params:
      action: deletechat
      chatname: SecondChat
- name: update_chat_settings
  endpoint:
    path: /updatechatsettings
    method: POST
    data_selector: response
    params:
      action: updatechatsettings
- name: copy_chat_settings_files
  endpoint:
    path: /copychatsettingsfiles
    method: POST
    data_selector: response
    params:
      action: copychatsettingsfiles
- name: pause_chat
  endpoint:
    path: /pause
    method: POST
    data_selector: response
    params:
      action: pause
- name: unpause_chat
  endpoint:
    path: /unpause
    method: POST
    data_selector: response
    params:
      action: unpause
- name: setnotice
  endpoint:
    path: /setnotice
    method: POST
    data_selector: response
    params:
      action: setnotice
      chatname: Main
      noticetext: hello world
- name: kick
  endpoint:
    path: /kick
    method: POST
    data_selector: response
    params:
      action: kick
      chatname: Main
      username: testuser
      reason: inappropriate language
- name: ban
  endpoint:
    path: /ban
    method: POST
    data_selector: response
    params:
      action: ban
      chatname: Main
      username: testuser
      duration: '12'
      reason: inappropriate language
      deletemessages: 'true'
- name: unban
  endpoint:
    path: /unban
    method: POST
    data_selector: response
    params:
      action: unban
      chatname: Main
      username: testuser
- name: setrank
  endpoint:
    path: /setrank
    method: POST
    data_selector: response
    params:
      action: setrank
      chatname: Main
      username: testuser
      rank: moderator
- name: deletemessage
  endpoint:
    path: /deletemessage
    method: POST
    data_selector: response
    params:
      action: deletemessage
      chatname: Main
      msgid: 9f5bcfa7-db10-463c-8455-c456aa1131b3
- name: exportaccounts
  endpoint:
    path: /exportaccounts
    method: POST
    data_selector: results
    params:
      action: exportaccounts
- name: createaccount
  endpoint:
    path: /createaccount
    method: POST
    data_selector: response
    params:
      action: createaccount
- name: deleteaccount
  endpoint:
    path: /deleteaccount
    method: POST
    data_selector: response
    params:
      action: deleteaccount
- name: sendmessage
  endpoint:
    path: /sendmessage
    method: POST
    data_selector: response
    params: {}
- name: editaccountattributes
  endpoint:
    path: /editaccountattributes
    method: POST
    data_selector: response
    params: {}
- name: zeroclickssosync
  endpoint:
    path: /zeroclickssosync
    method: POST
    data_selector: response
    params: {}
- name: poll_data
  endpoint:
    path: /getpolldata
    method: POST
    data_selector: sticky_polls,message_polls
    params:
      action: getpolldata
- name: embed_options
  endpoint:
    path: /chat-features/embed
    method: GET
    data_selector: options
    params: {}
- name: direct_messages
  endpoint:
    path: /chat/archive/direct_messages
    method: GET
    data_selector: messages
- name: chat_export
  endpoint:
    path: /chat/archive/export
    method: GET
    data_selector: export_data
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: userList
  endpoint:
    path: /userList
    method: GET
    data_selector: data
- name: messageHistory
  endpoint:
    path: /messageHistory
    method: GET
    data_selector: messages
- name: message
  endpoint:
    path: /message
    method: GET
    data_selector: message
- name: pendingMessage
  endpoint:
    path: /pendingMessage
    method: GET
    data_selector: message
- name: unreadMessages
  endpoint:
    path: /unreadMessages
    method: GET
    data_selector: messages
- name: messageAttachmentUpdate
  endpoint:
    path: /messageAttachmentUpdate
    method: GET
    data_selector: attachment
- name: messageReaction
  endpoint:
    path: /messageReaction
    method: GET
    data_selector: reaction
- name: selfModerationAction
  endpoint:
    path: /selfModerationAction
    method: GET
    data_selector: action
- name: maximumConnectionsExceeded
  endpoint:
    path: /maximumConnectionsExceeded
    method: GET
    data_selector: event
- name: rank_shapes
  endpoint:
    path: /shop/rank_shapes
    method: GET
- name: getchats
  endpoint:
    path: ''
    method: POST
    data_selector: chats
    params:
      action: getchats
- name: createchat
  endpoint:
    path: ''
    method: POST
    data_selector: success
    params:
      action: createchat
      chatname: SecondChat
- name: deletechat
  endpoint:
    path: ''
    method: POST
    data_selector: success
    params:
      action: deletechat
      chatname: SecondChat
- name: update_chat_settings
  endpoint:
    path: /updatechatsettings
    method: POST
    data_selector: response
    params:
      action: updatechatsettings
- name: copy_chat_settings_files
  endpoint:
    path: /copychatsettingsfiles
    method: POST
    data_selector: response
    params:
      action: copychatsettingsfiles
- name: pause_chat
  endpoint:
    path: /pause
    method: POST
    data_selector: response
    params:
      action: pause
- name: unpause_chat
  endpoint:
    path: /unpause
    method: POST
    data_selector: response
    params:
      action: unpause
- name: setnotice
  endpoint:
    path: /setnotice
    method: POST
    data_selector: response
    params:
      action: setnotice
      chatname: Main
      noticetext: hello world
- name: kick
  endpoint:
    path: /kick
    method: POST
    data_selector: response
    params:
      action: kick
      chatname: Main
      username: testuser
      reason: inappropriate language
- name: ban
  endpoint:
    path: /ban
    method: POST
    data_selector: response
    params:
      action: ban
      chatname: Main
      username: testuser
      duration: '12'
      reason: inappropriate language
      deletemessages: 'true'
- name: unban_user
  endpoint:
    path: /unban
    method: POST
    data_selector: response
    params:
      action: unban
      chatname: Main
      username: testuser
- name: set_rank
  endpoint:
    path: /setrank
    method: POST
    data_selector: response
    params:
      action: setrank
      chatname: Main
      username: testuser
      rank: moderator
- name: delete_message
  endpoint:
    path: /deletemessage
    method: POST
    data_selector: response
    params:
      action: deletemessage
      chatname: Main
      msgid: 9f5bcfa7-db10-463c-8455-c456aa1131b3
- name: exportaccounts
  endpoint:
    path: /exportaccounts
    method: POST
    data_selector: results
    params:
      action: exportaccounts
- name: createaccount
  endpoint:
    path: /createaccount
    method: POST
    data_selector: response
    params:
      action: createaccount
- name: deleteaccount
  endpoint:
    path: /deleteaccount
    method: POST
    data_selector: response
    params:
      action: deleteaccount
- name: sendmessage
  endpoint:
    path: /sendmessage
    method: POST
    data_selector: response
    params:
      action: sendmessage
      chatname: Main
      username: John
      message: Hello world
- name: editaccountattributes
  endpoint:
    path: /editaccountattributes
    method: POST
    data_selector: response
    params:
      action: editaccountattributes
      identifiertype: username
      identifier: John
      cancreatechatrooms: 'true'
      chatroomsmaxusercap: '100'
- name: zeroclickssosync
  endpoint:
    path: /zeroclickssosync
    method: POST
    data_selector: response
    params:
      action: zeroclickssosync
      ssotoken: samplessotoken
      signuserout: 'true'
- name: poll_data
  endpoint:
    path: /getpolldata
    method: POST
    data_selector: Success
    params:
      action: getpolldata
      chatname: Main
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: data
    params: {}
- name: trivia_questions
  endpoint:
    path: /api/trivia/questions
    method: GET
    data_selector: questions
- name: chat_messages
  endpoint:
    path: /chat/messages
    method: POST
    data_selector: data
- name: user_joined
  endpoint:
    path: /chat/users/joined
    method: POST
    data_selector: data
- name: user_left
  endpoint:
    path: /chat/users/left
    method: POST
    data_selector: data
- name: actions
  endpoint:
    path: /chat/actions
    method: POST
    data_selector: data
- name: recently_registered_accounts
  endpoint:
    path: /organizations/manage-accounts/recently_registered_accounts
    method: GET
    data_selector: accounts
- name: create_account
  endpoint:
    path: /organizations/manage-accounts/create_account
    method: POST
    data_selector: account
- name: edit_account
  endpoint:
    path: /organizations/manage-accounts/edit_account
    method: PUT
    data_selector: account
- name: view_account_logs
  endpoint:
    path: /organizations/manage-accounts/view_account_logs
    method: GET
    data_selector: logs
- name: staff_keys
  endpoint:
    path: /Chat?embed&staffkey={staff_key}
    method: GET
    data_selector: staff_keys
    params: {}
notes:
- All requests must include your API key as the X-Key header.
- Uses X-Key for authorization
- Supports Single Sign On (SSO) for user registration and login.
- SSO is available on all plans, including the Free plan.
- You cannot use zero click SSO alongside social login providers.
- Uses Zero-Click SSO for automatic login of Wix users.
- Wix does not support usernames.
- The data passed to the chat uses the user's ID as their username, as usernames are
  required to be unique.
- We recommend disabling registered names from displaying in the chat under Personalization
  in your chat settings. Nicknames will be displayed instead.
- Uses AES-256-GCM for encryption
- The encryption key must be kept secret and not displayed to users
- Uses OAuth2 or SAML2 for Single Sign On integration.
- SSO is available for Organizations on all plans
- Custom CSS is available for chats on the Community plan and higher
- Push Notifications recommended for most use-cases
- Email Notifications work for older devices or devices that are not always online
- No one can Ban, Un-Ban, Kick, or Demote others of equal or greater rank.
- The Chat Owner may toggle these settings individually. The permissions listed here
  are simply the defaults.
- The SDK is available on the Community plan or higher.
- Uses a specific key for authorization
- Uses unique usernames for accounts
- SSO provider name needed for deleting accounts via SSO
- This feature requires you to have your own domain that's already registered in order
  to set it up.
- We do not automatically redirect your existing links to your custom domain.
- Some features are only available on paid plans.
- This bot handles moderating the chat and supports commands like !say and !8ball.
- Changing certain attributes (e.g. username) will sign the user out of all chats.
- Uses OAuth2 with custom credentials for social login providers
- Only enable staff keys if your site has a proper backend that will securely handle
  all verification of the user's identity prior to transmitting the key to the frontend.
- This feature is designed for Q&A sessions, including webinars or schools.
errors:
- 'Invalid API key: Check your X-Key header.'
- 'Chat not found: Ensure the chat name is correct.'
- '400 Bad Request: Check required parameters'
- '401 Unauthorized: Recheck API key'
- 'invalid_redirect_uri: This means the Authorized Redirect URI in the WordPress plugin
  settings does not match the Authorized Redirect URI in your organization''s SSO
  Settings.'
- 'invalid_client: This means the client ID or secret in the WordPress plugin settings
  does not match the client ID or secret in your organization''s SSO settings.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check required fields and constraints'
- '401 Unauthorized: Check API key or authentication method'
- '404 Not Found: Endpoint does not exist'
- 'Invalid action: Ensure action is set correctly'
- 'Missing parameters: Check required fields are included'
- '400 Bad Request: Check required fields are included'
- '401 Unauthorized: Invalid API key or token'
- '401 Unauthorized: Recheck API key or permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://example.minnit.org/page/api
  headers:
    Content-Type: application/x-www-form-urlencoded
source_metadata: null
