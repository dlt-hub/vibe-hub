resources:
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: data
    params:
      detailed: 'false'
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: tee_attestation
  endpoint:
    path: /tee/attestation
    method: GET
    data_selector: attestation_report
    params: {}
- name: tee_signature
  endpoint:
    path: /tee/signature/{request_id}
    method: GET
    data_selector: signature
    params: {}
- name: personalized_models
  endpoint:
    path: /api/personalized/v1/models
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: models
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: completions
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: completions
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embedding_models
  endpoint:
    path: /api/v1/embedding-models
    method: GET
    data_selector: data
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
- name: image_generation
  endpoint:
    path: /api/generate-image
    method: POST
    data_selector: image
    params: {}
- name: image_generation
  endpoint:
    path: /generate-image
    method: POST
    data_selector: image
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
- name: transcribe
  endpoint:
    path: /transcribe
    method: POST
    data_selector: transcription
    params: {}
- name: transcribe-status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: status
    params: {}
- name: transcribe
  endpoint:
    path: /transcribe
    method: POST
    data_selector: transcription
    params: {}
- name: transcribe_status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: status
    params: {}
- name: speech_to_text_status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: status
    params:
      runId: abc123def456
      cost: 123
      paymentSource: <string>
      isApiRequest: true
      fileName: <string>
      fileSize: 123
      chargedDuration: 123
      diarize: true
- name: speech_to_text_status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: status
    params: {}
- name: youtube_transcribe
  endpoint:
    path: /youtube-transcribe
    method: POST
    data_selector: transcripts
    params: {}
- name: youtube_transcribe
  endpoint:
    path: /youtube-transcribe
    method: POST
    data_selector: transcripts
    params: {}
- name: Context Memory
  endpoint:
    path: /memory
    method: POST
    data_selector: messages
- name: context_memory
  endpoint:
    path: /memory
    method: POST
    data_selector: messages
    params:
      memory_expiration_days: '45'
- name: web_scraping
  endpoint:
    path: /scrape-urls
    method: POST
    data_selector: results
    params: {}
- name: web_scraping
  endpoint:
    path: /scrape-urls
    method: POST
    data_selector: results
    params: {}
- name: web_search
  endpoint:
    path: /web
    method: POST
    data_selector: data
    params:
      query: <string>
- name: web_search
  endpoint:
    path: /web
    method: POST
    data_selector: data
    params:
      query: <string>
- name: web_search
  endpoint:
    path: /web
    method: POST
    data_selector: data
    params: {}
- name: web_search
  endpoint:
    path: /web
    method: POST
    data_selector: data
    params:
      query: <string>
- name: web_search
  endpoint:
    path: /web
    method: POST
    data_selector: data
    params:
      query: <string>
- name: web_search
  endpoint:
    path: /web
    method: POST
    data_selector: data
    params: {}
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: status
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: null
    params: {}
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: null
    params: {}
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: ''
    params: {}
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: ''
    params: {}
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: null
    params: {}
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: null
    params: {}
- name: Text-to-Speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: TTS Status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: status
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: ''
    params: {}
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: ''
    params: {}
- name: TTS Status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: status
    params:
      runId: runId
      model: model
      cost: cost
      paymentSource: paymentSource
      isApiRequest: isApiRequest
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: status
    params:
      runId: string
      model: string
      cost: number
      paymentSource: string
      isApiRequest: boolean
- name: tee_attestation
  endpoint:
    path: /tee/attestation
    method: GET
    data_selector: attestation
- name: tee_attestation
  endpoint:
    path: /tee/attestation
    method: GET
    data_selector: attestation
    params:
      model: string
- name: tee_signature
  endpoint:
    path: /tee/signature/{requestId}
    method: GET
- name: tee_signature
  endpoint:
    path: /tee/signature/{requestId}
    method: GET
    data_selector: signature
- name: midjourney_generation_status
  endpoint:
    path: /check-midjourney-status
    method: POST
    data_selector: status
    params: {}
- name: midjourney_generation_status
  endpoint:
    path: /check-midjourney-status
    method: POST
    data_selector: status
    params: {}
- name: video_generation
  endpoint:
    path: /generate-video
    method: POST
    data_selector: response
    params: {}
- name: generate_video
  endpoint:
    path: /generate-video
    method: POST
    data_selector: runId
    params: {}
- name: video_status
  endpoint:
    path: /video-status
    method: GET
    data_selector: status
    params: {}
- name: video_status
  endpoint:
    path: /generate-video/status
    method: GET
    data_selector: data
    params:
      runId: string
      modelSlug: string
- name: video_status
  endpoint:
    path: /generate-video/status
    method: GET
    data_selector: data
    params:
      runId: ''
      modelSlug: ''
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: response
    params: {}
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: response
    params: {}
- name: check_balance
  endpoint:
    path: /check-balance
    method: POST
    data_selector: usd_balance
    params: {}
- name: check_balance
  endpoint:
    path: /check-balance
    method: POST
    data_selector: usd_balance
    params: {}
- name: receive_nano
  endpoint:
    path: /receive-nano
    method: POST
    data_selector: received_blocks
    params: {}
- name: receive_nano
  endpoint:
    path: /receive-nano
    method: POST
    data_selector: received_blocks
    params: {}
- name: crypto_deposits
  endpoint:
    path: /api/transaction/create/btc
    method: POST
- name: check_payment_limits
  endpoint:
    path: /api/transaction/limits/btc
    method: GET
- name: crypto_deposits
  endpoint:
    path: /api/transaction/create/{ticker}
    method: POST
    data_selector: response
    params: {}
- name: payment_limits
  endpoint:
    path: /api/transaction/limits/{ticker}
    method: GET
    data_selector: response
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: text_completion
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: text
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: text_completions
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: text
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: text_completions
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: text
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params:
      stream: true
- name: text_completions
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: response
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: text_completion
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: text
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: text_completion
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
    params: {}
- name: talk_to_gpt
  endpoint:
    path: /talk-to-gpt
    method: POST
    data_selector: text
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
    params: {}
- name: create_embeddings
  endpoint:
    path: /embeddings
    method: POST
- name: discover_embedding_models
  endpoint:
    path: /embedding-models
    method: GET
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
    params: {}
- name: create_embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: discover_embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: models
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embedding-models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: embedding_models
  endpoint:
    path: /embedding-models
    method: GET
    data_selector: data
    params: {}
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: ''
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: images
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: image_generation
  endpoint:
    path: /images/generations
    method: POST
    data_selector: data
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: video_generation
  endpoint:
    path: /api/generate-video
    method: POST
    data_selector: runId
- name: video_status
  endpoint:
    path: /api/generate-video/status
    method: GET
    data_selector: data
    params: {}
- name: video_generation
  endpoint:
    path: /api/generate-video
    method: POST
    data_selector: runId
- name: video_status
  endpoint:
    path: /api/generate-video/status
    method: GET
    data_selector: data
    params: {}
- name: generate_video
  endpoint:
    path: /api/generate-video
    method: POST
    data_selector: runId
- name: video_status
  endpoint:
    path: /api/generate-video/status
    method: GET
    data_selector: data
    params: {}
- name: transcribe
  endpoint:
    path: /transcribe
    method: POST
    data_selector: transcription
    params: {}
- name: transcribe_status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: status
    params: {}
- name: video_generation
  endpoint:
    path: /api/generate-video
    method: POST
    data_selector: runId
- name: video_status
  endpoint:
    path: /api/generate-video/status
    method: GET
    data_selector: data
    params:
      runId: '{runId}'
      modelSlug: '{model}'
- name: transcribe
  endpoint:
    path: /transcribe
    method: POST
    data_selector: transcription
- name: transcribe_status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: status
- name: transcribe
  endpoint:
    path: /transcribe
    method: POST
    data_selector: transcription
    params: {}
- name: transcribe_status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: status
    params: {}
- name: Text-to-Speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: TTS Status
  endpoint:
    path: /tts/status
    method: GET
- name: transcribe
  endpoint:
    path: /transcribe
    method: POST
    data_selector: ''
    params: {}
- name: transcribe_status
  endpoint:
    path: /transcribe/status
    method: POST
    data_selector: ''
    params: {}
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: status
- name: synthesize
  endpoint:
    path: /synthesize
    method: POST
    data_selector: result
- name: batch_synthesize
  endpoint:
    path: /batch_synthesize
    method: POST
    data_selector: results
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: null
    params: {}
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: null
    params: {}
- name: text_to_speech
  endpoint:
    path: /api/tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /api/tts/status
    method: GET
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
    data_selector: audioUrl
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
    data_selector: ''
- name: synthesize
  endpoint:
    path: /tts
    method: POST
    data_selector: audio_data
- name: text_to_speech
  endpoint:
    path: /tts
    method: POST
- name: tts_status
  endpoint:
    path: /tts/status
    method: GET
- name: tee_attestation
  endpoint:
    path: /api/v1/tee/attestation
    method: GET
    data_selector: data
    params:
      model: TEE/hermes-3-llama-3.1-70b
- name: tee_signature
  endpoint:
    path: /api/v1/tee/signature/{requestId}
    method: GET
    data_selector: data
    params:
      model: TEE/hermes-3-llama-3.1-70b
      signing_algo: ecdsa
- name: synthesize
  endpoint:
    path: /tts
    method: POST
    data_selector: response
    params: {}
- name: batch_synthesize
  endpoint:
    path: /batch_tts
    method: POST
    data_selector: response
    params: {}
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: video_generation
  endpoint:
    path: /api-reference/endpoint/video-generation
    method: POST
- name: tee_attestation
  endpoint:
    path: /api/v1/tee/attestation
    method: GET
    data_selector: attestation
    params:
      model: TEE/hermes-3-llama-3.1-70b
- name: tee_signature
  endpoint:
    path: /api/v1/tee/signature/{requestId}
    method: GET
    data_selector: signature
    params:
      model: TEE/hermes-3-llama-3.1-70b
      signing_algo: ecdsa
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text_transcription
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: text_to_speech
  endpoint:
    path: /api-reference/endpoint/tts
    method: POST
- name: Models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: Chat Completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: Embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: Image Generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: Speech-to-Text Transcription
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: chat
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: generate_image
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: check_balance
  endpoint:
    path: /api-reference/endpoint/check-balance
    method: POST
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: response
    params: {}
- name: chat
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: check_balance
  endpoint:
    path: /api-reference/endpoint/check-balance
    method: POST
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: response
    params: {}
- name: chat_completions
  endpoint:
    path: /api/chat-completions
    method: POST
    data_selector: choices
- name: text_completions
  endpoint:
    path: /api/completions
    method: POST
    data_selector: choices
- name: image_generation
  endpoint:
    path: /api/images/generate
    method: POST
    data_selector: image
- name: video_generation
  endpoint:
    path: /api/videos/create
    method: POST
    data_selector: video
- name: check_balance
  endpoint:
    path: /api/check-balance
    method: POST
    data_selector: balance
- name: chat_completions
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: images
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: videos
  endpoint:
    path: /api-reference/endpoint/video-generation
    method: POST
- name: balance
  endpoint:
    path: /api-reference/endpoint/check-balance
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: text_generation
  endpoint:
    path: /api-reference/text-generation
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: text_to_speech
  endpoint:
    path: /api-reference/endpoint/tts
    method: POST
- name: Chat Completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: Text Generation
  endpoint:
    path: /api-reference/text-generation
    method: POST
- name: Image Generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: Video Generation
  endpoint:
    path: /api-reference/video-generation
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text_transcription
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: text_to_speech
  endpoint:
    path: /api-reference/endpoint/tts
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: video_generation
  endpoint:
    path: /api-reference/endpoint/video-generation
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text_transcription
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: text_to_speech
  endpoint:
    path: /api-reference/endpoint/tts
    method: POST
- name: chat_completion
  endpoint:
    path: /api/chat-completion
    method: POST
- name: completion
  endpoint:
    path: /api/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api/image-generation
    method: POST
- name: video_generation
  endpoint:
    path: /api/video-generation
    method: POST
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text_transcription
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: text_to_speech
  endpoint:
    path: /api-reference/endpoint/tts
    method: POST
- name: models
  endpoint:
    path: /models
    method: GET
- name: chat_completion
  endpoint:
    path: /chat-completion
    method: POST
- name: completions
  endpoint:
    path: /completion
    method: POST
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /image-generation
    method: POST
- name: transcribe
  endpoint:
    path: /transcribe
    method: POST
- name: youtube_transcribe
  endpoint:
    path: /youtube-transcribe
    method: POST
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: chat_completion
  endpoint:
    path: /api/v1/chat/completion
    method: POST
- name: text_generation
  endpoint:
    path: /api/v1/text-generation
    method: POST
- name: image_generation
  endpoint:
    path: /api/v1/image-generation
    method: POST
- name: video_generation
  endpoint:
    path: /api/v1/video-generation
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
    data_selector: models
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
    data_selector: completion
- name: completions
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
    data_selector: result
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
    data_selector: embeddings
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: text_generation
  endpoint:
    path: /api-reference/text-generation
    method: POST
- name: models
  endpoint:
    path: /api-reference/endpoint/models
    method: GET
- name: personalized_models
  endpoint:
    path: /api-reference/endpoint/personalized-models
    method: GET
- name: chat_completion
  endpoint:
    path: /api-reference/endpoint/chat-completion
    method: POST
- name: completion
  endpoint:
    path: /api-reference/endpoint/completion
    method: POST
- name: embeddings
  endpoint:
    path: /api-reference/endpoint/embeddings
    method: POST
- name: image_generation
  endpoint:
    path: /api-reference/endpoint/image-generation
    method: POST
- name: speech_to_text
  endpoint:
    path: /api-reference/endpoint/transcribe
    method: POST
- name: text_to_speech
  endpoint:
    path: /api-reference/endpoint/tts
    method: POST
- name: check_balance
  endpoint:
    path: /api-reference/endpoint/check-balance
    method: POST
notes:
- Invalid or missing API keys still return a list of models.
- Required for SSE streaming
- This route is explicitly dynamic (no shared caching across keys).
- Model ids and metadata evolve as providers update their catalogs; keep consumers
  resilient to new fields.
- All models can access real-time web information by appending special suffixes to
  the model name.
- 'Web scraping is separate. To scrape non‑YouTube URLs, set `scraping: true`. YouTube
  transcripts do not require `scraping: true`.'
- Automatically fetch and prepend YouTube video transcripts when the latest user message
  contains YouTube links.
- 'Web scraping is separate. To scrape non‑YouTube URLs, set `scraping: true`.'
- Web search increases input token count, which affects total cost
- Models gain access to real-time information published less than a minute ago
- Internet connectivity can provide up to 10x improvement in factuality
- Bearer authentication header of the form 'Bearer <token>', where '<token>' is your
  auth token.
- Create embeddings for text using OpenAI-compatible and alternative embedding models.
- Uses Bearer token for API key authentication
- Authentication is optional but may enable user-specific features.
- Authentication is optional but may enable user-specific features
- Authorization requires a Bearer token.
- Authorization Bearer token required for API calls.
- Supports multiple languages, speaker diarization, and various audio formats.
- Some TTS models run asynchronously.
- For Elevenlabs‑family async models (e.g., Elevenlabs-Turbo-V2.5, Elevenlabs-V3)
  you will always poll this endpoint until it returns completed.
- When the job completes, the response includes an audioUrl you can download or play
  in the browser.
- For Elevenlabs‑family async models (e.g., `Elevenlabs-Turbo-V2.5`, `Elevenlabs-V3`)
  you will always poll this endpoint until it returns `completed`.
- Polling this endpoint is free; submission endpoints are rate limited.
- The final video URL is returned in data.output.video.url when status is COMPLETED.
- Web search works with all models - simply append the suffix
- Increases input token count which affects total cost
- Provides access to real-time information
- For new projects, consider using the OpenAI-compatible `/v1/chat/completions` endpoint
  instead
- 'Required for SSE streaming: Accept header must be set to text/event-stream'
- Enable streaming for chat completions.
- Use Bearer token for API key authorization.
- Supports batch processing for multiple texts in a single request.
- Dimension reduction is supported for specific models.
- Dimension reduction is available for supported models.
- The API supports 16 different embedding models
- Default rate limit is 100 requests per second per IP address.
- Default rate limit is 100 requests per second per IP address
- No rate limiting for internal requests
- All images must be provided as base64-encoded data URLs
- Uses API key for authentication
- All images must be provided as base64-encoded data URLs.
- Polling is required to check the status of video generation.
- Polling for status should be done using the runId returned from the initial request.
- API supports multiple languages, speaker diarization, and various audio formats
  with both synchronous and asynchronous processing options.
- All requests require authentication via API key
- All requests require authentication via API key.
- Some models may have specific parameters that need to be included in the request.
- TTS request with retry logic and comprehensive error handling
- Use Bearer token for API key authentication.
- The NanoGPT API currently imposes a limit of 25 requests per second.
- Supports a maximum of 10000 characters for models Kokoro-82m and Elevenlabs-Turbo-V2.5.
- Text too long for models tts-1 and tts-1-hd is capped at 4096 characters.
- 44 multilingual voices
- You must have made a payment or make a payment first to be able to enable auto recharge.
- Payment details are stored by our payment provider (Stripe) only, we do not store
  these on our own servers.
- Minimum auto-recharge is $10.
- You will need a prefilled NanoGPT wallet and API key to use this library effectively.
- 'Default retention: 30 days.'
- If both suffix and header are provided, the header value takes precedence for retention.
- If you choose the Chat Completions endpoint in SillyTavern, you will see NanoGPT
  automatically appear as an option.
- Uses Bearer token for authorization
- The Base URL must NOT end with a /.
errors:
- '429: Rate limit exceeded'
- 'Error: {response.status_code}'
- '401 Unauthorized: Invalid API key'
- '401 Unauthorized: If the key is missing or invalid.'
- '400: Bad Request'
- '400: unsupported image'
- '503 after fallbacks: try a different model, verify API key/session'
- '400 unsupported image: ensure the image is a valid PNG/JPEG/WebP, not a tiny 1×1
  pixel, and either HTTPS URL or a base64 data URL.'
- '402: Insufficient balance for transcript fetching.'
- '200: Success'
- '401: Unauthorized'
- '429: Too Many Requests'
- '500: Internal Server Error'
- 400 Bad Request
- 401 Unauthorized
- 429 Too Many Requests
- 500 Internal Server Error
- '400: Bad Request - Check request parameters'
- '401: Unauthorized - Recheck API key'
- '429: Too Many Requests - Rate limit exceeded'
- '500: Internal Server Error - Try again later'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck API key'
- '429 Too Many Requests: Throttle API calls'
- '500 Internal Server Error: Try again later'
- '401: Invalid or missing API key'
- '400: Invalid request parameters'
- '500: Server error'
- '400 Bad Request: Check request parameters and body format'
- '400 Bad Request: Validate input parameters.'
- '401 Unauthorized: Check authentication token.'
- '402: Payment Required'
- '413: Payload Too Large'
- '401 Unauthorized: Check API key'
- '404 Not Found: Verify endpoint'
- '400 Bad Request: Verify request parameters'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry request'
- '400 Bad Request: Please provide an array of YouTube URLs'
- '401 Unauthorized: Invalid session'
- '402 Payment Required: Insufficient balance. Current balance: $0.50, required: $1.00'
- '429 Too Many Requests: Rate limit exceeded. Please wait before sending another
  request.'
- '400: Please provide an array of YouTube URLs'
- '401: Invalid session'
- '402: Insufficient balance. Current balance: $0.50, required: $1.00'
- '429: Rate limit exceeded. Please wait before sending another request.'
- '400 Bad Request: messages must be a non-empty array'
- '402 Payment Required: Insufficient balance'
- '400: Please provide an array of URLs to scrape'
- '402: Insufficient balance'
- '500: An error occurred while processing your request'
- '400 Bad Request: Please provide an array of URLs to scrape'
- '500 Internal Server Error: An error occurred while processing your request'
- 402 Payment Required
- '400 Bad Request: Query parameter is required and must be a string'
- '401 Unauthorized: Check x-api-key'
- '429 Too Many Requests: Rate limit exceeded'
- '501: Not Implemented'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key'
- '400 Bad Request: Invalid input parameters'
- '400: Invalid parameters or missing text'
- '413: Text exceeds model character limit'
- TTS generation failed. Please try again.
- 'CONTENT_POLICY_VIOLATION: Content rejected by provider. Please modify your prompt
  and try again.'
- '400 Bad Request: Check the request body for required parameters'
- '401 Unauthorized: Ensure the API key is valid'
- '200'
- '400'
- '401'
- '202'
- '500'
- '202: Video generation request submitted successfully'
- Video generation failed
- Content flagged as inappropriate. Please modify your prompt and try again.
- 'Content policy violation: Content flagged as inappropriate. Please modify your
  prompt and try again.'
- '400: Bad Request (invalid amount, unsupported ticker)'
- '401: Unauthorized (invalid or missing API key)'
- '429: Rate Limited'
- '500: Server Error (payment provider unavailable)'
- 'Error: 401 Unauthorized'
- 'Error: 400 Bad Request'
- 'Error: 401 Unauthorized - Check API key'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check input format or parameters.'
- '401 Unauthorized: Verify API key or token.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'INVALID_API_KEY: Check your API key for correctness.'
- '401 Unauthorized: Check your API key'
- '400: Bad Request (invalid parameters)'
- '401: Unauthorized (invalid API key)'
- '429: Too Many Requests (rate limit exceeded)'
- '401 Unauthorized: Recheck API key or authentication method'
- 'Rate Limit Exceeded: Throttle API calls or reduce frequency'
- 'Content policy violation: Modify your prompt and try again'
- 'Insufficient balance: 402'
- 'Invalid session: 401'
- 'Rate limit exceeded: 429'
- 'Content policy violation: 400'
- 'Insufficient Balance: Ensure account balance is sufficient for the request'
- 'Invalid Session: Check API key and session validity'
- 'Rate Limit Exceeded: Throttle requests to the API and check rate limits'
- '404 Not Found: Endpoint does not exist'
- '429: Rate limit exceeded. Please wait before generating another video.'
- '400: Your prompt was blocked due to safety concerns. Please modify your prompt.'
- '400: Bad Request: Check file format or parameters'
- '401: Unauthorized: Check your API key'
- '402: Insufficient balance: Top up your account'
- '413: File too large: Use URL upload for files >3MB'
- '400 Bad Request: Check request format and parameters'
- '202 Accepted: Job submitted, check status'
- '400: Bad request'
- '413: Text too long'
- 'Error: 202 - TTS request is pending.'
- 'Error: 400 - Invalid request parameters.'
- 'Error: 401 - Unauthorized access.'
- '400: Bad request: Check your input parameters'
- 'Error: 202 - TTS request pending'
- 'Error: 400 - Invalid request'
- 'Error: 404 - Resource not found'
- '202: Request is pending'
- 'Error: {response.status_code} - {response.text}'
- '400: Bad request: Unknown error'
- 'Parameter error: ValueError'
- 'Network error: RequestException'
- 'Unexpected error: Exception'
- 'Error: 202 - TTS request failed'
- 'Error: polling timeout'
- 'Parameter error: Invalid parameters provided'
- 'Network error: Request failed due to network issues'
- 'Unexpected error: An unexpected error occurred'
- 'Rate limit exceeded: Limit of 25 requests per second.'
- 'Error: Status: 401 Unauthorized'
- 'Error: Message: Invalid API Key'
- 'Error: Status: {error.status}, Message: {error.message}'
auth_info:
  mentioned_objects:
  - x-api-key
client:
  base_url: https://nano-gpt.com/api/v1
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
