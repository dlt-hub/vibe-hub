resources:
- name: masternode
  endpoint:
    path: /api/masternode
    method: GET
    data_selector: data
    params: {}
- name: staking
  endpoint:
    path: /api/staking
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: staking_requirements
  endpoint:
    path: /api/staking/requirements
    method: GET
    data_selector: data
    params: {}
- name: staking_rewards
  endpoint:
    path: /api/staking/rewards
    method: GET
    data_selector: data
    params: {}
- name: staking
  endpoint:
    path: /staking
    method: POST
    data_selector: stakingData
- name: unvoting
  endpoint:
    path: /unvoting
    method: POST
    data_selector: unvotingData
- name: withdraw
  endpoint:
    path: /withdraw
    method: POST
    data_selector: withdrawData
- name: staking
  endpoint:
    path: /staking
    method: GET
- name: block
  endpoint:
    path: /api/v1/block
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: data
    params: {}
- name: staking_info
  endpoint:
    path: /api/v1/staking/info
    method: GET
    data_selector: data
- name: network_stats
  endpoint:
    path: /api/v1/network/stats
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: blocks
  endpoint:
    path: /api/v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: SimpleStorage
  endpoint:
    path: /smart_contract/simple_storage
    method: GET
    data_selector: storage_data
    params: {}
- name: Coin
  endpoint:
    path: /smart_contract/coin
    method: GET
    data_selector: coin_data
    params: {}
- name: simple_storage
  endpoint:
    path: /contracts/simple_storage
    method: POST
    data_selector: data
    params: {}
- name: coin
  endpoint:
    path: /contracts/coin
    method: POST
    data_selector: data
    params: {}
- name: simple_auction
  endpoint:
    path: /viction/simple_auction
    method: POST
    data_selector: auction_data
    params: {}
- name: blind_auction
  endpoint:
    path: /viction/blind_auction
    method: POST
    data_selector: auction_data
    params: {}
- name: purchase
  endpoint:
    path: /viction/purchase
    method: POST
    data_selector: purchase_data
    params: {}
- name: ReceiverPays
  endpoint:
    path: /ReceiverPays
    method: POST
    data_selector: records
    params: {}
- name: SimplePaymentChannel
  endpoint:
    path: /SimplePaymentChannel
    method: POST
    data_selector: records
    params: {}
- name: Balances
  endpoint:
    path: /Balances
    method: GET
    data_selector: records
    params: {}
- name: Token
  endpoint:
    path: /Token
    method: GET
    data_selector: records
    params: {}
- name: simple_auction
  endpoint:
    path: /simple_auction
    method: POST
    data_selector: auctionDetails
- name: blind_auction
  endpoint:
    path: /blind_auction
    method: POST
    data_selector: bids
- name: purchase
  endpoint:
    path: /purchase
    method: POST
    data_selector: purchaseDetails
- name: ReceiverPays
  endpoint:
    path: /ReceiverPays
    method: POST
    data_selector: records
    params: {}
- name: SimplePaymentChannel
  endpoint:
    path: /SimplePaymentChannel
    method: POST
    data_selector: records
    params: {}
- name: VRC25
  endpoint:
    path: /vrc25
    method: GET
- name: VRC725
  endpoint:
    path: /vrc725
    method: GET
- name: VRC25
  endpoint:
    path: /vrc25/specification
    method: GET
    data_selector: specification
    params: {}
- name: VRC25
  endpoint:
    path: /VRC25
    method: GET
    data_selector: records
- name: VRC25Permit
  endpoint:
    path: /VRC25Permit
    method: GET
    data_selector: records
- name: SampleVRC25
  endpoint:
    path: /SampleVRC25
    method: GET
    data_selector: records
- name: IVRC25
  endpoint:
    path: /contracts/interfaces/IVRC25.sol
    method: GET
    data_selector: records
- name: IVRC25Permit
  endpoint:
    path: /contracts/interfaces/IVRC25Permit.sol
    method: GET
    data_selector: records
- name: VRC725
  endpoint:
    path: /vrc725
    method: POST
    data_selector: data
- name: VRC25
  endpoint:
    path: /contracts/VRC25.sol
    method: GET
    data_selector: records
- name: VRC25Permit
  endpoint:
    path: /contracts/VRC25Permit.sol
    method: GET
    data_selector: records
- name: SampleVRC25
  endpoint:
    path: /contracts/tests/SampleVRC25.sol
    method: GET
    data_selector: records
- name: IERC721
  endpoint:
    path: /contracts/interfaces/IERC721.sol
    method: GET
    data_selector: interface
    params: {}
- name: IERC721Metadata
  endpoint:
    path: /contracts/interfaces/IERC721Metadata.sol
    method: GET
    data_selector: interface
    params: {}
- name: IERC4494
  endpoint:
    path: /contracts/interfaces/IERC4494.sol
    method: GET
    data_selector: interface
    params: {}
- name: IVRC725
  endpoint:
    path: /contracts/interfaces/IVRC725.sol
    method: GET
    data_selector: interface
    params: {}
- name: VRC725
  endpoint:
    path: /contracts/VRC725
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: IERC721
  endpoint:
    path: /contracts/interfaces/IERC721.sol
    method: GET
    data_selector: interface
    params: {}
- name: IERC721Metadata
  endpoint:
    path: /contracts/interfaces/IERC721Metadata.sol
    method: GET
    data_selector: interface
    params: {}
- name: IERC4494
  endpoint:
    path: /contracts/interfaces/IERC4494.sol
    method: GET
    data_selector: interface
    params: {}
- name: IVRC725
  endpoint:
    path: /contracts/interfaces/IVRC725.sol
    method: GET
    data_selector: interface
    params: {}
- name: VRC725
  endpoint:
    path: /contracts/VRC725.sol
    method: GET
    data_selector: data
- name: Solidity Contract
  endpoint:
    path: /contracts/solidity
    method: POST
    data_selector: contract
    params: {}
- name: Viction-mainnet
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: permit_digest
  endpoint:
    path: /permit/digest
    method: POST
- name: permit_for_all_digest
  endpoint:
    path: /permit/all/digest
    method: POST
- name: nonces
  endpoint:
    path: /nonces/{tokenId}
    method: GET
- name: nonce_by_address
  endpoint:
    path: /nonce/byAddress/{owner}
    method: GET
- name: accept_ownership
  endpoint:
    path: /acceptOwnership
    method: POST
- name: transfer_ownership
  endpoint:
    path: /transferOwnership
    method: POST
- name: domain_separator
  endpoint:
    path: /domainSeparator
    method: GET
- name: Incrementer
  endpoint:
    path: /Incrementer
    method: GET
    data_selector: number
    params: {}
- name: smart_contracts
  endpoint:
    path: /api/v1/smart_contracts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: account_balance
  endpoint:
    path: /eth_getBalance
    method: POST
    data_selector: result
- name: smart_contract
  endpoint:
    path: /eth/contract
    method: POST
    data_selector: result
    params: {}
- name: transaction
  endpoint:
    path: /eth/transaction
    method: POST
    data_selector: result
    params: {}
- name: Solidity Code Editor
  endpoint:
    path: /solidity/code/editor
    method: GET
    data_selector: editor
- name: Terminal
  endpoint:
    path: /terminal
    method: GET
    data_selector: terminal
- name: Viction-mainnet
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: contract
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params: {}
- name: Incrementer
  endpoint:
    path: /Incrementer.sol
    method: GET
    data_selector: contracts
- name: block
  endpoint:
    path: /eth/block
    method: GET
    data_selector: result
- name: transaction
  endpoint:
    path: /eth/transaction
    method: GET
    data_selector: result
- name: gas_price
  endpoint:
    path: /eth/gasPrice
    method: GET
    data_selector: result
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction_data
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: records
    params: {}
- name: smart_contract
  endpoint:
    path: /api/v1/smart_contracts
    method: GET
    data_selector: data
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
- name: block
  endpoint:
    path: /eth/block
    method: GET
    data_selector: result
- name: gas_price
  endpoint:
    path: /eth/gasPrice
    method: GET
    data_selector: result
- name: transaction
  endpoint:
    path: /eth/getTransactionFromBlock
    method: GET
    data_selector: result
- name: viction_mainnet
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: vicscan
  endpoint:
    path: https://vicscan.xyz/api/
    method: GET
    data_selector: ''
    params: {}
- name: example_resource
  endpoint:
    path: /api/example_endpoint
    method: GET
    data_selector: data
    params: {}
- name: MyToken
  endpoint:
    path: /contracts/MyToken
    method: POST
    data_selector: contract
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: MyToken
  endpoint:
    path: /api/contract/foundry/verify
    method: POST
    data_selector: contract
    params: {}
- name: block
  endpoint:
    path: /api/v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: wallet
  endpoint:
    path: /api/v1/wallet
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: data
    params: {}
- name: VRC25
  endpoint:
    path: /IVRC25
    method: GET
    data_selector: records
- name: wallet
  endpoint:
    path: /api/v1/wallets
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: withdrawals
  endpoint:
    path: /api/v1/withdrawals
    method: GET
    data_selector: data
- name: candidates
  endpoint:
    path: /api/v1/candidates
    method: GET
    data_selector: data
- name: withdrawals
  endpoint:
    path: /getWithdrawBlockNumbers
    method: POST
    data_selector: result
- name: candidates
  endpoint:
    path: /eth_getCandidates
    method: POST
    data_selector: result
- name: wallet
  endpoint:
    path: /api/v1/wallet
    method: GET
    data_selector: data
    params: {}
- name: exchange
  endpoint:
    path: /api/v1/exchange
    method: GET
    data_selector: data
    params: {}
- name: VRC25 Contract
  endpoint:
    path: /IVRC25
    method: GET
    data_selector: result
    params: {}
- name: VRC25Issuer
  endpoint:
    path: /address/0x8c0faeb5c6bed2129b8674f262fd45c4e9468bee
    method: GET
- name: VICIssuer_testnet
  endpoint:
    path: /address/0x8c0faeb5c6bed2129b8674f262fd45c4e9468bee
    method: GET
- name: withdrawals
  endpoint:
    path: /withdrawals
    method: GET
- name: candidates
  endpoint:
    path: /candidates
    method: GET
- name: random
  endpoint:
    path: /v1/random
    method: POST
    data_selector: result
- name: getCandidates
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      method: eth_getCandidates
      params:
      - latest
      id: 1
- name: getWithdrawBlockNumbers
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      method: getWithdrawBlockNumbers
      params: []
      id: 1
- name: trades
  endpoint:
    path: /subgraphs/id/HdVdERFUe8h61vm2fDyycHgxjsde5PbB832NHgJfZNqK
    method: POST
    data_selector: data.trades
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VRC25Issuer
  endpoint:
    path: /address/0x8c0faeb5c6bed2129b8674f262fd45c4e9468bee
    method: GET
    data_selector: transaction details
    params: {}
- name: random
  endpoint:
    path: /random
    method: POST
    data_selector: result
    params:
      salt: bytes32
- name: blockchain_data
  endpoint:
    path: /services/data/vXX.X/sobjects/BlockchainData
    method: GET
    data_selector: records
- name: trades
  endpoint:
    path: /subgraphs/id/HdVdERFUe8h61vm2fDyycHgxjsde5PbB832NHgJfZNqK
    method: POST
    data_selector: data.trades
- name: Masternode Requirements
  endpoint:
    path: /masternode/requirements
    method: GET
- name: Run a Full Node
  endpoint:
    path: /masternode/run-a-full-node
    method: GET
- name: Apply Your Node
  endpoint:
    path: /masternode/apply-your-node
    method: GET
- name: Viction Slashing Mechanism
  endpoint:
    path: /masternode/viction-slashing-mechanism
    method: GET
- name: Chain Data Snapshots
  endpoint:
    path: /masternode/chain-data-snapshots
    method: GET
- name: some_resource
  endpoint:
    path: /services/data/v1.0/some_endpoint
    method: GET
    data_selector: data
    params: {}
- name: block_data
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: transaction_data
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: VIC Wallet
  endpoint:
    path: /
    method: GET
    data_selector: wallet
    params: {}
- name: tmn
  endpoint:
    path: /masternode/run-a-full-node
    method: GET
    data_selector: node_info
- name: Token
  endpoint:
    path: /contracts/Token
    method: POST
    data_selector: contract
    params: {}
- name: masternode
  endpoint:
    path: /masternode
    method: GET
- name: full_node
  endpoint:
    path: /masternode/run-a-full-node
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: masternode_requirements
  endpoint:
    path: /masternode/requirements
    method: GET
    data_selector: requirements
    params: {}
- name: apply_masternode
  endpoint:
    path: /masternode/apply-your-node
    method: GET
    data_selector: apply_info
    params: {}
- name: masternode
  endpoint:
    path: /api/v1/masternode
    method: GET
    data_selector: data
    params: {}
- name: masternode
  endpoint:
    path: /masternode/run-a-full-node
    method: GET
- name: masternode
  endpoint:
    path: /api/masternode
    method: GET
    data_selector: data
    params: {}
- name: masternode
  endpoint:
    path: /v1/masternode
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /api/v1/block
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: data
    params: {}
- name: masternode
  endpoint:
    path: /masternode
    method: GET
    data_selector: data
    params: {}
- name: masternode_application
  endpoint:
    path: /masternode/apply-your-node
    method: GET
- name: masternode_resignation
  endpoint:
    path: /masternode/resign
    method: POST
- name: add_custom_token
  endpoint:
    path: /viction-wallet/user-guide/add-custom-token
    method: GET
    data_selector: token_info
    params: {}
- name: send_nft
  endpoint:
    path: /viction-wallet/user-guide/send-nft
    method: POST
    data_selector: transaction_details
- name: block
  endpoint:
    path: /api/v1/blocks
    method: GET
    data_selector: data
    params:
      incremental: timestamp
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: token_conversion
  endpoint:
    path: /victionbridge/spacegate
    method: GET
    data_selector: token_conversion
    params: {}
- name: token_send
  endpoint:
    path: /api/sendToken
    method: POST
    data_selector: data
    params: {}
- name: token_receive
  endpoint:
    path: /api/receiveToken
    method: POST
    data_selector: data
    params: {}
- name: Hyperlane Nexus
  endpoint:
    path: /victionbridge/hyperlane
    method: GET
- name: Add Custom Token
  endpoint:
    path: /viction-wallet/user-guide/add-custom-token
    method: GET
- name: commit_data
  endpoint:
    path: /commit
    method: POST
    data_selector: result
    params: {}
- name: get_blob
  endpoint:
    path: /get
    method: GET
    data_selector: result
    params: {}
- name: get_proof
  endpoint:
    path: /get_proofs
    method: GET
    data_selector: result
    params: {}
- name: submit_data
  endpoint:
    path: /submit
    method: POST
    data_selector: result
    params: {}
- name: validate
  endpoint:
    path: /validate
    method: POST
    data_selector: result
    params: {}
- name: submit
  endpoint:
    path: /submit
    method: POST
    data_selector: result
    params: {}
- name: block
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: Light Client
  endpoint:
    path: /light-client
    method: POST
    data_selector: transactionBatchData
- name: Batcher
  endpoint:
    path: /batcher
    method: POST
    data_selector: batchTransactions
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /api/v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: wallet_creation
  endpoint:
    path: /how-to/create-wallet
    method: POST
    data_selector: result
    params: {}
- name: wallet_restore
  endpoint:
    path: /how-to/restore-wallet
    method: POST
    data_selector: result
    params: {}
- name: wallet_import
  endpoint:
    path: /wallet/import
    method: POST
    data_selector: result
- name: custom_network
  endpoint:
    path: /network/custom
    method: POST
    data_selector: result
- name: send_token
  endpoint:
    path: /token/send
    method: POST
    data_selector: result
- name: receive_token
  endpoint:
    path: /token/receive
    method: GET
    data_selector: result
- name: token_conversion
  endpoint:
    path: /victionbridge/spacegate
    method: GET
    data_selector: conversion_routes
    params: {}
- name: Mainnet
  endpoint:
    path: /
    method: GET
- name: Testnet
  endpoint:
    path: /
    method: GET
- name: bridge_transaction
  endpoint:
    path: /bridge/transaction
    method: POST
    data_selector: transaction
    params: {}
- name: commit_data
  endpoint:
    path: /commit
    method: POST
- name: get_blob
  endpoint:
    path: /get
    method: GET
- name: get_proof
  endpoint:
    path: /get_proofs
    method: GET
- name: submit_data
  endpoint:
    path: /submit
    method: POST
- name: validate
  endpoint:
    path: /validate
    method: POST
    data_selector: result
    params: {}
- name: submit
  endpoint:
    path: /submit
    method: POST
    data_selector: result
    params: {}
- name: token_issue
  endpoint:
    path: /issue
    method: POST
    data_selector: result
    params: {}
- name: verify_contract
  endpoint:
    path: /verify
    method: POST
    data_selector: result
- name: contract_deployment
  endpoint:
    path: /deploy/vrc725
    method: POST
    data_selector: transaction
    params:
      gas_limit: 5000000
      issuer: '0x4bCfFA4D24f774486399230924b2545ee7134bFe'
- name: light_client
  endpoint:
    path: /light_client
    method: POST
- name: VRC725_contract
  endpoint:
    path: /how-to/how-to-apply-zerogas-for-vrc725-contract
    method: GET
- name: contract_verification
  endpoint:
    path: /how-to/verify-contract
    method: GET
    data_selector: verification_steps
    params: {}
- name: confirm_project
  endpoint:
    path: /confirm_project
    method: POST
    data_selector: confirmation_status
    params: {}
- name: Token Verification
  endpoint:
    path: /viction/verify-gas-sponsored-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: Mainnet
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: Testnet
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: VicMaster
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: telegram_mini_app
  endpoint:
    path: /v1/telegram/mini_app
    method: POST
    data_selector: data
    params: {}
- name: token
  endpoint:
    path: /issue-token
    method: POST
    data_selector: data
    params: {}
- name: sendInvoice
  endpoint:
    path: /bots/api#sendinvoice
    method: POST
    data_selector: invoice
    params:
      currency: XTR
- name: answerPreCheckoutQuery
  endpoint:
    path: /bots/api#answerprecheckoutquery
    method: POST
    data_selector: pre_checkout_query
- name: successful_payment
  endpoint:
    path: /bots/api#message
    method: POST
    data_selector: successful_payment
- name: contract_verification
  endpoint:
    path: /verify
    method: POST
    data_selector: result
- name: VRC25Issuer Contract
  endpoint:
    path: /address/0x8c0faeb5C6bEd2129b8674F262Fd45c4e9468bee
    method: GET
- name: VRC725 contract
  endpoint:
    path: /address/0x4d76D1eBe3E95Ad0b8B4Ce59ABedE9cF1A7Bc593
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      limit: 100
- name: blocks
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: sponsor_list
    params: {}
- name: getTokenCapacity
  endpoint:
    path: /getTokenCapacity
    method: GET
    data_selector: capacity_response
    params: {}
- name: VRC25
  endpoint:
    path: /vrc25
    method: GET
    data_selector: transactions
    params: {}
- name: VIC
  endpoint:
    path: /viction
    method: GET
    data_selector: data
- name: sendInvoice
  endpoint:
    path: /bots/api#sendinvoice
    method: POST
    data_selector: invoice
    params:
      currency: XTR
- name: answerPreCheckoutQuery
  endpoint:
    path: /bots/api#answerprecheckoutquery
    method: POST
    data_selector: pre_checkout_query
    params: {}
- name: successful_payment
  endpoint:
    path: /bots/api#successfulpayment
    method: GET
    data_selector: successful_payment
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: masternode_candidate
  endpoint:
    path: /masternode/candidate
    method: GET
    data_selector: masternode_candidates
- name: masternode
  endpoint:
    path: /masternode
    method: GET
    data_selector: masternodes
- name: masternodes
  endpoint:
    path: /api/masternodes
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: data
    params: {}
- name: masternode_candidate
  endpoint:
    path: /masternode/candidate
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: blocks
  endpoint:
    path: /api/v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: voting_info
  endpoint:
    path: /v1/voting/info
    method: GET
    data_selector: data
    params: {}
- name: voting
  endpoint:
    path: /voting
    method: GET
    data_selector: data
    params:
      minimum_stake: 100 VIC
- name: vic
  endpoint:
    path: /viction/vic
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /txs
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: masternodes
  endpoint:
    path: /masternodes
    method: GET
- name: verified_contracts
  endpoint:
    path: /contracts
    method: GET
- name: tokens
  endpoint:
    path: /tokens
    method: GET
- name: blocks
  endpoint:
    path: /blocks
    method: GET
- name: epochs
  endpoint:
    path: /epochs
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Masternodes
  endpoint:
    path: /api/masternodes
    method: GET
- name: Performance Metrics
  endpoint:
    path: /api/performance
    method: GET
- name: TPS Metrics
  endpoint:
    path: /api/tps
    method: GET
- name: Block Time
  endpoint:
    path: /api/blocktime
    method: GET
- name: Confirmation Time
  endpoint:
    path: /api/confirmation-time
    method: GET
- name: Finality Metrics
  endpoint:
    path: /api/finality
    method: GET
- name: token_issuance
  endpoint:
    path: /issuer/viction/token
    method: POST
    data_selector: token_details
- name: donate_vic
  endpoint:
    path: /donate_vic
    method: POST
- name: apply_zero_gas_protocol
  endpoint:
    path: /apply_zero_gas_protocol
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: masternodes
  endpoint:
    path: /masternodes
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: blockchain_data
  endpoint:
    path: /api/v1/blockchain/data
    method: GET
    data_selector: data
    params: {}
- name: masternode_candidate
  endpoint:
    path: /masternode/candidate
    method: POST
    data_selector: candidate
    params: {}
- name: masternode
  endpoint:
    path: /masternode
    method: GET
    data_selector: masternodes
    params: {}
- name: Masternode Rewards
  endpoint:
    path: /masternode/rewards
    method: GET
    data_selector: rewards
- name: Masternode Candidates
  endpoint:
    path: /masternode/candidates
    method: GET
    data_selector: candidates
- name: Technical Whitepaper
  endpoint:
    path: /technical-whitepaper-2.0
    method: GET
    data_selector: files
    params: {}
- name: Economics Paper
  endpoint:
    path: /VICTION-Economics-Paper-2.0
    method: GET
    data_selector: files
    params: {}
- name: voter
  endpoint:
    path: /api/voter
    method: GET
    data_selector: data
    params: {}
- name: blockchain_data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: data
    params: {}
- name: masternode_candidates
  endpoint:
    path: /masternode_candidates
    method: GET
    data_selector: candidates
- name: transactions
  endpoint:
    path: /txs
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: masternodes
  endpoint:
    path: /masternodes
    method: GET
- name: verified_contracts
  endpoint:
    path: /contracts
    method: GET
- name: tokens
  endpoint:
    path: /tokens
    method: GET
- name: blocks
  endpoint:
    path: /blocks
    method: GET
- name: epochs
  endpoint:
    path: /epochs
    method: GET
- name: Mainnet Metrics
  endpoint:
    path: /mainnet/metrics
    method: GET
    data_selector: metrics
- name: token_issuance
  endpoint:
    path: /issuer/v1/tokens
    method: POST
    data_selector: token
    params: {}
- name: gradient_token
  endpoint:
    path: /api/v1/gradient_token
    method: POST
    data_selector: token
    params:
      name: Gradient Token
      symbol: GRAD
- name: wallet
  endpoint:
    path: /viction-wallet
    method: GET
    data_selector: walletData
- name: Technical Whitepaper
  endpoint:
    path: /technical-whitepaper-2.0
    method: GET
- name: Economics Paper
  endpoint:
    path: /VICTION-Economics-Paper-2.0
    method: GET
- name: Technical Whitepaper
  endpoint:
    path: /technical-whitepaper-1.0
    method: GET
- name: Economics paper
  endpoint:
    path: /VICTION-Economics-Paper-1.0
    method: GET
- name: block
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: proposal_guidelines
  endpoint:
    path: /archive/tomomasterdao/proposal-guidelines
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /api/campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/contact
    method: GET
    data_selector: records
- name: blockchain_data
  endpoint:
    path: /api/v1/blockchain_data
    method: GET
    data_selector: data
    params: {}
- name: transaction_history
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: transactions
    params:
      incremental: updated_at
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: ico_contract
  endpoint:
    path: /ico/contract
    method: POST
    data_selector: data
    params: {}
- name: GradientToken
  endpoint:
    path: /contracts/GradientToken
    method: POST
    data_selector: transaction
    params: {}
- name: block
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: masternode
  endpoint:
    path: /masternode
    method: GET
- name: genesis
  endpoint:
    path: /genesis
    method: POST
- name: grant_application
  endpoint:
    path: /api/grants
    method: POST
    data_selector: application
    params:
      funding_requested: amount
- name: chain_info
  endpoint:
    path: /chain_info
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: token
  endpoint:
    path: /api/v1/tokens
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: balance
  endpoint:
    path: /api/v1/balance
    method: GET
    data_selector: data
    params: {}
- name: block
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
notes:
- This document explains how to use Viction APIs
- API calls may be limited based on user tier.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Viction uses an innovative consensus method called Proof-of-Stake Voting which provides
  an incentive to all VIC holders to play an active part in staking across a network
  of 150 Masternodes.
- Double validation provides a trustworthy validation layer for security enhancement.
- Viction aims to be a public EVM-compatible blockchain with low transaction fees
  and fast confirmation time.
- Requires valid OAuth2 credentials for access.
- Ensure to handle token expiration and refresh accordingly.
- At least 100 VIC is required per vote.
- After unvoting, VIC is still locked in the smart contract for ~48 hours (96 epochs)
  before it is able to be withdrawn.
- Every epoch (~30 minutes), Voters and Masternodes automatically receive rewards.
- Ensure you have sufficient funds in your staking wallet for voting or unvoting.
- Transactions may take some time to process.
- Double-check all details before confirming any transaction to avoid errors.
- Requires authentication to access API endpoints.
- 'Chain ID: 88 or 0x58'
- 'Websocket endpoint: wss://ws.viction.xyz'
- 'Consensus: POSV'
- 'Block finality: >75%'
- 'Transaction fee: gas price 0.25 Gwei'
- Uses OAuth2 with refresh token — requires setup of connected app in Viction
- Some fields may return nulls under certain conditions
- Requires API key for access.
- Rate limits may apply.
- Testnet is the best way to test smart contracts. Configure the deployment tool (truffle
  for example) to connect to the testnet and deploy new code without having to worry
  about fees.
- Viction support Solidity compiler version <=0.8.17, which targets London hardfork
  in Ethereum.
- For Solidity compiler version >=0.8.18, you may still compile and deploy to Viction.
  However, use it at your own risk.
- Viction support Solidity compiler version <=0.8.17
- BASEFEE opcode is unused and not supported by the runtime
- Uses Solidity version 0.8.17
- Some functions may require specific permissions based on the user's role
- Only steps 1 and 3 require Viction transactions, step 2 means that the sender transmits
  a cryptographically signed message to the recipient via off chain methods.
- Uses cryptographic signatures for secure transactions.
- Messages are signed off-chain and transmitted to recipients.
- Standard API for tokens within smart contracts
- Simplifies token usage by eliminating the need for gas
- The order of _balances, _minFee, _issuer must not be changed to pass validation
  of gas sponsor application.
- Must register for VIC ZeroGas to enable gas-less transaction for your contract.
- VRC25 is the standard for fungible tokens in Viction ecosystem.
- The fee for the network can be paid by the token itself.
- Enable zero-gas transaction for VRC725 contract
- Requires setup of connected app in API
- Must register for VIC ZeroGas to enable gas-less transactions
- The order of _balances, _minFee, _issuer must not be changed to pass validation
  of gas sponsor application
- minFee must always be 0 to ensure that VictionZ will work properly in the case you
  apply for it
- VRC725 is not required to apply for VictionZ. Zero-gas operation will be applied
  through TransferHelper.
- Remix is a Solidity IDE that’s used to write, compile and debug Solidity code.
- Smart contracts can be created using the Solidity language on the Ethereum blockchain.
- Provides a JavaScript VM to emulate a real blockchain.
- Allows deployment on various environments like Injected Web3 and Web3 Provider.
- VRC725 is not required to apply for VictionZ.
- Zero-gas operation will be applied through TransferHelper which is integrated VRC25.
- VRC725 is still compatible with VictionZ.
- Never store your private keys in a JavaScript file
- Some responses may vary based on network conditions
- Infura provides a remote Ethereum node for free.
- The file explorer uses the browser’s local storage by default.
- Remix supports developers by using ChatGPT.
- Use this txHash to find the contract on Etherscan!
- Uses Infura API for connecting to Ethereum blockchain
- Connect to the Ethereum main net using Infura API key.
- Requires OAuth2 token setup for API access
- Make sure that you replace YOUR_INFURA_API_KEY with your actual Infura API key that
  you obtained earlier.
- Use fake Ether on the Ropsten test net without worrying about spending any money.
- It is bad practice to expose private keys.
- Ethereum smart contracts have the ability to emit events that indicate that something
  happened within the smart contract code execution.
- Ensure to have valid OAuth credentials for authentication.
- API rate limits may apply.
- Gas limit is required when deploying a smart contract using Hardhat in Viction
- Ensure proper authentication setup before accessing endpoints.
- Some responses may have rate limits.
- API requires OAuth2 authentication with a refresh token.
- Ensure valid OAuth scopes are set up for access.
- Some API responses may vary depending on the endpoint
- Requires OAuth2 authentication.
- Ensure connected app is configured for OAuth2.
- Check for API rate limits.
- Ensure to handle rate limits as specified in the documentation
- Requires setup of connected app in Viction
- Protocols who make use of VRRF must wait for a short period of time (say 8-10 seconds)
  before displaying random result to end-users to avoid issues related to block re-org.
- All developers receive 100,000 free queries per month on the decentralized network.
- After these free queries, you only pay based on usage at $2 for every 100,000 queries.
- The Graph's smart contracts are all on Arbitrum One, even though your subgraph is
  indexing data from Ethereum, BSC or any other supported chain.
- Ramper SDK provides non-custodial MPC wallet features.
- Viction Mainnet can process 2,000 TPS, which is 100x faster than the Ethereum blockchain,
  and for a fraction of the cost.
- VIC ZeroGas enables gas-less transaction for VRC25 by requiring the owner to deposit
  VIC to VRC25Issuer contract.
- The owner of VRC25 token must call `apply` function of `VRC25Issuer` contract after
  deployment in order to register for VIC ZeroGas.
- Protocols using VRRF must wait for a short period of time (say 8-10 seconds) before
  displaying random result to end-users to avoid issues related to block re-org.
- Always keep your private key and recovery phrase secret!
- Embedded wallets are indispensable tooling for developers to go to market faster
  and onboard all online users to onchain.
- Ramper enables intuitive and stay-in-app user experience, eliminating current complex
  Web3 onboarding that causes churn, especially for Web2 users.
- Uses OAuth2 with refresh token — requires setup of connected app in viction
- Some objects may return nulls in deeply nested fields
- Ensure that the base URL is correctly configured for your environment.
- 'Minimum requirements: CPU: 2 cores, RAM: 8 GB, SSD: 1 TB, Network: 10 Mb/s'
- 'Full node requirements: CPU: 4 cores, RAM: 16 GB, SSD: 1 TB, Network: 25 Mb/s'
- 'Masternode requirements: CPU: 8 cores, RAM: 16 GB, SSD: 1 TB, Network: 25 Mb/s'
- 'Archive node requirements: CPU: 16-64 cores, RAM: 32 GB, SSD: 4 TB, Network: 25
  Mb/s'
- Keep your private key and recovery phrase secret!
- The full node will serve on port 30303 udp and tcp for p2p communication.
- It may take up to one hour or more to properly sync the entire blockchain.
- Viction is EVM-compatible, which means that every contract written in Ethereum can
  be seamlessly ported to Viction without effort.
- Run a Viction Masternode in testnet and mainnet without the need of using Docker
  and tmn.
- 'Some explanations on the flags: --verbosity: log level from 1 to 5. Here we''re
  using 4 for debug messages.'
- Use a fresh new account for your Masternode for security measures.
- The Masternode owner is responsible for proxing and securing the RPC api as it should
  not be directly exposed to the internet.
- The Masternode owner is responsible for proxing and securing the WebSocket api as
  it should not be directly exposed to the internet.
- The name of your masternode
- Random password used by the client to locally encrypt its account
- A Masternode has a certain number of tasks to process (validations, block creations,
  etc.) over time.
- Your Masternode should be able to process all the tasks that are designated to it,
  or the rewards will be negatively impacted.
- Masternodes require a minimum deposit of 50,000 VIC.
- Ensure to follow the setup guide for creating a Viction Masternode.
- A slashed Masternode can still sign transactions if he’s online but receive no rewards
  for doing so.
- Some reasons for being Slashed might be that the Masternode does not have the correct
  Viction software, lack of memory or Masternode crashes due to the lack of e-maintenance
  and operation by the Masternode owner.
- Snapshots for mainnet are available for both full node and archive node
- The snapshot is compressed using zstandard for balancing between speed and compression
- To download and extract the file in background, in Linux host can use `nohup` for
  this purpose.
- Supports Go 1.19+
- If your node seems run smooth with no error logs but still get slash frequently.
  You need to check system time on your node, your system time have to be synced from
  NTP server
- Some API responses may be affected by network latency
- Working 'out of the box' docker-compose configuration
- Auto-restarting your node on failure
- Flexible configuration (storage, logging, ports)
- P2P port is not opened
- NAT param is not provided
- P2P port running on Docker is different from 30303
- Run your Masternode on Ubuntu 18.04 LTS for best compatibility.
- To ensure the security and privacy of your account, when installing the Viction
  Wallet and launching it for the first time, you need to set up a password.
- Users must backup their passphrase to avoid losing access to funds.
- 'Using Passphrase: You will need to choose the derivation standard. If your wallet
  uses an old derivation standard, select Old Standard. Otherwise, choose New Standard'
- 'Using Private key: Viction Wallet will automatically correct the derivation standard
  based on the private key you provided.'
- Passphrase and Private Key must be saved in a safe place when users create wallets
  on Viction Wallet.
- Some responses may include rate limiting information
- Enable reporting transactions via RPC/WS
- If your account balance is insufficient or your address is incorrect, you will get
  an error message
- You can custom gas fee
- Masternode Candidates need to invest in Viction by depositing at least 50,000 VIC.
- A Candidate becomes a Masternode when it belongs to top 150 most voted Candidates
  in each epoch.
- Masternodes will sign a maximum of 60 blocks per epoch.
- Some objects may return incomplete data
- The node must be running while checking for open port.
- Official Viction Docker image prior to v2.4.5 doesn't support custom P2P port out
  of the box.
- Viction Testnet is under development and not available now
- Currently we only support some action event from wallet extension
- The App is developed and provided on an 'AS-IS' and 'AS AVAILABLE' basis.
- You must either import or create a Wallet in order to use Viction Wallet.
- We do not monitor the NFTs and NFT Content stored on your Wallet for any infringement
  of a third party’s intellectual property rights.
- You acknowledge and agree that we have no control over, and no duty to take any
  action regarding fails, disruptions, errors, or delays in the processing of Digital
  Assets.
- Users need to pay protocol fees, bridging fees, and network fees for token conversions.
- Minimum and maximum limits apply per transaction for each asset.
- Ensure the token is valid before sending or receiving.
- Rate limits may apply depending on the endpoint usage.
- 'Network Fees: You''ll encounter gas fees on the originating network (e.g., BSC)
  for initiating the bridge transaction.'
- 'Supported Tokens: Arken Bridge supports a wide range of tokens.'
- 'Network Fees: You''ll incur gas fees on the Ethereum network for initiating the
  bridge transaction.'
- 'Bridge Fees: The bridge fee (charged by Hyperlane) could be significant.'
- 'Supported Tokens: Currently, Hyperlane Nexus on Viction supports ETH, USDC, and
  USDT.'
- The current version of the Light Client is undergoing active testing and will be
  updated soon with new improvements.
- Some responses may include null values for optional fields
- Wallet Settings feature allows users to change themes, passwords, and networks.
- 'Chain ID: 42444'
- Ensure to handle token expiration properly when using refresh tokens.
- 'Coin98 supports generating 2 types of Seed Phrases: 12 words and 24 words.'
- Once your wallet has been successfully created, a pop-up will appear prompting you
  to back up its seed phrase via Cloud.
- Coin98 supports 2 import options (New Standard or Old Standard) for each wallet
  on some blockchains.
- Supports converting token assets across blockchains, especially from TOMOE (Ethereum)
  to VIC (Viction).
- Mainnet RPC URL is https://rpc.viction.xyz
- Testnet RPC URL is https://rpc-testnet.viction.xyz
- You'll encounter gas fees on the originating network for initiating the bridge transaction.
- There might also be minimal fees on the Viction network upon receiving the tokens.
- You'll incur gas fees on the Ethereum network for initiating the bridge transaction.
- There might be minimal fees on the Viction network upon receiving the tokens.
- The bridge fee (charged by Hyperlane) could be significant.
- Currently, Hyperlane Nexus on Viction supports ETH, USDC, and USDT.
- Select VIC (viction.xyz) the crypto asset network in the top-right corner.
- Choose the m/44'/60'/0'/0 path if the Ledger Nano S has the latest firmware. Otherwise,
  use m/44'/889'/0'/0 path.
- Node is Up but unable to sync new blocks
- Port 30303 is required to be opened
- The user is required to declare the Token Name, Symbol & Total Supply in order to
  issue the new token.
- Contract verification requires the contract address and other details to be filled.
- Uses Injected Provider - Coin98 Wallet for deployment
- Recommended Gas Limit for Metamask is 5000000
- Change the Network Chain ID to Viction testnet
- Modify the Batcher’s Destination Viction Address
- Verifying a smart contract on Viction is a crucial process that ensures transparency
  and builds trust in blockchain applications.
- 'Coin98 supports generating 2 types of Seed Phrases: 12 words and 24 words. The
  12-word seed phrase is set as default.'
- Please pay attention to every word and make sure you back up the Seed Phrase correctly
  and in a safe place.
- Send a confirmation email to support@viction.xyz using your official organization
  email domain.
- Verify if the token is eligible for gas sponsorship using the tokens function from
  the Issuer Contract.
- Determine if the token has remaining gas sponsorship capacity using the getTokenCapacity
  function.
- Assumed that the Token had been applied successfully.
- Choose the m/44’/60’/0’/0 path if the Ledger Nano S has the latest firmware.
- Mini apps opened from a direct link have limited capabilities.
- If the firewall had been opened for the port. Then please try to run the node with
  the add-on command `--nat extip:111.111.111.111` with `111.111.111.111` is the IP
  address to connect with internet (external network) of that node.
- When running the node via Docker, open the port **30303** to internet for **TCP/UDP**
  and use the network mode `host` instead of `bridge`.
- You may find that some API methods for Payments request a provider_token. This parameter
  is only needed for sales of physical goods and services – for digital ones, you
  can leave it empty.
- It is critical to make sure your bot only accepts multiple payments when the order
  can be processed correctly.
- Viction Safe (Multisig) is a secure and user-friendly wallet designed to safeguard
  digital assets through multi-signature functionality.
- Contract Address is fetched automatically.
- Compiler version must be v0.7.6 for contract verification.
- Gas Limit recommended to be set to 5000000
- Ensure that the address to call apply function must be current owner of your token.
- Guide to register Token or NFT logo on Vicscan
- Rate limits apply for API calls.
- Ensure correct token scopes are set for accessing resources.
- VIC is the native cryptocurrency of Viction and will be the reserve cryptocurrency
  for all third-party apps running on Viction.
- Mini apps opened from a direct link have limited capabilities
- Digital goods and services are exclusively in Telegram Stars.
- Ensure to reply to pre_checkout_query within 10 seconds to avoid cancellation.
- All the code regarding Viction is free to access on our GitHub.
- 'If you need support, please contact us on one of these platforms: Bugs or technical
  contributions: GitHub, General discussion regarding our blockchain: Discord.'
- Viction has a maximum of 150 Masternodes with Proof of Stake Voting (POSV) consensus.
- Masternodes started signing blocks and receiving block rewards when the Mainnet
  released in December 14th, 2018.
- Viction supports zero-gas transactions.
- Ensure proper authentication setup to access the API.
- Masternodes receive rewards every epoch of 900 blocks.
- The rewards for every Masternode will be dynamic and depend on multiple factors.
- Requires OAuth2 authentication for access to the API.
- Check response limits on specific endpoints.
- Ensure to handle OAuth scopes carefully during authentication.
- Minimum amount to stake is 100 VIC.
- You can stake on multiple Masternodes via Ledger.
- VIC is not mineable but mintable by Masternodes.
- The total supply is fixed at 100 million VIC in the first 8 years (non-inflationary).
- Voters can use the candidate list to help choose which Masternode candidate(s) they
  would like to stake their tokens to.
- After unvoting, your VIC will be locked in the smart contract for 48 hours before
  you are able to withdraw.
- All the code regarding Viction is free to access on GitHub.
- The token issuance fee could vary depending on how much it costs to deploy the smart
  contract.
- Any developer with some experience developing and deploying smart contracts can
  refer to the reference implementation of the Standards & Specification to make customizations
  to the deployed token contract.
- Data Availability Sampling (DAS) allows light nodes to verify data availability
  without downloading entire blocks.
- Namespaced Merkle Trees (NMTs) help optimize bandwidth usage by organizing data
  into namespaces.
- Some endpoints may have rate limits
- Some endpoints may have rate limits.
- Masternodes require a deposit of 50,000 VIC to become a candidate.
- Masternodes need to be among the top 150 voted candidates to receive rewards.
- Each epoch consists of 900 blocks, which will reward a total of 250 VIC in the first
  two years.
- 'The rewards achieved by each Masternode will be divided into three portions: Infrastructure
  Reward, Staking Reward, and Foundation Reward.'
- Requires OAuth2 setup with a connected app.
- Some API responses may vary based on the endpoint
- The minimum amount to stake is 100 VIC.
- You can unvote from that Masternode and take your tokens back after 96 epochs (approx.
  48 hours) which is the lock-up period.
- Voting for the top voted masternode candidate could lower your rewards as the rewards
  that go to voters per token is inversely proportional to the number of tokens staked
  for a specific masternode.
- VicStats shows various metrics regarding the current Mainnet including the current
  number of Masternodes, Masternode performance, current TPS, block-time, confirmation
  time, finality, and other useful metrics.
- Viction requires min 10 VIC to deploy, to fight spamming attacks
- Don’t forget to regularly check the balance of the VRC25 deposit because transactions
  will not be processed if the remaining deposit is not enough to pay the transaction
  fees.
- 'Viction’s smart contract creation fee: gas price 10000 Gwei, gas limit >= 1000000'
- Viction Wallet allows users to vote for Masternodes and track rewards.
- The Viction Data Availability Network is designed to ensure that data is securely
  stored and remains retrievable and verifiably available across decentralized platforms.
- Ensure compliance with local laws when accessing the Service.
- This Privacy Policy describes how Tomo Foundation collects, uses, processes, discloses,
  shares, transfers, and protects your personal information.
- DAO's offer a high level of transparency and power to the user, but this does not
  come without tradeoffs.
- tDAO is tradable on LuaSwap, Viction's main DEX.
- tDAO is only available on the Viction network.
- Requires API key for authentication
- Rate limits apply
- Funding rounds are conducted every three months with ~50,000 VIC of funding allocated
  for each round.
- Proposals will be rejected if the required criteria are not submitted.
- OAuth2 authentication is required.
- Rate limits apply to API calls.
- The Testnet network is meant to be a public demo of products and a way for to test
  new features.
- Uses OAuth2 — requires setup of connected app in Viction
- Rate limits apply to all endpoints.
- Check that you have enough VIC tokens in your wallet!! I recommend at least 60 VIC
  to deploy this smart contract
- Uses OAuth2 with refresh token.
- Wait about 30 minutes to see if your chain passes the first checkpoint
- Funding rounds are conducted every three months with ~50,000 VIC allocated for each
  round.
- Proposals < $1000 USD equivalent can be allocated directly in full after Board review.
- Requires OAuth2 authentication setup
- Check API rate limits to avoid throttling
- Requires setup of OAuth2 credentials in the Viction dashboard
errors:
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your API credentials.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'TOKEN_EXPIRED: Refresh your access token.'
- 'RATE_LIMIT_EXCEEDED: Slow down your requests.'
- '401 Unauthorized: Check your API key and permissions.'
- '404 Not Found: The requested resource does not exist.'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 'Invalid opcode: BASEFEE'
- 'Invalid opcode: TLOAD'
- 'Invalid opcode: TSTORE'
- 'Invalid opcode: PUSH0'
- 'Invalid opcode: INVALID'
- 'Invalid opcode: BLOBHASH'
- '400 Bad Request: Check request parameters'
- '500 Internal Server Error: Retry the request'
- 'Invalid API Key: Recheck your Infura API key.'
- 'Connection Error: Ensure your internet connection is stable.'
- 'INVALID_API_KEY: Check if the API key is valid.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests.'
- '401 Unauthorized: Check your token and permissions'
- 'INVALID_PARAMETER: Check API request parameters.'
- 'UNAUTHORIZED: Ensure correct OAuth token and permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Verify OAuth token.'
- '401 Unauthorized: Check your token or client credentials.'
- 'INVALID_TOKEN: Check if the token is expired or invalid.'
- 'NOT_FOUND: Ensure the resource exists.'
- 'UNAUTHORIZED: Verify client credentials.'
- '401 Unauthorized: Check your credentials and token expiration'
- '429 Too Many Requests: Throttle your API calls'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Check token validity.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Endpoint may not exist'
- 'INVALID_REQUEST: Check the request parameters and their values.'
- 'UNAUTHORIZED: Verify the access token.'
- 'Insufficient funds: Ensure you have enough VIC tokens for transactions'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your authentication details'
- '500 Internal Server Error: Try again later'
- 'INVALID_REQUEST: Ensure parameters are correct'
- 'UNAUTHORIZED: Check your access token'
- 'NOT_FOUND: The requested resource does not exist'
- 'Insufficient balance: Check your account balance'
- 'Invalid address: Ensure the recipient address is correct'
- 'INVALID_TOKEN: Check if the token is correctly formatted.'
- 'INSUFFICIENT_FUNDS: Ensure sufficient balance before sending tokens.'
- 'RATE_LIMIT_EXCEEDED: Reduce the request frequency.'
- '400: Invalid request'
- 'Invalid params: invalid type: integer `22`, expected byte array'
- Invalid request
- '403 Forbidden: Check API key and permissions'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Retry after a moment'
- 'INVALID_REQUEST: Check your request parameters'
- 'UNAUTHORIZED: Ensure your OAuth credentials are correct'
- Firewall may block port 30303
- Docker needs to use network mode host instead of bridge
- Invalid params
- 'INVALID_BOT_TOKEN: Ensure you are using the correct Telegram bot token.'
- 'GAME_NOT_REGISTERED: Register the game with @BotFather before proceeding.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Token may be expired or invalid.'
- '401 Unauthorized: Check API key and permissions.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Ensure valid authentication credentials.'
- 'NOT_FOUND: Verify the endpoint and resource.'
- '403 Forbidden: Check your permissions and OAuth token validity.'
- '404 Not Found: Verify the endpoint path and parameters.'
- 'Invalid RPC endpoint: Check the URL.'
- 'Unauthorized access: Check your permissions.'
- 'Unauthorized: Recheck authentication credentials'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- '401 Unauthorized: Check OAuth token validity'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your authentication token.'
- '403 Forbidden: Ensure the token has the required permissions.'
- '401 Unauthorized: Verify your OAuth token'
- '404 Not Found: Ensure the endpoint exists'
- Incompatible Ledger firmware version may prevent functionality.
- If your candidate gets in the 151th voted position, it will not be promoted to Masternode
  status and you will earn zero rewards.
- 'NETWORK_ERROR: Check your internet connection'
- 'INSUFFICIENT_FUNDS: Ensure you have enough VIC in your wallet'
- 'smart contract creation cost is under allowance: Increasing transaction fees for
  smart contract creation is one of the ways Viction offers to defend against spamming
  attacks.'
- 'insufficient funds for gas * price + value: You don’t have enough tokens in your
  wallet for gas fees.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'INVALID_REQUEST: Check the request format'
- 'UNAUTHORIZED: API key is missing or invalid'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '403 Forbidden: Check permissions for the requested resource.'
- 'Insufficient funds: Ensure you have at least 10 VIC to deploy'
- 'smart contract creation cost is under allowance: Increasing transaction fees for
  smart contract creation is one of the ways Viction offers to defend against spamming
  attacks. Solution: edit truffle.js and add more gas/gasPrice to deploy.'
- 'insufficient funds for gas * price + value: You don’t have enough tokens in your
  wallet for gas fees. Solution: you need more funds in your wallet to deploy, go
  to faucet and get more tokens.'
- 'INVALID_CREDENTIALS: Verify client ID and secret'
- '403 Forbidden: Check permissions for the requested resource'
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Ensure valid OAuth token'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - VictionAuth
  - Token
  - Credential
  - Provider
  - OAuth2
  - AccessToken
  - ClientCredential
client:
  base_url: https://api.viction.xyz
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.viction.xyz/oauth/token
    client_id: '{{ dlt.secrets[''viction_client_id''] }}'
    client_secret: '{{ dlt.secrets[''viction_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''viction_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
