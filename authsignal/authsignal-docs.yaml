resources:
- name: Generate Passkey Registration Options
  endpoint:
    path: /v1/client/user-authenticators/passkey/registration-options
    method: POST
- name: Verify Passkey Registration
  endpoint:
    path: /v1/client/user-authenticators/passkey/verify-registration
    method: POST
- name: Generate Passkey Authentication Options
  endpoint:
    path: /v1/client/user-authenticators/passkey/authentication-options
    method: POST
- name: Verify Passkey Authentication
  endpoint:
    path: /v1/client/user-authenticators/passkey/verify-authentication
    method: POST
- name: Initiate Challenge
  endpoint:
    path: /v1/client/user-authenticators/passkey/initiate-challenge
    method: POST
- name: tenant
  endpoint:
    path: /organisations/tenants
    method: GET
- name: passkey_enrollment
  endpoint:
    path: /api/auth/enroll-passkey
    method: POST
    data_selector: token
- name: passkey_validation
  endpoint:
    path: /api/auth/callback
    method: GET
    data_selector: data
- name: withdrawal
  endpoint:
    path: /track
    method: POST
    data_selector: result
    params:
      action: withdrawal
- name: signIn
  endpoint:
    path: /validate_challenge
    method: POST
    data_selector: result
    params:
      action: signIn
- name: withdrawal
  endpoint:
    path: /withdrawal
    method: POST
    data_selector: result
    params: {}
- name: complete_withdrawal
  endpoint:
    path: /withdrawal/complete
    method: POST
    data_selector: result
    params: {}
- name: track_action
  endpoint:
    path: /api/reference/server-api/track-action
    method: POST
    data_selector: data
- name: push_challenge
  endpoint:
    path: /api/reference/client-api/start-push-challenge
    method: POST
    data_selector: data
- name: verify_challenge
  endpoint:
    path: /api/reference/client-api/verify-push-challenge
    method: GET
    data_selector: data
- name: email_otp
  endpoint:
    path: /api/v1/email_otp
    method: POST
    data_selector: data
- name: track_action
  endpoint:
    path: /api-reference/server-api/track-action
    method: POST
    data_selector: action
    params: {}
- name: validate_challenge
  endpoint:
    path: /api-reference/client-api/start-email-magic-link-challenge
    method: POST
    data_selector: verification
    params: {}
- name: sms_otp
  endpoint:
    path: /authentication-methods/sms-otp
    method: POST
    data_selector: response
- name: track_action
  endpoint:
    path: /api-reference/server-api/track-action
    method: POST
- name: whatsapp_challenge
  endpoint:
    path: /api-reference/client-api/start-whatsapp-challenge
    method: POST
- name: validate_challenge
  endpoint:
    path: /api-reference/server-api/validate-challenge
    method: POST
- name: track_action
  endpoint:
    path: /track-action
    method: POST
    data_selector: data
- name: validate_challenge
  endpoint:
    path: /validate-challenge
    method: POST
    data_selector: data
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: track_action
  endpoint:
    path: /track
    method: POST
    data_selector: result
- name: get_action
  endpoint:
    path: /getAction
    method: POST
    data_selector: response
- name: query_actions
  endpoint:
    path: /queryActions
    method: POST
    data_selector: actions
- name: update_action
  endpoint:
    path: /updateAction
    method: POST
    data_selector: updatedAttributes
- name: Track Action
  endpoint:
    path: /api-reference/server-api/track-action
    method: POST
- name: Get Action
  endpoint:
    path: /api-reference/server-api/get-action
    method: GET
- name: Query Actions
  endpoint:
    path: /api-reference/server-api/query-actions
    method: GET
- name: Update Action
  endpoint:
    path: /api-reference/server-api/update-action
    method: PATCH
- name: Get User
  endpoint:
    path: /api-reference/server-api/get-user
    method: GET
- name: Update User
  endpoint:
    path: /api-reference/server-api/update-user
    method: PATCH
- name: Delete User
  endpoint:
    path: /api-reference/server-api/delete-user
    method: DEL
- name: Enroll Verified Authenticator
  endpoint:
    path: /api-reference/server-api/enroll-verified-authenticator
    method: POST
- name: Get Authenticators
  endpoint:
    path: /api-reference/server-api/get-authenticators
    method: GET
- name: Delete Authenticator
  endpoint:
    path: /api-reference/server-api/delete-authenticator
    method: DEL
- name: Initiate Challenge
  endpoint:
    path: /api-reference/server-api/initiate-challenge
    method: POST
- name: Verify Challenge
  endpoint:
    path: /api-reference/server-api/verify-challenge
    method: POST
- name: Claim Challenge
  endpoint:
    path: /api-reference/server-api/claim-challenge
    method: POST
- name: Validate Challenge
  endpoint:
    path: /api-reference/server-api/validate-challenge
    method: POST
- name: Get Challenge
  endpoint:
    path: /api-reference/server-api/get-challenge
    method: GET
- name: Get Authenticator Configurations
  endpoint:
    path: /api-reference/server-api/get-authenticator-configurations
    method: GET
- name: Create Session
  endpoint:
    path: /api-reference/server-api/create-session
    method: POST
- name: Validate Session
  endpoint:
    path: /api-reference/server-api/validate-session
    method: POST
- name: Refresh Session
  endpoint:
    path: /api-reference/server-api/refresh-session
    method: POST
- name: Revoke Session
  endpoint:
    path: /api-reference/server-api/revoke-session
    method: POST
- name: Revoke User Sessions
  endpoint:
    path: /api-reference/server-api/revoke-user-sessions
    method: POST
- name: mfa_on_login
  endpoint:
    path: /actions/rules/actions/implementing-mfa
    method: POST
    data_selector: response
    params: {}
- name: step_up_authentication
  endpoint:
    path: /actions/rules/actions/step-up-authentication
    method: POST
    data_selector: response
    params: {}
- name: enroll_authenticator
  endpoint:
    path: /users/authenticator-management/enrolling-authenticators
    method: POST
    data_selector: url
- name: passwordless_login
  endpoint:
    path: /actions/passwordless-login
    method: POST
    data_selector: response
    params: {}
- name: actions
  endpoint:
    path: /actions
    method: POST
- name: track_action
  endpoint:
    path: /track
    method: POST
    data_selector: result
    params: {}
- name: init_auth
  endpoint:
    path: /init-auth
    method: POST
- name: oidc_auth
  endpoint:
    path: /oidc/auth
    method: GET
- name: oidc_token
  endpoint:
    path: /oidc/token
    method: POST
- name: passkey
  endpoint:
    path: /authentication-methods/passkey
    method: GET
    data_selector: passkeys
- name: track_action
  endpoint:
    path: /users/{userId}/actions/{action}
    method: POST
    data_selector: state
    params: {}
- name: get_action
  endpoint:
    path: /users/{userId}/actions/{action}/{idempotencyKey}
    method: GET
    data_selector: output
    params: {}
- name: query_actions
  endpoint:
    path: /users/{userId}/actions
    method: GET
    data_selector: object[]
- name: update_action
  endpoint:
    path: /users/{userId}/actions/{action}/{idempotencyKey}
    method: PATCH
- name: user
  endpoint:
    path: /users/{userId}
    method: GET
    data_selector: object
    params: {}
- name: update_user
  endpoint:
    path: /users/{userId}
    method: PATCH
    data_selector: object
- name: delete_user
  endpoint:
    path: /users/{userId}
    method: DELETE
    data_selector: response
    params: {}
- name: enroll_verified_authenticator
  endpoint:
    path: /users/{userId}/authenticators
    method: POST
    data_selector: authenticator
- name: get_authenticators
  endpoint:
    path: /users/{userId}/authenticators
    method: GET
    data_selector: records
- name: delete_authenticator
  endpoint:
    path: /users/{userId}/authenticators/{userAuthenticatorId}
    method: DELETE
- name: challenge
  endpoint:
    path: /challenge
    method: POST
    data_selector: object
    params: {}
- name: verify_challenge
  endpoint:
    path: /verify
    method: POST
- name: claim_challenge
  endpoint:
    path: /claim
    method: POST
- name: validate_challenge
  endpoint:
    path: /validate
    method: POST
    data_selector: object
- name: challenges
  endpoint:
    path: /challenges
    method: GET
    data_selector: object
    params: {}
- name: authenticators
  endpoint:
    path: /authenticators
    method: GET
- name: sessions
  endpoint:
    path: /sessions
    method: POST
- name: validate_session
  endpoint:
    path: /sessions/validate
    method: POST
    data_selector: user
- name: refresh_session
  endpoint:
    path: /sessions/refresh
    method: POST
- name: revoke_session
  endpoint:
    path: /sessions/revoke
    method: POST
- name: revoke_user_sessions
  endpoint:
    path: /sessions/user/revoke
    method: POST
    data_selector: ''
    params: {}
- name: user_authenticators
  endpoint:
    path: /client/user-authenticators
    method: GET
    data_selector: records
- name: user_authenticators
  endpoint:
    path: /user-authenticators
    method: GET
    data_selector: records
- name: authenticators
  endpoint:
    path: /authenticators
    method: GET
    data_selector: object[]
- name: tenant
  endpoint:
    path: /tenant
    method: GET
    data_selector: records
- name: tenant
  endpoint:
    path: /tenant
    method: GET
    data_selector: tenantId
    params: {}
- name: generate_passkey_registration_options
  endpoint:
    path: /user-authenticators/passkey/registration-options
    method: POST
    data_selector: challengeId
- name: verify_passkey_registration
  endpoint:
    path: /user-authenticators/passkey
    method: POST
    data_selector: isVerified
- name: passkey_authentication_options
  endpoint:
    path: /v1/client/user-authenticators/passkey/authentication-options
    method: POST
    data_selector: options
- name: verify_passkey
  endpoint:
    path: /verify/passkey
    method: POST
    data_selector: object
- name: initiate_challenge
  endpoint:
    path: /challenge
    method: POST
    data_selector: challengeId
- name: enroll_email
  endpoint:
    path: /email/enroll
    method: POST
    data_selector: response.data
    params:
      email: jane@authsignal.com
- name: email_otp_challenge
  endpoint:
    path: /email/challenge
    method: POST
    data_selector: data
- name: email_otp_verify
  endpoint:
    path: /email/verify
    method: POST
    data_selector: data
- name: sms_enroll
  endpoint:
    path: /sms/enroll
    method: POST
    data_selector: data
- name: sms_challenge
  endpoint:
    path: /sms/challenge
    method: POST
    data_selector: data
- name: verify_sms
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: data
    params:
      code: string
- name: challenge_whatsapp
  endpoint:
    path: /whatsapp/challenge
    method: POST
    data_selector: data
- name: verify_whatsapp
  endpoint:
    path: /whatsapp/verify
    method: POST
    data_selector: data
    params:
      code: string
- name: enroll_totp
  endpoint:
    path: /totp/enroll
    method: POST
    data_selector: data
- name: verify_totp
  endpoint:
    path: /totp/verify
    method: POST
    data_selector: data
    params:
      code: string
- name: push_challenge
  endpoint:
    path: /push/challenge
    method: POST
    data_selector: data
- name: push_verification_status
  endpoint:
    path: /push/verify
    method: POST
    data_selector: data
- name: qr_code_challenge
  endpoint:
    path: /qrCode/challenge
    method: POST
    data_selector: data
- name: qr_code_refresh
  endpoint:
    path: /qrCode/refresh
    method: POST
    data_selector: data
- name: set_token
  endpoint:
    path: /set/token
    method: POST
    data_selector: data
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: authenticator
  endpoint:
    path: /api/v1/authenticators
    method: GET
    data_selector: data
    params: {}
- name: action
  endpoint:
    path: /api/v1/actions
    method: GET
    data_selector: data
    params: {}
- name: AuthsignalProvider
  endpoint:
    path: /api/payment
    method: POST
    data_selector: token
- name: claimChallenge
  endpoint:
    path: /device/claimChallenge
    method: POST
    data_selector: response
    params:
      challengeId: challengeId
- name: updateChallenge
  endpoint:
    path: /device/updateChallenge
    method: POST
    data_selector: response
    params:
      challengeId: challengeId
      approved: 'true'
- name: verifyDevice
  endpoint:
    path: /device/verify
    method: POST
    data_selector: response
    params: {}
- name: enrollEmail
  endpoint:
    path: /email/enroll
    method: POST
    data_selector: response
    params:
      email: jane@authsignal.com
- name: challengeEmail
  endpoint:
    path: /email/challenge
    method: POST
    data_selector: response
    params: {}
- name: verifyEmail
  endpoint:
    path: /email/verify
    method: POST
    data_selector: response
    params:
      code: '123456'
- name: enrollSMS
  endpoint:
    path: /sms/enroll
    method: POST
    data_selector: response
    params:
      phoneNumber: '+64271234567'
- name: challengeSMS
  endpoint:
    path: /sms/challenge
    method: POST
    data_selector: response
    params: {}
- name: verifySMS
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: response
    params:
      code: '123456'
- name: challengeWhatsApp
  endpoint:
    path: /whatsapp/challenge
    method: POST
    data_selector: response
    params: {}
- name: verifyWhatsApp
  endpoint:
    path: /whatsapp/verify
    method: POST
    data_selector: response
    params:
      code: '123456'
- name: enrollTOTP
  endpoint:
    path: /totp/enroll
    method: POST
    data_selector: response
    params: {}
- name: verifyTOTP
  endpoint:
    path: /totp/verify
    method: POST
    data_selector: response
    params:
      code: '123456'
- name: passkey_sign_in
  endpoint:
    path: /authentication-methods/passkey/sign-in
    method: POST
    data_selector: passkey_sign_in_data
- name: passkey_creation
  endpoint:
    path: /authentication-methods/passkey/create
    method: POST
    data_selector: passkey_creation_data
- name: passkeys
  endpoint:
    path: /authentication-methods/passkey
    method: POST
    data_selector: response.data
- name: verify_authenticator_app_challenge
  endpoint:
    path: /verify/totp
    method: POST
    data_selector: isVerified
    params: {}
- name: user_authenticators
  endpoint:
    path: /user-authenticators/totp
    method: POST
    data_selector: object
- name: finalize_email_magic_link_challenge
  endpoint:
    path: /v1/client/verify/email-magic-link/finalize
    method: POST
    data_selector: object
notes:
- Users must create an account and sign in before creating a passkey.
- Ensure the input field has the value `username webauthn` in the autocomplete attribute
  for passkey autofill.
- Uses OAuth2 for authentication
- Requires setup of Authsignal SDK in the application
- This step brings up the challenge pop up when the challenge flow completes.
- Uses email magic link for passwordless login
- Requires setup of email provider in the Authsignal Portal
- Uses API Key for authentication
- WhatsApp can be used as a fallback for SMS delivery
- You must first enable a JWKS URL in the Authsignal Portal under Settings -> API
  keys.
- Actions represent security-relevant events in your application.
- Every action has an associated state that determines how your application should
  respond.
- Uses Client SDKs to implement authentication flows with custom or native UI.
- The API key is different from the key used for the Server API.
- New features include WhatsApp OTP authentication, device credential methods, session
  management, and passkey registration hints.
- If users already have enrolled authenticators, enrolling additional methods requires
  strong authenticator binding to prevent MFA bypass attacks.
- Passwordless authentication eliminates password-related security risks.
- Authsignal actions enable risk-based authentication.
- Uses risk-based authentication
- Ensure to validate user actions before applying rules
- Uses Custom authentication challenge Lambda triggers with Amazon Cognito
- You must register an authentication method to continue.
- Authentication challenge failed. Please try again.
- Uses Authsignal’s pre-built UI for MFA implementation
- You must set up a custom domain for passkeys.
- Expected origins need to be configured in the Authsignal Portal.
- Your secret key should never be exposed to any public client.
- The authentication model is designed so you can call the Authsignal Client API directly
  from your web browser or mobile app.
- The secret key for authentication is different from the one used for the Server
  API.
- Ensure to set a token before using email OTP SDK methods.
- All SMS OTP SDK methods require you to set a token first.
- All email magic link SDK methods require you to set a token first.
- Uses OAuth2 with refresh token — requires setup of connected app in authsignal
- Requires setup of connected app in Authsignal
- Some objects may return nulls in deeply nested fields
- The SDK requires the raw body of the request to verify the signature.
- To prevent against replay attacks, the SDK will error if more than 5 minutes has
  elapsed since the time that the event was sent.
- Passkeys are supported only on iOS 15 and above.
- Passkey autofill requires iOS 16 and above.
- Mobile SDK methods can return unstructured error descriptions when encountering
  an error.
- Both redirect mode and popup mode can be customized with your branding using our
  UI customization tool.
- The `authsignal-head` and `authsignal-widget` tags are required for the pre-built
  UI to function correctly.
- Ensure you have updated your user profile with these custom data points before referencing
  them.
- Passkey registration in cross-origin iframes is not yet supported in Safari.
- Passkeys represent a new paradigm of device-initiated authentication.
- Passkeys require integration from your backend server and your web frontend.
- Passkeys are supported on iOS devices running iOS 15 or higher and on Android devices
  running Android 9 (API level 28) or higher.
- Ensure a backup option exists when passkeys are unavailable
- Optimize sign-in UX with passkeys and fallback options
errors:
- 'BLOCK: Action is blocked for security reasons.'
- 'REVIEW: Action requires manual review.'
- '401 Unauthorized: Recheck API secret key and API URL are correct'
- 'AUTHENTICATOR_NOT_FOUND: No authenticators have been configured for your tenant'
- 'invalid_configuration: Your tenant configuration is invalid. Check that authenticators
  are properly configured in the Authsignal Portal.'
- 'invalid_credential: The credential (e.g., passkey) is invalid for the user. This
  may happen if the credential was deleted or is being used on the wrong device.'
- 'invalid_request: Request failed due to invalid parameters. Check your request payload
  and ensure all required fields are provided.'
- 'too_many_requests: Rate limit exceeded. Implement back-off and retry logic.'
- 'unauthorized: Invalid tenant credentials or wrong region. Verify your API secret
  key and API URL match your tenant’s region.'
- 401 Unauthorized
- 404 Not Found
- '401'
- '404'
- '400'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 400 Bad Request
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED: The user already has a passkey registered
  for this authenticator.'
- 'CODE_INVALID_OR_EXPIRED: The OTP code provided is invalid or has expired.'
- 'MAX_ATTEMPTS_EXCEEDED: The maximum number of attempts to verify the code has been
  exceeded.'
- 'CODE_INVALID_OR_EXPIRED: Check the code provided'
- 'MAX_ATTEMPTS_EXCEEDED: Too many failed attempts, try again later'
- 'invalid_configuration: Indicates that the request cannot be handled because the
  tenant is in an invalid configuration.'
- 'invalid_credential: Indicates that the credential (e.g. passkey) referenced by
  the request is invalid for the given user and cannot be authenticated.'
- 'invalid_request: Indicates that the request failed due to an invalid parameter
  or input.'
- 'too_many_requests: Indicates that the server cannot respond as requests have been
  rate-limited due to exceeding a threshold.'
- 'unauthorized: Indicates that the request is unauthorized due to invalid tenant
  credentials - for example if the API secret key is invalid or if the region doesn’t
  match.'
- token_not_set
- expired_token
- network_error
- invalid_credential
- 'CODE_INVALID_OR_EXPIRED: The submitted code is either invalid or expired.'
- 'MAX_ATTEMPTS_EXCEEDED: The maximum number of attempts to verify the code has been
  reached.'
- user_canceled
- no_credential
- matched_excluded_credential
auth_info:
  mentioned_objects:
  - Tenant ID
  - API URL
  - API secret key
  - B2C_1A_AuthsignalSecret
client:
  base_url: https://api.authsignal.com/v1/management
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
