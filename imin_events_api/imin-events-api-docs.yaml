resources:
- name: dummy_data
  endpoint:
    path: /dummy/data
    method: GET
    data_selector: records
- name: facility_uses
  endpoint:
    path: /facility-uses
    method: GET
    data_selector: records
    params:
      mode: discovery-geo
- name: facility_uses
  endpoint:
    path: /facility-uses
    method: GET
    data_selector: records
    params:
      mode: discovery-geo
- name: session_series
  endpoint:
    path: /firehose/standard/v2/session-series
    method: GET
- name: scheduled_sessions
  endpoint:
    path: /firehose/standard/v2/scheduled-sessions
    method: GET
- name: facility_uses
  endpoint:
    path: /firehose/standard/v2/facility-uses
    method: GET
- name: slots
  endpoint:
    path: /firehose/standard/v2/slots
    method: GET
- name: session_series
  endpoint:
    path: /firehose/standard/v2/session-series
    method: GET
- name: scheduled_sessions
  endpoint:
    path: /firehose/standard/v2/scheduled-sessions
    method: GET
- name: facility_uses
  endpoint:
    path: /firehose/standard/v2/facility-uses
    method: GET
- name: slots
  endpoint:
    path: /firehose/standard/v2/slots
    method: GET
- name: session_series
  endpoint:
    path: /firehose/bookable/v2/session-series
    method: GET
- name: scheduled_sessions
  endpoint:
    path: /firehose/bookable/v2/scheduled-sessions
    method: GET
- name: facility_uses
  endpoint:
    path: /firehose/bookable/v2/facility-uses
    method: GET
- name: slots
  endpoint:
    path: /firehose/bookable/v2/slots
    method: GET
- name: session_series
  endpoint:
    path: /firehose/bookable/v2/session-series
    method: GET
- name: scheduled_sessions
  endpoint:
    path: /firehose/bookable/v2/scheduled-sessions
    method: GET
- name: facility_uses
  endpoint:
    path: /firehose/bookable/v2/facility-uses
    method: GET
- name: slots
  endpoint:
    path: /firehose/bookable/v2/slots
    method: GET
- name: bookable_sellers
  endpoint:
    path: /:broker
    method: GET
    data_selector: data
- name: bookable_sellers
  endpoint:
    path: /firehose/bookable-sellers/:broker
    method: GET
    data_selector: data
- name: test_bookable_sellers
  endpoint:
    path: /firehose/bookable-sellers/:broker-test
    method: GET
    data_selector: data
- name: datasets
  endpoint:
    path: /firehose/datasets
    method: GET
    data_selector: data
    params: {}
- name: checkout_sessions
  endpoint:
    path: /api/checkout-sessions
    method: POST
    data_selector: null
    params: {}
- name: checkout_session
  endpoint:
    path: /api/checkout-sessions
    method: POST
    data_selector: id
    params: {}
- name: booking_success_webhook
  endpoint:
    path: /webhooks/on-success
    method: POST
    data_selector: id
    params: {}
- name: imin Branded Checkout
  endpoint:
    path: /imin-branded-checkout
    method: GET
- name: Guest Checkout
  endpoint:
    path: /guest-checkout
    method: GET
- name: Authenticated Checkout
  endpoint:
    path: /authenticated-checkout
    method: GET
- name: Standalone Checkout
  endpoint:
    path: /standalone-checkout
    method: GET
- name: checkout_sessions
  endpoint:
    path: /checkout-sessions
    method: POST
    data_selector: ''
- name: checkout_session
  endpoint:
    path: /api/checkout-sessions
    method: POST
    data_selector: ''
    params: {}
- name: booking_success_webhook
  endpoint:
    path: /webhooks/on-success
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_sessions
  endpoint:
    path: /v1/scheduled-sessions/{scheduled-session-identifier}
    method: GET
    data_selector: records
- name: slots
  endpoint:
    path: /v1/slots/{slot-identifier}
    method: GET
    data_selector: records
- name: checkout_sessions
  endpoint:
    path: /checkout-sessions
    method: POST
    data_selector: potentialAction
    params: {}
- name: Order History
  endpoint:
    path: /incorporating-book-and-pay/imin-booking-platform/orders/order-history
    method: GET
- name: Cancellations & Refunds
  endpoint:
    path: /incorporating-book-and-pay/imin-booking-platform/orders/cancellations-and-refunds
    method: GET
- name: Upcoming OrderItems
  endpoint:
    path: /incorporating-book-and-pay/imin-booking-platform/upcoming-orderitems
    method: GET
- name: Receipt (by ID)
  endpoint:
    path: /incorporating-book-and-pay/imin-booking-platform/receipt-by-id
    method: GET
- name: ScheduledSessions
  endpoint:
    path: /v1/scheduled-sessions
    method: GET
- name: Slots
  endpoint:
    path: /v1/slots
    method: GET
- name: order-items
  endpoint:
    path: /order-items
    method: GET
    data_selector: imin:item
    params:
      customerIdentifier: '{iminCustomerIdentifer}'
      page: '{page}'
- name: Order History
  endpoint:
    path: /incorporating-book-and-pay/imin-booking-platform/orders/order-history
    method: GET
- name: Cancellations & Refunds
  endpoint:
    path: /incorporating-book-and-pay/imin-booking-platform/orders/cancellations-and-refunds
    method: GET
- name: receipt
  endpoint:
    path: /receipts/:receiptIdentifier
    method: GET
- name: order_items
  endpoint:
    path: /order-items
    method: GET
    data_selector: imin:item
    params:
      customerIdentifier: '{iminCustomerIdentifer}'
      page: '{page}'
- name: seller_status
  endpoint:
    path: /bs/:iminBookingSystemIdentifier
    method: GET
    data_selector: ''
    params:
      sellerId: ''
- name: receipt
  endpoint:
    path: /receipts/:receiptIdentifier
    method: GET
    data_selector: ''
    params: {}
- name: event_series
  endpoint:
    path: /v2/event-series
    method: GET
    data_selector: results
    params:
      mode: upcoming-sessions
      limit: 50
- name: seller_status
  endpoint:
    path: /bs/:iminBookingSystemIdentifier
    method: GET
- name: Schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
- name: PartialSchedules
  endpoint:
    path: /partial-schedules
    method: GET
    data_selector: partialSchedules
- name: event_series
  endpoint:
    path: /events-api/v2/event-series
    method: GET
    data_selector: items
    params:
      mode: upcoming-sessions
      limit: 50
notes:
- You must not use the API to collect more information than necessary to respond to
  an end user query, or store or scrape data other than as expressly permitted by
  us.
- The maximum number of items that can be returned per page of results is 50.
- All requests must be made server-side.
- The API will only return information about events that are due to take place within
  the next 14 days.
- Each API call should be limited to a maximum of 2,048 characters.
- Properties defined outside of the OpenActive Modelling Specification and imin namespaces
  are not subject to the imin deprecation policy and are subject to change at any
  time.
- Data consumers should not assume that properties in the OpenActive Beta namespace
  will either be added to the core specification or be included in the namespace over
  the long term.
- OpenActive Beta namespace properties are not subject to the imin deprecation policy
  and are subject to change at any time.
- imin data sometimes contains additional namespaces, known as extensions.
- Extension properties are not subject to the imin deprecation policy and are subject
  to change at any time.
- Data is subject to change at any time.
- Ensure that missing or unexpected data is factored in for calculations.
- The API will only return information about facilities that are due to take place
  within the next 14 days.
- Items are not more than 24 hours out-of-date
- Items marked as 'updated' must completely replace previous data
- Items marked as 'deleted' must be hard-deleted within 24 hours of the 'modified'
  timestamp
- The Firehose must be continuously polled and should not be resynced from the beginning
  except for test purposes
- Items are not more than 24 hours out-of-date.
- Items marked as 'updated' must completely replace previous data.
- Items marked as 'deleted' must be hard-deleted within 24 hours of the 'modified'
  timestamp.
- The Firehose must be continuously polled and not resynced from the beginning except
  for test purposes.
- Any frontend that displays open data from the imin Platform must include the relevant
  open data attribution.
- It is a licensing requirement that any frontend that displays open data from the
  imin Platform must include the relevant open data attribution alongside it.
- In order to use the Live Timetables, you will need to have activated an OpenActive-compliant
  open data feed from your booking system or LMS.
- The OpenActive open data feed is near real-time feed, so when the information is
  updated within your booking system it will automatically reflect in the data feed
  and therefore the Live Timetable.
- The Live Timetables offer a variety of advanced features that may require additional
  configuration and support for implementation.
- The OpenActive open data feed is near real-time feed
- These feeds can take several weeks to be turned on
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Our timetable is compatible with screen readers such as the Apple iPhone screen
  reader.
- Your open data feed is published using a creative commons CCby4 licence.
- The imin Branded Checkout is a partially-customisable whitelabel product that gives
  the user a seamless booking experience.
- If you receive a CORS policy error, verify that your API key is correctly included.
- To enable authenticated Checkout, you must register your webhook with imin.
- Ensure all URLs included in the Webhook Request include https:// or http://.
- Must use OpenID Connect for your Customer auth.
- Not all ScheduledSessions and Slots are bookable.
- This request must be made Server-side.
- imin will not yet make bookings until the Seller has agreed to terms.
- Once terms have been agreed, the Seller's data will be bookable.
- This request must be made Server-side. Otherwise, it would be possible to view the
  secret API key with a browser.
- Providing a call to action for your users means you offer them an immediate action
  when they have found something they want to do.
- Authorization Code Flow requires setup of OpenID Provider
- Seller can revoke auth tokens anytime
- The default behaviour of the Events API is to include iminTag[not]=HighFrequencySession
  in every call.
- location.identifier needs to be present for data validation
- If your data does not include this field, your data will not appear in our Places
  API
- The platform only supports repeatFrequency with daily, weekly, and monthly.
- Default behaviour of the Events API is to include iminTag[not]=HighFrequencySession
  in every call.
errors:
- 'Rate limits apply: poll a maximum of once every 8 seconds for zero-item pages'
- Fair-use limit of 1 resync per week
- 'Rate limits apply for zero-item pages: poll a maximum of once every 8 seconds.'
- You must purge all content retrieved from Firehose within 24 hours if you cease
  to be an imin customer.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key'
- 'CORS policy error: Verify that your API key is correctly included and properly
  used in the API call.'
- 'CORS policy error: Verify that your API key is correctly included.'
- '400 Bad Request: This opportunity is not available to book.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://book.imin.co/api/v2/
source_metadata: null
