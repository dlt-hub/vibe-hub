resources:
- name: user_page_analytics
  endpoint:
    path: /plugins/accounts/api-reference/user-page-analytics
    method: POST
    data_selector: data
    params:
      service_key: your_service_key_here
- name: cascade_analytics
  endpoint:
    path: /plugins/accounts/api-reference/cascade-analytics
    method: POST
    data_selector: data
    params:
      service_key: your_service_key_here
- name: custom_analytics
  endpoint:
    path: /plugins/accounts/api-reference/custom-analytics
    method: POST
    data_selector: data
    params:
      service_key: your_service_key_here
- name: user_page_analytics
  endpoint:
    path: /plugins/accounts/api-reference/user-page-analytics
    method: POST
    data_selector: data
    params:
      service_key: your_service_key_here
- name: cascade_analytics
  endpoint:
    path: /plugins/accounts/api-reference/cascade-analytics
    method: POST
    data_selector: data
    params:
      service_key: your_service_key_here
- name: custom_analytics
  endpoint:
    path: /plugins/accounts/api-reference/custom-analytics
    method: POST
    data_selector: data
    params:
      service_key: your_service_key_here
- name: memories
  endpoint:
    path: /memories
    method: GET
    data_selector: memories
    params: {}
- name: rules
  endpoint:
    path: /rules
    method: GET
    data_selector: rules
    params: {}
- name: github
  endpoint:
    path: /mcp
    method: POST
- name: figma
  endpoint:
    path: /mcp
    method: POST
- name: memories
  endpoint:
    path: /memories
    method: GET
- name: rules
  endpoint:
    path: /rules
    method: GET
- name: address_pr_comments
  endpoint:
    path: /address-pr-comments
    method: POST
- name: git_workflows
  endpoint:
    path: /git-workflows
    method: POST
- name: dependency_management
  endpoint:
    path: /dependency-management
    method: POST
- name: code_formatting
  endpoint:
    path: /code-formatting
    method: POST
- name: run_tests_and_fix
  endpoint:
    path: /run-tests-and-fix
    method: POST
- name: deployment
  endpoint:
    path: /deployment
    method: POST
- name: security_scan
  endpoint:
    path: /security-scan
    method: POST
- name: github
  endpoint:
    path: /mcp
    method: GET
- name: figma
  endpoint:
    path: /mcp
    method: GET
- name: plans
  endpoint:
    path: /windsurf/plans
    method: GET
    data_selector: plans
    params: {}
- name: errors
  endpoint:
    path: /windsurf/errors
    method: GET
    data_selector: errors
    params: {}
- name: usage
  endpoint:
    path: /windsurf/usage
    method: GET
    data_selector: usage
    params: {}
- name: address_pr_comments
  endpoint:
    path: /address-pr-comments
    method: GET
    data_selector: workflow
    params: {}
- name: git_workflows
  endpoint:
    path: /git-workflows
    method: GET
    data_selector: workflow
    params: {}
- name: dependency_management
  endpoint:
    path: /dependency-management
    method: GET
    data_selector: workflow
    params: {}
- name: code_formatting
  endpoint:
    path: /code-formatting
    method: GET
    data_selector: workflow
    params: {}
- name: run_tests_and_fix
  endpoint:
    path: /run-tests-and-fix
    method: GET
    data_selector: workflow
    params: {}
- name: deployment
  endpoint:
    path: /deployment
    method: GET
    data_selector: workflow
    params: {}
- name: security_scan
  endpoint:
    path: /security-scan
    method: GET
    data_selector: workflow
    params: {}
- name: JetBrains_IDEs_Logs
  endpoint:
    path: /troubleshooting/plugins-gathering-logs
    method: GET
    data_selector: logs
- name: VS_Code_Logs
  endpoint:
    path: /troubleshooting/plugins-gathering-logs
    method: GET
    data_selector: logs
- name: Eclipse_Logs
  endpoint:
    path: /troubleshooting/plugins-gathering-logs
    method: GET
    data_selector: logs
- name: Visual_Studio_Logs
  endpoint:
    path: /troubleshooting/plugins-gathering-logs
    method: GET
    data_selector: logs
- name: NeoVim_Logs
  endpoint:
    path: /troubleshooting/plugins-gathering-logs
    method: GET
    data_selector: logs
- name: SWE-1
  endpoint:
    path: /models/swe-1
    method: GET
    data_selector: models
    params: {}
- name: BYOK
  endpoint:
    path: /models/byok
    method: GET
    data_selector: models
    params: {}
- name: team_management
  endpoint:
    path: /team/manage
    method: GET
- name: user_groups
  endpoint:
    path: /user/groups
    method: GET
- name: app_deploys
  endpoint:
    path: /cascade/app-deploys
    method: POST
    data_selector: deployments
    params: {}
- name: Memories
  endpoint:
    path: /memories
    method: GET
- name: Rules
  endpoint:
    path: /rules
    method: GET
- name: app_deploys
  endpoint:
    path: /cascade/app-deploys
    method: POST
- name: address-pr-comments
  endpoint:
    path: /address-pr-comments
    method: GET
    data_selector: steps
- name: git-workflows
  endpoint:
    path: /git-workflows
    method: GET
    data_selector: steps
- name: dependency-management
  endpoint:
    path: /dependency-management
    method: GET
    data_selector: steps
- name: code-formatting
  endpoint:
    path: /code-formatting
    method: GET
    data_selector: steps
- name: run-tests-and-fix
  endpoint:
    path: /run-tests-and-fix
    method: GET
    data_selector: steps
- name: deployment
  endpoint:
    path: /deployment
    method: GET
    data_selector: steps
- name: security-scan
  endpoint:
    path: /security-scan
    method: GET
    data_selector: steps
- name: Plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params: {}
- name: Errors
  endpoint:
    path: /errors
    method: GET
    data_selector: errors
    params: {}
- name: memories
  endpoint:
    path: /cascade/memories
    method: GET
    data_selector: memories
    params: {}
- name: rules
  endpoint:
    path: /cascade/rules
    method: GET
    data_selector: rules
    params: {}
- name: logs
  endpoint:
    path: /troubleshooting/gathering-logs
    method: GET
- name: address-pr-comments
  endpoint:
    path: /address-pr-comments
    method: POST
    data_selector: workflow
    params: {}
- name: git-workflows
  endpoint:
    path: /git-workflows
    method: POST
    data_selector: workflow
    params: {}
- name: dependency-management
  endpoint:
    path: /dependency-management
    method: POST
    data_selector: workflow
    params: {}
- name: code-formatting
  endpoint:
    path: /code-formatting
    method: POST
    data_selector: workflow
    params: {}
- name: run-tests-and-fix
  endpoint:
    path: /run-tests-and-fix
    method: POST
    data_selector: workflow
    params: {}
- name: deployment
  endpoint:
    path: /deployment
    method: POST
    data_selector: workflow
    params: {}
- name: security-scan
  endpoint:
    path: /security-scan
    method: POST
    data_selector: workflow
    params: {}
- name: build-dotnet
  endpoint:
    path: /build/dotnet
    method: POST
    data_selector: task
    params: {}
- name: build-mono
  endpoint:
    path: /build/mono
    method: POST
    data_selector: task
    params: {}
- name: role_based_access_controls
  endpoint:
    path: /role_based_access_controls
    method: GET
- name: role_management
  endpoint:
    path: /role_management
    method: GET
- name: user_management
  endpoint:
    path: /user_management
    method: GET
- name: build-dotnet
  endpoint:
    path: .vscode/tasks.json
    method: POST
    data_selector: tasks
    params: {}
- name: build-mono
  endpoint:
    path: .vscode/tasks.json
    method: POST
    data_selector: tasks
    params: {}
notes:
- API data is refreshed every 3 hours
- All Analytics API endpoints require 'Teams Read-only' permissions
- SSO integration with major identity providers supported
- SCIM provisioning for automated user lifecycle management
- This is only available to free and paid individual users.
- If you have not configured your API key, it will return an error if you try to use
  the BYOK model.
- Windsurf should prompt you to log in with a notification popup at the bottom right
  linking you to an online login page.
- If you do not have an account or otherwise are not already logged in online, you
  will be prompted to login.
- Cascade can read individual pages for things like documentation, blog posts, and
  GitHub files.
- Use SSO plus SCIM wherever possible for automated provisioning, de-provisioning,
  and group management.
- Enterprise users must manually turn this on via settings
- If you cannot find your desired MCP plugin, you can add it manually
- If a user message is unsuccessful, prompt credits will not be consumed.
- Windsurf Indexing will ignore paths specified in `gitignore`
- Files in `node_modules` are ignored
- Hidden pathnames (starting with “.”) are ignored
- Uses prompt credits for premium models
- Unlimited usage for free models
- Fast Context retrieves relevant code from your codebase up to 20x faster than traditional
  agentic search.
- Please do not report security vulnerabilities through public GitHub issues.
- Local Indexing is on by default for all Plugin users, and always on for Windsurf
  Users.
- This feature is only available in Enterprise plans.
- In the Cascade window, click on the 3 dots in the upper right side, and select Download
  Diagnostics
- In the IDE menu, go to Tools > Windsurf > Download Windsurf Diagnostics
- This button will automatically collect relevant logs and parameters into a text
  file
- In extreme situations, you can always get the IDE full log (idea.log) from Help
  > Show Log in Explorer/Finder
- API pricing is based on tokens processed
- BYOK is available for free and paid individual users
- Command does NOT consume any premium model credits.
- Using Command effectively can be an art.
- Allows auto-executed terminal commands with user permission
- Turbo mode executes commands unless in deny list
- SSH support requires OpenSSH installed
- Only supports SSHing into Linux-based remote hosts
- App Deploys are intended primarily for preview purposes.
- Unclaimed deployments may be deleted after a certain period.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Creating and using auto-generated memories do NOT consume credits
- Rules files are limited to 12000 characters each
- Windsurf can still be used for free after your credits are exhausted. There are
  several models available that cost 0 credits to use.
- .NET Framework codebases with mixed assemblies (C++/CLI) or complex Visual Studio
  dependencies have significant limitations in Windsurf.
- Once you whitelist any server, all other servers are automatically blocked for your
  team members.
- Open‑source only – decline any prompt to install proprietary Microsoft tooling;
  Windsurf containers cannot ship it.
- Container vs Host – SDKs/compilers must be present inside the Windsurf workspace
  container.
- If you run out of credits on any paid plan, you will have the option of purchasing
  additional credits or setting up Automatic Credit Refills.
- Role-based access features are available for Teams and Enterprise plans.
- User Groups are available for Enterprise organizations with SCIM integration enabled.
- We’re subject to rate limits and unfortunately sometimes hit capacity for the premium
  models we work with. We are actively working on getting these limits increased and
  fairly distributing the capacity that we have!
- Windsurf only supports SP-initiated SSO; IDP-initiated SSO is NOT currently supported.
- You must create/edit .vscode/tasks.json in your workspace root and customize these
  templates.
- You must create/edit .vscode/launch.json in your workspace root and update the paths.
errors:
- '429 Too Many Requests: Exceeding the rate limit'
- '429 Too Many Requests: If you exceed the rate limit'
- '401 Unauthorized: If you have not configured your API key.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- If a user message is unsuccessful, prompt credits will not be consumed.
- 'Invalid API Key: Ensure your API key is configured correctly'
- 'Quota Exceeded: Check your usage and upgrade your plan if necessary'
- Make a good faith effort to avoid privacy violations, destruction of data, and interruption
  or degradation of our services
- '401 Unauthorized: Recheck API key configuration'
- 'Netlify Site Not Found: Check your build logs for more details.'
- 'Error: Unable to get project name for project ID: Check that the project ID is
  in the windsurf_deployment.yaml file.'
- 'Failed Deployment Build: Check the build logs provided by Cascade.'
- 'Netlify Site Not Found: This likely means that your build failed.'
- Updates are disabled because you are running the user-scope installation of Windsurf
  as Administrator.
auth_info:
  mentioned_objects:
  - service keys
client:
  base_url: https://windsurf.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
