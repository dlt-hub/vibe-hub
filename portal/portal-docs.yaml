resources:
- name: sign_transaction
  endpoint:
    path: /v1/sign
    method: POST
    data_selector: params
- name: wallet
  endpoint:
    path: /create-wallet
    method: POST
    data_selector: eip155Address
- name: receive_testnet_tokens
  endpoint:
    path: /receive-testnet-token
    method: POST
    data_selector: response.data.txHash
- name: send_tokens
  endpoint:
    path: /send-asset
    method: POST
    data_selector: txHash
- name: generate_wallet
  endpoint:
    path: /v1/generate
    method: POST
    data_selector: shares
- name: store_wallet_shares
  endpoint:
    path: /api/v3/clients/me/signing-share-pairs
    method: PATCH
    data_selector: status
- name: get_client_details
  endpoint:
    path: /api/v3/clients/me
    method: GET
    data_selector: metadata
- name: fund_wallet
  endpoint:
    path: /api/v3/clients/me/fund
    method: POST
    data_selector: fundingResponse
- name: send_tokens_evm
  endpoint:
    path: /v1/assets/send
    method: POST
    data_selector: transactionHash
- name: send_tokens_solana
  endpoint:
    path: /v1/assets/send
    method: POST
    data_selector: transactionHash
- name: Primary support
  endpoint:
    path: /resources/blockchain-support
    method: GET
    data_selector: chains
    params: {}
- name: Additional support
  endpoint:
    path: /resources/blockchain-support
    method: GET
    data_selector: chains
    params: {}
- name: Core Feature Support
  endpoint:
    path: /resources/blockchain-support
    method: GET
    data_selector: features
    params: {}
- name: generate_wallet
  endpoint:
    path: /v1/generate
    method: POST
    data_selector: SECP256K1,ED25519
- name: send_assets
  endpoint:
    path: /v1/assets/send
    method: POST
    data_selector: transactionHash
    params: {}
- name: sign_transaction
  endpoint:
    path: /v1/sign
    method: POST
    data_selector: data
    params: {}
- name: backup_wallet
  endpoint:
    path: /v1/backup
    method: POST
    data_selector: SECP256K1,ED25519
- name: recover_wallet
  endpoint:
    path: /v1/recover
    method: POST
    data_selector: SECP256K1,ED25519
- name: Monad Faucets
  endpoint:
    path: https://faucet.monad.xyz/
    method: GET
- name: Alchemy Faucets
  endpoint:
    path: https://www.alchemy.com/faucets
    method: GET
- name: Chainlink Faucets
  endpoint:
    path: https://faucets.chain.link/
    method: GET
- name: Circle Faucets
  endpoint:
    path: https://faucet.circle.com/
    method: GET
- name: Paxos Faucets
  endpoint:
    path: https://faucet.paxos.com/
    method: GET
- name: Solana Faucets
  endpoint:
    path: https://faucet.solana.com/
    method: GET
- name: Bitcoin Faucets
  endpoint:
    path: https://bitcoinfaucet.uo1.net/
    method: GET
- name: Bitcoin Testnet Faucets
  endpoint:
    path: https://coinfaucet.eu/en/btc-testnet/
    method: GET
- name: create_client
  endpoint:
    path: /apis/custodian/reference#create-a-new-client
    method: POST
    data_selector: isAccountAbstracted
    params: {}
- name: EVM Wallet Transactions
  endpoint:
    path: /resources/alert-webhooks
    method: POST
    data_selector: data
    params: {}
- name: Solana Wallet Transactions
  endpoint:
    path: /resources/alert-webhooks
    method: POST
    data_selector: data
    params: {}
- name: Wallet Ejected
  endpoint:
    path: /resources/alert-webhooks
    method: POST
    data_selector: data
    params: {}
- name: Signature Approvals
  endpoint:
    path: /resources/alert-webhooks
    method: POST
    data_selector: data
    params: {}
- name: backup
  endpoint:
    path: /backup
    method: POST
- name: backup_fetch
  endpoint:
    path: /backup/fetch
    method: POST
- name: client_details
  endpoint:
    path: /api/v3/clients/me
    method: GET
    data_selector: records
    params: {}
- name: client_assets_by_chain
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets
    method: GET
    data_selector: records
    params:
      chainId: eip155:1
- name: client_nft_assets
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/nfts
    method: GET
    data_selector: records
- name: client_solana_transaction_history
  endpoint:
    path: /api/v3/clients/me/chains/:chain/transactions
    method: GET
    data_selector: data.transactions
- name: client_eip_155_transaction_history
  endpoint:
    path: /api/v3/clients/me/transactions
    method: GET
    data_selector: records
- name: fund_wallet
  endpoint:
    path: /api/v3/clients/me/fund
    method: POST
    data_selector: data
- name: build_transaction
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/send/build-transaction
    method: POST
    data_selector: ''
    params: {}
- name: evaluate_transaction
  endpoint:
    path: /api/v3/clients/me/evaluate-transaction
    method: POST
    data_selector: ''
    params: {}
- name: get_available_swap_sources
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/swap/sources
    method: POST
    data_selector: ''
    params: {}
- name: swap_quote
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/swap/quote
    method: POST
- name: swap_price
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/swap/price
    method: POST
- name: update_signing_share_pairs
  endpoint:
    path: /api/v3/clients/me/signing-share-pairs
    method: PATCH
- name: update_backup_share_pairs
  endpoint:
    path: /api/v3/clients/me/backup-share-pairs
    method: PATCH
- name: store_backup_share
  endpoint:
    path: /api/v3/clients/me/backup-share-pairs/:backupSharePairId
    method: PATCH
- name: get_backup_share
  endpoint:
    path: /api/v3/clients/me/backup-share-pairs/:backupSharePairId/cipher-text
    method: GET
- name: get_ejectable_backup_shares
  endpoint:
    path: /api/v3/clients/me/wallets/:walletId/ejectable-backup-shares
    method: GET
- name: client_details
  endpoint:
    path: /api/v3/clients/me
    method: GET
- name: client_assets
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets
    method: GET
    params:
      chainId: ''
- name: client_nft_assets
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/nfts
    method: GET
    params:
      chainId: ''
- name: clients_transaction_history
  endpoint:
    path: /api/v3/clients/me/chains/:chain/transactions
    method: GET
    data_selector: data.transactions
    params:
      limit: '1000'
      offset: '0'
- name: clients_eip155_transaction_history
  endpoint:
    path: /api/v3/clients/me/transactions
    method: GET
    data_selector: data
    params: {}
- name: fund_wallet
  endpoint:
    path: /api/v3/clients/me/fund
    method: POST
    data_selector: data
    params: {}
- name: build_transaction
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/send/build-transaction
    method: POST
    data_selector: data
    params: {}
- name: evaluate_transaction
  endpoint:
    path: /api/v3/clients/me/evaluate-transaction
    method: POST
- name: get_swap_sources
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/swap/sources
    method: POST
- name: get_swap_quote
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/swap/quote
    method: POST
- name: get_swap_price
  endpoint:
    path: /api/v3/clients/me/chains/:chain/assets/swap/price
    method: POST
- name: swap_price
  endpoint:
    path: /api/v3/clients/me/chains/[chain]/assets/swap/price
    method: POST
    data_selector: data
    params: {}
- name: update_signing_share_pairs
  endpoint:
    path: /api/v3/clients/me/signing-share-pairs
    method: PATCH
    data_selector: ''
    params: {}
- name: update_backup_share_pairs
  endpoint:
    path: /api/v3/clients/me/backup-share-pairs
    method: PATCH
    data_selector: ''
    params: {}
- name: store_backup_share
  endpoint:
    path: /api/v3/clients/me/backup-share-pairs/:backupSharePairId
    method: PATCH
    data_selector: ''
    params: {}
- name: get_backup_share
  endpoint:
    path: /api/v3/clients/me/backup-share-pairs/:backupSharePairId/cipher-text
    method: GET
    data_selector: ''
    params: {}
- name: get_ejectable_backup_shares
  endpoint:
    path: /api/v3/clients/me/wallets/:walletId/ejectable-backup-shares
    method: GET
    data_selector: ''
    params: {}
- name: nfts
  endpoint:
    path: /api/v3/clients/me/nfts
    method: GET
    data_selector: nfts
    params:
      chainId: <CAIP-2 format>
- name: simulate_transaction
  endpoint:
    path: /api/v3/clients/me/simulate-transaction
    method: POST
    data_selector: transaction
    params:
      chainId: <CAIP-2 format>
- name: erc20_assets
  endpoint:
    path: /api/v3/clients/me/balances
    method: GET
    data_selector: balances
    params:
      chainId: <CAIP-2 format>
- name: swap_quote
  endpoint:
    path: /api/v3/swaps/quote
    method: POST
    data_selector: quote
    params:
      chainId: <CAIP-2 format>
- name: swap_sources
  endpoint:
    path: /api/v3/swaps/sources
    method: POST
    data_selector: sources
    params:
      chainId: <CAIP-2 format>
- name: create_client
  endpoint:
    path: /api/v3/custodians/me/clients
    method: POST
- name: get_client
  endpoint:
    path: /api/v3/custodians/me/clients/[clientId]
    method: GET
- name: get_clients
  endpoint:
    path: /api/v3/custodians/me/clients
    method: GET
- name: get_list_of_assets_for_a_client
  endpoint:
    path: /api/v3/custodians/me/clients/:clientId/chains/:chain/assets
    method: GET
    data_selector: data
    params: {}
- name: build_transaction_for_a_client
  endpoint:
    path: /api/v3/custodians/me/clients/:clientId/chains/:chain/assets/send/build-transaction
    method: POST
    data_selector: transaction
    params: {}
- name: prepare_a_client_for_eject
  endpoint:
    path: /api/v3/custodians/me/clients/:clientId/enable-eject
    method: PATCH
    data_selector: ejectableUntil
    params: {}
- name: get_a_client_backup_shares
  endpoint:
    path: /api/v3/custodians/me/clients/:clientId/wallets/:walletId/ejectable-backup-shares
    method: GET
    data_selector: encryptedClientBackupShare
    params: {}
- name: get_alert_webhooks
  endpoint:
    path: /api/v3/custodians/me/alerts/webhooks
    method: GET
    data_selector: data
    params: {}
- name: alert_webhook_events
  endpoint:
    path: /api/v3/custodians/me/alerts/webhooks/:alertWebhookId/events
    method: GET
    data_selector: data
    params:
      eventTypes: EIP_155_TX_V1
      limit: 100
- name: replay_failed_alert_webhook_events
  endpoint:
    path: /api/v3/custodians/me/alerts/webhooks/:alertWebhookId/events/failed/replay
    method: POST
    data_selector: data
    params: {}
- name: gas_sponsorship_usage
  endpoint:
    path: /api/v3/custodians/me/gas-sponsors/chains/:chainId/usage
    method: GET
    data_selector: address
    params: {}
notes:
- Uses Client API Key or Client Session Token for authentication
- Uses API Key as a bearer token for authentication.
- Clients using Account Abstraction require dApps they interact with to support EIP-1271
  for verifying signed messages.
- Webhook URLs must use HTTPS.
- Add Portal’s IP addresses to your allowlist.
- Webhook requests include a secret in the X-Webhook-Secret header.
- Endpoints require a Client API Key or Client Session Token as a bearer token.
- When using CAIP-2 chain formats in the URL, ensure the URL is URI encoded.
- The token field can accept either a token symbol (e.g. “USDC” or “USDT”) or a contract
  address (for EIP-155 tokens) or a mint address (for Solana tokens).
- The amount should be provided in the token’s primary denomination (e.g. whole USDC,
  not micro-USDC).
- This endpoint creates an unsigned transaction. The client is responsible for signing
  the transaction before broadcasting it to the network.
- The response structure differs between Solana and EIP-155 chains. Make sure to handle
  both response types in your implementation.
- Chain IDs must follow CAIP-2 format or respective chain identifier.
- Your custodian must be using Portal-Managed Backups to use this endpoint.
- Do not use this endpoint if you are using the Portal SDKs.
errors:
- '401 Unauthorized: Recheck API Key or Session Token'
- '400: Bad Request'
- '401: Unauthorized Request'
- 'FAILED_WEBHOOK: Check your webhook status in the Portal Admin Dashboard.'
- '429: Too Many Requests'
auth_info:
  mentioned_objects:
  - X-WEBHOOK-SECRET
  - Custodian API Key
client:
  base_url: https://api.portalhq.io
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
