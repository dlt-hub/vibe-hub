resources:
- name: python_app
  endpoint:
    method: decorator
- name: bash_app
  endpoint:
    method: decorator
- name: join_app
  endpoint:
    method: decorator
- name: python_app
  endpoint:
    method: GET
    data_selector: result
- name: bash_app
  endpoint:
    method: GET
    data_selector: result
- name: join_app
  endpoint:
    method: GET
    data_selector: result
- name: python_app
  endpoint:
    path: /parsl.app.app.python_app
    method: GET
    data_selector: result
    params: {}
- name: bash_app
  endpoint:
    path: /parsl.app.app.bash_app
    method: GET
    data_selector: result
    params:
      stdout: echo-hello.stdout
      stderr: echo-hello.stderr
notes:
- Parsl requires Python3.9+ and has been tested on Linux.
- Parsl separates code and execution.
- Parsl must track the data that is passed into and out of an App.
- Parsl wraps Python functions as 'Apps' using the @python_app decorator.
- Parslâ€™s logging will not capture STDOUT/STDERR from the apps themselves.
- Parsl is a native Python library that allows you to write functions that execute
  in parallel
- Apps wrap standard Python function calls and can be passed arbitrary arguments
- Parsl separates code and execution using a configuration model
- AppFutures represent the execution of an asynchronous app
- DataFutures represent the files produced by apps
- Remote files can be accessed via Globus, FTP, and HTTP
- Parsl is a native Python library for parallel execution
- Apps can be executed asynchronously and return futures
- Supports both Python apps and Bash apps
- Files can be local or remote (Globus, FTP, HTTP)
- Configuration separates code from execution environment
- Parsl apps are potentially executed remotely and must contain all required dependencies
  in the function body
- Uses local pool of threads to facilitate local parallel execution
- Bash apps must return the command-line string to be executed
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - RadicalPilotExecutor
  - RadioConfig
  - RandomManagerSelector
  - Config
  - LocalProvider
  - HighThroughputExecutor
  - AppFutures
  - DataFutures
  - File
client:
  base_url: http://parsl.readthedocs.io/en/latest/
  headers:
    Accept: application/json
source_metadata: null
