resources:
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params:
      fields: all
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: api-token
    params: {}
- name: attachments
  endpoint:
    path: /projects/1/attachments
    method: POST
    data_selector: attachments
- name: userstories
  endpoint:
    path: /projects/1/userstories/1/attachments
    method: GET
    data_selector: attachments
- name: components
  endpoint:
    path: /projects/1/components
    method: GET
    data_selector: components
- name: custom_fields
  endpoint:
    path: /projects/1/custom-fields/issue
    method: GET
    data_selector: customFields
- name: bulk_items
  endpoint:
    path: /items
    method: GET
    data_selector: '[id]'
    params:
      itemType: userstory
      projectIds: '1'
      ids: 5,6,7
- name: userstories
  endpoint:
    path: /projects/1/userstories
    method: POST
    data_selector: message
    params: {}
- name: delete_userstory
  endpoint:
    path: /userstories/1
    method: DELETE
    data_selector: message
    params: {}
- name: get_release_userstories
  endpoint:
    path: /projects/1/releases/1/userstories
    method: GET
    data_selector: ''
    params:
      fields: all
- name: create_issue
  endpoint:
    path: /rest/v1/projects/1/issues
    method: POST
- name: delete_epic
  endpoint:
    path: /rest/v1/epic/1
    method: DELETE
- name: get_release_userstories
  endpoint:
    path: /rest/v1/projects/1/releases/1/userstories
    method: GET
- name: get_issues
  endpoint:
    path: /rest/v1/projects/1/issues
    method: GET
- name: userstories
  endpoint:
    path: /projects/1/releases/1/userstories
    method: GET
    data_selector: ''
- name: tasks
  endpoint:
    path: /userstories/1/tasks
    method: GET
    data_selector: ''
- name: update_task
  endpoint:
    path: /tasks/1
    method: PUT
    data_selector: ''
- name: delete_task
  endpoint:
    path: /tasks/1
    method: DELETE
    data_selector: ''
- name: create_userstory_task
  endpoint:
    path: /userstories/1/tasks
    method: POST
    data_selector: ''
- name: sprint_issues
  endpoint:
    path: /projects/1/sprints/1/issues
    method: GET
    data_selector: '[]'
    params:
      fields: all
- name: delete_task
  endpoint:
    path: /tasks/1
    method: DELETE
    data_selector: ''
    params: {}
- name: update_effort
  endpoint:
    path: /projects/1/tasks/1/effort
    method: PUT
    data_selector: ''
    params: {}
- name: userstories
  endpoint:
    path: /projects/1/releases/1/userstories
    method: GET
    data_selector: '[]'
- name: releases
  endpoint:
    path: /projects/1/releases
    method: GET
    data_selector: '[]'
- name: release_issues
  endpoint:
    path: /projects/1/releases/1/issues
    method: GET
    data_selector: records
    params:
      fields: all
- name: release_userstories
  endpoint:
    path: /projects/1/releases/1/userstories
    method: GET
    data_selector: records
    params:
      fields: all
- name: epic
  endpoint:
    path: /projects/1/epics
    method: POST
    data_selector: message
- name: delete_epic
  endpoint:
    path: /epic/1
    method: DELETE
    data_selector: message
- name: update_epic
  endpoint:
    path: /epics/1
    method: PUT
    data_selector: message
notes:
- An Epic is defined as a large body of work.
- This endpoint retrieves bulk items along with their sub items (if any). Specify
  the Item IDs and type in order to fetch the data.
- This endpoint creates a new issue.
- This endpoint deletes specified epic.
- This endpoint retrieves all userstories for given release and project.
- This endpoint retrieves all releases of given project.
- Ensure to include the correct API key and token in the headers.
- Integrations for Post Commit Webhook can be accessed through the SCM Integrations
  page
errors:
- '400: Bad Request'
- '401: Unauthorized'
- '429: Too Many Requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API token or key'
- '401 Unauthorized: Check if the API token and key are valid.'
- '404 Not Found: Ensure the epic or project exists.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.yodiz.com/api/rest/v1/
  auth:
    type: apikey
    location: header
    header_name: api-key
  headers:
    Content-Type: application/json
  paginator:
    type: offset
    page_size_param: limit
    default_page_size: 20
source_metadata: null
