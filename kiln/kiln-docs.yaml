resources:
- name: Accounts
  endpoint:
    path: /v1.6/reference/getaccounts
    method: GET
- name: Organizations
  endpoint:
    path: /v1.6/reference/getorganizationportfolio
    method: GET
- name: Cardano (ADA)
  endpoint:
    path: /v1.6/reference/getadastakes
    method: GET
- name: Celestia (TIA)
  endpoint:
    path: /v1.6/reference/getcelestiastakes
    method: GET
- name: Cosmos (ATOM)
  endpoint:
    path: /v1.6/reference/getatomstakes
    method: GET
- name: DeFi
  endpoint:
    path: /v1.6/reference/getdefistakes
    method: GET
- name: DyDx (DYDX)
  endpoint:
    path: /v1.6/reference/getdydxstakes
    method: GET
- name: Ethereum (EigenLayer)
  endpoint:
    path: /v1.6/reference/geteigenlayereigenpod
    method: GET
- name: Ethereum (ETH)
  endpoint:
    path: /v1.6/reference/getethstakes
    method: GET
- name: Ethereum (OnChain)
  endpoint:
    path: /v1.6/reference/postethonchainkeys
    method: POST
- name: Fetch.ai (FET)
  endpoint:
    path: /v1.6/reference/getfetchstakes
    method: GET
- name: Injective (INJ)
  endpoint:
    path: /v1.6/reference/getinjstakes
    method: GET
- name: Kava (KAVA)
  endpoint:
    path: /v1.6/reference/getkavastakes
    method: GET
- name: Kusama (KSM)
  endpoint:
    path: /v1.6/reference/getksmstakes
    method: GET
- name: MultiversX (EGLD)
  endpoint:
    path: /v1.6/reference/getegldstakes
    method: GET
- name: Near (NEAR)
  endpoint:
    path: /v1.6/reference/getnearstakes
    method: GET
- name: Noble (NOBLE)
  endpoint:
    path: /v1.6/reference/postnoblegetbalance
    method: POST
- name: Osmosis (OSMO)
  endpoint:
    path: /v1.6/reference/getosmostakes
    method: GET
- name: Polkadot (DOT)
  endpoint:
    path: /v1.6/reference/getdotstakes
    method: GET
- name: deployments
  endpoint:
    path: /v1.6/reference/getdeployments
    method: GET
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
- name: transaction_status
  endpoint:
    path: /reference/getosmotxstatus
    method: GET
- name: transaction_decoding
  endpoint:
    path: /reference/getosmotxdecoding
    method: GET
- name: polkadot_stakes
  endpoint:
    path: /reference/getdotstakes
    method: GET
- name: polkadot_rewards
  endpoint:
    path: /reference/getdotrewards
    method: GET
- name: polkadot_operations
  endpoint:
    path: /reference/getdotoperations
    method: GET
- name: polkadot_network_stats
  endpoint:
    path: /reference/getdotnetworkstats
    method: GET
- name: polygon_stakes
  endpoint:
    path: /reference/getmaticstakes
    method: GET
- name: polygon_rewards
  endpoint:
    path: /reference/getmaticrewards
    method: GET
- name: solana_stakes
  endpoint:
    path: /reference/getsolstakes
    method: GET
- name: tezos_stakes
  endpoint:
    path: /reference/getxtzstakes
    method: GET
- name: tron_network_stats
  endpoint:
    path: /reference/gettrxnetworkstats
    method: GET
- name: zeta_chain_stakes
  endpoint:
    path: /reference/getzetachainstakes
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: organizations
  endpoint:
    path: /reference/getorganizationportfolio
    method: GET
- name: babylon
  endpoint:
    path: /reference/getbbnstakes
    method: GET
- name: cardano
  endpoint:
    path: /reference/getadastakes
    method: GET
- name: celestia
  endpoint:
    path: /reference/getcelestiastakes
    method: GET
- name: cosmos
  endpoint:
    path: /reference/getatomstakes
    method: GET
- name: cronos
  endpoint:
    path: /reference/getcrostakes
    method: GET
- name: defi
  endpoint:
    path: /reference/getdefistakes
    method: GET
- name: deployments
  endpoint:
    path: /reference/getdeployments
    method: GET
- name: dydx
  endpoint:
    path: /reference/getdydxstakes
    method: GET
- name: ethereum
  endpoint:
    path: /reference/getethstakes
    method: GET
- name: fetch
  endpoint:
    path: /reference/getfetchstakes
    method: GET
- name: injective
  endpoint:
    path: /reference/getinjstakes
    method: GET
- name: kava
  endpoint:
    path: /reference/getkavastakes
    method: GET
- name: kiln
  endpoint:
    path: /reference/getvalidators
    method: GET
- name: kusama
  endpoint:
    path: /reference/getksmstakes
    method: GET
- name: mantra
  endpoint:
    path: /reference/getomstakes
    method: GET
- name: multiversx
  endpoint:
    path: /reference/getegldstakes
    method: GET
- name: near
  endpoint:
    path: /reference/getnearstakes
    method: GET
- name: noble
  endpoint:
    path: /reference/postnoblegetbalance
    method: POST
- name: osmosis
  endpoint:
    path: /reference/getosmostakes
    method: GET
- name: stakes
  endpoint:
    path: /reference/getzetachainstakes
    method: GET
- name: create_stakes
  endpoint:
    path: /reference/postzetachainstakes
    method: POST
- name: rewards
  endpoint:
    path: /reference/getzetachainrewards
    method: GET
- name: operations
  endpoint:
    path: /reference/getzetachainoperations
    method: GET
- name: network_stats
  endpoint:
    path: /reference/getzetachainnetworkstats
    method: GET
- name: reports
  endpoint:
    path: /reference/getzetachainreports
    method: GET
- name: get_balance
  endpoint:
    path: /reference/postzetagetbalance
    method: POST
- name: stake_transaction
  endpoint:
    path: /reference/postzetastaketx
    method: POST
- name: send_transaction
  endpoint:
    path: /reference/postzetasendtx
    method: POST
- name: withdraw_rewards
  endpoint:
    path: /reference/postzetawithdrawrewardstx
    method: POST
- name: unstake
  endpoint:
    path: /reference/postzetaunstaketx
    method: POST
- name: redelegate
  endpoint:
    path: /reference/postzetaredelegatetx
    method: POST
- name: prepare_transaction
  endpoint:
    path: /reference/postzetapreparetx
    method: POST
- name: broadcast_transaction
  endpoint:
    path: /reference/postzetabroadcasttx
    method: POST
- name: transaction_status
  endpoint:
    path: /reference/getzetatxstatus
    method: GET
- name: transaction_decoding
  endpoint:
    path: /reference/getzetatxdecoding
    method: GET
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
- name: eth_stakes
  endpoint:
    path: /reference/getethstakes
    method: GET
- name: eth_network_stats
  endpoint:
    path: /reference/getethnetworkstats
    method: GET
- name: eth_rewards
  endpoint:
    path: /reference/getethrewards
    method: GET
- name: defi_stakes
  endpoint:
    path: /defi/stakes
    method: GET
    data_selector: message
    params:
      wallets: '0x7b4292494807BfC7387E7e0EcC65788Ed650F043'
      vaults: bsc_0x6E90B52A5eAb4e4a08135dcf8c93ABdf6caE9C91
- name: network_stats
  endpoint:
    path: /v1/eth/network-stats
    method: GET
    data_selector: data
- name: stakes
  endpoint:
    path: /v1/eth/stakes
    method: POST
    data_selector: data
- name: rewards
  endpoint:
    path: /v1/eth/rewards
    method: GET
    data_selector: data
- name: stakes
  endpoint:
    path: /v1/eth/stakes
    method: GET
- name: rewards
  endpoint:
    path: /v1/eth/rewards
    method: GET
- name: operations
  endpoint:
    path: /v1/eth/operations
    method: GET
- name: network_stats
  endpoint:
    path: /v1/eth/network-stats
    method: GET
- name: transactions
  endpoint:
    path: /v1/eth/transactions
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: network_stats
  endpoint:
    path: /eth/getNetworkStats
    method: GET
    data_selector: stats
- name: transaction_status
  endpoint:
    path: /eth/getTxStatus
    method: GET
    data_selector: status
- name: stakes
  endpoint:
    path: /eth/getStakesByAccounts
    method: GET
    data_selector: stakes
- name: rewards
  endpoint:
    path: /eth/getRewardsByAccounts
    method: GET
    data_selector: rewards
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
    params:
      integration: '0x5db5235b5c7e247488784986e58019fffd98fda4'
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
    params: {}
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
    params: {}
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
    params: {}
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
    params: {}
- name: exit_tickets
  endpoint:
    path: /v1/eth/onchain/v2/exit-tickets
    method: GET
    data_selector: data
    params: {}
- name: eth_stakes
  endpoint:
    path: /reference/getethstakes
    method: GET
- name: eth_network_stats
  endpoint:
    path: /reference/getethnetworkstats
    method: GET
- name: eth_rewards
  endpoint:
    path: /reference/getethrewards
    method: GET
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: data
    params: {}
- name: network_stats
  endpoint:
    path: /v1/defi/network-stats
    method: GET
    data_selector: data
    params:
      vault_ids: ''
- name: stakes
  endpoint:
    path: /v1/defi/stakes
    method: GET
    data_selector: data
    params:
      wallets: ''
      vault_ids: ''
- name: defi_stakes
  endpoint:
    path: /v1/defi/stakes
    method: GET
    data_selector: ''
    params:
      wallets: '0x7b4292494807BfC7387E7e0EcC65788Ed650F043'
      vaults: bsc_0x6E90B52A5eAb4e4a08135dcf8c93ABdf6caE9C91
- name: operations
  endpoint:
    path: /v1/defi/operations
    method: GET
    data_selector: data
    params:
      wallets: ''
      vault_ids: ''
- name: approve_transaction
  endpoint:
    path: /v1/defi/transaction/approve
    method: POST
    data_selector: data
- name: deposit_transaction
  endpoint:
    path: /v1/defi/transaction/deposit
    method: POST
    data_selector: data
- name: withdraw_transaction
  endpoint:
    path: /v1/defi/transaction/withdraw
    method: POST
    data_selector: data
- name: network_stats
  endpoint:
    path: /v1/eth/network-stats
    method: GET
    data_selector: data
    params: {}
- name: stakes
  endpoint:
    path: /v1/eth/stakes
    method: POST
    data_selector: data
    params: {}
- name: rewards
  endpoint:
    path: /v1/eth/rewards
    method: GET
    data_selector: data
    params:
      start_date: '2024-06-09'
- name: craft_btc_lock
  endpoint:
    path: /btc/baby/transaction/btc-lock
    method: POST
    data_selector: unsigned_staking_psbt_hex
    params: {}
- name: craft_register_stake
  endpoint:
    path: /btc/baby/transaction/baby-register-stake
    method: POST
    data_selector: unsigned_tx_hash
    params: {}
- name: stakes
  endpoint:
    path: /v1/eth/stakes
    method: GET
- name: rewards
  endpoint:
    path: /v1/eth/rewards
    method: GET
- name: operations
  endpoint:
    path: /v1/eth/operations
    method: GET
- name: network_stats
  endpoint:
    path: /v1/eth/stats
    method: GET
- name: transactions
  endpoint:
    path: /v1/eth/transactions
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: btc_unbond
  endpoint:
    path: /btc/baby/transaction/btc-unbond
    method: POST
    data_selector: ''
    params: {}
- name: btc_prepare_signed_unbond
  endpoint:
    path: /btc/baby/transaction/btc-prepare-signed-unbond
    method: POST
    data_selector: ''
    params: {}
- name: btc_withdraw
  endpoint:
    path: /btc/baby/transaction/btc-withdraw
    method: POST
    data_selector: ''
    params: {}
- name: claim_baby_rewards
  endpoint:
    path: /btc/baby/transaction/baby-withdraw-rewards
    method: POST
    data_selector: result
    params: {}
- name: network_stats
  endpoint:
    path: /eth/getNetworkStats
    method: GET
- name: transaction_status
  endpoint:
    path: /eth/getTxStatus
    method: GET
- name: stakes_by_accounts
  endpoint:
    path: /eth/getStakesByAccounts
    method: GET
- name: rewards_by_accounts
  endpoint:
    path: /eth/getRewardsByAccounts
    method: GET
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
    params:
      integration: ''
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
- name: exit_tickets
  endpoint:
    path: /v1/eth/onchain/v2/exit-tickets
    method: GET
    data_selector: data
- name: skimming_slot
  endpoint:
    path: /reference/getethstakes
    method: GET
- name: entry_exit_time
  endpoint:
    path: /reference/getethnetworkstats
    method: GET
- name: rewards
  endpoint:
    path: /reference/getethrewards
    method: GET
- name: vaults
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: data
    params: {}
- name: user_positions
  endpoint:
    path: /v1/defi/stakes
    method: GET
    data_selector: data
    params: {}
- name: operations
  endpoint:
    path: /v1/defi/operations
    method: GET
    data_selector: data
    params: {}
- name: approve_transaction
  endpoint:
    path: /v1/defi/transaction/approve
    method: POST
    data_selector: data
    params: {}
- name: deposit_transaction
  endpoint:
    path: /v1/defi/transaction/deposit
    method: POST
    data_selector: data
    params: {}
- name: withdraw_transaction
  endpoint:
    path: /v1/defi/transaction/withdraw
    method: POST
    data_selector: data
    params: {}
- name: network_stats
  endpoint:
    path: /v1/eth/network-stats
    method: GET
    data_selector: data
    params: {}
- name: stakes
  endpoint:
    path: /v1/eth/stakes
    method: POST
    data_selector: data
    params: {}
- name: rewards
  endpoint:
    path: /v1/eth/rewards
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: craft_btc_lock
  endpoint:
    path: /btc/baby/transaction/btc-lock
    method: POST
    data_selector: unsigned_staking_psbt_hex
- name: craft_register_stake
  endpoint:
    path: /btc/baby/transaction/baby-register-stake
    method: POST
    data_selector: unsigned_tx_hash
- name: unbond
  endpoint:
    path: /btc/baby/transaction/btc-unbond
    method: POST
    data_selector: unsigned_unbonding_psbt_hex
    params: {}
- name: prepare_signed_unbond
  endpoint:
    path: /btc/baby/transaction/btc-prepare-signed-unbond
    method: POST
    data_selector: serialized_unbonding_tx_hex
    params: {}
- name: withdraw
  endpoint:
    path: /btc/baby/transaction/btc-withdraw
    method: POST
    data_selector: unsigned_tx_withdraw_psbt
    params: {}
- name: network_stats
  endpoint:
    path: /eth/getNetworkStats
    method: GET
    data_selector: stats
- name: transaction_status
  endpoint:
    path: /eth/getTxStatus
    method: GET
    data_selector: status
- name: stakes_by_accounts
  endpoint:
    path: /eth/getStakesByAccounts
    method: GET
    data_selector: stakes
- name: stakes_by_validators
  endpoint:
    path: /eth/getStakesByValidators
    method: GET
    data_selector: stakes
- name: stakes_by_wallets
  endpoint:
    path: /eth/getStakesByWallets
    method: GET
    data_selector: stakes
- name: rewards_by_accounts
  endpoint:
    path: /eth/getRewardsByAccounts
    method: GET
    data_selector: rewards
- name: rewards_by_validators
  endpoint:
    path: /eth/getRewardsByValidators
    method: GET
    data_selector: rewards
- name: rewards_by_wallets
  endpoint:
    path: /eth/getRewardsByWallets
    method: GET
    data_selector: rewards
- name: claim_baby_rewards
  endpoint:
    path: /btc/baby/transaction/baby-withdraw-rewards
    method: POST
    data_selector: unsigned_tx_hash
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
    params:
      integration: ''
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
    params:
      wallets: ''
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
    params: {}
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
    params: {}
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
    params: {}
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
    params: {}
- name: eth_stakes
  endpoint:
    path: /v1.6/reference/getethstakes
    method: GET
- name: eth_network_stats
  endpoint:
    path: /v1.6/reference/getethnetworkstats
    method: GET
- name: eth_rewards
  endpoint:
    path: /v1.6/reference/getethrewards
    method: GET
- name: vaults_info
  endpoint:
    path: /v1/defi/network-stats
    method: GET
    data_selector: data
    params:
      vaults: ''
- name: user_positions
  endpoint:
    path: /v1/defi/stakes
    method: GET
    data_selector: data
    params:
      wallets: ''
      vaults: ''
- name: user_history
  endpoint:
    path: /v1/defi/operations
    method: GET
    data_selector: data
    params:
      wallets: ''
      vaults: ''
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
- name: network_stats
  endpoint:
    path: /v1/eth/network-stats
    method: GET
    data_selector: data
- name: stakes
  endpoint:
    path: /v1/eth/stakes
    method: POST
    data_selector: data
- name: rewards
  endpoint:
    path: /v1/eth/rewards
    method: GET
    data_selector: data
- name: positions
  endpoint:
    path: /v1/positions
    method: GET
    data_selector: data.positions
    params:
      chain_ids: 1,2,3
      wallet: '0x719EE46276410809cA5F85D41DAc506c24232905'
      type: ''
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params:
      addresses: 1_0xeeeee
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: create_portal
  endpoint:
    path: /v1/portals
    method: POST
- name: get_portal
  endpoint:
    path: /v1/portals/:id
    method: GET
- name: refresh_portal
  endpoint:
    path: /v1/portals/:id
    method: PUT
- name: network_stats
  endpoint:
    path: /eth/getNetworkStats
    method: GET
    data_selector: stats
- name: transaction_status
  endpoint:
    path: /eth/getTxStatus
    method: GET
    data_selector: status
- name: stakes
  endpoint:
    path: /eth/getStakesByAccounts
    method: GET
    data_selector: stakes
- name: rewards
  endpoint:
    path: /eth/getRewardsByAccounts
    method: GET
    data_selector: rewards
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
    params:
      integration: your_integration_contract_address
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
    params:
      wallets: user_wallets
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
    params:
      wallets: user_wallets
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
    params:
      wallets: user_wallets
- name: network_stats
  endpoint:
    path: /v1/eth/onchain/v2/network-stats
    method: GET
    data_selector: data
    params:
      integration: your_integration_contract_address
- name: stakes
  endpoint:
    path: /v1/eth/onchain/v2/stakes
    method: GET
    data_selector: data
    params:
      wallets: user_wallet_address
- name: rewards
  endpoint:
    path: /v1/eth/onchain/v2/rewards
    method: GET
    data_selector: data
    params:
      wallets: user_wallet_address
- name: operations
  endpoint:
    path: /v1/eth/onchain/v2/operations
    method: GET
    data_selector: data
    params:
      wallets: user_wallet_address
- name: vaults_info
  endpoint:
    path: /v1/defi/network-stats
    method: GET
    data_selector: data
    params:
      vaults: ''
- name: user_positions
  endpoint:
    path: /v1/defi/stakes
    method: GET
    data_selector: data
    params:
      wallets: ''
      vaults: ''
- name: user_history
  endpoint:
    path: /v1/defi/operations
    method: GET
    data_selector: data
    params:
      wallets: ''
      vaults: ''
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
- name: positions
  endpoint:
    path: /v1/positions
    method: GET
    data_selector: data.positions
    params:
      chain_ids: 1,2,3
      wallet: '0x719EE46276410809cA5F85D41DAc506c24232905'
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params:
      addresses: 1_0xeeeee
- name: create_portal
  endpoint:
    path: /v1/portals
    method: POST
- name: get_portal
  endpoint:
    path: /v1/portals/:id
    method: GET
- name: refresh_portal
  endpoint:
    path: /v1/portals/:id
    method: PUT
notes:
- Kiln provides a diverse suite of earn products for your platform like pooled ETH
  staking, tokenised ETH validators, defi lending monetization and a lot more coming.
- Requires setup of connected app in api
- The testnet environment is not under SLA, and there can be differences in the endpoints
  to cover test blockchain specificities.
- Kiln users own the responsibility of keeping secret API keys safe.
- Rate limits are 100 requests per second on all routes & methods by IP address.
- Data refresh rates may vary due to underlying protocols and services.
- Uses API token for authentication
- Every call to a Kiln API must include an API secret key.
- The API follows one common route structure that you can apply on each network.
- Rewards are snapshotted by the API every day at 00:00 UTC.
- The basic rate limiter restricts the number of API requests per second to 100 requests
  per second on all routes & methods by IP address
- Rewards are snapshotted by the API every day at 00:00 UTC
- Expected unstaking period is ~4 days
- Kiln's validators retain the entire reward, we are unable to track events related
  to reward distribution directly on-chain as they are not emitted.
- Integration typically takes less than 1 week.
- Uses API key for authentication — requires setup in Kiln Dashboard
- Some L2 networks do not yet have stable DeFi testnets. For those, we provide staging
  vaults on mainnet. These are intended strictly for development and QA — do not use
  in production.
- End-user IP must be passed in the X-Forwarded-For header.
- Responses with a 451 status code should be handled gracefully.
- Bypass checks by setting skip_gas_estimation to true
- Congratulations! You now have a solid understanding of ERC-4626 and how to integrate
  Kiln DeFi into your application.
- You need dashboard access to start generating API Keys.
- Users signal their intent to delegate BTC to specific finality providers by submitting
  a pre-registration transaction on-chain.
- Accounts are the way to organise your stakes with Kiln
- Requires setup of connected app in Kiln.
- This website is focused on technical, programmatic integrations of Kiln products.
- Keep your keys safe by following the secret API keys best practices
- The refresh rates mentioned above are subject to change, and the actual rates may
  vary depending on the specific protocol, service, or underlying infrastructure.
- Use testnet instances for development.
- Kiln's validators retain the entire reward, we are unable to track events related
  to reward distribution directly on-chain.
- Use the api_token variable for API authentication.
- All amounts are in the min unit of the asset.
- The amount in the withdraw transaction can be set to 'max' to withdraw everything.
- Babylon BTC staking is a self-custodial staking solution that allows Bitcoin holders
  to earn rewards on the Babylon network without relinquishing control of their assets.
- Keep your keys safe by following the secret API keys best practices.
- Sensitive operations are handled on-chain.
- Public testing instance available on Holesky Ethereum testnet.
- These vaults SHOULD NOT be used in production as they are testnet or staging deployments
  made for testing purposes only.
- You should define a vault registry list on your side.
- We recommend creating a test suite from this list and running it frequently, and
  especially during each release.
- These queries give you all the data needed to display product information user can
  deposit to.
- Each call to a Kiln API must include an API secret key.
- You can track the exact status of your validator.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Accounts are the way to organise your stakes with Kiln.
- Requires API key in the Authorization header.
- Get your api token from the Kiln dashboard organization on testnet.
- Testnet deployments should not be used in production.
- You must define a vault registry list in your application.
- We recommend creating a test suite from the list and running it frequently, and
  especially during each release.
- Data should be fetched and cached on your backend for independent user actions.
- Use API keys to authenticate API requests.
errors:
- 'INVALID_REQUEST: The request is malformed or invalid.'
- 'AUTHENTICATION_ERROR: The API key is either deleted or expired.'
- '451: Unavailable For Legal Reasons'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key validity'
- '401 Unauthorized: Recheck API key or token expiration'
- '451: Access to this product is restricted in your country.'
- 204 The amount is already approved
- 'INVALID_REQUEST: Request does not include a valid key'
- 'AUTHENTICATION_ERROR: Request includes a deleted or expired key'
- 'invalid request error: Request doesn’t include a valid key.'
- 'authentication error: Request includes a deleted or expired key.'
- '401 Unauthorized: Check your API token.'
- Withdrawals on this protocol are unavailable at the moment, retry later.
- '401 Unauthorized: Recheck API key or dashboard access.'
- '401 Unauthorized: Recheck API key or permissions'
- 'invalid request error: If a request doesn’t include a valid key.'
- 'authentication error: If a request includes a deleted or expired key.'
auth_info:
  mentioned_objects:
  - API token
  - Integration
client:
  base_url: https://api.kiln.fi
  auth:
    type: Bearer
source_metadata: null
