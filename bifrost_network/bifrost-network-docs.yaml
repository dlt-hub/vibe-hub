resources:
- name: user_history
  endpoint:
    path: /bridge/action/history/user/{address}
    method: GET
- name: count_history
  endpoint:
    path: /bridge/action/history/count/{count}
    method: GET
- name: transaction_history
  endpoint:
    path: /bridge/action/history/tx/{txHash}
    method: GET
- name: bridge_pair
  endpoint:
    path: /bridge/config/pair
    method: GET
- name: bridge_contract
  endpoint:
    path: /bridge/config/contract
    method: GET
- name: bridge_chains
  endpoint:
    path: /bridge/config/chains
    method: GET
- name: bridge_abi
  endpoint:
    path: /bridge/config/abi
    method: GET
- name: bridge_status
  endpoint:
    path: /bridge/action/status
    method: GET
- name: user_bridge_history
  endpoint:
    path: /bridge/action/history/user/{address}
    method: GET
- name: transaction_bridge_history
  endpoint:
    path: /bridge/action/history/tx/{txHash}
    method: GET
- name: latest_bridge_history
  endpoint:
    path: /bridge/action/history/count/{count}
    method: GET
- name: bridge_encode
  endpoint:
    path: /bridge/action/encode
    method: GET
- name: bridge_balances
  endpoint:
    path: /bridge/action/balances
    method: GET
- name: bridge_config_pair
  endpoint:
    path: /bridge/config/pair
    method: GET
- name: bridge_config_contract
  endpoint:
    path: /bridge/config/contract
    method: GET
- name: bridge_config_chains
  endpoint:
    path: /bridge/config/chains
    method: GET
- name: bridge_config_abi
  endpoint:
    path: /bridge/config/abi
    method: GET
- name: bridge_action_status
  endpoint:
    path: /bridge/action/status
    method: GET
- name: bridge_action_history_user
  endpoint:
    path: /bridge/action/history/user/{address}
    method: GET
- name: bridge_action_history_tx
  endpoint:
    path: /bridge/action/history/tx/{txHash}
    method: GET
- name: bridge_action_history_count
  endpoint:
    path: /bridge/action/history/count/{count}
    method: GET
- name: bridge_action_encode
  endpoint:
    path: /bridge/action/encode
    method: GET
- name: bridge_action_balances
  endpoint:
    path: /bridge/action/balances
    method: GET
- name: bridge_pair
  endpoint:
    path: /bridge/config/pair
    method: GET
- name: bridge_contract
  endpoint:
    path: /bridge/config/contract
    method: GET
- name: bridge_chains
  endpoint:
    path: /bridge/config/chains
    method: GET
- name: bridge_abi
  endpoint:
    path: /bridge/config/abi
    method: GET
- name: bridge_status
  endpoint:
    path: /bridge/action/status
    method: GET
- name: bridge_history_user
  endpoint:
    path: /bridge/action/history/user/{address}
    method: GET
- name: bridge_history_tx
  endpoint:
    path: /bridge/action/history/tx/{txHash}
    method: GET
- name: bridge_history_count
  endpoint:
    path: /bridge/action/history/count/{count}
    method: GET
- name: bridge_action_encode
  endpoint:
    path: /bridge/action/encode
    method: GET
- name: bridge_balances
  endpoint:
    path: /bridge/action/balances
    method: GET
- name: bridge_pair
  endpoint:
    path: /bridge/config/pair
    method: GET
- name: bridge_contract
  endpoint:
    path: /bridge/config/contract
    method: GET
- name: bridge_chains
  endpoint:
    path: /bridge/config/chains
    method: GET
- name: bridge_abi
  endpoint:
    path: /bridge/config/abi
    method: GET
- name: bridge_action_status
  endpoint:
    path: /bridge/action/status
    method: GET
- name: bridge_action_history_user
  endpoint:
    path: /bridge/action/history/user/{address}
    method: GET
- name: bridge_action_history_tx
  endpoint:
    path: /bridge/action/history/tx/{txHash}
    method: GET
- name: bridge_action_history_count
  endpoint:
    path: /bridge/action/history/count/{count}
    method: GET
- name: bridge_action_encode
  endpoint:
    path: /bridge/action/encode
    method: GET
- name: bridge_action_balances
  endpoint:
    path: /bridge/action/balances
    method: GET
- name: bridge_pairs
  endpoint:
    path: /v3/bridge/config/pair
    method: GET
    data_selector: ''
    params: {}
- name: bridge_contract
  endpoint:
    path: /v3/bridge/config/contract
    method: GET
- name: bridge_pairs
  endpoint:
    path: /v3/bridge/config/pair
    method: GET
    data_selector: ''
    params: {}
- name: bridge_chains
  endpoint:
    path: /bridge/config/chains
    method: GET
    data_selector: array of objects
- name: bridge_contract_information
  endpoint:
    path: /v3/bridge/config/contract
    method: GET
    data_selector: ''
    params:
      chainId: ''
      contractName: ''
- name: get_abi
  endpoint:
    path: /v3/bridge/config/abi
    method: GET
    data_selector: abiData
    params: {}
- name: bridge_chains
  endpoint:
    path: /v3/bridge/config/chains
    method: GET
- name: bridge_status
  endpoint:
    path: /v3/bridge/action/status
    method: GET
- name: Get ABI
  endpoint:
    path: /v3/bridge/config/abi
    method: GET
    data_selector: response
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history/user/{address}
    method: GET
    data_selector: history
    params:
      page: page
      count: count
- name: bridge_status
  endpoint:
    path: /v3/bridge/action/status
    method: GET
    data_selector: ''
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history/tx/{txHash}
    method: GET
    data_selector: ''
    params: {}
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history/user/{address}
    method: GET
    data_selector: records
    params: {}
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history/count/{count}
    method: GET
    data_selector: response
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history/tx/{txHash}
    method: GET
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history
    method: GET
    data_selector: response
    params:
      address: ''
      txHash: ''
      count: ''
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history/count/{count}
    method: GET
    data_selector: records
    params: {}
- name: bridge_action_encode
  endpoint:
    path: /v3/bridge/action/encode
    method: GET
- name: bridge_history
  endpoint:
    path: /v3/bridge/action/history
    method: GET
    data_selector: response
    params:
      address: ''
      txHash: ''
      count: ''
- name: account_bridge_token_balances
  endpoint:
    path: /v3/bridge/action/balances
    method: GET
    data_selector: ''
- name: encode_parameters
  endpoint:
    path: /v3/bridge/action/encode
    method: GET
- name: account_bridge_token_balances
  endpoint:
    path: /v3/bridge/action/balances
    method: GET
    data_selector: ''
    params: {}
- name: holder_transfers
  endpoint:
    path: /nft/holder/{holderHash}/transfers
    method: GET
- name: holder_tokens_v2
  endpoint:
    path: /nft/holder/{holderHash}/tokens-v2
    method: GET
- name: transaction_transfers
  endpoint:
    path: /nft/transaction/{transactionHash}/transfers
    method: GET
- name: contract_transfers
  endpoint:
    path: /nft/contract/{contractHash}/transfers
    method: GET
- name: contract_instance_transfers
  endpoint:
    path: /nft/contract/{contractHash}/instances/{instanceId}/transfers
    method: GET
- name: contract_instance_info
  endpoint:
    path: /nft/contract/{contractHash}/instances/{instanceId}
    method: GET
- name: contract_instances
  endpoint:
    path: /nft/contract/{contractHash}/instances
    method: GET
- name: contract_holders
  endpoint:
    path: /nft/contract/{contractHash}/holders
    method: GET
- name: contract_counters
  endpoint:
    path: /nft/contract/{contractHash}/counters
    method: GET
- name: contract_info
  endpoint:
    path: /nft/contract/{contractHash}
    method: GET
- name: nft_holder_transfers
  endpoint:
    path: /v3/nft/holder/{holderHash}/transfers
    method: GET
    data_selector: transfers
    params:
      filter: optional
      contractHash: optional
      blockNumber: pagination
      index: pagination
- name: nft_holder_tokens_v2
  endpoint:
    path: /v3/nft/holder/{holderHash}/tokens-v2
    method: GET
- name: nft_holder_transfers
  endpoint:
    path: /nft/holder/{holderHash}/transfers
    method: GET
    data_selector: transfers
- name: nft_holder_tokens_v2
  endpoint:
    path: /nft/holder/{holderHash}/tokens-v2
    method: GET
    data_selector: tokens
- name: nft_transaction_transfers
  endpoint:
    path: /nft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
- name: nft_contract_transfers
  endpoint:
    path: /nft/contract/{contractHash}/transfers
    method: GET
    data_selector: transfers
- name: nft_contract_instance_transfers
  endpoint:
    path: /nft/contract/{contractHash}/instances/{instanceId}/transfers
    method: GET
    data_selector: transfers
- name: nft_contract_instance
  endpoint:
    path: /nft/contract/{contractHash}/instances/{instanceId}
    method: GET
    data_selector: instance
- name: nft_contract_instances
  endpoint:
    path: /nft/contract/{contractHash}/instances
    method: GET
    data_selector: instances
- name: nft_contract_holders
  endpoint:
    path: /nft/contract/{contractHash}/holders
    method: GET
    data_selector: holders
- name: nft_contract_counters
  endpoint:
    path: /nft/contract/{contractHash}/counters
    method: GET
    data_selector: counters
- name: nft_contract_info
  endpoint:
    path: /nft/contract/{contractHash}
    method: GET
    data_selector: info
- name: nft_transaction_transfers
  endpoint:
    path: /v3/nft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: nft_holder_transfers
  endpoint:
    path: /v3/nft/holder/{holderHash}/transfers
    method: GET
    data_selector: response
- name: nft_holder_tokens_v2
  endpoint:
    path: /v3/nft/holder/{holderHash}/tokens-v2
    method: GET
- name: nft_transfer_history
  endpoint:
    path: /v3/nft/contract/{contractHash}/transfers
    method: GET
    data_selector: transfers
    params:
      blockNumber: ''
      index: ''
- name: nft_transaction_transfers
  endpoint:
    path: /v3/nft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
    params:
      incremental: nextPageParams
- name: nft_instance_transfer_history
  endpoint:
    path: /v3/nft/contract/{contractHash}/instances/{instanceId}/transfers
    method: GET
    params:
      blockNumber: int32
      index: int32
      tokenId: int32
- name: nft_instance
  endpoint:
    path: /v3/nft/contract/{contractHash}/instances/{instanceId}
    method: GET
- name: nft_transfer_history
  endpoint:
    path: /v3/nft/contract/{contractHash}/transfers
    method: GET
    data_selector: transfers
    params:
      incremental: blockNumber
- name: nft_instances
  endpoint:
    path: /v3/nft/contract/{contractHash}/instances
    method: GET
- name: nft_instance_transfer_history
  endpoint:
    path: /v3/nft/contract/{contractHash}/instances/{instanceId}/transfers
    method: GET
    params: {}
- name: nft_holders
  endpoint:
    path: /v3/nft/contract/{contractHash}/holders
    method: GET
    data_selector: ''
- name: nft_instance
  endpoint:
    path: /v3/nft/contract/{contractHash}/instances/{instanceId}
    method: GET
    data_selector: details
    params: {}
- name: nft_contract_counters
  endpoint:
    path: /v3/nft/contract/{contractHash}/counters
    method: GET
    data_selector: null
    params: {}
- name: nft_instances
  endpoint:
    path: /v3/nft/contract/{contractHash}/instances
    method: GET
- name: nft_contract_info
  endpoint:
    path: /v3/nft/contract/{contractHash}
    method: GET
- name: nft_holders
  endpoint:
    path: /v3/nft/contract/{contractHash}/holders
    method: GET
- name: nft_contract_counters
  endpoint:
    path: /v3/nft/contract/{contractHash}/counters
    method: GET
- name: nft_contract_info
  endpoint:
    path: /v3/nft/contract/{contractHash}
    method: GET
- name: holder_balances
  endpoint:
    path: /ft/holder/balances
    method: POST
    data_selector: balances
- name: holder_transfers
  endpoint:
    path: /ft/holder/{holderHash}/transfers
    method: GET
    data_selector: transfers
- name: holder_tokens
  endpoint:
    path: /ft/holder/{holderHash}/tokens
    method: GET
    data_selector: tokens
- name: transaction_transfers
  endpoint:
    path: /ft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
- name: contract_transfers
  endpoint:
    path: /ft/contract/{contractHash}/transfers
    method: GET
    data_selector: transfers
- name: contract_price
  endpoint:
    path: /ft/contract/{contractHash}/price
    method: GET
    data_selector: price
- name: contract_holders
  endpoint:
    path: /ft/contract/{contractHash}/holders
    method: GET
    data_selector: holders
- name: contract_counters
  endpoint:
    path: /ft/contract/{contractHash}/counters
    method: GET
    data_selector: counters
- name: contract_info
  endpoint:
    path: /ft/contract/{contractHash}
    method: GET
    data_selector: contract_info
- name: FT transfer history
  endpoint:
    path: /v3/ft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
    params:
      incremental: blockNumber
- name: token_transfer_history
  endpoint:
    path: /v3/ft/contract/{contractHash}/transfers
    method: GET
- name: token_price
  endpoint:
    path: /v3/ft/contract/{contractHash}/price
    method: GET
- name: holder_balances
  endpoint:
    path: /ft/holder/balances
    method: POST
- name: holder_transfers
  endpoint:
    path: /ft/holder/{holderHash}/transfers
    method: GET
- name: holder_tokens
  endpoint:
    path: /ft/holder/{holderHash}/tokens
    method: GET
- name: transaction_transfers
  endpoint:
    path: /ft/transaction/{transactionHash}/transfers
    method: GET
- name: contract_transfers
  endpoint:
    path: /ft/contract/{contractHash}/transfers
    method: GET
- name: contract_price
  endpoint:
    path: /ft/contract/{contractHash}/price
    method: GET
- name: contract_holders
  endpoint:
    path: /ft/contract/{contractHash}/holders
    method: GET
- name: contract_counters
  endpoint:
    path: /ft/contract/{contractHash}/counters
    method: GET
- name: contract_info
  endpoint:
    path: /ft/contract/{contractHash}
    method: GET
- name: token_holders
  endpoint:
    path: /v3/ft/contract/{contractHash}/holders
    method: GET
    data_selector: holders
    params:
      addressHash: ''
      itemsCount: ''
      value: ''
- name: ft_transaction_transfer_history
  endpoint:
    path: /v3/ft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
    params:
      pagination: nextPageParams
- name: token_contract_counters
  endpoint:
    path: /v3/ft/contract/{contractHash}/counters
    method: GET
- name: token_transfer_history
  endpoint:
    path: /v3/ft/contract/{contractHash}/transfers
    method: GET
- name: ft_contract
  endpoint:
    path: /v3/ft/contract/{contractHash}
    method: GET
    data_selector: response
    params: {}
- name: token_price
  endpoint:
    path: /v3/ft/contract/{contractHash}/price
    method: GET
- name: token_holders
  endpoint:
    path: /v3/ft/contract/{contractHash}/holders
    method: GET
- name: ft_balances
  endpoint:
    path: /v3/ft/holder/balances
    method: POST
    data_selector: response
    params: {}
- name: token_contract_counters
  endpoint:
    path: /v3/ft/contract/{contractHash}/counters
    method: GET
- name: FT_contract_information
  endpoint:
    path: /v3/ft/contract/{contractHash}
    method: GET
- name: ft_balances
  endpoint:
    path: /v3/ft/holder/balances
    method: POST
- name: holder_ft_transfer_history
  endpoint:
    path: /v3/ft/holder/{holderHash}/transfers
    method: GET
- name: ft_holder_tokens
  endpoint:
    path: /v3/ft/holder/{holderHash}/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: holder_ft_transfer_history
  endpoint:
    path: /v3/ft/holder/{holderHash}/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: bridge_pairs
  endpoint:
    path: /v3/bridge/config/pair
    method: GET
    data_selector: response
- name: ft_holder_tokens
  endpoint:
    path: /v3/ft/holder/{holderHash}/tokens
    method: GET
    data_selector: itemsCount
- name: bridge_status
  endpoint:
    path: /v3/bridge/action/status
    method: GET
    data_selector: status
    params: {}
- name: bridge_pairs
  endpoint:
    path: /v3/bridge/config/pair
    method: GET
    data_selector: response
- name: nft_holder_transfers
  endpoint:
    path: /v3/nft/holder/{holderHash}/transfers
    method: GET
    data_selector: transfers
    params:
      filter: optional
      contractHash: optional
      blockNumber: optional
      index: optional
- name: bridge_status
  endpoint:
    path: /v3/bridge/action/status
    method: GET
    data_selector: response
- name: nft_transaction_transfers
  endpoint:
    path: /v3/nft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: nft_holder_transfers
  endpoint:
    path: /v3/nft/holder/{holderHash}/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: nft_transfer_history
  endpoint:
    path: /v3/nft/contract/{contractHash}/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: nft_transaction_transfers
  endpoint:
    path: /v3/nft/transaction/{transactionHash}/transfers
    method: GET
- name: ft_transaction_transfers
  endpoint:
    path: /v3/ft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
- name: nft_transfer_history
  endpoint:
    path: /v3/nft/contract/{contractHash}/transfers
    method: GET
    data_selector: transfers
    params:
      incremental: blockNumber
- name: token_transfer_history
  endpoint:
    path: /v3/ft/contract/{contractHash}/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: ft_transaction_transfer_history
  endpoint:
    path: /v3/ft/transaction/{transactionHash}/transfers
    method: GET
    data_selector: transfers
- name: ft_balances
  endpoint:
    path: /v3/ft/holder/balances
    method: POST
- name: token_transfer_history
  endpoint:
    path: /v3/ft/contract/{contractHash}/transfers
    method: GET
- name: ft_balances
  endpoint:
    path: /v3/ft/holder/balances
    method: POST
notes:
- To enhance your experience with our API, we've implemented a Single Sign-On (SSO)
  system, starting from v3.
- Upon successful login, you'll be redirected to a swagger documentation page where
  you can obtain an API token directly from the login server.
- To seamlessly integrate with our APIs, we request that you include your token in
  the Authorization Header.
- Verification involves Single Sign-On (SSO) login and utilizing the provided API
  token
- Starting from v3, verification involves Single Sign-On (SSO) login and utilizing
  the provided API token to access our APIs.
errors:
- 'Rate limit exceeded: 1,500 API calls every 5 minutes'
- 1,500 API calls every 5 minutes
- '400: Bad Request - Your request is invalid. Check the usage instructions and the
  returned message.'
- '401: Unauthorized - You did not provide the API token. Check the Authorization
  page for detailed instructions.'
- '403: Forbidden - Your API token is invalid. Try refreshing your key if this error
  continues.'
- '404: Not Found - No data was found for your request. Try again a moment later.
  Reach out to us if this continues.'
- '422: Unprocessable Entity - Your request is unprocessable. Check your request,
  especially the data type and format of your parameter values.'
- '500: Internal Server Error - We''re unable to process your request right now. Get
  in touch with us if you see this.'
- '504: Gateway Timeout - We''re currently unable to process your request. Please
  contact us if this persists.'
- 400 Bad request.
- 401 Unauthorized.
- 403 Forbidden.
- 404 Not found.
- 422 Unprocessable entity.
- 500 Internal server error.
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.bifrostnetwork.com
  headers: {}
source_metadata: null
