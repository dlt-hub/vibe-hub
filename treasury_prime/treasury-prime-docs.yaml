resources:
- name: simulation
  endpoint:
    path: /simulation
    method: POST
    data_selector: null
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: data
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: data
    params: {}
- name: person_application
  endpoint:
    path: /apply/person_application
    method: POST
    data_selector: id
- name: business_application
  endpoint:
    path: /apply/business_application
    method: POST
    data_selector: id
- name: deposit
  endpoint:
    path: /apply/deposit
    method: POST
    data_selector: id
- name: account_application
  endpoint:
    path: /apply/account_application
    method: POST
    data_selector: id
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: records
- name: account_product
  endpoint:
    path: /account_product
    method: GET
    data_selector: records
- name: person
  endpoint:
    path: /person
    method: GET
    data_selector: records
- name: business
  endpoint:
    path: /business
    method: GET
    data_selector: records
- name: account_application
  endpoint:
    path: /apply/account_application
    method: POST
    data_selector: account_application
    params: {}
- name: account_product
  endpoint:
    path: /account_product
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /person/:id
    method: GET
    data_selector: person
    params: {}
- name: business
  endpoint:
    path: /business/:id
    method: GET
    data_selector: business
    params: {}
- name: account
  endpoint:
    path: /account/:account_id
    method: GET
    data_selector: account
    params: {}
- name: person_application
  endpoint:
    path: /apply/person_application
    method: POST
    data_selector: null
    params: {}
- name: additional_person_application
  endpoint:
    path: /apply/additional_person_application
    method: POST
    data_selector: null
    params: {}
- name: issue_card
  endpoint:
    path: /card
    method: POST
    data_selector: null
    params: {}
- name: account
  endpoint:
    path: /account
    method: PATCH
    data_selector: lock
    params: {}
- name: close_account
  endpoint:
    path: /account
    method: PATCH
    data_selector: null
    params:
      status: close_pending
- name: tax_document
  endpoint:
    path: /account/{account_id}/tax_document
    method: POST
    data_selector: tax_document
    params: {}
- name: tax_document_status
  endpoint:
    path: /account/{account_id}/tax_document/{id}
    method: GET
    data_selector: tax_document
    params: {}
- name: update_tax_document
  endpoint:
    path: /account/{account_id}/tax_document/{id}
    method: PATCH
    data_selector: tax_document
    params: {}
- name: delete_tax_document
  endpoint:
    path: /account/{account_id}/tax_document/{id}
    method: DELETE
    data_selector: tax_document
    params: {}
- name: category_transaction
  endpoint:
    path: /transaction/{id}
    method: PATCH
    data_selector: transaction
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: data
- name: cardproduct
  endpoint:
    path: /cardproduct
    method: GET
    data_selector: data
- name: person
  endpoint:
    path: /account/:id
    method: GET
    data_selector: person_ids
- name: card
  endpoint:
    path: /card
    method: POST
    data_selector: card
    params: {}
- name: activate_card
  endpoint:
    path: /card/:id
    method: PATCH
    data_selector: status
- name: card
  endpoint:
    path: /card
    method: PATCH
    data_selector: ''
    params: {}
- name: card
  endpoint:
    path: /card/{id}
    method: PATCH
    data_selector: null
    params: {}
- name: card_event
  endpoint:
    path: /card_event
    method: POST
    data_selector: event
    params: {}
- name: force_capture
  endpoint:
    path: /force-capture
    method: GET
    data_selector: records
- name: auth_clear_request
  endpoint:
    path: /auth-clear-request
    method: GET
    data_selector: records
- name: auth_clear_adjustment
  endpoint:
    path: /auth-clear-adjustment
    method: GET
    data_selector: records
- name: auth_clear_reversal
  endpoint:
    path: /auth-clear-reversal
    method: GET
    data_selector: records
- name: balance_inquiry_request
  endpoint:
    path: /balance-inquiry-request
    method: GET
    data_selector: records
- name: chargeback_request
  endpoint:
    path: /chargeback-request
    method: GET
    data_selector: records
- name: chargeback_reversal
  endpoint:
    path: /chargeback-reversal
    method: GET
    data_selector: records
- name: account_verification_request
  endpoint:
    path: /account-verification-request
    method: GET
    data_selector: records
- name: card_events
  endpoint:
    path: /reference/card-events
    method: GET
    data_selector: records
- name: card_event_auth_request
  endpoint:
    path: /reference/card-auth-loop-endpoint
    method: POST
    data_selector: auth-request
- name: auth-clear-request
  endpoint:
    path: /atm/transactions/auth-clear-request
    method: POST
    data_selector: transactions
- name: debit-transaction
  endpoint:
    path: /atm/transactions/debit
    method: POST
    data_selector: transactions
- name: card
  endpoint:
    path: /card
    method: GET
    data_selector: data
    params:
      person_id: psn_qda4pJZfpzn4f
- name: add_card_to_wallet
  endpoint:
    path: /card/:card_id/digital_wallet_token/apple_pay
    method: POST
    data_selector: card_id
- name: token_service_provider
  endpoint:
    path: /digital-wallet-notifications/token_service_provider
    method: GET
    data_selector: token_service_provider
    params: {}
- name: card_simulation
  endpoint:
    path: /simulation
    method: POST
    data_selector: data
- name: account_transaction
  endpoint:
    path: /account/{account_id}/transaction
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: data
- name: book
  endpoint:
    path: /book
    method: POST
    data_selector: records
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: event
- name: fednow
  endpoint:
    path: /fednow
    method: GET
- name: transaction
  endpoint:
    path: /transaction
    method: GET
- name: incoming_ach
  endpoint:
    path: /incoming_ach
    method: GET
- name: incoming_wire
  endpoint:
    path: /incoming_wire
    method: GET
- name: counterparty
  endpoint:
    path: /counterparty
    method: POST
    data_selector: null
    params: {}
- name: ach
  endpoint:
    path: /ach
    method: POST
    data_selector: null
    params: {}
- name: check_deposits
  endpoint:
    path: /check_deposits
    method: POST
    data_selector: records
    params: {}
- name: check_deposit_status
  endpoint:
    path: /check_deposits/{deposit_id}
    method: GET
    data_selector: records
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: status
    params: {}
- name: ach
  endpoint:
    path: /ach
    method: POST
    data_selector: response
    params: {}
- name: ach
  endpoint:
    path: /ach
    method: GET
    data_selector: data
- name: simulation
  endpoint:
    path: /simulation
    method: POST
    data_selector: simulation
- name: ach
  endpoint:
    path: /ach
    method: POST
    data_selector: userdata
- name: ACHs
  endpoint:
    path: /reference/get_ach
    method: GET
- name: Create ACH
  endpoint:
    path: /reference/post_ach
    method: POST
- name: Fetch ACH
  endpoint:
    path: /reference/get_ach-id
    method: GET
- name: Update ACH
  endpoint:
    path: /reference/patch_ach-id
    method: PATCH
- name: card_simulation
  endpoint:
    path: /simulation
    method: POST
    data_selector: data
- name: card_controls
  endpoint:
    path: /card/card_zuhqnmz7e085
    method: PATCH
    data_selector: card_controls
- name: card_event
  endpoint:
    path: /reference/card-event
    method: GET
- name: transaction
  endpoint:
    path: /transaction
    method: GET
    data_selector: data
    params: {}
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: ''
    params: {}
- name: update_check_status
  endpoint:
    path: /check/ch_1234567890
    method: PATCH
    data_selector: ''
    params: {}
- name: statement
  endpoint:
    path: /account/{account_id}/statement
    method: GET
    data_selector: url
    params:
      date: 2022-07
- name: generate_statement
  endpoint:
    path: /account/{account_id}/statement
    method: POST
- name: statement_config
  endpoint:
    path: /statement_config
    method: GET
    data_selector: data
    params: {}
- name: fetch_statement
  endpoint:
    path: /account/{id}/statement
    method: GET
- name: digital_wallet_token_simulation
  endpoint:
    path: /simulation
    method: POST
    data_selector: simulation
    params: {}
- name: simulation
  endpoint:
    path: /simulation
    method: POST
    data_selector: simulation
    params: {}
- name: wire
  endpoint:
    path: /wire
    method: POST
    data_selector: wire
    params: {}
- name: incoming_wire
  endpoint:
    path: /incoming_wire
    method: GET
    data_selector: incoming_wire
    params: {}
- name: wire
  endpoint:
    path: /wire
    method: GET
    data_selector: data
    params: {}
- name: wire
  endpoint:
    path: /wire
    method: POST
    data_selector: null
    params: {}
- name: wire_transfer
  endpoint:
    path: /wire/{id}
    method: GET
    data_selector: object
- name: wire
  endpoint:
    path: /wire/{id}
    method: PATCH
    data_selector: updated
    params: {}
- name: network_transfer
  endpoint:
    path: /v2/network_transfer
    method: POST
    data_selector: v2_network_transfer
    params: {}
- name: deposit
  endpoint:
    path: /apply/deposit
    method: GET
    data_selector: data
    params: {}
- name: create_deposit
  endpoint:
    path: /apply/deposit
    method: POST
    data_selector: object
    params: {}
- name: fetch_deposit
  endpoint:
    path: /apply/deposit/{id}
    method: GET
    data_selector: apply.deposit
    params: {}
- name: business_application
  endpoint:
    path: /apply/business_application/{id}
    method: PATCH
- name: book_transfer
  endpoint:
    path: /book
    method: GET
    data_selector: data
    params: {}
- name: book_transfer
  endpoint:
    path: /book
    method: POST
    data_selector: amount
    params: {}
- name: book_transfer
  endpoint:
    path: /book/{id}
    method: GET
    data_selector: object
- name: book_transfer
  endpoint:
    path: /book/{id}
    method: PATCH
    data_selector: userdata
    params: {}
- name: ach
  endpoint:
    path: /ach/{id}
    method: PATCH
    data_selector: ach
    params: {}
notes:
- Basic authentication header of the form `Basic <encoded-value>`
- The API is served exclusively over HTTPS.
- APIs require API key for authentication.
- Generating the 1099-INT does not automatically cause it to be filed with the appropriate
  tax authorities.
- If a corrected 1099-INT is needed, set the is_correction parameter to true.
- Printing a card takes between 1-3 business days from the time it is received by
  the card printer.
- Card activation, suspension, and termination are performed using the Treasury Prime
  API.
- Some objects may return nulls in deeply nested fields.
- Card Events are dispatched via webhook callback to provide notification that a specific
  type of message was received from the card network.
- Declined card transactions are represented as Card Events with a status of declined.
- You have 1500 milliseconds to respond with a 200 (to approve the request) or a 402
  (to reject the request).
- If you do not respond, the default_response set in the Card Auth Loop Endpoint will
  take effect.
- Every time you wish to use Marqeta.js to retrieve a Marqeta-issued, virtual card’s
  sensitive info, you must request a new client access token from the Marqeta platform.
- Each token expires after five minutes.
- Testing in production involves issuing real cards (virtual, physical, or both) and
  initiating transactions.
- Invoice account numbers are routing aliases, not independent accounts.
- Your bank must have the invoice_account_allowed flag enabled.
- The integration with Plaid does not currently support the creation of counterparties
  used for sending wires.
- Image formats supported are JPEG and PNG for check deposits.
- Requests made to the sandbox environment will never hit banking networks, meaning
  they can’t affect your account balances and will never incur costs.
- The idempotency key itself may be any arbitrary string. Choosing a large random
  string, such as a UUID, is a good idea.
- To make a request idempotent, generate an idempotency key and send it in the X-Idempotency-Key
  header.
- Returns a list of objects with the optional filtering parameters applied.
- API returns lists in reverse chronological order, displaying the most recently created
  items first.
- Card Controls may be configured to restrict the use of a debit card to a particular
  category of vendor, or to limit the amount of money spent or withdrawn in a particular
  time period.
- Basic authentication header of the form `Basic <encoded-value>`, where `<encoded-value>`
  is the base64-encoded string `username:password`.
- 'Checks in sandbox can only be updated to one of two statuses via the API: canceled
  or stop_payment_pending.'
- Checks can only be canceled within 1 hour of it being created while it is in a pending
  status.
- Authorization is required in the form of Basic authentication header.
- Authorization is required in the form of a Basic authentication header.
- All wires created in the sandbox environment are moved through the normal wire workflow,
  eventually ending with the status sent.
- Authorization header must be in the form Basic <encoded-value>
- Authorization is required in the form of Basic authentication
- Authorization requires a Basic authentication header of the form 'Basic <encoded-value>'
- Authorization header required in the form 'Basic <encoded-value>'
errors:
- '429: Too Many Requests - your application should implement basic backoff and retry
  logic.'
- '401 Unauthorized: Check API key and permissions.'
- '403 - forbidden: The account is locked.'
- '403 - Forbidden: The account is closed.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API key or permissions.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Card Not Active: This card has not yet been activated.'
- 'Card Expired: This card has expired.'
- '402: Payment Required'
- 'Timeout: If system goes offline and default_response is ''denied'', every card
  swipe gets rejected.'
- '401 Unauthorized: Recheck API Key'
- '404 Not Found: Check the endpoint path'
- 'Invalid Image Quality: The image does not meet the required resolution or clarity.'
- 'Duplicate Check: The same check has already been submitted and processed.'
- 'Invalid Account: The account ID provided does not exist or is incorrect.'
- '429: Too Many Requests - your application should implement backoff and retry logic'
- '502: Bad Gateway - indicates that the bank’s core system is offline due to maintenance'
- Invalid simulation request or simulation not implemented
- 'Simulation not implemented for issuer: marqeta, event: card_event.not_implemented_event'
- Statement with date 2322-01 not found.
- '401 Unauthorized: Recheck Basic authentication header'
- Simulation not implemented for digital_wallet_token.not_implemented_event
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck Basic authentication credentials'
- '200 - application/json: The apply.deposit created'
- '401 Unauthorized: Recheck authentication credentials'
auth_info:
  mentioned_objects:
  - Basic authentication
client:
  base_url: https://api.treasuryprime.com
  auth:
    type: basicAuth
  headers:
    Content-Type: application/json
source_metadata: null
