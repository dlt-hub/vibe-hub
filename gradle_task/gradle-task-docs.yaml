resources:
- name: Upgrade instructions
  endpoint:
    path: /userguide/gradle_wrapper.html
    method: GET
    data_selector: instructions
    params: {}
- name: Compatibility notes
  endpoint:
    path: /userguide/compatibility.html
    method: GET
    data_selector: compatibility
    params: {}
- name: Task graph visualization
  endpoint:
    path: /userguide/build_lifecycle.html#task_graph
    method: GET
    data_selector: visualization
    params: {}
- name: Project Report
  endpoint:
    path: /userguide/project_report_plugin.html
    method: GET
    data_selector: project_report
    params: {}
- name: Configuration Cache
  endpoint:
    path: /userguide/configuration_cache.html
    method: GET
    data_selector: configuration_cache
    params: {}
- name: bills_of_materials
  endpoint:
    path: /migmvn/using_boms
    method: GET
    data_selector: dependencies
- name: multi_module_builds
  endpoint:
    path: /migmvn/multimodule_builds
    method: GET
    data_selector: modules
- name: sharing_versions
  endpoint:
    path: /migmvn/sub/sharing-versions
    method: GET
    data_selector: versions
- name: profiles_and_properties
  endpoint:
    path: /migmvn/profiles_and_properties
    method: GET
    data_selector: profiles
- name: filtering_resources
  endpoint:
    path: /migmvn/filtering_resources
    method: GET
    data_selector: resources
- name: integration_tests
  endpoint:
    path: /migmvn/integration_tests
    method: GET
    data_selector: tests
- name: common_plugins
  endpoint:
    path: /migmvn/common_plugins
    method: GET
    data_selector: plugins
- name: ant_goals
  endpoint:
    path: /ant_goals
    method: GET
    data_selector: goals
- name: unnecessary_plugins
  endpoint:
    path: /migmvn/unnecessary_plugins
    method: GET
    data_selector: plugins
- name: custom_plugins
  endpoint:
    path: /migmvn/custom_plugins
    method: GET
    data_selector: plugins
- name: gradle-wrapper-jar
  endpoint:
    path: gradle/wrapper/gradle-wrapper.jar
    method: GET
    data_selector: file
    params: {}
- name: gradle-wrapper-properties
  endpoint:
    path: gradle/wrapper/gradle-wrapper.properties
    method: GET
    data_selector: file
    params: {}
- name: gradlew
  endpoint:
    path: gradlew
    method: GET
    data_selector: file
    params: {}
- name: gradlew-bat
  endpoint:
    path: gradlew.bat
    method: GET
    data_selector: file
    params: {}
- name: root-project
  endpoint:
    path: rootProject.name
    method: SET
    data_selector: root-project
- name: build_script
  endpoint:
    path: /build.gradle
    method: GET
    data_selector: script
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: application_plugin
  endpoint:
    path: application_plugin.html#application_plugin
    method: GET
- name: java_plugin
  endpoint:
    path: java_plugin.html#java_plugin
    method: GET
- name: dependency_management_basics
  endpoint:
    path: dependency_management_basics.html#dependency_management_basics
    method: GET
- name: dependencies
  endpoint:
    path: /app/dependencies
    method: GET
    data_selector: runtimeClasspath
    params: {}
- name: java-library
  endpoint:
    path: /java-library
    method: GET
- name: google-services
  endpoint:
    path: /com.google.gms.google-services
    method: GET
- name: gradle-bintray
  endpoint:
    path: /com.jfrog.bintray
    method: GET
- name: Build Scan Service
  endpoint:
    path: /scans.gradle.com
    method: GET
    data_selector: metadata
    params: {}
- name: build
  endpoint:
    path: /distributions/gradle-8.13-bin.zip
    method: GET
    data_selector: downloads
- name: copyTask
  endpoint:
    path: /tasks/register/copyTask
    method: POST
    data_selector: records
- name: dependencies
  endpoint:
    path: /app/dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: MavenPublication
  endpoint:
    path: /publishing/publications/maven
    method: POST
    data_selector: publications
    params: {}
- name: buildSrc
  endpoint:
    path: /buildSrc
    method: GET
    data_selector: shared-build-conventions.gradle
    params: {}
- name: build-logic
  endpoint:
    path: /build-logic
    method: GET
    data_selector: shared-build-conventions.gradle.kts
    params: {}
- name: plugins
  endpoint:
    path: /plugins
    method: GET
    data_selector: plugins
    params: {}
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: repositories
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: plugins
  endpoint:
    path: /plugins
    method: GET
- name: repositories
  endpoint:
    path: /repositories
    method: GET
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: removeOutput
  endpoint:
    path: /tasks/register/Delete
    method: POST
    data_selector: outputs
    params: {}
- name: hello
  endpoint:
    path: /tasks/register/HelloTask
    method: POST
    data_selector: outputs
    params: {}
- name: CreateAFileTask
  endpoint:
    path: /tasks/register/CreateAFileTask
    method: POST
    data_selector: outputs
    params: {}
- name: GreetingTask
  endpoint:
    path: /tasks/register/GreetingTask
    method: POST
    data_selector: outputs
    params: {}
- name: intro
  endpoint:
    path: /tasks/register/intro
    method: POST
    data_selector: outputs
    params: {}
- name: taskX
  endpoint:
    path: /tasks/register/taskX
    method: POST
    data_selector: outputs
    params: {}
- name: taskY
  endpoint:
    path: /tasks/register/taskY
    method: POST
    data_selector: outputs
    params: {}
- name: hello
  endpoint:
    path: tasks/register/hello
    method: POST
    data_selector: message
    params: {}
- name: copyTask
  endpoint:
    path: tasks/register/copyTask
    method: POST
    data_selector: files
    params:
      source: source
      target: target
      include: '*.war'
- name: removeOutput
  endpoint:
    path: /tasks/register/RemoveOutput
    method: POST
    data_selector: tasks
    params: {}
- name: hello
  endpoint:
    path: /tasks/register/HelloTask
    method: POST
    data_selector: tasks
    params: {}
- name: CreateAFileTask
  endpoint:
    path: /tasks/register/CreateAFileTask
    method: POST
    data_selector: tasks
    params: {}
- name: GreetingTask
  endpoint:
    path: /tasks/register/GreetingTask
    method: POST
    data_selector: tasks
    params: {}
- name: taskX
  endpoint:
    path: /tasks/register/taskX
    method: POST
    data_selector: tasks
    params: {}
- name: taskY
  endpoint:
    path: /tasks/register/taskY
    method: POST
    data_selector: tasks
    params: {}
- name: script_plugins
  endpoint:
    path: /sec/build_script_plugins
    method: GET
    data_selector: plugins
    params: {}
- name: precompiled_script_plugins
  endpoint:
    path: /sec/precompile_script_plugin
    method: GET
    data_selector: plugins
    params: {}
- name: convention_plugins
  endpoint:
    path: /sec/convention_plugins
    method: GET
    data_selector: plugins
    params: {}
- name: binary_plugins
  endpoint:
    path: /sec/custom_plugins_standalone_project
    method: GET
    data_selector: plugins
    params: {}
- name: project_vs_settings_vs_init_plugins
  endpoint:
    path: /project_vs_settings_vs_init_plugins
    method: GET
    data_selector: plugins
    params: {}
- name: createMyFileTaskInConventionPlugin
  endpoint:
    path: createMyFileTaskInConventionPlugin
    method: register
    data_selector: tasks
    params: {}
- name: createFileTaskFromBinaryPlugin
  endpoint:
    path: createFileTaskFromBinaryPlugin
    method: register
    data_selector: tasks
    params: {}
- name: app
  endpoint:
    path: /app
    method: GET
    data_selector: records
    params: {}
- name: authoring-tutorial
  endpoint:
    path: settings.gradle.kts
    method: GET
- name: app
  endpoint:
    path: app/build.gradle.kts
    method: GET
- name: lib
  endpoint:
    path: /gradle/license-plugin
    method: GET
    data_selector: plugin
- name: app
  endpoint:
    path: /app
    method: GET
- name: lib
  endpoint:
    path: /lib
    method: GET
- name: greeting
  endpoint:
    path: /tasks/greeting
    method: GET
    data_selector: prints
    params: {}
- name: LicenseTask
  endpoint:
    path: gradle/license-plugin/plugin/src/main/kotlin/license/LicensePlugin.kt
    method: POST
    data_selector: licenseFilePath
    params: {}
- name: license
  endpoint:
    path: /license
    method: GET
    data_selector: header
    params: {}
- name: copy_assets
  endpoint:
    path: src/main/webapp
    method: Copy
    data_selector: files
    params: {}
- name: nested_specs
  endpoint:
    path: src/dist
    method: Copy
    data_selector: files
    params: {}
- name: copyTaskWithPatterns
  endpoint:
    path: /tasks/register/copyTaskWithPatterns
    method: GET
    data_selector: records
    params: {}
- name: filter
  endpoint:
    path: /tasks/register/filter
    method: GET
    data_selector: records
    params: {}
- name: permissions
  endpoint:
    path: /tasks/register/Copy
    method: POST
    data_selector: tasks
    params: {}
- name: moveFile
  endpoint:
    path: /tasks/register/Copy
    method: POST
    data_selector: tasks
    params: {}
- name: cleanTempFiles
  endpoint:
    path: /tasks/register/Delete
    method: POST
    data_selector: tasks
    params: {}
- name: packageDistribution
  endpoint:
    path: /tasks/register/Zip
    method: POST
    data_selector: tasks
    params: {}
- name: myZip
  endpoint:
    path: /tasks/register/Zip
    method: POST
    data_selector: tasks
    params: {}
- name: archive_file_tree
  endpoint:
    path: /sec:archive_contents
    method: GET
    data_selector: archive_file_tree_data
- name: reproducible_archives
  endpoint:
    path: /sec:reproducible_archives
    method: GET
    data_selector: reproducible_archives_data
- name: permissions_inside_archives
  endpoint:
    path: /sec:permissions_inside_archives
    method: GET
    data_selector: permissions_inside_archives_data
- name: initialization_phase
  endpoint:
    path: /initialization
    method: GET
    data_selector: projects
    params: {}
- name: configuration_phase
  endpoint:
    path: /configuration
    method: GET
    data_selector: tasks
    params: {}
- name: execution_phase
  endpoint:
    path: /execution
    method: GET
    data_selector: executed_tasks
    params: {}
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: repositories
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: multi_project_layout
  endpoint:
    path: /multi_project_layout
    method: GET
    data_selector: projects
    params: {}
- name: subprojects
  endpoint:
    path: /subprojects
    method: GET
    data_selector: subprojects
    params: {}
- name: multi_project_layout
  endpoint:
    path: /multi_project_layout
    method: GET
    data_selector: projects
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: scripts
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: scripts
- name: shared
  endpoint:
    path: /shared
    method: GET
    data_selector: scripts
- name: project_descriptor
  endpoint:
    path: /settings.gradle.kts
    method: GET
    data_selector: projects
    params: {}
- name: subproject_inclusion
  endpoint:
    path: /settings.gradle.kts
    method: GET
    data_selector: subprojects
    params: {}
- name: multi_project_layout
  endpoint:
    path: /multi_project_layout
    method: GET
    data_selector: projects
- name: my-composite
  endpoint:
    path: /my-composite
    method: GET
    data_selector: builds
    params: {}
- name: my-app
  endpoint:
    path: /my-app
    method: GET
    data_selector: apps
    params: {}
- name: my-utils
  endpoint:
    path: /my-utils
    method: GET
    data_selector: utils
    params: {}
- name: settings
  endpoint:
    path: /settings.gradle
    method: GET
- name: build
  endpoint:
    path: /build.gradle
    method: GET
- name: multi_project_layout
  endpoint:
    path: /multi_project_layout
    method: GET
- name: tasks
  endpoint:
    path: /gradlew :app:tasks
    method: GET
    data_selector: tasks
    params: {}
- name: myCopy
  endpoint:
    path: tasks/register/myCopy
    method: register
    data_selector: tasks
    params: {}
- name: hello
  endpoint:
    path: tasks/register/hello
    method: register
    data_selector: tasks
    params: {}
- name: incrementalReverse
  endpoint:
    path: /incrementalReverse
    method: register
    data_selector: inputs
    params: {}
- name: updateInputs
  endpoint:
    path: /updateInputs
    method: register
    data_selector: inputs
    params: {}
- name: removeInput
  endpoint:
    path: /removeInput
    method: register
    data_selector: inputs
    params: {}
- name: removeOutput
  endpoint:
    path: /removeOutput
    method: register
    data_selector: inputs
    params: {}
- name: processUrl
  endpoint:
    path: /processUrl
    method: GET
- name: greeting_task
  endpoint:
    path: /tasks/register/greeting
    method: POST
    data_selector: message
    params: {}
- name: generate_source_task
  endpoint:
    path: /tasks/register/generate
    method: POST
    data_selector: configuration
    params: {}
- name: CreateMD5
  endpoint:
    path: /buildSrc/src/main/java/CreateMD5.java
    method: CREATE
    data_selector: source files
    params: {}
- name: GenerateMD5
  endpoint:
    path: /buildSrc/src/main/java/GenerateMD5.java
    method: CREATE
    data_selector: MD5 hashes
    params: {}
- name: script_plugins
  endpoint:
    path: /sec:build_script_plugins
    method: GET
    data_selector: script_plugins
- name: precompiled_script_plugins
  endpoint:
    path: /sec:precompile_script_plugin
    method: GET
    data_selector: precompiled_script_plugins
- name: binary_plugins
  endpoint:
    path: /sec:custom_plugins_standalone_project
    method: GET
    data_selector: binary_plugins
- name: convention_plugins
  endpoint:
    path: /sec:convention_plugins
    method: GET
    data_selector: convention_plugins
- name: project_plugins
  endpoint:
    path: /project_vs_settings_vs_init_plugins
    method: GET
    data_selector: project_plugins
- name: script_plugins
  endpoint:
    path: /plugins/script
    method: GET
- name: precompiled_script_plugins
  endpoint:
    path: /plugins/precompiled_script
    method: GET
- name: binary_plugins
  endpoint:
    path: /plugins/binary
    method: GET
- name: gradle_plugin
  endpoint:
    path: /plugin/com.gradle.plugin-publish
    method: GET
- name: Properties
  endpoint:
    path: /understanding/properties
    method: GET
    data_selector: properties
- name: Providers
  endpoint:
    path: /understanding/providers
    method: GET
    data_selector: providers
- name: Chaining Providers
  endpoint:
    path: /chaining/providers
    method: GET
    data_selector: chaining
- name: Using Gradle Managed Properties
  endpoint:
    path: /managed/properties
    method: GET
    data_selector: managed_properties
- name: Mutable Managed Properties
  endpoint:
    path: /mutable/managed/properties
    method: GET
    data_selector: mutable_managed_properties
- name: Read-only Managed Properties
  endpoint:
    path: /read-only/managed/properties
    method: GET
    data_selector: read_only_managed_properties
- name: Using Java Bean Properties
  endpoint:
    path: /java/bean/properties
    method: GET
    data_selector: java_bean_properties
- name: web_server
  endpoint:
    path: /services/data/vXX.X/sobjects/WebServer
    method: GET
- name: download
  endpoint:
    path: /services/data/vXX.X/sobjects/Download
    method: POST
- name: SoundPlay
  endpoint:
    path: /sample/sound/SoundPlay
    method: GET
    data_selector: parameters
    params: {}
- name: SoundFeedbackPlugin
  endpoint:
    path: /sample/sound/SoundFeedbackPlugin
    method: GET
    data_selector: parameters
    params: {}
- name: TestKit Dependency
  endpoint:
    path: /testkit/dependency
    method: GET
    data_selector: dependencies
    params: {}
- name: BuildLogicFunctionalTest
  endpoint:
    path: /gradle/testkit/runner/GradleRunner
    method: GET
    data_selector: result
    params: {}
- name: main
  endpoint:
    path: /src/main/java
    method: GET
- name: test
  endpoint:
    path: /src/test/java
    method: GET
- name: integration_tests
  endpoint:
    path: /java/testing
    method: GET
    data_selector: tests
    params: {}
- name: java_properties_files
  endpoint:
    path: /java/properties
    method: GET
    data_selector: properties
    params: {}
- name: Test
  endpoint:
    path: /dsl/org.gradle.api.tasks.testing.Test.html
    method: GET
    data_selector: results
    params: {}
- name: TestReport
  endpoint:
    path: /dsl/org.gradle.api.tasks.testing.TestReport.html
    method: GET
    data_selector: results
    params: {}
- name: java_toolchain
  endpoint:
    path: /java/toolchain
    method: GET
    data_selector: toolchains
- name: foojay
  endpoint:
    resolverClass: org.gradle.toolchains.foojay.FoojayToolchainResolver
- name: made_up
  endpoint:
    resolverClass: MadeUpResolver
- name: dependencies
  endpoint:
    path: /userguide/dependency_management_basics.html
    method: GET
    data_selector: dependencies
    params: {}
- name: api_dependencies
  endpoint:
    path: /dependencies/api
    method: GET
    data_selector: dependencies
- name: implementation_dependencies
  endpoint:
    path: /dependencies/implementation
    method: GET
    data_selector: dependencies
- name: main_class
  endpoint:
    path: application.mainClass
    method: SET
    data_selector: mainClass
    params: {}
- name: executable_dir
  endpoint:
    path: application.executableDir
    method: SET
    data_selector: executableDir
    params: {}
- name: application_default_jvm_args
  endpoint:
    path: application.applicationDefaultJvmArgs
    method: SET
    data_selector: applicationDefaultJvmArgs
    params: {}
- name: compileGroovy
  endpoint:
    path: /tasks/compileGroovy
    method: GET
- name: compileTestGroovy
  endpoint:
    path: /tasks/compileTestGroovy
    method: GET
- name: compileSourceSetGroovy
  endpoint:
    path: /tasks/compileSourceSetGroovy
    method: GET
- name: groovydoc
  endpoint:
    path: /tasks/groovydoc
    method: GET
- name: ScalaCompile
  endpoint:
    path: /dsl/org.gradle.api.tasks.scala.ScalaCompile.html
    method: GET
- name: ScalaDoc
  endpoint:
    path: /dsl/org.gradle.api.tasks.scala.ScalaDoc.html
    method: GET
- name: public_repository
  endpoint:
    path: /repositories/public
    method: GET
    data_selector: repositories
    params: {}
- name: private_repository
  endpoint:
    path: /repositories/private
    method: GET
    data_selector: repositories
    params: {}
- name: local_repository
  endpoint:
    path: /repositories/local
    method: GET
    data_selector: repositories
    params: {}
- name: flat_directory
  endpoint:
    path: /repositories/flatDir
    method: GET
    data_selector: repositories
    params: {}
- name: maven
  endpoint:
    path: https://maven-central.storage.apis.com
    method: GET
    data_selector: repositories
- name: ivy
  endpoint:
    path: https://github.com/ivy-rep/
    method: GET
    data_selector: repositories
- name: local_maven
  endpoint:
    path: mavenLocal()
    method: GET
    data_selector: repositories
- name: jsLegacyRuntimeElements-published
  endpoint:
    attributes:
      org.gradle.category: library
      org.gradle.usage: kotlin-runtime
      org.jetbrains.kotlin.js.compiler: legacy
      org.jetbrains.kotlin.platform.type: js
- name: jvmRuntimeElements-published
  endpoint:
    attributes:
      org.gradle.category: library
      org.gradle.libraryelements: jar
      org.gradle.usage: java-runtime
      org.jetbrains.kotlin.platform.type: jvm
- name: apiElements
  endpoint:
    path: /api/elements
    method: GET
    data_selector: variants
- name: runtimeElements
  endpoint:
    path: /runtime/elements
    method: GET
    data_selector: variants
- name: fooFiles
  endpoint:
    path: /foo/files
    method: GET
    data_selector: variants
- name: scm
  endpoint:
    path: /scm
    method: GET
- name: testRuntimeClasspath
  endpoint:
    path: /testRuntimeClasspath
    method: GET
- name: verification_metadata
  endpoint:
    path: /gradle/verification-metadata.xml
    method: GET
    data_selector: configuration
    params: {}
- name: trusted_keys
  endpoint:
    path: /trusted-keys
    method: POST
    data_selector: trusted-keys
- name: ignored_keys
  endpoint:
    path: /ignored-keys
    method: POST
    data_selector: ignored-keys
- name: verification_metadata
  endpoint:
    path: /verification-metadata
    method: GET
    data_selector: configuration
- name: key_servers
  endpoint:
    path: /key-servers
    method: GET
    data_selector: key_servers
- name: trusted_artifacts
  endpoint:
    path: /trusted-artifacts
    method: GET
    data_selector: trusted_artifacts
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: records
- name: plugins
  endpoint:
    path: /plugins
    method: GET
    data_selector: records
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: records
- name: spring_core
  endpoint:
    path: /org.springframework:spring-core
    method: GET
    data_selector: records
    params: {}
- name: slf4j_api
  endpoint:
    path: /org.slf4j:slf4j-api
    method: GET
    data_selector: records
    params: {}
- name: httpclient
  endpoint:
    path: /org.apache.httpcomponents:httpclient
    method: GET
    data_selector: records
    params: {}
- name: commons_codec
  endpoint:
    path: /commons-codec:commons-codec
    method: GET
    data_selector: records
    params: {}
- name: spring_web
  endpoint:
    path: /org.springframework:spring-web
    method: GET
    data_selector: records
    params: {}
- name: asm
  endpoint:
    path: /sec:declaring-component-capabilities
    method: GET
    data_selector: records
- name: logging
  endpoint:
    path: /sec:declaring-capabilities-external-modules
    method: GET
    data_selector: records
- name: capabilities
  endpoint:
    path: /sec:declaring-additional-capabilities-for-a-local-component
    method: GET
    data_selector: records
- name: TargetJvmVersionRule
  endpoint:
    path: /path/to/targetJvmVersionRule
    method: GET
    data_selector: records
    params: {}
- name: JaxenDependenciesRule
  endpoint:
    path: /path/to/jaxenDependenciesRule
    method: GET
    data_selector: records
    params: {}
- name: JaxenCapabilitiesRule
  endpoint:
    path: /path/to/jaxenCapabilitiesRule
    method: GET
    data_selector: records
    params: {}
- name: QuasarRule
  endpoint:
    path: /path/to/quasarRule
    method: GET
    data_selector: records
    params: {}
- name: guava
  endpoint:
    path: /maven2/com/google/guava/guava/28.0/guava-28.0.jar
    method: GET
    data_selector: file
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asm_capability
  endpoint:
    path: /sec:declaring-component-capabilities
    method: GET
    data_selector: component_capabilities
    params: {}
- name: logging_capability
  endpoint:
    path: /sec:declaring-capabilities-external-modules
    method: GET
    data_selector: external_capabilities
    params: {}
- name: local_component_capability
  endpoint:
    path: /sec:declaring-additional-capabilities-for-a-local-component
    method: GET
    data_selector: local_capabilities
    params: {}
- name: selecting_candidates
  endpoint:
    path: /sec:selecting-between-candidates
    method: GET
    data_selector: candidates_selection
    params: {}
- name: jvmRuntimeElements-published
  endpoint:
    attributes:
      org.gradle.category: library
      org.gradle.libraryelements: jar
      org.gradle.usage: java-runtime
      org.jetbrains.kotlin.platform.type: jvm
- name: jsLegacyRuntimeElements-published
  endpoint:
    attributes:
      org.gradle.category: library
      org.gradle.usage: kotlin-runtime
      org.jetbrains.kotlin.js.compiler: legacy
      org.jetbrains.kotlin.platform.type: js
- name: apiElements
  endpoint:
    path: /outgoingVariants
    method: GET
    data_selector: variants
    params: {}
- name: fooFiles
  endpoint:
    path: /resolvableConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: standard_attributes
  endpoint:
    path: /api/attributes/standard
    method: GET
    data_selector: attributes
    params: {}
- name: jvm_specific_attributes
  endpoint:
    path: /api/attributes/jvm
    method: GET
    data_selector: attributes
    params: {}
- name: native_specific_attributes
  endpoint:
    path: /api/attributes/native
    method: GET
    data_selector: attributes
    params: {}
- name: plugin_specific_attributes
  endpoint:
    path: /api/attributes/plugin
    method: GET
    data_selector: attributes
    params: {}
- name: producer
  endpoint:
    path: /producer/outgoingVariants
    method: GET
    data_selector: variants
    params: {}
- name: consumer
  endpoint:
    path: /consumer/resolvableConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transform
  endpoint:
    path: /transform
    method: POST
    data_selector: records
    params: {}
- name: artifact_transforms
  endpoint:
    path: /artifactTransforms
    method: GET
    data_selector: transforms
    params: {}
- name: myLibrary
  endpoint:
    path: /path/to/myLibrary
    method: POST
    data_selector: artifacts
    params: {}
- name: disabling_metadata_compatibility_publication_warnings
  endpoint:
    path: /suppress_metadata_warnings
    method: GET
    data_selector: records
    params: {}
- name: interactions_with_other_build_tools
  endpoint:
    path: /interactions_with_other_tools
    method: GET
    data_selector: records
    params: {}
- name: metadata_validation
  endpoint:
    path: /metadata_validation
    method: GET
    data_selector: records
    params: {}
- name: metadata_reproducibility
  endpoint:
    path: /metadata_reproducibility
    method: GET
    data_selector: records
    params: {}
- name: disabling_publication_of_metadata
  endpoint:
    path: /disabling_publication_of_metadata
    method: GET
    data_selector: records
    params: {}
- name: publishing
  endpoint:
    path: /publishing
    method: GET
    data_selector: publishing
    params: {}
- name: generatePomFileForPubNamePublication
  endpoint:
    path: /tasks/generatePomFileForPubNamePublication
    method: GET
    data_selector: records
- name: publishPubNamePublicationToRepoNameRepository
  endpoint:
    path: /tasks/publishPubNamePublicationToRepoNameRepository
    method: GET
    data_selector: records
- name: publishPubNamePublicationToMavenLocal
  endpoint:
    path: /tasks/publishPubNamePublicationToMavenLocal
    method: GET
    data_selector: records
- name: publish
  endpoint:
    path: /tasks/publish
    method: GET
    data_selector: records
- name: publishToMavenLocal
  endpoint:
    path: /tasks/publishToMavenLocal
    method: GET
    data_selector: records
- name: mavenJava
  endpoint:
    path: /services/data/vXX.X/sobjects/MavenPublication
    method: GET
    data_selector: records
    params: {}
- name: IvyPublication
  endpoint:
    path: /dsl/org.gradle.api.publish.ivy.IvyPublication.html
    method: GET
- name: IvyArtifactRepository
  endpoint:
    path: /dsl/org.gradle.api.artifacts.repositories.IvyArtifactRepository.html
    method: GET
- name: GenerateIvyDescriptor
  endpoint:
    path: /dsl/org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.html
    method: GET
- name: PublishToIvyRepository
  endpoint:
    path: /dsl/org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.html
    method: GET
- name: ivy
  endpoint:
    path: /ivy
    method: GET
- name: enable_daemon
  endpoint:
    path: /enable/daemon
    method: POST
    data_selector: status
    params: {}
- name: disable_daemon
  endpoint:
    path: /disable/daemon
    method: POST
    data_selector: status
    params: {}
- name: stop_daemon
  endpoint:
    path: /stop/daemon
    method: POST
    data_selector: status
    params: {}
- name: http_proxy
  endpoint:
    path: /systemProp.http.proxyHost
    method: SET
    data_selector: proxyHost
    params: {}
- name: https_proxy
  endpoint:
    path: /systemProp.https.proxyHost
    method: SET
    data_selector: proxyHost
    params: {}
- name: HTTP proxy
  endpoint:
    path: systemProp.http.proxyHost
    method: SET
    data_selector: www.somehost.org
- name: HTTPS proxy
  endpoint:
    path: systemProp.https.proxyHost
    method: SET
    data_selector: www.somehost.org
- name: SOCKS proxy
  endpoint:
    path: systemProp.socksProxyHost
    method: SET
    data_selector: www.somehost.org
- name: swift_application
  endpoint:
    path: /plugins/swift-application
    method: GET
    data_selector: tasks
- name: swift_library
  endpoint:
    path: /plugins/swift-library
    method: GET
    data_selector: tasks
- name: gradle_site_plugin
  endpoint:
    path: /github.com/gradle/gradle-site-plugin
    method: GET
    data_selector: repository
    params: {}
- name: build-gradle-project
  endpoint:
    path: .github/workflows/build-gradle-project.yml
    method: POST
    data_selector: workflow
    params: {}
- name: dependency-submission
  endpoint:
    path: .github/workflows/gradle-dependency-submission.yml
    method: POST
    data_selector: workflow
    params: {}
- name: Project
  endpoint:
    path: /org.gradle.api.Project.html
    method: GET
    data_selector: records
- name: Task
  endpoint:
    path: /org.gradle.api.Task.html
    method: GET
    data_selector: records
- name: Gradle
  endpoint:
    path: /org.gradle.api.invocation.Gradle.html
    method: GET
    data_selector: records
- name: Settings
  endpoint:
    path: /org.gradle.api.initialization.Settings.html
    method: GET
    data_selector: records
- name: IncludedBuild
  endpoint:
    path: /org.gradle.api.initialization.IncludedBuild.html
    method: GET
    data_selector: records
- name: ProjectLayout
  endpoint:
    path: /org.gradle.api.file.ProjectLayout.html
    method: GET
    data_selector: records
- name: BuildLayout
  endpoint:
    path: /org.gradle.api.file.BuildLayout.html
    method: GET
    data_selector: records
- name: Script
  endpoint:
    path: /org.gradle.api.Script.html
    method: GET
    data_selector: records
- name: SourceSet
  endpoint:
    path: /org.gradle.api.tasks.SourceSet.html
    method: GET
    data_selector: records
- name: SourceSetOutput
  endpoint:
    path: /org.gradle.api.tasks.SourceSetOutput.html
    method: GET
    data_selector: records
- name: SourceDirectorySet
  endpoint:
    path: /org.gradle.api.file.SourceDirectorySet.html
    method: GET
    data_selector: records
- name: Configuration
  endpoint:
    path: /org.gradle.api.artifacts.Configuration.html
    method: GET
    data_selector: records
- name: ConsumableConfiguration
  endpoint:
    path: /org.gradle.api.artifacts.ConsumableConfiguration.html
    method: GET
    data_selector: records
- name: ResolvableConfiguration
  endpoint:
    path: /org.gradle.api.artifacts.ResolvableConfiguration.html
    method: GET
    data_selector: records
- name: DependencyScopeConfiguration
  endpoint:
    path: /org.gradle.api.artifacts.DependencyScopeConfiguration.html
    method: GET
    data_selector: records
- name: ResolutionStrategy
  endpoint:
    path: /org.gradle.api.artifacts.ResolutionStrategy.html
    method: GET
    data_selector: records
- name: ArtifactResolutionQuery
  endpoint:
    path: /org.gradle.api.artifacts.query.ArtifactResolutionQuery.html
    method: GET
    data_selector: records
- name: ComponentSelection
  endpoint:
    path: /org.gradle.api.artifacts.ComponentSelection.html
    method: GET
    data_selector: records
- name: ComponentSelectionRules
  endpoint:
    path: /org.gradle.api.artifacts.ComponentSelectionRules.html
    method: GET
    data_selector: records
- name: DependencyCollector
  endpoint:
    path: /org.gradle.api.artifacts.dsl.DependencyCollector.html
    method: GET
    data_selector: records
- name: ExtensionAware
  endpoint:
    path: /org.gradle.api.plugins.ExtensionAware.html
    method: GET
    data_selector: records
- name: ExtraPropertiesExtension
  endpoint:
    path: /org.gradle.api.plugins.ExtraPropertiesExtension.html
    method: GET
    data_selector: records
- name: PluginDependenciesSpec
  endpoint:
    path: /org.gradle.plugin.use.PluginDependenciesSpec.html
    method: GET
    data_selector: records
- name: PluginDependencySpec
  endpoint:
    path: /org.gradle.plugin.use.PluginDependencySpec.html
    method: GET
    data_selector: records
- name: PluginManagementSpec
  endpoint:
    path: /org.gradle.plugin.management.PluginManagementSpec.html
    method: GET
    data_selector: records
- name: ProviderFactory
  endpoint:
    path: /org.gradle.api.provider.ProviderFactory.html
    method: GET
    data_selector: records
- name: ResourceHandler
  endpoint:
    path: /org.gradle.api.resources.ResourceHandler.html
    method: GET
    data_selector: records
- name: TextResourceFactory
  endpoint:
    path: /org.gradle.api.resources.TextResourceFactory.html
    method: GET
    data_selector: records
- name: InputChanges
  endpoint:
    path: /org.gradle.work.InputChanges.html
    method: GET
    data_selector: records
- name: Distribution
  endpoint:
    path: /org.gradle.api.distribution.Distribution.html
    method: GET
    data_selector: records
- name: AntlrTask
  endpoint:
    path: /org.gradle.api.plugins.antlr.AntlrTask.html
    method: GET
    data_selector: records
- name: BuildEnvironmentReportTask
  endpoint:
    path: /org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask.html
    method: GET
    data_selector: records
- name: Checkstyle
  endpoint:
    path: /org.gradle.api.plugins.quality.Checkstyle.html
    method: GET
    data_selector: records
- name: CodeNarc
  endpoint:
    path: /org.gradle.api.plugins.quality.CodeNarc.html
    method: GET
    data_selector: records
- name: Copy
  endpoint:
    path: /org.gradle.api.tasks.Copy.html
    method: GET
    data_selector: records
- name: CreateStartScripts
  endpoint:
    path: /org.gradle.jvm.application.tasks.CreateStartScripts.html
    method: GET
    data_selector: records
- name: Delete
  endpoint:
    path: /org.gradle.api.tasks.Delete.html
    method: GET
    data_selector: records
- name: Ear
  endpoint:
    path: /org.gradle.plugins.ear.Ear.html
    method: GET
    data_selector: records
- name: Exec
  endpoint:
    path: /org.gradle.api.tasks.Exec.html
    method: GET
    data_selector: records
- name: GenerateIvyDescriptor
  endpoint:
    path: /org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.html
    method: GET
    data_selector: records
- name: GenerateMavenPom
  endpoint:
    path: /org.gradle.api.publish.maven.tasks.GenerateMavenPom.html
    method: GET
    data_selector: records
- name: GenerateBuildDashboard
  endpoint:
    path: /org.gradle.api.reporting.GenerateBuildDashboard.html
    method: GET
    data_selector: records
- name: GradleBuild
  endpoint:
    path: /org.gradle.api.tasks.GradleBuild.html
    method: GET
    data_selector: records
- name: GroovyCompile
  endpoint:
    path: /org.gradle.api.tasks.compile.GroovyCompile.html
    method: GET
    data_selector: records
- name: Groovydoc
  endpoint:
    path: /org.gradle.api.tasks.javadoc.Groovydoc.html
    method: GET
    data_selector: records
- name: HtmlDependencyReportTask
  endpoint:
    path: /org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.html
    method: GET
    data_selector: records
- name: JacocoReport
  endpoint:
    path: /org.gradle.testing.jacoco.tasks.JacocoReport.html
    method: GET
    data_selector: records
- name: JacocoCoverageVerification
  endpoint:
    path: /org.gradle.testing.jacoco.tasks.JacocoCoverageVerification.html
    method: GET
    data_selector: records
- name: Jar
  endpoint:
    path: /org.gradle.api.tasks.bundling.Jar.html
    method: GET
    data_selector: records
- name: JavaCompile
  endpoint:
    path: /org.gradle.api.tasks.compile.JavaCompile.html
    method: GET
    data_selector: records
- name: Javadoc
  endpoint:
    path: /org.gradle.api.tasks.javadoc.Javadoc.html
    method: GET
    data_selector: records
- name: JavaExec
  endpoint:
    path: /org.gradle.api.tasks.JavaExec.html
    method: GET
    data_selector: records
- name: Pmd
  endpoint:
    path: /org.gradle.api.plugins.quality.Pmd.html
    method: GET
    data_selector: records
- name: ProcessResources
  endpoint:
    path: /org.gradle.language.jvm.tasks.ProcessResources.html
    method: GET
    data_selector: records
- name: PublishToIvyRepository
  endpoint:
    path: /org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.html
    method: GET
    data_selector: records
- name: PublishToMavenRepository
  endpoint:
    path: /org.gradle.api.publish.maven.tasks.PublishToMavenRepository.html
    method: GET
    data_selector: records
- name: ScalaCompile
  endpoint:
    path: /org.gradle.api.tasks.scala.ScalaCompile.html
    method: GET
    data_selector: records
- name: ScalaDoc
  endpoint:
    path: /org.gradle.api.tasks.scala.ScalaDoc.html
    method: GET
    data_selector: records
- name: UpdateDaemonJvm
  endpoint:
    path: /org.gradle.buildconfiguration.tasks.UpdateDaemonJvm.html
    method: GET
    data_selector: records
- name: InitBuild
  endpoint:
    path: /org.gradle.buildinit.tasks.InitBuild.html
    method: GET
    data_selector: records
- name: Sign
  endpoint:
    path: /org.gradle.plugins.signing.Sign.html
    method: GET
    data_selector: records
- name: Sync
  endpoint:
    path: /org.gradle.api.tasks.Sync.html
    method: GET
    data_selector: records
- name: Tar
  endpoint:
    path: /org.gradle.api.tasks.bundling.Tar.html
    method: GET
    data_selector: records
- name: AbstractTestTask
  endpoint:
    path: /org.gradle.api.tasks.testing.AbstractTestTask.html
    method: GET
    data_selector: records
- name: Test
  endpoint:
    path: /org.gradle.api.tasks.testing.Test.html
    method: GET
    data_selector: records
- name: TestReport
  endpoint:
    path: /org.gradle.api.tasks.testing.TestReport.html
    method: GET
    data_selector: records
- name: War
  endpoint:
    path: /org.gradle.api.tasks.bundling.War.html
    method: GET
    data_selector: records
- name: Wrapper
  endpoint:
    path: /org.gradle.api.tasks.wrapper.Wrapper.html
    method: GET
    data_selector: records
- name: WriteProperties
  endpoint:
    path: /org.gradle.api.tasks.WriteProperties.html
    method: GET
    data_selector: records
- name: Zip
  endpoint:
    path: /org.gradle.api.tasks.bundling.Zip.html
    method: GET
    data_selector: records
- name: CppApplication
  endpoint:
    path: /org.gradle.language.cpp.CppApplication.html
    method: GET
    data_selector: configuration
- name: CppLibrary
  endpoint:
    path: /org.gradle.language.cpp.CppLibrary.html
    method: GET
    data_selector: configuration
- name: CppTestSuite
  endpoint:
    path: /org.gradle.nativeplatform.test.cpp.CppTestSuite.html
    method: GET
    data_selector: configuration
- name: SwiftApplication
  endpoint:
    path: /org.gradle.language.swift.SwiftApplication.html
    method: GET
    data_selector: configuration
- name: SwiftLibrary
  endpoint:
    path: /org.gradle.language.swift.SwiftLibrary.html
    method: GET
    data_selector: configuration
- name: SwiftXCTestSuite
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite.html
    method: GET
    data_selector: configuration
- name: CppCompile
  endpoint:
    path: /org.gradle.language.cpp.tasks.CppCompile.html
    method: GET
    data_selector: tasks
- name: SwiftCompile
  endpoint:
    path: /org.gradle.language.swift.tasks.SwiftCompile.html
    method: GET
    data_selector: tasks
- name: LinkExecutable
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkExecutable.html
    method: GET
    data_selector: tasks
- name: LinkSharedLibrary
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkSharedLibrary.html
    method: GET
    data_selector: tasks
- name: CreateStaticLibrary
  endpoint:
    path: /org.gradle.nativeplatform.tasks.CreateStaticLibrary.html
    method: GET
    data_selector: tasks
- name: LinkMachOBundle
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkMachOBundle.html
    method: GET
    data_selector: tasks
- name: InstallExecutable
  endpoint:
    path: /org.gradle.nativeplatform.tasks.InstallExecutable.html
    method: GET
    data_selector: tasks
- name: InstallXCTestBundle
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle.html
    method: GET
    data_selector: tasks
- name: RunTestExecutable
  endpoint:
    path: /org.gradle.nativeplatform.test.tasks.RunTestExecutable.html
    method: GET
    data_selector: tasks
- name: XCTest
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.tasks.XCTest.html
    method: GET
    data_selector: tasks
- name: CCompile
  endpoint:
    path: /org.gradle.language.c.tasks.CCompile.html
    method: GET
    data_selector: tasks
- name: Assemble
  endpoint:
    path: /org.gradle.language.assembler.tasks.Assemble.html
    method: GET
    data_selector: tasks
- name: ObjectiveCCompile
  endpoint:
    path: /org.gradle.language.objectivec.tasks.ObjectiveCCompile.html
    method: GET
    data_selector: tasks
- name: ObjectiveCppCompile
  endpoint:
    path: /org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile.html
    method: GET
    data_selector: tasks
- name: WindowsResourceCompile
  endpoint:
    path: /org.gradle.language.rc.tasks.WindowsResourceCompile.html
    method: GET
    data_selector: tasks
- name: gradle-wrapper-properties
  endpoint:
    path: gradle/wrapper/gradle-wrapper.properties
    method: GET
    data_selector: properties
- name: gradle-wrapper-jar
  endpoint:
    path: gradle/wrapper/gradle-wrapper.jar
    method: GET
    data_selector: jar
- name: AntlrTask
  endpoint:
    path: org.gradle.api.plugins.antlr.AntlrTask.html
    method: GET
    data_selector: description
- name: BuildEnvironmentReportTask
  endpoint:
    path: org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask.html
    method: GET
    data_selector: description
- name: Checkstyle
  endpoint:
    path: org.gradle.api.plugins.quality.Checkstyle.html
    method: GET
    data_selector: description
- name: CodeNarc
  endpoint:
    path: org.gradle.api.plugins.quality.CodeNarc.html
    method: GET
    data_selector: description
- name: Copy
  endpoint:
    path: org.gradle.api.tasks.Copy.html
    method: GET
    data_selector: description
- name: CreateStartScripts
  endpoint:
    path: org.gradle.jvm.application.tasks.CreateStartScripts.html
    method: GET
    data_selector: description
- name: Delete
  endpoint:
    path: org.gradle.api.tasks.Delete.html
    method: GET
    data_selector: description
- name: Ear
  endpoint:
    path: org.gradle.plugins.ear.Ear.html
    method: GET
    data_selector: description
- name: Exec
  endpoint:
    path: org.gradle.api.tasks.Exec.html
    method: GET
    data_selector: description
- name: GenerateIvyDescriptor
  endpoint:
    path: org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.html
    method: GET
    data_selector: description
- name: GenerateMavenPom
  endpoint:
    path: org.gradle.api.publish.maven.tasks.GenerateMavenPom.html
    method: GET
    data_selector: description
- name: GenerateBuildDashboard
  endpoint:
    path: org.gradle.api.reporting.GenerateBuildDashboard.html
    method: GET
    data_selector: description
- name: GradleBuild
  endpoint:
    path: org.gradle.api.tasks.GradleBuild.html
    method: GET
    data_selector: description
- name: GroovyCompile
  endpoint:
    path: org.gradle.api.tasks.compile.GroovyCompile.html
    method: GET
    data_selector: description
- name: Groovydoc
  endpoint:
    path: org.gradle.api.tasks.javadoc.Groovydoc.html
    method: GET
    data_selector: description
- name: HtmlDependencyReportTask
  endpoint:
    path: org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.html
    method: GET
    data_selector: description
- name: JacocoReport
  endpoint:
    path: org.gradle.testing.jacoco.tasks.JacocoReport.html
    method: GET
    data_selector: description
- name: JacocoCoverageVerification
  endpoint:
    path: org.gradle.testing.jacoco.tasks.JacocoCoverageVerification.html
    method: GET
    data_selector: description
- name: Jar
  endpoint:
    path: org.gradle.api.tasks.bundling.Jar.html
    method: GET
    data_selector: description
- name: JavaCompile
  endpoint:
    path: org.gradle.api.tasks.compile.JavaCompile.html
    method: GET
    data_selector: description
- name: Javadoc
  endpoint:
    path: org.gradle.api.tasks.javadoc.Javadoc.html
    method: GET
    data_selector: description
- name: JavaExec
  endpoint:
    path: org.gradle.api.tasks.JavaExec.html
    method: GET
    data_selector: description
- name: Pmd
  endpoint:
    path: org.gradle.api.plugins.quality.Pmd.html
    method: GET
    data_selector: description
- name: ProcessResources
  endpoint:
    path: org.gradle.language.jvm.tasks.ProcessResources.html
    method: GET
    data_selector: description
- name: PublishToIvyRepository
  endpoint:
    path: org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.html
    method: GET
    data_selector: description
- name: PublishToMavenRepository
  endpoint:
    path: org.gradle.api.publish.maven.tasks.PublishToMavenRepository.html
    method: GET
    data_selector: description
- name: ScalaCompile
  endpoint:
    path: org.gradle.api.tasks.scala.ScalaCompile.html
    method: GET
    data_selector: description
- name: ScalaDoc
  endpoint:
    path: org.gradle.api.tasks.scala.ScalaDoc.html
    method: GET
    data_selector: description
- name: InitBuild
  endpoint:
    path: org.gradle.buildinit.tasks.InitBuild.html
    method: GET
    data_selector: description
- name: Sign
  endpoint:
    path: org.gradle.plugins.signing.Sign.html
    method: GET
    data_selector: description
- name: Sync
  endpoint:
    path: org.gradle.api.tasks.Sync.html
    method: GET
    data_selector: description
- name: Tar
  endpoint:
    path: org.gradle.api.tasks.bundling.Tar.html
    method: GET
    data_selector: description
- name: Test
  endpoint:
    path: org.gradle.api.tasks.testing.Test.html
    method: GET
    data_selector: description
- name: TestReport
  endpoint:
    path: org.gradle.api.tasks.testing.TestReport.html
    method: GET
    data_selector: description
- name: War
  endpoint:
    path: org.gradle.api.tasks.bundling.War.html
    method: GET
    data_selector: description
- name: Wrapper
  endpoint:
    path: org.gradle.api.tasks.wrapper.Wrapper.html
    method: GET
    data_selector: description
- name: WriteProperties
  endpoint:
    path: org.gradle.api.tasks.WriteProperties.html
    method: GET
    data_selector: description
- name: Zip
  endpoint:
    path: org.gradle.api.tasks.bundling.Zip.html
    method: GET
    data_selector: description
- name: SwiftApplication
  endpoint:
    path: /org.gradle.language.swift.SwiftApplication.html
    method: GET
- name: SwiftLibrary
  endpoint:
    path: /org.gradle.language.swift.SwiftLibrary.html
    method: GET
- name: SwiftXCTestSuite
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite.html
    method: GET
- name: CppCompile
  endpoint:
    path: /org.gradle.language.cpp.tasks.CppCompile.html
    method: GET
- name: SwiftCompile
  endpoint:
    path: /org.gradle.language.swift.tasks.SwiftCompile.html
    method: GET
- name: LinkExecutable
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkExecutable.html
    method: GET
- name: LinkSharedLibrary
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkSharedLibrary.html
    method: GET
- name: CreateStaticLibrary
  endpoint:
    path: /org.gradle.nativeplatform.tasks.CreateStaticLibrary.html
    method: GET
- name: LinkMachOBundle
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkMachOBundle.html
    method: GET
- name: InstallExecutable
  endpoint:
    path: /org.gradle.nativeplatform.tasks.InstallExecutable.html
    method: GET
- name: InstallXCTestBundle
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle.html
    method: GET
- name: RunTestExecutable
  endpoint:
    path: /org.gradle.nativeplatform.test.tasks.RunTestExecutable.html
    method: GET
- name: XCTest
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.tasks.XCTest.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: build_init_plugin
  endpoint:
    path: /userguide/build_init_plugin.html
    method: GET
    data_selector: content
    params: {}
- name: wrapper_improvements
  endpoint:
    path: /userguide/gradle_wrapper.html
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dependency_verification
  endpoint:
    path: /userguide/dependency_verification.html
    method: GET
    data_selector: configuration
    params: {}
- name: ear_plugin
  endpoint:
    path: /userguide/ear_plugin.html#sec:using_custom_app_xml
    method: GET
    data_selector: tasks.ear
    params: {}
- name: multi_project_structure
  endpoint:
    path: /multi-project-structure
    method: GET
- name: multi_project_paths
  endpoint:
    path: /multi-project-paths
    method: GET
- name: executing_tasks_by_name
  endpoint:
    path: /executing-tasks-by-name
    method: GET
- name: executing_tasks_by_fully_qualified_name
  endpoint:
    path: /executing-tasks-by-fully-qualified-name
    method: GET
- name: multi_project_builds_using_buildSrc
  endpoint:
    path: /multi-project-builds-using-buildSrc
    method: GET
- name: composite_builds_including_build_logic
  endpoint:
    path: /composite-builds-including-build-logic
    method: GET
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: repositories
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: dependencies
  endpoint:
    path: /declare_dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: version_catalogs
  endpoint:
    path: /centralize_versions_with_version_catalogs
    method: GET
    data_selector: version_catalogs
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: records
- name: constraints
  endpoint:
    path: /constraints
    method: GET
    data_selector: records
- name: capabilities
  endpoint:
    path: /capabilities
    method: GET
    data_selector: records
- name: hello
  endpoint:
    path: tasks/register/hello
    method: POST
    data_selector: message
    params: {}
- name: copyTask
  endpoint:
    path: tasks/register/copyTask
    method: POST
    data_selector: files
    params:
      from: source
      into: target
      include: '*.war'
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: core_plugins
  endpoint:
    path: /plugin_reference.html#plugin_reference
    method: GET
    data_selector: plugins
    params: {}
- name: community_plugins
  endpoint:
    path: https://plugins.gradle.org
    method: GET
    data_selector: plugins
    params: {}
- name: custom_plugins
  endpoint:
    path: /javadoc/org/gradle/api/Plugin.html
    method: GET
    data_selector: plugins
    params: {}
- name: plugin_management
  endpoint:
    path: /pluginManagement
    method: GET
    data_selector: plugins
    params: {}
- name: custom_plugin_repositories
  endpoint:
    path: /customPluginRepositories
    method: GET
    data_selector: repositories
    params: {}
- name: plugin_version_management
  endpoint:
    path: /pluginVersionManagement
    method: GET
    data_selector: version
    params: {}
- name: hello
  endpoint:
    path: com.example.hello
    method: GET
- name: goodbye
  endpoint:
    path: com.example.goodbye
    method: GET
- name: app
  endpoint:
    path: /app
    method: GET
    data_selector: records
    params: {}
- name: authoring-tutorial
  endpoint:
    path: settings.gradle.kts
    method: GET
    data_selector: subprojects
    params:
      include: app, model, service
- name: app
  endpoint:
    path: build.gradle.kts
    method: GET
    data_selector: source_code
    params: {}
- name: app
  endpoint:
    path: /app
    method: GET
- name: lib
  endpoint:
    path: /lib
    method: GET
- name: license-plugin
  endpoint:
    path: /license-plugin
    method: GET
- name: app
  endpoint:
    path: /app
    method: GET
- name: lib
  endpoint:
    path: /lib
    method: GET
- name: greeting
  endpoint:
    path: /tasks/greeting
    method: POST
    data_selector: response
    params: {}
- name: LicenseTask
  endpoint:
    path: /gradle/license-plugin/plugin/src/main/kotlin/license/LicensePlugin.kt
    method: GET
    data_selector: licenseFilePath
    params: {}
- name: fileSizeDiff
  endpoint:
    path: fileSizeDiff
    method: REGISTER
    data_selector: task
    params: {}
- name: functionalTest
  endpoint:
    method: GET
- name: plugin
  endpoint:
    path: /plugin/build.gradle
    method: GET
    data_selector: plugin
- name: slack_message
  endpoint:
    path: /api/chat.postMessage
    method: POST
- name: slack_extension
  endpoint:
    path: /slack/extension
    method: POST
    data_selector: properties
    params: {}
- name: sendTestSlackMessage
  endpoint:
    path: /chat.postMessage
    method: POST
    data_selector: response
    params: {}
- name: SlackPluginTest
  endpoint:
    path: /plugin/src/test/kotlin/org/example/SlackPluginTest.kt
    method: GET
    data_selector: project.tasks.findByName
    params: {}
- name: functionalTest
  endpoint:
    path: /functionalTest
    method: POST
    data_selector: result
    params:
      token: System.getenv("SLACK_TOKEN")
      channel: '#social'
      message: Hello from Gradle!
- name: plugin
  endpoint:
    path: /plugin
    method: GET
    data_selector: pluginData
- name: groovy-core
  endpoint:
    path: /libs.versions.toml
    method: GET
    data_selector: libraries.groovy-core
- name: commons-lang3
  endpoint:
    path: /libs.versions.toml
    method: GET
    data_selector: libraries.commons-lang3
- name: junit-jupiter
  endpoint:
    path: /libs.versions.toml
    method: GET
    data_selector: libraries.junit-jupiter
- name: Properties
  endpoint:
    path: /understanding/properties
    method: GET
    data_selector: records
- name: Providers
  endpoint:
    path: /understanding/providers
    method: GET
    data_selector: records
- name: Chaining Providers
  endpoint:
    path: /chaining/providers
    method: GET
    data_selector: records
- name: Using Managed Properties
  endpoint:
    path: /using/managed/properties
    method: GET
    data_selector: records
- name: Using Managed Types
  endpoint:
    path: /using/managed/types
    method: GET
    data_selector: records
- name: DomainObjectSet
  endpoint:
    path: /javadoc/org/gradle/api/DomainObjectSet.html
    method: GET
- name: NamedDomainObjectSet
  endpoint:
    path: /javadoc/org/gradle/api/NamedDomainObjectSet.html
    method: GET
- name: NamedDomainObjectList
  endpoint:
    path: /javadoc/org/gradle/api/NamedDomainObjectList.html
    method: GET
- name: NamedDomainObjectContainer
  endpoint:
    path: /javadoc/org/gradle/api/NamedDomainObjectContainer.html
    method: GET
- name: ExtensiblePolymorphicDomainObjectContainer
  endpoint:
    path: /javadoc/org/gradle/api/ExtensiblePolymorphicDomainObjectContainer.html
    method: GET
- name: ObjectFactory
  endpoint:
    path: '#objectfactory'
    method: GET
- name: ProviderFactory
  endpoint:
    path: '#providerfactory'
    method: GET
- name: FileSystemOperations
  endpoint:
    path: '#filesystemoperations'
    method: GET
- name: ArchiveOperations
  endpoint:
    path: '#archiveoperations'
    method: GET
- name: ExecOperations
  endpoint:
    path: '#execoperations'
    method: GET
- name: WorkerExecutor
  endpoint:
    path: '#workerexecutor'
    method: GET
- name: ProjectLayout
  endpoint:
    path: '#sec:projectlayout'
    method: GET
- name: ToolingModelBuilderRegistry
  endpoint:
    path: '#toolingmodelbuilderregistry'
    method: GET
- name: TestEventReporterFactory
  endpoint:
    path: '#testeventreporterfactory'
    method: GET
- name: DependencyFactory
  endpoint:
    path: '#dependencyfactory'
    method: GET
- name: ToolingModelBuilder
  endpoint:
    path: /javadoc/org/gradle/tooling/provider/model/ToolingModelBuilderRegistry.html
    method: GET
    data_selector: model
    params: {}
- name: TestEventReporterFactory
  endpoint:
    path: /javadoc/org/gradle/api/tasks/testing/TestEventReporterFactory.html
    method: GET
    data_selector: reporting
    params: {}
- name: DependencyFactory
  endpoint:
    path: /javadoc/org/gradle/api/artifacts/dsl/DependencyFactory.html
    method: GET
    data_selector: factory
    params: {}
- name: app
  endpoint:
    path: /app
    method: GET
    data_selector: tasks
    params: {}
- name: some-logic
  endpoint:
    path: /some-logic
    method: GET
    data_selector: tasks
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: packageApp
  endpoint:
    path: /app/build.gradle
    method: POST
    data_selector: tasks.register<Zip>("packageApp")
    params: {}
- name: generateReport
  endpoint:
    path: /app/build.gradle
    method: POST
    data_selector: tasks.register<GenerateReportTask>("generateReport")
    params: {}
- name: printVersion
  endpoint:
    path: /tasks/printVersion
    method: GET
    data_selector: records
    params: {}
- name: printVersionDynamic
  endpoint:
    path: /tasks/printVersionDynamic
    method: GET
    data_selector: records
    params: {}
- name: dynamicTask
  endpoint:
    path: /tasks/dynamicTask
    method: GET
    data_selector: records
    params: {}
- name: greeting
  endpoint:
    path: /greeting
    method: POST
    data_selector: message
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: plugin_example
  endpoint:
    path: /plugins/example
    method: GET
    data_selector: pluginData
- name: configuration_cache
  endpoint:
    path: /configuration-cache
    method: GET
    data_selector: cache_settings
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: dependencies
    params:
      type: implementation
- name: implementation
  endpoint:
    path: /implementation
    method: GET
    data_selector: dependencies
    params: {}
- name: compileOnly
  endpoint:
    path: /compileOnly
    method: GET
    data_selector: dependencies
    params: {}
- name: compileOnlyApi
  endpoint:
    path: /compileOnlyApi
    method: GET
    data_selector: dependencies
    params: {}
- name: runtimeOnly
  endpoint:
    path: /runtimeOnly
    method: GET
    data_selector: dependencies
    params: {}
- name: testImplementation
  endpoint:
    path: /testImplementation
    method: GET
    data_selector: dependencies
    params: {}
- name: testCompileOnly
  endpoint:
    path: /testCompileOnly
    method: GET
    data_selector: dependencies
    params: {}
- name: testRuntimeOnly
  endpoint:
    path: /testRuntimeOnly
    method: GET
    data_selector: dependencies
    params: {}
- name: implementation_dependency
  endpoint:
    path: implementation
    method: POST
    data_selector: dependencies
    params:
      dependency: com.google.guava:guava:30.1.1-jre
- name: compile_only_dependency
  endpoint:
    path: compileOnly
    method: POST
    data_selector: dependencies
    params:
      dependency: org.projectlombok:lombok:1.18.20
- name: runtime_only_dependency
  endpoint:
    path: runtimeOnly
    method: POST
    data_selector: dependencies
    params:
      dependency: mysql:mysql-connector-java:8.0.23
- name: custom_configuration
  endpoint:
    path: customConfig
    method: POST
    data_selector: dependencies
    params:
      dependency: org.example:example-lib:1.0
- name: groovy-core
  endpoint:
    path: org.codehaus.groovy:groovy
    method: GET
- name: groovy-json
  endpoint:
    path: org.codehaus.groovy:groovy-json
    method: GET
- name: groovy-nio
  endpoint:
    path: org.codehaus.groovy:groovy-nio
    method: GET
- name: commons-lang3
  endpoint:
    path: org.apache.commons:commons-lang3
    method: GET
- name: apiElements
  endpoint:
    path: /maven2/com/fasterxml/jackson/core/jackson-databind/2.17.2/apiElements
    method: GET
- name: runtimeElements
  endpoint:
    path: /maven2/com/fasterxml/jackson/core/jackson-databind/2.17.2/runtimeElements
    method: GET
- name: jsLegacyRuntimeElements-published
  endpoint:
    attributes:
      org.gradle.category: library
      org.gradle.usage: kotlin-runtime
      org.jetbrains.kotlin.js.compiler: legacy
      org.jetbrains.kotlin.platform.type: js
- name: jvmRuntimeElements-published
  endpoint:
    attributes:
      org.gradle.category: library
      org.gradle.libraryelements: jar
      org.gradle.usage: java-runtime
      org.jetbrains.kotlin.platform.type: jvm
- name: apiElements
  endpoint:
    path: /outgoingVariants
    method: GET
    data_selector: variants
    params: {}
- name: runtimeElements
  endpoint:
    path: /outgoingVariants
    method: GET
    data_selector: variants
    params: {}
- name: apiElements
  endpoint:
    path: kotlin-stdlib-1.8.10-public.jar
    method: GET
    data_selector: artifacts
- name: runtimeElements
  endpoint:
    path: kotlin-stdlib-jdk7-1.8.10.jar
    method: GET
    data_selector: artifacts
- name: jdk7ApiElements
  endpoint:
    path: kotlin-stdlib-jdk8-1.8.10.jar
    method: GET
    data_selector: artifacts
- name: jdk8ApiElements
  endpoint:
    path: kotlin-stdlib-common-1.8.10.jar
    method: GET
    data_selector: artifacts
- name: apiElements
  endpoint:
    path: /apiElements
    method: GET
    data_selector: artifacts
    params: {}
- name: apiProductionElements
  endpoint:
    path: /apiProductionElements
    method: GET
    data_selector: artifacts
    params: {}
- name: runtimeElements
  endpoint:
    path: /runtimeElements
    method: GET
    data_selector: artifacts
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: records
- name: implementation
  endpoint:
    path: project(':lib')
    method: add
    data_selector: dependencies
- name: testImplementation
  endpoint:
    path: project('junit:junit:4.+')
    method: add
    data_selector: dependencies
- name: api
  endpoint:
    path: project('com.google.guava:guava:23.0')
    method: add
    data_selector: dependencies
- name: compileClasspath
  endpoint:
    path: /configurations/compileClasspath
    method: GET
- name: runtimeClasspath
  endpoint:
    path: /configurations/runtimeClasspath
    method: GET
- name: exposedApi
  endpoint:
    path: /configurations/exposedApi
    method: GET
- name: exposedRuntime
  endpoint:
    path: /configurations/exposedRuntime
    method: GET
- name: Gradle API dependency
  endpoint:
    path: /dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:gradleApi()
    method: GET
    data_selector: dependencies
    params: {}
- name: Gradle TestKit dependency
  endpoint:
    path: /dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:gradleTestKit()
    method: GET
    data_selector: dependencies
    params: {}
- name: mavenCentral
  endpoint:
    path: https://repo.maven.apache.org/maven2/
    method: GET
- name: googleMaven
  endpoint:
    path: https://maven.google.com/
    method: GET
- name: springSnapshot
  endpoint:
    path: https://repo.spring.io/snapshot/
    method: GET
- name: maven_repository
  endpoint:
    path: /maven
    method: GET
    data_selector: repositories
    params: {}
- name: ivy_repository
  endpoint:
    path: /ivy
    method: GET
    data_selector: repositories
    params: {}
- name: repositories_mode
  endpoint:
    path: /repositories_mode
    method: GET
    data_selector: repositories
    params: {}
- name: maven_repository
  endpoint:
    path: /maven2
    method: GET
    data_selector: repositories
    params: {}
- name: standard_layout_ivy_repository
  endpoint:
    path: http://repo.mycompany.com/repo
    method: GET
    data_selector: repositories
    params: {}
- name: named_layout_ivy_repository
  endpoint:
    path: http://repo.mycompany.com/repo
    method: GET
    data_selector: repositories
    params: {}
- name: custom_pattern_layout_ivy_repository
  endpoint:
    path: http://repo.mycompany.com/repo
    method: GET
    data_selector: repositories
    params: {}
- name: authenticated_ivy_repository
  endpoint:
    path: http://repo.mycompany.com/repo
    method: GET
    data_selector: repositories
    params: {}
- name: local_ivy_repository
  endpoint:
    path: ../local-repo
    method: GET
    data_selector: repositories
    params: {}
- name: flat_directory_repository
  endpoint:
    path: lib
    method: GET
    data_selector: repositories
    params: {}
- name: POM files
  endpoint:
    path: /sec:supported-md-pom
    method: GET
    data_selector: records
    params: {}
- name: Ivy files
  endpoint:
    path: /sec:supported-md-ivy
    method: GET
    data_selector: records
    params: {}
- name: Supported metadata sources
  endpoint:
    path: /sec:supported-metadata-sources
    method: GET
    data_selector: records
    params: {}
- name: exclusive_repository_content
  endpoint:
    path: /repositories/exclusiveContent
    method: GET
    data_selector: artifacts
    params: {}
- name: maven_repository
  endpoint:
    path: /repositories/maven
    method: GET
    data_selector: artifacts
    params: {}
- name: ivy_repository
  endpoint:
    path: /repositories/ivy
    method: GET
    data_selector: artifacts
    params: {}
- name: groovy-core
  endpoint:
    path: org.codehaus.groovy:groovy
    method: GET
    data_selector: versions
    params: {}
- name: groovy-json
  endpoint:
    path: org.codehaus.groovy:groovy-json
    method: GET
    data_selector: versions
    params: {}
- name: groovy-nio
  endpoint:
    path: org.codehaus.groovy:groovy-nio
    method: GET
    data_selector: versions
    params: {}
- name: commons-lang3
  endpoint:
    path: org.apache.commons:commons-lang3
    method: GET
    data_selector: versions
    params:
      strictly: '[3.8, 4.0['
      prefer: '3.9'
- name: version_catalogs
  endpoint:
    path: /sec:version-catalogs
    method: GET
- name: platforms
  endpoint:
    path: /sec:platforms
    method: GET
- name: using_a_catalog_with_a_platform
  endpoint:
    path: /sec:catalog-platform
    method: GET
- name: resolveSources
  endpoint:
    path: /resolveSources
    method: GET
    data_selector: files
    params: {}
- name: resolveLenient
  endpoint:
    path: /resolveLenient
    method: GET
    data_selector: files
    params: {}
- name: resolveProjects
  endpoint:
    path: /resolveProjects
    method: GET
    data_selector: files
    params: {}
- name: resolveModules
  endpoint:
    path: /resolveModules
    method: GET
    data_selector: files
    params: {}
- name: resolveTransformedFiles
  endpoint:
    path: /resolveTransformedFiles
    method: GET
    data_selector: files
    params: {}
- name: CustomTest
  endpoint:
    path: /custom/test
    method: POST
    data_selector: results
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: runtimeClasspath
    params: {}
- name: producer
  endpoint:
    path: /producer/outgoingVariants
    method: GET
    data_selector: variants
    params: {}
- name: consumer
  endpoint:
    path: /consumer/resolvableConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: custom_artifact_resolution
  endpoint:
    path: /how_to_resolve_specific_artifacts
    method: GET
    data_selector: artifacts
    params: {}
- name: jquery
  endpoint:
    path: /jquery/jquery/3.2.1:min@js
    method: GET
    data_selector: artifact
- name: my-app
  endpoint:
    path: my-app
    method: GET
    data_selector: dependencies
    params: {}
- name: my-fork
  endpoint:
    path: my-fork
    method: GET
    data_selector: dependencies
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: AntlrTask
  endpoint:
    path: /org.gradle.api.plugins.antlr.AntlrTask.html
    method: GET
    data_selector: description
- name: BuildEnvironmentReportTask
  endpoint:
    path: /org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask.html
    method: GET
    data_selector: description
- name: Checkstyle
  endpoint:
    path: /org.gradle.api.plugins.quality.Checkstyle.html
    method: GET
    data_selector: description
- name: CodeNarc
  endpoint:
    path: /org.gradle.api.plugins.quality.CodeNarc.html
    method: GET
    data_selector: description
- name: Copy
  endpoint:
    path: /org.gradle.api.tasks.Copy.html
    method: GET
    data_selector: description
- name: CreateStartScripts
  endpoint:
    path: /org.gradle.jvm.application.tasks.CreateStartScripts.html
    method: GET
    data_selector: description
- name: Delete
  endpoint:
    path: /org.gradle.api.tasks.Delete.html
    method: GET
    data_selector: description
- name: Ear
  endpoint:
    path: /org.gradle.plugins.ear.Ear.html
    method: GET
    data_selector: description
- name: Exec
  endpoint:
    path: /org.gradle.api.tasks.Exec.html
    method: GET
    data_selector: description
- name: GenerateIvyDescriptor
  endpoint:
    path: /org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.html
    method: GET
    data_selector: description
- name: GenerateMavenPom
  endpoint:
    path: /org.gradle.api.publish.maven.tasks.GenerateMavenPom.html
    method: GET
    data_selector: description
- name: GenerateBuildDashboard
  endpoint:
    path: /org.gradle.api.reporting.GenerateBuildDashboard.html
    method: GET
    data_selector: description
- name: GradleBuild
  endpoint:
    path: /org.gradle.api.tasks.GradleBuild.html
    method: GET
    data_selector: description
- name: GroovyCompile
  endpoint:
    path: /org.gradle.api.tasks.compile.GroovyCompile.html
    method: GET
    data_selector: description
- name: Groovydoc
  endpoint:
    path: /org.gradle.api.tasks.javadoc.Groovydoc.html
    method: GET
    data_selector: description
- name: HtmlDependencyReportTask
  endpoint:
    path: /org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.html
    method: GET
    data_selector: description
- name: JacocoReport
  endpoint:
    path: /org.gradle.testing.jacoco.tasks.JacocoReport.html
    method: GET
    data_selector: description
- name: JacocoCoverageVerification
  endpoint:
    path: /org.gradle.testing.jacoco.tasks.JacocoCoverageVerification.html
    method: GET
    data_selector: description
- name: Jar
  endpoint:
    path: /org.gradle.api.tasks.bundling.Jar.html
    method: GET
    data_selector: description
- name: JavaCompile
  endpoint:
    path: /org.gradle.api.tasks.compile.JavaCompile.html
    method: GET
    data_selector: description
- name: Javadoc
  endpoint:
    path: /org.gradle.api.tasks.javadoc.Javadoc.html
    method: GET
    data_selector: description
- name: JavaExec
  endpoint:
    path: /org.gradle.api.tasks.JavaExec.html
    method: GET
    data_selector: description
- name: Pmd
  endpoint:
    path: /org.gradle.api.plugins.quality.Pmd.html
    method: GET
    data_selector: description
- name: ProcessResources
  endpoint:
    path: /org.gradle.language.jvm.tasks.ProcessResources.html
    method: GET
    data_selector: description
- name: PublishToIvyRepository
  endpoint:
    path: /org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.html
    method: GET
    data_selector: description
- name: PublishToMavenRepository
  endpoint:
    path: /org.gradle.api.publish.maven.tasks.PublishToMavenRepository.html
    method: GET
    data_selector: description
- name: ScalaCompile
  endpoint:
    path: /org.gradle.api.tasks.scala.ScalaCompile.html
    method: GET
    data_selector: description
- name: ScalaDoc
  endpoint:
    path: /org.gradle.api.tasks.scala.ScalaDoc.html
    method: GET
    data_selector: description
- name: UpdateDaemonJvm
  endpoint:
    path: /org.gradle.buildconfiguration.tasks.UpdateDaemonJvm.html
    method: GET
    data_selector: description
- name: InitBuild
  endpoint:
    path: /org.gradle.buildinit.tasks.InitBuild.html
    method: GET
    data_selector: description
- name: Sign
  endpoint:
    path: /org.gradle.plugins.signing.Sign.html
    method: GET
    data_selector: description
- name: Sync
  endpoint:
    path: /org.gradle.api.tasks.Sync.html
    method: GET
    data_selector: description
- name: Tar
  endpoint:
    path: /org.gradle.api.tasks.bundling.Tar.html
    method: GET
    data_selector: description
- name: AbstractTestTask
  endpoint:
    path: /org.gradle.api.tasks.testing.AbstractTestTask.html
    method: GET
    data_selector: description
- name: Test
  endpoint:
    path: /org.gradle.api.tasks.testing.Test.html
    method: GET
    data_selector: description
- name: TestReport
  endpoint:
    path: /org.gradle.api.tasks.testing.TestReport.html
    method: GET
    data_selector: description
- name: War
  endpoint:
    path: /org.gradle.api.tasks.bundling.War.html
    method: GET
    data_selector: description
- name: Wrapper
  endpoint:
    path: /org.gradle.api.tasks.wrapper.Wrapper.html
    method: GET
    data_selector: description
- name: WriteProperties
  endpoint:
    path: /org.gradle.api.tasks.WriteProperties.html
    method: GET
    data_selector: description
- name: Zip
  endpoint:
    path: /org.gradle.api.tasks.bundling.Zip.html
    method: GET
    data_selector: description
- name: CppApplication
  endpoint:
    path: /org.gradle.language.cpp.CppApplication.html
    method: GET
    data_selector: description
    params: {}
- name: CppLibrary
  endpoint:
    path: /org.gradle.language.cpp.CppLibrary.html
    method: GET
    data_selector: description
    params: {}
- name: CppTestSuite
  endpoint:
    path: /org.gradle.nativeplatform.test.cpp.CppTestSuite.html
    method: GET
    data_selector: description
    params: {}
- name: SwiftApplication
  endpoint:
    path: /org.gradle.language.swift.SwiftApplication.html
    method: GET
    data_selector: description
    params: {}
- name: SwiftLibrary
  endpoint:
    path: /org.gradle.language.swift.SwiftLibrary.html
    method: GET
    data_selector: description
    params: {}
- name: SwiftXCTestSuite
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite.html
    method: GET
    data_selector: description
    params: {}
- name: CppCompile
  endpoint:
    path: /org.gradle.language.cpp.tasks.CppCompile.html
    method: GET
    data_selector: description
    params: {}
- name: SwiftCompile
  endpoint:
    path: /org.gradle.language.swift.tasks.SwiftCompile.html
    method: GET
    data_selector: description
    params: {}
- name: LinkExecutable
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkExecutable.html
    method: GET
    data_selector: description
    params: {}
- name: LinkSharedLibrary
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkSharedLibrary.html
    method: GET
    data_selector: description
    params: {}
- name: CreateStaticLibrary
  endpoint:
    path: /org.gradle.nativeplatform.tasks.CreateStaticLibrary.html
    method: GET
    data_selector: description
    params: {}
- name: LinkMachOBundle
  endpoint:
    path: /org.gradle.nativeplatform.tasks.LinkMachOBundle.html
    method: GET
    data_selector: description
    params: {}
- name: InstallExecutable
  endpoint:
    path: /org.gradle.nativeplatform.tasks.InstallExecutable.html
    method: GET
    data_selector: description
    params: {}
- name: InstallXCTestBundle
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle.html
    method: GET
    data_selector: description
    params: {}
- name: RunTestExecutable
  endpoint:
    path: /org.gradle.nativeplatform.test.tasks.RunTestExecutable.html
    method: GET
    data_selector: description
    params: {}
- name: XCTest
  endpoint:
    path: /org.gradle.nativeplatform.test.xctest.tasks.XCTest.html
    method: GET
    data_selector: description
    params: {}
- name: CCompile
  endpoint:
    path: /org.gradle.language.c.tasks.CCompile.html
    method: GET
    data_selector: description
    params: {}
- name: Assemble
  endpoint:
    path: /org.gradle.language.assembler.tasks.Assemble.html
    method: GET
    data_selector: description
    params: {}
- name: ObjectiveCCompile
  endpoint:
    path: /org.gradle.language.objectivec.tasks.ObjectiveCCompile.html
    method: GET
    data_selector: description
    params: {}
- name: ObjectiveCppCompile
  endpoint:
    path: /org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile.html
    method: GET
    data_selector: description
    params: {}
- name: WindowsResourceCompile
  endpoint:
    path: /org.gradle.language.rc.tasks.WindowsResourceCompile.html
    method: GET
    data_selector: description
    params: {}
- name: tasks_collection
  endpoint:
    path: /tasks/collection
    method: GET
    data_selector: tasks
    params: {}
- name: targeted_native_component
  endpoint:
    path: /target/native/component
    method: GET
    data_selector: components
    params: {}
notes:
- By default, tasks are not executed in parallel unless a task is waiting on asynchronous
  work and another task (which is not dependent) is ready to execute.
- Parallel execution can be enabled by the --parallel flag when the build is initiated.
- Gradle now supports Java 25.
- Build initialization uses the kotlin-test dependency for Kotlin projects.
- Setting the `-package` argument directly is now deprecated and will become an error
  in Gradle 10.0.0.
- This option is only available when using Antlr 4 and will fail if used with earlier
  versions.
- Currently, all Gradle tests run with the default file-systems of the platform, i.e.
  ext4 for Ubuntu, Amazon Linux and CentOS, NTFS for Windows, and APFS for macOS.
- Gradle runs on all major operating systems.
- You can check the compatibility matrix for more information.
- Gradle supports Kotlin and Groovy as the main build languages.
- The Gradle Wrapper JAR has been converted into an executable JAR.
- The incubating Settings.getDefaults() method, introduced in Gradle 8.10, has been
  removed.
- Guava has been updated from version 32.1.2 to 33.4.6.
- Groovy has been updated to Groovy 3.0.24.
- JaCoCo has been updated to 0.8.13.
- Starting in Gradle 9.0.0, when the java-base plugin is applied, JavaExec will instead
  default to the Java toolchain configured in the java extension.
- Gradle will require JVM 17 or later to run starting in Gradle 9.0.0.
- The daemon log file is now always encoded with UTF-8.
- File-system watching on macOS 11 (Big Sur) and earlier is disabled
- Starting in Gradle 8.8, a deprecation warning will be emitted in cases that were
  not already an error.
- Deprecated calling `registerFeature` using the `main` source set will change behavior
  in Gradle 10.
- Only if the `java` plugin is not applied will the `main` source set be permitted
  when calling `usingSourceSet`.
- The earliest supported Develocity plugin version is 3.13.1.
- Upgrade to Kotlin 1.8.20.
- Upgrade to Groovy 3.0.17.
- Upgrade to Ant 1.10.13.
- Upgrade to CodeNarc 3.2.0.
- Upgrade to PMD 6.55.0.
- Upgrade to JaCoCo 0.8.9.
- Gradle now emits a CACHEDIR.TAG file in some global cache directories
- Compilation warnings from Kotlin DSL scripts are printed to the console output
- The ability to change the allowed usage of a configuration after creation will be
  removed in Gradle 9.0.0.
- Running JVM tests on JVM versions older than 8 is deprecated.
- Creating a TAR tree from a resource with no backing file is no longer supported.
- Usage of invalid Java toolchain specifications is no longer supported.
- Automatic toolchain downloading without explicitly providing repositories to use
  is no longer supported.
- When configuring the built-in test task for Java, Groovy, and Scala projects, Gradle
  no longer allows you to change the test framework used by the Test task after configuring
  options.
- Plugins that are affected by this change should make their classes abstract as well.
- Type safe Kotlin DSL accessors generation for precompiled script plugins does not
  fail the build by default if a plugin requested in such precompiled scripts fails
  to be applied.
- Starting with Gradle 7.6, non-strict accessors generation for Kotlin DSL precompiled
  script plugins has been deprecated.
- Embedded Kotlin has been updated to Kotlin 1.7.10.
- Groovy has been updated to Groovy 3.0.13.
- Default version of CodeNarc has been updated to 3.1.0.
- PMD has been updated to PMD 6.48.0.
- Configuring a non-existing executable now fails.
- Changes to dependency declarations in Test Suites are now strongly typed.
- Invalid Java toolchain specifications are deprecated.
- Deprecated members of the org.gradle.util package now report their deprecation.
- Internal DependencyFactory was renamed.
- Replacement collections in org.gradle.plugins.ide.idea.model.IdeaModule have been
  deprecated.
- Replacement methods in org.gradle.api.tasks.testing.TestReport have been deprecated.
- Deprecated implicit references to outer scope methods in some configuration blocks.
- IncrementalTaskInputs type is deprecated.
- Only a single file will be accepted when using a from import method.
- Checkstyle has been updated to Checkstyle 8.45.1.
- JaCoCo has been updated to 0.8.8.
- Project dependencies defined in test configurations get the test=true classpath
  attribute.
- The signature plugin’s default executable changed from gpg2 to gpg.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Start scripts require bash shell
- Dependency locking now defaults to a single file per project
- Gradle Module Metadata is now reproducible by default
- The jcenter() convenience method is now deprecated
- Updates to bundled Gradle dependencies
- Changes to Groovy and Groovy DSL
- Groovy modularization
- Building Gradle plugins with Groovy 3
- Performance
- Encountering 'Could not find method X for arguments Y on DefaultDependencyHandler'
- Updates to default tool integration versions
- Removal of compile and runtime configurations
- Location of temporary project files for ProjectBuilder
- Location of temporary files for TestKit tests
- File system watching with TestKit on Windows
- Removal of the legacy maven plugin
- Removal of the uploadArchives task
- Changes in dependency version sorting
- Removal of Play Framework plugins
- Removal of deprecated JVM plugins
- Removal of experimental JavaScript plugins
- Configuring the layout of an Ivy repository
- Executing a Gradle build without a settings file is now an error
- Calling Project.afterEvaluate() after project evaluation is now an error
- Calling any mutator methods on ConfigurableFileCollection after the stored value
  calculated throws an exception.
- Users and plugin authors should adjust their code such that all configuration on
  ConfigurableFileCollection happens during configuration time.
- Gradle 6.4 enabled incremental analysis by default.
- Incremental analysis is only available in PMD 6.0.0 or higher.
- The usage of the compile and runtime configurations in the Java ecosystem plugins
  has been discouraged since Gradle 3.4.
- Users should migrate to the publishing system of Gradle by using either the maven-publish
  or ivy-publish plugins.
- When Gradle detects problems with task definitions it will show deprecation warnings.
- The old API based on IncrementalTaskInputs has been deprecated.
- Forcing dependency versions using force = true on a first-level dependency has been
  deprecated.
- In Gradle 5.0, we removed the --no-search-upward CLI parameter.
- The methods BuildListener.buildStarted and Gradle.buildStarted are being deprecated
  to avoid confusion.
- To prevent duplicate entries in archives, encountering duplicates while creating
  an archive will produce a deprecation message and fail the build starting with Gradle
  7.0.
- A Gradle build is defined by a settings.gradle[.kts] file in the current or parent
  directory.
- Task property has type ConfigurableFileCollection will ignore changes made to the
  contents of the collection once the task starts execution.
- Creating SignOperation instances directly is now deprecated.
- Declaring an incremental task without outputs is now deprecated.
- Method WorkerExecutor.submit() is deprecated.
- Project names configured via EclipseProject.setName(…) were honored by Gradle and
  Buildship in all cases, even when the names caused conflicts.
- Default PMD version upgraded to 6.15.0.
- Embedded Kotlin upgraded to 1.3.41.
- User supplied Eclipse project names may be ignored on conflict.
- Collection properties default to empty collection
- 'Worker API: working directory of a worker can no longer be set'
- Avoid upgrading Gradle and migrating to Kotlin DSL at the same time in order to
  ease troubleshooting in case of potential issues.
- The default memory settings for the command-line client, the Gradle daemon, and
  all workers including compilers and test executors, have been greatly reduced.
- Gradle will now, by convention, look for Checkstyle configuration files in the root
  project’s *config/checkstyle* directory.
- The structure of Gradle’s plain console output has changed, which may break tools
  that scrape that output.
- Error messages will be directed to standard error rather than standard output now,
  unless a console is attached to both standard output and standard error.
- Keep the old Maven build and new Gradle build side by side.
- Develop a mechanism to verify that the two builds produce the same artifacts.
- Create a Build Scan for the Gradle build.
- Importing an Ant build is not supported with the configuration cache.
- Features are introduced in the incubating state to allow real-world feedback to
  be incorporated into the feature before making it public.
- When incubating features are either promoted to public or removed, the feature preview
  flags for them become obsolete, have no effect, and should be removed from the settings
  file.
- You should never alter these files.
- Do not edit the wrapper files manually.
- Gradle knows which tasks depend on which others, and will automatically run them
  in the correct order.
- You don’t need to worry about ordering — Gradle figures it out for you.
- Incremental builds are always enabled.
- To permanently enable verbose mode, add org.gradle.console=verbose to your gradle.properties
  file.
- The build cache allows you to share and reuse unchanged build and test outputs across
  teams.
- A Build Scan is a representation of metadata captured as you run your build.
- Visit the Build Scan page to learn more.
- The Gradle Wrapper is designed to be committed to source control.
- Tasks can come from several places.
- Gradle includes some tasks by default, and many others are added automatically when
  you apply plugins.
- Uses Maven Central for resolving dependencies.
- 'The default location for Maven local repository may vary but is typically: Mac:
  /Users/[username]/.m2, Linux: /home/[username]/.m2, Windows: C:\Users[username]\.m2'
- Most tasks now have the UP-TO-DATE label.
- Gradle is efficient, especially with the local build cache turned on.
- Gradle will periodically clean up the local build cache directory by removing entries
  that have not been used recently to conserve disk space.
- Continuous build uses file system watching to detect changes to the inputs.
- If file system watching does not work on your system, then continuous build won’t
  work either.
- Gradle creates the build directory by default, so it must be writable. If a custom
  build directory is specified, it must exist and also be writable.
- Gradle recognized buildSrc folder
- Contains common build logic from sub-project-1, sub-project-2 and sub-project-3
- Gradle scripts consist of statements and blocks.
- Build scripts are evaluated top to bottom during the configuration phase.
- Gradle scripts are based on dynamic closures in Groovy or static lambdas in Kotlin
- Properties and logic should be deferred using Provider or lazy APIs when possible
- Script plugins should be avoided.
- Task configuration avoidance is when Gradle avoids configuring task2 when task1
  was called and task1 does NOT depend on task2.
- Uses a multi-project build structure with subprojects 'app' and 'lib'.
- Composite builds are used for separating build logic.
- The task action is annotated with @TaskAction.
- The task has a single input, the license file name, annotated with @Input.
- 'Caches are classified into five categories: Released wrapper distributions, Snapshot
  wrapper distributions, Downloaded resources, Created resources, Build cache.'
- Avoid hardcoded paths in build scripts.
- Gradle encourages laziness in build scripts.
- The `copy()` method is not incremental.
- Not setting permissions explicitly will preserve the permissions of the original
  files.
- Setting file permissions explicitly for a file doesn’t support UP-TO-DATE checks.
- Starting with Gradle 9, archives are reproducible by default.
- You can not change the destination path of empty directories.
- The DEBUG log level can expose sensitive security information to the console
- Starting with Gradle 9.0.0, if a project directory is missing or read-only, the
  build will fail.
- If a project directory is missing or read-only, the build will fail.
- Setting the Project.projectDir property is important when locating projects in nested
  subdirectories to avoid unintentionally creating empty projects.
- Provides a convenient way to organize and reuse custom build logic across your build.
- Starting with Gradle 9.0.0, missing or read-only project directories will cause
  the build to fail.
- Gradle’s parallel execution feature optimizes CPU utilization to accelerate builds
  by concurrently executing tasks from different projects.
- During parallel execution, each worker handles a specific project exclusively.
- It’s crucial to correctly declare task dependencies and inputs/outputs to avoid
  ordering issues.
- 'Starting with Gradle 9.0.0, this is enforced strictly: If a project directory is
  missing or read-only, the build will fail.'
- Included builds do not share any configuration with the composite build or the other
  included builds.
- Each included build is configured and executed in isolation.
- Every time you run a Gradle build, Gradle attempts to locate a settings.gradle or
  settings.gradle.kts file.
- Tasks are defined using strings for task names.
- Command line options can only be declared for custom tasks via annotation.
- Task outputs and inputs are connected before any location is defined.
- The setters can be called at any time before the task is executed, and the change
  will automatically affect all related input and output properties.
- Implicit task dependencies also work for input properties that are not files.
- Convention properties should define defaults.
- Use finalizeValue() to make properties unmodifiable once set.
- Uses configuration avoidance APIs to minimize eager task creation.
- Uses Worker API to generate MD5 hashes in parallel
- Isolates work using worker daemons for efficient processing
- A daemon is considered compatible only if it uses the same Java executable.
- A daemon is considered compatible if its classpath contains all the classpath entries
  requested.
- A daemon is considered compatible if it has at least the same heap size settings
  as requested.
- A daemon is compatible if it has set all the JVM arguments requested.
- A daemon is considered compatible if it has set all the system properties requested
  with the same values.
- A daemon is considered compatible if it has set all the environment variables requested
  with the same values.
- A daemon is considered compatible if it contains all the bootstrap classpath entries
  requested.
- A daemon is considered compatible only if debug is set to the same value as requested.
- A daemon is considered compatible only if enable assertions are set to the same
  value as requested.
- A daemon is considered compatible only if the default character encoding is set
  to the same value as requested.
- Convention plugins help streamline the build process.
- Script plugins are hard to maintain.
- It is recommended to use a statically-typed language like Java or Kotlin for implementing
  plugins.
- Before publishing your plugin, you must create an account on the Gradle Plugin Portal.
- Build services are intended to be used by tasks.
- A build service implementation must be thread-safe.
- The runner executes tests in an isolated environment using a dedicated working directory.
- Ant integration is not fully compatible with the configuration cache.
- Configuring the toolchain protects against problems with the project being built
  with different Java versions.
- Gradle provides detailed reporting for compilation failures.
- Using a Java preview feature is very likely to make your code incompatible with
  that compiled without a feature preview.
- Gradle executes tests in a separate ('forked') JVM, isolated from the main build
  process.
- When using parallel test execution, make sure your tests are properly isolated from
  one another.
- Gradle treats the pattern as fully-qualified if it doesn’t start with an uppercase
  letter.
- The wildcard '*' has no special understanding of the '.' package separator.
- If custom arguments are used for patching, these are not picked up by Eclipse and
  IDEA. You will most likely see invalid compilation errors in the IDE.
- Gradle allows configuring toolchains on both project and task levels.
- This flag prevents accidental use of newer APIs that are not available in the specified
  version.
- This does not control which JDK is used—only how the compiler treats source code.
- You should only use this method in cases where you need backward compatibility but
  cannot use toolchains.
- This approach is useful for legacy projects that do not use toolchains and expect
  a specific JDK to be active in the environment.
- Toolchain support is available in the Java plugins and for the tasks they define.
- The jvm block in toolchainManagement only resolves after applying a toolchain resolver
  plugin.
- The plugin uses property injection, so it must be abstract and a settings plugin.
- Resolver plugins must apply the jvm-toolchain-management base plugin.
- Gradle does not define any repositories by default. You need to define at least
  one with the help of Project.repositories{}.
- The compile and runtime configurations have been removed with Gradle 7.0.
- The only mandatory configuration for the plugin is the specification of the main
  class (i.e. entry point) of the application.
- If your application requires a specific set of JVM settings or system properties,
  you can configure the applicationDefaultJvmArgs property.
- Gradle will fail if you try to add a dependency in a platform instead of a constraint.
- The Groovy plugin allows you to configure custom locations for Groovy production
  and test source files.
- Groovy projects need to explicitly declare a Groovy dependency.
- Secondary variants are sometimes referred to in tooling or logs, but this term is
  being deprecated in favor of more precise concepts like artifact sets or precomputed
  transforms.
- Dependency verification is automatically enabled once the configuration file for
  dependency verification is discovered.
- Gradle will verify all artifacts using checksums, but will not verify signatures.
- Using key servers may result in builds reaching out too often if not regularly updated.
- Gradle will verify all artifacts using checksums.
- Gradle will not verify changing dependencies.
- A valid key may have been used to sign artifact A which you trust.
- When trusting artifacts, it’s a typical company policy to trust internal artifacts.
- Dependency verification can fail in different ways.
- Gradle will not automatically remove unused entries from verification metadata.
- Using dynamic versions and changing modules can lead to unreproducible builds.
- For reproducible builds, it’s crucial to use dependency locking when declaring dependencies
  with dynamic versions.
- This lockfile should be included in source control to ensure that all team members
  and environments use the exact same dependency versions.
- Dependency constraints allow you to define the version or version range for a specific
  dependency.
- The constraints block is used within the dependencies block to declare these constraints.
- Gradle supports importing BOMs which are POM files containing <dependencyManagement>
  sections that manage dependency versions.
- The org.gradle.status module attribute indicates the lifecycle status or maturity
  level of a module or library.
- The default status scheme, ordered from least to most mature status, is integration,
  milestone, release.
- Forcing a specific version of a dependency should be a conscious and deliberate
  decision. It can lead to conflicts or unexpected behavior, especially when transitive
  dependencies rely on different versions.
- Ensure the file exists before attempting to import it.
- Use a TOML file or the Settings API.
- Ensure Gradle doesn't fail when resolving dependencies without an instrumented variant
  by defining a fallback.
- A great way to check everything is working is by running the resolvableConfigurations
  task on the consumer side.
- Transforms modify artifacts BEFORE they become an input to a task.
- Gradle applies transformations to artifacts, not variants.
- Artifact Transforms execution for project dependencies can be discovered ahead of
  task execution.
- Artifact Transforms execution for external module dependencies cannot be discovered
  ahead of task execution.
- Certain repositories will not be able to handle all supported characters.
- Maven restricts groupId and artifactId to a limited character set.
- Uses the Signing Plugin to generate a signature file for each artifact.
- Checksum files will be generated for all artifacts and signature files.
- Certain repositories are not able to handle all supported characters. For example,
  the ':' character cannot be used as an identifier when publishing to a filesystem-backed
  repository on Windows.
- Gradle will handle any valid Unicode character for 'organisation', 'module' and
  'revision'. The only values that are explicitly prohibited are '\', '/' and any
  ISO control character.
- Gradle builds can significantly improve with optimizations.
- Avoid dependency resolution during configuration to improve build performance.
- Use Build Scan to identify slow dependency resolution.
- Gradle enables the Daemon by default since Gradle 3.0.
- If builds start behaving unexpectedly, try stopping and restarting the Daemon.
- To disable monitoring, set the org.gradle.daemon.performance.enable-monitoring Daemon
  option to false.
- Gradle enables file system watching by default for supported operating systems since
  Gradle 7.
- Run the build with the '--watch-fs' flag to force file system watching for a build.
- 'To force file system watching for all builds (unless disabled with ''--no-watch-fs''),
  add the following value to ''gradle.properties'': org.gradle.vfs.watch=true.'
- 'To disable file system watching: use the ''--no-watch-fs'' flag or set ''org.gradle.vfs.watch=false''
  in ''gradle.properties''.'
- Gradle automatically excludes some common directories (like '.git', '.gradle', and
  'build/') from file system watching.
- There is no public mechanism to configure additional file system watch excludes.
- Files and directories in your project that are accessed via symlinks do not benefit
  from file system-watching optimizations.
- On Windows and macOS, Gradle might report changes received since the last build,
  even if you haven’t changed anything. These are harmless notifications about changes
  to Gradle’s caches and can be safely ignored.
- Gradle tests whether any of the task inputs or outputs has changed since the last
  build.
- Incremental build won’t work unless a task has at least one task output.
- Tasks with validation warnings are executed without any optimizations.
- The in-memory representation of the file system state is invalidated before an invalid
  task is executed.
- By default, the build cache is not enabled.
- Gradle will try to reuse outputs from previous builds for all builds, unless explicitly
  disabled with --no-build-cache.
- Task output caching is automatically enabled when you enable the build cache.
- Use of HTTPS requires the server to present a certificate that is trusted by the
  build’s Java runtime.
- Currently, Gradle has no good way to defend against these changes, and will simply
  cache whatever is in the output directory once the task is finished.
- Only use clean builds to upload content to the cache until you have confidence that
  the incremental build behavior is flawless.
- Gradle’s build cache can be very useful in reducing CI infrastructure cost and feedback
  time, but it usually has the biggest impact when developers can reuse cached results
  in their local builds.
- A task can only be loaded from the cache if it has stable task inputs.
- Tasks having files as inputs can declare the parts of a file’s path what are essential
  to them.
- Unit tests are easy to cache as they normally have no external dependencies.
- Integration tests can depend on a variety of inputs outside of the test and production
  code.
- Android Studio users should use the latest Android Gradle Plugin to ensure compatibility
  and benefit from performance improvements in new releases.
- Each new version of these tools includes many performance improvements, not least
  of which is to the build cache.
- When running this test make sure that you have no remote cache configured, and storing
  in the local cache is enabled.
- You should see all cacheable tasks loaded from cache, while non-cacheable tasks
  should be executed.
- Gradle does not track changes in environment variables for tasks.
- Absolute paths are often passed as environment variables.
- If you are using tools in your Test task called integTest which depend on the contents
  of the LANG variable you should add environment variables as inputs.
- 'This feature is not enabled by default and has the following limitations: It does
  not yet support all Core Gradle Plugins and features. Full support is in progress.'
- When it is enabled, Gradle always loads from the configuration cache - even on a
  cache miss - to ensure that hits and misses are handled consistently.
- Syncing a project in an IDE does not benefit from the Configuration Cache. Only
  running tasks through the IDE will leverage the cache.
- It is possible to change the behavior of a task based on project properties specified
  at invocation time.
- Configuring the build environment is a powerful way to customize the build process.
- There are many mechanisms available.
- Project properties can be accessed in your build files and get passed in from an
  external source when your build is executed.
- If the same property is defined in multiple locations, the file’s location determines
  its precedence.
- Configuring a proxy for downloading dependencies is done via standard JVM system
  properties.
- Configuring a proxy (for downloading dependencies, for example) is done via standard
  JVM system properties.
- If your proxy requires NTLM authentication, you may need to provide the authentication
  domain as well as the username and password.
- Gradle's C++ support uses a ConfigurableFileCollection directly from the application
  or library script block to configure the set of sources to compile.
- Libraries make a distinction between private (implementation details) and public
  (exported to consumer) headers.
- Swift Library Plugin creates an additional configuration — api — for dependencies
  that are required for compiling and linking both the module and any modules that
  depend on it.
- Gradle executes tests in a separate (‘forked’) process.
- The test filtering only support XCTest compatible filters at the moment.
- JetBrains TeamCity is a powerful and user-friendly Continuous Integration and Deployment
  server that works out of the box.
- TeamCity Professional is a free fully functional edition suitable for average projects.
- Configuring build scans is especially helpful on cloud CI systems like Travis CI
  because it has additional environment and test results information that are difficult
  to obtain otherwise.
- We recommend disabling automatic build import while enabling automatic reloading
  of script dependencies.
- Using internal Kotlin DSL APIs in plugins and build scripts can break builds when
  either Gradle or plugins are updated.
- The Kotlin DSL is known to be slower than the Groovy DSL on first use, for example
  with clean checkouts or on ephemeral continuous integration agents.
- In IntelliJ IDEA, you must import your project from the Gradle model in order to
  get content assist and refactoring support for your Kotlin DSL build scripts.
- Kotlin DSL script compilation avoidance has known issues.
- The Kotlin DSL will not support the model {} block, which is part of the discontinued
  Gradle Software Model.
- Using the latest versions of Gradle, applied plugins, and your IDE should be your
  first move.
- The Kotlin DSL will not support `model {}` elements. This is part of the discontinued
  Gradle Software Model.
- Use the plugins {} block whenever possible to apply your plugins.
- Some tasks selectors, like `help` or `dependencies`, will only run the task on the
  project they are invoked on and not on all the subprojects.
- Default logging level is lifecycle.
- Default Gradle Daemon idle timeout is 10800000 milliseconds (3 hours).
- Default behavior for problems report generation is enabled.
- To make the Wrapper files available to other developers and execution environments,
  you need to check them into version control.
- HTTP Basic Authentication should only be used with HTTPS URLs and not plain HTTP
  ones.
- If the checksum does not match the one you expected, chances are the wrapper task
  wasn’t executed with the upgraded Gradle distribution.
- If the checksum is not listed on the page, the Wrapper JAR might be from a milestone,
  release candidate, or nightly build or may have been generated by Gradle 3.3 to
  4.0.2.
- Tasks used to build native binaries.
- Skipping the check will be deprecated soon.
- Starting with Gradle 9.0, the Kotlin metadata version check will be enabled by default.
- Improved deprecation messages when creating configurations with reserved names
- Improved handling of wrapped assertion errors when running tests
- Version catalogs are the recommended way to centrally define dependency modules,
  plugins, and their versions.
- The Wrapper JAR now contains a META-INF/LICENSE file.
- Titles:Gradle Release Notes,New features and usability improvements
- Paths in Copy and Sync tasks are canonicalized to avoid unexpected behaviors.
- Deprecation of multi-string dependency notation will no longer be permitted in Gradle
  10.
- The archives configuration added by the base plugin has been deprecated and will
  be removed in Gradle 10.0.0.
- Gradle API now uses JSpecify nullability annotations.
- Plugins that use javax.annotation (JSR-305) annotations will continue to work in
  Gradle 9.0.0 as they did before.
- Gradle Enterprise has been renamed to Develocity, and the plugin ID has changed
  from com.gradle.enterprise to com.gradle.develocity.
- We strongly encourage users to adopt the latest released version of the Develocity
  plugin, even when using it with older versions of Gradle.
- The order in which the subprojects (modules) are included does not matter.
- Some task selectors, like help or dependencies, will only run the task on the project
  they are invoked on.
- 'Gradle runs in three distinct phases: Initialization, Configuration, Execution.'
- Tasks form a Directed Acyclic Graph (DAG).
- Gradle distinguishes between eager and lazy evaluation to control when values are
  computed and how they participate in up-to-date checks, caching, and task wiring.
- Tasks can be registered with various types such as Delete and DefaultTask.
- Tasks can have dependencies on other tasks.
- Plugins introduce new tasks, domain objects, and conventions.
- Plugins are essential for automating common build tasks and tailoring the build
  process.
- The plugins DSL provides a concise and convenient way to declare plugin dependencies.
- The `pluginManagement{}` block can be used in a `settings.gradle(.kts)` file, where
  it must be the first block in the file.
- Gradle wrapper allows executing tasks easily
- The application plugin facilitates building and running Java applications
- The license plugin exposes a greeting task that prints a message.
- While a custom class has been created, it is not yet added to the LicensePlugin.
- Publishing precompiled script plugins is not typical or recommended (they are meant
  for internal use only).
- Each test creates a temporary project with a build.gradle file, input files, and
  runs the plugin task using GradleRunner.
- Functional tests live in src/functionalTest/java and verify that your plugin behaves
  correctly in a real build.
- The `maven-publish` plugin lets you publish artifacts (like JARs, libraries, or
  plugins) to a Maven repository.
- A Bot User OAuth Token will be generated. It will start with `xoxb-`. Be sure to
  save this token!
- Uses Slack Web API and requires a bot token and a target channel.
- Includes robust error handling for failed API calls.
- The functional test requires the SLACK_TOKEN environment variable to be set.
- The group and version must be set or the publish task will fail.
- Properties set this way are not inherited across build boundaries when using composite
  builds.
- Do not put source files in your root project; instead, put them in a separate project.
- 'Composite builds must be explicitly included: Use the includeBuild method to locate
  and include a build in order to use its products.'
- Nesting projects in a sensible hierarchical directory structure is common practice
  in larger Gradle builds.
- Unused projects - even if empty - can surprise maintainers, clutter reports, and
  make your build harder to understand.
- To avoid these downsides when using a hierarchical project structure, you can provide
  a flat name when including the project and explicitly set the Project.projectDir
  property for any projects located in nested directories.
- Consistent and descriptive names in your version catalog enhance readability and
  maintainability across your build scripts.
- Tasks with no group are hidden from the Tasks Report unless --all is specified.
- The Configuration Cache is the preferred way to execute Gradle builds, but it is
  not enabled by default.
- Many existing builds and plugins are not yet fully compatible, and adopting it may
  involve refactoring of build logic.
- Enabling it by default could lead to unexpected build failures, so Gradle uses an
  opt-in adoption model to allow teams to verify compatibility and adopt configuration
  caching incrementally and safely.
- Set UTF-8 as the default file encoding to ensure consistent behavior across platforms.
- Use the Build Cache to save time by reusing outputs produced by previous builds.
- Use the Configuration Cache to significantly improve build performance by caching
  the result of the configuration phase.
- Configuration Caching is not enabled by default
- Enabling it by default could lead to unexpected build failures
- Always set the distributionSha256Sum property in your gradle-wrapper.properties
  file to verify the integrity of the downloaded Gradle distribution.
- It's crucial to correctly declare task dependencies and inputs/outputs to avoid
  ordering issues.
- The feature is off by default.
- Isolated Projects is a pre-alpha feature.
- Uses Gradle for task management.
- Tasks can have dependencies and ordering.
- Global lifecycle tasks can span multiple subprojects.
- Task definitions are shown per project based on context.
- Default message is 'Hello from Gradle' if not explicitly set.
- Only Gradle versions 7 or higher can be explicitly targeted by a variant, as support
  for this was only added in Gradle 7.
- During the build, the first few instances of a problem are reported as a Problem,
  providing all information available for that problem.
- At the end of the build, subsequent occurrences of the same problem are grouped
  and summarized as a ProblemSummary.
- By default, Gradle does not use the Configuration Cache.
- This does not guarantee that the build will succeed.
- Warning mode is a migration and troubleshooting aid and not intended as a persistent
  way of ignoring incompatibilities.
- The parallel configuration caching feature is *incubating*, and some builds may
  not work correctly. A common symptom of incompatibility is `ConcurrentModificationException`
  errors during the configuration phase.
- The read-only configuration caching feature is *incubating*.
- Tasks should avoid referencing resolved results and instead rely on lazy specifications
  to defer dependency resolution until execution time.
- Tasks must not use any Project objects during execution.
- Avoid reading the value of system properties and environment variables at configuration
  time to avoid cache misses.
- Use value supplier APIs to declare files as potential build configuration inputs.
- The warning mode is a migration and troubleshooting aid and not intended as a persistent
  way of ignoring incompatibilities.
- By default, Gradle allows up to 512 warnings before failing the build.
- Support for configuration caching with certain Gradle features is not yet available.
  These features will be supported in future Gradle releases.
- The Configuration Cache is currently stored locally only.
- Defines versions of dependencies and plugins in gradle/libs.versions.toml
- Using ArtifactView allows extraction without changing underlying dependency resolution
  logic.
- Project dependencies allow you to reference other projects within a multi-project
  Gradle build.
- Type-safe project accessors are an incubating feature which must be enabled explicitly.
- Gradle supports a model for rich version declarations, allowing you to combine different
  levels of version specificity.
- 'Configurations are intended to be used for a single role: declaring dependencies,
  performing resolution, or defining consumable variants.'
- Gradle supports additional protocols beyond http and https, such as file, sftp,
  and s3 for custom URLs.
- Using local Maven or Ivy repositories makes build reproducibility much harder to
  achieve.
- Gradle will warn you if a project or plugin declares a repository when using PREFER_SETTINGS
  mode.
- To enforce that only repositories declared in settings.gradle(.kts) are used, configure
  Gradle to fail the build when a project plugin is declared.
- Gradle strictly uses only the repositories declared in the build script.
- Flat directory repositories are discouraged, as they do not support metadata formats
  like Ivy XML or Maven POM files.
- Usernames and passwords should never be stored in plain text in your build files.
  Instead, store credentials in a local gradle.properties file, or provide the credentials
  via environment variables.
- Using exclusive repository content filters is a Gradle Best Practice.
- Dynamic resolve mode is only available for Gradle’s Ivy repositories.
- Automatically imports a catalog in the gradle directory named libs.versions.toml.
- buildSrc does not automatically inherit the version catalog from the main project
- In precompiled script plugins inside buildSrc, the version catalog can be accessed
  using extensions.getByType(VersionCatalogsExtension)
- Use version catalogs for defining and sharing dependency coordinates across projects.
- Use platforms when you need to influence or enforce version alignment across modules.
- The shared read-only dependency cache is an incubating feature.
- Dependency resolution consistency is an incubating feature.
- This configuration ensures that all runtime classpaths are consistent with their
  corresponding compile classpaths, promoting reliable and predictable builds.
- By implementing dependency resolution consistency, you can prevent subtle bugs and
  maintain uniformity in your project’s dependency versions across different classpaths.
- The Tooling API is a Java library published as part of the Gradle release.
- The current version of the Tooling API library is compiled with Java 8 compatibility.
- There should be no other settings files.
- A build file in the root project is optional.
- A strict version behaves like a force, meaning it overrides transitive dependencies.
- If another dependency requires a higher version, Gradle will fail with a resolution
  error.
- Use version ranges instead of absolute strict versions to allow flexibility.
- The implementation dependency omits the version.
- The constraints block enforces specific versions for httpclient and commons-codec.
- The constraint for commons-codec only applies if it is pulled transitively.
- Use exclusions only when necessary to avoid runtime errors.
- Ensure all dependencies agree on an exclusion for it to be effective.
- Consider alternative Gradle features like dependency constraints or metadata rules
  before excluding.
- Gradle's optimistic dependency resolution may inadvertently upgrade dependencies,
  causing compatibility issues.
- To prevent unexpected upgrades, you can enforce strict resolution (failOnVersionConflict),
  explicitly constrain dependencies using the strictly keyword, and use dependency
  locking (activateDependencyLocking) to maintain consistent versions across builds.
- Using platforms and BOMs ensures consistent dependency versions, avoiding compatibility
  issues.
- When no published BOM exists, virtual platforms allow manual alignment of dependencies.
- This configuration ensures that only the correct artifacts are exposed and prevents
  accidental dependencies on internal tasks.
- Declaring dependencies with a custom extension (e.g. `@zip`, `@jar`, or `@custom`)
  disables metadata resolution.
- While the resolution engine supports multi-variant components independently of the
  ecosystem, feature variants are currently only supported by the Java plugins.
- Do not use the main source set when registering a feature. This behavior will be
  deprecated in a future version of Gradle.
- Setting the -package argument directly is now deprecated and will become an error
  in Gradle 10.0.0.
- This API requires an authentication step before accessing resources.
errors:
- Improved error message for version constraint conflicts.
- Error and warning reporting improvements.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Using unsupported API to start external processes at configuration time is no longer
  allowed with the configuration cache enabled
- Running the Test task successfully when no test was executed is now deprecated and
  will become an error in Gradle 9.
- Identical consumable configurations are now an error
- Deprecated Gradle features were used in this build, making it incompatible with
  Gradle 7.0.
- This will become an error in Gradle 6.0.
- This may introduce unexpected cycles in the task dependency graph.
- This will now be an error because Gradle does not know how to build files that are
  not task outputs.
- Cannot add task 'wrapper' as a task with that name already exists.
- If a task does not respond to an interrupt within 10s, the daemon will shut down
  to free up system resources.
- Compilation failed; see the compiler output below.
- Execution failed for task ':project1:compileJava'.
- A low value (other than 0) can severely hurt the performance of the tests.
- 'Dependency verification failed for configuration: checksum is missing from verification
  metadata.'
- 'Dependency verification failed for configuration '':compileClasspath'': checksum
  is missing from verification metadata.'
- 'Dependency verification failed for configuration '':compileClasspath'': expected
  a ''sha256'' checksum but was ''daddea1ea0be0f56978ab3006b8ac92834afeefbd9b7e4e6316fca57df0fa636'''
- 'Dependency verification failed for configuration '':compileClasspath'': Artifact
  was signed with key ''379ce192d401ab61'' but signature didn''t match.'
- Dependency locking does not currently apply to source dependencies.
- The specified catalog file does not exist.
- An invalid catalog file format (e.g., .txt) was used.
- If the consumer fails to resolve the artifact, check the attributes in the consumer
  are compatible with those in the producer.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- Multiple Gradle daemons might be spawned because the Gradle JDK and JAVA_HOME locations
  are different.
- When enabled by default, file system watching acts conservatively when it encounters
  content on unsupported file systems.
- 'java.io.IOException: Too many open files'
- '413 Payload Too Large: The payload is larger than the server will accept.'
- If you think the Wrapper JAR was compromised, please let the Gradle team know by
  sending an email to security@gradle.com.
- The configuration customCompileOnly was created explicitly. This configuration name
  is reserved for creation by Gradle. This behavior has been deprecated.
- Creating configurations with reserved names has been deprecated. This will fail
  with an error in Gradle 9.0.
- Deprecation warnings will be issued for deprecated configurations.
- Attempting to reference libraries or bundles in the plugins {} block will now result
  in a build failure.
- 'error: Invalid channel'
- 'error: Not Authorized'
- Gradle will create empty projects for each element in every hierarchical path, even
  if some of those directories do not contain actual Gradle projects.
- Execution failed for task ':sample-project:myFailingTask'.
- Message from runtime exception
- Configuration Cache problem emitted when using other kinds of providers.
- The producer project properly declares the artifact.
- There are no conflicting configurations with different attributes.
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Retry the request after some time.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://gradle.com
  headers:
    Accept: application/json
source_metadata: null
