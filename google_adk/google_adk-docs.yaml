resources:
- name: weather_sentiment_agent
  endpoint:
    path: /weather_sentiment_agent
    method: GET
    data_selector: response
    params: {}
- name: weather_report
  endpoint:
    path: /getWeatherReport
    method: POST
    data_selector: report
    params: {}
- name: sentiment_analysis
  endpoint:
    path: /analyzeSentiment
    method: POST
    data_selector: sentiment
    params: {}
- name: weather_report
  endpoint:
    path: /getWeatherReport
    method: GET
    data_selector: report
    params: {}
- name: sentiment_analysis
  endpoint:
    path: /analyzeSentiment
    method: GET
    data_selector: sentiment
    params: {}
- name: list_artifacts
  endpoint:
    path: /listArtifacts
    method: GET
    data_selector: artifacts
    params: {}
- name: load_artifact
  endpoint:
    path: /loadArtifact
    method: GET
    data_selector: artifact
    params: {}
- name: save_artifact
  endpoint:
    path: /saveArtifact
    method: POST
    data_selector: version
    params: {}
- name: search_memory
  endpoint:
    path: /searchMemory
    method: POST
    data_selector: memories
    params: {}
- name: weather_report
  endpoint:
    path: /getWeatherReport
    method: GET
    data_selector: report
    params: {}
- name: sentiment_analysis
  endpoint:
    path: /analyzeSentiment
    method: GET
    data_selector: sentiment
    params: {}
- name: greet_tool
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: math_toolset_instance
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: event
  endpoint:
    path: /events
    method: POST
    data_selector: event_data
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: session_data
- name: runner
  endpoint:
    path: /google/adk/runners/runner
    method: GET
- name: session_service
  endpoint:
    path: /google/adk/services/sessionService
    method: GET
- name: artifact_service
  endpoint:
    path: /google/adk/services/artifactService
    method: GET
- name: memory_service
  endpoint:
    path: /google/adk/services/memoryService
    method: GET
- name: SessionService
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: MemoryService
  endpoint:
    path: /memory
    method: GET
    data_selector: memory
- name: MyCallbackAgent
  endpoint:
    path: /agents/MyCallbackAgent
    method: POST
    data_selector: agent_response
    params: {}
- name: model_callback_agent
  endpoint:
    path: /create_llm_agent
    method: POST
    data_selector: agent
    params: {}
- name: artifact
  endpoint:
    path: /artifacts
    method: POST
    data_selector: artifact_data
- name: artifact
  endpoint:
    path: /artifacts
    method: POST
- name: session_artifact
  endpoint:
    path: /artifacts/session
    method: POST
    data_selector: artifact
    params:
      filename: summary.txt
- name: user_artifact
  endpoint:
    path: /artifacts/user
    method: POST
    data_selector: artifact
    params:
      filename: user:settings.json
- name: artifact
  endpoint:
    path: /artifacts
    method: GET
    data_selector: artifacts
- name: artifact
  endpoint:
    path: /artifacts
    method: POST
    data_selector: artifactData
    params: {}
- name: list_user_files
  endpoint:
    path: /list_user_files
    method: GET
    data_selector: available_files
    params: {}
- name: artifacts
  endpoint:
    path: /list_user_files
    method: GET
    data_selector: availableFiles
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: Event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: final_response
  endpoint:
    path: /api/v1/final_response
    method: GET
    data_selector: events
    params: {}
- name: user_input
  endpoint:
    path: /api/v1/user_input
    method: POST
    data_selector: events
    params: {}
- name: user_profile
  endpoint:
    path: /user/profile
    method: POST
    data_selector: profile_status
    params: {}
- name: user_orders
  endpoint:
    path: /user/orders
    method: GET
    data_selector: orders
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: document_artifact
  endpoint:
    path: /path/to/artifacts
    method: GET
    data_selector: artifacts
    params: {}
- name: ToolContext
  endpoint:
    path: /google/adk/tools/ToolContext
    method: GET
    data_selector: context
    params: {}
- name: CallbackContext
  endpoint:
    path: /google/adk/agents/callback_context/CallbackContext
    method: GET
    data_selector: context
    params: {}
- name: evaluation_metrics
  endpoint:
    path: /evaluate
    method: GET
    data_selector: criteria
    params: {}
- name: adk-python
  endpoint:
    path: /adk-python
    method: GET
- name: adk-java
  endpoint:
    path: /adk-java
    method: GET
- name: adk-docs
  endpoint:
    path: /adk-docs
    method: GET
- name: adk-web
  endpoint:
    path: /adk-web
    method: GET
notes:
- Tools perform specific actions, such as querying databases and making API requests.
- Agents leverage tools dynamically through mechanisms often involving function calling.
- The agent provides weather information and analyzes sentiment based on user feedback.
- If the 'get_weather_report' tool returns an 'error' status, inform the user that
  the weather information for the specified city is not available.
- Handles weather and sentiment analysis queries.
- This cooperative yield/pause/resume cycle between the Runner and your Execution
  Logic forms the core of the ADK Runtime.
- The ADK Runtime is the underlying engine that powers your agent application during
  user interactions.
- While commitment happens after the yield, code running later within the same invocation
  can often see the local, uncommitted changes. This is sometimes called a 'dirty
  read'.
- Ensures that state changes are applied atomically and only once based on the complete
  response from the LLM, while still allowing the UI to display text progressively
  as it's generated.
- The Runner manages the overall Event Loop and processes events yielded by Execution
  Logic.
- ADK offers in-memory implementations for local testing and fast development.
- All data stored using in-memory options is lost when your application restarts.
- Uses InMemoryRunner for session handling
- Artifacts represent a crucial mechanism for managing named, versioned binary data
  associated with user interactions.
- Artifacts represent a crucial mechanism for managing named, versioned binary data
  associated either with a specific user interaction session or persistently with
  a user across multiple sessions.
- Artifacts can be scoped either to a specific session or to a user across all their
  sessions.
- The service must be provided when initializing the Runner
- Artifacts represent a crucial mechanism for managing named, versioned binary data.
- Artifacts are not stored directly within the agent or session state.
- This function would typically be wrapped in a FunctionTool
- Ensure your environment has credentials to access this bucket.
- Uses a Python dictionary held in memory for artifact storage.
- All stored artifacts are lost when the application process terminates.
- Events are the fundamental units of information flow within the Agent Development
  Kit (ADK).
- Events are central to ADK's operation for several key reasons.
- Understanding events is crucial because they are the primary way components communicate,
  state is managed, and control flow is directed.
- Provides everything CallbackContext does, plus specialized methods essential for
  tool execution.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Provides specialized methods essential for tool execution, like handling authentication,
  searching memory, and listing artifacts.
- Context is essential for maintaining state and passing data across multiple steps
  in a conversation.
- Setting ctx.end_invocation = True is a way to gracefully stop the entire request-response
  cycle from within the agent or its callbacks/tools.
- Securely manage API keys or other credentials needed by tools.
- This eval set evaluation method requires the use of a paid service
- If you intend to progress beyond prototype, this is a highly recommended best practice.
- Defaults to 1.0 for tool_trajectory_avg_score and 0.8 for response_match_score if
  no criteria are provided.
- MCP is an open standard designed to standardize how LLMs communicate with external
  applications, data sources, and tools.
- FastMCP handles all the complex MCP protocol details and server management.
- Plugins are not supported by the ADK web interface.
- This is an experimental feature. Currently available in Python.
- Ensure agents operate safely and securely.
- Use identity and authorization to control agent actions.
- Sources of risk include vague instructions, model hallucination, jailbreaks and
  prompt injections from adversarial users, and indirect prompt injections via tool
  use.
- Different tools in the same agent can be configured with different strategies.
- Gemini models come with in-built safety mechanisms that can be leveraged to improve
  content and brand safety.
- Content safety filters can help block the output of harmful content.
- Non-configurable safety filters automatically block outputs containing prohibited
  content, such as child sexual abuse material (CSAM) and personally identifiable
  information (PII).
- Configurable content filters allow you to define blocking thresholds in four harm
  categories (hate speech, harassment, sexually explicit, and dangerous content,)
  based on probability and severity scores.
- System instructions for Gemini models in Vertex AI provide direct guidance to the
  model on how to behave and what type of content to generate.
errors:
- 'ValueError: Raised if no artifact_service is configured in the InvocationContext'
- 'ValueError: Could not list Python artifacts. Is ArtifactService configured?'
- An unexpected error occurred during Python artifact list.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - BaseAgent
  - LlmAgent
  - SequentialAgent
  - ParallelAgent
  - LoopAgent
  - Event
  - Runner
  - Agent
  - SessionService
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AuthConfig
  - EventActions
  - CallbackContext
  - ToolContext
  - BasePlugin
  - LlmRequest
  - InMemoryRunner
client:
  base_url: https://google.github.io/adk-docs
  headers:
    Accept: application/json
source_metadata: null
