resources:
- name: patient
  endpoint:
    path: /fhir/R4/Patient
    method: GET
    data_selector: records
- name: Patient
  endpoint:
    path: /reference/fhir-r4-patient
    method: GET
    data_selector: records
- name: authorization
  endpoint:
    path: /oauth/authorize
    method: GET
    data_selector: ''
    params: {}
- name: token
  endpoint:
    path: /oauth/token
    method: POST
    data_selector: ''
    params: {}
- name: user_info
  endpoint:
    path: /oauth/userinfo
    method: GET
    data_selector: uid
- name: token_info
  endpoint:
    path: /oauth/info
    method: GET
    data_selector: client_id
- name: userinfo
  endpoint:
    path: /oauth/userinfo
    method: GET
    data_selector: ''
    params: {}
- name: oauth_info
  endpoint:
    path: /oauth/info
    method: GET
    data_selector: ''
    params: {}
- name: oauth_cancel
  endpoint:
    path: /oauth/cancel
    method: GET
    data_selector: ''
    params: {}
- name: patient
  endpoint:
    path: /p360-retrieve
    method: GET
    data_selector: records
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/$p360-retrieve
    method: GET
    data_selector: response
    params:
      patient: PATIENT_HG_ID
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/$p360-retrieve
    method: GET
    data_selector: records
    params:
      patient: PATIENT_HG_ID
- name: patient
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cq-search
    method: GET
    data_selector: entry
    params:
      organization: CAREQUALITY_PROVIDER_RESOURCE_ID
- name: organization
  endpoint:
    path: /fhir/Organization
    method: GET
    data_selector: entry
    params:
      type: https://www.healthgorilla.com/fhir/organization-type|CQ
- name: organization
  endpoint:
    path: /fhir/Organization
    method: GET
    data_selector: entry
    params: {}
- name: patient
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cq-search
    method: GET
    data_selector: entry
    params:
      organization: CAREQUALITY_PROVIDER_RESOURCE_ID
- name: document_reference
  endpoint:
    path: /fhir/DocumentReference/$cq-search
    method: GET
    data_selector: entry
    params:
      patient.identifier: IDENTIFIER
- name: patient
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cw-search
    method: GET
    data_selector: entry
- name: enroll_patient
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cw-enroll
    method: GET
    data_selector: parameter
    params:
      person: COMMONWELL_PERSON_RESOURCE_ID
- name: unenroll_patient
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cw-unenroll
    method: GET
    data_selector: parameter
- name: document_reference_cq_search
  endpoint:
    path: /fhir/DocumentReference/$cq-search
    method: GET
    data_selector: Bundle
    params:
      patient.identifier: IDENTIFIER
- name: document_reference_ehex_search
  endpoint:
    path: /fhir/DocumentReference/$ehex-search
    method: GET
    data_selector: Bundle
    params:
      patient.identifier: IDENTIFIER
- name: patient_cw_search
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cw-search
    method: GET
    data_selector: Bundle
    params: {}
- name: patient_cw_lookup
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cw-lookup
    method: GET
    data_selector: Bundle
    params: {}
- name: patient_cw_enroll
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cw-enroll
    method: GET
    data_selector: Parameters
    params:
      person: COMMONWELL_PERSON_RESOURCE_ID
- name: patient_cw_unenroll
  endpoint:
    path: /fhir/Patient/PATIENT_RESOURCE_ID/$cw-unenroll
    method: GET
    data_selector: Parameters
    params:
      person: COMMONWELL_PERSON_RESOURCE_ID
      purposeOfUse: NHIN_PURPOSE_OF_USE
- name: document_reference_search
  endpoint:
    path: /fhir/DocumentReference/$cw-search
    method: GET
    data_selector: Bundle
    params:
      patient: PATIENT_RESOURCE_ID
- name: document_reference_import
  endpoint:
    path: /fhir/DocumentReference
    method: POST
    data_selector: resourceType
- name: document_reference
  endpoint:
    path: /fhir/DocumentReference/$cw-search
    method: GET
    data_selector: resourceType
    params:
      patient: PATIENT_RESOURCE_ID
- name: binary
  endpoint:
    path: /api/Binary/BINARY_RESOURCE_ID
    method: GET
    data_selector: resourceType
- name: Bundle
  endpoint:
    path: /fhir/Bundle
    method: POST
    data_selector: entry
- name: Patient
  endpoint:
    path: /fhir/Patient/{patient_id}/$enabledForSharing
    method: GET
    data_selector: parameter
- name: Bundle
  endpoint:
    path: /fhir/Bundle
    method: POST
    data_selector: entry
    params: {}
- name: Patient
  endpoint:
    path: /fhir/Patient/{patient_id}/$enabledForSharing
    method: GET
    data_selector: parameter
    params: {}
- name: DocumentReference
  endpoint:
    path: /DocumentReference
    method: GET
    data_selector: Bundle.entry
    params:
      patient: <client's ID of patient>
- name: DocumentReference
  endpoint:
    path: /DocumentReference
    method: GET
    data_selector: Bundle
    params: {}
- name: RequestGroup
  endpoint:
    path: /fhir/RequestGroup
    method: POST
    data_selector: resource
- name: Organization
  endpoint:
    path: /fhir/Organization
    method: GET
    data_selector: resource
- name: RequestGroup
  endpoint:
    path: /fhir/RequestGroup
    method: POST
    data_selector: resource
- name: Organization
  endpoint:
    path: /fhir/Organization
    method: GET
    data_selector: resource
- name: laboratory_requisition_settings
  endpoint:
    path: /Organization/f-d8da43521fe28b2afddbd465/$requisition-settings
    method: GET
    data_selector: parameter
- name: requisition_settings
  endpoint:
    path: /Organization/f-d8da43521fe28b2afddbd465/$requisition-settings
    method: GET
    data_selector: parameter
    params: {}
- name: compendium_items
  endpoint:
    path: /CodeSystem/$lookup
    method: GET
    data_selector: parameter
    params:
      system: urn:uuid:d5da4352df37dd00cfb1e115
- name: ValueSet
  endpoint:
    path: /fhir/ValueSet/$expand
    method: GET
    data_selector: expansion.contains
    params:
      filter: Immunoglobulin
      count: 5
- name: Questionnaire
  endpoint:
    path: /fhir/Questionnaire
    method: GET
    data_selector: item
    params:
      code: urn:uuid:d5da4352df37dd00cfb1e115%7C198330
- name: Organization
  endpoint:
    path: /fhir/Organization
    method: GET
- name: ValueSet_expand
  endpoint:
    path: /fhir/ValueSet/{id}/$expand
    method: GET
    data_selector: expansion.contains
    params:
      filter: string
      procedure: token
      offset: integer
      count: integer
      includeParameters: boolean
- name: ValueSet_search
  endpoint:
    path: /fhir/ValueSet/$search
    method: GET
    data_selector: expansion.contains
    params:
      filter: string
      organization: reference
      home-draw: token
      procedure: token
      offset: number
      count: number
      includeParameters: boolean
- name: Questionnaire
  endpoint:
    path: /fhir/Questionnaire
    method: GET
    data_selector: item
    params:
      code: token
      procedure: token
- name: Organization_requisition_settings
  endpoint:
    path: /fhir/Organization/{id}/$requisition-settings
    method: GET
    data_selector: parameter
    params:
      requester.identifier: string
      requester: reference
- name: requisition_settings
  endpoint:
    path: /fhir/Organization/ORGANIZATION_RESOURCE_ID
    method: GET
    data_selector: parameter
    params: {}
- name: check_abn_required
  endpoint:
    path: /fhir/RequestGroup/$abn
    method: POST
    data_selector: parameter
    params: {}
- name: laboratory_requisition_settings
  endpoint:
    path: /fhir/Organization/ORGANIZATION_RESOURCE_ID/$requisition-settings
    method: GET
    data_selector: parameter
- name: check_abn_required
  endpoint:
    path: /fhir/RequestGroup/REQUEST_GROUP_ID/$abn
    method: GET
    data_selector: parameter
- name: RequestGroup
  endpoint:
    path: /reference/requestgroup-1
    method: GET
    data_selector: extension
    params: {}
- name: RequestGroup
  endpoint:
    path: /fhir/RequestGroup
    method: POST
    data_selector: resourceType
    params: {}
- name: Retrieve Future Orders
  endpoint:
    path: /fhir/RequestGroup
    method: GET
    data_selector: extension
    params: {}
- name: place_order
  endpoint:
    path: /doctor/api
    method: POST
    data_selector: result
    params: {}
- name: get_order
  endpoint:
    path: /fhir/RequestGroup/ORDER_ID
    method: GET
    data_selector: orderSnapshot
    params: {}
- name: place_order
  endpoint:
    path: /doctor/api
    method: POST
    data_selector: result
    params: {}
- name: get_order
  endpoint:
    path: /doctor/api
    method: POST
    data_selector: orderSnapshot
    params: {}
- name: order_snapshot
  endpoint:
    path: /orders
    method: GET
    data_selector: result.orderSnapshot
- name: patient_snapshot
  endpoint:
    path: /patients
    method: GET
    data_selector: result.patient
- name: diagnosis_snapshot
  endpoint:
    path: /diagnoses
    method: GET
    data_selector: result.diagnoses
- name: order_test_snapshot
  endpoint:
    path: /orderTests
    method: GET
    data_selector: result.orderTests
- name: guarantor_snapshot
  endpoint:
    path: /guarantors
    method: GET
    data_selector: result.guarantor
- name: insurance_snapshot
  endpoint:
    path: /insurances
    method: GET
    data_selector: result.insurances
- name: aoe_snapshot
  endpoint:
    path: /aoes
    method: GET
    data_selector: result.orderAoes
- name: orderSnapshot
  endpoint:
    path: /getOrder
    method: POST
    data_selector: result.orderSnapshot
    params: {}
- name: enroll_and_import_documents
  endpoint:
    path: /Patient/{patientId}/$patient-enroll-import-docs
    method: POST
    data_selector: None
    params:
      patientId: Patient resource ID (Required)
- name: retrieve_documents_metadata
  endpoint:
    path: /Patient/{patientId}/$patient-enroll-retrieve-docs
    method: GET
    data_selector: None
    params:
      patientId: Patient resource ID (Required)
- name: download_document
  endpoint:
    path: /Patient/{patientId}/$retrieve-document
    method: GET
    data_selector: None
    params:
      patientId: Patient resource ID (Required)
      resourceParam: Link that is used to download the given document (Required)
- name: enroll_import_documents
  endpoint:
    path: /Patient/{patientId}/$patient-enroll-import-docs
    method: POST
    data_selector: null
    params:
      patientId: Patient resource ID (Required)
- name: enroll_retrieve_documents_metadata
  endpoint:
    path: /Patient/{patientId}/$patient-enroll-retrieve-docs
    method: GET
    data_selector: null
    params:
      patientId: Patient resource ID (Required)
- name: retrieve_document
  endpoint:
    path: /Patient/{patientId}/$retrieve-document
    method: GET
    data_selector: null
    params:
      patientId: Patient resource ID (Required)
      resourceParam: Link that is used to download the given document (Required)
- name: DocumentReference
  endpoint:
    path: /fhir/DocumentReference
    method: POST
- name: Bundle
  endpoint:
    path: /fhir/Bundle
    method: POST
- name: Unenroll Patient
  endpoint:
    path: /Patient/{patientId}/$facility-patient-cw-unenroll
    method: POST
- name: import_document
  endpoint:
    path: /Patient/{patientId}/$patient-import-doc
    method: POST
    data_selector: resource
    params:
      patientId: Patient resource ID (Required)
      fhirDocumentReference: FHIR DocumentReference to import
- name: unenroll_patient
  endpoint:
    path: /Patient/{patientId}/$facility-patient-cw-unenroll
    method: POST
    params:
      patientId: Patient resource ID (Required)
- name: Parameters
  endpoint:
    path: /fhir/Binary/1387616479b0872b4b836d6d
    method: GET
    data_selector: parameter
    params: {}
- name: Parameters
  endpoint:
    path: /fhir/Binary/1387616479b0872b123132
    method: GET
    data_selector: parameter
    params: {}
- name: ReferralRequest
  endpoint:
    path: /fhir/ReferralRequest
    method: POST
    data_selector: resource
    params: {}
- name: DirectMessage
  endpoint:
    path: /fhir/DirectMessage
    method: GET
    data_selector: entry
    params: {}
- name: ReferralRequest
  endpoint:
    path: /fhir/ReferralRequest
    method: POST
    data_selector: resourceType
- name: DirectMessage
  endpoint:
    path: /fhir/DirectMessage
    method: GET
    data_selector: entry
- name: ReferralRequest
  endpoint:
    path: /ReferralRequest
    method: GET
    data_selector: resourceType
    params: {}
- name: Recipient
  endpoint:
    path: /Recipient
    method: GET
    data_selector: recipient
    params: {}
- name: ReferralRequest
  endpoint:
    path: /ReferralRequest
    method: GET
    data_selector: resourceType
    params: {}
- name: Recipient
  endpoint:
    path: /Recipient
    method: GET
    data_selector: recipient
    params: {}
- name: PractitionerRole
  endpoint:
    path: /fhir/PractitionerRole
    method: POST
    data_selector: resource
    params: {}
- name: PractitionerRole
  endpoint:
    path: /PractitionerRole
    method: POST
- name: PractitionerRole
  endpoint:
    path: /fhir/PractitionerRole
    method: POST
    data_selector: resource
- name: PractitionerRole
  endpoint:
    path: /fhir/PractitionerRole
    method: POST
    data_selector: resource
    params: {}
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: POST
    data_selector: resource
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
    data_selector: entry
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: POST
    data_selector: resource
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
    data_selector: entry.resource
- name: Worker Compensation
  endpoint:
    path: /StructureDefinition/account-wc
    method: GET
- name: Request Group - Account
  endpoint:
    path: /StructureDefinition/requestgroup-account
    method: GET
- name: Patient Location
  endpoint:
    path: /StructureDefinition/patient-location
    method: GET
- name: Related Person Employer
  endpoint:
    path: /StructureDefinition/relatedperson-employer
    method: GET
- name: Record Recorder
  endpoint:
    path: /StructureDefinition/record-recorder
    method: GET
- name: RequestGroup - Performer
  endpoint:
    path: /StructureDefinition/requestgroup-performer
    method: GET
- name: RequestGroup - Requester
  endpoint:
    path: /StructureDefinition/requestgroup-requester
    method: GET
- name: RequestGroup - ReasonCode
  endpoint:
    path: /StructureDefinition/requestgroup-reasoncode
    method: GET
- name: RequestGroup - Specimen
  endpoint:
    path: /StructureDefinition/requestgroup-specimen
    method: GET
- name: RequestGroup - AuthorizedBy
  endpoint:
    path: /StructureDefinition/requestgroup-authorizedBy
    method: GET
- name: RequestGroup - DeliveryOptions
  endpoint:
    path: /StructureDefinition/requestgroup-deliveryOptions
    method: GET
- name: RequestGroup - SupervisingProvider
  endpoint:
    path: /StructureDefinition/requestgroup-supervisingprovider
    method: GET
- name: Performer - Location
  endpoint:
    path: /StructureDefinition/performer-location
    method: GET
- name: Operationoutcome - OrderSplitting
  endpoint:
    path: /StructureDefinition/operationoutcome-order-splitting
    method: GET
- name: Provider Compendium
  endpoint:
    path: /StructureDefinition/provider-compendium
    method: GET
- name: Questionnaire - RequiredWhenSpecimenCollected
  endpoint:
    path: /StructureDefinition/questionnaire-requiredwhenspecimen
    method: GET
- name: Questionnaire - Constraints
  endpoint:
    path: /StructureDefinition/questionnaire-constraints
    method: GET
- name: Diagnostic Report - Fasting
  endpoint:
    path: /StructureDefinition/diagnosticreport-fasting
    method: GET
- name: Diagnostic Report - Interpretation
  endpoint:
    path: /StructureDefinition/diagnosticreport-interpretation
    method: GET
- name: Diagnostic Report - Reporting Priority
  endpoint:
    path: /StructureDefinition/diagnosticreport-reportingPriority
    method: GET
- name: DocumentReference - On-Demand
  endpoint:
    path: /StructureDefinition/documentreference-ondemand
    method: GET
- name: ReferralRequest - Recipient
  endpoint:
    path: /StructureDefinition/referralrequest-recipient
    method: GET
- name: ReferralRequest - Reply
  endpoint:
    path: /StructureDefinition/referralrequest-reply
    method: GET
- name: ReferralRequest - DeliveryOptions
  endpoint:
    path: /StructureDefinition/referralrequest-deliveryOptions
    method: GET
- name: worker_compensation
  endpoint:
    path: /fhir/StructureDefinition/account-wc
    method: GET
    data_selector: extension
- name: request_group_account
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-account
    method: GET
    data_selector: extension
- name: patient_location
  endpoint:
    path: /fhir/StructureDefinition/patient-location
    method: GET
    data_selector: extension
- name: related_person_employer
  endpoint:
    path: /fhir/StructureDefinition/relatedperson-employer
    method: GET
    data_selector: extension
- name: record_recorder
  endpoint:
    path: /fhir/StructureDefinition/record-recorder
    method: GET
    data_selector: extension
- name: request_group_performer
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-performer
    method: GET
    data_selector: extension
- name: request_group_requester
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-requester
    method: GET
    data_selector: extension
- name: request_group_reason_code
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-reasoncode
    method: GET
    data_selector: extension
- name: request_group_specimen
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-specimen
    method: GET
    data_selector: extension
- name: request_group_authorized_by
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-authorizedBy
    method: GET
    data_selector: extension
- name: request_group_delivery_options
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-deliveryOptions
    method: GET
    data_selector: extension
- name: request_group_supervising_provider
  endpoint:
    path: /fhir/StructureDefinition/requestgroup-supervisingprovider
    method: GET
    data_selector: extension
- name: performer_location
  endpoint:
    path: /fhir/StructureDefinition/performer-location
    method: GET
    data_selector: extension
- name: operation_outcome_order_splitting
  endpoint:
    path: /fhir/StructureDefinition/operationoutcome-order-splitting
    method: GET
    data_selector: extension
- name: provider_compendium
  endpoint:
    path: /fhir/StructureDefinition/provider-compendium
    method: GET
    data_selector: extension
- name: questionnaire_required_when_specimen_collected
  endpoint:
    path: /fhir/StructureDefinition/questionnaire-requiredwhenspecimen
    method: GET
    data_selector: extension
- name: questionnaire_constraints
  endpoint:
    path: /fhir/StructureDefinition/questionnaire-constraints
    method: GET
    data_selector: extension
- name: diagnostic_report_fasting
  endpoint:
    path: /fhir/StructureDefinition/diagnosticreport-fasting
    method: GET
    data_selector: extension
- name: diagnostic_report_interpretation
  endpoint:
    path: /fhir/StructureDefinition/diagnosticreport-interpretation
    method: GET
    data_selector: extension
- name: diagnostic_report_reporting_priority
  endpoint:
    path: /fhir/StructureDefinition/diagnosticreport-reportingPriority
    method: GET
    data_selector: extension
- name: document_reference_on_demand
  endpoint:
    path: /fhir/StructureDefinition/documentreference-ondemand
    method: GET
    data_selector: extension
- name: referral_request_recipient
  endpoint:
    path: /fhir/StructureDefinition/referralrequest-recipient
    method: GET
    data_selector: extension
- name: referral_request_reply
  endpoint:
    path: /fhir/StructureDefinition/referralrequest-reply
    method: GET
    data_selector: extension
- name: referral_request_delivery_options
  endpoint:
    path: /fhir/StructureDefinition/referralrequest-deliveryOptions
    method: GET
    data_selector: extension
- name: observation-reflectedBy
  endpoint:
    path: /fhir/StructureDefinition/observation-reflectedBy
    method: GET
    data_selector: observation-reflectedBy
- name: subscription-channelSecret
  endpoint:
    path: /fhir/StructureDefinition/subscription-channelSecret
    method: GET
    data_selector: subscription-channelSecret
- name: practitioner-role-readonly
  endpoint:
    path: /fhir/StructureDefinition/practitioner-role-readonly
    method: GET
    data_selector: practitioner-role-readonly
- name: condition-encounter
  endpoint:
    path: /fhir/StructureDefinition/condition-encounter
    method: GET
    data_selector: condition-encounter
- name: observation_reflectedBy
  endpoint:
    path: /fhir/StructureDefinition/observation-reflectedBy
    method: GET
    data_selector: observation-reflectedBy
    params: {}
- name: subscription_channelSecret
  endpoint:
    path: /fhir/StructureDefinition/subscription-channelSecret
    method: GET
    data_selector: subscription-channelSecret
    params: {}
- name: practitioner_role_readonly
  endpoint:
    path: /fhir/StructureDefinition/practitioner-role-readonly
    method: GET
    data_selector: practitioner-role-readonly
    params: {}
- name: condition_encounter
  endpoint:
    path: /fhir/StructureDefinition/condition-encounter
    method: GET
    data_selector: condition-encounter
    params: {}
- name: Health Gorilla Order
  endpoint:
    path: /fhir/StructureDefinition/hg-order
    method: GET
    data_selector: RequestGroup
    params: {}
- name: Health Gorilla Order Billing Account
  endpoint:
    path: /fhir/StructureDefinition/hg-order-account
    method: GET
    data_selector: Account
    params: {}
- name: Health Gorilla User
  endpoint:
    path: /fhir/StructureDefinition/hg-user
    method: GET
    data_selector: Practitioner
    params: {}
- name: HealthGorilla Referral
  endpoint:
    path: /fhir/StructureDefinition/hg-referral
    method: GET
    data_selector: ReferralRequest
    params: {}
- name: directmessage-direction
  endpoint:
    path: /fhir/ValueSet/directmessage-direction
    method: GET
- name: document-type
  endpoint:
    path: /fhir/ValueSet/document-type
    method: GET
- name: facility-type
  endpoint:
    path: /fhir/ValueSet/facility-type
    method: GET
- name: observation-category
  endpoint:
    path: /fhir/ValueSet/observation-category
    method: GET
- name: order-billto
  endpoint:
    path: /fhir/ValueSet/order-billto
    method: GET
- name: organization-type
  endpoint:
    path: /fhir/ValueSet/organization-type
    method: GET
- name: administrative-role
  endpoint:
    path: /fhir/ValueSet/administrative-role
    method: GET
- name: list-code
  endpoint:
    path: /fhir/ValueSet/list-code
    method: GET
- name: diagnosticreport-reportingPriority
  endpoint:
    path: /fhir/ValueSet/diagnosticreport-reportingPriority
    method: GET
- name: diagnosticreport-interpretation
  endpoint:
    path: /fhir/ValueSet/diagnosticreport-interpretation
    method: GET
- name: practitioner-speciality
  endpoint:
    path: /fhir/ValueSet/practitioner-speciality
    method: GET
- name: Health Gorilla Order
  endpoint:
    path: /fhir/StructureDefinition/hg-order
    method: GET
- name: Health Gorilla Order Billing Account
  endpoint:
    path: /fhir/StructureDefinition/hg-order-account
    method: GET
- name: Health Gorilla User
  endpoint:
    path: /fhir/StructureDefinition/hg-user
    method: GET
- name: HealthGorilla Referral
  endpoint:
    path: /fhir/StructureDefinition/hg-referral
    method: GET
- name: Patient
  endpoint:
    path: /fhir/R4/Patient/{id}
    method: GET
    data_selector: records
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: POST
    data_selector: records
- name: Condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
    data_selector: records
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement/{id}
    method: DELETE
    data_selector: records
- name: Patient
  endpoint:
    path: /fhir/R4/Patient/{id}
    method: GET
- name: metadata
  endpoint:
    path: /fhir/metadata
    method: GET
- name: binary
  endpoint:
    path: /fhir/R4/Binary/{id}
    method: GET
- name: Patient
  endpoint:
    path: /fhir/R4/Patient
    method: GET
    data_selector: records
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: GET
    data_selector: records
- name: Condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
    data_selector: records
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: DELETE
    data_selector: records
- name: Patient
  endpoint:
    path: /fhir/R4/Patient/{id}
    method: GET
- name: CapabilityStatement
  endpoint:
    path: /fhir/metadata
    method: GET
- name: binary
  endpoint:
    path: /fhir/R4/Binary/{id}
    method: GET
- name: userinfo
  endpoint:
    path: /oauth/userinfo
    method: GET
    params: {}
- name: Observation
  endpoint:
    path: /Observation
    method: GET
    data_selector: records
    params:
      patient: required
- name: Condition
  endpoint:
    path: /Condition
    method: GET
    data_selector: records
    params:
      patient: required
- name: Observation
  endpoint:
    params:
      _count: Number of resources to return per page (default varies by resource type)
      _offset: Optional numeric index for paginating with offset-based logic
      _cursor: Opaque server-generated pointer for retrieving the next page of results
- name: Encounter
  endpoint:
    params:
      _count: Number of resources to return per page (default varies by resource type)
      _cursor: Opaque server-generated pointer for retrieving the next page of results
- name: user_info
  endpoint:
    path: /oauth/userinfo
    method: GET
- name: subscription
  endpoint:
    path: /fhir/Subscription
    method: POST
    data_selector: resourceType
    params: {}
- name: get_all_subscriptions
  endpoint:
    path: /fhir/Subscription
    method: GET
    data_selector: resourceType
    params: {}
- name: update_subscription
  endpoint:
    path: /fhir/Subscription/{id}
    method: PUT
    data_selector: resourceType
    params: {}
- name: delete_subscription
  endpoint:
    path: /fhir/Subscription/{id}
    method: DELETE
    data_selector: resourceType
    params: {}
- name: Observation
  endpoint:
    path: /Observation
    method: GET
    data_selector: records
    params:
      patient: ''
- name: Condition
  endpoint:
    path: /Condition
    method: GET
    data_selector: records
    params:
      patient: ''
- name: webhook
  endpoint:
    path: /webhooks/hg
    method: POST
    data_selector: resourceType
- name: Observation
  endpoint:
    params:
      _count: Number of resources to return per page (default varies by resource type)
      _offset: Optional numeric index for paginating with offset-based logic
      _cursor: Opaque server-generated pointer for retrieving the next page of results
- name: Encounter
  endpoint:
    params:
      _count: Number of resources to return per page (default varies by resource type)
      _cursor: Opaque server-generated pointer for retrieving the next page of results
- name: DocumentReference
  endpoint:
    path: /DocumentReference
    method: GET
    data_selector: resource
- name: Encounter
  endpoint:
    path: /Encounter
    method: GET
    data_selector: resource
- name: AllergyIntolerance
  endpoint:
    path: /AllergyIntolerance
    method: GET
    data_selector: resource
- name: Observation
  endpoint:
    path: /Observation
    method: GET
    data_selector: resource
- name: Immunization
  endpoint:
    path: /Immunization
    method: GET
    data_selector: resource
- name: subscription
  endpoint:
    path: /fhir/Subscription
    method: POST
    data_selector: resourceType
    params: {}
- name: get_all_subscriptions
  endpoint:
    path: /fhir/Subscription
    method: GET
    data_selector: resourceType
    params: {}
- name: update_subscription
  endpoint:
    path: /fhir/Subscription/{id}
    method: PUT
    data_selector: resourceType
    params: {}
- name: delete_subscription
  endpoint:
    path: /fhir/Subscription/{id}
    method: DELETE
    data_selector: resourceType
    params: {}
- name: DocumentReference
  endpoint:
    path: /fhir/DocumentReference
    method: GET
    params:
      status: current
      _lastUpdated: ge{timestamp}
- name: Encounter
  endpoint:
    path: /fhir/Encounter
    method: GET
    params:
      status: finished
      _lastUpdated: ge{timestamp}
- name: Observation
  endpoint:
    path: /fhir/Observation
    method: GET
    params:
      code: xxx
      _lastUpdated: ge{timestamp}
- name: Immunization
  endpoint:
    path: /fhir/Immunization
    method: GET
    params:
      status: completed
      _lastUpdated: ge{timestamp}
- name: DocumentReference
  endpoint:
    path: /documentreference
    method: GET
    data_selector: resourceType
- name: Encounter
  endpoint:
    path: /encounter
    method: GET
    data_selector: resourceType
- name: AllergyIntolerance
  endpoint:
    path: /allergyintolerance
    method: GET
    data_selector: resourceType
- name: Observation
  endpoint:
    path: /observation
    method: GET
    data_selector: resourceType
- name: Immunization
  endpoint:
    path: /immunization
    method: GET
    data_selector: resourceType
- name: DocumentReference
  endpoint:
    path: /fhir/DocumentReference
    method: GET
    params:
      status: current
      _lastUpdated: ge{timestamp}
- name: Encounter
  endpoint:
    path: /fhir/Encounter
    method: GET
    params:
      status: finished
      _lastUpdated: ge{timestamp}
- name: Observation
  endpoint:
    path: /fhir/Observation
    method: GET
    params:
      code: xxx
      _lastUpdated: ge{timestamp}
- name: Immunization
  endpoint:
    path: /fhir/Immunization
    method: GET
    params:
      status: completed
      _lastUpdated: ge{timestamp}
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: GET
    data_selector: records
    params: {}
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan
    method: GET
    data_selector: records
    params: {}
- name: Condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
    data_selector: records
    params: {}
- name: Consent
  endpoint:
    path: /fhir/R4/Consent
    method: GET
    data_selector: records
    params: {}
- name: Coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: GET
    data_selector: records
    params: {}
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: GET
    data_selector: records
    params: {}
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: GET
    data_selector: records
    params: {}
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: GET
    data_selector: records
    params: {}
- name: ElectronicFax
  endpoint:
    path: /fhir/R4/ElectronicFax
    method: GET
    data_selector: records
    params: {}
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: GET
    data_selector: records
    params: {}
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: GET
    data_selector: records
    params: {}
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: GET
    data_selector: records
    params: {}
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: GET
    data_selector: records
    params: {}
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage
    method: GET
    data_selector: records
    params: {}
- name: Location
  endpoint:
    path: /fhir/R4/Location
    method: GET
    data_selector: records
    params: {}
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: GET
    data_selector: records
    params: {}
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: GET
    data_selector: records
    params: {}
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: GET
    data_selector: records
    params: {}
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: GET
    data_selector: records
    params: {}
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: GET
    data_selector: records
    params: {}
- name: Organization
  endpoint:
    path: /fhir/R4/Organization
    method: GET
    data_selector: records
    params: {}
- name: Patient
  endpoint:
    path: /fhir/R4/Patient
    method: GET
    data_selector: records
    params: {}
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
    data_selector: records
    params: {}
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: GET
    data_selector: records
    params: {}
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: GET
    data_selector: records
    params: {}
- name: Provenance
  endpoint:
    path: /fhir/R4/Provenance
    method: GET
    data_selector: records
    params: {}
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup
    method: GET
    data_selector: records
    params: {}
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: GET
    data_selector: records
    params: {}
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: GET
    data_selector: records
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance/{ID}
    method: GET
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: GET
- name: Bundle
  endpoint:
    path: /fhir/R4/Bundle
    method: GET
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan
    method: GET
- name: Composition
  endpoint:
    path: /fhir/R4/Composition
    method: GET
- name: Condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
- name: Consent
  endpoint:
    path: /fhir/R4/Consent
    method: GET
- name: Coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: GET
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: GET
- name: ElectronicFax
  endpoint:
    path: /fhir/R4/ElectronicFax
    method: GET
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: GET
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: GET
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: GET
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: GET
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage
    method: GET
- name: Location
  endpoint:
    path: /fhir/R4/Location
    method: GET
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: GET
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: GET
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: GET
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: GET
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: GET
- name: Organization
  endpoint:
    path: /fhir/R4/Organization
    method: GET
- name: Patient
  endpoint:
    path: /fhir/R4/Patient
    method: GET
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: GET
- name: Provenance
  endpoint:
    path: /fhir/R4/Provenance
    method: GET
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup
    method: GET
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: GET
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: GET
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: GET
    data_selector: records
- name: allergy_intolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: POST
    data_selector: resource
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance/{ID}
    method: GET
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: GET
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance/{ID}
    method: PUT
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance
    method: POST
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance/{ID}
    method: DELETE
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance/{ID}
    method: PUT
- name: bundle
  endpoint:
    path: /fhir/R4/Bundle
    method: POST
- name: AllergyIntolerance
  endpoint:
    path: /fhir/R4/AllergyIntolerance/{ID}
    method: DELETE
- name: batch
  endpoint:
    path: /fhir/R4/Bundle
    method: POST
- name: batch_response
  endpoint:
    path: /fhir/R4/Bundle/{id}
    method: GET
- name: bundle
  endpoint:
    path: /fhir/R4/Bundle
    method: POST
- name: batch
  endpoint:
    path: /fhir/R4/Bundle
    method: POST
    data_selector: entry
    params: {}
- name: batch_response
  endpoint:
    path: /fhir/R4/Bundle/{id}
    method: GET
    data_selector: entry
    params: {}
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /fhir/Transaction
    method: POST
    data_selector: entry
    params: {}
- name: careplan
  endpoint:
    path: /fhir/R4/CarePlan
    method: GET
    data_selector: records
    params:
      patient: string
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan/{ID}
    method: GET
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan
    method: GET
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan
    method: POST
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan/{ID}
    method: PUT
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan/{ID}
    method: DELETE
- name: composition
  endpoint:
    path: /fhir/R4/Composition
    method: GET
    data_selector: Composition
    params: {}
- name: Composition
  endpoint:
    path: /fhir/R4/Composition/{ID}
    method: GET
- name: Composition
  endpoint:
    path: /fhir/R4/Composition
    method: GET
- name: Composition
  endpoint:
    path: /fhir/R4/Composition/{ID}/$document
    method: GET
- name: condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
    data_selector: Condition
- name: Condition
  endpoint:
    path: /fhir/R4/Condition/{ID}
    method: GET
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan/{ID}
    method: GET
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan
    method: GET
- name: Condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan
    method: POST
- name: Condition
  endpoint:
    path: /fhir/R4/Condition
    method: POST
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan/{ID}
    method: PUT
- name: Condition
  endpoint:
    path: /fhir/R4/Condition/{ID}
    method: PUT
- name: Condition
  endpoint:
    path: /fhir/R4/Condition/{ID}
    method: DELETE
- name: CarePlan
  endpoint:
    path: /fhir/R4/CarePlan/{ID}
    method: DELETE
- name: Composition
  endpoint:
    path: /fhir/R4/Composition
    method: GET
    data_selector: Composition
    params: {}
- name: consent
  endpoint:
    path: /fhir/R4/Consent
    method: GET
    data_selector: Consent
    params: {}
- name: Composition
  endpoint:
    path: /fhir/R4/Composition/{ID}
    method: GET
- name: Composition
  endpoint:
    path: /fhir/R4/Composition
    method: GET
- name: consent
  endpoint:
    path: /fhir/R4/Consent/{ID}
    method: GET
- name: Composition
  endpoint:
    path: /fhir/R4/Composition/{ID}/$document
    method: GET
- name: Consent
  endpoint:
    path: /fhir/R4/Consent
    method: GET
- name: consent
  endpoint:
    path: /fhir/R4/Consent
    method: POST
- name: condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
    data_selector: records
    params:
      patient: string
- name: Consent
  endpoint:
    path: /fhir/R4/Consent/{ID}
    method: DELETE
- name: Condition
  endpoint:
    path: /fhir/R4/Condition/{ID}
    method: GET
- name: coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: GET
    data_selector: Coverage
- name: condition
  endpoint:
    path: /fhir/R4/Condition
    method: GET
- name: Coverage
  endpoint:
    path: /fhir/R4/Coverage/{ID}
    method: GET
- name: Condition
  endpoint:
    path: /fhir/R4/Condition
    method: POST
    data_selector: records
- name: coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: GET
- name: Condition
  endpoint:
    path: /fhir/R4/Condition/{ID}
    method: PUT
- name: Coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: POST
- name: Condition
  endpoint:
    path: /fhir/R4/Condition/{ID}
    method: DELETE
- name: Coverage
  endpoint:
    path: /fhir/R4/Coverage/{ID}
    method: DELETE
- name: consent
  endpoint:
    path: /fhir/R4/Consent
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: GET
    data_selector: DeviceUseStatement
    params:
      patient: Patient/{id}
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement/{ID}
    method: GET
- name: consent
  endpoint:
    path: /fhir/R4/Consent/{ID}
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: GET
- name: Consent
  endpoint:
    path: /fhir/R4/Consent
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: POST
- name: Consent
  endpoint:
    path: /fhir/R4/Consent
    method: POST
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement/{ID}
    method: PUT
- name: Consent
  endpoint:
    path: /fhir/R4/Consent/{ID}
    method: DELETE
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement/{ID}
    method: DELETE
- name: coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: GET
    data_selector: Coverage
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: GET
    data_selector: records
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport/{ID}
    method: GET
- name: coverage
  endpoint:
    path: /fhir/R4/Coverage/{ID}
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: GET
- name: coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: GET
    data_selector: resources
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport/{ID}/$pdf
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: POST
- name: coverage
  endpoint:
    path: /fhir/R4/Coverage
    method: POST
    data_selector: resourceType
    params: {}
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: GET
    data_selector: records
    params:
      patient: Patient/{id}
- name: Coverage
  endpoint:
    path: /fhir/R4/Coverage/{ID}
    method: DELETE
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/{ID}
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: GET
    data_selector: DeviceUseStatement
    params:
      patient: Patient/{id}
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement/{ID}
    method: GET
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/{ID}/$pdf
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: GET
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: POST
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement
    method: POST
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/{ID}
    method: DELETE
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement/{ID}
    method: PUT
- name: ElectronicFax
  endpoint:
    path: /fhir/R4/ElectronicFax
    method: GET
    data_selector: faxes
- name: DeviceUseStatement
  endpoint:
    path: /fhir/R4/DeviceUseStatement/{ID}
    method: DELETE
- name: fax_message
  endpoint:
    path: /fhir/R4/FaxMessage/{ID}
    method: GET
    data_selector: response
- name: diagnostic_report
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: GET
    data_selector: DiagnosticReport
    params:
      patient: Patient/{id}
- name: FaxMessage
  endpoint:
    path: /fhir/R4/FaxMessage
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport/{ID}
    method: GET
- name: FaxMessage
  endpoint:
    path: /fhir/R4/FaxMessage
    method: POST
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: GET
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: GET
    data_selector: Encounter
    params: {}
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport/{ID}/$pdf
    method: GET
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter/{ID}
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /fhir/R4/DiagnosticReport
    method: POST
    data_selector: response
    params: {}
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: GET
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: GET
    data_selector: records
    params:
      patient: Patient/{id}
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: POST
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/{ID}
    method: GET
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter/{ID}
    method: PUT
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: GET
    data_selector: records
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/{ID}/$pdf
    method: GET
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter/{ID}
    method: DELETE
- name: family_member_history
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: GET
    data_selector: records
    params: {}
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference
    method: POST
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory/{ID}
    method: GET
- name: DocumentReference
  endpoint:
    path: /fhir/R4/DocumentReference/{ID}
    method: DELETE
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: GET
- name: ElectronicFax
  endpoint:
    path: /fhir/R4/ElectronicFax
    method: GET
    data_selector: faxes
    params: {}
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: POST
- name: FaxMessage
  endpoint:
    path: /fhir/R4/FaxMessage/{ID}
    method: GET
    data_selector: ''
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory/{ID}
    method: PUT
- name: FaxMessage
  endpoint:
    path: /fhir/R4/FaxMessage
    method: GET
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory/{ID}
    method: DELETE
- name: fax_message
  endpoint:
    path: /fhir/R4/FaxMessage
    method: POST
    data_selector: resourceType
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: GET
    data_selector: records
    params:
      patient: Patient/{id}
      status: active
      category: clinical
      priority: high
      startDate: ge2024-01-01
      targetDate: ge2024-01-01
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: GET
    data_selector: records
- name: Goal
  endpoint:
    path: /fhir/R4/Goal/{ID}
    method: GET
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter/{ID}
    method: GET
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: GET
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: GET
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: POST
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter
    method: POST
- name: Goal
  endpoint:
    path: /fhir/R4/Goal/{ID}
    method: PUT
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter/{ID}
    method: PUT
- name: Goal
  endpoint:
    path: /fhir/R4/Goal/{ID}
    method: DELETE
- name: Encounter
  endpoint:
    path: /fhir/R4/Encounter/{ID}
    method: DELETE
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: GET
    data_selector: records
    params: {}
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: GET
    data_selector: FamilyMemberHistory
    params: {}
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization/{ID}
    method: GET
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: GET
    data_selector: object
    params: {}
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory/{ID}
    method: GET
- name: Immunization
  endpoint:
    path: /Immunization
    method: GET
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: GET
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory
    method: POST
    data_selector: resource
    params: {}
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: POST
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory/{ID}
    method: PUT
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization/{ID}
    method: PUT
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/R4/FamilyMemberHistory/{ID}
    method: DELETE
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization/{ID}
    method: DELETE
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage
    method: GET
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: GET
    data_selector: Goal
    params:
      patient: Patient/{id}
      status: active
      category: clinical
      priority: high
      startDate: ge2024-01-01, le2024-12-31
      targetDate: ge2024-01-01, le2024-12-31
- name: Goal
  endpoint:
    path: /fhir/R4/Goal/{ID}
    method: GET
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage/{ID}
    method: GET
    data_selector: message
    params:
      _format: json
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: GET
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage
    method: GET
- name: Goal
  endpoint:
    path: /fhir/R4/Goal
    method: POST
- name: Location
  endpoint:
    path: /fhir/R4/Location
    method: GET
    data_selector: records
- name: Goal
  endpoint:
    path: /fhir/R4/Goal/{ID}
    method: PUT
- name: Location
  endpoint:
    path: /fhir/R4/Location/{ID}
    method: GET
    data_selector: ''
- name: Goal
  endpoint:
    path: /fhir/R4/Goal/{ID}
    method: DELETE
- name: Location
  endpoint:
    path: /fhir/R4/Location
    method: GET
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: GET
    data_selector: immunizations
    params: {}
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization/{ID}
    method: GET
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense/{ID}
    method: GET
    data_selector: resource
    params: {}
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: GET
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: GET
- name: immunization
  endpoint:
    path: /Immunization
    method: GET
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization
    method: POST
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: POST
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization/{ID}
    method: PUT
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense/{ID}
    method: PUT
- name: Immunization
  endpoint:
    path: /fhir/R4/Immunization/{ID}
    method: DELETE
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense/{ID}
    method: DELETE
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage
    method: GET
    data_selector: records
    params: {}
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage/{ID}
    method: GET
    data_selector: response
    params:
      _format: json
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: GET
    data_selector: records
- name: InstantMessage
  endpoint:
    path: /fhir/R4/InstantMessage
    method: GET
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest/{ID}
    method: GET
- name: Location
  endpoint:
    path: /fhir/R4/Location
    method: GET
    data_selector: records
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: GET
- name: Location
  endpoint:
    path: /fhir/R4/Location/{ID}
    method: GET
    data_selector: records
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: POST
- name: Location
  endpoint:
    path: /fhir/R4/Location
    method: GET
    data_selector: records
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest/{ID}
    method: PUT
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest/{ID}
    method: DELETE
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: GET
    data_selector: records
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense/{ID}
    method: GET
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: GET
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: GET
    data_selector: records
    params:
      patient: Patient/{id}
      status: active,completed,entered-in-error
      effective: ge2023-01-01,le2023-12-31
      medication: RxNorm code (e.g., 1049630)
      context: Encounter/{id}
      dateAsserted: ge2022-01-01,le2023-12-31
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense
    method: POST
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement/{ID}
    method: GET
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense/{ID}
    method: PUT
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: GET
- name: MedicationDispense
  endpoint:
    path: /fhir/R4/MedicationDispense/{ID}
    method: DELETE
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: POST
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: GET
    data_selector: MedicationRequest
    params: {}
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement/{ID}
    method: PUT
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest/{ID}
    method: GET
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement/{ID}
    method: DELETE
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: GET
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: GET
    data_selector: records
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest
    method: POST
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder/{ID}
    method: GET
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: GET
    data_selector: records
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: POST
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder/{ID}
    method: PUT
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest/{ID}
    method: PUT
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder/{ID}
    method: DELETE
- name: MedicationRequest
  endpoint:
    path: /fhir/R4/MedicationRequest/{ID}
    method: DELETE
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: GET
    data_selector: records
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: GET
    data_selector: records
- name: Observation
  endpoint:
    path: /fhir/R4/Observation/{ID}
    method: GET
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement/{ID}
    method: GET
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: GET
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: GET
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: POST
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement
    method: POST
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement/{ID}
    method: PUT
- name: Observation
  endpoint:
    path: /fhir/R4/Observation/{ID}
    method: PUT
- name: MedicationStatement
  endpoint:
    path: /fhir/R4/MedicationStatement/{ID}
    method: DELETE
- name: Observation
  endpoint:
    path: /fhir/R4/Observation/{ID}
    method: DELETE
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: GET
    data_selector: records
- name: organization
  endpoint:
    path: /fhir/R4/Organization
    method: GET
    data_selector: records
    params: {}
- name: organization
  endpoint:
    path: /fhir/R4/Organization/{id}
    method: GET
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder/{ID}
    method: GET
- name: Organization
  endpoint:
    path: /fhir/R4/Organization
    method: GET
    data_selector: ''
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: GET
    data_selector: resources
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder
    method: POST
- name: organization
  endpoint:
    path: /fhir/R4/Organization
    method: POST
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder/{ID}
    method: PUT
- name: Organization
  endpoint:
    path: /fhir/R4/Organization/{ID}
    method: PUT
- name: Organization
  endpoint:
    path: /fhir/R4/Organization/{ID}
    method: DELETE
- name: NutritionOrder
  endpoint:
    path: /fhir/R4/NutritionOrder/{ID}
    method: DELETE
- name: Observation
  endpoint:
    path: /Observation
    method: GET
    data_selector: records
    params: {}
- name: Observation
  endpoint:
    path: /fhir/R4/Observation/{ID}
    method: GET
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: GET
- name: Observation
  endpoint:
    path: /fhir/R4/Observation
    method: POST
- name: AllergyIntolerance
  endpoint:
    path: /AllergyIntolerance
    method: GET
- name: Condition
  endpoint:
    path: /Condition
    method: GET
- name: Observation
  endpoint:
    path: /Observation
    method: GET
- name: Procedure
  endpoint:
    path: /Procedure
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /DiagnosticReport
    method: GET
- name: Immunization
  endpoint:
    path: /Immunization
    method: GET
- name: FamilyMemberHistory
  endpoint:
    path: /FamilyMemberHistory
    method: GET
- name: Goal
  endpoint:
    path: /Goal
    method: GET
- name: MedicationRequest
  endpoint:
    path: /MedicationRequest
    method: GET
- name: MedicationDispense
  endpoint:
    path: /MedicationDispense
    method: GET
- name: MedicationStatement
  endpoint:
    path: /MedicationStatement
    method: GET
- name: NutritionOrder
  endpoint:
    path: /NutritionOrder
    method: GET
- name: ServiceRequest
  endpoint:
    path: /ServiceRequest
    method: GET
- name: CarePlan
  endpoint:
    path: /CarePlan
    method: GET
- name: RequestGroup
  endpoint:
    path: /RequestGroup
    method: GET
- name: Encounter
  endpoint:
    path: /Encounter
    method: GET
- name: DocumentReference
  endpoint:
    path: /DocumentReference
    method: GET
- name: Composition
  endpoint:
    path: /Composition
    method: GET
- name: Provenance
  endpoint:
    path: /Provenance
    method: GET
- name: Communication
  endpoint:
    path: /Communication
    method: GET
- name: CommunicationRequest
  endpoint:
    path: /CommunicationRequest
    method: GET
- name: List
  endpoint:
    path: /List
    method: GET
- name: Practitioner
  endpoint:
    path: /Practitioner
    method: GET
- name: PractitionerRole
  endpoint:
    path: /PractitionerRole
    method: GET
- name: Organization
  endpoint:
    path: /Organization
    method: GET
- name: Location
  endpoint:
    path: /Location
    method: GET
- name: RelatedPerson
  endpoint:
    path: /RelatedPerson
    method: GET
- name: Observation
  endpoint:
    path: /fhir/R4/Observation/{ID}
    method: PUT
- name: patient
  endpoint:
    path: /fhir/R4/Patient/{id}
    method: GET
- name: Patient
  endpoint:
    path: /fhir/R4/Patient
    method: GET
- name: Observation
  endpoint:
    path: /fhir/R4/Observation/{ID}
    method: DELETE
- name: Patient
  endpoint:
    path: /fhir/R4/Patient
    method: POST
- name: organization
  endpoint:
    path: /fhir/R4/Organization
    method: GET
    data_selector: records
- name: Patient
  endpoint:
    path: /fhir/R4/Patient/{ID}
    method: PUT
- name: organization
  endpoint:
    path: /fhir/R4/Organization/{id}
    method: GET
- name: Patient Export C-CDA
  endpoint:
    path: /fhir/R4/Patient/{ID}/$export-ccda
    method: POST
- name: Organization
  endpoint:
    path: /fhir/R4/Organization
    method: GET
    data_selector: records
- name: everything
  endpoint:
    path: /fhir/R4/Patient/{ID}/$everything
    method: GET
    params: {}
- name: organization
  endpoint:
    path: /fhir/R4/Organization
    method: POST
- name: practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
    data_selector: records
- name: Organization
  endpoint:
    path: /fhir/R4/Organization/{ID}
    method: PUT
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner/{id}
    method: GET
- name: Organization
  endpoint:
    path: /fhir/R4/Organization/{ID}
    method: DELETE
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: GET
    data_selector: records
    params: {}
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole/{id}
    method: GET
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: GET
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: POST
- name: AllergyIntolerance
  endpoint:
    path: /AllergyIntolerance
    method: GET
- name: Condition
  endpoint:
    path: /Condition
    method: GET
- name: Observation
  endpoint:
    path: /Observation
    method: GET
- name: Procedure
  endpoint:
    path: /Procedure
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /DiagnosticReport
    method: GET
- name: Immunization
  endpoint:
    path: /Immunization
    method: GET
- name: FamilyMemberHistory
  endpoint:
    path: /FamilyMemberHistory
    method: GET
- name: Goal
  endpoint:
    path: /Goal
    method: GET
- name: MedicationRequest
  endpoint:
    path: /MedicationRequest
    method: GET
- name: MedicationDispense
  endpoint:
    path: /MedicationDispense
    method: GET
- name: MedicationStatement
  endpoint:
    path: /MedicationStatement
    method: GET
- name: NutritionOrder
  endpoint:
    path: /NutritionOrder
    method: GET
- name: ServiceRequest
  endpoint:
    path: /ServiceRequest
    method: GET
- name: CarePlan
  endpoint:
    path: /CarePlan
    method: GET
- name: RequestGroup
  endpoint:
    path: /RequestGroup
    method: GET
- name: Encounter
  endpoint:
    path: /Encounter
    method: GET
- name: DocumentReference
  endpoint:
    path: /DocumentReference
    method: GET
- name: Composition
  endpoint:
    path: /Composition
    method: GET
- name: Provenance
  endpoint:
    path: /Provenance
    method: GET
- name: Communication
  endpoint:
    path: /Communication
    method: GET
- name: CommunicationRequest
  endpoint:
    path: /CommunicationRequest
    method: GET
- name: List
  endpoint:
    path: /List
    method: GET
- name: Binary
  endpoint:
    path: /Binary
    method: GET
- name: Practitioner
  endpoint:
    path: /Practitioner
    method: GET
- name: PractitionerRole
  endpoint:
    path: /PractitionerRole
    method: GET
- name: Organization
  endpoint:
    path: /Organization
    method: GET
- name: Location
  endpoint:
    path: /Location
    method: GET
- name: RelatedPerson
  endpoint:
    path: /RelatedPerson
    method: GET
- name: Patient
  endpoint:
    path: /Patient
    method: GET
- name: Patient
  endpoint:
    path: /fhir/R4/Patient/{id}
    method: GET
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole/{ID}
    method: PUT
- name: Patient
  endpoint:
    path: /fhir/R4/Patient
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: GET
    data_selector: Procedure
    params:
      incremental: patient
- name: patient
  endpoint:
    path: /fhir/R4/Patient
    method: POST
- name: Patient
  endpoint:
    path: /fhir/R4/Patient/{ID}
    method: PUT
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure/{ID}
    method: GET
    data_selector: records
- name: Patient Export C-CDA
  endpoint:
    path: /fhir/R4/Patient/{ID}/$export-ccda
    method: POST
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: GET
    data_selector: ''
- name: everything
  endpoint:
    path: /fhir/R4/Patient/{ID}/$everything
    method: GET
    params: {}
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: POST
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
    data_selector: records
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: POST
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner/{id}
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure/{ID}
    method: PUT
- name: Practitioner
  endpoint:
    path: /fhir/R4/Practitioner
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure/{ID}
    method: DELETE
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: GET
    data_selector: records
- name: provenance
  endpoint:
    path: /fhir/R4/Provenance
    method: GET
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole/{id}
    method: GET
- name: request_group
  endpoint:
    path: /fhir/R4/RequestGroup
    method: GET
    data_selector: records
    params: {}
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole
    method: GET
- name: PractitionerRole
  endpoint:
    path: /PractitionerRole
    method: POST
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup/{ID}
    method: GET
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup
    method: GET
- name: PractitionerRole
  endpoint:
    path: /fhir/R4/PractitionerRole/{ID}
    method: PUT
- name: procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: GET
    data_selector: Procedure
    params: {}
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup
    method: POST
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure/{ID}
    method: GET
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup/{ID}/$pdf
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure
    method: POST
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: GET
    data_selector: records
    params:
      status: active
- name: Procedure
  endpoint:
    path: /Procedure
    method: POST
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest/{ID}
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure/{ID}
    method: PUT
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: GET
- name: Procedure
  endpoint:
    path: /fhir/R4/Procedure/{ID}
    method: DELETE
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: POST
- name: Provenance
  endpoint:
    path: /fhir/R4/Provenance
    method: GET
    data_selector: records
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest/{ID}/$pdf
    method: GET
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup
    method: GET
    data_selector: records
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup/{ID}
    method: GET
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup
    method: GET
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup
    method: POST
- name: RequestGroup
  endpoint:
    path: /fhir/R4/RequestGroup/{ID}/$pdf
    method: GET
- name: service_request
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: GET
    data_selector: records
    params:
      incremental: patient
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest/{ID}
    method: GET
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: GET
    data_selector: resources
- name: ServiceRequest
  endpoint:
    path: /fhir/R4/ServiceRequest
    method: POST
- name: ServiceRequest
  endpoint:
    path: /ServiceRequest/{ID}/$pdf
    method: GET
- name: AllergyIntolerance
  endpoint:
    path: /fhir/STU3/AllergyIntolerance
    method: GET
    data_selector: records
- name: Bundle
  endpoint:
    path: /fhir/STU3/Bundle
    method: GET
    data_selector: records
- name: CarePlan
  endpoint:
    path: /fhir/STU3/CarePlan
    method: GET
    data_selector: records
- name: ClinicalNote
  endpoint:
    path: /fhir/STU3/ClinicalNote
    method: GET
    data_selector: records
- name: Composition
  endpoint:
    path: /fhir/STU3/Composition
    method: GET
    data_selector: records
- name: Condition
  endpoint:
    path: /fhir/STU3/Condition
    method: GET
    data_selector: records
- name: Consent
  endpoint:
    path: /fhir/STU3/Consent
    method: GET
    data_selector: records
- name: Coverage
  endpoint:
    path: /fhir/STU3/Coverage
    method: GET
    data_selector: records
- name: DeviceUseStatement
  endpoint:
    path: /fhir/STU3/DeviceUseStatement
    method: GET
    data_selector: records
- name: DiagnosticReport
  endpoint:
    path: /fhir/STU3/DiagnosticReport
    method: GET
    data_selector: records
- name: DocumentReference
  endpoint:
    path: /fhir/STU3/DocumentReference
    method: GET
    data_selector: records
- name: ElectronicFax
  endpoint:
    path: /fhir/STU3/ElectronicFax
    method: GET
    data_selector: records
- name: Encounter
  endpoint:
    path: /fhir/STU3/Encounter
    method: GET
    data_selector: records
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/STU3/FamilyMemberHistory
    method: GET
    data_selector: records
- name: Goal
  endpoint:
    path: /fhir/STU3/Goal
    method: GET
    data_selector: records
- name: Immunization
  endpoint:
    path: /fhir/STU3/Immunization
    method: GET
    data_selector: records
- name: InstantMessage
  endpoint:
    path: /fhir/STU3/InstantMessage
    method: GET
    data_selector: records
- name: MedicationDispense
  endpoint:
    path: /fhir/STU3/MedicationDispense
    method: GET
    data_selector: records
- name: MedicationRequest
  endpoint:
    path: /fhir/STU3/MedicationRequest
    method: GET
    data_selector: records
- name: MedicationStatement
  endpoint:
    path: /fhir/STU3/MedicationStatement
    method: GET
    data_selector: records
- name: NutritionOrder
  endpoint:
    path: /fhir/STU3/NutritionOrder
    method: GET
    data_selector: records
- name: Observation
  endpoint:
    path: /fhir/STU3/Observation
    method: GET
    data_selector: records
- name: Organization
  endpoint:
    path: /fhir/STU3/Organization
    method: GET
    data_selector: records
- name: Patient
  endpoint:
    path: /fhir/STU3/Patient
    method: GET
    data_selector: records
- name: Practitioner
  endpoint:
    path: /fhir/STU3/Practitioner
    method: GET
    data_selector: records
- name: PractitionerRole
  endpoint:
    path: /fhir/STU3/PractitionerRole
    method: GET
    data_selector: records
- name: Procedure
  endpoint:
    path: /fhir/STU3/Procedure
    method: GET
    data_selector: records
- name: ProcedureRequest
  endpoint:
    path: /fhir/STU3/ProcedureRequest
    method: GET
    data_selector: records
- name: ReferralRequest
  endpoint:
    path: /fhir/STU3/ReferralRequest
    method: GET
    data_selector: records
- name: RequestGroup
  endpoint:
    path: /fhir/STU3/RequestGroup
    method: GET
    data_selector: records
- name: Subscription
  endpoint:
    path: /fhir/STU3/Subscription
    method: GET
    data_selector: records
- name: TelephonicEncounter
  endpoint:
    path: /fhir/STU3/TelephonicEncounter
    method: GET
    data_selector: records
- name: AllergyIntolerance
  endpoint:
    path: /fhir/AllergyIntolerance
    method: GET
    data_selector: records
    params: {}
- name: bundle
  endpoint:
    path: /Bundle
    method: POST
    data_selector: resource
    params: {}
- name: batch_response
  endpoint:
    path: /fhir/Bundle/{bundle_id}
    method: GET
    data_selector: entry
    params: {}
- name: careplan
  endpoint:
    path: /fhir/CarePlan
    method: GET
    data_selector: records
    params: {}
- name: Composition
  endpoint:
    path: /fhir/composition
    method: GET
    data_selector: Composition
    params: {}
- name: Bundle
  endpoint:
    path: /fhir/bundle
    method: POST
    data_selector: Bundle
    params: {}
- name: composition
  endpoint:
    path: /fhir/Composition
    method: GET
    data_selector: ''
- name: condition
  endpoint:
    path: /fhir/Condition
    method: GET
    data_selector: records
    params: {}
- name: AllergyIntolerance
  endpoint:
    path: /fhir/STU3/AllergyIntolerance
    method: GET
    data_selector: records
- name: Bundle
  endpoint:
    path: /fhir/STU3/Bundle
    method: GET
    data_selector: records
- name: CarePlan
  endpoint:
    path: /fhir/STU3/CarePlan
    method: GET
    data_selector: records
- name: ClinicalNote
  endpoint:
    path: /fhir/STU3/ClinicalNote
    method: GET
    data_selector: records
- name: Composition
  endpoint:
    path: /fhir/STU3/Composition
    method: GET
    data_selector: records
- name: Condition
  endpoint:
    path: /fhir/STU3/Condition
    method: GET
    data_selector: records
- name: Consent
  endpoint:
    path: /fhir/STU3/Consent
    method: GET
    data_selector: records
- name: Coverage
  endpoint:
    path: /fhir/STU3/Coverage
    method: GET
    data_selector: records
- name: DeviceUseStatement
  endpoint:
    path: /fhir/STU3/DeviceUseStatement
    method: GET
    data_selector: records
- name: DiagnosticReport
  endpoint:
    path: /fhir/STU3/DiagnosticReport
    method: GET
    data_selector: records
- name: DocumentReference
  endpoint:
    path: /fhir/STU3/DocumentReference
    method: GET
    data_selector: records
- name: ElectronicFax
  endpoint:
    path: /fhir/STU3/ElectronicFax
    method: GET
    data_selector: records
- name: Encounter
  endpoint:
    path: /fhir/STU3/Encounter
    method: GET
    data_selector: records
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/STU3/FamilyMemberHistory
    method: GET
    data_selector: records
- name: Goal
  endpoint:
    path: /fhir/STU3/Goal
    method: GET
    data_selector: records
- name: Immunization
  endpoint:
    path: /fhir/STU3/Immunization
    method: GET
    data_selector: records
- name: InstantMessage
  endpoint:
    path: /fhir/STU3/InstantMessage
    method: GET
    data_selector: records
- name: MedicationDispense
  endpoint:
    path: /fhir/STU3/MedicationDispense
    method: GET
    data_selector: records
- name: MedicationRequest
  endpoint:
    path: /fhir/STU3/MedicationRequest
    method: GET
    data_selector: records
- name: MedicationStatement
  endpoint:
    path: /fhir/STU3/MedicationStatement
    method: GET
    data_selector: records
- name: NutritionOrder
  endpoint:
    path: /fhir/STU3/NutritionOrder
    method: GET
    data_selector: records
- name: Observation
  endpoint:
    path: /fhir/STU3/Observation
    method: GET
    data_selector: records
- name: Organization
  endpoint:
    path: /fhir/STU3/Organization
    method: GET
    data_selector: records
- name: Patient
  endpoint:
    path: /fhir/STU3/Patient
    method: GET
    data_selector: records
- name: Practitioner
  endpoint:
    path: /fhir/STU3/Practitioner
    method: GET
    data_selector: records
- name: PractitionerRole
  endpoint:
    path: /fhir/STU3/PractitionerRole
    method: GET
    data_selector: records
- name: ProcedureRequest
  endpoint:
    path: /fhir/STU3/ProcedureRequest
    method: GET
    data_selector: records
- name: Procedure
  endpoint:
    path: /fhir/STU3/Procedure
    method: GET
    data_selector: records
- name: ReferralRequest
  endpoint:
    path: /fhir/STU3/ReferralRequest
    method: GET
    data_selector: records
- name: RequestGroup
  endpoint:
    path: /fhir/STU3/RequestGroup
    method: GET
    data_selector: records
- name: Subscription
  endpoint:
    path: /fhir/STU3/Subscription
    method: GET
    data_selector: records
- name: TelephonicEncounter
  endpoint:
    path: /fhir/STU3/TelephonicEncounter
    method: GET
    data_selector: records
- name: consent
  endpoint:
    path: /fhir/Consent
    method: GET
    data_selector: records
    params: {}
- name: AllergyIntolerance
  endpoint:
    path: /AllergyIntolerance
    method: GET
    data_selector: ''
    params: {}
- name: coverage
  endpoint:
    path: /fhir/Coverage
    method: GET
    data_selector: records
    params: {}
- name: Coverage
  endpoint:
    path: /Coverage/{ID}
    method: DELETE
- name: Bundle
  endpoint:
    path: /Bundle
    method: POST
- name: batch_response
  endpoint:
    path: /fhir/Bundle/{bundle_id}
    method: GET
- name: DeviceUseStatement
  endpoint:
    path: /DeviceUseStatement
    method: GET
    data_selector: records
    params: {}
- name: CarePlan
  endpoint:
    path: /fhir/CarePlan
    method: GET
    data_selector: records
    params: {}
- name: Composition
  endpoint:
    path: /fhir/Composition
    method: GET
    data_selector: data
    params: {}
- name: Bundle
  endpoint:
    path: /fhir/Bundle
    method: POST
    data_selector: data
    params: {}
- name: DiagnosticReport
  endpoint:
    path: /DiagnosticReport
    method: GET
    data_selector: resource
    params:
      _count: 100
      _offset: 0
- name: composition
  endpoint:
    path: /fhir/Composition
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /DiagnosticReport
    method: POST
- name: condition
  endpoint:
    path: /Condition
    method: GET
    data_selector: Condition
    params: {}
- name: Consent
  endpoint:
    path: /fhir/Consent
    method: GET
    data_selector: records
    params: {}
- name: DocumentReference
  endpoint:
    path: /DocumentReference/{ID}
    method: GET
    data_selector: resourceType
    params: {}
- name: Search DocumentReference
  endpoint:
    path: /DocumentReference
    method: GET
    data_selector: resourceType
    params:
      patient: Reference
      type: Token
      class: Token
      _lastUpdated: Date
      date: Date
- name: Create DocumentReference
  endpoint:
    path: /DocumentReference
    method: POST
    data_selector: resourceType
    params:
      subject: ''
      type: ''
      content.attachment: ''
      status: ''
- name: Delete DocumentReference
  endpoint:
    path: /DocumentReference/{ID}
    method: DELETE
    data_selector: resourceType
    params: {}
- name: Download PDF
  endpoint:
    path: /DocumentReference/{ID}/$pdf
    method: GET
    data_selector: resourceType
    params: {}
- name: Coverage
  endpoint:
    path: /fhir/Coverage
    method: GET
    data_selector: Coverage
    params: {}
- name: FaxMessage
  endpoint:
    path: /FaxMessage
    method: POST
    data_selector: resource
- name: FaxMessage Read
  endpoint:
    path: /FaxMessage/{ID}
    method: GET
    data_selector: resource
- name: FaxMessage Search
  endpoint:
    path: /FaxMessage
    method: GET
    data_selector: resource
- name: fax_message
  endpoint:
    path: /FaxMessage
    method: POST
    data_selector: resource
    params: {}
- name: Encounter
  endpoint:
    path: /Encounter
    method: GET
    data_selector: records
    params: {}
- name: Coverage
  endpoint:
    path: /Coverage/{ID}
    method: DELETE
- name: Consent
  endpoint:
    path: /Consent/{ID}
    method: DELETE
- name: DeviceUseStatement
  endpoint:
    path: /DeviceUseStatement/{ID}
    method: DELETE
- name: DiagnosticReport
  endpoint:
    path: /DiagnosticReport/{ID}
    method: DELETE
- name: DocumentReference
  endpoint:
    path: /DocumentReference/{ID}
    method: DELETE
- name: Encounter
  endpoint:
    path: /Encounter/{ID}
    method: DELETE
- name: FamilyMemberHistory
  endpoint:
    path: /FamilyMemberHistory/{ID}
    method: DELETE
- name: Goal
  endpoint:
    path: /Goal/{ID}
    method: DELETE
- name: Immunization
  endpoint:
    path: /Immunization/{ID}
    method: DELETE
- name: MedicationDispense
  endpoint:
    path: /MedicationDispense/{ID}
    method: DELETE
- name: MedicationRequest
  endpoint:
    path: /MedicationRequest/{ID}
    method: DELETE
- name: MedicationStatement
  endpoint:
    path: /MedicationStatement/{ID}
    method: DELETE
- name: NutritionOrder
  endpoint:
    path: /NutritionOrder/{ID}
    method: DELETE
- name: Observation
  endpoint:
    path: /Observation/{ID}
    method: DELETE
- name: Organization
  endpoint:
    path: /Organization/{ID}
    method: DELETE
- name: Patient
  endpoint:
    path: /Patient/{ID}
    method: DELETE
- name: Practitioner
  endpoint:
    path: /Practitioner/{ID}
    method: DELETE
- name: Procedure
  endpoint:
    path: /Procedure/{ID}
    method: DELETE
- name: RequestGroup
  endpoint:
    path: /RequestGroup/{ID}
    method: DELETE
- name: FamilyMemberHistory
  endpoint:
    path: /fhir/FamilyMemberHistory
    method: GET
    data_selector: records
    params: {}
- name: goal
  endpoint:
    path: /Goal
    method: GET
    data_selector: records
    params: {}
- name: DeviceUseStatement
  endpoint:
    path: /fhir/DeviceUseStatement
    method: GET
    data_selector: records
    params: {}
- name: Goal
  endpoint:
    path: /Goal/{ID}
    method: DELETE
- name: FamilyMemberHistory
  endpoint:
    path: /FamilyMemberHistory
    method: GET
- name: Immunization
  endpoint:
    path: /Immunization
    method: GET
- name: DiagnosticReport
  endpoint:
    path: /DiagnosticReport
    method: GET
    data_selector: resource
    params:
      _count: 100
- name: Immunization
  endpoint:
    path: /fhir/Immunization
    method: GET
    data_selector: records
    params:
      patient: Reference
      _lastUpdated: Date
      _offset: Number
      _count: Number
- name: DiagnosticReport
  endpoint:
    path: /DiagnosticReport
    method: POST
- name: InstantMessage
  endpoint:
    path: /InstantMessage
    method: GET
    data_selector: resources
- name: document_reference
  endpoint:
    path: /fhir/DocumentReference
    method: GET
    data_selector: resourceType
- name: MedicationDispense
  endpoint:
    path: /MedicationDispense
    method: GET
    data_selector: records
    params: {}
- name: FaxMessage
  endpoint:
    path: /fhir/FaxMessage
    method: POST
    data_selector: resourceType
- name: FaxMessage Read
  endpoint:
    path: /FaxMessage/{ID}
    method: GET
    data_selector: resourceType
- name: FaxMessage Search
  endpoint:
    path: /FaxMessage
    method: GET
    data_selector: resourceType
- name: FaxMessage
  endpoint:
    path: /FaxMessage
    method: GET
    data_selector: resource
- name: MedicationRequest
  endpoint:
    path: /fhir/MedicationRequest
    method: GET
    data_selector: records
    params: {}
- name: MedicationStatement
  endpoint:
    path: /MedicationStatement
    method: GET
    data_selector: MedicationStatement
    params: {}
- name: encounter
  endpoint:
    path: /fhir/Encounter
    method: GET
    data_selector: records
    params: {}
- name: nutrition_order
  endpoint:
    path: /NutritionOrder
    method: GET
    data_selector: records
    params:
      patient: 8063965523692105bfc35def
      _lastUpdated: ''
- name: FamilyMemberHistory
  endpoint:
    path: /FamilyMemberHistory
    method: GET
    data_selector: records
    params: {}
- name: Observation
  endpoint:
    path: /fhir/Observation
    method: GET
    data_selector: records
    params:
      category: http://hl7.org/fhir/observation-category
      patient: Reference
- name: goal
  endpoint:
    path: /fhir/Goal
    method: GET
    data_selector: records
    params: {}
- name: Goal
  endpoint:
    path: /Goal/{ID}
    method: DELETE
- name: Observation
  endpoint:
    path: /Observation/{ID}
    method: PUT
    data_selector: Observation
    params: {}
- name: Observation
  endpoint:
    path: /Observation/{ID}
    method: DELETE
    data_selector: Observation
    params: {}
- name: immunization
  endpoint:
    path: /Immunization
    method: GET
    data_selector: records
    params:
      _lastUpdated: ''
      _offset: ''
      _count: ''
- name: organization
  endpoint:
    path: /fhir/Organization
    method: GET
    data_selector: records
- name: Organization
  endpoint:
    path: /Organization/{ID}
    method: DELETE
- name: InstantMessage
  endpoint:
    path: /fhir/InstantMessage
    method: GET
    data_selector: resources
- name: patient
  endpoint:
    path: /Patient
    method: GET
    data_selector: resourceType
    params: {}
- name: medication_dispense
  endpoint:
    path: /fhir/MedicationDispense
    method: GET
    data_selector: records
    params:
      patient: Reference
      _lastUpdated: Date
      _offset: Number
      _count: Number
- name: export_ccda
  endpoint:
    path: /Patient/{ID}/$export-ccda
    method: GET
- name: everything
  endpoint:
    path: /Patient/{ID}/$everything
    method: GET
- name: merge
  endpoint:
    path: /Patient/$merge
    method: POST
- name: MedicationRequest
  endpoint:
    path: /MedicationRequest
    method: GET
    data_selector: records
    params: {}
- name: MedicationStatement
  endpoint:
    path: /MedicationStatement
    method: GET
    data_selector: records
    params: {}
- name: practitioner
  endpoint:
    path: /fhir/Practitioner
    method: GET
    data_selector: records
    params: {}
- name: nutrition_order
  endpoint:
    path: /NutritionOrder/{ID}
    method: GET
    data_selector: NutritionOrder
- name: nutrition_order_search
  endpoint:
    path: /NutritionOrder
    method: GET
    data_selector: NutritionOrder
    params:
      patient: Reference
      _lastUpdated: Date
- name: nutrition_order_create
  endpoint:
    path: /NutritionOrder
    method: POST
    data_selector: NutritionOrder
- name: nutrition_order_update
  endpoint:
    path: /NutritionOrder/{ID}
    method: PUT
    data_selector: NutritionOrder
- name: nutrition_order_delete
  endpoint:
    path: /NutritionOrder/{ID}
    method: DELETE
    data_selector: NutritionOrder
- name: observation
  endpoint:
    path: /fhir/Observation
    method: GET
    data_selector: records
    params:
      patient: Reference
      category: Token
- name: PractitionerRole
  endpoint:
    path: /PractitionerRole
    method: GET
    data_selector: ''
- name: Observation
  endpoint:
    path: /Observation/{ID}
    method: PUT
    data_selector: Observation
    params: {}
- name: procedure
  endpoint:
    path: /fhir/Procedure
    method: GET
    data_selector: records
    params: {}
- name: organization
  endpoint:
    path: /Organization
    method: GET
    data_selector: records
- name: Organization
  endpoint:
    path: /Organization/{ID}
    method: DELETE
- name: ProcedureRequest
  endpoint:
    path: /fhir/ProcedureRequest
    method: GET
    data_selector: records
    params: {}
- name: patient
  endpoint:
    path: /Patient
    method: GET
    data_selector: records
- name: List
  endpoint:
    path: /fhir/List
    method: GET
    data_selector: records
    params: {}
- name: export_ccda
  endpoint:
    path: /Patient/{ID}/$export-ccda
    method: GET
- name: everything
  endpoint:
    path: /Patient/{ID}/$everything
    method: GET
- name: merge
  endpoint:
    path: /Patient/$merge
    method: POST
- name: ReferralRequest
  endpoint:
    path: /ReferralRequest
    method: GET
    data_selector: records
    params: {}
- name: RequestGroup
  endpoint:
    path: /fhir/RequestGroup
    method: GET
    data_selector: resource
    params: {}
- name: Practitioner
  endpoint:
    path: /fhir/Practitioner
    method: GET
    data_selector: records
    params:
      role: doctor
- name: subscription
  endpoint:
    path: /Subscription
    method: GET
- name: PractitionerRole
  endpoint:
    path: /PractitionerRole
    method: GET
    data_selector: records
- name: procedure
  endpoint:
    path: /fhir/Procedure
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /fhir/Subscription
    method: GET
    data_selector: records
    params: {}
- name: ProcedureRequest
  endpoint:
    path: /fhir/ProcedureRequest
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /healthgorilla/callback
    method: POST
    data_selector: resource
    params: {}
- name: list
  endpoint:
    path: /fhir/List
    method: GET
    data_selector: organizations and providers involved in patient's treatment
    params: {}
- name: telephonic_encounter
  endpoint:
    path: /fhir/Encounter
    method: POST
    data_selector: resourceType
- name: ReferralRequest
  endpoint:
    path: /ReferralRequest
    method: GET
    data_selector: resources
    params: {}
- name: Encounter
  endpoint:
    path: /fhir/Encounter
    method: GET
    data_selector: records
    params: {}
- name: request_group
  endpoint:
    path: /RequestGroup
    method: GET
    data_selector: resources
    params: {}
- name: Subscription
  endpoint:
    path: /Subscription
    method: GET
- name: subscription
  endpoint:
    path: /fhir/Subscription
    method: GET
    data_selector: resource
    params: {}
- name: subscription
  endpoint:
    path: /healthgorilla/callback
    method: POST
    data_selector: resource
    params: {}
- name: telephonic_encounter
  endpoint:
    path: /fhir/Encounter
    method: POST
    data_selector: resourceType
    params: {}
- name: Encounter
  endpoint:
    path: /fhir/Encounter
    method: GET
    data_selector: resourceType
    params: {}
notes:
- All requests require OAuth 2.0 authentication using a Bearer Token.
- Unauthorized requests return `401 Unauthorized` responses.
- Learn about OAuth 2.0 and how to use it with APIs
- All HealthGorilla endpoints are accessible only over SSL/TLS1.2+, plain HTTP calls
  are refused.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The sandbox is a closed test environment. No emails or external messages are sent.
- New feature releases are deployed to the sandbox first.
- Uses OAuth2 with refresh token
- All clinical data, original documents and parsed discrete data, is available via
  the Health Gorilla FHIR APIs.
- Requires an access token to be included in the request header
- The $p360-retrieve method must be executed asynchronously by including the Prefer:respond-async
  header.
- Uses OAuth2 for authentication.
- 'OAuth Scope: user/*.* patient360'
- This operations can take a long time to complete, therefore it must be performed
  asynchronously.
- Pagination is not available for these operations.
- The operation requires a valid Bearer token for authorization.
- Health Gorilla follows the Oauth 2.0 JWT authorization process.
- The access token will then be used to make a request to the client's FHIR server.
- JWT should be signed with a secret key that Health Gorilla will provide, using HS256
  (HMAC using SHA-256) algorithm.
- Health Gorilla uses the PractitionerRole FHIR endpoint for creating users and managing
  the associated UUIDs.
- The API is based on FHIR STU3 and uses common FHIR resources and operations.
- Some requests may require specific identifiers or parameters.
- Paging support is available for large datasets.
- Search operation can return codes based on account setup.
- Some diagnostic vendors require Advance Beneficiary Notice (ABN) form to be printed
  and signed by the patient to make requisition valid.
- Uses OAuth2 for authentication
- Orders are created inside Health Gorilla and sent to labs at the scheduled times
  specified in the request payload.
- API calls must be made over SSL.
- The 'place_orders' scope is required for submitting orders.
- The 'get_orders' scope is required for reading orders.
- Uses OAuth2 — requires setup of connected app in Health Gorilla
- Callback URL must use https scheme for security reasons
- Read order using JSON-RPC (deprecated)
- The import process could take a significant amount of time due to communication
  delays.
- Each roster uploaded will supersede any previously uploaded roster.
- It is recommended to upload updated rosters once a week.
- Each roster uploaded will supersede any previously uploaded roster. It is recommended
  to upload updated rosters once a week.
- A valid access token must be passed in the headers of the request to retrieve the
  HL7.
- Updated 4 months ago
- The create_users scope is required when creating Users via the PractitionerRole
  API.
- The `create_users` scope is required when creating Users via the PractitionerRole
  API.
- Developer must have Health Gorilla account to use APIs.
- FHIR R4 endpoints begin with /fhir/R4, while STU3 endpoints use /fhir/3.0.
- All API access must use TLS 1.2 or higher.
- A valid Bearer token must be included in the request. Binary download URLs are protected
  and may expire.
- Include X-Request-Id on all requests for traceability
- Log X-Hg-Request-Id and X-Correlation-Id in your application logs
- FHIR resources in the Health Gorilla API support the use of meta.tag and meta.security
  for tagging, filtering, and access control.
- A valid Bearer token must be included in the request.
- Binary download URLs are protected and may expire.
- OAuth 2.0 scopes and role-based access control (RBAC) are used to manage and enforce
  fine-grained access to APIs.
- Include `X-Request-Id` on all requests for traceability
- Log `X-Hg-Request-Id` and `X-Correlation-Id` in your application logs
- Health Gorilla access tokens have a limited lifetime (typically 1 hour).
- Refresh tokens also expire and may be revoked.
- FHIR resources in the Health Gorilla API support the use of `meta.tag` and `meta.security`
  for tagging, filtering, and access control.
- You can explicitly request a specific version of Health Gorilla's REST API during
  token generation by including the hg_rest_api_version parameter.
- Health Gorilla's API uses the OAuth 2.0 protocol with SMART-on-FHIR extensions to
  secure access to sensitive clinical data.
- All OAuth and FHIR API endpoints require TLS 1.2 or higher.
- Plain HTTP requests are rejected.
- Never disable certificate validation in production environments.
- Request only the scopes you need for the specific workflow.
- Avoid using `user/.` unless your application genuinely requires full access.
- 'Treat your `client_secret` like a password: Never expose it in frontend or mobile
  code.'
- Rotate client secrets periodically.
- Immediately revoke and reissue credentials if compromise is suspected.
- Never log or cache access tokens or refresh tokens in plaintext.
- Access tokens should only be stored temporarily and securely (e.g., in memory).
- Refresh tokens should be encrypted at rest and never exposed to users.
- Implement token revocation on logout or system deactivation.
- Verify webhook signatures (if provided) to ensure authenticity.
- Always validate incoming request payloads against expected formats.
- Require TLS for all callback URLs (redirect URIs and webhooks).
- Monitor access patterns to detect abuse, credential leaks, or unintended loops.
- Use rate limiting to prevent brute force attacks and protect backend resources.
- Use logging and audit trails to track API usage by client and user.
- Perform regular vulnerability scans and security reviews.
- Ensure audit logging is enabled and retained as required.
- Align your data retention policies with healthcare compliance frameworks.
- JWT must be signed with the client_secret using HS256.
- Tokens are evaluated based on both the granted scopes and the user or client’s role.
- The Health Gorilla FHIR API supports pagination for search operations and $everything
  responses.
- Paginated responses return a FHIR Bundle with one or more navigation links.
- By default, most search responses return the first page of results only.
- If more data is available, the response includes a link.relation="next" entry with
  a URL to fetch the next page.
- Use _cursor from the response Bundle.link.next when available.
- Set _count to manage response size and performance.
- Avoid excessively large page sizes (e.g., _count=1000).
- Do not rely on _offset for long-lived pagination sequences.
- Some long-running operations in the Health Gorilla API are executed asynchronously
  to avoid timeouts or performance bottlenecks.
- Asynchronous processing is used primarily in the FHIR STU3 API, since most real-time
  queries in FHIR R4 are synchronous by default.
- Webhooks are the preferred method for event-driven integrations and are supported
  across both FHIR R4 and STU3.
- Polling is supported as a fallback option but should only be used when webhook delivery
  is not feasible.
- Use granular scopes like `patient/*.read` or `user/Observation.read` when possible.
- Treat your `client_secret` like a password.
- Never expose it in frontend or mobile code.
- Store it securely using an encrypted secret manager or environment variable.
- Access tokens should only be stored temporarily and securely.
- Verify webhook signatures to ensure authenticity.
- Require TLS for all callback URLs.
- All webhook endpoints must use HTTPS. Plain HTTP endpoints are not supported.
- Always include patient in patient-scoped queries
- Use coded values (status, code, category) whenever possible
- Use date ranges rather than exact dates to avoid missing records
- Webhooks must use HTTPS with valid TLS 1.2+ certificates
- Webhook requests include Content-Type application/fhir+json
- Use _cursor from the response Bundle.link.next to retrieve the next page.
- Avoid using _offset for large datasets, as it may lead to performance issues or
  inconsistent pagination if data changes between requests.
- 'Use Prefer: respond-async for potentially large or long-running requests (STU3
  only)'
- Implement webhook notifications for real-time completion signals
- Use polling only as a fallback when webhooks are not feasible
- Apply exponential backoff when polling to reduce load
- Handle all relevant status codes gracefully (202, 200, 454)
- Health Gorilla attempts to deliver every webhook event reliably, but network interruptions,
  application downtime, or endpoint issues can cause failures.
- If a webhook delivery fails, Health Gorilla will attempt retries using an exponential
  backoff strategy.
- Persistent delivery failures may result in automatic deactivation of your subscription.
- 'To improve reliability and avoid lost data: Respond quickly, Use durable queuing,
  Log every event, Build in alerting, Support re-ingestion.'
- Because webhooks are not guaranteed to be delivered, you should implement a reconciliation
  process to periodically compare the data received via webhook vs. the latest data
  available via API query.
- All webhook endpoints must use https. Plain HTTP endpoints are not supported.
- All webhook endpoints must use HTTPS with valid TLS 1.2+ certificates.
- Self-signed or invalid certificates will result in delivery failure.
- Polling is less efficient than webhooks, increases API load, and introduces latency.
- Polling does not guarantee immediate delivery of updates.
- Polling is subject to rate limits.
- Actual webhook payloads may contain additional fields depending on the source and
  completeness of the clinical document. Your application should be resilient to extra
  fields and null values.
- Polling is less efficient than webhooks, increases API load, and introduces latency.
  Use it only when webhook delivery is not possible.
- If data is delayed from external networks, your application may miss recent records
  without reconciliation.
- Polling is subject to rate limits. Excessive or inefficient polling may result in
  throttling.
- All operations in the FHIR R4 API are processed synchronously by default. Clients
  typically receive a 200 OK response immediately unless an error occurs.
- PDF export is supported using $export-ccda or downloadable PDF format
- OAuth2 authentication required.
- All operations in the FHIR R4 API are processed synchronously by default. Clients
  typically receive a `200 OK` response immediately unless an error occurs.
- PDF export is supported using `$export-ccda` or downloadable PDF format
- $everything is Included in Patient Everything queries
- OAuth2 authentication is required.
- 'Credentials: OAuth2'
- 'The following attributes are required: type, category, code, patient.'
- Deletes allergy resource
- 'The following attributes are immutable: type, category, patient, code, recorder.'
- The batch-response bundle is available for 10 minutes after creation.
- Health Gorilla's API does not currently support the creation or management of Document
  bundles.
- Health Gorilla's API supports the use of Transaction bundles for atomic operations.
- Batch response is available for 10 minutes after creation.
- If an operation in the batch fails, the corresponding entry will include an error
  message.
- Unauthorized requests return 401 Unauthorized responses.
- If you use a Transaction bundle, all resources will be treated as a single unit.
- OAuth2 Bearer token is required for authentication
- Uses OAuth2 with Bearer token
- Activity may be passed using activity.outcomeReference or inside activity.detail.
- 'The following attributes are immutable: subject, recorder'
- Returns Composition and related resources packed into a single Bundle.
- OAuth2 Bearer token required for authentication
- 'The following attributes are required: subject'
- 'The following attributes are immutable: subject, code'
- Deletes Condition resource
- Uses OAuth2 Bearer token for authentication.
- OAuth2 Bearer token required for authentication.
- Adds insurance information for the patient
- All requests require OAuth 2.0 authentication using a Bearer Token. Unauthorized
  requests return 401 Unauthorized responses.
- Requires setup of connected app in api
- 'The following attributes are required: subject, device, device.type'
- 'The following attributes are required: patient, status, source, category, scope'
- 'The following attributes are immutable: subject, device.'
- Retrieve DiagnosticReport resource by ID
- Retrieve DiagnosticReport resources by the specified search criteria
- You can create DiagnosticReport using this request
- OAuth2 Bearer token is required for access.
- You can specify the client timezone by passing it in the ‘tz’ attribute.
- Creates new Document to the specified patient chart
- 'The following attributes are immutable: subject, device'
- Uses OAuth2
- Bearer token is required
- In order to get notified of faxes that could not be delivered by Health Gorilla
  to recipients, you can register a Subscription resource.
- 'The following attributes are required: subject, code, status.'
- Creates Encounter resource
- Retrieve document by ID
- 'The following attributes are immutable: subject, type, recorder.'
- Deletes Encounter resource
- Uses OAuth2 with Bearer token for authentication
- 'The following attributes are required: patient, relationship, status.'
- 'The following attributes are immutable: patient, recorder'
- 'The following attributes are immutable: subject, description'
- The URL for this request expired after 30 days.
- 'The following attributes are required: patient, vaccineCode, occurrence[x]'
- 'The following attributes are immutable: patient, practitioner, vaccineCode'
- Deletes FamilyMemberHistory resource
- OAuth2 Bearer token required for access
- 'Required Scope: location.read for GET'
- Retrieve MedicationStatement resource by ID
- 'The following attributes are required: subject, medication, status'
- 'The following attributes are immutable: patient, practitioner, vaccineCode.'
- 'The following attributes are immutable: patient, medication'
- If resource has status not equal to *completed* or *active* then the request is
  rejected. Only the given statuses are supported.
- Deletes MedicationRequest resource
- OAuth2 Bearer token is used for authentication
- OAuth2 Bearer Token required for authentication
- Uses OAuth2 with bearer token for authentication
- Deletes MedicationDispense resource
- 'The following attributes are required: subject, medication, status.'
- 'The following attributes are immutable: patient, recorder, medication'
- Retrieve NutritionOrder resource by ID
- Creates NutritionOrder resource
- 'The following attributes are immutable: patient'
- 'The following attributes are required for Vital Sign: subject, status, has-member.'
- 'The following attributes are required for Social History: subject, status, code,
  value.'
- 'The following attributes are required for Functional Status: subject, status, code,
  has-member.'
- 'The following attributes are immutable: patient, recorder, medication.'
- 'The following attributes are immutable for Vital Sign: patient, performer.'
- 'The following attributes are immutable for Social History: patient, performer,
  code.'
- 'The following attributes are immutable for Functional Status: patient, performer.'
- Uses OAuth2 with bearer token
- 'Only the following two organization types are supported: ins (Insurance Provider),
  IP (Insurance Provider)'
- You can update only local Organizations (insurance providers) that you created.
- You can't modify an existing insurance provider to become a duplicate of another
  insurance provider. The endpoint rejects such requests.
- You can delete only local insurance providers.
- 'Conditional create requires additional header: If-None-Exist with search parameters'
- All requests require OAuth 2.0 authentication using a Bearer Token. Unauthorized
  requests return `401 Unauthorized` responses.
- Update operation supports ‘Optimistic Locking’
- If passed resource does not exist then it will be created (HTTP 201)
- Can specify the client timezone by passing it in the ‘tz’ attribute.
- The operation can take a long time to complete and must be performed asynchronously.
- It is highly recommended that the $everything call should be made async. If a call
  to $everything takes >60 seconds, it will time out at the communications layer,
  returning a 504 response to your API call.
- 'Only the following two organization types are supported: ''ins'' for Insurance
  Provider and ''IP'' for Insurance Provider.'
- Supports searching by identifier, practitioner, and organization.
- HG uses additional attributes to pass initial password and login, it's defined as
  FHIR Extensions.
- Conditional create method also supports If-None-Exist header
- Requires OAuth2 Bearer token for authentication
- OAuth2 Bearer credentials required
- It is highly recommended that the $everything call should be made async.
- If a call to $everything takes >60 seconds, it will time out at the communications
  layer, returning a 504 response to your API call.
- 'The following attributes are immutable: patient, recorder, code'
- Provenance is system-managed.
- HG uses additional attributes to pass initial password and login, it's defined as
  FHIR Extensions
- You can generate a PDF copy of the record using the specified request
- Uses OAuth2 Bearer token for authentication
- OAuth2 required
- 'The following attributes are immutable: patient, recorder, code.'
- Searching for Orders can only be read by ID (e.g. portalUrl/fhir/R4/ServiceRequest/dce45d61e8a4101581eb1088-19691).
- Searching where category=[http://snomed.info/sct|103693007] (orders) will return
  a 400 error 'Supplied category is not supported'.
- You can send a new referral request to the specified practitioner or organization.
- PDF generation only available for referrals.
- Credentials use OAuth2.
- Searching where category=[http://snomed.info/sct|103693007] will return a 400 error
  'Supplied category is not supported'.
- All operations in the FHIR STU3 API are processed asynchronously. Responses may
  return `202 Accepted` with a polling location or webhook notification.
- 'PDF Export: Available via Binary resource, typically linked from a `DocumentReference`'
- Bundle resource of type batch can be used for batch import of resources.
- The lifetime of batch-response bundle is 10 minutes.
- The FHIR STU3 Condition resource describes a clinical condition, problem, diagnosis,
  or other event.
- The FHIR STU3 DeviceUseStatement resource is a record of a device being used by
  a patient.
- Supports retrieval of diagnostic reports by patient.
- Includes functionality to retrieve DICOM images.
- The FHIR STU3 Goal resource describes the intended objectives for a patient, group
  or organization care.
- Retrieve DICOM radiology images by ID
- An InstantMessage can contain DiagnosticReport, RequestGroup, DocumentReference,
  ReferralRequest as attachments.
- Only the given statuses are supported for creation.
- The FHIR STU3 Encounter resource describes an interaction between a patient and
  healthcare provider(s) for the purpose of providing healthcare service(s) or assessing
  the health status of a patient.
- Supports operations for Laboratory, Imaging, Vital Sign, Social History, and Functional
  Status.
- Health Gorilla does not allow duplicates, so if the supplied organization already
  exists, then the operation fails with an error.
- You can only delete local insurance providers.
- This operation can take a long time to complete, therefore it must be performed
  asynchronously.
- The FHIR STU3 Observation resource describes measurements and simple assertions
  made about a patient, device or other subject.
- The FHIR STU3 PractitionerRole resource is used to obtain information about healthcare
  providers known to Health Gorilla.
- 'OAuth scope: user/Patient.read rls'
- Supports operations to Read, Search, Create, and Download PDF.
- Coordinates expressed as [latitude]:[longitude] to find locations near to.
- Page size is supported as a search parameter.
- Health Gorilla allows 30 active subscriptions by default. This limit can be increased
  if needed.
- Only endpoints that use TLS1.2+ can be accepted.
- Uses OAuth2 with client credentials — requires setup of user OAuth credentials.
- Subscription is triggered when a batch of CDA documents is imported.
- Created for testing purposes.
- The FHIR STU3 ReferralRequest resource is used to record and send details about
  a request for referral service or transfer of a patient to the care of another provider
  or provider organization.
- Uses HTTP methods PUT and DELETE for modifying and archiving encounters
- Health Gorilla’s APIs use standard HTTP status codes combined with the FHIR OperationOutcome
  resource to report errors in a structured and consistent way.
- Error responses are returned in application/fhir+json format for FHIR R4 and STU3
  environments, including detailed diagnostics when available.
- Supports retrieving RequestGroup resources by ID or search criteria.
- Can generate PDF copies of records and labels.
- Health Gorilla allows 30 active subscriptions by default.
- Provide these IDs when contacting Health Gorilla support
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'invalid_grant: Invalid authorization code'
- 'access_denied: Canceled by the user'
- 'invalid_request: Invalid refresh token'
- 'unsupported_api_version: The supplied Rest API version is not supported.'
- 'invalid_grant: Invalid refresh token'
- 'unsupported_api_version: The supplied Rest API version is not supported'
- '202: The process is still ongoing'
- '4xx: An error has occurred'
- '200: The query has been successfully completed'
- '202: The process is still ongoing.'
- '4xx: An error has occurred.'
- '200: The query has been successfully completed.'
- '400 BadRequest: Supplied organization ID is not valid.'
- '400 BadRequest: Supplied Carequality provider can’t be found.'
- HTTP 400 BadRequest - Supplied organization ID is not valid
- HTTP 400 BadRequest - Supplied Carequality provider can’t be found
- 'HTTP 404 Not Found: The supplied patient is not enrolled in CommonWell.'
- 'HTTP 400 BadRequest: Supplied person ID is not valid.'
- 'HTTP 400 BadRequest: The supplied patient is not enrolled in CommonWell.'
- 'HTTP 400 BadRequest: The patient does not contain enough data to be processed by
  CommonWell.'
- 'HTTP 400 BadRequest: The patient''s zip code is not valid and rejected.'
- 'HTTP/1.1 200 OK: Request successful regardless of if documents are found.'
- '400 Bad Request: resource could not be parsed or failed basic FHIR validation rules
  - Content'
- '404 Not Found: resource type not supported, or not a FHIR end-point'
- '422 Unprocessable Entity: the proposed resource violated applicable FHIR profiles
  or server business rules.'
- '400 Bad Request: Check the request parameters for validity.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure the resource exists.'
- 'HTTP 201: ABN is required.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Ensure correct OAuth token is used.'
- 'Error during process: Check responseMessage for details.'
- 'HTTP 422: Missed contact info (fax/email) for not-activated recipient doctor''s
  account.'
- 'HTTP 422: Supplied Recipient is unknown.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '403 Forbidden: Token lacks the required scope.'
- invalid_request
- '403 Forbidden: Token lacks required scope.'
- '202 Accepted: Indicates the server accepts the request and returns immediately
  while processing the job in the background.'
- '200 OK: Indicates the job completed successfully.'
- '454 Expired or Not Found: Indicates the request result is no longer available.'
- '4xx: Failure in receiving the webhook'
- '5xx: Server error during processing'
- '202 Accepted: Request accepted for processing'
- '200 OK: Request completed successfully'
- '454 Expired or Not Found: The request result is no longer available or does not
  exist'
- Delivery failure if the HTTP response status is not 200 OK or 202 Accepted
- Delivery failure if the request times out
- Delivery failure if the server returns a 4xx or 5xx error code
- Delivery failure if the SSL certificate is invalid or expired
- Delivery failure if the endpoint is unreachable or DNS resolution fails
- '4xx: Any other status code is treated as a failure and will trigger retry logic.'
- The HTTP response status is not 200 OK or 202 Accepted
- The request times out
- The server returns a 4xx or 5xx error code
- The SSL certificate is invalid or expired
- The endpoint is unreachable or DNS resolution fails
- '401 Unauthorized: Unauthorized requests return 401 Unauthorized responses.'
- '401 Unauthorized: Unauthorized requests return `401 Unauthorized` responses.'
- operation not supported
- 'duplicate: The supplied record duplicates the existing one.'
- '422: The supplied record duplicates the existing one.'
- '401 Unauthorized: Unauthorized requests return 401 Unauthorized responses'
- '401 Unauthorized: Check your authentication credentials'
- '401 Unauthorized: Check OAuth token.'
- 'Missing required fields: patient, status'
- Invalid codes
- 'Insufficient authorization scope: goal.write'
- '401 Unauthorized: Recheck OAuth credentials'
- '504: The request timed out'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '204: No Content'
- 401 Unauthorized
- 400 Supplied category is not supported
- 'HTTP 201 Created: Successful operation'
- '404 Not Found: Check the ID provided for the DiagnosticReport.'
- '400 Bad Request: Validate the query parameters.'
- Common error scenarios may occur
- '400 Bad Request: Check required parameters and their formats.'
- 'HTTP 422: The supplied record duplicates the existing one.'
- '422: Going over the limit will return a 422 response code and an error message.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- validation failures
- authentication errors
- insufficient scope
- resource conflicts
- '400 Bad Request: Malformed or invalid input'
- '401 Unauthorized: Authentication failed'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Resource not found'
- '409 Conflict: Duplicate or conflicting data'
- '422 Unprocessable Entity: Validation failed'
- '500 Internal Server Error: Server error'
- '503 Service Unavailable: Maintenance or overload'
- '422 Unprocessable Entity: The ''patient'' field is required.'
- 'invalid: General input validation error'
- 'required: Missing required field'
- 'forbidden: Access denied due to permissions'
- 'not-found: Referenced resource does not exist'
- 'duplicate: Duplicate resource or identifier'
- 'conflict: Data conflict or business rule violation'
- 'structure: Payload is structurally invalid'
- 'processing: Unexpected internal processing error'
- 'HTTP/1.1 422 Unprocessable Entity: Patient/1234 could not be resolved.'
- '400 Bad Request: Likely malformed input or missing fields'
- '401 Unauthorized: Missing or invalid token'
- '403 Forbidden: Insufficient scope or permissions'
- '422 Unprocessable Entity: FHIR validation failed'
- HTTP/1.1 422 Unprocessable Entity
- not-found
auth_info:
  mentioned_objects:
  - OauthToken
  - PractitionerRole
  - Practitioner
  - client_id
  - client_secret
  - refresh_token
  - OAuth2
  - OAuth 2.0
  - OAuth 2.0 Authentication
client:
  base_url: https://sandbox.healthgorilla.com
  auth:
    type: oauth2
source_metadata: null
