resources:
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: create_multiple_users
  endpoint:
    path: /create/multiple/users
    method: POST
    data_selector: payload
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params:
      limit: 100
      includeRole: false
- name: create_multiple_users
  endpoint:
    path: /users
    method: POST
    data_selector: data
- name: User
  endpoint:
    path: /users
    method: GET
- name: Audit
  endpoint:
    path: /audit
    method: POST
- name: Execution
  endpoint:
    path: /executions
    method: GET
- name: Workflow
  endpoint:
    path: /workflows
    method: POST
- name: Credential
  endpoint:
    path: /credentials
    method: POST
- name: Tags
  endpoint:
    path: /tags
    method: POST
- name: SourceControl
  endpoint:
    path: /sourceControl
    method: POST
- name: Variables
  endpoint:
    path: /variables
    method: POST
- name: Projects
  endpoint:
    path: /projects
    method: POST
- name: user
  endpoint:
    path: /projects/{projectId}/users/{userId}
    method: PATCH
    data_selector: data
    params:
      includeRole: 'false'
- name: generate_audit
  endpoint:
    path: /generate/audit
    method: POST
    data_selector: additionalOptions
- name: executions
  endpoint:
    path: /executions
    method: GET
    data_selector: data
    params:
      limit: 100
- name: create_workflow
  endpoint:
    path: /workflows
    method: POST
    data_selector: data
- name: workflows
  endpoint:
    path: /workflows
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: workflow
  endpoint:
    path: /workflows/{id}
    method: GET
    data_selector: data
    params: {}
- name: delete_workflow
  endpoint:
    path: /workflows/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: update_workflow
  endpoint:
    path: /workflows/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: activate_workflow
  endpoint:
    path: /activate_workflow/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: deactivate_workflow
  endpoint:
    path: /deactivate_workflow/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: transfer_workflow
  endpoint:
    path: /transfer_workflow/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: transfer_credential
  endpoint:
    path: /patch/projects/{projectId}/users/{userId}
    method: PATCH
    data_selector: ''
    params:
      id: required
      destinationProjectId: required
- name: workflow_tags
  endpoint:
    path: /projects/{projectId}/users/{userId}
    method: PATCH
    data_selector: data
    params: {}
- name: credential
  endpoint:
    path: /create-credential
    method: POST
    data_selector: data
- name: tags
  endpoint:
    path: /tags
    method: POST
    data_selector: data
    params: {}
- name: credentials
  endpoint:
    path: /credentials/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: credential_schema
  endpoint:
    path: /credentials/schema/{credentialTypeName}
    method: GET
    data_selector: data
    params: {}
- name: Pull changes from the remote repository
  endpoint:
    path: /patch/projects/{projectId}/users/{userId}
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: tag
  endpoint:
    path: /tags/{id}
    method: GET
    data_selector: data
    params: {}
- name: delete_tag
  endpoint:
    path: /tags/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: update_tag
  endpoint:
    path: /tags/{id}
    method: PATCH
    data_selector: data
    params: {}
- name: variables
  endpoint:
    path: /variables
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: '204'
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: add_users_to_project
  endpoint:
    path: patch/projects/{projectId}/users/{userId}
    method: PATCH
    data_selector: relations
    params:
      projectId: required
- name: delete_user_from_project
  endpoint:
    path: patch/projects/{projectId}/users/{userId}
    method: DELETE
    data_selector: '204'
    params: {}
- name: change_user_role
  endpoint:
    path: patch/projects/{projectId}/users/{userId}
    method: PATCH
    data_selector: '204'
    params: {}
- name: workflow
  endpoint:
    path: /workflows
    method: GET
    data_selector: data
    params: {}
- name: calendar_operations
  endpoint:
    path: /integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar/calendar-operations/
    method: GET
- name: event_operations
  endpoint:
    path: /integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar/event-operations/
    method: GET
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      before: message_id
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Get a DONKI solar flare
  endpoint:
    path: /donki/flare
    method: GET
    data_selector: data
    params: {}
- name: courses
  endpoint:
    path: /api/courses
    method: GET
    data_selector: courses
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: data
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: data
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: channel
  endpoint:
    path: /channels
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: data
    params: {}
- name: workflows
  endpoint:
    path: /workflows
    method: GET
    data_selector: workflows
    params: {}
- name: messages
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: messages
- name: workflows
  endpoint:
    path: /templates/workflows/<id>
    method: GET
    params: {}
- name: search
  endpoint:
    path: /templates/search
    method: GET
    params: {}
- name: collections
  endpoint:
    path: /templates/collections/<id>
    method: GET
    params: {}
- name: collections_all
  endpoint:
    path: /templates/collections
    method: GET
    params: {}
- name: categories
  endpoint:
    path: /templates/categories
    method: GET
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    params: {}
- name: categories
  endpoint:
    path: /templates/categories
    method: GET
- name: collections
  endpoint:
    path: /templates/collections
    method: GET
- name: search
  endpoint:
    path: /templates/search
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: data
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: data
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: unshare_credential
  endpoint:
    path: /credential/unshare
    method: POST
    data_selector: unshared
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: account_types
  endpoint:
    path: /account/types
    method: GET
- name: email
  endpoint:
    path: /send/email
    method: POST
    data_selector: message
- name: ldap_user
  endpoint:
    path: /ldap/users
    method: GET
- name: LDAP User
  endpoint:
    path: /settings/ldap
    method: POST
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: Merge data from different data streams
  endpoint:
    path: /merge-data/from-different-data-streams
    method: GET
- name: Merge data from different nodes
  endpoint:
    path: /merge-data/from-different-nodes
    method: GET
- name: Merge data from multiple node executions
  endpoint:
    path: /merge-data/from-multiple-node-executions
    method: GET
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: Create-Card
  endpoint:
    path: /cards
    method: POST
    data_selector: card
    params: {}
- name: intercom-device-id
  endpoint:
    path: /intercom/device/id
    method: GET
- name: intercom-id
  endpoint:
    path: /intercom/id
    method: GET
- name: intercom-session
  endpoint:
    path: /intercom/session
    method: GET
- name: brw
  endpoint:
    path: /airtable/brw
    method: GET
- name: VISITOR_PRIVACY_METADATA
  endpoint:
    path: /youtube/visitor/privacy/metadata
    method: GET
- name: rl_user_id
  endpoint:
    path: /n8n/user/id
    method: GET
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /youtube/secure/rollout/token
    method: GET
- name: paddle_session
  endpoint:
    path: /paddle/session
    method: GET
- name: data_structure
  endpoint:
    path: /data-structure/
    method: GET
    data_selector: items
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: email
  endpoint:
    path: /send/email
    method: POST
    data_selector: response.data
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: cookie_titles
  endpoint:
    path: /cookie_report/titles
    method: GET
    data_selector: titles
- name: cookie_details
  endpoint:
    path: /cookie_report/details
    method: GET
    data_selector: cookies
- name: workflow
  endpoint:
    path: /api/v1/workflows
    method: GET
    data_selector: workflows
    params: {}
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: data
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: workflow
  endpoint:
    path: /workflows
    method: GET
    data_selector: data
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: data
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /settings/log_streaming/events
    method: GET
    data_selector: events
    params: {}
- name: syslog_server
  endpoint:
    path: /destinations/syslog
    method: POST
- name: generic_webhook
  endpoint:
    path: /destinations/webhook
    method: POST
- name: sentry_client
  endpoint:
    path: /destinations/sentry
    method: POST
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: email
  endpoint:
    path: /v1/emails
    method: GET
    data_selector: emails
    params:
      incremental: updated_at
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: send_email
  endpoint:
    path: /v1/send
    method: POST
    data_selector: data
    params: {}
- name: evaluation
  endpoint:
    path: /evaluations
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /calendars/{calendarId}/events
    method: GET
    data_selector: items
- name: calendar_operations
  endpoint:
    path: /integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar/calendar-operations/
    method: GET
- name: event_operations
  endpoint:
    path: /integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar/event-operations/
    method: GET
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: messages
  endpoint:
    path: /v9/channels/{channel.id}/messages
    method: GET
    data_selector: messages
- name: Gmail
  endpoint:
    path: ../integrations/builtin/credentials/sendemail/gmail/
    method: GET
- name: Outlook.com
  endpoint:
    path: ../integrations/builtin/credentials/sendemail/outlook/
    method: GET
- name: Yahoo
  endpoint:
    path: ../integrations/builtin/credentials/sendemail/yahoo/
    method: GET
- name: SendGrid
  endpoint:
    path: ../integrations/builtin/credentials/sendgrid/
    method: GET
- name: Sendy
  endpoint:
    path: ../integrations/builtin/credentials/sendy/
    method: GET
- name: Sentry.io
  endpoint:
    path: ../integrations/builtin/credentials/sentryio/
    method: GET
- name: Serp
  endpoint:
    path: ../integrations/builtin/credentials/serp/
    method: GET
- name: ServiceNow
  endpoint:
    path: ../integrations/builtin/credentials/servicenow/
    method: GET
- name: seven
  endpoint:
    path: ../integrations/builtin/credentials/sms77/
    method: GET
- name: Shopify
  endpoint:
    path: ../integrations/builtin/credentials/shopify/
    method: GET
- name: Shuffler
  endpoint:
    path: ../integrations/builtin/credentials/shuffler/
    method: GET
- name: SIGNL4
  endpoint:
    path: ../integrations/builtin/credentials/signl4/
    method: GET
- name: Slack
  endpoint:
    path: ../integrations/builtin/credentials/slack/
    method: GET
- name: Snowflake
  endpoint:
    path: ../integrations/builtin/credentials/snowflake/
    method: GET
- name: SolarWinds IPAM
  endpoint:
    path: ../integrations/builtin/credentials/solarwindsipam/
    method: GET
- name: SolarWinds Observability SaaS
  endpoint:
    path: ../integrations/builtin/credentials/solarwindsobservability/
    method: GET
- name: Splunk
  endpoint:
    path: ../integrations/builtin/credentials/splunk/
    method: GET
- name: Spontit
  endpoint:
    path: ../integrations/builtin/credentials/spontit/
    method: GET
- name: Spotify
  endpoint:
    path: ../integrations/builtin/credentials/spotify/
    method: GET
- name: SSH
  endpoint:
    path: ../integrations/builtin/credentials/ssh/
    method: GET
- name: Stackby
  endpoint:
    path: ../integrations/builtin/credentials/stackby/
    method: GET
- name: Storyblok
  endpoint:
    path: ../integrations/builtin/credentials/storyblok/
    method: GET
- name: Strapi
  endpoint:
    path: ../integrations/builtin/credentials/strapi/
    method: GET
- name: Strava
  endpoint:
    path: ../integrations/builtin/credentials/strava/
    method: GET
- name: Stripe
  endpoint:
    path: ../integrations/builtin/credentials/stripe/
    method: GET
- name: Supabase
  endpoint:
    path: ../integrations/builtin/credentials/supabase/
    method: GET
- name: SurveyMonkey
  endpoint:
    path: ../integrations/builtin/credentials/surveymonkey/
    method: GET
- name: SyncroMSP
  endpoint:
    path: ../integrations/builtin/credentials/syncromsp/
    method: GET
- name: Sysdig
  endpoint:
    path: ../integrations/builtin/credentials/sysdig/
    method: GET
- name: Taiga
  endpoint:
    path: ../integrations/builtin/credentials/taiga/
    method: GET
- name: Tapfiliate
  endpoint:
    path: ../integrations/builtin/credentials/tapfiliate/
    method: GET
- name: Telegram
  endpoint:
    path: ../integrations/builtin/credentials/telegram/
    method: GET
- name: TheHive
  endpoint:
    path: ../integrations/builtin/credentials/thehive/
    method: GET
- name: TheHive 5
  endpoint:
    path: ../integrations/builtin/credentials/thehive5/
    method: GET
- name: TimescaleDB
  endpoint:
    path: ../integrations/builtin/credentials/timescaledb/
    method: GET
- name: Todoist
  endpoint:
    path: ../integrations/builtin/credentials/todoist/
    method: GET
- name: Toggl
  endpoint:
    path: ../integrations/builtin/credentials/toggl/
    method: GET
- name: TOTP
  endpoint:
    path: ../integrations/builtin/credentials/totp/
    method: GET
- name: Travis CI
  endpoint:
    path: ../integrations/builtin/credentials/travisci/
    method: GET
- name: Trellix ePO
  endpoint:
    path: ../integrations/builtin/credentials/trellixepo/
    method: GET
- name: Trello
  endpoint:
    path: ../integrations/builtin/credentials/trello/
    method: GET
- name: Twake
  endpoint:
    path: ../integrations/builtin/credentials/twake/
    method: GET
- name: Twilio
  endpoint:
    path: ../integrations/builtin/credentials/twilio/
    method: GET
- name: Twist
  endpoint:
    path: ../integrations/builtin/credentials/twist/
    method: GET
- name: Typeform
  endpoint:
    path: ../integrations/builtin/credentials/typeform/
    method: GET
- name: Unleashed Software
  endpoint:
    path: ../integrations/builtin/credentials/unleashedsoftware/
    method: GET
- name: UpLead
  endpoint:
    path: ../integrations/builtin/credentials/uplead/
    method: GET
- name: uProc
  endpoint:
    path: ../integrations/builtin/credentials/uproc/
    method: GET
- name: UptimeRobot
  endpoint:
    path: ../integrations/builtin/credentials/uptimerobot/
    method: GET
- name: urlscan.io
  endpoint:
    path: ../integrations/builtin/credentials/urlscanio/
    method: GET
- name: Venafi TLS Protect Cloud
  endpoint:
    path: ../integrations/builtin/credentials/venafitlsprotectcloud/
    method: GET
- name: Venafi TLS Protect Datacenter
  endpoint:
    path: ../integrations/builtin/credentials/venafitlsprotectdatacenter/
    method: GET
- name: Vercel AI Gateway
  endpoint:
    path: ../integrations/builtin/credentials/vercel/
    method: GET
- name: Vero
  endpoint:
    path: ../integrations/builtin/credentials/vero/
    method: GET
- name: VirusTotal
  endpoint:
    path: ../integrations/builtin/credentials/virustotal/
    method: GET
- name: Vonage
  endpoint:
    path: ../integrations/builtin/credentials/vonage/
    method: GET
- name: Weaviate
  endpoint:
    path: ../integrations/builtin/credentials/weaviate/
    method: GET
- name: Webex by Cisco
  endpoint:
    path: ../integrations/builtin/credentials/ciscowebex/
    method: GET
- name: Webflow
  endpoint:
    path: ../integrations/builtin/credentials/webflow/
    method: GET
- name: Webhook
  endpoint:
    path: ../integrations/builtin/credentials/webhook/
    method: GET
- name: Wekan
  endpoint:
    path: ../integrations/builtin/credentials/wekan/
    method: GET
- name: WhatsApp Business Cloud
  endpoint:
    path: ../integrations/builtin/credentials/whatsapp/
    method: GET
- name: Wise
  endpoint:
    path: ../integrations/builtin/credentials/wise/
    method: GET
- name: Wolfram|Alpha
  endpoint:
    path: ../integrations/builtin/credentials/wolframalpha/
    method: GET
- name: WooCommerce
  endpoint:
    path: ../integrations/builtin/credentials/woocommerce/
    method: GET
- name: WordPress
  endpoint:
    path: ../integrations/builtin/credentials/wordpress/
    method: GET
- name: Workable
  endpoint:
    path: ../integrations/builtin/credentials/workable/
    method: GET
- name: Wufoo
  endpoint:
    path: ../integrations/builtin/credentials/wufoo/
    method: GET
- name: X (formerly Twitter)
  endpoint:
    path: ../integrations/builtin/credentials/twitter/
    method: GET
- name: xAI
  endpoint:
    path: ../integrations/builtin/credentials/xai/
    method: GET
- name: Xata
  endpoint:
    path: ../integrations/builtin/credentials/xata/
    method: GET
- name: Xero
  endpoint:
    path: ../integrations/builtin/credentials/xero/
    method: GET
- name: Yourls
  endpoint:
    path: ../integrations/builtin/credentials/yourls/
    method: GET
- name: Zabbix
  endpoint:
    path: ../integrations/builtin/credentials/zabbix/
    method: GET
- name: Zammad
  endpoint:
    path: ../integrations/builtin/credentials/zammad/
    method: GET
- name: Zendesk
  endpoint:
    path: ../integrations/builtin/credentials/zendesk/
    method: GET
- name: Zep
  endpoint:
    path: ../integrations/builtin/credentials/zep/
    method: GET
- name: Zoho
  endpoint:
    path: ../integrations/builtin/credentials/zoho/
    method: GET
- name: Zoom
  endpoint:
    path: ../integrations/builtin/credentials/zoom/
    method: GET
- name: Zscaler ZIA
  endpoint:
    path: ../integrations/builtin/credentials/zscalerzia/
    method: GET
- name: Zulip
  endpoint:
    path: ../integrations/builtin/credentials/zulip/
    method: GET
- name: Gmail
  endpoint:
    path: /builtin/credentials/sendemail/gmail/
    method: GET
- name: Outlook.com
  endpoint:
    path: /builtin/credentials/sendemail/outlook/
    method: GET
- name: Yahoo
  endpoint:
    path: /builtin/credentials/sendemail/yahoo/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: intercom-device-id
  endpoint:
    path: /intercom/device
    method: GET
    data_selector: device_records
- name: intercom-id
  endpoint:
    path: /intercom/id
    method: GET
    data_selector: id_records
- name: intercom-session
  endpoint:
    path: /intercom/session
    method: GET
    data_selector: session_records
- name: users
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: guilds
  endpoint:
    path: /users/@me/guilds
    method: GET
    data_selector: guilds
- name: vector_store
  endpoint:
    path: /vector_store/insert
    method: POST
    data_selector: documents
    params: {}
- name: get_many
  endpoint:
    path: /vector_store/get_many
    method: GET
    data_selector: results
    params: {}
- name: Email
  endpoint:
    path: /send-email
    method: POST
    data_selector: data
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: data
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: data
    params: {}
- name: hook_functions
  endpoint:
    path: /frontend/hooks
    method: GET
- name: channels
  endpoint:
    path: /v10/channels
    method: GET
    data_selector: channels
    params: {}
- name: credentials
  endpoint:
    path: /rest/credentials
    method: POST
    data_selector: data
- name: workflows
  endpoint:
    path: /rest/workflows
    method: POST
    data_selector: data
- name: template_workflow
  endpoint:
    path: /rest/workflows/<workflow_id>
    method: GET
    data_selector: data
- name: workflows
  endpoint:
    path: /templates/workflows/<id>
    method: GET
- name: search
  endpoint:
    path: /templates/search
    method: GET
- name: collections
  endpoint:
    path: /templates/collections/<id>
    method: GET
- name: collections_list
  endpoint:
    path: /templates/collections
    method: GET
- name: categories
  endpoint:
    path: /templates/categories
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
- name: email
  endpoint:
    path: /send/email
    method: POST
    data_selector: data
    params: {}
notes:
- Requires a valid OAuth2 token for access
- Rate limits apply per endpoint
- Some objects may return nulls in deeply nested fields
- Cookies are small text files that are placed on your computer by websites that you
  visit.
- Websites use cookies to help users navigate efficiently and perform certain functions.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of OAuth2 credentials in n8n
- Rate limits are enforced per endpoint; check documentation for limits
- Some endpoints may require specific permissions to access
- Cookies that are required for the website to operate properly are allowed to be
  set without your permission.
- All other cookies need to be approved before they can be set in the browser.
- You can change your consent to cookie usage at any time on our Privacy Policy page.
- We also use cookies to collect data for the purpose of personalizing and measuring
  the effectiveness of our advertising.
- Some objects like Contact may return nulls in deeply nested fields
- Cookies are small text files that are placed on your computer by websites that you
  visit. Websites use cookies to help users navigate efficiently and perform certain
  functions. Cookies that are required for the website to operate properly are allowed
  to be set without your permission. All other cookies need to be approved before
  they can be set in the browser.
- Uses OAuth2 with refresh token — requires setup of connected app in n8n
- Completing the course should take around two hours.
- API calls may be rate-limited; implement exponential backoff.
- Ensure correct permissions for accessing resources.
- Ensure the bot has the required permissions to access specific guilds and channels
- Rate limits are enforced per endpoint
- Certain endpoints may require specific permissions
- Tags are global. If you edit or delete a tag, this affects all users of your n8n
  instance.
- API uses OAuth2 for authentication.
- Requires proper OAuth2 setup in Discord Developer Portal
- You must set type constraints for input and output manually
- Limited support for AI nodes
- Uses v1 execution ordering
- Accessor functions like `first()`, `last()`, and `all()` require extra care
- The `itemMatching` function requires a fixed index
- Rate limits apply on API calls — ensure to handle accordingly
- API rate limits are enforced, so make sure to handle retries appropriately.
- Requires setup of connected app in Google
- Ensure to configure email provider settings correctly.
- Two-factor authentication (2FA) adds a second authentication method on top of username
  and password.
- n8n supports 2FA using an authenticator app.
- Available on Self-hosted Enterprise and Cloud Enterprise plans.
- You need access to the n8n instance owner account.
- Available on Enterprise plans.
- You need access to the n8n instance owner account to enable and configure SAML
- API rate limits apply per endpoint and per bot/user.
- n8n handles iteration for all incoming items.
- Use Execute Once parameter to process only the first item.
- Sub-workflow executions don't count towards your plan's monthly execution or active
  workflow limits.
- Sub-workflow mustn't contain errors
- It's a good practice to consider potential errors and set up methods to handle them
  gracefully.
- You can use the same error workflow for multiple workflows.
- From 0.166.0 on, when using the Function node or Code node, n8n automatically adds
  the json key if it's missing.
- It also automatically wraps your items in an array if needed.
- Requires user to authorize the application
- Rate limits are enforced on API calls
- Make sure to have the right permissions set for the bot.
- Ensure to have the correct permissions for accessing the Discord API.
- You can only pin data for nodes that have a single main output ('error' outputs
  don't count for this purpose).
- Data pinning isn't available for production workflow executions. It's a feature
  to help test workflows during development.
- Some API calls may have rate limits
- Discord API rate limits requests, ensure to handle 429 status codes
- Reading and writing binary files can have security implications.
- If you want to disable reading and writing binary data, use the `NODES_EXCLUDE`
  environment variable.
- Cookies are small text files placed on your computer by websites.
- Requires setup of OAuth2 to access workflows
- Discord API has rate limits for requests.
- Ensure proper OAuth2 scopes are requested for desired data access.
- Requires setup of connected app in n8n
- Requires OAuth2 authentication setup in Discord Developer Portal
- Requires bot token for access to certain endpoints
- Cloud IP addresses change without warning
- n8n can't guarantee static source IPs, as Cloud operates in a dynamic cloud provider
  environment and scales its infrastructure to meet demand.
- You should use strong authentication and secure transport protocols when connecting
  into and out of n8n.
- Requires OAuth2 configuration to access workflows
- Requires a valid Discord bot token for authentication
- Rate limits apply to API calls
- Heavier executions and use cases can exceed database capacity despite the automatic
  pruning practices.
- n8n will manually prune data to protect instance stability.
- The alert system isn't perfect. If warnings are triggered after hours or if data
  consumption rates are high, there might not be time to prune the data before the
  remaining disk space fills up.
- n8n recommends building workflows with memory efficiency in mind, and not saving
  unnecessary data.
- On average, n8n itself consumes around 180MiB RAM.
- Requires user authentication for access to guilds.
- Note that for the change to be effective, the new email address can't be linked
  to any other n8n account.
- If the workspace is deactivated, there will be no **Settings** page and no possibility
  to change the email address or the owner info.
- Some objects may return nulls in deeply nested fields.
- Discord API requires OAuth2 for authentication.
- You have 90 days to download your workflows after your free trial ends.
- After that, all workflows will be permanently deleted and are unrecoverable.
- n8n uses source control to provide environments.
- n8n supports ED25519 and RSA public key algorithms. ED25519 is the default.
- Requires OAuth2 setup in Discord Developer Portal
- External secrets are available on Enterprise Self-hosted and Enterprise Cloud plans.
- n8n stores all credentials encrypted in its database, and restricts access to them
  by default.
- Log streaming is available on Enterprise Self-hosted and Cloud plans.
- Rate limits apply for API calls
- Webhooks can be used for certain integrations
- Ensure to handle rate limits as per API guidelines.
- This release contains bug fixes.
- This release contains core updates, editor improvements, node updates, and bug fixes.
- Ensure to handle rate limits as per the API documentation
- Support for OIDC (OpenID Connect) authentication
- Enterprise Instance owners can now enforce two-factor authentication (2FA)
- This release contains new features, node enhancements and bug fixes.
- Backup recommended
- Credential sharing required for manual executions
- Instance owners and admins will see changes if they try to manually execute a workflow
  where the credentials aren't shared with them
- This is a bug fix release. It resolves an issue with the HTTP Request node by removing
  the streaming response.
- This is a bug fix release.
- This release adds a new node, Google Ads. It also contains bug fixes and node enhancements,
  as well as a small addition to core.
- Added support for Luxon and JMESPath
- Added two new expressions variables, $now and $today
- Ensure that the Google Calendar API is enabled in the Google Cloud Console.
- n8n is considered both a Controller and a Processor as defined by the GDPR.
- Paddle transmits and stores the details of your payment method according to their
  security policy.
- n8n stores no information about your payment method.
- Requires OAuth2 setup for authentication.
- API may have rate limits that should be respected
- Use OAuth to connect integrations whenever possible.
- If you self-host n8n, you are responsible for deleting user data.
- n8n recommends configuring n8n to prune execution data automatically every few days
  to avoid effortful GDPR request handling as much as possible.
- n8n's mission is to give everyone who uses a computer technical superpowers.
- We coined the term 'fair-code' as a way of describing our licensing model.
- Expressions allow node parameters to be set dynamically based on data from previous
  node executions, the workflow, or the n8n environment.
- 'n8n supports two libraries: Luxon for working with dates and time, and JMESPath
  for querying JSON.'
- The Code node replaces the Function and Function Item nodes from version 0.198.0.
- Slower than JavaScript
- Rate limits are enforced per endpoint and per application.
- The AI-generated code may work without any changes, but you may have to edit it.
- You need to be aware of n8n's Data structure.
- You can query the data using agents or directly through a node.
- Ensure to configure appropriate email service credentials.
- n8n isn't CPU intensive so even small instances (of providers such as AWS and GCP)
  should be enough for most use cases. Usually, memory requirements supersede CPU
  requirements, so focus resources there when planning your infrastructure.
- n8n uses its database to store credentials, past executions, and workflows.
- A core feature of n8n is the flexibility to choose a database. All the supported
  databases have different advantages and disadvantages, which you have to consider
  individually and pick the one that best suits your needs. By default n8n creates
  an SQLite database if no database exists at the given location.
- n8n recommends that every n8n instance have a dedicated database. This helps to
  prevent dependencies and potential performance degradation. If it isn't possible
  to provide a dedicated database for every n8n instance, n8n recommends making use
  of Postgres's schema feature.
- If your instance is down or restarting, missed executions during this time aren't
  recoverable.
- If it's important for you to maintain 100% uptime, you need to build another proxy
  in front of it which caches the data.
- API rate limits apply — ensure compliance to prevent throttling
- Rate limits apply to requests.
- Some endpoints may require specific permissions.
- The APIs referenced in this document are subject to change at any time.
errors:
- '401 Unauthorized: Invalid token'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Resource does not exist'
- 401 Unauthorized
- 403 Forbidden
- 404 The specified resource was not found
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 404 The specified resource was not found.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Invalid input parameters'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Invalid token or insufficient permissions'
- '404 Not Found: Check if the resource exists or if you have access'
- '429 Too Many Requests: Rate limit exceeded, retry after the specified time'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Invalid token or insufficient permissions.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check token validity and permissions'
- '403 Forbidden: Insufficient permissions to access the resource'
- '400 Bad Request: Invalid request data'
- '401 Unauthorized: Check token validity'
- '401 Unauthorized: Check your credentials and permissions.'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Invalid token or missing scopes'
- '429 Too Many Requests: Rate limit exceeded, wait before retrying'
- '401 Unauthorized: Check your token or permissions'
- '401 Unauthorized: Check your token is valid.'
- '404 Not Found: Ensure the resource exists.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- 'Example Error Message: Stacktrace'
- 'WorkflowActivationError: No additional information provided.'
- '401 Unauthorized: Invalid token or missing permissions'
- '403 Forbidden: Insufficient permissions for the requested action'
- '401 Unauthorized: Check your token and permissions.'
- '403 Forbidden: Check if the bot has permission to access the resource.'
- '401 Unauthorized: Check your token and permissions'
- '403 Forbidden: You do not have permission to access this resource'
- '401 Unauthorized: Check your API key or authentication'
- '401 Unauthorized: Check your token and OAuth scopes.'
- '401 Unauthorized: Check your access token'
- '401 Unauthorized: Check if bot has appropriate permissions'
- '403 Forbidden: Ensure the bot is a member of the guild'
- '401 Unauthorized: Check your OAuth2 credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '403 Forbidden: Bot does not have permission to perform this action'
- '404 Not Found: Resource not found'
- '401 Unauthorized: Check if the token is valid.'
- '403 Forbidden: The user does not have permission.'
- '403 Forbidden: Access denied for the requested resource.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your access token'
- '401 Unauthorized: Check token and permissions'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'RATE_LIMIT_EXCEEDED: Slow down your requests.'
- '400 Bad Request: Check the request format and parameters'
- '401 Unauthorized: Verify your authentication credentials'
- '429 Too Many Requests: Implement exponential backoff strategy'
- OAuth2 authentication not working as expected in some scenarios
- '401 Unauthorized: Check token validity and permissions.'
- '404 Not Found: Verify the endpoint and resource ID.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Check your authentication token'
- '404 Not Found: The resource does not exist'
- '401 Unauthorized: Invalid access token'
- '403 Forbidden: Missing permissions'
- '401 Unauthorized: Check API key or credentials.'
- '400 Bad Request: Verify email format and required fields.'
- '404 Not Found: Endpoint does not exist or is incorrect'
- '429 Too Many Requests: Rate limit exceeded, retry after specified time'
- '404 Not Found: The requested resource doesn''t exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Oauth2
  - Service Account
  - OAuth2
  - Discord API
  - Application
  - OAuthToken
  - OAuth2Application
  - OAuth2Token
client:
  base_url: https://discord.com/api/v10
  auth:
    type: oauth2
    flow: authorization_code
    token_url: https://discord.com/api/oauth2/token
    client_id: '{{ dlt.secrets[''discord_client_id''] }}'
    client_secret: '{{ dlt.secrets[''discord_client_secret''] }}'
    location: header
    header_name: Authorization
  paginator:
    type: page
    page_size_param: limit
    default_page_size: 100
source_metadata: null
