Here's the YAML configuration for the Ruddr API source based on the provided documentation:

client:
  base_url: "https://api.ruddr.com/"
  auth:
    type: "api_key"
    api_token: "access_token"  # Placeholder for the actual token, to be provided at runtime

resources:
  - name: "clients"
    endpoint: "/api/clients"
    method: "GET"
    params:
      # Add any relevant query parameters if applicable
    data_selector: "$.clients"  # Adjust based on actual response structure

  - name: "projects"
    endpoint: "/api/projects"
    method: "GET"
    params:
      # Add any relevant query parameters if applicable
    data_selector: "$.projects"  # Adjust based on actual response structure

  - name: "project_members"
    endpoint: "/api/project_members"
    method: "GET"
    params:
      # Add any relevant query parameters if applicable
    data_selector: "$.project_members"  # Adjust based on actual response structure

  - name: "project_tasks"
    endpoint: "/api/project_tasks"
    method: "GET"
    params:
      # Add any relevant query parameters if applicable
    data_selector: "$.project_tasks"  # Adjust based on actual response structure

  - name: "expense_reports"
    endpoint: "/api/expense_reports"
    method: "GET"
    params:
      # Add any relevant query parameters if applicable
    data_selector: "$.expense_reports"  # Adjust based on actual response structure

notes:
  - "API key must be included in the header as 'Authorization'."
  - "Rate limits may apply; check the API documentation for exact limits."
  - "Ensure to handle pagination for endpoints returning large datasets."

errors:
  - 401  # Unauthorized
  - 403  # Forbidden
  - 429  # Too Many Requests

auth_info:
  mentioned_objects:
    - "API key must be generated from Ruddr workspace settings."
    - "Authentication is done via an API key in the request header."

source_metadata:
  description: "The Ruddr API provides access to project management data including clients, projects, and expense reports."
