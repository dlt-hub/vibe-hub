resources:
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts
    method: GET
    data_selector: items
    params:
      limit: 100
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions
    method: GET
    data_selector: items
    params:
      limit: 100
- name: credit_transfers
  endpoint:
    path: /payments/v2/credit-transfers
    method: GET
    data_selector: items
    params:
      limit: 100
- name: List connections
  endpoint:
    path: /connectivity/v2beta/connections
    method: GET
- name: connections
  endpoint:
    path: /connectivity/v2beta/connections
    method: GET
- name: end_of_day_summaries
  endpoint:
    path: /financial-data/v2beta/[id]/end-of-day-summaries
    method: GET
    data_selector: summaries
- name: end_of_day_summaries
  endpoint:
    path: /financial-data/v2beta/[id]/end-of-day-summaries
    method: GET
    data_selector: summaries
- name: connections
  endpoint:
    path: /connectivity/v2beta/connections
    method: GET
- name: connections
  endpoint:
    path: /connectivity/v2beta/connections
    method: GET
- name: list_connection_reports
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports
    method: GET
- name: list_connection_reports
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports
    method: GET
- name: bank_statements
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports/{id}/bank-statements
    method: GET
- name: bank_statements
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports/{id}/bank-statements
    method: GET
- name: Get raw report content
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports/{id}/content
    method: GET
- name: Get raw report content
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports/{id}/content
    method: GET
- name: raw_bank_statement_content
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports/{rid}/bank-statements/{id}/content
    method: GET
- name: raw_bank_statement_content
  endpoint:
    path: /connectivity/v2beta/connections/{cid}/reports/{rid}/bank-statements/{id}/content
    method: GET
- name: credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers
    method: POST
- name: credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers
    method: POST
- name: credit_transfers
  endpoint:
    path: /payments/v2/credit-transfers
    method: GET
- name: credit_transfers
  endpoint:
    path: /payments/v2/credit-transfers
    method: GET
- name: credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}
    method: GET
- name: credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}
    method: GET
- name: credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}
    method: PATCH
- name: credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}
    method: PATCH
- name: credit_transfer_events
  endpoint:
    path: /payments/v2/credit-transfers/{id}/events
    method: GET
- name: credit_transfer_events
  endpoint:
    path: /payments/v2/credit-transfers/{id}/events
    method: GET
- name: approve_credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}:approve
    method: POST
- name: approve_credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}:approve
    method: POST
- name: reject_credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}:reject
    method: POST
- name: reject_credit_transfer
  endpoint:
    path: /payments/v2/credit-transfers/{id}:reject
    method: POST
- name: credit_transfer_batch
  endpoint:
    path: /payments/v2beta/credit-transfer-batches
    method: POST
- name: credit_transfer_batches
  endpoint:
    path: /payments/v2beta/credit-transfer-batches
    method: GET
- name: credit_transfer_batch
  endpoint:
    path: /payments/v2beta/credit-transfer-batches
    method: POST
- name: credit_transfer_batch
  endpoint:
    path: /payments/v2beta/credit-transfer-batches/{id}
    method: GET
- name: credit_transfer_batches
  endpoint:
    path: /payments/v2beta/credit-transfer-batches
    method: GET
- name: credit_transfer_batch_results
  endpoint:
    path: /payments/v2beta/credit-transfer-batches/{id}/results
    method: GET
- name: credit_transfer_batch
  endpoint:
    path: /payments/v2beta/credit-transfer-batches/{id}
    method: GET
- name: approve_credit_transfer_batch
  endpoint:
    path: /payments/v2/credit-transfer-batches/{id}:approve
    method: POST
- name: credit_transfer_batch_results
  endpoint:
    path: /payments/v2beta/credit-transfer-batches/{id}/results
    method: GET
- name: reject_credit_transfer_batch
  endpoint:
    path: /payments/v2/credit-transfer-batches/{id}:reject
    method: POST
- name: approve_credit_transfer_batch
  endpoint:
    path: /payments/v2/credit-transfer-batches/{id}:approve
    method: POST
- name: direct_debit
  endpoint:
    path: /payments/v2/direct-debits
    method: POST
- name: reject_credit_transfer_batch
  endpoint:
    path: /payments/v2/credit-transfer-batches/{id}:reject
    method: POST
- name: direct_debits
  endpoint:
    path: /payments/v2/direct-debits
    method: GET
- name: direct_debit
  endpoint:
    path: /payments/v2/direct-debits
    method: POST
- name: direct_debit
  endpoint:
    path: /payments/v2/direct-debits/{id}
    method: GET
- name: direct_debits
  endpoint:
    path: /payments/v2/direct-debits
    method: GET
- name: direct_debit_events
  endpoint:
    path: /payments/v2/direct-debits/{id}/events
    method: GET
- name: direct_debit
  endpoint:
    path: /payments/v2/direct-debits/{id}
    method: GET
- name: approve_direct_debit
  endpoint:
    path: /payments/v2/direct-debits/{id}:approve
    method: POST
- name: direct_debit_events
  endpoint:
    path: /payments/v2/direct-debits/{id}/events
    method: GET
- name: reject_direct_debit
  endpoint:
    path: /payments/v2/direct-debits/{id}:reject
    method: POST
- name: external_account
  endpoint:
    path: /payments/v2/external-accounts/{id}
    method: GET
- name: approve_direct_debit
  endpoint:
    path: /payments/v2/direct-debits/{id}:approve
    method: POST
- name: update_external_account
  endpoint:
    path: /payments/v2/external-accounts/{id}
    method: PATCH
- name: reject_direct_debit
  endpoint:
    path: /payments/v2/direct-debits/{id}:reject
    method: POST
- name: delete_external_account
  endpoint:
    path: /payments/v2/external-accounts/{id}
    method: DELETE
- name: external_account
  endpoint:
    path: /payments/v2/external-accounts/{id}
    method: GET
- name: external_accounts
  endpoint:
    path: /payments/v2/external-accounts
    method: POST
- name: external_account
  endpoint:
    path: /payments/v2/external-accounts/{id}
    method: PATCH
- name: external_accounts
  endpoint:
    path: /payments/v2/external-accounts
    method: GET
- name: external_account
  endpoint:
    path: /payments/v2/external-accounts/{id}
    method: DELETE
- name: counterparty
  endpoint:
    path: /payments/v2/counterparties
    method: POST
- name: external_account
  endpoint:
    path: /payments/v2/external-accounts
    method: POST
- name: counterparties
  endpoint:
    path: /payments/v2/counterparties
    method: GET
- name: external_accounts
  endpoint:
    path: /payments/v2/external-accounts
    method: GET
- name: counterparty
  endpoint:
    path: /payments/v2/counterparties/{id}
    method: GET
- name: counterparty
  endpoint:
    path: /payments/v2/counterparties
    method: POST
- name: counterparty
  endpoint:
    path: /payments/v2/counterparties/{id}
    method: PATCH
- name: counterparties
  endpoint:
    path: /payments/v2/counterparties
    method: GET
- name: delete_counterparty
  endpoint:
    path: /payments/v2/counterparties/{id}
    method: DELETE
- name: counterparty_events
  endpoint:
    path: /payments/v2/counterparties/{id}/events
    method: GET
- name: counterparty
  endpoint:
    path: /payments/v2/counterparties/{id}
    method: GET
- name: mandate
  endpoint:
    path: /payments/v2/mandates
    method: POST
- name: counterparty
  endpoint:
    path: /payments/v2/counterparties/{id}
    method: PATCH
- name: mandates
  endpoint:
    path: /payments/v2/mandates
    method: GET
- name: counterparty
  endpoint:
    path: /payments/v2/counterparties/{id}
    method: DELETE
- name: mandate
  endpoint:
    path: /payments/v2/mandates/{id}
    method: GET
- name: counterparty_events
  endpoint:
    path: /payments/v2/counterparties/{id}/events
    method: GET
    data_selector: events
- name: mandate_events
  endpoint:
    path: /payments/v2/mandates/{id}/events
    method: GET
- name: mandate
  endpoint:
    path: /payments/v2/mandates
    method: POST
- name: Cancel mandate
  endpoint:
    path: /payments/v2/mandates/{id}:cancel
    method: POST
- name: resource_event
  endpoint:
    path: /reference/post_resourceevent-1
    method: POST
- name: mandates
  endpoint:
    path: /payments/v2/mandates
    method: GET
- name: account
  endpoint:
    path: /financial-data/v2/accounts/{id}
    method: GET
- name: mandate
  endpoint:
    path: /payments/v2/mandates/{id}
    method: GET
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts/{id}
    method: PATCH
- name: mandate_events
  endpoint:
    path: /payments/v2/mandates/{id}/events
    method: GET
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts
    method: GET
- name: cancel_mandate
  endpoint:
    path: /payments/v2/mandates/{id}:cancel
    method: POST
- name: list_balances
  endpoint:
    path: /financial-data/v2/accounts/{id}/balances
    method: GET
- name: resource_event
  endpoint:
    path: /reference/post_resourceevent-1
    method: POST
- name: end_of_day_summaries
  endpoint:
    path: /financial-data/v2beta/accounts/{id}/end-of-day-summaries
    method: GET
    data_selector: summaries
- name: account
  endpoint:
    path: /financial-data/v2/accounts/{id}
    method: GET
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions
    method: GET
- name: transaction
  endpoint:
    path: /financial-data/v2/transactions/{id}
    method: GET
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts/{id}
    method: PATCH
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions/{id}
    method: PATCH
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts
    method: GET
- name: pending_transactions
  endpoint:
    path: /financial-data/v2/pending-transactions
    method: GET
- name: balances
  endpoint:
    path: /financial-data/v2/accounts/{id}/balances
    method: GET
- name: end_of_day_summaries
  endpoint:
    path: /financial-data/v2beta/accounts/{id}/end-of-day-summaries
    method: GET
- name: pending_transactions
  endpoint:
    path: /financial-data/v2/pending-transactions/{id}
    method: GET
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions
    method: GET
- name: pending_transaction_events
  endpoint:
    path: /financial-data/v2/pending-transactions/{id}/events
    method: GET
- name: entities
  endpoint:
    path: /financial-data/v2/entities
    method: POST
- name: transaction
  endpoint:
    path: /financial-data/v2/transactions/{id}
    method: GET
- name: entities
  endpoint:
    path: /financial-data/v2/entities
    method: GET
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions/{id}
    method: PATCH
- name: entity
  endpoint:
    path: /financial-data/v2/entities/{id}
    method: GET
- name: pending_transactions
  endpoint:
    path: /financial-data/v2/pending-transactions
    method: GET
- name: entity
  endpoint:
    path: /financial-data/v2/entities/{id}
    method: DELETE
- name: pending_transaction
  endpoint:
    path: /financial-data/v2/pending-transactions/{id}
    method: GET
- name: entity
  endpoint:
    path: /financial-data/v2/entities/{id}
    method: PATCH
- name: pending_transaction_events
  endpoint:
    path: /financial-data/v2/pending-transactions/{id}/events
    method: GET
- name: entities
  endpoint:
    path: /financial-data/v2/entities
    method: POST
- name: audit_log_entries
  endpoint:
    path: /iam/v2beta/audit-log-entries
    method: GET
- name: entities
  endpoint:
    path: /financial-data/v2/entities
    method: GET
- name: entity
  endpoint:
    path: /financial-data/v2/entities/{id}
    method: GET
- name: delete_entity
  endpoint:
    path: /financial-data/v2/entities/{id}
    method: DELETE
- name: entities
  endpoint:
    path: /financial-data/v2/entities/{id}
    method: PATCH
- name: end_of_day_summaries
  endpoint:
    path: /financial-data/v2beta/accounts/{id}/end-of-day-summaries
    method: GET
    data_selector: summaries
    params: {}
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: audit_log_entries
  endpoint:
    path: /iam/v2beta/audit-log-entries
    method: GET
- name: credit_transfer
  endpoint:
    path: /payments/credit-transfers
    method: GET
- name: credit_transfer_batch
  endpoint:
    path: /credit-transfer-batches
    method: GET
    data_selector: batches
- name: accounts
  endpoint:
    path: /docs/accounts-1
    method: GET
- name: transactions
  endpoint:
    path: /docs/transactions-1
    method: GET
- name: balances
  endpoint:
    path: /docs/balances
    method: GET
- name: reports
  endpoint:
    path: /docs/reports
    method: GET
- name: cash_flows
  endpoint:
    path: /docs/cash-flow
    method: GET
- name: direct_debits
  endpoint:
    path: /direct-debits
    method: GET
    data_selector: direct_debits
    params: {}
- name: end_of_day_summaries
  endpoint:
    path: /financial-data/v2beta/accounts/{id}/end-of-day-summaries
    method: GET
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions
    method: GET
- name: counterparty
  endpoint:
    path: /counterparties
    method: GET
    data_selector: records
- name: sweeping_rules
  endpoint:
    path: /api/sweeping_rules
    method: GET
    data_selector: rules
    params: {}
- name: payment_templates
  endpoint:
    path: /api/v2/payment_templates
    method: GET
    data_selector: templates
    params: {}
- name: credit_transfer
  endpoint:
    path: /payments/credit-transfers
    method: GET
    data_selector: creditTransfers
    params: {}
- name: payments
  endpoint:
    path: /pending-approvals
    method: GET
    data_selector: payments
    params: {}
- name: credit_transfer_batches
  endpoint:
    path: /api/v2/credit_transfer_batches
    method: POST
    data_selector: batches
    params: {}
- name: direct_debits
  endpoint:
    path: /payments/direct-debits
    method: GET
    data_selector: direct_debits
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
    params: {}
- name: counterparty
  endpoint:
    path: /api/counterparties
    method: GET
    data_selector: counterparties
- name: sweeping_rules
  endpoint:
    path: /payments/sweeping_rules
    method: GET
    data_selector: rules
- name: templates
  endpoint:
    path: /payments/templates
    method: GET
    data_selector: templates
    params: {}
- name: pending_approvals
  endpoint:
    path: /approvals/pending
    method: GET
    data_selector: payments
    params: {}
- name: approval_chains
  endpoint:
    path: /approvals/chains
    method: GET
    data_selector: chains
    params: {}
- name: manage_dashboard
  endpoint:
    path: /manage/dashboard
    method: GET
    data_selector: permissions
    params: {}
- name: erp_access
  endpoint:
    path: /erp/access
    method: GET
    data_selector: permissions
    params: {}
- name: approval_chain
  endpoint:
    path: /approvals/approval-chains
    method: GET
    data_selector: chains
    params: {}
- name: user_management
  endpoint:
    path: /user_management/users
    method: GET
- name: entities
  endpoint:
    path: /api/v2/entities
    method: GET
- name: accounts
  endpoint:
    path: /api/v2/accounts
    method: GET
- name: manage_dashboard
  endpoint:
    path: /manage_dashboard
    method: GET
    data_selector: permissions
    params: {}
- name: erp_access
  endpoint:
    path: /erp_access
    method: GET
    data_selector: permissions
    params: {}
- name: sso_login
  endpoint:
    path: /saml2/idpresponse
    method: POST
- name: organization_security
  endpoint:
    path: /settings/organization/security
    method: GET
- name: user_management
  endpoint:
    path: /settings/user_management
    method: GET
- name: approval_chains
  endpoint:
    path: /settings/approval_chains
    method: GET
- name: counterparties
  endpoint:
    path: /settings/counterparties
    method: GET
- name: payment_statuses
  endpoint:
    path: /api/v2/payment-statuses
    method: GET
    data_selector: statuses
- name: direct_debit_mandate_statuses
  endpoint:
    path: /api/v2/direct-debit-mandate-statuses
    method: GET
    data_selector: statuses
- name: payment_schemes
  endpoint:
    path: /payment-schemes
    method: GET
    data_selector: payment_schemes
    params: {}
- name: account_identifiers
  endpoint:
    path: /account-identifiers
    method: GET
    data_selector: account_identifiers
    params: {}
- name: entities
  endpoint:
    path: /settings/accounts_entities
    method: GET
    data_selector: entities
    params: {}
- name: accounts
  endpoint:
    path: /settings/accounts_entities/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: account_groups
  endpoint:
    path: /account_groups
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /categorization/task
    method: GET
- name: rejected_payments_comment_codes
  endpoint:
    path: /autogiro/rejected-payments/comment-codes
    method: GET
    data_selector: codes
- name: cancellation_amendment_payments_comment_codes
  endpoint:
    path: /autogiro/cancellation-amendment/comment-codes
    method: GET
    data_selector: codes
- name: mandate_advice_information_codes
  endpoint:
    path: /autogiro/mandate-advice/information-codes
    method: GET
    data_selector: codes
- name: mandate_advice_comment_codes
  endpoint:
    path: /autogiro/mandate-advice/comment-codes
    method: GET
    data_selector: codes
- name: credit_transfer
  endpoint:
    path: /regulatory-reporting
    method: GET
    data_selector: data
    params: {}
- name: india_regulatory_reporting
  endpoint:
    path: /india/reporting
    method: GET
    data_selector: records
- name: indonesia_regulatory_reporting
  endpoint:
    path: /indonesia/reporting
    method: GET
    data_selector: records
- name: payment_schemes
  endpoint:
    path: /payment/schemes
    method: GET
    data_selector: payment_schemes
    params: {}
- name: account_identifiers
  endpoint:
    path: /account/routing_identifiers
    method: GET
    data_selector: account_identifiers
    params: {}
- name: Israel
  endpoint:
    path: /regulatory/reporting/israel
    method: GET
    data_selector: records
- name: Norway
  endpoint:
    path: /regulatory/reporting/norway
    method: GET
    data_selector: records
- name: Sweden
  endpoint:
    path: /regulatory/reporting/sweden
    method: GET
    data_selector: records
- name: Taiwan
  endpoint:
    path: /regulatory-reporting/taiwan
    method: GET
    data_selector: records
- name: Thailand
  endpoint:
    path: /regulatory-reporting/thailand
    method: GET
    data_selector: records
- name: turkey_regulatory_reporting
  endpoint:
    path: /turkey/regulatory-reporting
    method: GET
    data_selector: records
    params: {}
- name: uae_regulatory_reporting
  endpoint:
    path: /uae/regulatory-reporting
    method: GET
    data_selector: records
    params: {}
- name: counterparties
  endpoint:
    path: /payments/v2/counterparties
    method: POST
    data_selector: accounts
    params: {}
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: credit_transfers
  endpoint:
    path: /payments/v2/credit-transfers
    method: POST
    data_selector: creditTransfer
    params: {}
- name: transactions
  endpoint:
    path: /v1/testbank/transactions
    method: POST
    data_selector: transactions
- name: webhook
  endpoint:
    path: /v1/reference/webhooks
    method: POST
- name: India_Creditor_Transactions
  endpoint:
    path: /regulatory-reporting/india/creditor-transactions
    method: GET
    data_selector: records
    params: {}
- name: Indonesia_Creditor_Transactions
  endpoint:
    path: /regulatory-reporting/indonesia/creditor-transactions
    method: GET
    data_selector: records
    params: {}
- name: payment_statuses
  endpoint:
    path: /docs/payment-statuses
    method: GET
    data_selector: statuses
    params: {}
- name: mandate_statuses
  endpoint:
    path: /docs/direct-debit-mandate-statuses
    method: GET
    data_selector: mandate_statuses
    params: {}
- name: payment_schemes
  endpoint:
    path: /docs/payment-schemes-and-timings
    method: GET
    data_selector: payment_schemes
    params: {}
- name: Israel
  endpoint:
    path: /regulatory/reporting/israel
    method: GET
    data_selector: data
    params: {}
- name: Norway
  endpoint:
    path: /regulatory/reporting/norway
    method: GET
    data_selector: data
    params: {}
- name: Sweden
  endpoint:
    path: /regulatory/reporting/sweden
    method: GET
    data_selector: data
    params: {}
- name: Taiwan
  endpoint:
    path: /regulatory-reporting/taiwan
    method: GET
    data_selector: records
    params: {}
- name: Thailand
  endpoint:
    path: /regulatory-reporting/thailand
    method: GET
    data_selector: records
    params: {}
- name: credit_transfer_batches
  endpoint:
    path: /payments/v2beta/credit-transfer-batches
    method: POST
    data_selector: records
- name: Turkey
  endpoint:
    path: /regulatory/reporting/turkey
    method: GET
    data_selector: records
- name: United Arab Emirates
  endpoint:
    path: /regulatory/reporting/united-arab-emirates
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts
    method: GET
- name: credit-transfers
  endpoint:
    path: /payments/v2/credit-transfers
    method: GET
- name: direct-debits
  endpoint:
    path: /payments/v2/direct-debits
    method: GET
- name: mandates
  endpoint:
    path: /payments/v2/mandates
    method: GET
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions
    method: GET
- name: connections
  endpoint:
    path: /connectivity/v2beta/connections
    method: GET
- name: counterparties
  endpoint:
    path: /payments/v2/counterparties
    method: POST
    data_selector: external_account
    params: {}
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: credit_transfers
  endpoint:
    path: /payments/v2/credit-transfers
    method: POST
    data_selector: credit_transfer
    params: {}
- name: transactions
  endpoint:
    path: /v1/testbank/transactions
    method: POST
    data_selector: ''
    params: {}
- name: credit_transfer_batches
  endpoint:
    path: /payments/v2beta/credit-transfer-batches
    method: POST
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /financial-data/v2/accounts
    method: GET
- name: counterparties
  endpoint:
    path: /payments/v2/counterparties
    method: GET
- name: credit-transfers
  endpoint:
    path: /payments/v2/credit-transfers
    method: GET
- name: direct-debits
  endpoint:
    path: /payments/v2/direct-debits
    method: GET
- name: external-accounts
  endpoint:
    path: /payments/v2/external-accounts
    method: GET
- name: mandates
  endpoint:
    path: /payments/v2/mandates
    method: GET
- name: transactions
  endpoint:
    path: /financial-data/v2/transactions
    method: GET
- name: connections
  endpoint:
    path: /connectivity/v2beta/connections
    method: GET
notes:
- The API supports batching for approvals and rejections.
- The new structure significantly improves performance, data consistency, and development
  velocity.
- Sort order is always descending on date.
- The credit transfer execution date can only be changed if the credit transfer has
  not been scheduled for submission yet.
- Rejection of a batch is only applicable when the batch treatment is BATCH.
- Credentials are required for making requests.
- Dashboards help you visualize your financial data in one place.
- Widgets are drag-and-drop components that show metrics, tables, or charts based
  on a view.
- It is only possible to delete an entity if it has no children or has no associated
  accounts.
- This feature is currently in BETA and is disabled by default. To enable it for your
  organization, please contact support@atlar.com.
- Penny tests are recommended to ensure configuration is correct.
- A credit transfer batch is a group of outgoing payments submitted together.
- 'Batch processing offers several advantages: efficiency, consistency, and unified
  tracking.'
- Direct debits allow you to pull funds from a payer’s account into your own.
- There is no limit to how many rules you can configure, and you can edit or delete
  them at any time.
- Credit transfer batches allow sending multiple payments in a single request.
- Access is granted through roles, not directly to individual users.
- Every user must be assigned at least one role.
- Permissions in Atlar define what actions a user or API key is allowed to perform
  in your workspace.
- Filtering by metadata makes it easy to separate ERP-generated transactions from
  those requiring manual review.
- Set up approval chains that match your internal risk policies.
- Updated 20 days ago
- Column settings are user-specific and will not apply across the organization.
- The Audit Trail logs every action in Atlar—whether performed by a user or by the
  system itself.
- Atlar provides powerful configuration options to help you get the most out of the
  platform.
- Spreadsheet-style analytics for financial data.
- Customizable charts – Visualize your data using table, bar, pie, or line charts.
- Secure and flexible access management with role-based access model.
- Only assign higher-level roles to users who genuinely need them.
- 'Follow the principle of least privilege: users should have the minimum access required
  for their responsibilities.'
- To update theming, your role must include the Themes permission.
- All theming settings apply across the entire organization to ensure consistency.
- Atlar automatically generates 18 color variations by adjusting each color’s intensity
  by 50% and 75% to improve contrast and usability.
- Four-Eyes Approval is required for sensitive changes.
- Only existing Owners can transfer ownership.
- Ensure the recipient is fully aware of the responsibilities and risks associated
  with this role.
- You cannot delete an account group if any accounts are still linked to it.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- New rules apply only to future transactions.
- Rules can use multiple fields (e.g. amount, merchant, or account) for more advanced
  logic.
- Enables the role to manage dashboards (create, update, delete).
- Enables the role to manage expected transactions (read, create, update, delete).
- Enables the role to manage ERP system interactions with financial data.
- Enable Multi-Factor Authentication (MFA) and set up at least one backup MFA method.
- Enable Multi-Factor Authentication (MFA) and configure at least one backup MFA option.
- Follow the Principle of Least Privilege — grant only the exact permissions needed.
- Once SSO is enabled, users cannot log in with passwords.
- Users must still be invited to the organization with a designated role.
- MFA protects your account by requiring a second factor of authentication, reducing
  the risk of phishing or leaked passwords.
- Configure more than one MFA option as a backup in case one is lost or destroyed.
- Use a hardware security key for added portability and convenience.
- Regularly review and update your MFA options.
- Keep security keys personal, just like passwords—never share them.
- Four-Eyes applies to organizational changes, not to the actual approval of payments
  themselves.
- Changing the Four-Eyes settings will require Four-Eyes approval.
- Change requests are automatically generated whenever an operation requires Four-Eyes
  Approval.
- Use IBAN + BIC for markets that support IBAN
- Provide account number, routing number, and BIC for markets that do not support
  IBAN
- Some banks require both the payor and payee addresses to be populated
- New rules apply only to future transactions. Use a Categorization task to reapply
  rules to past transactions.
- Enable Multi-Factor Authentication (MFA) for added security.
- Four-eyes approval is optional during implementation.
- Protect your production environment with layered security
- Follow the Principle of Least Privilege—grant only the exact permissions needed
- Only email addresses matching your allowed domains can log in.
- If the counterparty market supports IBAN, provide both IBAN and BIC/SWIFT.
- If the counterparty market does not support IBAN, provide the account number, routing
  number, and BIC/SWIFT.
- Some banks require both the payor and payee addresses to be populated.
- Use negative amount values for expenses.
- Ensure that the mandate details have been sent to the bank using Atlar’s dashboard
  or API.
- Contact the debtor to arrange an alternative payment method.
- Verify that the mandate ID is correct and resubmit the collection to Bankgirot.
- The payment date cannot be later than the current year plus two calendar years.
- Contact the debtor to top up the account or agree on an alternative payment method.
- Initiate a new collection with a valid amount. The upper limit is defined in your
  Autogiro configuration with the bank.
- Webhook requests include HTTP headers for authenticity and integrity
- Credit transfer batches can be created by uploading a CSV file or by sending a JSON
  payload.
- When a product, feature, or API endpoint is deprecated, it enters a grace period
  during which it remains functional but should no longer be used.
- After this period, the feature is decommissioned, meaning it is removed and no longer
  supported.
- Counterparties must be created before initiating payments.
- Payments may require approval based on configured Approval Chains.
- Negative amount values are used for expenses.
- Webhook payloads contain the new state of the resource after the event occurred.
- Always check entity.version and ignore payloads with a lower version than the one
  you have stored.
- When migrating to v2 it is strongly recommended to start using the OAuth 2.0 access
  token flow and authenticate using a Bearer token.
errors:
- '400: Bad Request – The request is invalid.'
- '401: Unauthorized – The authentication is wrong or missing.'
- '403: Forbidden – The API key does not have permission to view/modify the resource.'
- '404: Not Found – The identified resource could not be found.'
- '405: Method Not Allowed – The accessed method is not valid.'
- '410: Gone – The identified resource no longer exists.'
- '425: Too Early – Same idempotency key used for multiple requests before the first
  is complete. Retry.'
- '429: Too Many Requests – The request rate limit has been exceeded.'
- '500: Internal Server Error – An unexpected server-side issue occurred.'
- '503: Service Unavailable – Temporarily offline for maintenance.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '405: Method Not Allowed'
- '410: Gone'
- '425: Too Early'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '503: Service Unavailable'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Error: app_not_enabled_for_user – The user has not been granted access to the SAML
  app.'
- 'AC03: Invalid Creditor Account Number: Update the counterparty to reflect the correct
  IBAN.'
- 'BE04: Missing Creditor Address: Originator PSP should request the address of the
  Beneficiary.'
- 'BE05: Unrecognised Initiating Party: Correct the Creditor Identifier.'
- 'CNOR: Creditor Bank Is Not Registered: Contact the Creditor PSP.'
- 'MD01: No Mandate: Review the details of the SDD collection and contact the Debtor
  if this is a refund.'
- 'MD02: Missing Mandatory Mandate Information: Ensure all required mandate details
  are collected and presented during customer onboarding.'
- 'RC04: Invalid or Missing BIC: Add the correct BIC for the counterparty or verify
  the existing BIC.'
- 'RR01: Missing Debtor Account or Identification: Contact the Debtor for the correct
  BIC of a non-EEA SDD collection.'
- 'RR02: Missing Debtor Name or Address: Originator Bank should complete the Originator’s
  name and/or address details.'
- 'RR03: Missing Creditor Name or Address: Complete the SDD collection with the correct
  Creditor name and contact the Creditor PSP if needed.'
- 'RR04: Regulatory Reason: Contact the Creditor PSP.'
- 'DS02: Order Cancelled: –'
- 'DS19: Electronic Signature Permissions Insufficient: Review the EBICS VEU/EDS setup
  and ensure the expected EBICS subscriber has the required signing rights.'
- 'DS24: Waiting Time Expired Due to Incomplete Order: Review the EBICS VEU/EDS setup
  and ensure the expected EBICS subscriber has the required signing rights.'
- 'AC01: Incorrect Account Number: Contact the Counterparty to obtain the correct
  IBAN.'
- 'AC04: Closed Account Number: Contact the Counterparty for new account details.'
- 'AC06: Blocked Account: Contact the Counterparty to arrange an alternative account
  or payment solution.'
- 'AC13: Invalid Debtor Account Type: Contact the Debtor to clarify and agree on another
  payment method.'
- 'AG01: Transaction Forbidden: Contact the Counterparty to agree on another payment
  account or instrument.'
- 'AM04: Insufficient Funds: Contact the Counterparty. Ensure the Debtor provides
  sufficient funds.'
- 'DNOR: Debtor Bank Not Registered: Ask the Creditor PSP to check the reachability
  of the Debtor PSP.'
- 'MD01: No Mandate: Verify the SDD collection to ensure the UMR is unique and matches
  the signed mandate.'
- 'MD06: Refund Request by End Customer: Contact the Debtor.'
- 'MD07: End Customer Deceased: Close the agreement with the deceased Counterparty.'
- 'MS02: Not Specified – Customer Generated: Contact the Debtor.'
- 'MS03: Not Specified – Agent Generated: Contact the Debtor.'
- 'RC01: Bank Identifier Incorrect / Invalid BIC: Contact the Counterparty to provide
  the correct BIC for a non-EEA SDD collection.'
- 'SL01: Specific Service Offered by Debtor Agent: Contact the Debtor.'
- '403 Forbidden: Attempt to access or modify a resource without the correct permission
  assigned to the role'
- 'RR03: Missing Creditor Name or Address: Complete the SDD collection with the correct
  Creditor name.'
- 'RC01: Bank Identifier Incorrect / Invalid BIC: Contact the Counterparty to provide
  the correct BIC.'
- 'Incorrect payer number: Verify that the mandate ID is correct.'
- 'Cancelled: Contact the debtor to arrange an alternative payment method or configure
  a new Autogiro mandate.'
- 'Mandate not found in Bankgirot’s mandate directory: Make sure the mandate has been
  sent to Bankgirot and activated.'
- 'Invalid Signature: Verify that the webhook was sent by Atlar'
- 'Request Timeout: Ensure the server is available to receive requests'
- '400 Bad Request: Validate the required fields are present.'
- '401 Unauthorized: Check your authentication credentials.'
- '422 Unprocessable Entity: Check the data format and required fields.'
- If your server responds with anything other than a 2xx HTTP status, Atlar will retry
  the request.
auth_info:
  mentioned_objects:
  - OAuth
client:
  base_url: https://api.atlar.com
  auth:
    type: oauth2
    flow: client_credentials
    token_url: https://api.atlar.com/iam/v2beta/oauth2/token
    client_id: <ACCESS_KEY>
    client_secret: <SECRET>
    location: header
    header_name: Authorization
  paginator:
    type: token
    page_size_param: limit
    default_page_size: 100
source_metadata: null
