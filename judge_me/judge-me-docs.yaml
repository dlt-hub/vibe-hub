resources:
- name: reviews
  endpoint:
    path: /private_replies
    method: POST
    data_selector: private_reply
- name: private_replies
  endpoint:
    path: /private_replies
    method: POST
    data_selector: private_reply
    params: {}
- name: reviewers
  endpoint:
    path: /reviewers
    method: GET
    data_selector: reviewers
    params: {}
- name: shops
  endpoint:
    path: /shops
    method: GET
    data_selector: shop
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: product_reviews
  endpoint:
    path: /product-reviews
    method: GET
    data_selector: reviews
- name: store_reviews
  endpoint:
    path: /store-reviews
    method: GET
    data_selector: reviews
- name: product_reviews
  endpoint:
    path: /reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /store_reviews
    method: GET
    data_selector: store_reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /store-reviews
    method: GET
- name: product_reviews
  endpoint:
    path: /product-reviews
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: features
  endpoint:
    path: /app/features
    method: GET
    data_selector: features
    params: {}
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
    data_selector: widgets
    params: {}
- name: integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: integrations
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: records
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: records
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: records
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: records
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: product_reviews
  endpoint:
    path: /product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: reviews
  endpoint:
    path: /services/data/vXX.X/sobjects/Review
    method: GET
    data_selector: records
- name: product
  endpoint:
    path: /services/data/vXX.X/sobjects/Product
    method: GET
    data_selector: records
- name: review
  endpoint:
    path: /services/data/vXX.X/sobjects/Review
    method: GET
    data_selector: records
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: features
  endpoint:
    path: /app/features
    method: GET
    data_selector: features
    params: {}
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
    data_selector: widgets
    params: {}
- name: integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: integrations
    params: {}
- name: example_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/ExampleResource
    method: GET
    data_selector: records
    params: {}
- name: reviews
  endpoint:
    path: /api/v1/reviews
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: reviews
  endpoint:
    path: /services/data/vXX.X/sobjects/Review
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: products
  endpoint:
    path: /services/data/vXX.X/sobjects/Product
    method: GET
    data_selector: records
    params: {}
- name: reviews
  endpoint:
    path: /api/v1/reviews
    method: GET
    data_selector: reviews
- name: questions
  endpoint:
    path: /api/v1/questions
    method: GET
    data_selector: questions
- name: reviews
  endpoint:
    path: /api/v1/reviews
    method: GET
    data_selector: reviews
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: products
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: review_requests
  endpoint:
    path: /api/review_requests
    method: POST
    data_selector: data
    params: {}
- name: reviews
  endpoint:
    path: /api/reviews
    method: GET
    data_selector: data
    params: {}
- name: product_reviews
  endpoint:
    path: /v1/reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /v1/store_reviews
    method: GET
    data_selector: store_reviews
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: product_reviews
  endpoint:
    path: /product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: records
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: records
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: records
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: records
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: records
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: records
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: product_reviews
  endpoint:
    path: /app/product-reviews
    method: GET
- name: store_reviews
  endpoint:
    path: /app/store-reviews
    method: GET
- name: features
  endpoint:
    path: /app/features
    method: GET
- name: widgets
  endpoint:
    path: /app/widgets
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: reviews
  endpoint:
    path: /private_replies
    method: POST
    data_selector: private_reply
- name: settings
  endpoint:
    path: /private_replies
    method: POST
    data_selector: private_reply
- name: widgets
  endpoint:
    path: /private_replies
    method: POST
    data_selector: private_reply
- name: private_replies
  endpoint:
    path: /private_replies
    method: POST
    data_selector: response
    params: {}
- name: product_reviews
  endpoint:
    path: /reviews/products
    method: GET
    data_selector: reviews
    params: {}
- name: store_reviews
  endpoint:
    path: /reviews/stores
    method: GET
    data_selector: reviews
    params: {}
- name: reviews
  endpoint:
    path: /reviews
    method: GET
    data_selector: records
- name: index
  endpoint:
    path: /settings
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: products
    params: {}
- name: private_replies
  endpoint:
    path: /private_replies
    method: POST
    data_selector: response
    params: {}
- name: reviewers
  endpoint:
    path: /reviewers/{id}
    method: GET
    data_selector: response
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: response
    params: {}
- name: reviews_carousel
  endpoint:
    path: /widgets/reviews_carousel
    method: GET
    data_selector: reviews
    params: {}
- name: ugc_media_grid
  endpoint:
    path: /widgets/ugc_media_grid
    method: GET
    data_selector: media
    params: {}
- name: UGC Media Grid
  endpoint:
    path: /path/to/ugc/media/grid
    method: GET
    data_selector: elements
    params: {}
- name: ugc_media_grid
  endpoint:
    path: /ugc/media/grid
    method: GET
    data_selector: media
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: products
- name: UGC Media Grid
  endpoint:
    path: /widgets/media_grid
    method: GET
    data_selector: items
    params: {}
- name: Reviews Carousel
  endpoint:
    path: /widgets/reviews_carousel
    method: GET
    data_selector: items
    params: {}
notes:
- Uses OAuth2 for authentication
- Uses OAuth2 with refresh token — requires setup of connected app in Judge.me
- For the best security and user experience, strongly recommend using OAuth to authenticate
  your integration.
- Judge.me employs OAuth to provide App Developers access to the Judge.me API.
- Data may be transferred to or maintained on computers or servers located in the
  United States.
- Built for Shopify
- Judge.me has every feature you need or could want in a review app such as UGC, Google
  Rich Snippets, email templates, at a fraction of cost.
- Collect reviews to boost trust
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Pricing includes a free plan and a $15/month plan with additional features.
- 'Pricing isn''t typically ''SaaS-y'': $15 per month is the most you can ever pay.'
- Test-drive all Judge.me features at no cost.
- Merchants can easily add Judge.me widgets by simply dragging and dropping them onto
  the 'Product Details element' in PageFly.
- Optimize your store’s visibility with rich snippets
- Integration between GemPages and Judge.me provides a straightforward way to add
  customer reviews.
- Easy to use, no tech expertise required.
- Highlight your store's trust
- Integration with Klaviyo for sending review requests and reminders via email notifications.
- We ensure full compliance with GDPR by securely handling data and providing you
  with the tools and guidance needed to meet your compliance requirements.
- We align with CCPA standards to protect personal data and empower you with the resources
  to meet regulatory requirements.
- Supports integration with 100+ apps
- Integrates with Shopify
- Supports various features for review management
- API documentation is available at https://judge.me/api/docs
- Join 480,000+ stores using Judge.me to build trust and improve sales
- We ensure full compliance with GDPR by securely handling data
- We align with CCPA standards to protect personal data
- Requires setup of connected app in Judge.me
- Some responses may include deprecated fields not supported in the current version.
- Judge.me is built for Shopify.
- Some objects may return nulls in deeply nested fields
- Some objects like Product may return nulls in deeply nested fields
- Some endpoints require an API token.
- Some endpoints may have rate limits.
- Some objects like Contact may return nulls in deeply nested fields
- Uses API key for authentication.
- Uses OAuth2 with refresh token for authentication.
- Forever Free plan available
- Merchants leaving Yotpo often complain about slow, unresponsive support.
- Some features may depend on specific API configurations.
- Best-in-class customer support
- Integration is effortless. Connect Judge.me and Klaviyo in just a few clicks with
  OAuth.
- Get unlimited review requests for free from day one.
- 24/7 support available
- Transferring reviews from Okendo to Judge.me is simple — export from Okendo and
  import into Judge.me.
- API supports OAuth2 authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in judge.me
- No authenticity restrictions on the free plan
- API for devs available
- Official partner with Shopify
- For the best security and user experience, we strongly recommend using OAuth to
  authenticate your integration and only request the permissions you need.
- The ONLY website that we operate is judge.me and we do not operate any other websites.
- Judge.me prioritises transparency and indicates the source of reviews with a review
  source badge.
- Merchants may disseminate reviews outside of the Service including on their own
  website, on Google Shopping, on their Facebook Business page and via other apps
  and plug-ins with enabled integration for sharing reviews.
- Uses OAuth2 to authenticate — requires setup of connected app in Judge.me
- Uses OAuth2 for authentication.
- Responses may include unpublished reviews or review content that is not sanitized.
- Request access only to the essential data to ensure proper verification and official
  promotion of your integration.
- Default for send_private_email is true
- Available on the Free plan
- Requires setup of connected app in judge.me
- On older iPhone models running iOS 16 or below, the stylings for the Testimonial
  Carousel may not be applied correctly.
- The UGC Media Grid displays a gallery of photos and videos where your store is tagged
  on Instagram.
- By default, anyone can post a review on your product page.
- To prevent this, you can limit who can leave a review and allow only actual buyers
  to review your products.
- Displays a gallery of photos and videos tagged on Instagram.
- Webhook uses an HTTPS URL with a valid SSL certificate for secure data transfer.
- Header name can be automatically changed to HTTP_X_JUDGEME_HMAC_SHA256 or X-Judgeme-Hmac-SHA256.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your OAuth token or scopes'
- '429 Too Many Requests: Throttle your requests'
- '500 Internal Server Error: Retry the request after some time'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check for required parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: Check the endpoint URL.'
- '401 Unauthorized: Recheck OAuth tokens.'
- '404 Not Found: Ensure endpoint is correct.'
- '401 Unauthorized: Recheck API key or token expiration'
- '422: error message'
- '422: Private reply was created unsuccessfully'
- You can't access this resource.
auth_info:
  mentioned_objects:
  - PrivateAPIKey
  - ShopDomain
  - OAuthAPIKey
  - OauthToken
  - AuthProvider
  - NamedCredential
  - PublicAPIKey
  - client_id
  - client_secret
client:
  base_url: https://judge.me/api
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://judge.me/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
