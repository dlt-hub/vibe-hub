resources:
- name: liquidity_positions
  endpoint:
    path: /v1/liquidity_positions
    method: GET
    data_selector: positions
    params: {}
- name: trades
  endpoint:
    path: /v1/trades
    method: GET
    data_selector: trades
    params: {}
- name: liquidity_providers
  endpoint:
    path: /v1/liquidity_providers
    method: GET
    data_selector: data
    params: {}
- name: token_info
  endpoint:
    path: /v1/tokens
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: liquidity
  endpoint:
    path: /api/v1/liquidity
    method: GET
    data_selector: records
- name: trades
  endpoint:
    path: /api/v1/trades
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: token_treasury
  endpoint:
    path: /services/data/vXX.X/sobjects/TokenTreasury
    method: GET
    data_selector: records
- name: climate_fund
  endpoint:
    path: /services/data/vXX.X/sobjects/ClimateFund
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orca_token_details
  endpoint:
    path: /token/details
    method: GET
    data_selector: tokenDetails
    params: {}
- name: orca_treasury
  endpoint:
    path: /orca/treasury
    method: GET
    data_selector: treasuryData
    params: {}
- name: orca_climate_fund
  endpoint:
    path: /orca/climate_fund
    method: GET
    data_selector: climateFundData
    params: {}
- name: orca_token_details
  endpoint:
    path: /token-details
    method: GET
    data_selector: token_details
    params: {}
- name: orca_treasury
  endpoint:
    path: /orca-treasury
    method: GET
    data_selector: treasury_details
    params: {}
- name: climate_fund
  endpoint:
    path: /climate-fund
    method: GET
    data_selector: climate_fund_details
    params: {}
- name: xORCA
  endpoint:
    path: /staking/xORCA
    method: GET
- name: daily_rewards
  endpoint:
    path: /wavebreak/daily_rewards
    method: GET
    data_selector: rewards
    params: {}
- name: points
  endpoint:
    path: /wavebreak/points
    method: GET
    data_selector: points
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: xORCA
  endpoint:
    path: /xorca
    method: GET
    data_selector: xORCA_data
- name: staking_deposit
  endpoint:
    path: /staking/deposit
    method: POST
    data_selector: receipt
- name: redemption
  endpoint:
    path: /redemption
    method: POST
    data_selector: claim_ticket
- name: Daily Rewards
  endpoint:
    path: /daily-rewards
    method: GET
- name: Rewards Points
  endpoint:
    path: /rewards-points
    method: GET
- name: trading_fees
  endpoint:
    path: /trading-fees
    method: GET
    data_selector: fees
    params: {}
- name: pool_creation_fees
  endpoint:
    path: /reference/useful-information/pool-network-fees
    method: GET
    data_selector: fees
    params: {}
- name: TokenExtension
  endpoint:
    path: /token/extensions
    method: GET
    data_selector: extensions
- name: trading_fees
  endpoint:
    path: /trading/fees
    method: GET
    data_selector: fees
    params: {}
- name: trading_fees
  endpoint:
    path: /trading/fees
    method: GET
    data_selector: fees
    params: {}
- name: liquidity
  endpoint:
    path: /v1/liquidity
    method: GET
    data_selector: data
    params: {}
- name: swaps
  endpoint:
    path: /v1/swaps
    method: GET
    data_selector: data
    params: {}
- name: trading
  endpoint:
    path: /trading
    method: GET
- name: liquidity
  endpoint:
    path: /liquidity
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: adaptive_fee_pool
  endpoint:
    path: /adaptive_fee_pools
    method: GET
    data_selector: data
    params: {}
- name: TokenExtensions
  endpoint:
    path: /token_extensions
    method: GET
    data_selector: extensions
- name: liquidity_positions
  endpoint:
    path: /v1/liquidity_positions
    method: GET
    data_selector: positions
    params: {}
- name: trades
  endpoint:
    path: /v1/trades
    method: GET
    data_selector: trades
    params: {}
- name: liquidity_positions
  endpoint:
    path: /liquidity_positions
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: liquidity_pools
  endpoint:
    path: /v1/liquidity_pools
    method: GET
    data_selector: data
    params: {}
- name: trades
  endpoint:
    path: /v1/trades
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ticks
  endpoint:
    path: /understanding-ticks
    method: GET
    data_selector: ticks_data
- name: tick_spacing
  endpoint:
    path: /understanding-tick-spacing
    method: GET
    data_selector: tick_spacing_data
- name: fee_tiers
  endpoint:
    path: /understanding-fee-tiers
    method: GET
    data_selector: fee_tiers_data
- name: burned_pool_position_nfts
  endpoint:
    path: /nfts/burned
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Orca exists to change the way assets are traded, and we are going to effect that
  change through catalyzing a paradigm shift in how market participants provide liquidity.
- Requires setup of OAuth2 for API access.
- Data may vary based on user permissions.
- If you do not have an existing channel of communication with Orca, please open a
  ticket by using the Support function in the wallet menu.
- Requires setup of connected app in Orca
- May have rate limits on API calls
- Orca's concentrated liquidity (CLMM) pools offer liquidity providers (LPs) advanced
  features that surpass traditional Constant Product Market Makers (CPMMs).
- Thorough research is essential before engaging in active liquidity provision to
  understand the mechanics, risks, and strategies involved.
- If you are unsure about any part of this process, please reach out to Orca for support.
- Orca is designed to provide a smooth and reliable trading experience.
- Some objects like Contact may return nulls in deeply nested fields
- If you need any support or have any feedback or suggestions, feel free to open a
  support ticket from the Orca UI.
- Orca has never been shy when it comes to asserting our aim to be the apex predator
  of AMMs, Eclipse is an Ethereum L2 but uses Solana’s Virtual Machine for execution.
- By launching on Eclipse Orca has a unique opportunity to bring Orca to Ethereum
  users, while maintaining Orca’s mission to be the dominant liquidity layer for Solana
  users.
- As a trader or LP you can gain exposure to whole new markets, while using the Orca
  UI that you are already familiar with.
- Before you can use Orca on Eclipse you will need to install a compatible wallet
  and bridge some ETH to Eclipse.
- If you do not have an existing channel of communication with Orca, please open a
  ticket by accessing the support channel on Discord.
- Eclipse uses ETH for gas, you will need to bridge some ETH from Ethereum Mainnet
  in order to transact on Eclipse.
- Ensure to handle rate limits appropriately
- The Orca Treasury includes the Community ORCA Treasury and the accumulating Orca
  Fee Treasury.
- Build on us, integrate with us, grow together.
- The total supply of ORCA is 75 million.
- Undistributed fees are collected fees (in various forms) that are yet to be converted
  and distributed to the appropriate treasury.
- Orca is constantly improving the SDK to add new features and provide the best developer
  experience.
- Cooldown (unstake) is 7 days.
- Initial exchange rate is 1.0 ORCA/xORCA.
- Users earn Points for trading any token while it’s still bonding.
- Points are valid for a single reward period of 24 hours—after that, your balance
  resets to 0.
- Rewards that have been allocated to you will never expire and can be claimed at
  any time in the future.
- The consistency of the Orca brand is very important!
- ORCA becomes withdrawable once cooldown completes.
- Orca does not charge fees to create a pool, nor to create a position in an existing
  pool.
- On occasion a network fee may still be charged to open store a TickArray, necessary
  for your selected range, these are not refundable.
- 'Buybacks are accretive: they grow the value of each token.'
- 'Staking is neutral: it allows new users to enter without diluting existing holders.'
- Requires provisioning of API keys for access.
- Ensure to handle rate limiting and retries.
- Points reset every 24 hours, but Rewards do not expire.
- You can claim Rewards whenever you like.
- Fixed Fee Pools where the fee is constant
- Adaptive Fee Pools where the fee increases relative to volatility
- API requires authentication.
- If you cannot find a token, it is likely because it is not on CoinGecko. You can
  either list your token there, or follow the guide.
- This error is often the result of an inadequate SOL balance. It is recommended to
  maintain a balance of at least 0.05 SOL in your wallet.
- If adequate liquidity doesn't exist for a pair in the current tick, trading is not
  possible.
- Versioned Transactions are the latest transaction format which allows for additional
  functionality in the Solana runtime.
- Prices aren't set by Orca, or an oracle, each pool is its own market and the price
  is determined by trading activity.
- What countries and territories are blocked from accessing the Orca UI?
- Network fees are payable and if the Match deposit ratio function is used trading
  fees and network fees will also be payable on that transaction.
- Fees paid to mint the pool position NFT and open associated accounts are refunded
  when the position is paid.
- Orca reserves the right to modify the list of blocked countries at its sole discretion.
- Countries blocked from accessing the Orca UI include Afghanistan, Belarus, Bosnia
  and Herzegovina, Burma/Myanmar, Burundi, Central African Republic, Congo, Crimea,
  Donetsk, Guinea, Guinea-Bissau, Haiti, Iraq, Lebanon, Libya, Luhansk, Mali, Nicaragua,
  South Sudan, Somalia, Venezuela, Yemen, Zimbabwe.
- Token Extensions are advanced functionality designed specifically to meet the need
  of businesses with compliance obligations.
- Orca currently supports a set of Token Extension, with some requiring Token Badge
  permission.
- API may have rate limiting.
- Orca's Whirlpools concentrated liquidity product has been double audited.
- The older Community Listing feature is not included in Orca v2, which has a completely
  new pool creation flow.
- It can take up to 15 minutes for a new pool to appear in the UI.
- It is not possible to delete a pool, it is therefore critical to take care during
  the creation process.
- Orca will not send you an NFT that promises you free tokens or access to an airdrop.
- Orca has detected that you are connecting from a country or region blocked from
  trading on Orca.
- If you cannot find a token, it is likely because it is not on CoinGecko.
- Uses OAuth2 with refresh token — requires setup of connected app in Orca
- Adaptive Fee Pools are a new type of Whirlpool pool.
- Token Extensions require Token Badge permission.
- Impermanent loss can become permanent but only if you withdraw liquidity at a price
  point other than the one at which you deposited
- IL is often a relative loss—it compares your LP strategy to simply holding, rather
  than showing an absolute decrease in value
- Setting a higher slippage tolerance may be necessary at times to ensure your transaction
  settles.
- While setting a higher slippage tolerance can facilitate the execution of your trade,
  it also exposes you to an increased risk of a poor value trade.
- Prices are not controlled by Orca, nor are they adjusted to match a 'correct price'.
- Ticks, tick spacing, and fee tiers are the backbone of Orca's concentrated liquidity
  (CLMM) pools.
- Fee tiers range from 0.01% to 2%.
- Some objects may return nulls in deeply nested fields
- Requires OAuth2 setup.
- If you burn your Orca position NFT, the tokens and yields associated with that position
  are permanently lost.
- Orca runs on Solana and operates through smart contracts, which are permissionless
  and cannot be simply changed.
- Some fields may return nulls in responses
- Users are able to set how much slippage they are willing to accept and still see
  their transaction executed.
- Setting slippage tolerance defines the maximum percentile change you are willing
  to accept between the originally quoted outcome and the final amounts when the transaction
  settles.
- Ticks provide flexibility and efficiency for liquidity providers (LPs).
- Tick spacing allows for higher precision when depositing liquidity.
- Fee tiers are used to generate yield rewards for LPs.
- Uses OAuth2 with refresh token — requires setup of connected app in orca
- Once the NFT is destroyed, neither the user nor anyone else can recover the liquidity
  or yields associated with that position.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Check OAuth token'
- '429 Too Many Requests: Exceeded rate limit'
- '429 Too Many Requests: Reduce frequency of API calls'
- '401 Unauthorized: Check OAuth token validity'
- 'Cooldown period not completed: Wait for 7 days before withdrawing ORCA.'
- '400 Bad Request: Check parameters for correctness.'
- '401 Unauthorized: Verify token validity.'
- '429 Too Many Requests: Throttle your requests.'
- '401 Unauthorized: Check your API keys.'
- unable to close position because it's not empty
- Unavailable in your country or region
- Your wallet may have been blocked because it was flagged as potentially linked to
  illicit activity that violates Orca’s Terms of Use Policy.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
client:
  base_url: https://api.orca.so
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://auth.orca.so/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
