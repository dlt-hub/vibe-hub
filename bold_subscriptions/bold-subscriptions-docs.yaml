resources:
- name: subscriptions
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: reactivate_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: skip_subscription_order
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/skip_order
    method: POST
    data_selector: webhook_subscription
- name: create_subscription_adjustments
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/adjustments
    method: POST
    data_selector: adjustments
- name: list_subscription_adjustments
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/adjustments
    method: GET
    data_selector: adjustments
- name: delete_subscription_adjustments
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/adjustments
    method: DELETE
    data_selector: adjustments
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: customers
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/customers
    method: GET
    data_selector: customers
    params:
      status: all
      limit: 50
      page: 1
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: list_payment_methods
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/payment_methods
    method: GET
    data_selector: payment_methods
- name: list_alternative_payment_methods
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/alternative_payment_methods
    method: GET
    data_selector: alternative_payment_methods
- name: create_alternative_payment_method
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/alternative_payment_methods
    method: POST
    data_selector: alternative_payment_method
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_events
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/events
    method: GET
    data_selector: webhook_events
- name: webhook_subscriptions
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/subscriptions
    method: GET
    data_selector: webhook_subscriptions
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/subscriptions
    method: POST
    data_selector: webhook_subscription
- name: webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: payment_method_management
  endpoint:
    path: /api/checkout-admin#operation/GetPmmcSession
    method: GET
    data_selector: records
    params: {}
- name: subscription_adjustment
  endpoint:
    path: /api/subscriptions#tag/Subscription-Groups/operation/ListSelectionOptions
    method: GET
    data_selector: records
    params:
      latest: true
- name: Get Shop Info
  endpoint:
    path: /shops/v1/info
    method: GET
- name: List Products
  endpoint:
    path: /products/v2/shops/{shop_identifier}/products
    method: GET
- name: shop_info
  endpoint:
    path: /shops/v1/info
    method: GET
    data_selector: shop
    params: {}
- name: products
  endpoint:
    path: /products/v2/shops/{shop_identifier}/products
    method: GET
    data_selector: products
    params: {}
- name: uninstall_request
  endpoint:
    path: /custom/integration/uri
    method: POST
    data_selector: data
    params: {}
- name: getList Customers
  endpoint:
    path: /v2/shops/{shop_identifier}/customers
    method: GET
    data_selector: customers
    params:
      shop_identifier: zp3oafdor9
- name: getGet Customer by ID
  endpoint:
    path: /v2/shops/{shop_identifier}/customers/{customer_id}
    method: GET
    data_selector: customer
    params:
      shop_identifier: zp3oafdor9
- name: getGet Customer by Platform ID
  endpoint:
    path: /v2/shops/{shop_identifier}/customers/{platform_id}
    method: GET
    data_selector: customer
    params:
      shop_identifier: zp3oafdor9
- name: customer_addresses
  endpoint:
    path: /v2/shops/{shop_identifier}/customers/{customer_id}/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: products
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{bold_product_id}
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /v2/shops/{shop_identifier}/categories/{category_id}
    method: GET
    data_selector: data
    params: {}
- name: list_products
  endpoint:
    path: /v2/shops/{shop_identifier}/products
    method: GET
    data_selector: data
    params:
      shop_identifier: zp3oafdor9
- name: get_product_by_platform_id
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{pid}
    method: GET
    data_selector: data
    params:
      shop_identifier: zp3oafdor9
      pid: ''
- name: get_product_by_id
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{id}
    method: GET
    data_selector: data
    params:
      shop_identifier: zp3oafdor9
      id: ''
- name: list_product_types
  endpoint:
    path: /v2/shops/{shop_identifier}/product-types
    method: GET
    data_selector: data
    params:
      shop_identifier: zp3oafdor9
- name: List Product Vendors
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{bold_product_id}/options/{id}
    method: GET
    data_selector: data
    params:
      shop_identifier: required
      bold_product_id: required
- name: List Product Variants
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{bold_product_id}/options/{id}
    method: GET
    data_selector: data
    params:
      shop_identifier: required
      bold_product_id: required
      filter: optional
      limit: optional
      page: optional
- name: List Categories
  endpoint:
    path: /v2/shops/{shop_identifier}/categories
    method: GET
    data_selector: data
    params:
      shop_identifier: required
      limit: optional
      page: optional
      ids: optional
- name: List Product Categories
  endpoint:
    path: /v2/shops/{shop_identifier}/categories
    method: GET
    data_selector: data
    params:
      shop_identifier: zp3oafdor9
- name: Get Product Image by Platform ID
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{bold_product_id}/images/{pid}
    method: GET
    data_selector: data
    params:
      shop_identifier: zp3oafdor9
      bold_product_id: 123
      pid: '456'
- name: product_option
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{bold_product_id}/options/{id}
    method: GET
    data_selector: data
- name: list_product_options
  endpoint:
    path: /v2/shops/{shop_identifier}/products/{bold_product_id}/options
    method: GET
    data_selector: data
- name: shop_info
  endpoint:
    path: /shops/v1/info
    method: GET
    data_selector: records
- name: set_shipping_address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: get_shipping_address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: GET
- name: Update Shipping Address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: Delete Shipping Address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: Set Billing Address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: billing_address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: Update Billing Address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: Delete Billing Address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: validate_address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params:
      shop_identifier: '{shop_identifier}'
      public_order_id: '{public_order_id}'
- name: wallet_pay_on_approve
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: create_guest_customer
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: update_guest_customer
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: update_customer
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params:
      shop_identifier: required
      public_order_id: required
- name: delete_customer
  endpoint:
    path: /{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: validate_email_address
  endpoint:
    path: /{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: add_discount_code
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/discount_code
    method: POST
    data_selector: data
    params: {}
- name: list_discount_codes
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: delete_discount_code
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: validate_discount_code
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params:
      discount_code: TESTCODE
- name: line_items
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/line_items
    method: POST
    data_selector: data
- name: add_line_item
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: list_line_items
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params:
      shop_identifier: required
      public_order_id: required
- name: update_line_item_quantity
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: delete_line_item
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: order_metadata
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: Clear Order Metadata
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: list_order_metadata
  endpoint:
    path: /{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: overwrite_order_metadata
  endpoint:
    path: /{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: process_order
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: Pre-Process Order
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: handle_amendment
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: application_state
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: app_hook_event
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: check_order_inventory
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: create_payment
  endpoint:
    path: /storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: payment_data
- name: list_payments
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: update_payment
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data.payment_data
    params: {}
- name: remove_payment
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data.payment_data
    params: {}
- name: remove_gift_card_payment
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: payment_data
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: set_shipping_line
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: List Shipping Lines
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
- name: estimate_shipping_line
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: generate_taxes
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: estimate_taxes
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/estimate_taxes
    method: POST
    data_selector: data
- name: create_wallet_pay_order
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: update_shipping_address
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
- name: capture_payment
  endpoint:
    path: /checkout/storefront/{shop_identifier}/{public_order_id}/wallet_pay/on_approve
    method: POST
    data_selector: data
    params: {}
- name: payment_data
  endpoint:
    path: /api/checkout
    method: GET
    data_selector: data.payment_data
    params: {}
- name: application_state
  endpoint:
    path: /api/checkout
    method: GET
    data_selector: data.application_state
    params: {}
- name: delete_customer
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: create_authenticated_customer
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: update_line_item
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: initialize_order
  endpoint:
    path: /checkout/orders/{shop_identifier}
    method: POST
    data_selector: data
    params: {}
- name: resume_order
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: create_order
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}
    method: POST
    data_selector: data
    params: {}
- name: cancel_order
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}
    method: DELETE
    data_selector: data
    params: {}
- name: capture_payment
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/payments/{payment_id}
    method: POST
    data_selector: data
    params: {}
- name: issue_refund_full_order_amount
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: authorize_payments
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: issue_refund_arbitrary_amount
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: refund_specific_payment
  endpoint:
    path: /checkout/orders/{shop_identifier}/{public_order_id}/refunds/full
    method: POST
    data_selector: data
    params: {}
- name: CORS Allowlist
  endpoint:
    path: /checkout/shop/{shop_identifier}/cors
    method: GET
    data_selector: data
- name: External Payment Gateway
  endpoint:
    path: /checkout/shop/{shop_identifier}/external_payment_gateways
    method: GET
    data_selector: data
- name: Delete External Payment Gateway
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
- name: Get Gift Card
  endpoint:
    path: /checkout/shop/{shop_identifier}/gift-cards
    method: GET
- name: Configure Integration Settings
  endpoint:
    path: /checkout/shop/{shop_identifier}/integration
    method: POST
- name: Create Element
  endpoint:
    path: /checkout/shop/{shop_identifier}/elements
    method: POST
- name: List Elements
  endpoint:
    path: /checkout/shop/{shop_identifier}/elements
    method: GET
- name: update_element
  endpoint:
    path: /checkout/shop/{shop_identifier}/elements/{public_element_id}
    method: PUT
- name: delete_element
  endpoint:
    path: /checkout/shop/{shop_identifier}/elements/{public_element_id}
    method: DELETE
- name: create_api_override
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides
    method: POST
- name: list_api_overrides
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides
    method: GET
- name: update_api_override
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides/{public_id}
    method: PUT
- name: delete_api_override
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides/{public_id}
    method: DELETE
- name: CORS Allowlist
  endpoint:
    path: /cors
    method: GET
- name: External Payment Gateway
  endpoint:
    path: /external_payment_gateways
    method: POST
- name: Get Shop Payment Styling
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: GET
- name: Create Shop Payment Styling
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: POST
- name: Delete Shop Payment Styling
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
- name: Connect Remote State Authority
  endpoint:
    path: /checkout/shop/{shop_identifier}/remote-state-authority
    method: POST
- name: Update Remote State Authority Connection
  endpoint:
    path: /checkout/shop/{shop_identifier}/remote-state-authority
    method: PUT
- name: Get Remote State Authority
  endpoint:
    path: /checkout/shop/{shop_identifier}/remote-state-authority
    method: GET
- name: Delete Remote State Authority
  endpoint:
    path: /checkout/shop/{shop_identifier}/remote-state-authority
    method: DELETE
- name: List Saved Payment Methods
  endpoint:
    path: /checkout/shop/{shop_identifier}/payments/{public_customer_id}
    method: GET
- name: Delete External Payment Gateway
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
- name: Get Gift Card
  endpoint:
    path: /checkout/shop/{shop_identifier}/gift-card
    method: GET
- name: Configure Integration Settings
  endpoint:
    path: /checkout/shop/{shop_identifier}/integrations
    method: POST
- name: Create Element
  endpoint:
    path: /checkout/shop/{shop_identifier}/life-elements
    method: POST
- name: List Elements
  endpoint:
    path: /checkout/shop/{shop_identifier}/life-elements
    method: GET
- name: Delete Saved Payment Method
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
- name: Get Shop General Settings
  endpoint:
    path: /checkout/shop/{shop_identifier}/general-settings
    method: GET
- name: Update Shop General Settings
  endpoint:
    path: /checkout/shop/{shop_identifier}/general-settings
    method: PUT
- name: Update Phone Number Requirement
  endpoint:
    path: /checkout/shop/{shop_identifier}/phone-number-requirement
    method: PUT
- name: Update Inventory Check Requirement
  endpoint:
    path: /checkout/shop/{shop_identifier}/inventory-check-requirement
    method: PUT
- name: Update Platform Customer Creation Setting
  endpoint:
    path: /checkout/shop/{shop_identifier}/platform-customer-creation
    method: PUT
- name: Update Element
  endpoint:
    path: /delete/checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
- name: Create API Override
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides
    method: POST
- name: List API Overrides
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides
    method: GET
- name: Update API Override
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides/{public_id}
    method: PUT
- name: Delete API Override
  endpoint:
    path: /checkout/shop/{shop_identifier}/overrides/{public_id}
    method: DELETE
- name: Get PMMC Session
  endpoint:
    path: /checkout/shop/{shop_identifier}/pmmc
    method: GET
    data_selector: data
    params:
      platform_customer_id: string
      bold_customer_id: string
- name: Delete Warehouse
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
    data_selector: data
    params: {}
- name: saved_payment_methods
  endpoint:
    path: /checkout/shop/{shop_identifier}/saved_payment_methods
    method: GET
    data_selector: data
    params:
      shop_identifier: required
      public_customer_id: required
- name: remote_state_authority
  endpoint:
    path: /checkout/shop/{shop_identifier}/remote_state_authority
    method: GET
    data_selector: data
    params:
      shop_identifier: required
- name: List Warehouses
  endpoint:
    path: /checkout/shop/{shop_identifier}/webhooks
    method: GET
- name: Create Webhook
  endpoint:
    path: /checkout/shop/{shop_identifier}/webhooks
    method: POST
- name: Update Webhook
  endpoint:
    path: /checkout/shop/{shop_identifier}/webhooks/{webhook_topic_id}
    method: PUT
- name: List Webhooks
  endpoint:
    path: /checkout/shop/{shop_identifier}/webhooks
    method: GET
- name: Delete Saved Payment Method
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
    params:
      shop_identifier: required
      public_payment_id: required
- name: Get Shop General Settings
  endpoint:
    path: /checkout/shop/{shop_identifier}/general-settings
    method: GET
    params:
      shop_identifier: required
- name: Update Shop General Settings
  endpoint:
    path: /checkout/shop/{shop_identifier}/general-settings
    method: PUT
    params:
      shop_identifier: required
- name: Update Phone Number Requirement
  endpoint:
    path: /checkout/shop/{shop_identifier}/phone-requirement
    method: PUT
    params:
      shop_identifier: required
- name: Update Inventory Check Requirement
  endpoint:
    path: /checkout/shop/{shop_identifier}/inventory-check-requirement
    method: PUT
    params:
      shop_identifier: required
- name: Update Platform Customer Creation Setting
  endpoint:
    path: /checkout/shop/{shop_identifier}/platform-customer-creation
    method: PUT
    params:
      shop_identifier: required
- name: delete_zone
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
- name: list_zones
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones
    method: GET
- name: create_zone
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones
    method: POST
- name: update_zone
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: PUT
- name: list_webhook_topics
  endpoint:
    path: /checkout/webhook/topics
    method: GET
- name: Get PMMC Session
  endpoint:
    path: /checkout/shop/{shop_identifier}/pmmc
    method: GET
    params:
      platform_customer_id: string
      bold_customer_id: string
- name: Delete Warehouse
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
- name: rulesets
  endpoint:
    path: /price_rules/rules/v2/rulesets
    method: GET
    data_selector: data
    params:
      external_ids: ''
      fields: ''
      page: '1'
      limit: '50'
      include_all_apps: 'false'
- name: ruleset by ID
  endpoint:
    path: /price_rules/rules/v2/rulesets/{ruleset_id}
    method: GET
    data_selector: data
    params:
      shop_identifier: ''
      ruleset_id: ''
- name: List Warehouses
  endpoint:
    path: /checkout/shop/{shop_identifier}/warehouses
    method: GET
- name: Create Webhook
  endpoint:
    path: /checkout/shop/{shop_identifier}/webhooks
    method: POST
- name: List Webhooks
  endpoint:
    path: /checkout/shop/{shop_identifier}/webhooks
    method: GET
- name: Update Webhook
  endpoint:
    path: /checkout/shop/{shop_identifier}/webhooks/{webhook_topic_id}
    method: PUT
- name: zones
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones
    method: GET
    data_selector: data
    params: {}
- name: delete_zone
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: DELETE
    data_selector: data
    params: {}
- name: list_webhook_topics
  endpoint:
    path: /webhooks/topics
    method: GET
    data_selector: data
    params: {}
- name: create_zone
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones
    method: POST
    data_selector: data
    params: {}
- name: update_zone
  endpoint:
    path: /checkout/shop/{shop_identifier}/zones/{zone_id}
    method: PUT
    data_selector: data
    params: {}
- name: patch_ruleset_by_id
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: PATCH
    data_selector: data
    params: {}
- name: get_ruleset_by_external_id
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params: {}
- name: create_ruleset_by_external_id
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params: {}
- name: delete_ruleset_by_external_id
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: data
    params: {}
- name: activate_all_rulesets
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params: {}
- name: deactivate_all_rulesets
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params: {}
- name: list_rulesets_by_product_id
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params: {}
- name: rulesets
  endpoint:
    path: /price_rules/rules/v2/rulesets
    method: GET
    data_selector: data
    params:
      external_ids: ''
      fields: ''
      page: '1'
      limit: '50'
      include_all_apps: 'false'
- name: ruleset_by_id
  endpoint:
    path: /price_rules/rules/v2/rulesets/{ruleset_id}
    method: GET
    data_selector: data
    params: {}
- name: Bulk Delete Rules by Ruleset EID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: Bulk Delete Rules by Ruleset ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: Update Rule by Ruleset EID and Rule EID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: Bulk Add Rules by Ruleset EID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: Update Rule by Ruleset ID and Rule ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: Remove Rule by Ruleset ID and Rule ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: ruleset
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: update_rule
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: delete_rule
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: bulk_add_rules
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: list_rules_by_ruleset_id
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: list_order_conditions
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: Bulk Delete Rules by Ruleset EID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
- name: Bulk Delete Rules by Ruleset ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
- name: Update Rule by Ruleset EID and Rule EID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: PUT
- name: Bulk Add Rules by Ruleset EID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
- name: Update Rule by Ruleset ID and Rule ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: PUT
- name: Remove Rule by Ruleset ID and Rule ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
- name: rules
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
- name: order_conditions
  endpoint:
    path: /price_rules/order_conditions
    method: GET
    data_selector: data
- name: Create Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: ''
    params:
      shop_identifier: required
- name: Get Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: ''
    params:
      shop_identifier: required
      condition_name: required
      condition_value: required
- name: Delete Order Condition by Name and Value
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: ''
    params:
      shop_identifier: required
      condition_name: required
      condition_value: required
- name: Update Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: PUT
    data_selector: ''
    params:
      shop_identifier: required
      condition_name: required
      condition_value: required
- name: List Valid Fields for Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: ''
    params:
      shop_identifier: required
- name: Delete Order Condition by Name
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: ''
    params:
      shop_identifier: required
      condition_name: required
- name: Delete Order Condition Field by Name
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: ''
    params:
      shop_identifier: required
      condition_name: required
      field_name: required
- name: Add Field Sets to Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: ''
    params:
      shop_identifier: required
- name: discount_codes
  endpoint:
    path: /discount_codes
    method: GET
    data_selector: data
    params: {}
- name: create_discount_code
  endpoint:
    path: /discount_codes
    method: POST
    data_selector: data
    params: {}
- name: list_matching_field_sets
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params: {}
- name: validate_order_condition_group
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params: {}
- name: Create Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: message
- name: Get Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: message
- name: Delete Order Condition by Name and Value
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: message
- name: Update Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: PUT
    data_selector: message
- name: List Valid Fields for Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: message
- name: Delete Order Condition by Name
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: message
- name: Delete Order Condition Field by Name
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: message
- name: Add Field Sets to Order Condition
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: message
- name: discount_codes
  endpoint:
    path: /discount_codes
    method: GET
    data_selector: data
    params: {}
- name: create_discount_code
  endpoint:
    path: /discount_codes
    method: POST
    data_selector: data
    params: {}
- name: list_discount_codes
  endpoint:
    path: /discount_codes
    method: GET
    data_selector: data
    params: {}
- name: Update Discount Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Get Discount Code by ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Delete Discount Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Get Discount Code by Ruleset ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params:
      shop_identifier: required
      ruleset_id: required
- name: Activate Discount Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Deactivate Discount Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Get Final Price for Product
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params:
      shop_identifier: required
- name: Get Best Price for Cart
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params:
      shop_identifier: required
- name: Get Currency Symbol for Currency Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params:
      currency_name: required
- name: simple_communication_test
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
- name: Update Discount Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Get Discount Code by ID
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Delete Discount Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: DELETE
    data_selector: data
    params:
      shop_identifier: required
      discount_code_id: required
- name: Get Final Price for Product
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params:
      shop_identifier: required
- name: Get Best Price for Cart
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: POST
    data_selector: data
    params:
      shop_identifier: required
- name: Get Currency Symbol for Currency Code
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
    params:
      currency_name: required
- name: hello_api
  endpoint:
    path: /price_rules/rules/v2/hello-api
    method: GET
    data_selector: data
- name: customers
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/customers
    method: GET
    data_selector: Customers
- name: customer
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/customers/{customer_id}
    method: GET
    data_selector: Customer
- name: customer_addresses
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/customers/{customer_id}/addresses
    method: GET
    data_selector: customer_addresses
- name: subscriptions
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions
    method: GET
    data_selector: ListSubscriptions
- name: subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}
    method: GET
    data_selector: Subscription
- name: customers
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/customers
    method: GET
- name: customer
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/customers/{customer_id}
    method: GET
- name: customer_addresses
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/customers/{customer_id}/addresses
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}
    method: GET
- name: list_subscription_adjustments
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/adjustments
    method: GET
    data_selector: adjustments
    params: {}
- name: delete_subscription_adjustments
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/adjustments
    method: DELETE
    data_selector: adjustments
    params: {}
- name: get_subscription_adjustment_by_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/adjustments/{adjustment_id}
    method: GET
    data_selector: adjustment
    params: {}
- name: delete_subscription_adjustment_by_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/adjustments/{adjustment_id}
    method: DELETE
    data_selector: adjustment
    params: {}
- name: list_orders
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/orders
    method: GET
    data_selector: orders
    params:
      page: '1'
      limit: '10'
- name: get_order
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/orders/{order_id}
    method: GET
    data_selector: order
    params: {}
- name: list_future_orders
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/future_orders
    method: GET
    data_selector: future_orders
    params: {}
- name: list_future_orders_by_subscription_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/future_orders
    method: GET
    data_selector: future_orders
    params: {}
- name: create_convertible_adjustment_group
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/convertible_adjustment_groups
    method: POST
    data_selector: adjustment_group
    params: {}
- name: subscription_adjustments
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/adjustments
    method: GET
    data_selector: adjustments
- name: subscription_adjustment_by_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/adjustments/{adjustment_id}
    method: GET
    data_selector: adjustment
- name: delete_subscription_adjustment_by_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/adjustments/{adjustment_id}
    method: DELETE
    data_selector: ''
- name: convertible_adjustment_groups
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/convertible_adjustment_groups/{adjustment_id}
    method: DELETE
- name: convertible_adjustment_group_items
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/convertible_adjustment_groups/{adjustment_id}/items
    method: POST
- name: payment_methods
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/payment_methods
    method: GET
- name: line_items
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items
    method: PATCH
- name: convertible_adjustment_group_items
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/convertible_adjustment_groups/{adjustment_id}/items
    method: POST
    data_selector: data.items
    params: {}
- name: payment_method
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/payment_method
    method: GET
    data_selector: payment_method
    params: {}
- name: payment_methods
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/payment_methods
    method: GET
    data_selector: payment_methods
    params: {}
- name: line_items
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items
    method: PATCH
    data_selector: line_items
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscription_id}
    method: GET
    data_selector: subscription
- name: line_item
  endpoint:
    path: /subscriptions/{subscription_id}/line_items/{line_item_id}
    method: GET
    data_selector: subscription_line_item
- name: webhook_topic
  endpoint:
    path: /webhooks/topics
    method: GET
    data_selector: webhook_topics
- name: webhook_subscription
  endpoint:
    path: /webhooks/subscriptions
    method: GET
    data_selector: webhook_subscriptions
- name: webhook_subscription
  endpoint:
    path: /webhook/subscriptions
    method: POST
    data_selector: application/json
    params: {}
- name: webhook_subscriptions
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/subscriptions/{webhook_subscription_id}
    method: GET
    data_selector: webhook_subscription
    params: {}
- name: webhook_events
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/events
    method: GET
    data_selector: webhook_events
    params:
      limit: '10'
- name: alternative_payment
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/alternative_payments/{payment_public_id}
    method: DELETE
    data_selector: responses
    params: {}
- name: selection_option
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}/selection_options/{selection_option_id}
    method: DELETE
    data_selector: responses
    params: {}
- name: selection_option_filter
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}/selection_options
    method: DELETE
    data_selector: responses
    params:
      filter: required
- name: add_selection_options
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}/selection_options
    method: POST
    data_selector: responses
    params: {}
- name: line_item_attributes
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}/attributes
    method: POST
    data_selector: responses
    params: {}
- name: update_line_item_attributes
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}/attributes
    method: PATCH
    data_selector: responses
    params: {}
- name: line_item
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}
    method: POST
    data_selector: subscription_line_item
    params: {}
- name: prepaid_metadata
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}/prepaid_metadata
    method: POST
    data_selector: prepaid_metadata
    params: {}
- name: create_line_items
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items
    method: POST
    data_selector: line_items
    params: {}
- name: update_next_order_datetime
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/next_order_datetime
    method: PUT
    data_selector: subscription
    params: {}
- name: unskip_previously_skipped_order
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/recover
    method: PUT
    data_selector: subscription
    params: {}
- name: skip_subscription_order
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/skip
    method: PUT
    data_selector: subscription
    params: {}
- name: reactivate_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/activate
    method: POST
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/cancel
    method: POST
    data_selector: subscription
    params: {}
- name: pause_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/pause
    method: POST
    data_selector: subscription
    params: {}
- name: delete_line_item
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}
    method: DELETE
    data_selector: subscription
    params: {}
- name: get_line_item
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}
    method: GET
    data_selector: subscription_line_item
    params: {}
- name: list_swappable_products_by_line_item
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}/products_swap
    method: GET
    data_selector: swappable_products
    params: {}
- name: list_selection_options
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/selection_options
    method: GET
    data_selector: selection_options
    params: {}
- name: list_subscription_groups
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups
    method: GET
    data_selector: subscription_groups
    params: {}
- name: create_subscription_group
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups
    method: POST
    data_selector: subscription_group
    params: {}
- name: get_subscription_group
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}
    method: GET
    data_selector: subscription_group
    params: {}
- name: update_subscription_group
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}
    method: PUT
    data_selector: subscription_group
    params: {}
- name: delete_subscription_group
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}
    method: DELETE
    data_selector: subscription_group
    params: {}
- name: list_webhook_topics
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/topics
    method: GET
    data_selector: webhook_topics
    params: {}
- name: list_webhook_subscriptions
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/subscriptions
    method: GET
    data_selector: webhook_subscriptions
    params: {}
- name: webhook_subscription
  endpoint:
    path: /webhooks/subscriptions
    method: POST
    data_selector: WebhookSubscription
    params: {}
- name: future_orders
  endpoint:
    path: /api/future_orders
    method: GET
    data_selector: future_orders
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: webhook_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/subscriptions/{webhook_subscription_id}
    method: GET
- name: webhook_events
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/webhooks/events
    method: GET
- name: alternative_payment_methods
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/alternative_payments
    method: GET
- name: FutureOrderLineItem
  endpoint:
    path: /future-order-line-items
    method: GET
    data_selector: items
- name: Intervals
  endpoint:
    path: /intervals
    method: GET
    data_selector: intervals
- name: LineItem
  endpoint:
    path: /line-items
    method: GET
    data_selector: line_items
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: swappable_products
  endpoint:
    path: /api/swappable_products
    method: GET
    data_selector: swappable_products
- name: webhook_events
  endpoint:
    path: /api/webhook_events
    method: GET
    data_selector: webhook_events
- name: webhook_subscriptions
  endpoint:
    path: /api/webhook_subscriptions
    method: GET
    data_selector: webhook_subscriptions
- name: alternative_payment
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/alternative_payments/{payment_public_id}
    method: DELETE
    data_selector: '200'
    params: {}
- name: selection_option_by_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}/selection_options/{selection_option_id}
    method: DELETE
    data_selector: '200'
    params: {}
- name: selection_option_by_filter
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}/selection_options
    method: DELETE
    data_selector: '200'
    params:
      filter: required
- name: add_selection_options
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscription_groups/{group_id}/selection_options
    method: POST
    data_selector: '200'
    params: {}
- name: line_item_attributes
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}/attributes
    method: POST
    data_selector: '200'
    params: {}
- name: line_item
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}/prepaid_metadata
    method: post
    data_selector: prepaid_metadata
    params: {}
- name: line_item_prepaid_metadata
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/line_items/{line_item_id}/prepaid_metadata
    method: patch
    data_selector: prepaid_metadata
    params: {}
- name: SubscriptionOrderTransactionFailed
  endpoint:
    path: /endpoint/path/for/SubscriptionOrderTransactionFailed
    method: GET
    data_selector: properties
    params: {}
- name: SubscriptionUpdateLineItemsEntity
  endpoint:
    path: /endpoint/path/for/SubscriptionUpdateLineItemsEntity
    method: GET
    data_selector: properties
    params: {}
- name: CursorPagination
  endpoint:
    path: /endpoint/path/for/CursorPagination
    method: GET
    data_selector: properties
    params: {}
- name: FutureOrdersCursorPagination
  endpoint:
    path: /endpoint/path/for/FutureOrdersCursorPagination
    method: GET
    data_selector: properties
    params: {}
- name: SubscriptionsCursorPagination
  endpoint:
    path: /endpoint/path/for/SubscriptionsCursorPagination
    method: GET
    data_selector: properties
    params: {}
- name: PatchLineItemEntity
  endpoint:
    path: /endpoint/path/for/PatchLineItemEntity
    method: GET
    data_selector: properties
    params: {}
- name: PrepaidMetadata
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: prepaid_metadata
- name: line_item
  endpoint:
    path: /api/subscriptions/line_items
    method: GET
    data_selector: line_items
- name: shipping_lines
  endpoint:
    path: /shipping-lines
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscriptions
    params: {}
- name: subscription_adjustment
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: data
- name: line_item
  endpoint:
    path: /api/subscriptions/line_items
    method: POST
    data_selector: data
- name: webhook_event
  endpoint:
    path: /api/webhook_event
    method: GET
    data_selector: webhook_events
- name: webhook_subscription
  endpoint:
    path: /api/webhook_subscription
    method: GET
    data_selector: webhook_subscriptions
- name: SubscriptionOrderTransactionFailed
  endpoint:
    path: /SubscriptionOrderTransactionFailed
    method: GET
    data_selector: properties
- name: SubscriptionUpdateLineItemsEntity
  endpoint:
    path: /SubscriptionUpdateLineItemsEntity
    method: GET
    data_selector: properties
- name: CursorPagination
  endpoint:
    path: /CursorPagination
    method: GET
    data_selector: properties
- name: FutureOrdersCursorPagination
  endpoint:
    path: /FutureOrdersCursorPagination
    method: GET
    data_selector: properties
- name: SubscriptionsCursorPagination
  endpoint:
    path: /SubscriptionsCursorPagination
    method: GET
    data_selector: properties
- name: PatchLineItemEntity
  endpoint:
    path: /PatchLineItemEntity
    method: GET
    data_selector: properties
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: line_item
  endpoint:
    path: /api/subscriptions/line_items
    method: GET
    data_selector: line_items
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: records
- name: shops
  endpoint:
    path: /api/shops
    method: GET
    data_selector: records
- name: checkout_frontend
  endpoint:
    path: /api/checkout
    method: GET
    data_selector: records
- name: checkout_backend
  endpoint:
    path: /api/orders
    method: GET
    data_selector: records
- name: checkout_admin
  endpoint:
    path: /api/checkout-admin
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: records
- name: price_rules
  endpoint:
    path: /api/price-rules
    method: GET
    data_selector: records
- name: subscription_adjustment
  endpoint:
    path: /api/subscriptions/adjustments
    method: POST
    data_selector: data
    params: {}
- name: line_item
  endpoint:
    path: /api/subscriptions/line-items
    method: POST
    data_selector: data
    params: {}
- name: Create Line Item Prepaid Metadata
  endpoint:
    path: /api/subscriptions#tag/Subscriptions/operation/CreateLineItemPrepaidMetadata
- name: Create Subscription
  endpoint:
    path: /api/subscriptions#tag/Subscriptions/operation/CreateSubscription
- name: Subscriptions object
  endpoint:
    path: /api/subscriptions#tag/Subscriptions
- name: Create Order
  endpoint:
    path: /api/orders#operation/CreateOrder
    method: POST
    data_selector: order
    params: {}
- name: Authorize Payments
  endpoint:
    path: /api/orders#tag/Payments/operation/AuthorizePayments
    method: POST
    data_selector: payment
    params: {}
- name: Capture Specific Payment
  endpoint:
    path: /api/orders#tag/Payments/operation/CaptureSpecificPayment
    method: POST
    data_selector: capture
    params: {}
- name: Issue Payment Refund
  endpoint:
    path: /api/orders#tag/Refunds/operation/IssuePaymentRefundForArbitraryAmount
    method: POST
    data_selector: refund
    params: {}
- name: Cancel Order
  endpoint:
    path: /api/orders#operation/CancelOrder
    method: POST
    data_selector: cancel
    params: {}
- name: Initialize Order
  endpoint:
    path: /api/orders#operation/InitializeOrder
    method: POST
    data_selector: initialize
    params: {}
- name: Estimate Taxes
  endpoint:
    path: /api/checkout#tag/Taxes/operation/EstimateTaxes
    method: GET
- name: Estimate Shipping Line
  endpoint:
    path: /api/checkout#tag/Shipping-Lines/operation/EstimateShippingLine
    method: GET
- name: Create Payment Gateway Order
  endpoint:
    path: /api/checkout#tag/Payments/operation/CreatePaymentGatewayOrder
    method: POST
- name: Batch Process
  endpoint:
    path: /api/checkout#operation/BatchProcess
    method: POST
- name: Handle Amendment
  endpoint:
    path: /api/checkout#operation/post-handle_amendment
    method: POST
- name: Remove Gift Card Payment
  endpoint:
    path: /api/checkout#operation/RemoveGiftCardPayment
    method: GET
- name: Pre-Process Order
  endpoint:
    path: /api/checkout#operation/PreProcessOrder
    method: GET
- name: Update Platform Customer Creation Setting
  endpoint:
    path: /api/checkout-admin/UpdateCreatePlatformCustomer
    method: POST
- name: Update Inventory Check Requirement
  endpoint:
    path: /api/checkout-admin/UpdateInventoryCheckRequirement
    method: POST
- name: Shop Payment Styling
  endpoint:
    path: /api/checkout-admin/ShopPaymentStyling
    method: POST
- name: Update Phone Number Requirement
  endpoint:
    path: /api/checkout-admin/UpdatePhoneNumberRequirement
    method: POST
- name: List Saved Payment Methods
  endpoint:
    path: /api/checkout-admin/ListSavedPaymentMethods
    method: GET
- name: Delete Saved Payment Method
  endpoint:
    path: /api/checkout-admin/DeleteSavedPaymentMethod
    method: DELETE
- name: Get PMMC Session
  endpoint:
    path: /api/checkout-admin/GetPmmcSession
    method: GET
- name: External Payment Gateway
  endpoint:
    path: /api/checkout-admin/ExternalPaymentGateway
    method: POST
- name: Warehouse Read, Update, and Delete
  endpoint:
    path: /api/checkout-admin/Warehouses
    method: GET
- name: Authorize Payments
  endpoint:
    path: /api/orders#tag/Payments/operation/AuthorizePayments
    method: POST
- name: Create Order
  endpoint:
    path: /api/orders#operation/CreateOrder
    method: POST
- name: Cancel Order
  endpoint:
    path: /api/orders#operation/CancelOrder
    method: POST
- name: Capture Specific Payment
  endpoint:
    path: /api/orders#tag/Payments/operation/CaptureSpecificPayment
    method: POST
- name: Refund a Specific Payment for an Arbitrary Amount
  endpoint:
    path: /api/orders#tag/Refunds/operation/IssuePaymentRefundForArbitraryAmount
    method: POST
- name: Estimate Taxes
  endpoint:
    path: /api/checkout#tag/Taxes/operation/EstimateTaxes
    method: GET
- name: Estimate Shipping Line
  endpoint:
    path: /api/checkout#tag/Shipping-Lines/operation/EstimateShippingLine
    method: GET
- name: Create Payment Gateway Order
  endpoint:
    path: /api/checkout#tag/Payments/operation/CreatePaymentGatewayOrder
    method: POST
- name: Batch Process
  endpoint:
    path: /api/checkout#operation/BatchProcess
    method: POST
- name: Handle Amendment
  endpoint:
    path: /api/checkout#operation/post-handle_amendment
    method: POST
- name: uninstall_integration
  endpoint:
    path: /api/shops/uninstall_integration
    method: POST
- name: Remove Gift Card Payment
  endpoint:
    path: /api/checkout#operation/RemoveGiftCardPayment
    method: GET
- name: Pre-Process Order
  endpoint:
    path: /api/checkout#operation/PreProcessOrder
    method: GET
- name: Auth request
  endpoint:
    path: /guides/checkout/references/checkout-epg-api#auth-request
    method: POST
    data_selector: customer_data
- name: Uninstall Integration
  endpoint:
    path: /api/shops#tag/Integrations/operation/UninstallIntegration
    method: POST
- name: payment_gateway_order
  endpoint:
    path: /api/checkout#tag/Payments/operation/CreatePaymentGatewayOrder
    method: POST
    data_selector: order
    params: {}
- name: saved_payment_methods
  endpoint:
    path: /api/checkout-admin#operation/ListSavedPaymentMethods
    method: GET
    data_selector: payment_methods
    params: {}
- name: List Selection Options
  endpoint:
    path: /api/subscriptions#operation/ListSelectionOptions
    method: GET
    data_selector: selection_options
    params: {}
- name: Create Order
  endpoint:
    path: /api/orders#operation/CreateOrder
    method: POST
    data_selector: order
    params: {}
- name: Handle Amendment
  endpoint:
    path: /api/checkout#operation/post-handle_amendment
    method: POST
    data_selector: amendment
    params: {}
- name: Create Webhook Subscription
  endpoint:
    path: /api/subscriptions#tag/Webhook-Subscriptions/operation/CreateWebhookSubscription
    method: POST
    data_selector: webhook_subscription
    params: {}
- name: Initialize Order
  endpoint:
    path: /api/orders#operation/InitializeOrder
    method: POST
    data_selector: initialized_order
    params: {}
- name: Create Line Items
  endpoint:
    path: /api/subscriptions#tag/Subscriptions/operation/CreateLineItems
    method: POST
    data_selector: line_items
    params: {}
- name: Add List Item
  endpoint:
    path: /api/checkout#operation/AddLineItem
    method: POST
    data_selector: added_item
    params: {}
- name: Update Line Item Prepaid Metadata
  endpoint:
    path: /api/subscriptions#tag/Subscriptions/operation/UpdateLineItemPrepaidMetadata
    method: POST
    data_selector: prepaid_metadata
    params: {}
- name: Cancel Order
  endpoint:
    path: /api/orders#operation/CancelOrder
    method: POST
    data_selector: cancel_order
    params: {}
- name: List Customers
  endpoint:
    path: /api/platform-connector#operation/ListCustomers
    method: GET
    data_selector: customers
    params: {}
- name: SyncProducts
  endpoint:
    path: /api/platform-connector-destinations#tag/Platform-Connector-Sync/operation/SyncProducts
    method: GET
- name: SyncCustomers
  endpoint:
    path: /api/platform-connector-destinations#tag/Platform-Connector-Sync/operation/SyncCustomers
    method: GET
- name: SyncOrders
  endpoint:
    path: /api/platform-connector-destinations#tag/Platform-Connector-Sync/operation/SyncOrders
    method: GET
- name: Get Ruleset by External ID
  endpoint:
    path: /api/price-rules#tag/Rulesets/operation/GetRulesetByExternalID
    method: GET
    data_selector: ruleset
    params:
      include_all_apps: optional
- name: Estimate Taxes
  endpoint:
    path: /api/checkout#tag/Taxes/operation/EstimateTaxes
    method: GET
    data_selector: records
    params: {}
- name: Estimate Shipping Line
  endpoint:
    path: /api/checkout#tag/Shipping-Lines/operation/EstimateShippingLine
    method: GET
    data_selector: records
    params: {}
- name: Uninstall Integration
  endpoint:
    path: /api/shops#tag/Integrations/operation/UninstallIntegration
    method: POST
- name: create_subscription
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_gateway_order
  endpoint:
    path: /api/checkout#tag/Payments/operation/CreatePaymentGatewayOrder
    method: POST
    data_selector: order
    params: {}
- name: saved_payment_methods
  endpoint:
    path: /api/checkout-admin#operation/ListSavedPaymentMethods
    method: GET
    data_selector: methods
    params: {}
- name: gift_card_balance
  endpoint:
    path: /guides/checkout/gift-cards
    method: GET
    data_selector: balance
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/v2/shops/{shopIdentifier}/subscriptions/{subscriptionId}/line_items/{lineItemId}/products_swap
    method: GET
    data_selector: data
- name: swap_line_items
  endpoint:
    path: /subscriptions/v2/shops/{shopIdentifier}/subscriptions/{subscriptionId}/products_swap
    method: PUT
    data_selector: data
- name: create_order
  endpoint:
    path: /api/orders/create
    method: POST
    data_selector: order
    params: {}
- name: cancel_order
  endpoint:
    path: /api/orders/cancel
    method: POST
    data_selector: order
    params: {}
- name: list_customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
    params: {}
- name: subscription_adjustments
  endpoint:
    path: /api/subscriptions/adjustments
    method: POST
    data_selector: adjustments
    params: {}
- name: future_orders
  endpoint:
    path: /api/subscriptions/future-orders
    method: GET
    data_selector: orders
    params: {}
- name: discounts
  endpoint:
    path: /api/platform-connector/discounts
    method: GET
    data_selector: discounts
- name: platform_friendly_id
  endpoint:
    path: /api/platform-connector/platform_friendly_id
    method: GET
    data_selector: platform_friendly_id
- name: shipping_code
  endpoint:
    path: /api/platform-connector/shipping_code
    method: GET
    data_selector: shipping_code
- name: verification
  endpoint:
    path: /api/platform-connector/verification
    method: GET
    data_selector: verification
- name: future_orders
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/future_orders
    method: GET
    data_selector: orders
    params:
      filter: lte(order_datetime:{date})
- name: future_orders_by_subscription_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/future_orders
    method: GET
    data_selector: orders
    params:
      filter: lte(order_datetime:{date})
- name: create_line_items
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: line_items
- name: Update Subscription Line Items
  endpoint:
    path: /api/subscriptions#tag/Subscriptions#operation/UpdateLineItems
    method: POST
    data_selector: subscription.line_items
- name: Get Subscription
  endpoint:
    path: /api/subscriptions#tag/Subscriptions#operation/GetSubscription
    method: GET
    data_selector: subscription
- name: Create Subscription Line Items
  endpoint:
    path: /guides/subscriptions-v2/create-line-items
    method: POST
    data_selector: subscription.line_items
- name: create_webhook_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shopIdentifier}/webhooks/subscriptions
    method: POST
    data_selector: webhook_subscription
    params: {}
- name: list_webhook_topics
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: webhook_topics
    params: {}
- name: create_subscription
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/v2/shops/{shopIdentifier}/subscriptions/{subscriptionId}/line_items/{lineItemId}/products_swap
    method: GET
    data_selector: data.swappable_products
- name: swap_line_items
  endpoint:
    path: /subscriptions/v2/shops/{shopIdentifier}/subscriptions/{subscriptionId}/products_swap
    method: PUT
    data_selector: data
- name: Subscription Adjustments
  endpoint:
    path: /api/subscriptions#tag/Subscription-Adjustments
    method: POST
    data_selector: adjustments
    params: {}
- name: customer_subscriptions
  endpoint:
    path: /customers/{customer_id}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      shop: '{shop_domain}'
      platform_type: '{platform}'
- name: pause_subscription
  endpoint:
    path: /subscriptions/{subscriptionID}/pause
    method: POST
    data_selector: null
    params:
      shop: '{shop_DOMAIN}'
      platform_type: '{platform}'
- name: future_orders
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/future_orders
    method: GET
    data_selector: records
    params:
      filter: lte(order_datetime:2022-05-10T23:59:59)
- name: future_orders_by_subscription_id
  endpoint:
    path: /subscriptions/v1/shops/{shop_identifier}/subscriptions/{subscription_id}/future_orders
    method: GET
    data_selector: records
    params:
      filter: lte(order_datetime:2024-05-10T59:59:59)
- name: create_line_items
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: line_items
    params: {}
- name: subscription_line_items
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: subscription.line_items
- name: webhook_subscription
  endpoint:
    path: /subscriptions/v1/shops/{shopIdentifier}/webhooks/subscriptions
    method: POST
    data_selector: webhook_subscription
    params: {}
- name: webhook_topics
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: webhook_topics
    params: {}
- name: subscriptions
  endpoint:
    path: /customers/{customer_id}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      shop: '{shop_domain}'
      platform_type: '{platform}'
- name: pause_subscription
  endpoint:
    path: /subscriptions/{subscriptionID}/pause
    method: POST
    data_selector: null
    params:
      shop: '{shop_DOMAIN}'
      platform_type: '{platform}'
notes:
- The subscription_payment_method_updated webhook is not supported by default for
  all Shopify shops installed prior to January 15th 2024.
- Bold occasionally releases changelog entries that have a `Bold-API-Version-Date`
  in the future.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Access tokens do not expire and refresh tokens are not required.
- Verifying request signatures is a security measure that mitigates the risk of this
  endpoint from being spoofed by a malicious actor.
- This endpoint does NOT add the payment to the order. To add a payment, use Add Payment.
- The Checkout Backend API is used to initialize an order through authenticated requests.
- This endpoint does not perform any currency conversions.
- Use the Checkout Admin API to configure store-level settings.
- The identifier of the shop can be retrieved by making a request to the Get Shop
  Info endpoint.
- Requires setup of connected app in Bold Commerce
- Refer to the changelog for the latest updates to this API.
- The `subscription_payment_method_updated` webhook is not supported by default for
  all Shopify shops installed prior to January 15th 2024.
- Generate OAuth tokens in the Developer Dashboard.
- The subscription may include multiple properties related to the customer and payment
  details.
- Authenticates an API request from a public integration.
- Authenticates an API request from a private integration.
- Line items are read-only and contain various product-related attributes.
- Shipping lines may differ at time of processing.
- Developers now have the ability to add line items to future orders as one-time or
  ongoing modifications, or on a customized schedule of their own.
- Some objects like Contact may return nulls in deeply nested fields
- Read-only fields include subscription_id, platform_id, platform_product_id, platform_variant_id,
  product_name, variant_name, price_charged, discounted_price, discounted_price_charged,
  full_price.
- Add support for shipping and tax estimates
- Add new plugin event payments_preauthorized
- Uses OAuth2 with refresh token — requires setup of connected app in Bold Commerce
- Bold Checkout does NOT use these values to update the order_total or currency in
  the application state.
- External payment gateways now support setting HTTP headers on requests to the base_url.
- The tax zone settings endpoints are now a sub-route of zones.
- The Customers API now returns only the first 50 addresses associated with a customer.
- Requires setup of connected app in api
- Bold now sends bold_order_id in Auth requests from the External Payment Gateway
  Connector.
- Bold now sends customer_data in the External Payment Gateway Connector API Auth
  Request.
- The tax_total field in the Auth request payload now includes total shipping taxes
  (where applicable) on the order.
- Allows an API consumer to uninstall an integration for a shop by using the same
  token issued during its installation.
- Bold now sends `bold_order_id` in Auth requests from the External Payment Gateway
  Connector.
- Bold now sends `customer_data` in the External Payment Gateway Connector API Auth
  Request.
- The `tax_total` field in the Auth request payload now includes total shipping taxes
  (where applicable) on the order.
- Developers now have a simpler path to modifying discount codes on Subscriptions.
- Subscription Groups support Dynamic Discount rules.
- Developers now have the ability to configure automatic product conversions when
  subscriptions are created from checkout.
- Requires setup of connected app in Bold Checkout
- New features and fields are continuously added
- Some features may require specific configuration in the store settings.
- Enables platform developers to fully control the state of orders during checkout
- The Bold Subscriptions API requires a complete payload for the Create Subscription
  endpoint.
- Uses OAuth2 with refresh token — requires setup of connected app in Bold.
- Requires setup of OAuth2 credentials in Bold Commerce
- Some endpoints may have specific payload requirements
- Uses OAuth2 with refresh token — requires setup of connected app in Bold
- Some adjustments may not apply if triggers are not met
- The future order endpoints are at the shop-level, allowing pagination and querying
  all active subscriptions.
- Adding line items to multi-currency subscriptions is not supported at this time.
  To add line items with this endpoint, the subscription's base_currency and charged_currency
  must match.
- When creating or modifying line items, you must include all line items that exist
  on that subscription. Any omitted line items will be considered deleted and removed
  from the subscription.
- To receive an HTTP request containing information about the event when a webhook
  is triggered.
- Idempotency key is recommended to prevent duplicate subscriptions.
- 'Adjustments have three components: trigger, action, and target.'
- Creating a customer portal requires using a different base URL from the standard
  Bold Subscriptions API.
- All requests to https://sub.boldapps.net/api/customer/... must include the {shop_domain}
  and {platform} parameters in addition to the Authorization header with a customer
  JWT.
- Some fields are read-only and cannot be modified using this endpoint.
- A secure protocol (https) is required on your callback url.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Unauthenticated'
- 401 Unauthenticated
- '401 Unauthenticated: Check authentication credentials'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 401 Unauthorized
- 404 Shop Not Found
- 500 Internal Error
- 401 Unauthorized JWT
- 404 Order not found
- 422 Unprocessable Entity
- '401 Unauthorized: Unauthorized JWT'
- 404 Not Found
- '200: OK'
- '207: OK'
- '422: Unprocessable Entity'
- 200 OK
- '401 Unauthorized: Check API token or permissions'
- '401: Unauthenticated'
- '400: Bad request'
- '404: Not found'
- '401: Unauthorized'
- '404: Subscription group or selection option not found'
- '401 Unauthenticated: Recheck OAuth scopes or token expiration'
- 'invalid_request: The access token is missing'
- '401 Unauthenticated: Check your authentication credentials'
- 'card_expired: This code may help to identify the type of the error.'
- 'payment_method_declined: Payment method was declined.'
- 'out_of_stock_product: Cannot place recurrence order due to missing products in
  stock.'
- 'plugin_event_failed: Indicates a failure in the subscription processing.'
- 'out_of_stock_product: Recurrence order cannot be placed due to missing products
  on stock'
- 'plugin_event_failed: Indicates a failure in plugin event processing'
- 'Unexpected error: A step of subscription creation failed in a way the API did not
  account for.'
- '400 Bad Request: Check the request payload for required fields'
- 'INVALID_REQUEST: Check request formatting and required fields'
- 'UNAUTHORIZED: Check OAuth token and permissions'
- 'NOT_FOUND: Specified resource does not exist'
- '401 Unauthorized: Recheck JWT token or customer authentication.'
auth_info:
  mentioned_objects:
  - OAuthToken
  - APIAccessToken
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.boldcommerce.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
