resources:
- name: static_ip_endpoints
  endpoint:
    path: /static-ip-endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: EdgeWorker
  endpoint:
    path: /edgeworkers
    method: POST
    data_selector: data
- name: static_ip_endpoints
  endpoint:
    path: /static-ip-endpoints
    method: GET
    data_selector: endpoints
- name: validate_request
  endpoint:
    path: /validate-request
    method: GET
- name: EdgeWorker
  endpoint:
    path: /edgeworkers
    method: POST
    data_selector: data
- name: SC-DD_Call
  endpoint:
    path: /validate-request/
    method: GET
    data_selector: response
    params: {}
- name: DD_AssignVariables
  endpoint:
    path: /DD_AssignVariables.js
    method: GET
    data_selector: response
    params: {}
- name: DD_ReadResponse
  endpoint:
    path: /DD_ReadResponse.js
    method: GET
    data_selector: response
    params: {}
- name: DD_ReturnHeaders
  endpoint:
    path: /DD_ReturnHeaders.js
    method: GET
    data_selector: response
    params: {}
- name: RF-DD_Blocked
  endpoint:
    path: /RF-DD_Blocked.xml
    method: GET
    data_selector: response
    params: {}
- name: SC-DD_Call
  endpoint:
    path: /validate-request/
    method: POST
    data_selector: response
    params: {}
- name: CloudFrontDistribution
  endpoint:
    path: /cloudfront/distributions
    method: POST
    data_selector: distribution
    params:
      incremental: DataDomeServerSideKey
- name: CloudFormation
  endpoint:
    path: /cloudformation-template
    method: POST
- name: CloudFrontDistribution
  endpoint:
    path: /cloudfront/distribution
    method: POST
    data_selector: resources
    params:
      incremental: DataDomeServerSideKey
- name: Cloudflare Worker
  endpoint:
    path: /cloudflare-worker
    method: POST
    data_selector: workerData
- name: logpush_job
  endpoint:
    path: /client/v4/accounts/<ACCOUNT_ID>/logpush/jobs
    method: POST
    data_selector: name
    params: {}
- name: Cloudflare Worker
  endpoint:
    path: /docs/cloudflare-worker
    method: GET
- name: logpush_job
  endpoint:
    path: /client/v4/accounts/<ACCOUNT_ID>/logpush/jobs
    method: POST
    data_selector: jobs
    params:
      name: datadome-logs
      output_options:
        field_names:
        - Event
        - EventTimestampMs
        - Outcome
        - Exceptions
        - Logs
        - ScriptName
        timestamp_format: rfc3339
      destination_conf: <DESTINATION>
      dataset: workers_trace_events
      enabled: true
- name: traffic
  endpoint:
    path: /api/v1/traffic
    method: GET
    data_selector: records
- name: logpush_job
  endpoint:
    path: /client/v4/accounts/<ACCOUNT_ID>/logpush/jobs
    method: POST
    data_selector: result
    params: {}
- name: logpush_jobs
  endpoint:
    path: /client/v4/accounts/<ACCOUNT_ID>/logpush/jobs
    method: POST
    data_selector: jobs
    params: {}
- name: enable_logging
  endpoint:
    path: /client/v4/accounts/<ACCOUNT_ID>/workers/scripts/<SERVICE_NAME>
    method: PUT
    data_selector: metadata
    params: {}
- name: client_side_settings
  endpoint:
    path: /client-side-settings
    method: GET
    data_selector: settings
    params: {}
- name: Logpush_configuration
  endpoint:
    path: /docs/logs-integration#available-enriched-headers
    method: GET
- name: clientSideKey
  endpoint:
    path: /dashboard/management/integrations
    method: GET
- name: jsUrl
  endpoint:
    path: /tags.js
    method: GET
- name: jsTagOptions
  endpoint:
    path: /protect-singlepage-app
    method: GET
- name: Traffic Analysis
  endpoint:
    path: /api/traffic
    method: POST
    data_selector: analysisResults
- name: Logpush_configuration
  endpoint:
    path: /logs-integration
    method: GET
    data_selector: Enriched headers
    params: {}
- name: logpush_configuration
  endpoint:
    path: /docs/logs-integration#available-enriched-headers
    method: GET
    data_selector: values
    params: {}
- name: Logpush_configuration
  endpoint:
    path: /docs/logs-integration#available-enriched-headers
    method: GET
    data_selector: values
    params: {}
- name: datadome_worker
  endpoint:
    path: /api/worker
    method: POST
    data_selector: results
- name: datadome_worker
  endpoint:
    path: /api/v2/worker
    method: GET
    data_selector: data
    params: {}
- name: datadome_worker
  endpoint:
    path: /cloudflare_worker_script
    method: POST
    data_selector: content
- name: DATADOME_SERVER_SIDE_KEY
  endpoint:
    params:
      DATADOME_SERVER_SIDE_KEY: '''YOUR_DATADOME_SERVER_KEY'''
- name: DATADOME_CLIENT_SIDE_KEY
  endpoint:
    params:
      DATADOME_CLIENT_SIDE_KEY: ''
- name: DATADOME_JS_URL
  endpoint:
    params:
      DATADOME_JS_URL: <https://js.datadome.co/tags.js>
- name: DATADOME_JS_TAG_OPTIONS
  endpoint:
    params:
      DATADOME_JS_TAG_OPTIONS: '{ "ajaxListenerPath": true }'
- name: DATADOME_TIMEOUT
  endpoint:
    params:
      DATADOME_TIMEOUT: 300
- name: DATADOME_LOGPUSH_CONFIGURATION
  endpoint:
    params:
      DATADOME_LOG_VALUES: []
- name: DATADOME_URI_REGEX_EXCLUSION
  endpoint:
    params:
      DATADOME_URI_REGEX_EXCLUSION: See list of static assets below.
- name: DATADOME_ENABLE_DEBUGGING
  endpoint:
    params:
      DATADOME_ENABLE_DEBUGGING: false
- name: DATADOME_ENABLE_GRAPHQL_SUPPORT
  endpoint:
    params:
      DATADOME_ENABLE_GRAPHQL_SUPPORT: false
- name: DataDome
  endpoint:
    path: /management/integrations
    method: GET
    data_selector: components
- name: envoy
  endpoint:
    path: /envoy
    method: POST
    data_selector: data
    params: {}
- name: datadome_worker
  endpoint:
    path: /management/integrations
    method: GET
    data_selector: resources
    params: {}
- name: f5_irules
  endpoint:
    path: /module-f5-irules
    method: GET
    data_selector: data
- name: envoy
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: fastly_compute_service
  endpoint:
    path: /services/data/v6.0/compute
    method: POST
    data_selector: service
    params: {}
- name: datadome
  endpoint:
    path: /api/v1/protect
    method: POST
    data_selector: response
    params: {}
- name: protection_api
  endpoint:
    path: /protection
    method: GET
    data_selector: data
    params: {}
- name: protection_api
  endpoint:
    path: /api/v2/protection
    method: POST
    data_selector: data
    params: {}
- name: HAProxy
  endpoint:
    path: /haproxy
    method: GET
    data_selector: data
    params: {}
- name: protection_keys
  endpoint:
    path: /dashboard/config/protection/keys
    method: GET
- name: HAProxy Lua Module
  endpoint:
    path: /docs/haproxy-lua-module
    method: GET
    data_selector: records
- name: proxy
  endpoint:
    path: /defaultProxy
    method: GET
    data_selector: proxyaddress
    params: {}
- name: DataDome
  endpoint:
    path: /services/data/vXX.X/sobjects/DataDome
    method: GET
    data_selector: records
    params: {}
- name: IIS
  endpoint:
    path: /docs/iis-aspnet
    method: GET
    data_selector: records
    params: {}
- name: DataDomeConfiguration
  endpoint:
    path: /configuration
    method: GET
    data_selector: data
    params: {}
- name: DataDomeConfiguration
  endpoint:
    path: /DataDomeConfiguration
    method: GET
    data_selector: configuration
    params: {}
- name: DataDomeFilter
  endpoint:
    path: /datadome/filter
    method: GET
    data_selector: records
- name: datadome
  endpoint:
    path: /api
    method: GET
    data_selector: data
- name: datadome
  endpoint:
    path: /services/<YOUR_API>/plugins
    method: POST
    data_selector: null
    params:
      datadome_server_side_key: <server_side_key>
      datadome_timeout: '150'
- name: DataDomeRouteHandler
  endpoint:
    path: /api/v1/route
    method: POST
    data_selector: response
    params: {}
- name: bot_detection
  endpoint:
    path: /api/bot_detection
    method: POST
    data_selector: data
    params:
      incremental: timestamp
- name: datadome
  endpoint:
    path: /services/<YOUR_API>/plugins
    method: POST
    data_selector: ''
    params: {}
- name: middleware
  endpoint:
    path: /middleware
    method: POST
    data_selector: response
    params: {}
- name: DataDome Bot Detection
  endpoint:
    path: /api/v1/bot-detection
    method: POST
    data_selector: data
    params:
      incremental: timestamp
- name: DataDomeMiddleware
  endpoint:
    path: /middleware
    method: POST
    data_selector: records
- name: datadome
  endpoint:
    path: /validate-request/
    method: POST
    data_selector: null
    params: {}
- name: protection_api
  endpoint:
    path: /api/protection
    method: POST
    data_selector: data
    params: {}
- name: Ingress Nginx Controller
  endpoint:
    path: /ingress-nginx/controller
    method: POST
    data_selector: data
    params:
      data_dome_shield_key: YOUR_DATADOME_SERVER_SIDE_KEY
- name: validate_request
  endpoint:
    path: /validate-request/
    method: POST
    data_selector: result
    params:
      timeout: 150
      urlPatternExclusion: \.(avi|flv|mka|mkv|mov|mp4|mpeg|mpg|mp3|flac|ogg|ogm|opus|wav|webm|webp|bmp|gif|ico|jpeg|jpg|png|svg|svgz|swf|eot|otf|ttf|woff|woff2|css|less|js|map|json|avif|xml|gz|zip)$
      endpointHost: api.datadome.co
- name: OpenResty Module
  endpoint:
    path: /openresty
    method: POST
    data_selector: data
    params: {}
- name: datadome_module
  endpoint:
    path: /api
    method: GET
    data_selector: data
- name: varnish_module
  endpoint:
    path: /v1/protect
    method: POST
    data_selector: response
    params: {}
- name: datadome
  endpoint:
    path: /api/v1/protect
    method: POST
    data_selector: data
- name: datadome_javascript_tag
  endpoint:
    path: /f48bsi/tags.js
    method: GET
- name: datadome_javascript_fingerprint
  endpoint:
    path: /f48bsi/js/
    method: POST
- name: data_dome_shield
  endpoint:
    path: /data_dome_shield
    method: POST
    data_selector: response
    params:
      key: data_dome_shield.init
- name: javascript_tag
  endpoint:
    path: /tags.js
    method: GET
- name: datadome_enrichment_api
  endpoint:
    path: /js/
    method: POST
- name: React Native SDKs
  endpoint:
    path: /sdk/react-native
    method: GET
    data_selector: sdk_features
- name: site_protection
  endpoint:
    path: /api/protection
    method: GET
    data_selector: records
    params: {}
- name: DataDome
  endpoint:
    path: https://datadome.co
    method: GET
    data_selector: response
    params: {}
- name: Flutter SDK + Http
  endpoint:
    path: /docs/flutter-sdk-http
    method: GET
- name: Flutter SDK + Dio
  endpoint:
    path: /docs/flutter-plugin-dio-integration
    method: GET
- name: custom_rules
  endpoint:
    path: /api/custom_rules
    method: GET
    data_selector: rules
    params: {}
- name: analyze_traffic
  endpoint:
    path: /analyze/traffic
    method: GET
    data_selector: records
- name: trend_reports
  endpoint:
    path: /dashboard/trend-reports
    method: GET
    data_selector: traffic analytics
    params: {}
- name: traffic_analysis
  endpoint:
    path: /api/v6/traffic
    method: GET
    data_selector: data
    params: {}
- name: trend_reports
  endpoint:
    path: /dashboard/trend-reports
    method: GET
- name: export_report
  endpoint:
    path: /export/report
    method: GET
    data_selector: data
    params: {}
- name: bot_traffic_reports
  endpoint:
    path: /bot/traffic/reports
    method: GET
    data_selector: reports
    params: {}
- name: export
  endpoint:
    path: /export
    method: GET
    data_selector: data
    params: {}
- name: export_report
  endpoint:
    path: /docs/export-a-report
    method: GET
    data_selector: records
    params: {}
- name: bot_traffic_reports
  endpoint:
    path: /docs/bot-traffic-reports
    method: GET
    data_selector: records
    params: {}
- name: export
  endpoint:
    path: /export
    method: GET
    data_selector: statistics
    params: {}
- name: Web (default)
  endpoint:
    path: /
    method: ALL
    data_selector: null
    params: {}
- name: Web (default)
  endpoint:
    path: /
    method: GET
    data_selector: traffic
    params: {}
- name: user_activity
  endpoint:
    path: /user/activity
    method: GET
    data_selector: activities
- name: endpoint_activity
  endpoint:
    path: /endpoint/activity
    method: GET
    data_selector: activities
- name: protection_activity
  endpoint:
    path: /protection/activity
    method: GET
    data_selector: activities
- name: custom_rule_activity
  endpoint:
    path: /custom_rule/activity
    method: GET
    data_selector: activities
- name: proxy_config_activity
  endpoint:
    path: /proxy_config/activity
    method: GET
    data_selector: activities
- name: response_page_activity
  endpoint:
    path: /response_page/activity
    method: GET
    data_selector: activities
- name: security_activity
  endpoint:
    path: /security/activity
    method: GET
    data_selector: activities
- name: integration_activity
  endpoint:
    path: /integration/activity
    method: GET
    data_selector: activities
- name: data_privacy_activity
  endpoint:
    path: /data_privacy/activity
    method: GET
    data_selector: activities
- name: login_event
  endpoint:
    path: /login
    method: POST
    data_selector: LoginEvent
- name: registration_event
  endpoint:
    path: /register
    method: POST
- name: registration_event
  endpoint:
    path: /register
    method: POST
    data_selector: validate
    params: {}
- name: login_event
  endpoint:
    path: /login
    method: POST
    data_selector: body
    params: {}
- name: account_update
  endpoint:
    path: /account
    method: PUT
    data_selector: accountUpdateEvent
    params: {}
- name: password_update
  endpoint:
    path: /password
    method: PUT
    data_selector: result
    params: {}
- name: registration_event
  endpoint:
    path: /register
    method: POST
    data_selector: registrationResponse
- name: registration_event
  endpoint:
    path: /register
    method: POST
    data_selector: user
    params: {}
- name: login_validation
  endpoint:
    path: /v1/validate/login
    method: POST
    data_selector: data
    params: {}
- name: registration_validation
  endpoint:
    path: /v1/validate/registration
    method: POST
    data_selector: data
    params: {}
- name: Account Protect - Failed Login
  endpoint:
    path: /v1/collect/auth0/log-stream
    method: POST
    data_selector: payload
    params: {}
- name: account_update
  endpoint:
    path: /account
    method: PUT
    data_selector: account_update_event
    params: {}
- name: account_protect
  endpoint:
    path: /account/protect
    method: POST
    data_selector: result
- name: password_update
  endpoint:
    path: /password
    method: PUT
    data_selector: result
    params: {}
- name: failed_login_events
  endpoint:
    path: /v1/collect/auth0/log-stream
    method: POST
    data_selector: payload
    params: {}
- name: tracking_parameters
  endpoint:
    path: /ad-networks-tracking-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: ad_fraud_reports
  endpoint:
    path: /api/v1/ad_fraud_reports
    method: GET
    data_selector: data
    params: {}
- name: ad_networks
  endpoint:
    path: /ad_networks
    method: GET
    data_selector: data
    params: {}
- name: Slack
  endpoint:
    path: https://hooks.slack.com/services/[[ID]]/[[ID]]/[[ID]]
    method: POST
    data_selector: notification
    params: {}
- name: Microsoft Teams
  endpoint:
    path: https://yourwebhook.webhook.office.com/webhookb2/[[GUID]]@[[GUID]]/IncomingWebhook/[[GUID]]/[[GUID]]
    method: POST
    data_selector: notification
    params: {}
- name: Logz.io
  endpoint:
    path: https://listener.logz.io:8071/?token=[TOKENVALUE]
    method: POST
    data_selector: notification
    params: {}
- name: Datadog Event
  endpoint:
    path: https://api.datadoghq.com/api/v1/events
    method: POST
    data_selector: notification
    params: {}
- name: Atlassian OpsGenie
  endpoint:
    path: https://api.opsgenie.com/v2/alerts
    method: POST
    data_selector: notification
    params: {}
- name: Splunk OnCall
  endpoint:
    path: https://alert.victorops.com/integrations/generic/[[ID]]/alert/[[GUID]]/datadome
    method: POST
    data_selector: notification
    params: {}
- name: PagerDuty
  endpoint:
    path: https://events.pagerduty.com/v2/enqueue
    method: POST
    data_selector: notification
    params: {}
- name: event_alerts
  endpoint:
    path: /api/v1/events
    method: POST
- name: incoming_webhook
  endpoint:
    path: /webhook/incoming
    method: POST
    data_selector: payload
    params: {}
- name: alerts
  endpoint:
    path: /v2/alerts
    method: POST
    data_selector: data
- name: Slack
  endpoint:
    path: https://hooks.slack.com/services/[[ID]]/[[ID]]/[[ID]]
    method: POST
    data_selector: notification
    params: {}
- name: Microsoft Teams
  endpoint:
    path: https://yourwebhook.webhook.office.com/webhookb2/ [[GUID]]@[[GUID]]/IncomingWebhook/[[GUID]]/[[GUID]]
    method: POST
    data_selector: notification
    params: {}
- name: Logz.io
  endpoint:
    path: https://listener.logz.io:8071/?token=[TOKENVALUE]
    method: POST
    data_selector: notification
    params: {}
- name: Datadog Event
  endpoint:
    path: https://api.datadoghq.com/api/v1/events
    method: POST
    data_selector: notification
    params: {}
- name: Atlassian OpsGenie
  endpoint:
    path: https://api.opsgenie.com/v2/alerts
    method: POST
    data_selector: notification
    params: {}
- name: Splunk OnCall
  endpoint:
    path: https://alert.victorops.com/integrations/generic/[[ID] /alert/[[GUID]]/datadome
    method: POST
    data_selector: notification
    params: {}
- name: PagerDuty
  endpoint:
    path: https://events.pagerduty.com/v2/enqueue
    method: POST
    data_selector: notification
    params: {}
- name: incoming_webhook
  endpoint:
    path: /messaging/webhooks
    method: POST
    data_selector: response
    params: {}
- name: splunk_on_call
  endpoint:
    path: /api/splunk_on_call
    method: POST
    data_selector: payload
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: POST
    data_selector: event
- name: alerts
  endpoint:
    path: /v2/alerts
    method: POST
- name: incoming_webhook
  endpoint:
    path: /messaging/webhooks
    method: POST
    data_selector: notifications
    params: {}
- name: Splunk On-Call / VictorOps
  endpoint:
    path: /dashboard/config/integrations
    method: POST
notes:
- DataDome technology is deployed in several regions to provide the best latency between
  your servers and our regional endpoints.
- In case you need any help in setting up the DataDome module, implementing our API
  or using our Dashboard, our friendly and knowledgeable support team is here to help.
- Ensure that your SiteShield map setup allows traffic worldwide.
- Akamai EdgeWorkers are not allowed to make subrequests to origins that are not on
  the Akamai network.
- Requires setup of DataDome keys in Akamai Property Manager
- Ensure 'EW_DD_LICENSE_KEY' and other variables are correctly set to avoid errors.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Enable protection on specific VirtualHost and Locations directives
- Increase default timeout value to 150ms
- Enhance trace logs to improve human readability
- Add GraphQL support
- If any errors occur during the DataDome process or if the call to DataDome reaches
  a timeout, the integration will assume a 200 for that request and continue the process
  normally.
- If any errors occur during the DataDome process or if the call to DataDome reaches
  a timeout, the integration will automatically assume a 200 for that request and
  continue the process normally.
- License key must be set up for the module to function
- License key must be set up such that this module can function
- The edge integration for Arc XP only supports site settings.
- Including and excluding traffic with URL path configuration is currently not available.
- Some objects may return nulls in deeply nested fields
- Collect `Signature`, `Signature-Agent`, and `Signature-Input` headers from requests
  to support HTTP message signatures as defined by RFC 9421.
- If your CloudFront distribution does not meet all these criteria, the CloudFormation
  stack will fail and log the unmet conditions.
- You understand that manually modifying CloudFront settings, IAM roles, Lambda permissions,
  or behaviors may disrupt DataDome’s protection.
- Configuration is done by filling in CloudFormation Stack parameters.
- Ensure CloudFront distribution meets all criteria to avoid stack failure.
- Requires setup of DataDome server-side key in AWS CloudFormation.
- Your AWS IAM user or role has the necessary permissions to create CloudFront distributions,
  Lambda functions, and CloudFormation stacks.
- Your CloudFront distribution has no existing 403 response page.
- Moving forward, version 2 of DataDome Cloudflare Worker will receive prioritized
  updates and support.
- Uses OAuth2 with refresh token — requires setup of connected app in DataDome
- Moving forward, the version 2 of DataDome Cloudflare Worker will receive prioritized
  updates and support.
- DataDome module doesn't change the default caching policy.
- Logging from workers is a feature that is available for workers only using version
  1.14 (or later) of our module.
- Set the boolean value of the DATADOME_ENABLE_REFERRER_RESTORATION option to true.
- Your DataDome server-side key, found in your dashboard.
- Your DataDome client-side key, found in your dashboard.
- 'Request timeout to DataDome API, in milliseconds: 300'
- Log in Workers logs detailed information about the DataDome process
- Logpush is available to customers on Cloudflare’s Enterprise plan.
- Some objects like Contact may return nulls in deeply nested fields
- Integrate via npm to set up DataDome
- Use the provided keys from the DataDome dashboard for integration
- By default, DataDome logs errors only (such as errors in the configuration). If
  you want to have detailed logs for debugging, you can set DATADOME_ENABLE_DEBUGGING
  to true.
- Requires setup of DataDome keys in the dashboard
- DataDome server-side key, found in the dashboard is required.
- DataDome client-side key, found in the dashboard is required.
- Automatic tag injection is disabled by default.
- Remote Address configuration is mandatory to allow the module to correctly lookup
  for the remote IP address.
- Timeout is set to 150 milliseconds for responses from the Protection API.
- DataDome component needs server-side key and client-side key for integration.
- The module makes a call to one of our Regional Endpoints using a KeepAlive connection.
- If any errors occur during the process, or if the timeout is reached, the module
  will automatically disable its blocking process.
- If this line is commented out, this module may flood the local log if you enabled
  logging for each request
- If any errors were to occur during the process, the module will automatically disable
  its blocking process.
- Utilizes OAuth2 for authentication
- You need to Contact Fastly support to enable some features to be able to use DataDome
  Bot Protection
- The Fastly module doesn't have a dedicated block for settings and you should update
  them in a different location in the file.
- This module is compatible with Big IP >= 12.
- If any errors were to occur during the process, the module will automatically disable
  its blocking process and allow the regular process to proceed.
- Ensure that you have DataDome Fastly module version 2.20.4 or higher
- Starting from version 2.21.0 it is possible to enable graphQL support and extract
  operation type and operation name from the request body
- Starting from version 2.25.0, it is possible to skip the detection based on the
  parameters of incoming requests
- You should create a log publisher in System->Logs->Configuration->Log Publishers
- DataDome server-side key is required.
- DataDome client-side key is recommended.
- Once the change is deployed, DataDome is enabled. You will see the traffic on your
  DataDome dashboard.
- If there is no data appearing in your DataDome dashboard, there might be a configuration
  issue.
- Check the Compute logs for your service in your Fastly dashboard.
- Before integrating DataDome, you need to ask Fastly Support to enable DataDome support
  for your Fastly service
- Starting from version 2.20.4 or higher, ensure that you have DataDome Fastly module
- Starting from version 2.21.0, it is possible to enable GraphQL support
- Both server-side and client-side keys are required for integration.
- The server-side key is available in your DataDome dashboard
- Services can be chained
- Check the Compute logs for your service in your Fastly dashboard
- The server-side key is needed for integration.
- All requests will be processed unless excluded by UrlPatternExclusion.
- Add support of 301/302 redirections returned by the Protection API
- Add debug logs and enhance log outputs
- Uses Google Cloud Load Balancer integration with DataDome module.
- This API supports GraphQL requests.
- DataDome server side key, found on the dashboard
- HAProxy requires version 2.8.3+ with Lua support.
- DATADOME_SERVERSIDE_API_KEY must be set in the HAProxy configuration.
- Set the boolean value of restore_referrer in DATADOME_API_CONFIG option to true
  in the datadome.lua file.
- HAProxy version 2.8.3+ with Lua support is required.
- Since version `1.1.0`, it is possible to restore the `Referer` header to its original
  value for your backend.
- If any errors were to occur during the process, or if the timeout is reached, the
  module will automatically disable its blocking process and allow those hits.
- HAProxy module requires configuration of the API key in spoe-datadome.conf
- The failure_backend must be declared first to display the captcha. It is triggered
  only when the request is blocked by DataDome.
- API connection timeout is set to 150 milliseconds.
- Collect `Signature`, `Signature-Agent`, and `Signature-Input` headers from requests
  to support HTTP message signatures as defined by RFC 9421
- Ensure consistent field ordering to prioritize `Key`, `IP`, and `RequestModuleName`
  in payload to Bot Protect API
- The module can send the request through your proxy server. This can be enabled by
  specifying the proxy address in the Web.config file.
- Uses API key for authentication
- 'The module has been developed to protect the users'' experience: if any errors
  were to occur during the process or if the timeout is reached, the module will automatically
  disable its blocking process and allow those hits.'
- Uses API key for authentication.
- Uses API key for authentication — requires setup of license key
- Use HTTPS as default protocol to connect to Protection API
- Set default timeout to 150ms
- Java Module integration detects and protects against bot activity.
- Using the DataDome module with outbound proxy can slow total time spent calling
  the DataDome API and increase timeouts.
- License key to access API is required.
- Ensure correct setup of OAuth credentials.
- License key to access API is required
- Using the DataDome module with an outbound proxy can slow down the total time spent
  calling DataDome API and increase timeouts. Please adjust timeout settings accordingly.
- This module is developed in Java and integrates smoothly with JakartaEE.
- Uses API key for authentication — ensure to provide the correct license key.
- DataDome requires a license key to access the API.
- Add `useForwarded` parameter to handle the `forwarded` header value with Vert.x
- Update log level to `warning` for closing connection to DataDome to avoid unnecessary
  alerts
- First release
- Uses API key for authentication — requires setup in DataDome dashboard
- DataDome Server Side Key is available inside your Dashboard > Integrations
- Uses debug log level for verbose output
- Connection timeout is set to 150 ms and read timeout to 50 ms.
- Exclusion Regex is defined for certain file types.
- Use Fastly integration version 1.2.224 or higher in Magento
- This integration guarantees the protection of Keycloak services through their supported
  reverse proxies.
- The server-side key must be set in the middleware.
- Client-side key must be set in the DataDomeComponent.
- The DataDome client-side key must be available in the browser, for this reason it
  must match the naming convention defined in the Nextjs documentation and be prefixed
  by NEXT_PUBLIC_.
- Add a DATADOME_SERVER_SIDE_KEY variable inside Your Vercel Project > Project Settings
  > Environment Variables with the server-side key that you can find in the Management
  section of your dashboard.
- Also add a NEXT_PUBLIC_DATADOME_CLIENT_SIDE_KEY variable with the client-side key
  from your dashboard.
- Contact Fastly support to enable DataDome support for your Fastly service.
- Ensure the installed Fastly Magento module is the most up-to-date version.
- Fix missing variables in VCL for Magento integration
- 'Add header `x-sigsci-no-inspection: true` to prevent Next-Gen WAF inspection for
  sub-requests going to DataDome API'
- Add cookie and session ID support
- 'Extract more from headers: Accept, AcceptCharset, AcceptEncoding, AcceptLanguage'
- The middleware needs to be defined in a middleware.js / middleware.ts file.
- This file needs to either declare a export default function or an exported function
  named middleware.
- Requires setup of DataDome License key inside dd-server-secret
- To disable DataDome on a specific domain, update the config section of dd-values.yaml.
- The module can be used with minimal configuration including only the server-side
  key
- DataDome module for Nginx Plus is now installed.
- Ensure to have valid OAuth scopes for API access.
- This implementation provides a basic setup for typical use cases.
- For more advanced configurations, please refer to the new documentation.
- Uses DataDome License key for configuration.
- The server-side key available in your DataDome dashboard is required.
- Ensure to replace the datadome_server_side_key with the key found in your dashboard
- Enable GraphQL support if necessary
- Starting with version 1.3.0 of DataDome OpenResty module, it is possible to enable
  GraphQL support.
- The constructor of each module accepts an object as its second parameter to customize
  the behavior of the module.
- Mandatory environment variable DATADOME_SERVER_SIDE_KEY must be set.
- Make sure to replace the datadome_server_side_key
- Make sure to replace the lua_ssl_trusted_certificate
- Update DataDome JS Tag URL when using a first-party host.
- GraphQL support is available.
- Please contact your POQ Commerce Technical Account Manager to enable DataDome on
  your website.
- The default timeout configured in int_datadome.protection.api.profile is 150 milliseconds.
  Do not change this value unless advised otherwise by DataDome.
- The default values are already set. Therefore, you don’t need to change any values
  unless otherwise needed.
- Value of your Server Side Key available in the dashboard.
- The server-side key available in your DataDome dashboard
- The client-side key available in your DataDome dashboard
- Moving forward, the `SalesforceCommerceCloud` cartridge will receive prioritized
  updates and support.
- Enable DataDome Bot Protect Cartridge is required.
- DataDome Server-side API Key is required.
- The DataDome plugin must be added to the existing list of custom Tyk middleware.
- Set the boolean value of the datadome_enable_referrer_restoration option to true.
- The DataDome cartridge has been tested against SFRA v5.0.1, SG v105.0.0 and in compatibility
  mode with v19.10, v18 and v10.
- The default timeout configured in int_datadome.protection.api.profile is 150 milliseconds.
- Requires setup of connected app in DataDome
- Moving forward, the SalesforceCommerceCloud cartridge will receive prioritized updates
  and support. This ensures ongoing improvements in security, performance, and ease
  of use, while this old cartridge will see limited future development.
- Varnish performs a DNS lookup on startup to identify our endpoint.
- The module doesn't impact the Varnish caching logic because when the request is
  allowed, the original Varnish process is restored.
- Disabled sending Cookies and Body to API server by default
- Set the boolean value of the `datadome_enable_referrer_restoration` option to `true`.
- Highly recommended to load the JS Tag first or as early as possible to ensure interception
  of protected requests.
- Starting from version 1.15.0, when initializing the SDK, you must provide the base
  URL of your app’s API domain using the DataDomeConfiguration parameter.
- DataDome cookie is synchronized when the WebView finishes loading, or when the page
  is paused, closed or destroyed.
- 'Not covered cases: Cookie has been updated via non-trackable events (e.g. XHR,
  JS HTTP requests) and no UI state changes has been detected.'
- Highly recommended to load the JS Tag first or as early as possible to ensure interception
  of protected requests
- This release does not contain any breaking change.
- From Android SDK 1.9.1 when Captcha page is canceled by pressing the back or home
  button, the blocked response is forwarded to the application.
- Integration in a complex architecture
- Integration in a project with several different HTTP clients or network layers
- Integration in a project using another HTTP client that is not yet supported
- DataDome collects minimal, non-personal data from users to improve the detection.
- Make sure the BLOCKUA user agent is not used in production. Otherwise, the Captcha
  will appear at least once for each user.
- Integration within SFCC is only supported through OkHttp Integration. Manual integration
  is not supported yet.
- Enable bypassAcceptHeader at the SDK initialization
- Disable OkHttp client redirection
- Prevent duplicate requests from being sent on retries when a captcha is canceled.
- Enhance captcha Webview security by disabling potential exploitable methods.
- By default the DataDomeSDK will set the Accept header of your HTTP requests to application/json
  if it was empty.
- Doing so could cause the Captcha response to not be formatted in JSON, if this were
  to be the case, the Captcha page would not be displayed by the SDK.
- The DataDome interceptor will react only to responses with 403 response code.
- We strongly recommend using OkHttp integration whenever possible.
- Swift Package Manager with Xcode 12 or Cocoapods version 1.10 or earlier
- 'Starting from Version 2.0 up to Version 2.4, versioning is done using the following
  pattern: major.minor.x where x is the version of Xcode (112 for Xcode 11.2, 113
  for Xcode 11.3, 114 for Xcode 11.4, 115 for Xcode 11.5, 116 for Xcode 11.6 and 120
  for Xcode 12.0 beta)'
- Enable bypassAcceptHeader at the SDK initialization.
- 'Versioning is done using the following pattern: `major`.`x`.`minor` where x is
  the version of xcode (112 for `xcode 11.2`, 113 for `xcode 11.3`, 114 for `xcode
  11.4`, 115 for `xcode 11.5` and 116 for `xcode 11.6`)'
- 'Starting from Version 2.0 up to Version 2.4, versioning is done using the following
  pattern: `major`.`minor`.`x` where x is the version of Xcode (112 for `Xcode 11.2`,
  113 for `Xcode 11.3`, 114 for `Xcode 11.4`, 115 for `Xcode 11.5`, 116 for `Xcode
  11.6` and 120 for `Xcode 12.0 beta`)'
- Swizzling is activated by default, this means that if you wish to protect all of
  your HTTP request made by the above methods, you have nothing else to do.
- On versions older than 3.6.0 only, you will also have to set DataDomeSDK.bypassHTTPAccept
  = true to display the captcha correctly.
- Deactivate the automatic interception by adding <key>DataDomeProxyEnabled</key><false/>
  to your info.plist file.
- Deactivate the automatic interception by setting DataDomeProxyEnabled to false in
  info.plist.
- This SDK is deprecated and is no longer maintained by the community.
- You will need to implement this method from the URLSessionTaskDelegate to handle
  captcha.
- When using Alamofire, make sure you call .validate() for each request to make sure
  Alamofire does call the retry function and hands the execution to the DataDome SDK
  in case of a 403 response with a Captcha Challenge.
- If you are creating an instance of URLRequest and passing it to Alamofire Session
  Manager, make sure to hint iOS to handle cookies otherwise, you may experience captcha
  loops in the app.
- The SDKs are doing most of the work, so you normally don't have to manipulate the
  DataDome cookie.
- Losing this cookie means loosing all information about the current session, and
  this can lead to more DataDome CAPTCHA or Device Check.
- DataDome does not link the collected data to the identity of the user by any means.
- To test your integration, you need to activate the protection on your endpoints
- The DataDome cookie is used to keep information about the end user's session.
- Losing the cookie means losing all information about the current session.
- To make sure that we can provide optimum support to our customers, we are focusing
  our efforts on the React Native versions actively supported by the React Native
  developers policy.
- Do not use the BLOCKUA User-Agent in production
- Do not use the `BLOCKUA` User-Agent in production
- Requires setup of connected app in api
- DataDome handles 403 API responses, generated by DataDome server-side integration,
  in order to display the associated Captcha pages.
- CocoaPods installation may occasionally fail, which is a known React Native issue.
  It is suggested that you clear the `ios/build/` directory and run a fresh pod installation.
- First version of the DataDome Module for superagent. Please visit the documentation
  for more details on how to integrate and operate the module.
- The CocoaPods installation may occasionally fail, which is a known React Native
  issue. It is suggested that you clear the ios/build/ directory and run a fresh pod
  installation.
- If your protection coverage is not 100%, it may indicate that something is wrong
  in your endpoint configuration.
- Protection will be effective only when you switch ON Global protection.
- Ensure to create your own rules in the Access Control section.
- Protection will be effective only when you switch ON Global protection
- Allow response is not supported for AI Threats Detection models, please use the
  disable feature instead.
- When a model is disabled, it won't match any traffic anymore on the associated criteria
  and the corresponding response will be deactivated.
- A Verified Bot can be a bot created by commercial companies collecting and exploiting
  content (their identity is transparent) or a bot adding value or traffic to websites.
- The Access Control section provides all you need to modify the DataDome default
  protection and customize it by creating your own rules.
- You can add up to 1000 custom rules to your dashboard, creating each rule based
  on a query up to 1000 characters long.
- Allow, Timeboxing, and Rate Limiting responses can only be used for Verified Bots-associated
  rules and custom rules.
- Only 'Admin' and 'Editor' users have the right to add rules.
- Endpoints are currently configured by DataDome.
- Only the first 100 groups of requests are displayed here.
- Scrolling down loads more requests, up to 1000.
- If one of your domain is not using DataDome Captcha, you won't be capable of seeing
  all these metrics on this given domain and on the 'All domains' settings of the
  top-filter.
- 'Data retention: Historical depth will eventually reach 24 months.'
- Plan restriction for all dimensions, activity is limited to the last 30 days for
  Corporate plan subscribers.
- If you're searching for information about how to configure endpoints, please go
  read the page instead.
- Data retention for trend reports is up to 24 months.
- Ensure proper OAuth2 authentication setup.
- Data export may require specific permissions.
- Data export functionality is available.
- 'Reports'' frequencies are as follows: Weekly report: each Friday at 8:00 am, Daily
  report: each day at 8:00 am'
- Default endpoint cannot be reordered or deleted.
- Only 'Admin' and 'Editor' users have the right to access this page.
- Only 'Admin' can add, edit or delete proxies.
- Admin users can disable Two-Factor Authentication for users.
- This feature is only available for Corporate and Enterprise plans.
- You must activate Two-Factor Authentication on your personal profile before you
  can enforce it for all users.
- This feature is only available to Enterprise plans.
- Web (default) endpoint cannot be reordered or deleted.
- If you selected multiple workspaces, please note that this roles will be applied
  across all the selected workspaces.
- Every Identity Provider is different and you may need to adapt this configuration.
- Your CAA DNS record for the root domain of your First Party JS Tag domain should
  allow Let's Encrypt to issue SSL certificates for your root domain.
- Up to 100 custom templates can be added.
- The Audit Trail feature is only accessible to Enterprise plans and Admin users.
- You must select only one user to export all the trails. Exporting all trails for
  more than one user at once is not supported.
- These features are only accessible to Admin users.
- Be careful since it could impact the DataDome's detection, reach out to the Support
  Team for advice if needed
- Uses SAML 2.0 to automate the process of creating, updating, and managing user accounts.
- If you map DataDome role 'viewer' to one of your roles on your Identity Provider,
  all your current users with this role will become 'viewer' on the DataDome Dashboard.
- Workspaces are available starting from Enterprise plans.
- The server-side key must remain private and not be shared outside of your organization.
- The client-side key can be used publicly.
- Fields and values are case sensitive.
- Account Protect is separate from Bot Protect and is not available on your account
  by default.
- This service requires a dedicated API key, which will be available on your dashboard
  once it is enabled.
- 30-days by default (7-days if you're on a Business Plan)
- Cookie Lifetime can be chosen from 7-days to 1 year
- Requires API key to be set as an environment variable.
- Each Workspace runs separate detection models and protection rules, optimized on
  real traffic samples.
- Invalid keys are detected when calling the account protect API. The SDK will return
  an `allow` response to avoid blocking any login or registration attempt on the application.
- Setting up an automated feedback loop can be done with the /feedback API
- Uses API Key for authentication
- Ensure to set the DATADOME_FRAUD_API_KEY in the environment
- Account Protect is separate from Bot Protect and is not available on your account
  by default. Please contact your account manager to enable it.
- If the configured timeout is reached, the SDK will cancel its pending operation.
- Requires valid account and session identifiers for login events
- If the configured timeout is reached, the SDK will cancel its pending operation
  and allow the application to proceed.
- 'Errors and timeouts are handled the same way by the SDK: it will not interrupt
  the application and allow it to proceed.'
- Invalid keys are detected when calling the account protect API. The SDK will return
  an 'allow' response to avoid blocking any login or registration attempt.
- Uses API key for authentication — requires setup of environment variable
- The SDK will return an allow response to avoid blocking any login or registration
  attempt on the application if the API key is incorrect.
- Send all failed login events to DataDome Account Protect.
- Allows you to analyze your traffic by grouping it along dimensions.
- The SDK allows the application to proceed when the configured timeout is reached.
- Ad Protect actively excludes fraudulent sources from ad campaigns in real time.
- This capability is currently available only for Google Ads campaigns.
- 'Authorization Token: The Account Protect Key available on your Dashboard'
- 'Content Type: application/json'
- 'Content Format: JSON Object'
- 'Filter by Event Category: Login - Failure'
- For the protection to work, DataDome must get the necessary authorizations on Google
  Ads.
- Allows you to analyze your traffic by grouping it along dimensions such as List
  of Event and Event group by account.
- In your Microsoft administration page, select 'Campaigns'
- Access the tab 'Account level options'
- Scroll down under 'Auto-tagging of Click ID' and check the box 'Microsoft Click
  ID (MSCLKID) to URLs to allow conversion tracking'
- 'Under ''Final URL suffix'' add the following text: dd=1&ddsrc=ms&ddcmp={Campaign}&ddcmpid={CampaignId}&ddkw={keyword:default}&dddv={Device}&ddnw={Network}&ddag={AdGroup}&ddmt={MatchType}'
- Any automated request coming from an unauthenticated bot is categorized as a 'Bad
  Bot' and is blocked by default.
- DataDome classifies and authenticates thousands of Commercial bots.
- CAPTCHA is enabled by default.
- CAPTCHA has been tested from several towns in China.
- DataDome monitors traffic in real time for ad fraud detection.
- No personal information is collected by DataDome CAPTCHA. Only technical and behavioral
  details are inspected.
- Ensure you have the Admin role for access.
- Key name is immutable after creation.
- DataDome must get the necessary authorizations on Google Ads.
- A user that has both DataDome and Google Ads administrative rights is required.
- Setting up tracking parameters is not mandatory, but provides more relevant analytics
  on your campaigns.
- DataDome can be used with any major CDN.
- The default configuration works properly with the DataDome Module.
- This feature is available for Corporate and Enterprise plans.
- DataDome provides a detailed matrix of PCI DSS requirements.
- Operations such as blocking, tampering, or deleting the data listed above can result
  in issues or unexpected behaviors.
- DataDome CAPTCHA is enabled by default.
- DataDome CAPTCHA works in China (Behind the China Firewall).
- The Management API Key is not enabled by default.
- Please contact your Technical Account Manager to enable it.
- Fix the authentication to DataDome API from query param to header
- DataDome considers all IP ranges used by Akamai, CloudFlare, Verizon, Level 3, and
  OVH as 'Trusted Proxy'.
- When detection is disabled, all headers that can return `NA` will be set to `NA`.
- You need to add datadome headers in Elasticsearch output configuration
- A timeout of 5 seconds is applied to the sent requests.
- The authentification has to be done inside the URL.
- Please note that a timeout of 5 seconds is applied to the sent requests.
- Request timeout of 5 seconds is applied to the sent requests.
- 'The URL depends on the region you use: US Region: https://api.opsgenie.com/v2/alerts,
  EU Region: https://api.eu.opsgenie.com/v2/alerts'
- Uses OAuth2 for authentication
- Integrate via Wrangler
- DataDome F5 iRules integration detects and protects against bot activity.
- DataDome Go Integration build detects and protects against bot activity
- DataDome HAProxy module detects and protects against bot activity.
- DataDome Online Fraud & Bot Management
- DataDome OpenResty module detects and protects against bot activity.
- DataDome Ingress Nginx detects and protects against bot activity
- DataDome Salesforce Cartridge detects and protects against bot activity on Salesforce
  Commerce Cloud.
- Integrate via SDKs for various platforms.
- Server-side integration documentation available
- Client-side integration documentation available
- Integrate the DataDome Plugin for Flutter
- Manage DataDome Protection
- Analyze your traffic
errors:
- '401 Unauthorized: Recheck your API keys.'
- '408 Request Timeout: Review the DataDome timeout settings.'
- '400 Bad Request: Check the request parameters and payload'
- '401 Unauthorized: Verify DataDome keys'
- '404 Not Found: Check the endpoint path'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'CREATE_FAILED: Check the CloudFormation template and parameters.'
- 'CREATE_FAILED: Refer to the Troubleshooting section for steps to diagnose and resolve
  the issue.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check API token validity'
- '403 Forbidden: API access denied'
- '401 Unauthorized: Ensure API_KEY is valid.'
- '408 Request Timeout: Check API_TIMEOUT settings.'
- 'DATADOME_TIMEOUT: The request timeout for DataDome API, in milliseconds'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your credentials'
- 'Error: DataDome:Configuration:Config Store ''datadome'' must be linked to this
  service'
- 'Error: DataDome:Configuration:''datadome_server_side_key'' is missing from Config
  Store'
- 'Error while running request handler: Requested backend named ''origin'' does not
  exist'
- 'Error: DataDome:Configuration:TypeError: Requested backend named ''datadome'' does
  not exist'
- 'Warn: DataDome:Timeout:NetworkError: HTTP response timeout'
- '401 Unauthorized: Check your API keys and permissions'
- '403 Forbidden: Ensure your request is allowed by the current settings'
- '403 Forbidden: Check if the request is blocked by DataDome'
- '403 Forbidden: Check API key permissions'
- '408 Request Timeout: Increase timeout settings'
- 400 - Bad Request (Invalid DataDome Key ?)
- 504 - API Server times out
- 503 - Invalid response from API Server
- 'blocked: Request is blocked by DataDome'
- '1: A timeout occurred during the event processing'
- '2: An error was triggered during the resource allocation'
- '5: The frame processing has been interrupted by HAProxy'
- '255: An unknown error occurred during the event processing'
- 'Higher than 256: A SPOP error occurred during the event processing'
- 'REQUEST_TIMEOUT: The module will automatically disable its blocking process and
  allow those hits.'
- 'Unauthorized: Check your LicenseKey'
- 'Timeout: Increase the Timeout setting'
- '200: Successful request'
- '403: Blocked request'
- '401: Unauthorized request'
- '401 Unauthorized: Recheck API key.'
- '401 Unauthorized: Check your credentials and permissions.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '404 Not Found: Check the API endpoint'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key validity'
- Ensure datadome_server_side_key is provided
- 'REQUEST_TIMEOUT: Adjust connection and read timeout settings.'
- 'INVALID_API_KEY: Check if the API Key is correct'
- 'TIMEOUT: Increase the connection timeout settings'
- 'Invalid API Key: Check your DataDome License key'
- 'API Timeout: Increase the datadome_timeout setting'
- '403 Forbidden: Check your server-side key or permissions.'
- '401 Unauthorized: Check your API Key and permissions.'
- '408 Request Timeout: Increase connection timeout settings.'
- '403 Forbidden: Check server-side key and configuration.'
- '401 Unauthorized: Check DataDome License key'
- '401 Unauthorized: Check authentication credentials.'
- '429 Too Many Requests: Slow down request rate.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key'
- '404 Not Found: Ensure the endpoint is correct'
- 'Invalid API key: Check the provided API key.'
- 'Request timeout: Increase the timeout setting.'
- '404 Not Found: Check the endpoint URL'
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: Check request format or parameters'
- '401 Unauthorized: Check API server configuration'
- '403: Blocked by Captcha'
- '403: Captcha required'
- To test that your integration is functional, you may want to try to display a Captcha.
- '403: The plugin will react to the blocked request'
- '403: Blocked request - challenge displayed'
- '403: Blocked request due to BLOCKUA User-Agent'
- '403: Blocked request due to protection module'
- '403: Blocked request, displaying challenge'
- 'DATADOME ERROR: Problem on parsing of DataDomeResponse (No url object)'
- 'DATADOME ERROR: Can''t show captcha page (No container)'
- 'DATADOME ERROR: Can''t show captcha page (One is already in progress)'
- 'DATADOME ERROR: Don''t put cookie headers on iOS. (Cookie handled automatically
  by iOS)'
- 'DATADOME ERROR: Captcha page closed before being passed'
- '403 code: The plugin will react to the blocked request'
- '401 Unauthorized: Check your API credentials.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check API key or permissions.'
- '403 Forbidden: Access denied by Account Protect API.'
- 'REQUEST_TIMEOUT: The SDK will cancel its pending operation and allow the application
  to proceed.'
- '401 Unauthorized: Check your API key and permissions'
- Invalid keys are detected when calling the account protect API.
- '401 Unauthorized: Invalid API key or credentials'
- '403 Forbidden: Access denied by the account protection API'
- Invalid keys are detected when calling the account protect API. The SDK will return
  an `allow` response to avoid blocking any login or registration attempt on the application.
- '401 Unauthorized: Invalid API key.'
- 'failure: Invalid API key detected.'
- '401 Unauthorized: Access denied due to invalid API key'
- 'REQUEST_TIMEOUT: The operation will be canceled if the configured timeout is reached.'
- 'FAILURE: Invalid API key or other issues.'
- '401 Unauthorized: Recheck API key'
- Invalid API key will return a failure status but will not block login attempts.
- 'REQUEST_TIMEOUT: A timeout of 5 seconds is applied to the sent requests.'
auth_info:
  mentioned_objects:
  - Server Side Key
  - Client Side Key
  - DATADOME_SERVER_SIDE_KEY
  - DATADOME_CLIENT_SIDE_KEY
  - DATADOME_ENDPOINT
  - DATADOME_TIMEOUT
  - DATADOME_URL_PATTERN_INCLUSION
  - DATADOME_URL_PATTERN_EXCLUSION
  - Server-side key
  - API endpoint URL
  - DataDome Timeout
  - Regex URL inclusion pattern matcher
  - Regex URL exclusion pattern matcher
  - datadome_server_side_key
  - RegistrationEvent
  - Authentication
  - Session
  - PasswordUpdateEvent
  - DataDomeResponse
client:
  base_url: https://api.datadome.co
source_metadata: null
