resources:
- name: google_pay_push_provisioning
  endpoint:
    path: /api/v1/card/google-pay/push-provisioning
    method: POST
    data_selector: ''
- name: google_pay_push_provisioning
  endpoint:
    path: /card/google-pay/push-provisioning
    method: POST
    data_selector: encryptedData
- name: crypto_onramps
  endpoint:
    path: /reference/crypto-on-ramps
    method: GET
- name: money_movement_apis
  endpoint:
    path: /reference/getting-started-with-your-api
    method: GET
- name: kyc_status
  endpoint:
    path: /reference/get-kyc-status
    method: GET
- name: create_user
  endpoint:
    path: /reference/create-user
    method: POST
- name: validate_ip_region
  endpoint:
    path: /reference/validate-ip-region
    method: POST
- name: Get Allowed Wallet Currencies
  endpoint:
    path: /get-allowed-wallet-currencies
    method: GET
- name: Get Whitelisted User Destination Addresses
  endpoint:
    path: /get-whitelisted-user-destination-addresses
    method: POST
- name: Create Wallet
  endpoint:
    path: /create-wallet
    method: POST
- name: Create User
  endpoint:
    path: /reference/create-user
    method: POST
- name: Get User By ID
  endpoint:
    path: /reference/get-user-details
    method: GET
- name: Get KYC Status
  endpoint:
    path: /reference/get-kyc-status
    method: GET
- name: Create Business
  endpoint:
    path: /reference/post_create-1
    method: POST
- name: Get Business by ID
  endpoint:
    path: /reference/get_businessid
    method: GET
- name: Get Corporate Account Statement
  endpoint:
    path: /reference/get-corporate-account-statement
    method: POST
- name: initiate_sepa_payment
  endpoint:
    path: /reference/initiate-sepa-payment
    method: POST
- name: get_user_by_email
  endpoint:
    path: /reference/get-user-by-email
    method: POST
- name: create_user
  endpoint:
    path: /reference/create-user
    method: POST
- name: get_kyc_status
  endpoint:
    path: /reference/get-kyc-status
    method: GET
- name: get_account_statement
  endpoint:
    path: /reference/get-account-statement
    method: POST
- name: create_wallet
  endpoint:
    path: /reference/create-wallet
    method: POST
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: Create User
  endpoint:
    path: /reference/create-user
    method: POST
- name: Get User By ID
  endpoint:
    path: /reference/get-user-details
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: POST
    data_selector: response
- name: ping
  endpoint:
    path: /ping
    method: POST
- name: ping
  endpoint:
    path: /ping
    method: POST
    data_selector: response
    params: {}
- name: card_authorization
  endpoint:
    path: /simulate/card/authorization
    method: POST
    data_selector: data
- name: fetch_user_pii_data
  endpoint:
    path: /reference/fetch-user-pii-data
    method: POST
    data_selector: data
    params: {}
- name: verify_user_mobile
  endpoint:
    path: /reference/verify-mobile-number
    method: POST
    data_selector: data
    params: {}
- name: resend_sms
  endpoint:
    path: /reference/resend-sms
    method: POST
    data_selector: data
    params: {}
- name: verify_user_email
  endpoint:
    path: /reference/verify-email-address
    method: POST
    data_selector: data
    params: {}
- name: resend_email
  endpoint:
    path: /reference/resend-email
    method: POST
    data_selector: data
    params: {}
- name: get_kyc_status
  endpoint:
    path: /reference/get-kyc-status
    method: GET
    data_selector: data
    params: {}
- name: start_kyc
  endpoint:
    path: /reference/start-kyc
    method: POST
    data_selector: data
    params: {}
- name: Start KYC
  endpoint:
    path: /start-kyc
    method: POST
    data_selector: data
    params: {}
- name: Start KYB
  endpoint:
    path: /start-kyb
    method: POST
    data_selector: data
    params: {}
- name: Get KYC Status
  endpoint:
    path: /get-kyc-status
    method: GET
    data_selector: data
    params: {}
- name: Get KYB Status
  endpoint:
    path: /get_kyb-businessid
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /webhook-endpoints
    method: POST
    data_selector: webhooks
- name: card_transaction_events
  endpoint:
    path: /webhook/card-transaction-events
    method: POST
    data_selector: events
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: POST
    data_selector: null
    params: {}
- name: transaction_status_updates
  endpoint:
    path: /tx
    method: POST
    data_selector: null
    params: {}
- name: card_status_updates
  endpoint:
    path: /card/watch
    method: POST
    data_selector: null
    params: {}
- name: KYC Status Update
  endpoint:
    path: /kyc
    method: POST
    data_selector: KYCStatusWebhook
    params: {}
- name: user_terminations
  endpoint:
    path: /webhooks/kyc/status/terminations
    method: POST
    data_selector: records
    params: {}
- name: kyb_status
  endpoint:
    path: /kyb
    method: POST
    data_selector: businessId
    params: {}
- name: get_kyb_status
  endpoint:
    path: /get_kyb-businessid
    method: GET
    data_selector: businessId
    params: {}
- name: card_transaction_webhooks
  endpoint:
    path: /reference/card-transaction-webhooks
    method: POST
- name: card_authorization
  endpoint:
    path: /card_authorization
    method: POST
    data_selector: notification
- name: card_authorization_declined
  endpoint:
    path: /card_authorization_declined
    method: POST
    data_selector: notification
- name: card_authorization_reversal
  endpoint:
    path: /card_authorization_reversal
    method: POST
    data_selector: notification
- name: card_authorization_release
  endpoint:
    path: /card_authorization_release
    method: POST
    data_selector: notification
- name: card_authorization_settlement_confirmed
  endpoint:
    path: /card_authorization_settlement_confirmed
    method: POST
    data_selector: notification
- name: Get Transactions By Id
  endpoint:
    path: /reference/get-transactions-by-id-1
    method: GET
- name: Resend OTP for transaction
  endpoint:
    path: /reference/resend-otp-for-transaction
    method: POST
- name: Confirm transaction with OTP
  endpoint:
    path: /reference/confirm-transaction-with-otp
    method: POST
- name: Validate IP Region
  endpoint:
    path: /reference/validate-ip-region
    method: POST
- name: Initiate Bitcoin Lightning Withdrawal
  endpoint:
    path: /reference/initiate-bitcoin-via-lightning
    method: POST
- name: Deposit via Lightning
  endpoint:
    path: /reference/initiate-topup-via-lightning
    method: POST
- name: Initiate Onchain Withdrawal
  endpoint:
    path: /reference/initiate-onchain-withdrawal
    method: POST
- name: Get Withdrawal Fee Estimate
  endpoint:
    path: /reference/get-onchain-withdrawal-fee-estimates
    method: POST
- name: Get Whitelisted User Destination Addresses
  endpoint:
    path: /reference/get-whitelisted-user-destination-addresses
    method: POST
- name: Whitelist Destination Address
  endpoint:
    path: /reference/whitelist-destination-address
    method: POST
- name: Initiate SEPA Payment
  endpoint:
    path: /reference/initiate-sepa-payment
    method: POST
- name: Initiate Interledger Transaction
  endpoint:
    path: /reference/initiate-interledger-transaction
    method: POST
- name: Initiate Intraledger Transaction
  endpoint:
    path: /reference/initiate-intraledger-transaction
    method: POST
- name: Get Account By Id
  endpoint:
    path: /reference/get-account-by-id
    method: POST
- name: Get Account Statement
  endpoint:
    path: /reference/get-account-statement
    method: POST
- name: intra_ledger_send
  endpoint:
    path: /webhooks/intra_ledger_send
    method: POST
    data_selector: type
    params: {}
- name: inter_ledger_send
  endpoint:
    path: /webhooks/inter_ledger_send
    method: POST
    data_selector: type
    params: {}
- name: webhook_notifications
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: data
    params: {}
- name: crypto_deposit_withdrawal_webhooks
  endpoint:
    path: /webhook/crypto-deposit-withdrawal
    method: POST
- name: on_chain_deposit_pending
  endpoint:
    path: /webhooks/on_chain_deposit_pending
    method: POST
    data_selector: pending
    params: {}
- name: on_chain_deposit_confirmed
  endpoint:
    path: /webhooks/on_chain_deposit_confirmed
    method: POST
    data_selector: confirmed
    params: {}
- name: on_chain_withdrawal_initiated
  endpoint:
    path: /webhooks/on_chain_withdrawal_initiated
    method: POST
    data_selector: type
    params: {}
- name: on_chain_withdrawal_pending
  endpoint:
    path: /webhooks/on_chain_withdrawal_pending
    method: POST
    data_selector: type
    params: {}
- name: on_chain_withdrawal_confirmed
  endpoint:
    path: /webhooks/on_chain_withdrawal_confirmed
    method: POST
    data_selector: type
    params: {}
- name: application_fee_collected
  endpoint:
    path: /webhooks/application_fee
    method: POST
    data_selector: type
    params: {}
- name: network_fee
  endpoint:
    path: /webhooks/network_fee
    method: POST
    data_selector: type
    params: {}
- name: on_chain_withdrawal_failed
  endpoint:
    path: /webhooks/on_chain_withdrawal_failed
    method: POST
    data_selector: type
    params: {}
- name: SEPA_PAYIN_COMPLETED
  endpoint:
    path: /webhooks/sepa/payin/completed
    method: POST
    data_selector: notification
    params: {}
- name: SEPA_PAYOUT_INITIATED
  endpoint:
    path: /webhooks/sepa/payout/initiated
    method: POST
    data_selector: notification
    params: {}
- name: SEPA_PAYOUT_COMPLETED
  endpoint:
    path: /webhooks/sepa/payout/completed
    method: POST
    data_selector: notification
    params: {}
- name: SEPA_PAYOUT_FAILED
  endpoint:
    path: /webhooks/sepa/payout/failed
    method: POST
    data_selector: notification
    params: {}
- name: SEPA_PAYOUT_DENIED
  endpoint:
    path: /webhooks/sepa/payout/denied
    method: POST
    data_selector: notification
    params: {}
- name: lightning_transaction
  endpoint:
    path: /lightning/transaction
    method: POST
    data_selector: transactions
    params: {}
- name: contract_call_pending
  endpoint:
    path: /contract_call/pending
    method: POST
    data_selector: type
    params: {}
- name: contract_call_network_fee
  endpoint:
    path: /contract_call/network_fee
    method: POST
    data_selector: type
    params: {}
- name: contract_call_confirmed
  endpoint:
    path: /contract_call/confirmed
    method: POST
    data_selector: type
    params: {}
- name: Swap Fee Collection Webhook
  endpoint:
    path: /webhooks/swap-fee-collection
    method: POST
    data_selector: type
    params: {}
- name: currency_swap
  endpoint:
    path: /reference/swap-currencies
    method: POST
- name: currency_exchange_initiated
  endpoint:
    path: /currency/swap/initiate
    method: POST
    data_selector: data
- name: currency_exchange_completed
  endpoint:
    path: /currency/swap/complete
    method: POST
    data_selector: data
- name: currency_exchange_failed
  endpoint:
    path: /currency/swap/fail
    method: POST
    data_selector: data
- name: intra_ledger_send
  endpoint:
    path: /currency/intra_ledger/send
    method: POST
    data_selector: data
- name: account_enrichment_webhooks
  endpoint:
    path: /reference/account-enrichment-webhooks
    method: GET
    data_selector: webhook_examples
- name: fee_collection_webhooks
  endpoint:
    path: /reference/fee-collection-webhooks
    method: GET
    data_selector: webhook_examples
- name: account_creation_fee
  endpoint:
    path: /account_creation_fee
    method: POST
    data_selector: uid
- name: refund_account_creation_fee
  endpoint:
    path: /refund_account_creation_fee
    method: POST
    data_selector: uid
- name: pending_account_enrichment
  endpoint:
    path: /pending_account_enrichment
    method: POST
    data_selector: uid
- name: card_dispatch
  endpoint:
    path: /webhooks/card-dispatch
    method: POST
    data_selector: dispatch
    params: {}
- name: apple_pay_incentive
  endpoint:
    path: /webhooks/apple-pay-incentive
    method: POST
    data_selector: incentive
    params: {}
- name: card_expired_webhook
  endpoint:
    path: /webhooks/card-expired
    method: POST
    data_selector: data
    params: {}
- name: card_closed_webhook
  endpoint:
    path: /webhooks/card-closed
    method: POST
    data_selector: data
    params: {}
- name: Standing Orders
  endpoint:
    path: /reference/standing-orders
    method: POST
- name: standing_order_event
  endpoint:
    path: /standing-order/webhook
    method: POST
    data_selector: events
- name: get_cards_by_user
  endpoint:
    path: /reference/get-cards-by-user
    method: GET
- name: get_card_statement
  endpoint:
    path: /reference/get-card-statements
    method: GET
- name: block_card
  endpoint:
    path: /reference/block-card
    method: POST
- name: unblock_card
  endpoint:
    path: /reference/unblock-card
    method: POST
- name: replace_card
  endpoint:
    path: /reference/replace-card
    method: POST
- name: activate_anonymous_card
  endpoint:
    path: /reference/activate-anonymous-card
    method: POST
- name: activate_physical_card
  endpoint:
    path: /reference/activate-card
    method: POST
- name: report_card_missing
  endpoint:
    path: /reference/report-card-lost
    method: POST
- name: set_card_pin
  endpoint:
    path: /reference/set-pin
    method: PATCH
- name: update_3d_secure_settings
  endpoint:
    path: /reference/update-3ds-settings
    method: PATCH
- name: update_card_settings
  endpoint:
    path: /reference/update-card-settings
    method: PATCH
- name: update_card_limits
  endpoint:
    path: /reference/update-card-limits
    method: PATCH
- name: destroy_virtual_card
  endpoint:
    path: /reference/burner-cards-close-a-virtual-card
    method: POST
- name: link_account
  endpoint:
    path: /reference/link-account
    method: PATCH
- name: get_card
  endpoint:
    path: /reference/get-card-api
    method: GET
- name: create_card
  endpoint:
    path: /reference/create-card
    method: POST
- name: Start KYC
  endpoint:
    path: /start-kyc
    method: POST
    data_selector: response
    params:
      tier: '3'
- name: Get KYC Status
  endpoint:
    path: /get-kyc-status
    method: GET
    data_selector: status
    params: {}
- name: KYC Status
  endpoint:
    path: /kyc/status
    method: GET
    data_selector: status
- name: Start KYC
  endpoint:
    path: /kyc/start
    method: POST
    data_selector: session
- name: create_user
  endpoint:
    path: /reference/create-user
    method: POST
- name: update_user
  endpoint:
    path: /reference/update-user
    method: PATCH
- name: get_user_details
  endpoint:
    path: /reference/get-user-details
    method: GET
- name: get_kyc_status
  endpoint:
    path: /reference/get-kyc-status
    method: GET
- name: create_user
  endpoint:
    path: /reference/create-user
    method: POST
- name: verify_user_email
  endpoint:
    path: /reference/verify-email-address
    method: POST
- name: verify_user_mobile
  endpoint:
    path: /reference/verify-mobile-number
    method: POST
- name: get_user_by_email
  endpoint:
    path: /reference/get-user-by-email
    method: POST
- name: get_user_by_id
  endpoint:
    path: /reference/get-user-details
    method: GET
- name: create_user
  endpoint:
    path: /user/create
    method: POST
    data_selector: object
    params: {}
- name: update_user
  endpoint:
    path: /user/update
    method: PATCH
    data_selector: object
    params: {}
- name: update_user
  endpoint:
    path: /reference/update-user
    method: POST
    data_selector: userDetails
- name: get_user_by_id
  endpoint:
    path: /reference/get-user-details
    method: GET
    data_selector: user
- name: start_kyc
  endpoint:
    path: /kyc/start
    method: POST
    data_selector: token
- name: user
  endpoint:
    path: /api/v0/user/{user_id}
    method: GET
- name: get_user_by_id
  endpoint:
    path: /user/{userId}
    method: GET
    data_selector: json
    params: {}
- name: get_user_by_email
  endpoint:
    path: /api/v1/user/get-by-email
    method: GET
    data_selector: object
- name: get_user_by_email
  endpoint:
    path: /api/v1/user/get-by-email
    method: POST
    data_selector: json
    params:
      email: string
- name: start_kyc
  endpoint:
    path: /user/kyc/start
    method: POST
- name: start_kyc
  endpoint:
    path: /user/kyc/start
    method: POST
    data_selector: object
    params: {}
- name: user_kyc
  endpoint:
    path: /api/v1/user/kyc/{id}
    method: GET
- name: get_kyc_status
  endpoint:
    path: /api/v1/user/kyc/{userId}
    method: GET
    data_selector: object
    params: {}
- name: verify_user_email
  endpoint:
    path: /api/v1/user/verify-email
    method: POST
    data_selector: responses
    params: {}
- name: resend_email
  endpoint:
    path: /api/v0/user/resend-email
    method: POST
    data_selector: object
- name: resend_email
  endpoint:
    path: /api/v1/user/resend-email
    method: POST
    data_selector: json
    params:
      userId: string
- name: verify_mobile
  endpoint:
    path: /user/verify-mobile
    method: POST
- name: verify_user_mobile
  endpoint:
    path: /api/v1/user/verify-mobile
    method: POST
    data_selector: object
    params: {}
- name: resend_sms
  endpoint:
    path: /api/v0/user/resend-sms
    method: POST
    data_selector: object
    params: {}
- name: resend_sms
  endpoint:
    path: /api/v1/user/resend-sms
    method: POST
    data_selector: userId
    params: {}
- name: user_pii
  endpoint:
    path: /user/pii
    method: GET
    data_selector: object
    params: {}
- name: fetch_user_pii_data
  endpoint:
    path: /api/v1/user/pii
    method: POST
    data_selector: object
    params: {}
- name: create_business
  endpoint:
    path: /reference/post_create-1
    method: POST
- name: start_kyb
  endpoint:
    path: /reference/post_kyb-start
    method: POST
- name: create_business
  endpoint:
    path: /business/create
    method: POST
- name: update_business
  endpoint:
    path: /business/update
    method: PATCH
    data_selector: object
    params:
      businessId: uuid
- name: business
  endpoint:
    path: /business/{businessId}
    method: GET
    data_selector: object
    params: {}
- name: get_business_by_email
  endpoint:
    path: /api/v1/business/get-by-email
    method: POST
    data_selector: object
    params: {}
- name: verify_business_email
  endpoint:
    path: /api/v1/business/verify-email
    method: POST
    data_selector: responses
    params:
      businessId: uuid
      verificationCode: string
- name: resend_email
  endpoint:
    path: /api/v1/business/resend-email
    method: POST
    data_selector: object
    params:
      businessId: uuid
- name: verify_business_mobile
  endpoint:
    path: /api/v1/business/verify-mobile
    method: POST
    data_selector: responses
    params:
      businessId: uuid
      verificationCode: string
- name: resend_sms
  endpoint:
    path: /api/v1/business/resend-sms
    method: POST
    data_selector: object
    params:
      businessId: uuid
- name: start_kyb
  endpoint:
    path: /api/v1/business/kyb/start
    method: POST
    data_selector: token
    params: {}
- name: business
  endpoint:
    path: /business/kyb/businessId
    method: GET
- name: get_kyb_status
  endpoint:
    path: /business/kyb/{businessId}
    method: GET
    data_selector: object
    params:
      businessId: uuid
- name: account
  endpoint:
    path: /reference/creating-deposit-credentials
    method: GET
    data_selector: account
    params: {}
- name: enrich_account
  endpoint:
    path: /api/v1/wallets/account/enrich
    method: POST
    data_selector: result
- name: enrich_account
  endpoint:
    path: /api/v1/wallets/account/enrich
    method: POST
    data_selector: response
    params: {}
- name: wallets
  endpoint:
    path: /reference/storing-value
    method: GET
    data_selector: wallets
- name: accounts
  endpoint:
    path: /reference/storing-value
    method: GET
    data_selector: accounts
- name: Get Transactions By Id
  endpoint:
    path: /reference/get-transactions-by-id-1
    method: POST
- name: Resend OTP for transaction
  endpoint:
    path: /reference/resend-otp-for-transaction
    method: POST
- name: Confirm transaction with OTP
  endpoint:
    path: /reference/confirm-transaction-with-otp
    method: POST
- name: Validate IP Region
  endpoint:
    path: /reference/validate-ip-region
    method: POST
- name: Initiate Bitcoin Lightning Withdrawal
  endpoint:
    path: /reference/initiate-bitcoin-via-lightning
    method: POST
- name: Deposit via Lightning
  endpoint:
    path: /reference/initiate-topup-via-lightning
    method: POST
- name: Initiate Onchain Withdrawal
  endpoint:
    path: /reference/initiate-onchain-withdrawal
    method: POST
- name: Get Withdrawal Fee Estimate
  endpoint:
    path: /reference/get-onchain-withdrawal-fee-estimates
    method: POST
- name: Get Whitelisted User Destination Addresses
  endpoint:
    path: /reference/get-whitelisted-user-destination-addresses
    method: POST
- name: Whitelist Destination Address
  endpoint:
    path: /reference/whitelist-destination-address
    method: POST
- name: Initiate SEPA Payment
  endpoint:
    path: /reference/initiate-sepa-payment
    method: POST
- name: Initiate Interledger Transaction
  endpoint:
    path: /reference/initiate-interledger-transaction
    method: POST
- name: Initiate Intraledger Transaction
  endpoint:
    path: /reference/initiate-intraledger-transaction
    method: POST
- name: Create Wallet
  endpoint:
    path: /reference/create-wallet
    method: POST
- name: Get Wallet By Id
  endpoint:
    path: /reference/get-wallet
    method: POST
- name: Get All Wallets By User
  endpoint:
    path: /reference/get-all-wallets-for-a-user
    method: POST
- name: Get Account By Id
  endpoint:
    path: /reference/get-account-by-id
    method: POST
- name: Get Account Statement
  endpoint:
    path: /reference/get-account-statement
    method: POST
- name: initiate_interledger_transaction
  endpoint:
    path: /api/v1/wallets/send/intra/initiate
    method: POST
    data_selector: object
- name: initiate_intraledger_transaction
  endpoint:
    path: /api/v1/wallets/send/intra/initiate
    method: POST
    data_selector: null
    params: {}
- name: initiate_interledger_transaction
  endpoint:
    path: /wallets/send/inter/initiate
    method: POST
    params: {}
- name: initiate_intraledger_transaction
  endpoint:
    path: /api/v1/wallets/send/inter/initiate
    method: POST
    data_selector: result
    params: {}
- name: initiate_interledger_transaction
  endpoint:
    path: /api/v1/wallets/send/initiate/bank
    method: POST
    data_selector: object
- name: initiate_sepa_payment
  endpoint:
    path: /api/v1/wallets/send/initiate/bank
    method: POST
    data_selector: response
    params: {}
- name: whitelist_destination_address
  endpoint:
    path: /api/v1/wallets/whitelist-address
    method: POST
- name: whitelist_address
  endpoint:
    path: /wallets/whitelist-address
    method: POST
- name: whitelisted_user_destination_addresses
  endpoint:
    path: /api/v1/wallets/get/whitelisted-addresses
    method: POST
    data_selector: response
    params:
      userId: string
      currency: string
      label: string
      page: string
- name: onchain_fee_estimate
  endpoint:
    path: /wallets/send/initiate/onchain/fee-estimate
    method: POST
    data_selector: response
    params: {}
- name: get_withdrawal_fee_estimate
  endpoint:
    path: /api/v1/wallets/send/initiate/onchain/fee-estimate
    method: POST
    data_selector: response
    params: {}
- name: onchain_withdrawal
  endpoint:
    path: /wallets/send/initiate/onchain
    method: POST
    data_selector: null
    params: {}
- name: initiate_onchain_withdrawal
  endpoint:
    path: /api/v1/wallets/send/initiate/onchain
    method: POST
    data_selector: response
    params:
      userId: string
      sourceAccountId: string
      whitelistedAddressId: string
      amount: string
      fixedFee: string
      percentFeeBps: string
- name: lightning_topup
  endpoint:
    path: /wallets/account/lightning/topup
    method: POST
    data_selector: result
    params: {}
- name: Deposit via Lightning
  endpoint:
    path: /api/v1/wallets/account/lightning/topup
    method: POST
    data_selector: response
    params: {}
- name: initiate_bitcoin_lightning_withdrawal
  endpoint:
    path: /wallets/send/initiate/lightning
    method: POST
    data_selector: string
    params: {}
- name: initiate_lightning
  endpoint:
    path: /api/v1/wallets/send/initiate/lightning
    method: POST
    data_selector: object
    params: {}
- name: confirm_transaction_with_otp
  endpoint:
    path: /api/v1/wallets/transaction/confirm
    method: POST
    data_selector: response
    params: {}
- name: transaction_confirm
  endpoint:
    path: /api/v1/wallets/transaction/confirm
    method: POST
    data_selector: userId, accountId, invoice
    params: {}
- name: validate_ip_region
  endpoint:
    path: /wallets/validate-ip-region
    method: POST
    data_selector: object
    params: {}
- name: validate_ip_region
  endpoint:
    path: /api/v1/wallets/validate-ip-region
    method: POST
    data_selector: response
- name: resend_otp
  endpoint:
    path: /api/v1/wallets/transaction/resend-otp
    method: POST
    data_selector: response
    params: {}
- name: resend_otp
  endpoint:
    path: /api/v1/wallets/transaction/resend-otp
    method: POST
    data_selector: result
    params: {}
- name: get_transactions_by_id
  endpoint:
    path: /get-transactions-by-id-1
    method: POST
- name: Get Transactions By Id
  endpoint:
    path: /reference/get-transactions-by-id-1
    method: GET
- name: Get Account Statement
  endpoint:
    path: /reference/get-account-statement
    method: GET
- name: account_statement
  endpoint:
    path: /wallets/get/account/statement
    method: POST
    data_selector: transactions
- name: account_statement
  endpoint:
    path: /wallets/get/account/statement
    method: POST
    data_selector: transactions
    params:
      userId: required
      accountId: required
      startDate: required
      endDate: required
      page: required
      limit: '10'
- name: account
  endpoint:
    path: /wallets/get/account
    method: POST
    data_selector: response
    params: {}
- name: get_account_statement
  endpoint:
    path: /api/v0/wallets/get/account
    method: POST
    data_selector: result
- name: get_all_wallets_by_user
  endpoint:
    path: /api/v0/wallets/get/all
    method: POST
    data_selector: result
- name: wallets
  endpoint:
    path: /wallets/get/all
    method: POST
    data_selector: wallets
- name: account
  endpoint:
    path: /account/get/by/id
    method: POST
    data_selector: accounts
- name: get_all_wallets_by_user
  endpoint:
    path: /wallets/get/all
    method: POST
    data_selector: response
    params:
      userId: string
      startDate: date-time
      endDate: date-time
      page: int32
- name: get_all_wallets_by_user
  endpoint:
    path: /wallets/get
    method: POST
    data_selector: userId, walletId
- name: wallet
  endpoint:
    path: /wallets/get
    method: POST
    data_selector: response
    params: {}
- name: create_wallet
  endpoint:
    path: /api/v1/wallets/create
    method: POST
    data_selector: object
    params: {}
- name: create_wallet
  endpoint:
    path: /wallets/create
    method: POST
    data_selector: object
    params: {}
- name: validate_sepa_beneficiary
  endpoint:
    path: /wallets/validate-sepa-beneficiary
    method: POST
    data_selector: response
    params: {}
- name: validate_sepa_beneficiary
  endpoint:
    path: /api/v1/wallets/validate-sepa-beneficiary
    method: POST
    data_selector: response
    params: {}
- name: whitelist_destination_iban
  endpoint:
    path: /api/v1/wallets/whitelist-iban
    method: POST
    data_selector: null
    params: {}
- name: whitelist_iban
  endpoint:
    path: /wallets/whitelist-iban
    method: POST
    data_selector: response
    params: {}
- name: get_whitelisted_ibans
  endpoint:
    path: /wallets/get/whitelisted-ibans
    method: POST
    params:
      userId: string
      page: integer
      limit: integer
- name: whitelisted_ibans
  endpoint:
    path: /wallets/get/whitelisted-ibans
    method: GET
    data_selector: records
    params:
      userId: 5ed0e4a0-3943-443b-a7bb-77d5bc100c53
      page: 1
      limit: 100
- name: deactivate_whitelisted_iban
  endpoint:
    path: /api/v1/wallets/deactivate-iban
    method: POST
    params: {}
- name: deactivate_iban
  endpoint:
    path: /api/v1/wallets/deactivate-iban
    method: POST
    data_selector: response
    params: {}
- name: get_whitelisted_ibans
  endpoint:
    path: /api/v1/whitelisted-ibans
    method: GET
    data_selector: response
    params: {}
- name: Create Business Wallet
  endpoint:
    path: /reference/post_business-create
    method: POST
- name: Deactivate Whitelisted IBAN
  endpoint:
    path: /reference/deactivate-whitelisted-iban
    method: POST
- name: Get Whitelisted IBANs
  endpoint:
    path: /reference/get-whitelisted-ibans
    method: POST
- name: business_wallets
  endpoint:
    path: /reference/wallets
    method: POST
- name: transactions
  endpoint:
    path: /reference/moving-money-around-1
    method: POST
- name: business_wallet_create
  endpoint:
    path: /wallets/business/create
    method: POST
- name: get_wallet_by_id
  endpoint:
    path: /wallets/get
    method: POST
- name: create_business_wallet
  endpoint:
    path: /api/v1/wallets/business/create
    method: POST
    data_selector: object
    params:
      businessId: uuid
- name: get_all_wallets
  endpoint:
    path: /wallets/business/get
    method: POST
- name: wallet
  endpoint:
    path: /api/v1/wallets/business/get
    method: POST
    data_selector: object
    params:
      businessId: uuid
      walletId: uuid
- name: get_all_wallets
  endpoint:
    path: /wallets/business/get/all
    method: POST
    data_selector: null
    params:
      page: 1
- name: get_all_wallets
  endpoint:
    path: /api/v1/wallets/business/get/all
    method: POST
    data_selector: wallets
    params:
      businessId: required
      startDate: required
      endDate: required
      page: required
- name: get_all_wallets
  endpoint:
    path: /wallets/business/get/all
    method: POST
- name: get_account_statement
  endpoint:
    path: /wallets/business/get/account/statement
    method: POST
- name: get_account_by_id
  endpoint:
    path: /api/v1/wallets/business/get/account
    method: POST
    data_selector: object
    params:
      businessId: uuid
      accountId: string
- name: account_statement
  endpoint:
    path: /wallets/business/get/account/statement
    method: POST
    data_selector: ''
    params:
      page: 1
      limit: 10
- name: account_statement
  endpoint:
    path: /wallets/business/get/account/statement
    method: POST
    data_selector: transactions
    params:
      businessId: string
      accountId: string
      startDate: string
      endDate: string
      page: integer
      limit: number
- name: get_transactions_by_id
  endpoint:
    path: /wallets/business/account/get-transactions-by-id
    method: POST
- name: get_account_statement
  endpoint:
    path: /business/get-account-statement
    method: POST
- name: get_account_statement
  endpoint:
    path: /wallets/business/account/get-transactions-by-id
    method: POST
    data_selector: transactions
    params:
      businessId: uuid
      accountId: string
      txId: uuid
- name: enrich_account
  endpoint:
    path: /api/v1/wallets/business/account/enrich
    method: POST
    data_selector: object
    params: {}
- name: whitelist_destination_address
  endpoint:
    path: /wallets/business/whitelist-address
    method: POST
    data_selector: object
    params:
      businessId: uuid
      address: string
      currency: string
      network: string
      label: string
- name: whitelist_address
  endpoint:
    path: /wallets/business/whitelist-address
    method: POST
    data_selector: response
    params: {}
- name: whitelisted_addresses
  endpoint:
    path: /wallets/business/get/whitelisted-addresses
    method: POST
    data_selector: null
    params:
      page: 1
- name: whitelisted_business_destination_addresses
  endpoint:
    path: /api/v1/wallets/business/get/whitelisted-addresses
    method: POST
    data_selector: addresses
    params:
      businessId: string
      currency: string
      label: string
      page: integer
- name: swap_currencies
  endpoint:
    path: /wallets/business/swap
    method: POST
    data_selector: object
    params: {}
- name: initiate_inter_ledger_transaction
  endpoint:
    path: /api/v1/wallets/business/send/inter/initiate
    method: POST
    data_selector: object
    params:
      businessId: uuid
      sourceAccountId: string
      destinationAccountId: string
      amount: string
      memo: string
- name: initiate_intra_ledger_transaction
  endpoint:
    path: /api/v1/wallets/business/send/intra/initiate
    method: POST
- name: get_withdrawal_fee_estimate
  endpoint:
    path: /wallets/business/send/initiate/onchain/fee-estimate
    method: POST
- name: withdrawal_fee_estimate
  endpoint:
    path: /wallets/business/send/initiate/onchain/fee-estimate
    method: POST
    data_selector: object
    params:
      businessId: uuid
      sourceAccountId: string
      whitelistedAddressId: uuid
      amount: string
      fixedFee: string
      percentFeeBps: string
- name: initiate_onchain_withdrawal
  endpoint:
    path: /wallets/business/send/initiate/onchain
    method: POST
    data_selector: transaction
    params: {}
- name: initiate_onchain_withdrawal
  endpoint:
    path: /api/v1/wallets/business/send/initiate/onchain
    method: POST
    data_selector: response
    params: {}
- name: get_withdrawal_fee_estimate
  endpoint:
    path: /api/v1/wallets/business/send/initiate/onchain/fee-estimate
    method: POST
    data_selector: response
    params: {}
- name: deposit_via_lightning
  endpoint:
    path: /api/v1/wallets/business/account/lightning/topup
    method: POST
    data_selector: object
    params: {}
- name: topup
  endpoint:
    path: /wallets/business/account/lightning/topup
    method: POST
- name: initiate_onchain_withdrawal
  endpoint:
    path: /business/send/initiate-onchain
    method: POST
- name: initiate_bitcoin_lightning_withdrawal
  endpoint:
    path: /business/send/initiate-lightning
    method: POST
- name: initiate_bitcoin_lightning_withdrawal
  endpoint:
    path: /wallets/business/send/initiate/lightning
    method: POST
    data_selector: object
    params: {}
- name: confirm_transaction
  endpoint:
    path: /api/v1/wallets/business/transaction/confirm
    method: POST
    data_selector: object
    params: {}
- name: resend_otp_for_transaction
  endpoint:
    path: /api/v1/wallets/business/transaction/resend-otp
    method: POST
    data_selector: object
    params: {}
- name: initiate_sepa_payment
  endpoint:
    path: /wallets/business/send/initiate/bank
    method: POST
    data_selector: object
    params: {}
- name: plug_and_play_visa_cards
  endpoint:
    path: /reference/plug-and-play-visa-cards
    method: GET
    data_selector: records
    params: {}
- name: start_hosted_card_session
  endpoint:
    path: /reference/create-hosted-card-session
    method: POST
- name: get_allowed_wallet_currencies
  endpoint:
    path: /reference/get-allowed-wallet-currencies
    method: GET
- name: set_allowed_wallet_currencies
  endpoint:
    path: /reference/set-allowed-wallet-currencies
    method: PATCH
- name: start_hosted_card_session
  endpoint:
    path: /hosted-card/start-session
    method: POST
    data_selector: sessionId
- name: start_hosted_card_session
  endpoint:
    path: /api/v0/hosted-card/start-session
    method: POST
    data_selector: ''
- name: set_allowed_wallet_currencies
  endpoint:
    path: /hosted-card/set-allowed-wallet-currencies
    method: PATCH
    data_selector: allowedCurrencies
    params: {}
- name: set_allowed_wallet_currencies
  endpoint:
    path: /api/v0/hosted-card/set-allowed-wallet-currencies
    method: PATCH
    data_selector: result
- name: allowed_wallet_currencies
  endpoint:
    path: /api/v0/hosted-card/get-allowed-wallet-currencies
    method: GET
- name: allowed_wallet_currencies
  endpoint:
    path: /hosted-card/get-allowed-wallet-currencies
    method: GET
    data_selector: array of strings
- name: start_mfa_setup
  endpoint:
    path: /user/start/setup-two-factor
    method: POST
    data_selector: object
    params: {}
- name: user_mfa_setup
  endpoint:
    path: /api/v0/user/start/setup-two-factor
    method: POST
    data_selector: object
- name: user_mfa_setup
  endpoint:
    path: /user/resume/setup-two-factor
    method: POST
    data_selector: object
- name: resume_mfa_setup
  endpoint:
    path: /api/v1/user/resume/setup-two-factor
    method: POST
    data_selector: recoveryCodes
    params: {}
- name: set_custom_css
  endpoint:
    path: /api/v1/hosted-card/set-custom-css
    method: POST
- name: set_custom_css
  endpoint:
    path: /hosted-card/set-custom-css
    method: POST
    data_selector: null
    params: {}
- name: get_custom_css
  endpoint:
    path: /get-custom-css
    method: GET
    data_selector: null
    params: {}
- name: get_custom_css
  endpoint:
    path: /api/v1/hosted-card/get-custom-css
    method: GET
- name: create_card
  endpoint:
    path: /create-card
    method: POST
- name: get_card
  endpoint:
    path: /get-card
    method: GET
- name: update_card_limits
  endpoint:
    path: /update-card-limits
    method: PATCH
- name: create_card
  endpoint:
    path: /reference/create-card
    method: POST
    data_selector: data
    params: {}
- name: link_account
  endpoint:
    path: /reference/link-account
    method: PATCH
    data_selector: data
    params: {}
- name: Get User By ID
  endpoint:
    path: /reference/get-user-details
    method: GET
- name: Create User
  endpoint:
    path: /reference/create-user
    method: POST
- name: Update User
  endpoint:
    path: /reference/update-user
    method: PATCH
- name: Get All Wallets By User
  endpoint:
    path: /reference/get-all-wallets-for-a-user
    method: POST
- name: Create Wallet
  endpoint:
    path: /reference/create-wallet
    method: POST
- name: create_card
  endpoint:
    path: /card/create
    method: POST
    data_selector: object
    params: {}
- name: get_card
  endpoint:
    path: /api/v1/card/{cardId}
    method: GET
- name: card
  endpoint:
    path: /card/{id}
    method: GET
    data_selector: object
- name: link_account
  endpoint:
    path: /card/link-account
    method: PATCH
    data_selector: object
    params: {}
- name: burn_card
  endpoint:
    path: /api/v0/card/burn
    method: POST
- name: destroy_virtual_card
  endpoint:
    path: /api/v1/card/burn
    method: POST
    data_selector: object
    params:
      cardId: string
- name: update_card_limits
  endpoint:
    path: /card/limits
    method: PATCH
    data_selector: object
    params: {}
- name: update_card_settings
  endpoint:
    path: /card/security
    method: PATCH
    data_selector: object
    params: {}
- name: update_3d_secure_settings
  endpoint:
    path: /api/v1/card/3ds
    method: PATCH
- name: set_pin
  endpoint:
    path: /api/v1/card/set-pin
    method: PATCH
    data_selector: object
    params: {}
- name: set_card_pin
  endpoint:
    path: /api/v1/card/set-pin
    method: PATCH
    data_selector: json
    params: {}
- name: report_card_missing
  endpoint:
    path: /card/report-missing
    method: POST
    data_selector: object
    params: {}
- name: activate_physical_card
  endpoint:
    path: /api/v1/card/activate
    method: POST
    data_selector: object
    params: {}
- name: activate_anonymous_card
  endpoint:
    path: /api/v1/card/activate-anonymous
    method: POST
    data_selector: object
    params: {}
- name: replace_card
  endpoint:
    path: /card/replace
    method: POST
    data_selector: object
    params: {}
- name: unblock_card
  endpoint:
    path: /api/v1/card/unblock
    method: POST
    data_selector: json
    params: {}
- name: block_card
  endpoint:
    path: /card/block
    method: POST
- name: block_card
  endpoint:
    path: /card/block
    method: POST
    data_selector: response
    params:
      cardId: string
- name: card_statement
  endpoint:
    path: /api/v1/card/statement
    method: GET
    data_selector: object
    params: {}
- name: card_statement
  endpoint:
    path: /api/v1/card/statement
    method: POST
    data_selector: transactions
    params:
      cardId: required
      startDate: required
      endDate: required
      page: required
      limit: '10'
- name: get_cards_by_user
  endpoint:
    path: /card/get-all
    method: POST
    data_selector: json
    params:
      userId: string
      limit: int32
      offset: int32
- name: get_card_statements
  endpoint:
    path: /server/api/v0/card/get-all
    method: POST
    data_selector: response
    params:
      userId: de13f7b0-c159-4955-a226-42ca2e4f0b76
      limit: 100
      offset: 0
- name: Get Cards By User
  endpoint:
    path: /reference/get-cards-by-user
    method: GET
- name: Create User
  endpoint:
    path: /reference/create-user
    method: POST
- name: create
  endpoint:
    path: /create
    method: POST
    data_selector: response
    params: {}
- name: create_user
  endpoint:
    path: /create_user
    method: POST
- name: update_user
  endpoint:
    path: /update_user
    method: PATCH
- name: get_user_details
  endpoint:
    path: /get_user_details
    method: GET
- name: start_kyc
  endpoint:
    path: /start_kyc
    method: POST
- name: get_kyc_status
  endpoint:
    path: /get_kyc_status
    method: GET
- name: create_user
  endpoint:
    path: /reference/create-user
    method: POST
- name: get_user_details
  endpoint:
    path: /reference/get-user-details
    method: GET
- name: get_account_statement
  endpoint:
    path: /reference/get-account-statement
    method: POST
- name: request_consent
  endpoint:
    path: /request-consent
    method: POST
    data_selector: response
    params: {}
- name: confirm_consent
  endpoint:
    path: /confirm-consent-ui
    method: POST
    data_selector: response
    params: {}
- name: resend_consent
  endpoint:
    path: /resend-consent-code-ui
    method: POST
    data_selector: response
    params: {}
- name: revoke_consent
  endpoint:
    path: /revoke-consent-ui
    method: POST
    data_selector: response
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: response
    params: {}
- name: card_number
  endpoint:
    path: /reference/render
    method: POST
    data_selector: data
    params:
      enableCardNumberCopy: true
- name: revoke_consent
  endpoint:
    path: /api/v1/card/revoke-consents
    method: POST
- name: resend_consent_code
  endpoint:
    path: /api/v1/card/resend-consent-code
    method: POST
    data_selector: object
    params: {}
- name: resend_consent_code
  endpoint:
    path: /card/resend-consent-code
    method: POST
- name: confirm_consent
  endpoint:
    path: /api/v1/card/confirm-consent
    method: POST
- name: resend_consent_code
  endpoint:
    path: /api/v1/card/resend-consent-code
    method: POST
- name: confirm_consent
  endpoint:
    path: /api/v1/card/confirm-consent
    method: POST
    data_selector: object
    params: {}
- name: tokens
  endpoint:
    path: /reference/tokens
    method: POST
- name: standing_orders
  endpoint:
    path: /reference/standing-orders
    method: POST
- name: Get Token
  endpoint:
    path: /reference/get-token
    method: POST
- name: Confirm Consent
  endpoint:
    path: /reference/confirm-consent-ui
    method: POST
- name: Google Pay Push Provisioning
  endpoint:
    path: /reference/google-pay-push
    method: POST
- name: Apple Pay Push Provisioning
  endpoint:
    path: /reference/apple-pay-push
    method: POST
- name: Deactivate Token
  endpoint:
    path: /reference/deactivate-token
    method: POST
- name: Activate Token
  endpoint:
    path: /reference/activate-token
    method: POST
- name: Get All Card Tokens
  endpoint:
    path: /reference/get-all-card-tokens
    method: POST
- name: token
  endpoint:
    path: /api/v1/card/provisioning/token
    method: POST
    data_selector: ''
- name: get_token
  endpoint:
    path: /api/v1/card/provisioning/token
    method: POST
    data_selector: object
    params: {}
- name: activate_token
  endpoint:
    path: /api/v1/card/provisioning/token/activate
    method: POST
- name: activate_token
  endpoint:
    path: /api/v1/card/provisioning/token/activate
    method: POST
    data_selector: result
    params: {}
- name: token_provisioning
  endpoint:
    path: /card/provisioning/tokens
    method: POST
    data_selector: result
    params:
      limit: 100
      offset: 0
- name: card_tokens
  endpoint:
    path: /api/v1/card/provisioning/tokens
    method: POST
    data_selector: tokens
    params:
      cardId: string
      limit: int32
      offset: string
- name: suspend_token
  endpoint:
    path: /api/v1/card/provisioning/token/suspend
    method: POST
    data_selector: null
    params: {}
- name: suspend_token
  endpoint:
    path: /api/v1/card/provisioning/token/suspend
    method: POST
    data_selector: object
    params: {}
- name: resume_token
  endpoint:
    path: /api/v1/card/provisioning/token/resume
    method: POST
    data_selector: object
    params: {}
- name: resume_token
  endpoint:
    path: /api/v1/card/provisioning/token/resume
    method: POST
    data_selector: result
- name: deactivate_token
  endpoint:
    path: /api/v1/card/provisioning/token/deactivate
    method: POST
    data_selector: response
    params: {}
- name: deactivate_token
  endpoint:
    path: /api/v1/card/provisioning/token/deactivate
    method: POST
    data_selector: object
    params: {}
- name: apple_pay_push_provisioning
  endpoint:
    path: /card/apple-pay/push-provisioning
    method: POST
- name: apple_pay_push_provisioning
  endpoint:
    path: /card/apple-pay/push-provisioning
    method: POST
    data_selector: object
    params: {}
- name: standing_order
  endpoint:
    path: /reference/post_create
    method: POST
- name: automated_swaps_withdrawals
  endpoint:
    path: /reference/standing-orders
    method: POST
- name: currency_swaps
  endpoint:
    path: /reference/swap-currencies
    method: POST
- name: standing_order
  endpoint:
    path: /api/standing-orders
    method: POST
    data_selector: orders
    params: {}
- name: standing_order
  endpoint:
    path: /api/v1/standing-orders/create
    method: POST
    data_selector: response
    params: {}
- name: resend_standing_order_otp
  endpoint:
    path: /api/v1/standing-orders/resend-otp
    method: POST
    data_selector: object
    params:
      userId: uuid
      challengeId: uuid
- name: standing_orders
  endpoint:
    path: /standing-orders/resend-otp
    method: POST
- name: standing_order_confirm
  endpoint:
    path: /api/v1/standing-orders/confirm
    method: POST
    data_selector: object
    params: {}
- name: cancel_standing_order
  endpoint:
    path: /standing-orders/cancel
    method: POST
    data_selector: object
    params: {}
- name: standing_orders
  endpoint:
    path: /standing-orders
    method: POST
- name: cancel_standing_order
  endpoint:
    path: /standing-orders/cancel
    method: POST
- name: confirm_cancel_standing_order
  endpoint:
    path: /standing-orders/confirm
    method: POST
- name: get_all_standing_orders
  endpoint:
    path: /standing-orders/get-all
    method: POST
- name: standing_orders
  endpoint:
    path: /standing-orders/get-all
    method: POST
    data_selector: none
    params:
      page: 1
      limit: 10
- name: standing_orders
  endpoint:
    path: /standing-orders/get-all
    method: POST
    data_selector: orders
    params:
      userId: string
      startDate: string
      endDate: string
      page: number
      limit: number
- name: standing_orders
  endpoint:
    path: /standing-orders/get-by-id
    method: POST
- name: get_all_standing_orders
  endpoint:
    path: /standing-orders/get-all
    method: POST
- name: standing_order
  endpoint:
    path: /api/v1/standing-orders/get-by-id
    method: POST
    data_selector: object
    params:
      userId: uuid
      standingOrderId: uuid
- name: standing_orders
  endpoint:
    path: /standing-orders
    method: POST
- name: standing_order
  endpoint:
    path: /standing-orders/resume
    method: POST
    data_selector: object
    params: {}
- name: swap_currencies
  endpoint:
    path: /swap-currency
    method: POST
    data_selector: order
- name: exchange_rates
  endpoint:
    path: /exchange-rates
    method: POST
    data_selector: rates
- name: swap_currencies
  endpoint:
    path: /api/v1/wallets/swap
    method: POST
    data_selector: response
    params: {}
- name: currency_swap
  endpoint:
    path: /api/v1/wallets/swap
    method: POST
    data_selector: result
- name: trade_rates
  endpoint:
    path: /api/v1/trade/rates
    method: POST
- name: trade_rates
  endpoint:
    path: /trade/rates
    method: POST
    data_selector: object
- name: Collecting Card Authorization Fees
  endpoint:
    path: /reference/collecting-card-authorization-fees
    method: GET
    data_selector: data
    params: {}
- name: Exchange Rates
  endpoint:
    path: /reference/exchange-rates
    method: GET
    data_selector: data
    params: {}
- name: Corporate Swaps
  endpoint:
    path: /reference/swap-currencies-corporate
    method: GET
    data_selector: data
    params: {}
- name: corporate_account
  endpoint:
    path: /reference/get-corporate-account
    method: GET
- name: crypto_swaps
  endpoint:
    path: /reference/swap-currencies
    method: POST
- name: bank_transfers
  endpoint:
    path: /reference/bank-transfer
    method: POST
- name: corporate_swap
  endpoint:
    path: /v1/corporate/swap
    method: POST
    data_selector: response
    params: {}
- name: swap_currencies
  endpoint:
    path: /corporate/swap
    method: POST
    data_selector: response
    params:
      applicationId: string
      sourceAccountId: string
      destinationAccountId: string
      memo: string
      amount: string
      ip: string
- name: corporate_account_statement
  endpoint:
    path: /api/v0/wallets/get/corporate/account/statement
    method: POST
- name: corporate_account_statement
  endpoint:
    path: /api/v1/corporate/account/statement
    method: POST
    data_selector: transactions
    params:
      applicationId: ''
      accountId: ''
      startDate: ''
      endDate: ''
      page: ''
      limit: '10'
- name: corporate_account_statement
  endpoint:
    path: /wallets/get/corporate/account
    method: POST
- name: corporate_account_by_id
  endpoint:
    path: /get-corporate-account-by-id
    method: POST
- name: corporate_wallets
  endpoint:
    path: /corporate/wallets
    method: POST
    data_selector: response
    params:
      applicationId: string
- name: corporate_account
  endpoint:
    path: /corporate/account
    method: POST
    data_selector: response
    params: {}
- name: corporate_account
  endpoint:
    path: /api/v1/wallets/get/corporate/account
    method: POST
    data_selector: object
    params: {}
- name: whitelist_destination_address
  endpoint:
    path: /wallets/corporate/whitelist-address
    method: POST
    data_selector: object
    params: {}
- name: whitelist_corporate_destination_address
  endpoint:
    path: /api/v1/wallets/corporate/whitelist-address
    method: POST
- name: whitelisted_addresses
  endpoint:
    path: /wallets/get/corporate/whitelisted-addresses
    method: POST
    data_selector: addresses
    params: {}
- name: whitelisted_corporate_destination_addresses
  endpoint:
    path: /api/v1/wallets/get/corporate/whitelisted-addresses
    method: POST
    data_selector: response
    params:
      applicationId: string
- name: Create Sandbox Account
  endpoint:
    path: /signup
    method: POST
- name: Talk to an Expert
  endpoint:
    path: /cal.com/striga/30min
    method: GET
- name: Get User By ID
  endpoint:
    path: /get-user-details
    method: GET
- name: Get User By Email
  endpoint:
    path: /get-user-by-email
    method: POST
- name: Get All Wallets By User
  endpoint:
    path: /get-all-wallets-for-a-user
    method: POST
notes:
- This API is available only on production.
- With the latest MiCA regulations in effect, you must have a legal entity in Europe
  and ideally operations in Europe to contract with Striga and have a corporate wallet
  provisioned for your business.
- Integration can be completed in a single day by a single developer.
- You can calculate the value of the `Authorization` header by creating a SHA256HMAC
  digest (MD5) of your request body, signed with your `API Secret`.
- Uses HMAC for authentication
- Uses HMAC authentication for API access.
- API requires authentication
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Starting June 1, 2025, the old version of the SumSub WebSDK will be discontinued.
- All webhook requests to your server include a signature header that contains a value
  equal to creating a signature using SHA256 HMAC with your API key against the Webhook
  body.
- Webhook retries happen automatically up to 5 times until they succeed.
- Reasons for termination include T_C_BASED_ACCOUNT_CLOSURE, COMPLIANCE_BASED_ACCOUNT_CLOSURE,
  CLIENT_REQUESTED_ACCOUNT_CLOSURE.
- Webhooks are triggered for various card transaction events.
- Requires setup of connected app in Striga
- Webhook notifications are supported for various transaction types.
- Webhooks notify when a contract call is initiated, a transaction hash is created,
  and when the account balance is updated.
- The Tier 0 KYC process is deprecated and should be ignored if not in production.
- Users must complete Tier 2 verification within 30 days after being approved on Tier
  1.
- To prevent spam, no actual emails or SMSs are sent while testing and the default
  verification code is '123456'
- On production, mobile numbers are validated for SMS verification.
- Email and Mobile cannot be updated once they are verified.
- Once KYC has been started, none of the fields can be updated until the KYC is rejected.
- Once the KYC has been approved, none of the fields can be updated.
- Check Tips & Tricks for implementation guidance.
- End users must first have their email and mobile numbers verified, prior to starting
  KYC.
- On the sandbox environment, no emails and SMS are sent, the default verification
  code to complete email and mobile verification on the sandbox is `123456`.
- On the sandbox environment, no emails and SMS are sent, the default verification
  code to complete email and mobile verification on the sandbox is 123456.
- On production, the sending of SMS is a chargeable event and although we implement
  rate limits, we encourage you to implement limiting in order to prevent users from
  taking advantage of SMS fraud.
- A single user identity can have a maximum of 10 IBANs attached to their name
- On the sandbox, you can test the entire flow of deposits & withdrawals using test
  blockchain networks
- Please ensure that your users see the list of supported networks
- For multi-chain supported accounts like USDC, it is recommended to use the blockchainDepositAddress
  found inside each object in the blockchainNetworks array.
- Default wallets are created for each verified identity.
- Requires an api-key in the header
- Session is valid for 15 minutes by default
- On the production environment, card APIs will not be accessible until Visa card
  program is approved
- Ensure that the IP address filled when starting a session is the real IP address
  of the end user device.
- The URL for this request expired after 30 days.
- User MFA (Multi Factor Authentication) may be required.
- A user identity can have a maximum of 10 active cards, i.e. the sum of active physical
  + virtual cards per user cannot exceed 10.
- Cards can be of two types - VIRTUAL and PHYSICAL.
- Default currency for all cards is currently EUR (Euros).
- If `accountIdToLink` is not specified, card links to default wallet EUR account.
- This is available only on production as no real cards are created on the sandbox.
- The Create Card endpoint returns a cardId parameter
- If the `copyButtonSvgIcon` is not specified, a default copy icon will be used.
- Your UI secret for viewing sensitive data inside the iframe is required.
- Use OAuth2 for authentication.
- The authToken obtained using the Request Consent method is valid only for 24 Hours.
- Create separate render methods to render each of the sensitive components to be
  displayed, by creating a new instance of StrigaUXPlugin.
- Requires setup of connected app in api
- There are no limits to swapping funds but depending upon the KYC tier of a user,
  there may be a withdrawal limit.
- Webhooks are sent in an identical format to the swap and withdrawal webhooks.
- Buy USDT Trade Restriction after Sat Dec 28 2024 00:00:00 GMT+0000
- The decision to stop executing USDT buy orders has been made in line with our compliance
  program regarding the Markets in Crypto-Assets Regulation (MiCAR) which enters into
  force 30 December 2024.
- Most fees are set to be a flat value (in EUR) + a variable percentage value.
- Defaults to true
errors:
- '401 Unauthorized: Check your HMAC signature'
- 'Invalid API key: Check your API key'
- 'Unauthorized: Check your authentication credentials'
- 'Error Codes: Check reference for specific error codes.'
- 'Invalid Status: Ensure the status is one of the expected values such as SUSPENDED
  or TERMINATED.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify access token'
- '429 Too Many Requests: Rate limit exceeded'
- 'Invalid transaction hash: Ensure the hash is correct.'
- 'Insufficient funds: Check account balance before initiating a contract call.'
- 'Transaction failed: Review transaction details for errors.'
- 'NOT_STARTED: User has not started the KYC process.'
- 'APPROVED: User has completed the KYC process successfully.'
- '201: User created successfully'
- '400: Bad Request - Invalid input'
- 'URL Expired: The URL for this request expired after 30 days.'
- '404 Not Found: The user does not exist'
- '33003: {XX}_EUR_DEPOSIT_THRESHOLD_NOT_MET'
- '400 Bad Request: Check your request parameters'
- 400 - Result
- 409 - Result
- 400 Bad Request
- '400: Bad Request'
- '400 Bad Request: Invalid parameters'
- 500 Unexpected server error.
- 400 Bad Request. The request was unacceptable, often due to missing a required parameter.
- 401 Invalid authentication header
- 400 BusinessNotFoundError
- 401 Unauthorized
- Unknown generic business get details error
- '41005'
- 404 Business not found by primary user email
- GenericBusinessEmailVerificationError
- BusinessEmailAlreadyVerifiedError
- BusinessEmailVerificationAttemptExceededError
- OTPMissingError
- InvalidVerificationCodeError
- BusinessNotFoundError
- 500 Internal Server Error
- '400 Bad Request: The request was unacceptable, often due to missing a required
  parameter.'
- '401 Invalid authentication header: Invalid authentication header'
- '400'
- '401'
- '200'
- '500'
- '409 Invalid authentication header: Business verification status error'
- '401: Unauthorized'
- '409: Conflict'
- '500: Unexpected server error'
- 'Error Codes: Refer to the error codes section.'
- 403 - Result
- 200 - Result
- '401 Invalid authentication header: AuthError, BusinessUnapprovedIdentityError'
- '403 Forbidden: Business is suspended, errorCode: 30046'
- 403 Forbidden
- '401 Invalid authentication header: AuthError'
- '403 Forbidden: Business is suspended'
- 500 Unexpected server error
- '403'
- 404 Not Found
- 'session-expired: Session expired. Please generate a new sessionId.'
- '200: Success'
- '400: Invalid request parameters'
- '400: Invalid request'
- '400 Bad Request: Invalid parameters in the request'
- '401 Unauthorized: Check your API key or token.'
- '400 Bad Request: Request format is invalid.'
- '404 Not Found: The requested resource does not exist.'
- 'Invalid userId: Ensure the user ID is correct.'
- 'Expired challengeId: Request a new consent if the challenge ID has expired.'
- URL Expired
- '41001: Restricted direction'
- 'REQUEST_LIMIT_EXCEEDED: Your request limit has been exceeded.'
- 'INVALID_API_KEY: The provided API key is invalid.'
- 'UNAUTHORIZED: Authentication failed.'
- '00000: Default Error Code - Invalid fields passed in request body'
- '00001: Internal Server Error'
- '00002: Validator Errors - Invalid fields passed in request body'
- '00003: Exceeded Email Verification Attempt Count'
- '00004: Card product configuration error'
- '00005: Exceeded Forgot Password Attempt Count'
- '00006: Forgot Password Session Error'
- '00010: Error Refreshing Refresh Token - Expired JWT/Refresh Token or FA Error'
- '00011: Application Does Not Exist'
- '00012: Feature not implemented yet'
- '00013: Internal Service Error'
- '30000: Invalid API Key'
- '30002: Exceeded Email Verification Attempt Count'
- '30003: Exceeded Mobile Verification Attempt Count'
- '30004: Invalid Mobile Verification Code'
- '30005: User does not exist'
- '30006: Invalid patch user'
- '30007: User not verified'
- '30008: User is already verified'
- '30009: User verification is in progress'
- '30010: KYC rejected, user cannot retry'
- '30011: KYC attempt limit exceeded'
- '30012: Invalid Authentication Header'
- '30013: Invalid request - Card ID & User ID mismatch'
- '30014: Third-party API failure'
- '30015: Invalid card limits'
- '30016: Card is not of type physical'
- '30017: Card is already blocked'
- '30018: Card should be blocked to be unblocked'
- '30019: 3D Secure should be enabled for the card before activation'
- '30020: 3D Secure is already disabled'
- '30021: 3D Secure is not enabled'
- '30022: Invalid card ID'
- '30023: Card can be activated only if it is ordered'
- '30024: Card can be blocked only when the card is activated (applies to only physical
  cards)'
- '30025: Card cannot be unblocked if it was blocked as Lost or Stolen'
- '30026: Card 3D Secure cannot be enabled when not in ''ACTIVE'' state for physical
  cards'
- '30027: Card cannot be activated if it is not in ''Dispatched'' status'
- '30028: Card activation error'
- '30029: Insufficient Permissions to Access Resource'
- '30030: Email & Mobile not verified to start KYC'
- '30031: Bad transfer request'
- '30032: Cannot start KYC'
- '30033: Non-ACTIVE card being linked'
- '30034: This account cannot be linked to this card'
- '30036: Please request an OTP before verifying'
- '30037: Please provide at least one transaction fee to update'
- '30038: Email cannot be the same as the existing email'
- '30039: Email already exists'
- '30040: Mobile cannot be the same as the existing mobile number'
- '30041: Mobile number already exists'
- '30042: This route is restricted and cannot be accessed'
- '30043: User is suspended'
- '30044: Email/Mobile already verified'
- '30045: Below Minimum Trade Value'
- '30046: Restricted Jurisdiction'
- '30059: Cannot replace card'
- '30060: Error fetching token provisioning data'
- '30061: Card does not exist'
- '30099: Disallowed Transaction'
- '30100: Card not active'
- '30101: Card does not have a PIN'
- '31001: Invalid IBAN/BIC'
- '31002: Account not enriched'
- '31003: Self SEPA transfer attempted'
- '31004: Insufficient balance'
- '31005: SEPA destination is a non-enriched or inactive account'
- '31006: LN withdrawal in progress'
- '31007: Self LN transfer attempted'
- '31008: Exceeded Mobile Resend Count'
- '31009: Mobile number already verified'
- '31010: Exceeded Email Resend Count'
- '31011: Wallet ID not found'
- '31012: Error occurred while creating the card'
- '31024: Core service error'
- '31025: Error while initiating LN transaction'
- '31026: Error while initiating SEPA transaction'
- '31027: Error encountered during instant swap process'
- '31028: Please try again later. Too many attempts?'
- '31029: Error while sending multi-currency transaction'
- '31030: Error while initiating inter/intra transaction'
- '31031: Error while processing external service provider'
- '31032: Error while initiating on-chain transaction'
- '31033: Error while fetching email/mobile expiry details'
- '31038: Invalid fee estimate - Please verify configured fee parameters'
- '31047: Error accessing the requested resource'
- '31048: Account operation expired'
- '31055: Rate limit exceeded'
- '31062: Funds cannot be sent in this direction'
- '31064: Invalid OTP'
- '31065: Too many 2FA attempts'
- '31067: Invalid transaction type specified'
- '31069: Mobile number not set for the account'
- '31073: Invalid wallet ID provided'
- '31075: Invalid user ID provided'
- '31078: Invalid withdrawal fee specified'
- '31079: Account has already been enriched'
- '31081: Error occurred during enrichment process'
- '31082: Invalid currency specified'
- '31083: User not found in the system'
- '31088: Trade value is below the minimum allowed'
- '31090: Insufficient balance for the transaction'
- '31092: Error occurred while creating user account'
- '31093: Error occurred while patching user data'
- '31094: Error encountered while sending verification code'
- '32012: Card creation limit reached'
- '32013: accountIdToLink is required when a fee is configured'
- '32014: Invalid account ID for this operation'
- '32015/31009: Mobile number already exists'
- '32016: Invalid mobile number'
- '32017: User is terminated'
- '41001: Invalid currency/network pair'
- '41002: Address already whitelisted'
- '41003: Address cannot be whitelisted'
- '41004: Address not whitelisted'
- '41005: Invalid destination address on send'
- '41006: Invalid address'
- '41007: Account lacks permissions for this feature'
- '41008: Withdrawal fees exceed the amount'
- '41009: Liquidity provider error'
- '60001: User limit exceeded'
auth_info:
  mentioned_objects: []
client:
  base_url: https://www.sandbox.striga.com/api/v1
  headers:
    api-key: string
    Authorization: string
source_metadata: null
