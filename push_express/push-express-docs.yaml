resources:
- name: pushes
  endpoint:
    path: /pushes
    method: POST
    data_selector: id
    params: {}
- name: bind_pushes
  endpoint:
    path: /sched/:sched_type/:sched_id/pushes
    method: PUT
    data_selector: push_ids
    params: {}
- name: get_push
  endpoint:
    path: /pushes/:push_id
    method: GET
    data_selector: id
    params: {}
- name: Applications
  endpoint:
    path: /api/apps
    method: GET
- name: Application groups
  endpoint:
    path: /api/appgroups
    method: GET
- name: App Instances (Devices)
  endpoint:
    path: /api/devices
    method: GET
- name: Pushes
  endpoint:
    path: /api/pushes
    method: GET
- name: Instant sending
  endpoint:
    path: /api/instant
    method: GET
- name: One-time sending in future
  endpoint:
    path: /api/onesend
    method: GET
- name: Smart weekly sending
  endpoint:
    path: /api/smartweekly
    method: GET
- name: Auto-push sending
  endpoint:
    path: /api/conversion
    method: GET
- name: Custom events
  endpoint:
    path: /api/custom-events
    method: GET
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: GET
    data_selector: events
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: GET
    data_selector: events
    params: {}
- name: applications
  endpoint:
    path: /api/apps
    method: GET
    data_selector: applications
    params: {}
- name: app_instances
  endpoint:
    path: /api/devices
    method: GET
    data_selector: devices
    params: {}
- name: pushes
  endpoint:
    path: /api/pushes
    method: POST
    data_selector: push
    params: {}
- name: applications
  endpoint:
    path: /api/apps
    method: GET
- name: application_groups
  endpoint:
    path: /api/appgroups
    method: GET
- name: app_instances
  endpoint:
    path: /api/devices
    method: GET
- name: pushes
  endpoint:
    path: /api/pushes
    method: GET
- name: instant_sending
  endpoint:
    path: /api/instant
    method: POST
- name: one_time_sending
  endpoint:
    path: /api/onesend
    method: POST
- name: smart_weekly_sending
  endpoint:
    path: /api/smartweekly
    method: POST
- name: auto_push_sending
  endpoint:
    path: /api/conversion
    method: POST
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
- name: applications
  endpoint:
    path: /api/apps
    method: GET
    data_selector: applications
- name: pushes
  endpoint:
    path: /api/pushes
    method: POST
    data_selector: pushes
- name: applications
  endpoint:
    path: /api/apps
    method: GET
    data_selector: applications
- name: application_groups
  endpoint:
    path: /api/appgroups
    method: GET
    data_selector: applicationGroups
- name: app_instances
  endpoint:
    path: /api/devices
    method: GET
    data_selector: instances
- name: pushes
  endpoint:
    path: /api/pushes
    method: POST
    data_selector: pushResponse
- name: instant_sending
  endpoint:
    path: /api/instant
    method: POST
    data_selector: instantResponse
- name: one_time_sending
  endpoint:
    path: /api/onesend
    method: POST
    data_selector: oneTimeResponse
- name: smart_weekly_sending
  endpoint:
    path: /api/smartweekly
    method: POST
    data_selector: weeklyResponse
- name: auto_push_sending
  endpoint:
    path: /api/conversion
    method: POST
    data_selector: conversionResponse
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: customEventResponse
- name: applications
  endpoint:
    path: /api/apps
    method: GET
- name: application_groups
  endpoint:
    path: /api/appgroups
    method: GET
- name: app_instances_devices
  endpoint:
    path: /api/devices
    method: GET
- name: pushes
  endpoint:
    path: /api/pushes
    method: GET
- name: instant_sending
  endpoint:
    path: /api/instant
    method: POST
- name: one_time_sending
  endpoint:
    path: /api/onesend
    method: POST
- name: smart_weekly_sending
  endpoint:
    path: /api/smartweekly
    method: POST
- name: auto_push_sending
  endpoint:
    path: /api/conversion
    method: POST
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
- name: create_app
  endpoint:
    path: /apps
    method: POST
    data_selector: id
- name: list_apps
  endpoint:
    path: /apps
    method: GET
    data_selector: '[]'
- name: get_app
  endpoint:
    path: /apps/:app_id
    method: GET
    data_selector: ''
- name: archive_app
  endpoint:
    path: /apps/:app_id/archive
    method: POST
    data_selector: ''
- name: delete_app
  endpoint:
    path: /apps/:app_id
    method: DELETE
    data_selector: ''
- name: restore_app
  endpoint:
    path: /apps/:app_id/unarchive
    method: POST
    data_selector: ''
- name: update_app
  endpoint:
    path: /apps/:app_id
    method: PUT
    data_selector: ''
- name: update_credentials_and_push_provider
  endpoint:
    path: /apps/:app_id/creds/:push_provider
    method: PUT
    data_selector: ''
- name: get_vapid_key
  endpoint:
    path: /apps/:app_id/vapidkey
    method: GET
    data_selector: ''
- name: application_group
  endpoint:
    path: /app/groups
    method: GET
    data_selector: records
    params:
      archived: 'false'
- name: create_application_group
  endpoint:
    path: /app/groups
    method: POST
    data_selector: id
- name: get_application_group
  endpoint:
    path: /app/groups/:app_group_id
    method: GET
    data_selector: records
- name: archive_application_group
  endpoint:
    path: /app/groups/:app_group_id/archive
    method: POST
- name: delete_application_group
  endpoint:
    path: /app/groups/:app_group_id
    method: DELETE
- name: restore_application_group
  endpoint:
    path: /apps/:app_group_id/unarchive
    method: POST
- name: update_application_group
  endpoint:
    path: /app/groups/:app_group_id
    method: PUT
- name: app_instances
  endpoint:
    path: /query/app-instances
    method: POST
    data_selector: app_instances
- name: create_app
  endpoint:
    path: /apps
    method: POST
- name: list_apps
  endpoint:
    path: /apps
    method: GET
    params:
      archived: 'false'
- name: get_app
  endpoint:
    path: /apps/:app_id
    method: GET
- name: archive_app
  endpoint:
    path: /apps/:app_id/archive
    method: POST
- name: delete_app
  endpoint:
    path: /apps/:app_id
    method: DELETE
- name: restore_app
  endpoint:
    path: /apps/:app_id/unarchive
    method: POST
- name: update_app
  endpoint:
    path: /apps/:app_id
    method: PUT
- name: update_credentials_and_push_provider
  endpoint:
    path: /apps/:app_id/creds/:push_provider
    method: PUT
- name: get_vapid_key
  endpoint:
    path: /apps/:app_id/vapidkey
    method: GET
- name: send_instant_push
  endpoint:
    path: /api/b/v2/send/instant
    method: POST
    data_selector: none
    params: {}
- name: application_group
  endpoint:
    path: /app/groups
    method: POST
    data_selector: id
    params: {}
- name: list_application_groups
  endpoint:
    path: /app/groups
    method: GET
    data_selector: '[]'
    params:
      archived: 'false'
- name: get_application_group
  endpoint:
    path: /app/groups/:app_group_id
    method: GET
    data_selector: id
    params: {}
- name: archive_application_group
  endpoint:
    path: /app/groups/:app_group_id/archive
    method: POST
    data_selector: null
    params: {}
- name: delete_application_group
  endpoint:
    path: /app/groups/:app_group_id
    method: DELETE
    data_selector: null
    params: {}
- name: restore_application_group
  endpoint:
    path: /apps/:app_group_id/unarchive
    method: POST
    data_selector: null
    params: {}
- name: update_application_group
  endpoint:
    path: /app/groups/:app_group_id
    method: PUT
    data_selector: null
    params: {}
- name: OneSend Scheduler
  endpoint:
    path: /sched/onesend
    method: POST
    data_selector: ''
    params: {}
- name: Get OneSend Scheduler
  endpoint:
    path: /sched/onesend/:sched_id
    method: GET
    data_selector: ''
    params: {}
- name: smart_weekly_scheduler
  endpoint:
    path: /api/b/v2/sched/smartweekly
    method: POST
    data_selector: scheduler
    params: {}
- name: get_smart_weekly_scheduler
  endpoint:
    path: /api/b/v2/sched/smartweekly/:sched_id
    method: GET
    data_selector: scheduler
    params: {}
- name: send_push_instantly
  endpoint:
    path: /send/instant
    method: POST
- name: Create a Auto-push Scheduler
  endpoint:
    path: /api/b/v2/sched/conversion
    method: POST
- name: Get a Auto-push Scheduler
  endpoint:
    path: /api/b/v2/sched/conversion/:sched_id
    method: GET
- name: custom_events
  endpoint:
    path: /api/b/v2/events
    method: POST
    data_selector: id
- name: OneSend Scheduler
  endpoint:
    path: /sched/onesend
    method: POST
    data_selector: null
    params: {}
- name: Get OneSend Scheduler
  endpoint:
    path: /sched/onesend/:sched_id
    method: GET
    data_selector: null
    params: {}
- name: smart_weekly_scheduler
  endpoint:
    path: /api/b/v2/sched/smartweekly
    method: POST
    data_selector: id
- name: get_smart_weekly_scheduler
  endpoint:
    path: /api/b/v2/sched/smartweekly/:sched_id
    method: GET
    data_selector: id
- name: app_instance
  endpoint:
    path: /apps/:app_id/instances
    method: POST
    data_selector: id
    params: {}
- name: update_app_instance_info
  endpoint:
    path: /apps/:app_id/instances/:ic_id/info
    method: PUT
    data_selector: id
    params: {}
- name: notification_event
  endpoint:
    path: /apps/:app_id/instances/:ic_id/events/notification
    method: POST
    data_selector: null
    params: {}
- name: lifecycle_event
  endpoint:
    path: /apps/:app_id/instances/:ic_id/events/lifecycle
    method: POST
    data_selector: null
    params: {}
- name: Auto-push Scheduler
  endpoint:
    path: /api/b/v2/sched/conversion
    method: POST
    data_selector: id
    params: {}
- name: Get Auto-push Scheduler
  endpoint:
    path: /api/b/v2/sched/conversion/:sched_id
    method: GET
    data_selector: id
    params: {}
- name: app_instance
  endpoint:
    path: /api/r/v2/apps/:app_id/instances
    method: POST
    data_selector: id
    params: {}
- name: update_app_instance_info
  endpoint:
    path: /api/r/v2/apps/:app_id/instances/:ic_id/info
    method: PUT
    data_selector: id
    params: {}
- name: notification_events
  endpoint:
    path: /api/r/v2/apps/:app_id/instances/:ic_id/events/notification
    method: POST
    data_selector: ''
    params: {}
- name: lifecycle_events
  endpoint:
    path: /api/r/v2/apps/:app_id/instances/:ic_id/events/lifecycle
    method: POST
    data_selector: ''
    params: {}
- name: custom_event
  endpoint:
    path: /api/b/v2/events
    method: POST
    data_selector: id
- name: create_app
  endpoint:
    path: /apps
    method: POST
    data_selector: id
- name: list_apps
  endpoint:
    path: /apps
    method: GET
    data_selector: '[]'
- name: get_app
  endpoint:
    path: /apps/:app_id
    method: GET
    data_selector: id
- name: archive_app
  endpoint:
    path: /apps/:app_id/archive
    method: POST
- name: delete_app
  endpoint:
    path: /apps/:app_id
    method: DELETE
- name: restore_app
  endpoint:
    path: /apps/:app_id/unarchive
    method: POST
- name: update_app
  endpoint:
    path: /apps/:app_id
    method: PUT
- name: update_credentials
  endpoint:
    path: /apps/:app_id/creds/:push_provider
    method: PUT
- name: get_vapid_key
  endpoint:
    path: /apps/:app_id/vapidkey
    method: GET
- name: app_instance
  endpoint:
    path: /api/r/v2/apps/:app_id/instances
    method: POST
    data_selector: id
- name: update_app_info
  endpoint:
    path: /api/r/v2/apps/:app_id/instances/:ic_id/info
    method: PUT
    data_selector: id
- name: notification_event
  endpoint:
    path: /api/r/v2/apps/:app_id/instances/:ic_id/events/notification
    method: POST
    data_selector: msg_id
- name: lifecycle_event
  endpoint:
    path: /api/r/v2/apps/:app_id/instances/:ic_id/events/lifecycle
    method: POST
    data_selector: event
- name: get_id_for_new_app_instance
  endpoint:
    path: /apps/:app_id/instances
    method: POST
    data_selector: id
    params: {}
- name: update_app_instance_info
  endpoint:
    path: /apps/:app_id/instances/:ic_id/info
    method: PUT
    data_selector: id
    params: {}
- name: notification_events
  endpoint:
    path: /apps/:app_id/instances/:ic_id/events/notification
    method: POST
    data_selector: ''
    params: {}
- name: lifecycle_events
  endpoint:
    path: /apps/:app_id/instances/:ic_id/events/lifecycle
    method: POST
    data_selector: ''
    params: {}
- name: applications
  endpoint:
    path: /api/apps
    method: GET
- name: application_groups
  endpoint:
    path: /api/appgroups
    method: GET
- name: app_instances
  endpoint:
    path: /api/devices
    method: GET
- name: pushes
  endpoint:
    path: /api/pushes
    method: GET
- name: instant_sending
  endpoint:
    path: /api/instant
    method: POST
- name: one_time_sending
  endpoint:
    path: /api/onesend
    method: POST
- name: smart_weekly_sending
  endpoint:
    path: /api/smartweekly
    method: POST
- name: auto_push_sending
  endpoint:
    path: /api/conversion
    method: POST
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
- name: create_app
  endpoint:
    path: /apps
    method: POST
- name: list_apps
  endpoint:
    path: /apps
    method: GET
    params:
      archived: 'false'
- name: get_app
  endpoint:
    path: /apps/:app_id
    method: GET
- name: archive_app
  endpoint:
    path: /apps/:app_id/archive
    method: POST
- name: delete_app
  endpoint:
    path: /apps/:app_id
    method: DELETE
- name: restore_app
  endpoint:
    path: /apps/:app_id/unarchive
    method: POST
- name: update_app
  endpoint:
    path: /apps/:app_id
    method: PUT
- name: update_credentials_and_push_provider
  endpoint:
    path: /apps/:app_id/creds/:push_provider
    method: PUT
- name: get_vapid_key
  endpoint:
    path: /apps/:app_id/vapidkey
    method: GET
notes:
- The service worker file must have a name push-express-sw.js. Otherwise, the installation
  of service worker will fail.
- Requires integration with Firebase
- You can use one Firebase project for all your apps
- APNs tokens are not generated on Xcode simulators.
- Sandbox or Production APNs tokens are not interchangeable.
- You will need to integrate your Push.Express account with Firebase
- You can use one project for all your apps
- You can use same key for all apps
- You can use one project for all your apps.
- You can use same key for all apps.
- Requires integration with Firebase.
- You can use one Firebase project for all your apps.
- APNs tokens are not interchangeable between Sandbox and Production modes
- APNs tokens are not generated on Xcode simulators
- 'To authorize, you need to add the header ''Authorization: Bearer ...'' (get your
  API KEY in your personal account on ''Personal'' tab).'
- No more than 10000 records can be returned.
- Integrate your Push.Express account with Firebase.
- 'To authorize, you need to add the header "Authorization: Bearer ..." (get your
  API KEY in your personal account on "Personal" tab).'
- Retry requests infinitely with exponential backoff on error.
- All HTTP response codes above 400 MUST be considered as error.
- Clients must use UUIDv4 or UUIDv7 for installation-token generation.
- 'To authorize, you need to add the header ''Authorization: Bearer ...'''
- No more than 10000 records can be returned
errors:
- '400: request error. Request has invalid data. Check your request (url, headers,
  payload)'
- '401: is returned when provided API token is invalid. Check your authentication
  data.'
- '403: is returned when access to resource for current user is denied.'
- '404: is returned when resource doesn''t exist. Check your request data.'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: The requested endpoint does not exist.'
- 400 - request error. Request has invalid data. Check your request (url, headers,
  payload)
- 401 - provided API token is invalid. Check your authentication data.
- 404 - resource doesn't exist. Check your request data.
- 400 - request error. Request has invalid data. Check you request (url, headers,
  payload)
- 401 - is returned when provided API token is invalid. Check your authentication
  data.
- 404 - is returned when resource doesn't exist. Check your request data.
- '400: request error. Request has invalid data. Check you request (url, headers,
  payload)'
- '401: Check your authentification data.'
- '404: Check your request data.'
- 401 is returned when provided API token is invalid. Check your authentification
  data.
- 404 is returned when resource doesn't exist. Check your request data.
- All HTTP response codes 5xx - other errors from proxy servers, load balancers, etc.
- 403 is returned when access to resource for current user is denied.
- 401 - invalid API token. Check your authentification data.
- 403 - access to resource for current user is denied.
- '401: provided API token is invalid. Check your authentication data.'
- '403: access to resource for current user is denied.'
- '404: resource doesn''t exist. Check your request data.'
- 401 - is returned when provided API token is invalid. Check your authentification
  data.
- 403 - is returned when access to resource for current user is denied.
- 401 is returned when provided API token is invalid. Check your authentication data.
- 400 - request error. Request has invalid data.
- 401 - invalid API token.
- 403 - access to resource denied.
- 404 - resource doesn't exist.
- 5xx - other errors from proxy servers.
- '400: Validation error'
- '404: Resource not found'
- '500: Internal server error'
- '401: is returned when provided API token is invalid. Check your authentification
  data.'
- 'validation error: ...'
- '401: invalid API token. Check your authentification data.'
- '400: Bad Request'
- '404: Not Found'
- '500: Internal Server Error'
- 'Backend errors will always have content-type: application/json header and json
  response body'
- 400 - request error. Check your request (url, headers, payload)
- 401 - provided API token is invalid
auth_info:
  mentioned_objects: []
client:
  base_url: https://core.push.express/api/b/v2
  headers:
    content-type: application/json
  auth:
    location: header
    header_name: Authorization
source_metadata: null
