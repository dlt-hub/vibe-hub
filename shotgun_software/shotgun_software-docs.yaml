resources:
- name: create
  endpoint:
    path: /create
    method: POST
    data_selector: entity
    params: {}
- name: find
  endpoint:
    path: /find
    method: GET
    data_selector: results
    params: {}
- name: update
  endpoint:
    path: /update
    method: PUT
    data_selector: entity
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: success
    params: {}
- name: note_thread
  endpoint:
    path: /note_thread_read/{note_id}
    method: GET
    data_selector: notes
    params: {}
- name: text_search
  endpoint:
    path: /text_search
    method: GET
    data_selector: matches
    params: {}
- name: work_schedule
  endpoint:
    path: /work_schedule_read
    method: GET
    data_selector: workScheduleRules
    params: {}
- name: work_schedule_read
  endpoint:
    path: /work_schedule_read
    method: GET
    data_selector: work_schedule
    params:
      start_date: YYYY-MM-DD
      end_date: YYYY-MM-DD
- name: work_schedule_update
  endpoint:
    path: /work_schedule_update
    method: POST
    data_selector: work_schedule_update
    params:
      date: YYY-MM-DD
      working: bool
      description: str
      project: dict
      user: dict
      recalculate_field: str
- name: preferences_read
  endpoint:
    path: /preferences_read
    method: GET
    data_selector: preferences
    params:
      prefs: list
- name: activity_stream
  endpoint:
    path: /activity_stream
    method: GET
    data_selector: updates
- name: followers
  endpoint:
    path: /followers
    method: GET
    data_selector: followers
- name: following
  endpoint:
    path: /following
    method: GET
    data_selector: following
- name: schema_entity
  endpoint:
    path: /api/v1/schema/entity
    method: GET
    data_selector: entities
    params: {}
- name: schema_field
  endpoint:
    path: /api/v1/schema/field
    method: GET
    data_selector: fields
    params: {}
- name: Version
  endpoint:
    path: /find
    method: GET
    data_selector: results
- name: Asset
  endpoint:
    path: /find_one
    method: GET
    data_selector: result
- name: Task
  endpoint:
    path: /summarize
    method: GET
    data_selector: summaries
- name: task
  endpoint:
    path: /api/task
    method: GET
    data_selector: results
    params: {}
- name: create
  endpoint:
    path: /create
    method: POST
- name: find
  endpoint:
    path: /find
    method: GET
- name: find_one
  endpoint:
    path: /find_one
    method: GET
- name: update
  endpoint:
    path: /update
    method: PUT
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: revive
  endpoint:
    path: /revive
    method: POST
- name: batch
  endpoint:
    path: /batch
    method: POST
- name: summarize
  endpoint:
    path: /summarize
    method: GET
- name: note_thread_read
  endpoint:
    path: /note_thread_read
    method: GET
- name: text_search
  endpoint:
    path: /text_search
    method: GET
- name: update_project_last_accessed
  endpoint:
    path: /update_project_last_accessed
    method: POST
- name: work_schedule_read
  endpoint:
    path: /work_schedule_read
    method: GET
- name: work_schedule_update
  endpoint:
    path: /work_schedule_update
    method: PUT
- name: preferences_read
  endpoint:
    path: /preferences_read
    method: GET
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: download_attachment
  endpoint:
    path: /download_attachment
    method: GET
- name: activity_stream_read
  endpoint:
    path: /activity_stream_read
    method: GET
- name: follow
  endpoint:
    path: /follow
    method: POST
- name: unfollow
  endpoint:
    path: /unfollow
    method: POST
- name: followers
  endpoint:
    path: /followers
    method: GET
- name: following
  endpoint:
    path: /following
    method: GET
- name: schema_entity_read
  endpoint:
    path: /schema_entity_read
    method: GET
- name: schema_field_read
  endpoint:
    path: /schema_field_read
    method: GET
- name: schema_field_create
  endpoint:
    path: /schema_field_create
    method: POST
- name: schema_field_update
  endpoint:
    path: /schema_field_update
    method: PUT
- name: schema_field_delete
  endpoint:
    path: /schema_field_delete
    method: DELETE
- name: schema_read
  endpoint:
    path: /schema_read
    method: GET
- name: preferences_read
  endpoint:
    path: /preferences_read
    method: GET
    data_selector: pref_name
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: id
- name: upload_thumbnail
  endpoint:
    path: /upload_thumbnail
    method: POST
    data_selector: id
- name: download_attachment
  endpoint:
    path: /download_attachment
    method: GET
    data_selector: file_path
- name: get_attachment_download_url
  endpoint:
    path: /get_attachment_download_url
    method: GET
    data_selector: url
- name: activity_stream_read
  endpoint:
    path: /activity_stream_read
    method: GET
    data_selector: updates
- name: Fault
  endpoint:
    path: /shotgun_api3/Fault
    method: GET
- name: AuthenticationFault
  endpoint:
    path: /shotgun_api3/AuthenticationFault
    method: GET
- name: MissingTwoFactorAuthenticationFault
  endpoint:
    path: /shotgun_api3/MissingTwoFactorAuthenticationFault
    method: GET
- name: followers
  endpoint:
    path: /followers
    method: GET
    data_selector: records
- name: following
  endpoint:
    path: /following
    method: GET
    data_selector: records
- name: schema_entity_read
  endpoint:
    path: /schema_entity_read
    method: GET
    data_selector: records
- name: schema_field_read
  endpoint:
    path: /schema_field_read
    method: GET
    data_selector: records
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
notes:
- Entities are not deleted destructively; they are retired.
- Requires specific entity permissions for API access
- Data returned may vary based on user permissions
- Make sure to have retries for file uploads. Failures when uploading will occasionally
  happen. When it does, immediately retrying to upload usually works.
- On older (< v5.1.0) Shotgun versions, non-downloadable files on Shotgun don’t raise
  exceptions, they cause a server error which returns a 200 with the page content.
- Turns off hostname matching validation for SSL certificates if NO_SSL_VALIDATION
  is set to True.
- The returned display names for this method will be localized when the `localize`
  Shotgun config property is set to `True`.
- Defaults to sorting by 'id' in ascending order.
- Requires setup of connected app in Shotgun
- Returns lists of users/entities followed or following.
- Schema methods allow introspection and modification.
- As of Flow Production Tracking version 7.0 it is possible to also use filter presets.
- This is an experimental feature. Feel free to disable this feature if you are experiencing
  any issues.
- When using script-based authentication, register each script separately with Flow
  Production Tracking and have individual API keys for each.
- The Flow Production Tracking API is not thread-safe. If you want to do threading
  we strongly suggest that you use one connection object per thread and not share
  the connection.
- If you are simply looking for information about how to upload and link things in
  Flow Production Tracking, this doc is not for you.
- You cannot modify the `this_file` field after you create an Attachment.
- Smart Cut Fields should be considered deprecated.
- If you want to work with ‘smart’ cut fields through the API, your script should
  use a corresponding ‘raw’ fields for all updates.
- The site configured at this address does not contain the requested file.
- Our Developer documentation has moved!
errors:
- 'ENTITY_NOT_FOUND: The specified entity does not exist.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify authentication credentials'
- '404 Not Found: Ensure the endpoint is correct'
- 'ShotgunError: General error raised by the Shotgun API.'
- 'AuthenticationFault: Exception when the server side reports an error related to
  authentication.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'AuthenticationFault: Exception when the server side reports an error related to
  authentication'
- 'MissingTwoFactorAuthenticationFault: Exception when the server side reports an
  error related to missing two-factor authentication credentials'
- '404: File not found'
auth_info:
  mentioned_objects:
  - HumanUser
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Shotgun
  - Script
  - API key
client:
  base_url: https://my-site.shotgrid.autodesk.com
  auth:
    type: user-based
    location: header
source_metadata: null
