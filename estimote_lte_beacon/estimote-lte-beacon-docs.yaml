resources:
- name: advertise_variant_1
  endpoint:
    path: /advertise/variant1
    method: POST
    data_selector: callback
    params: {}
- name: advertise_variant_2
  endpoint:
    path: /advertise/variant2
    method: POST
    data_selector: data
    params: {}
- name: start_scan
  endpoint:
    path: /startScan
    method: POST
    data_selector: callback
    params:
      duration: 10000
- name: stop_scan
  endpoint:
    path: /stopScan
    method: POST
    data_selector: resolvePromise
    params:
      resolvePromise: true
- name: parse
  endpoint:
    path: /parse
    method: POST
    data_selector: scanRecord
    params: {}
- name: operators
  endpoint:
    path: /getOperators
    method: GET
    data_selector: operators
    params: {}
- name: status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: cells
  endpoint:
    path: /getCells
    method: GET
    data_selector: cells
    params: {}
- name: info
  endpoint:
    path: /getInfo
    method: GET
    data_selector: info
    params: {}
- name: proximity_events
  endpoint:
    path: /proximity/events
    method: GET
    data_selector: events
- name: proximity_events
  endpoint:
    path: /cloud/api/proximity/events
    method: GET
- name: proximity_beacons
  endpoint:
    path: /v1/proximity_beacons
    method: GET
    data_selector: data
    params: {}
- name: iot_apps
  endpoint:
    path: /lte_beacons/iot_apps
    method: GET
- name: location-update
  endpoint:
    path: /lte-beacon/cloud-code-and-apis/#device-events-api
    method: POST
    data_selector: location-update
    params: {}
- name: beacon_advertising
  endpoint:
    path: /lte-beacon/advertising
    method: POST
    data_selector: packet
    params: {}
- name: beacon_scanning
  endpoint:
    path: /lte-beacon/scanning
    method: POST
    data_selector: scanResult
    params: {}
- name: eddystone_url
  endpoint:
    path: /eddystone-url
    method: GET
    data_selector: url
    params: {}
- name: eddystone_uid
  endpoint:
    path: /eddystone-uid
    method: GET
    data_selector: namespace
    params: {}
- name: eddystone_tlm
  endpoint:
    path: /eddystone-tlm
    method: GET
    data_selector: vbatt
    params: {}
- name: eddystone_eid
  endpoint:
    path: /eddystone-eid
    method: GET
    data_selector: eid
    params: {}
- name: advertise
  endpoint:
    path: /advertise
    method: POST
    data_selector: packet
    params: {}
- name: startScan
  endpoint:
    path: /startScan
    method: POST
    data_selector: scanRecord
    params:
      duration: '10000'
- name: stopScan
  endpoint:
    path: /stopScan
    method: POST
    data_selector: resolvePromise
    params:
      resolvePromise: 'true'
- name: parse
  endpoint:
    path: /parse
    method: POST
    data_selector: parsedData
    params: {}
- name: setLedColor
  endpoint:
    path: /setLedColor
    method: POST
    data_selector: color
    params: {}
- name: setLedBrightness
  endpoint:
    path: /setLedBrightness
    method: POST
    data_selector: brightness
    params: {}
- name: getMaxLeds
  endpoint:
    path: /getMaxLeds
    method: GET
    data_selector: maxLeds
    params: {}
- name: operators
  endpoint:
    path: /modem/getOperators
    method: GET
    data_selector: promise
    params: {}
- name: status
  endpoint:
    path: /modem/getStatus
    method: GET
    data_selector: promise
    params: {}
- name: cells
  endpoint:
    path: /modem/getCells
    method: GET
    data_selector: promise
    params: {}
- name: info
  endpoint:
    path: /modem/getInfo
    method: GET
    data_selector: promise
    params: {}
- name: uptime
  endpoint:
    path: /app/getUptime
    method: GET
    data_selector: number
    params: {}
- name: memStats
  endpoint:
    path: /app/getMemStats
    method: GET
    data_selector: object
    params: {}
- name: lte_device_events
  endpoint:
    path: /docs/#api-LTE-getDeviceEvents
    method: GET
- name: locations
  endpoint:
    path: /cloud/locations
    method: GET
    data_selector: locations
- name: location
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
- name: mirror
  endpoint:
    path: /mirror
    method: POST
    data_selector: data
- name: mirror_template
  endpoint:
    path: /mirror/
    method: GET
    data_selector: templates
    params: {}
- name: beacon_templates
  endpoint:
    path: /mirror/templates-with-beacon-triggers
    method: GET
    data_selector: templates
- name: location
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
- name: beacon
  endpoint:
    path: /beacons
    method: GET
- name: Eddystone
  endpoint:
    path: /eddystone/
    method: GET
    data_selector: packets
    params: {}
- name: Nearby Messages API
  endpoint:
    path: /eddystone/google-proximity-beacon-api/
    method: GET
    data_selector: features
    params: {}
- name: Eddystone Configuration Service
  endpoint:
    path: /eddystone/configuration-service/
    method: GET
    data_selector: configurations
    params: {}
- name: beacons
  endpoint:
    path: /v1beta1/beacons:register
    method: POST
    data_selector: status
- name: Eddystone Configuration Service
  endpoint:
    path: /eddystone/configuration-service/
    method: GET
    data_selector: records
- name: Proximity SDK
  endpoint:
    path: /proximity/sdk
    method: GET
    data_selector: records
- name: Estimote Telemetry
  endpoint:
    path: /estimote/telemetry
    method: GET
    data_selector: records
- name: Estimote Telemetry Packets
  endpoint:
    path: /sensors/estimote-telemetry/
    method: GET
    data_selector: packets
- name: BulkUpdater
  endpoint:
    path: /managing-beacons/bulk-updater
    method: GET
    data_selector: bulk_updater_info
    params: {}
- name: beacon
  endpoint:
    path: /v2/devices/{beacon_id}
    method: POST
    data_selector: null
    params: {}
- name: proximity_beacons
  endpoint:
    path: /api/proximity/beacons
    method: GET
    data_selector: records
- name: beacons
  endpoint:
    path: /api/beacons
    method: GET
    data_selector: beacons
- name: proximity_zones
  endpoint:
    path: /proximity/zones
    method: POST
    data_selector: zones
    params: {}
- name: proximity_events
  endpoint:
    path: /cloud/proximity/events
    method: GET
    data_selector: events
- name: proximity_events
  endpoint:
    path: /cloud/oauth/
    method: POST
    data_selector: events
- name: NFC Stamps Example
  endpoint:
    path: /Android-SDK/tree/master/Examples/NFCStamps
    method: GET
    data_selector: example_app
- name: iot_apps
  endpoint:
    path: /lte_beacons/iot_apps
    method: GET
    data_selector: apps
- name: user_messages
  endpoint:
    path: /v3/lte/user_messages
    method: POST
    data_selector: user_messages
- name: location-update
  endpoint:
    path: /lte-beacon/cloud-code-and-apis/#device-events-api
    method: POST
    data_selector: event
    params: {}
- name: eddystone_url
  endpoint:
    path: /eddystone-url
    method: GET
    data_selector: type
    params: {}
- name: eddystone_uid
  endpoint:
    path: /eddystone-uid
    method: GET
    data_selector: type
    params: {}
- name: eddystone_tlm
  endpoint:
    path: /eddystone-tlm
    method: GET
    data_selector: type
    params: {}
- name: eddystone_eid
  endpoint:
    path: /eddystone-eid
    method: GET
    data_selector: type
    params: {}
- name: device_events
  endpoint:
    path: /docs/#api-LTE-getDeviceEvents
    method: GET
- name: Indoor Location
  endpoint:
    path: /indoor/map-your-location/
    method: GET
    data_selector: location_data
- name: Location
  endpoint:
    path: /locations
    method: GET
- name: poster_view
  endpoint:
    path: /mirror/poster
    method: POST
    data_selector: viewData
    params: {}
- name: table_view
  endpoint:
    path: /mirror/table
    method: POST
    data_selector: tableData
    params: {}
- name: scanner_api
  endpoint:
    path: /mirror/scanner-api
    method: GET
    data_selector: devices
    params: {}
- name: beacon_scan
  endpoint:
    path: /mirror/scanning
    method: GET
    data_selector: devices
- name: location
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
- name: beacon
  endpoint:
    path: /beacons
    method: GET
    data_selector: beacons
- name: iBeacon
  endpoint:
    path: /ibeacon/
    method: GET
    data_selector: beacons
    params: {}
- name: Eddystone-UID
  endpoint:
    path: /eddystone/uid
    method: GET
- name: Eddystone-EID
  endpoint:
    path: /eddystone/eid
    method: GET
- name: Eddystone-URL
  endpoint:
    path: /eddystone/url
    method: GET
- name: Eddystone-TLM
  endpoint:
    path: /eddystone/tlm
    method: GET
- name: register_beacon
  endpoint:
    path: /v1beta1/beacons:register
    method: POST
    data_selector: status
- name: telemetry_a
  endpoint:
    path: /sensors/estimote-telemetry/telemetry-a
    method: GET
    data_selector: packets
    params: {}
- name: telemetry_b
  endpoint:
    path: /sensors/estimote-telemetry/telemetry-b
    method: GET
    data_selector: packets
    params: {}
- name: bulk_updater
  endpoint:
    path: /managing-beacons/bulk-updater/
    method: GET
    data_selector: records
    params: {}
- name: bulk_update
  endpoint:
    path: /api/Devices/UpdateDevice
    method: POST
    data_selector: configurations
    params: {}
- name: devices
  endpoint:
    path: /v2/devices/{beacon_id}
    method: POST
    data_selector: identifier
    params: {}
- name: proximity
  endpoint:
    path: /api/proximity
    method: GET
notes:
- Default advertising parameters are transmit power -4dBm and 500ms interval.
- This API might not be available on all hardware revisions.
- Calling functions again before promise is resolved will cause previous promise to
  be rejected.
- Some hardware revisions may not support certain functions.
- On iOS, Background Mode usage means extra scrutiny for your app when submitting
  it to the App Store.
- Older and lower-end smartphones might not be capable of such 'BLE delegation'.
- Proximity SDK is a Swift 4 framework.
- Proximity SDK requires iBeacon Location Services to work in the background.
- For events to be handled in the background, add the Proximity Observer in AppDelegate.
- Beacons should be spread apart a good few meters to trigger enter/exit actions.
- Proximity SDK requires Location Services to work in the background.
- No other Background Modes are required!
- Desired mean trigger distance is based on Bluetooth signal strength estimations.
- The closer to the beacon, the more accurate the trigger.
- Uses OAuth2 for authentication.
- Use the same email address you used when purchasing the beacons.
- Uses OAuth2 for authorization.
- Syncing pauses when battery is low
- The sync period can be set to a maximum of 90 days.
- Requires setup of IoT App in Estimote Cloud for advertising
- Scanning can affect battery life of the LTE Beacon
- Invalid LED number will cause no effect (no error will be thrown).
- This function might not be available on all hardware revisions.
- Your functions must finish within 30 seconds, and has very limited amount of memory
  and processing power.
- Batch processing is an experimental feature so it is still under testing and development.
- Data Preview uses data carried over BLE.
- Certain principles need to be adhered to for efficient use of the LTE Beacon's limited
  resources.
- Each release can have a minimum firmware version configured.
- Minimum firmware version can be changed for drafts, but as soon as a release is
  deployed it becomes fixed.
- Apple is very protective about the use of Background Modes in the App Store. If
  you’re submitting a Nearable app for review, make sure to mention it uses the Bluetooth
  LE background mode to detect nearables.
- The mapping wizard and the Location Builder API are currently iOS-only.
- Indoor Location requires the beacons to be placed at about chest-height.
- Connect the app to Estimote Cloud to download the map of the location.
- Uses Background Mode for location updates with Estimote beacons.
- Location updates in the background occur every 5 seconds.
- You will need App ID and App Token to access the Cloud API.
- Mirror is a video beacon that broadcasts its presence over Bluetooth.
- Remember to check if Bluetooth is on, and to ask for the ACCESS_COARSE_LOCATION
  runtime permission.
- Mirror has processing power equivalent to a mid-range smartphone. Try to avoid/limit
  CSS animations or heavy JS scripts.
- Playing HD <video> is also not officially supported at this time—it might stutter.
- Use Estimote beacons for detecting motion and displaying information.
- Ensure to safely remove the Mirror device after loading templates.
- Mirror renders the screen by loading an HTML5 template from its flash memory
- You must initialize it with mirror.init() first
- Make sure that your wireless network works on 2.4GHz band
- WiFI SSID is not hidden
- Router has Internet connectivity and cloud.estimote.com is accessible
- Ensure beacons are updated to the newest firmware.
- 'Keep in mind: While we allow customizing the advertising interval for the iBeacon
  packet in Estimote Beacons, the iBeacon specification requires it to be 100 ms for
  full compatibility!'
- Authorization to use location data is required.
- Requires the 'always' authorization to access Location Services
- Limit of 20 geofences per app
- Requires active Internet connection to work.
- Eddystone supports UID, URL, and TLM packets.
- The id field must be a base64-encoded string of the binary identifier your beacon
  broadcasts.
- ECS is disabled by default and requires specific steps to enable.
- As for DP 6.1 version of Android Things, there were some problems with Bluetooth
  scanning on Raspberry Pi 3.0, especially when used in noisy environment.
- Estimote Telemetry is enabled by default on Proximity and Location Beacons.
- Uses Estimote Cloud for authorization — requires an Estimote account.
- 'Remember to set an App ID and Token: [ESTConfig setupAppID:@"app-id" andAppToken:@"app-token"]
  Without it, the SDK can’t access your Estimote Cloud account, where the connection
  keys reside.'
- Double-check if the App ID and Token are valid. Typos are the nightmare of all programmers!
- Bulk Updater is an API available in the Fleet Management SDKs, which fetches pending
  settings from your Estimote Cloud account.
- Mesh networking allows you to connect multiple beacons in a mesh.
- Firmware is updated only if the beacon's Automatic Firmware Update setting is ON
  and the BulkUpdater's skipFirmwareUpdateStep flag is set to FALSE.
- Manual mode provides greater control over specific settings.
- Fetch interval defines how frequently the BulkUpdater checks for new settings.
- To change the state of the LED from the Cloud interface, you’ll need Location Beacons
  with firmware 4.13.1 or newer.
- Authorization Code method only is supported.
- Most of the time, you will only have access to Proximity Beacons anyway, since that’s
  what we usually send or bring to hackathons.
- We recommend against using 3rd-party bindings unless you really know what you're
  doing.
- Requires setup of OAuth for API access
- Older and lower-end smartphones might not be capable of such “BLE delegation”.
- Requires setup of Estimote Cloud credentials.
- Proximity SDK requires setup of Estimote Cloud credentials.
- Desired mean trigger distance is quite a mouthful, but that’s because we really
  want to emphasize that distance estimations based on Bluetooth signal strength are
  pretty rough.
- In general, the closer to the beacon, the more accurate the trigger.
- Beacons must be spread apart to avoid overlapping zones.
- Starting in mid-September 2017, Estimote Beacons ship with Estimote Monitoring enabled
  by default.
- Requires 1 or more Proximity Beacon (hardware revision “G” or “J”) or Location Beacon
  (hardware revision “F3.x” or “I”)
- Device with Android & NFC necessary
- Uses Web Bluetooth for connection to the beacon.
- The LTE Beacon doesn’t have persistent configuration — all the configuration is
  expected to be performed during the start of the beacon and the micro-app.
- Maximum sync period is 90 days.
- Sync interval can be changed to 1 hour during tracking.
- The base-tier Estimote Cloud subscription comes with 1000 syncs per each LTE Beacon
  per year.
- Batch processing is experimental and may change
- Familiarizing yourself with limitations and following the principles outlined in
  the guide is an important first step to creating a successful solution using Estimote
  LTE Beacons.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Apple is very protective about the use of Background Modes in the App Store.
- If you’re submitting a Nearable app for review, make sure to mention it uses the
  Bluetooth LE background mode to detect nearables.
- Mapping wizard and Location Builder API are currently iOS-only.
- Don't forget to change the 'my-kitchen' identifier to that of your own location.
  You'll find the identifier on the list of your locations in Estimote Cloud.
- You need to include your appId and appToken to make requests to Estimote Cloud.
- Requires Bluetooth and location permissions for mobile apps.
- SDKs available for both iOS and Android.
- Mirror can detect nearby Bluetooth devices.
- All interactions with the API are through a global `mirror` object.
- WiFi SSID is not hidden
- It might take up to a couple of minutes for Mirror to connect to your network
- If your template fetches images or other content right after it shows up, those
  fetch operations might fail because it takes some time for Mirror to connect to
  network after booting up
- Make sure that all of your beacons are updated to the newest firmware.
- You need to create a map of your space using the automapping process in the iOS
  Estimote Indoor app.
- iBeacon packets cannot be detected via Core Bluetooth.
- Users must request permission to access location data.
- There’s a limit of 20 geofences per app, meaning ordinarily, you can only gather
  analytics in the background for up to 20 beacons
- Secure UUID mechanism requires active Internet connection to work.
- Every Estimote Beacon ever shipped supports Eddystone UID, URL, and TLM packets.
- 'For ‘Request URI’, type: https://proximitybeacon.googleapis.com/v1beta1/beacons:register'
- ECS is currently supported on 2018 Proximity Beacons (hardware revisions “J”) and
  all Location Beacons (hardware revisions “F” and “I”).
- ECS is disabled by default.
- The initial ECS password/key is all zeroes.
- As for DP 6.1 version of Android Things, there were some problems with Bluetooth
  scanning on Raspberry Pi 3.0, especially when used in noisy environment (lots of
  beacons, many Wi-Fi networks, etc.).
- There were no such problems with NXP i.MX7D.
- Estimote Telemetry packets are broadcast by Estimote Beacons.
- Telemetry A and B packets provide sensor readings and beacon health data.
- Estimote Beacons can broadcast many different packets in many configurations.
- Near to Connect and Shake to Connect features can improve connection performance.
- 'Remember to set an App ID and Token: [ESTConfig setupAppID:@"app-id" andAppToken:@"app-token"]'
- Editing beacon settings in Estimote Cloud will result in the beacons having pending
  settings.
- Bulk Updater is an API available in the Fleet Management SDKs.
- Firmware is updated only if the beacon’s Automatic Firmware Update setting is ON
  and the BulkUpdater’s skipFirmwareUpdateStep flag is set to FALSE.
- Authorization via OAuth is currently in private beta.
- Uses OAuth2 for authentication
errors:
- '[ESR0004] Not enough resources'
- ESR0003 Unsupported feature.
- ESR0004 Not enough resources
- ESR1103 Message too big.
- '401 Unauthorized: Check your API key and OAuth token.'
- '404 Not Found: Verify the endpoint and resource.'
- 'Not enough storage space: When the events queue gets full.'
- 'ESR0001: Unknown error'
- 'ESR0002: Reboot loop detected.'
- 'ESR0003: Unsupported feature.'
- 'ESR0004: Not enough resources'
- 'ESR0005: Time is not valid'
- 'ESR0006: Deprecated function *{name}* at line *{line}*'
- 'ESR0007: Scheduler error'
- 'ESR0101: Internal VM error'
- 'ESR0102: Out of VM memory'
- 'ESR0103: VM executed too long'
- 'ESR0104: Execution interrupted'
- 'ESR0105: Out of slot execution'
- 'ESR0106: App install error *{error_code}*'
- 'ESR0107: Forbidden'
- 'ESR0201: Storage error'
- 'ESR0202: No storage space'
- 'ESR0203: Not serializable'
- 'ESR0204: Message too big (max *{max_size}*b).'
- 'ESR0205: Data store timeout'
- 'ESR0206: No more variables'
- 'ESR0207: Data store internal error *{error_code}*'
- 'ESR0401: Modem unknown error'
- 'ESR0402: Modem timeout'
- 'ESR0403: Modem command error'
- 'ESR0404: Modem init error'
- 'ESR0405: SIM card error/missing'
- 'ESR0406: Modem too low voltage'
- 'ESR0407: Modem forced stop'
- 'ESR0410: Airplane mode is on'
- 'ESR0411: Invalid tech: *{value}*'
- 'ESR0412: Invalid bandplan'
- 'ESR0415: Not registered'
- 'ESR0416: Initial config failed'
- 'ESR0413: Modem unlisted error: *{error_code}*'
- 'ESR0601: Bad args'
- 'ESR0602: New operation'
- 'ESR0603: JS error:'
- 'ESR0701: Registration timeout'
- 'ESR0702: Firmware check failed'
- 'ESR0703: Modem fatal error'
- 'ESR0704: Request failed: *{error_code}*'
- 'ESR0705: Sync timeout'
- 'ESR0706: Handler timeout'
- 'ESR0502: Value out of range: *{value}*'
- 'ESR0503: Value out of enum range: *{value}*'
- 'ESR0504: Invalid interval: *{value}*'
- 'ESR0510: Odd char number'
- 'ESR0511: Not hex number: *{char}* at *{position}*'
- 'ESR1103: Message too big. Max *{max_size}*b'
- 'ESR1104: Invalid format'
- 'ESR1105: Invalid record type: *{type}*'
- 'ESR1106: Missing field: *{field_name}*'
- 'ESR1107: Bad ID'
- 'ESR1202: minInterval longer than timeout: *{timeout}* > *{min_interval}*'
- 'ESR1203: Position not found'
- 'ESR1501: Scan start error: *{error_code}*'
- 'ESR1502: Invalid adv packet'
- 'ESR1505: Invalid UUID len'
- 'ESR1506: Invalid ID len'
- 'ESR1701: Bad args for role'
- 'ESR1703 Invalid options: Invalid UWB configuration options. Check UWB documentation.'
- 'ESR1704 Warning: Using default PAN ID: {pan_id} - Pan ID has default value. UWB
  will still work, but to future-proof your solution to avoid conflicts with other
  Estimote devices you should use unique PAN ID value for all your devices you with
  to communicate over UWB.'
- 'ESR1705 Not started: UWB must be started before that function is used.'
- 'ESR1706 Bad role: {role} - This feature is not available in this role. Change role
  or don’t call this function in current role. Also this role might not be supported
  on given hardware.'
- 'ESR1801 Unsupported event: {event_code} - Event type is not supported on this hardware
  revision'
- 'ESR1802 Bad event options: Event was provided with bad options. In case of MLC
  event check if model was defined and it contains non-zero, even number of bytes.'
- 'ESR1803 Internal sensor error: Sensor returned error state. Probably its internal
  state got damaged.'
- 'ESR1804 Data too big. Max {max_size}b: Provided data is too big to fit into memory
  buffer. Try to make you model smaller.'
- 'ESR1805 Bad data format: Provided model data is in wrong or unrecognized format.'
- 'ESR2001 Unsupported type: {algorithm_id} - Unsupported hash function or encoding
  algorithm. Some hardware revisions might not support it.'
- 'ESR2002 Message too big. Max {max_size}b: Encoded/decoded message is too big to
  be processed (more then few kB).'
- 'ESR2003 Bad data or key length: Selected algorithm may accept data or keys only
  in specified length. Please provide data or key with length padded or stripped to
  required length.'
- 'ESR2101 Internal DFU error {error_code}: Internal firmware update error with code.'
- 'ESR2102 Invalid checksum: Calculated checksum does not match checksum provided
  with firmware image. This may indicate bad image or error during upload.'
- 'ESR2103 Bad hardware: {firmware_hw_revision} != {device_hw_revision} - Firmware
  image was prepared for different hardware revision.'
- 'ESR2104 Min version not meet: Current firmware is too old to be upgraded with provided
  update file.'
- 'ESR2105 Firmware update timeout: Firmware update procedure waited too long for
  next data chunk. This could happen due to Bluetooth connection issues. Please try
  again to update firmware.'
- 'ESR2106 Image too big: {firmware_size}b>{max_firmware_size}b - Firmware image won’t
  fit into memory. Probably this image is for a different hardware revision or has
  been corrupted.'
- Cloud ownership verification failed
- Connection to the device over Bluetooth failed
- Bluetooth services discovery failed
- Device authorization with Estimote Cloud failed.
- Device settings synchronization with Estimote Cloud failed.
- '401 Unauthorized: Recheck OAuth token or scopes'
- '401 Unauthorized: Check your API token or permissions.'
- '401 Unauthorized: Check your Estimote Cloud credentials.'
- ESR0001 Unknown error
- ESR0002 Reboot loop detected.
- ESR0005 Time is not valid
- ESR0006 Deprecated function *{name}* at line *{line}*
- ESR0007 Scheduler error
- ESR0101 Internal VM error
- ESR0102 Out of VM memory
- ESR0103 VM executed too long
- ESR0104 Execution interrupted
- ESR0105 Out of slot execution
- ESR0106 App install error *{error_code}*
- ESR0107 Forbidden
- ESR0201 Storage error
- ESR0202 No storage space
- ESR0203 Not serializable
- ESR0204 Message too big (max *{max_size}*b).
- ESR0205 Data store timeout
- ESR0206 No more variables
- ESR0207 Data store internal error *{error_code}*
- ESR0401 Modem unknown error
- ESR0402 Modem timeout
- ESR0403 Modem command error
- ESR0404 Modem init error
- ESR0405 SIM card error/missing
- ESR0406 Modem too low voltage
- ESR0407 Modem forced stop
- ESR0410 Airplane mode is on
- 'ESR0411 Invalid tech: *{value}*'
- ESR0412 Invalid bandplan
- ESR0415 Not registrered
- ESR0416 Initial config failed
- 'ESR0413 Modem unlisted error: *{error_code}*'
- ESR0601 Bad args
- ESR0602 New operation
- 'ESR0603 JS error:'
- ESR0701 Registration timeout
- ESR0702 Firmware check failed
- ESR0703 Modem fatal error
- 'ESR0704 Request failed: *{error_code}*'
- ESR0705 Sync timeout
- ESR0706 Handler timeout
- 'ESR0502 Value out of range: *{value}*'
- 'ESR0503 Value out of enum range: *{value}*'
- 'ESR0504 Invalid interval: *{value}*'
- ESR0510 Odd char number
- 'ESR0511 Not hex number: *{char}* at *{position}*'
- ESR1103 Message too big. Max *{max_size}*b
- ESR1104 Invalid format
- 'ESR1105 Invalid record type: *{type}*'
- 'ESR1106 Missing field: *{field_name}*'
- ESR1107 Bad ID
- 'ESR1202 minInterval longer than timeout: *{timeout}* > *{min_interval}*'
- ESR1203 Position not found
- 'ESR1501 Scan start error: *{error_code}*'
- ESR1502 Invalid adv packet
- ESR1505 Invalid UUID len
- ESR1506 Invalid ID len
- ESR1701 Bad args for role
- 'ESR1703: Invalid options'
- 'ESR1704: Warning: Using default PAN ID'
- 'ESR1705: Not started'
- 'ESR1706: Bad role'
- 'ESR1801: Unsupported event'
- 'ESR1802: Bad event options'
- 'ESR1803: Internal sensor error'
- 'ESR1804: Data too big'
- 'ESR1805: Bad data format'
- 'ESR2001: Unsupported type'
- 'ESR2002: Message too big'
- 'ESR2003: Bad data or key length'
- 'ESR2101: Internal DFU error'
- 'ESR2102: Invalid checksum'
- 'ESR2103: Bad hardware'
- 'ESR2104: Min version not meet'
- 'ESR2105: Firmware update timeout'
- 'ESR2106: Image too big'
- 'Bluetooth not enabled: Check Bluetooth settings on your device.'
- 'LOCATION_PERMISSION_DENIED: Ensure location permissions are granted.'
- Device authorization with Estimote Cloud failed
- Device settings synchronization with Estimote Cloud failed
auth_info:
  mentioned_objects:
  - EstimoteCloudCredentials
  - App ID
  - App Token
  - OauthToken
  - OAuth
  - CloudCredentials
  - MirrorClient
  - ProximityObserver
client:
  base_url: https://cloud.estimote.com
  auth:
    type: oauth2
source_metadata: null
