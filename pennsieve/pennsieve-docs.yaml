resources:
- name: dataset_by_doi
  endpoint:
    path: /reference/getdatasetbydoi-1
    method: GET
- name: dataset_by_doi
  endpoint:
    path: /discover/datasets/doi/{doiPrefix}/{doiSuffix}
    method: GET
    data_selector: response
- name: dataset
  endpoint:
    path: /reference/getdatasetbydoi-1
    method: GET
- name: dataset_by_doi
  endpoint:
    path: /discover/datasets/doi/{doiPrefix}/{doiSuffix}
    method: GET
    data_selector: datasets
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
    params: {}
- name: delete_items
  endpoint:
    path: /data/delete
    method: POST
- name: delete_items
  endpoint:
    path: /data/delete
    method: POST
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: datasets
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: templates
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: delete_items
  endpoint:
    path: /data/delete
    method: POST
- name: delete_item
  endpoint:
    path: /data/delete
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: create_relationship
  endpoint:
    path: /createrelationship
    method: POST
    data_selector: records
- name: fetch_record_with_relationships
  endpoint:
    path: /getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /services/data/v1/datasets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: report
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: workspaces
- name: dataset_status_options
  endpoint:
    path: /dataset/status/options
    method: GET
    data_selector: statusOptions
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset_features
  endpoint:
    path: /api/dataset/features
    method: GET
    data_selector: features
    params: {}
- name: file_management
  endpoint:
    path: /api/file/management
    method: GET
    data_selector: files
    params: {}
- name: metadata_management
  endpoint:
    path: /api/metadata/management
    method: GET
    data_selector: metadata
    params: {}
- name: permissions_management
  endpoint:
    path: /api/permissions/management
    method: GET
    data_selector: permissions
    params: {}
- name: integrations_management
  endpoint:
    path: /api/integrations/management
    method: GET
    data_selector: integrations
    params: {}
- name: dataset_analysis
  endpoint:
    path: /api/dataset/analysis
    method: GET
    data_selector: analysis
    params: {}
- name: dataset_publishing
  endpoint:
    path: /api/dataset/publishing
    method: GET
    data_selector: publishing
    params: {}
- name: public_datasets
  endpoint:
    path: /public_datasets
    method: GET
    data_selector: datasets
    params: {}
- name: dataset_details
  endpoint:
    path: /dataset_details
    method: GET
    data_selector: details
    params: {}
- name: public_datasets
  endpoint:
    path: /public_datasets
    method: GET
    data_selector: datasets
- name: dataset_details
  endpoint:
    path: /datasets/details
    method: GET
    data_selector: details
- name: upload_manifest
  endpoint:
    path: /upload/manifest
    method: POST
    data_selector: manifest
    params: {}
- name: dataset
  endpoint:
    path: /dataset
    method: GET
    data_selector: datasets
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: upload_manifest
  endpoint:
    path: /api/v1/upload_manifests
    method: POST
    data_selector: manifest
    params: {}
- name: upload_manifests
  endpoint:
    path: /dataset-activity/upload-manifests
    method: GET
    data_selector: manifests
- name: upload_manifest
  endpoint:
    path: /upload/manifest
    method: POST
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: data
    params: {}
- name: upload_manifests
  endpoint:
    path: /dataset-activity/upload-manifests
    method: GET
    data_selector: manifests
    params: {}
- name: dataset_information
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: request_access
  endpoint:
    path: /request/access
    method: POST
    data_selector: request
    params: {}
- name: request_rehydration
  endpoint:
    path: /request/rehydration
    method: POST
    data_selector: rehydrate
    params: {}
- name: compute_resource
  endpoint:
    path: /account/register
    method: POST
- name: compute_node
  endpoint:
    path: /configuration
    method: POST
- name: Applications
  endpoint:
    path: /applications
    method: POST
    data_selector: applications
- name: applications
  endpoint:
    path: /applications
    method: POST
    data_selector: application
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: files
    params: {}
- name: AWS Account
  endpoint:
    path: /aws/account/overview
    method: GET
    data_selector: data
    params: {}
- name: IAM User
  endpoint:
    path: /aws/iam/user
    method: GET
    data_selector: data
    params: {}
- name: S3 Bucket
  endpoint:
    path: /aws/s3/bucket
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /api/notifications
    method: POST
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: notifications
- name: personal_information
  endpoint:
    path: /personal_information
    method: GET
    data_selector: data
    params: {}
- name: personal_information
  endpoint:
    path: /personal_information
    method: GET
    data_selector: data
    params: {}
- name: service_usage
  endpoint:
    path: /service_usage
    method: GET
    data_selector: usage_data
    params: {}
- name: delete_items
  endpoint:
    path: /reference/deleteitems
    method: POST
- name: deletes_items
  endpoint:
    path: /data/delete
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: move_files
  endpoint:
    path: /data/move
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: create_new_dataset_model
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: metadata_model
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: metadata_record
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: update_properties
  endpoint:
    path: /data/id/properties
    method: PUT
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationship
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: model
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
    data_selector: models
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: records
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: records
- name: record_package
  endpoint:
    path: /reference/deleterecordpackage
    method: DELETE
- name: all_record_packages
  endpoint:
    path: /reference/deleteallrecordpackages
    method: DELETE
- name: attached_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: pennsieve_package
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: relationships_using_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: all_relationships
  endpoint:
    path: /reference/deleterelationships
    method: DELETE
- name: relationship_between_records
  endpoint:
    path: /reference/deleterelationship
    method: DELETE
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: select_statement
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: record_with_relationships_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DELETE
- name: archive_all_records
  endpoint:
    path: /reference/archiverecords
    method: DELETE
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: metadata_update
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: latest_model_version
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: model_from_template_version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: latest_models_for_dataset
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: new_dataset_model
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: template_version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: template_metadata_update
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
- name: latest_template_versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: template_latest_or_as_of
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
- name: create_model_template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: update_properties
  endpoint:
    path: /data/id/properties
    method: PUT
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: search
  endpoint:
    path: /reference/search
    method: GET
- name: packages
  endpoint:
    path: /reference/packages
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
    data_selector: records
- name: discussions
  endpoint:
    path: /discussions/
    method: POST
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: search
  endpoint:
    path: /reference/search
    method: GET
- name: packages
  endpoint:
    path: /reference/packages
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach_a_pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: delete_all_inbound_and_outbound_relationships_for_a_record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: create_relationship_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: records
  endpoint:
    path: /reference/batchcreaterelationships
    method: POST
- name: discussions
  endpoint:
    path: /discussions/package/id
    method: GET
- name: manifests
  endpoint:
    path: /getmanifestlist
    method: GET
- name: metadata_models
  endpoint:
    path: /graphgetmodels
    method: GET
- name: records
  endpoint:
    path: /concept_instances
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: delete_a_comment
  endpoint:
    path: /discussions/discussionId/comment/commentId
    method: DELETE
    data_selector: response
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxies
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: annotation
  endpoint:
    path: /reference/getannotationoperation
    method: GET
- name: annotation
  endpoint:
    path: /annotations/{id}
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: search
  endpoint:
    path: /reference/search
    method: GET
- name: packages
  endpoint:
    path: /reference/packages
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: annotations
  endpoint:
    path: /annotations/id
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: manifest
  endpoint:
    path: /manifest
    method: GET
    data_selector: records
- name: workflow
  endpoint:
    path: /workflows
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: annotations
  endpoint:
    path: /reference/getannotations
    method: GET
    data_selector: records
- name: annotations
  endpoint:
    path: /annotations
    method: POST
    data_selector: response
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: get_record_with_relationshipsandpackages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: get_annotation
  endpoint:
    path: /reference/getannotationoperation
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach_a_pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete_all_inbound_and_outbound_relationships_for_a_record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: execute_a_select_statement_over_model_records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: create_a_new_version_of_an_existing_model_from_a_model_template_version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create_template_version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: annotation
  endpoint:
    path: /annotations/{id}
    method: GET
- name: annotations
  endpoint:
    path: /annotations/id
    method: GET
    data_selector: object
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: annotations_layer
  endpoint:
    path: /annotations/layer
    method: POST
- name: annotations_layer
  endpoint:
    path: /annotations/layer
    method: POST
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /records
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: delete_annotation_layer
  endpoint:
    path: /reference/deletelayer
    method: DELETE
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
    params: {}
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: annotations
  endpoint:
    path: /annotations/
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: annotation_layer
  endpoint:
    path: /annotations/layer
    method: POST
- name: annotation_layer
  endpoint:
    path: /annotations/layer/{id}
    method: PUT
- name: annotation_layer
  endpoint:
    path: /annotations/layer
    method: POST
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
- name: record
  endpoint:
    path: /getrecordwithrelationshipsandpackages
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /insertrecords
    method: POST
    data_selector: records
- name: create_relationship
  endpoint:
    path: /createrelationship
    method: POST
    data_selector: records
- name: archive_record
  endpoint:
    path: /archiverecord
    method: DEL
    data_selector: records
- name: update_record
  endpoint:
    path: /updaterecord
    method: PUT
    data_selector: records
- name: create_model
  endpoint:
    path: /createmodel
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: annotation_layer
  endpoint:
    path: /reference/deletelayer
    method: DELETE
- name: annotations
  endpoint:
    path: /annotations/{id}
    method: DELETE
    data_selector: response
    params:
      withDiscussions: true
- name: annotations
  endpoint:
    path: /annotations/id
    method: DELETE
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationship_instancesget_concept_instance_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: delete_annotation_layer
  endpoint:
    path: /annotations/layer/{id}
    method: DELETE
    data_selector: No response
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: record_with_relationships_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: annotations
  endpoint:
    path: /annotations/{id}
    method: PUT
- name: get_organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: update_annotation_layer
  endpoint:
    path: /reference/updatelayer
    method: PUT
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: object
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: object
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: object
- name: update_annotation_layer
  endpoint:
    path: /annotations/layer/{id}
    method: PUT
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: model
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: health_check
  endpoint:
    path: /reference/gethealth
    method: GET
    data_selector: records
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: metadata_models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: models
- name: datasets
  endpoint:
    path: /reference/getmanifest
    method: GET
    data_selector: dataset
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: Get workflows
  endpoint:
    path: /reference/getworkflows
    method: GET
- name: Get integrations
  endpoint:
    path: /reference/getintegrations
    method: GET
- name: Get all Repositories that the authenticated user has access to
  endpoint:
    path: /reference/getrepositories
    method: GET
- name: Get Pennsieve Accounts
  endpoint:
    path: /reference/getpennsieveaccounts
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
    params: {}
- name: annotation
  endpoint:
    path: /annotations/{id}
    method: DELETE
- name: annotations
  endpoint:
    path: /annotations/id
    method: DELETE
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: packages_service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: integration_service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: imaging_service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: import_service
  endpoint:
    path: /reference/import-service
    method: GET
- name: discover_rehydration_service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: readme_service
  endpoint:
    path: /reference/readme-service
    method: GET
- name: account_service
  endpoint:
    path: /reference/account-service
    method: GET
- name: compute_node_service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: app_deploy_service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: repository_service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: github_service
  endpoint:
    path: /reference/github-service
    method: GET
- name: drs_service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: timeseries_service
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: collections_service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: publishing_service
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: metadata_service_1
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: annotations
  endpoint:
    path: /annotations/{id}
    method: PUT
    data_selector: response
    params: {}
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: health_check
  endpoint:
    path: /reference/gethealth
    method: GET
    data_selector: ''
- name: health_check
  endpoint:
    path: /health/
    method: GET
    data_selector: No response
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1query
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxies
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationship_instances
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
- name: health_check
  endpoint:
    path: /health/
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
    data_selector: relationship
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: data use agreements
  endpoint:
    path: /reference/getdatauseagreement
    method: GET
    data_selector: dataUseAgreement
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
- name: health
  endpoint:
    path: /health
    method: GET
- name: create_dataset
  endpoint:
    path: /reference/createdataset
    method: POST
    data_selector: records
- name: get_datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
    data_selector: ''
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params:
      includeBannerUrl: 'false'
      includePublishedDataset: 'false'
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
- name: datasets
  endpoint:
    path: /datasets/
    method: GET
    params:
      includeBannerUrl: 'false'
      includePublishedDataset: 'false'
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /listrecordpackages
    method: GET
- name: attach_a_pennsieve_package_to_a_record
  endpoint:
    path: /createrecordpackage
    method: POST
- name: create_relationships_using_record_keys
  endpoint:
    path: /createrelationshipsbetweenrecords
    method: POST
- name: delete_relationship_between_two_records
  endpoint:
    path: /deleterelationship
    method: DELETE
- name: list_relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
- name: get_paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: collections
  endpoint:
    path: /reference/getcollections
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    params:
      includeBannerUrl: 'false'
      includePublishedDataset: 'false'
- name: collections
  endpoint:
    path: /collections/
    method: GET
- name: datasets
  endpoint:
    path: /datasets/
    method: GET
    params:
      includeBannerUrl: 'false'
      includePublishedDataset: 'false'
- name: datasets
  endpoint:
    path: /collections/
    method: GET
- name: contributors
  endpoint:
    path: /getcontributors
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: contributors
  endpoint:
    path: /reference/getcontributors
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: collections
  endpoint:
    path: /reference/getcollections
    method: GET
    data_selector: records
    params: {}
- name: contributors
  endpoint:
    path: /contributors/
    method: GET
- name: collections
  endpoint:
    path: /collections/
    method: GET
- name: datasets
  endpoint:
    path: /collections/
    method: GET
- name: contributors
  endpoint:
    path: /contributors/
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getpaginateddatasets
    method: GET
- name: datasets
  endpoint:
    path: /datasets/paginated
    method: GET
    data_selector: datasets
    params:
      offset: 0
- name: datasets
  endpoint:
    path: /datasets/paginated
    method: GET
    data_selector: records
    params:
      offset: 0
      orderBy: Name
      orderDirection: Asc
      includeBannerUrl: false
      includePublishedDataset: false
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Packages Service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Readme Service
  endpoint:
    path: /reference/readme-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: get_contributors
  endpoint:
    path: /reference/getcontributors
    method: GET
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: records
- name: contributors
  endpoint:
    path: /contributors/
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: contributors
  endpoint:
    path: /contributors/
    method: GET
- name: datasets
  endpoint:
    path: /datasets-1
    method: GET
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: POST
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: packages_service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: integration_service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: repository_service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: github_service
  endpoint:
    path: /reference/github-service
    method: GET
- name: drs_service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: timeseries_service
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: collections_service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: open_repository_services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: metadata_api
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getpaginateddatasets
    method: GET
- name: request_preview
  endpoint:
    path: /datasets/publication/preview/request
    method: POST
    data_selector: null
    params:
      datasetId: int32
      userId: int32
      dataUseAgreementId: int32
- name: datasets
  endpoint:
    path: /datasets/paginated
    method: GET
    data_selector: datasets
    params:
      limit: 25
      offset: 0
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: models
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: datasets
  endpoint:
    path: /datasets/paginated
    method: GET
    data_selector: records
    params:
      limit: 25
      offset: 0
      orderBy: Name
      orderDirection: Asc
      includeBannerUrl: 'false'
      includePublishedDataset: 'false'
- name: publish_status
  endpoint:
    path: /reference/getpublishstatuses
    method: GET
    data_selector: records
- name: published_datasets
  endpoint:
    path: /datasets/published
    method: GET
- name: published_datasets
  endpoint:
    path: /datasets/published
    method: GET
    data_selector: object
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: published_datasets
  endpoint:
    path: /reference/getorganizationpublisheddatasets
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: published_datasets
  endpoint:
    path: /datasets/published/paginated
    method: GET
    params:
      offset: 0
- name: request_preview
  endpoint:
    path: /datasets/publication/preview/request
    method: POST
    data_selector: null
    params:
      datasetId: int32
      userId: int32
      dataUseAgreementId: int32
- name: published_datasets
  endpoint:
    path: /datasets/published/paginated
    method: GET
    data_selector: records
    params:
      offset: '0'
      orderBy: Name
      orderDirection: Asc
      includeBannerUrl: 'false'
- name: get_record_with_relationships_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DELETE
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update_model_metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: publish_status
  endpoint:
    path: /reference/getpublishstatuses
    method: GET
    data_selector: records
- name: published_datasets
  endpoint:
    path: /datasets/published
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: published_datasets
  endpoint:
    path: /datasets/published
    method: GET
- name: Models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: Records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: Queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: POST
    data_selector: records
    params: {}
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
    data_selector: records
    params: {}
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
    data_selector: records
    params: {}
- name: remove_collection
  endpoint:
    path: /datasets/{datasetId}/collections/{collectionId}
    method: DELETE
- name: get_published_datasets
  endpoint:
    path: /organization/published_datasets
    method: GET
- name: published_datasets
  endpoint:
    path: /reference/getorganizationpublisheddatasets
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: record_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: published_datasets
  endpoint:
    path: /datasets/published/paginated
    method: GET
    data_selector: datasets
    params:
      limit: 25
      offset: 0
      orderBy: Name
      orderDirection: Asc
      includeBannerUrl: false
- name: published_datasets
  endpoint:
    path: /datasets/published/paginated
    method: GET
    data_selector: datasets
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: get_models_for_dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: list_all_relationships_for_a_Metadata_Model
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: create_metadata_record
  endpoint:
    path: /reference/serverapiv1concept_instancescreate_concept_instance
    method: POST
- name: switch_contributors
  endpoint:
    path: /datasets/{datasetId}/contributors/switch
    method: POST
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
    params: {}
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
    data_selector: records
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: records_paginated
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: remove_collection
  endpoint:
    path: /reference/removecollection
    method: DELETE
- name: data_use_agreement
  endpoint:
    path: /reference/getdatauseagreement
    method: GET
    data_selector: records
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: metadata_models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: data_use_agreements
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements
    method: GET
    data_selector: response
- name: data_use_agreements
  endpoint:
    path: /organizations/organizationId/data-use-agreements
    method: GET
    data_selector: array of objects
- name: remove_collection
  endpoint:
    path: /datasets/{datasetId}/collections/{collectionId}
    method: DELETE
    data_selector: No response
- name: get_published_datasets
  endpoint:
    path: /organization/published_datasets
    method: GET
    data_selector: records
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: remove_contributor
  endpoint:
    path: /reference/removecontributor
    method: DELETE
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: metadata
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: remove_contributor
  endpoint:
    path: /datasets/{datasetId}/contributors/{contributorId}
    method: DELETE
    data_selector: No response
- name: switch_contributors
  endpoint:
    path: /datasets/{datasetId}/contributors/switch
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DEL
    data_selector: records
    params: {}
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
    data_selector: records
    params: {}
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
    data_selector: records
    params: {}
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
    data_selector: records
    params: {}
- name: get_files_for_manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
    data_selector: records
    params: {}
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
    data_selector: records
    params: {}
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets/{id}
    method: DELETE
    params:
      id: string
- name: data_use_agreements
  endpoint:
    path: /reference/getdatauseagreement
    method: GET
    data_selector: data_use_agreements
- name: data_use_agreement
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: download_data_use_agreement
  endpoint:
    path: /downloaddatauseagreement-1
    method: GET
- name: get_dataset_metadata
  endpoint:
    path: /getdatasetmetadata-1
    method: GET
- name: get_latest_version
  endpoint:
    path: /getdataset-1
    method: GET
- name: data_use_agreement
  endpoint:
    path: /organizations/organizationId/data-use-agreements
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: remove_contributor
  endpoint:
    path: /reference/removecontributor
    method: DELETE
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: repositories
  endpoint:
    path: /reference/getrepositories
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets/{id}
    method: GET
    params:
      includePublishedDataset: 'false'
      limit: 100
      offset: 0
- name: remove_contributor
  endpoint:
    path: /datasets/{datasetId}/contributors/{contributorId}
    method: DELETE
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: data
    params:
      includePublishedDataset: 'false'
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: delete_data_set
  endpoint:
    path: /datasets/{id}
    method: DELETE
    data_selector: null
    params:
      id: string
- name: data_set
  endpoint:
    path: /reference/updatedataset
    method: PUT
- name: datasets
  endpoint:
    path: /datasets/{id}
    method: PUT
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: data_use_agreement
  endpoint:
    path: /datauseagreement
    method: GET
- name: dataset
  endpoint:
    path: /datasets/id
    method: PUT
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: post
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: get
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: get
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: Get all Metadata Records for a Model
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: get_banner
  endpoint:
    path: /reference/getbanner
    method: GET
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: datasets
  endpoint:
    path: /reference/getmanifest
    method: GET
- name: trashcan
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: records
- name: get_banner
  endpoint:
    path: /datasets/{id}/banner
    method: GET
    data_selector: No response
- name: datasets
  endpoint:
    path: /datasets/{id}
    method: GET
    params:
      includePublishedDataset: 'false'
      limit: 100
      offset: 0
- name: datasets
  endpoint:
    path: /datasets/id
    method: GET
    data_selector: data
    params:
      includePublishedDataset: 'false'
      limit: '100'
      offset: '0'
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: fetch_record_with_relationships
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: data_sets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags
    method: GET
    data_selector: tags
    params: {}
- name: datasets
  endpoint:
    path: /datasets/{id}
    method: PUT
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: record_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: upload_banner
  endpoint:
    path: /reference/uploadbanner
    method: PUT
- name: get_banner
  endpoint:
    path: /reference/getbanner
    method: GET
- name: upload_banner
  endpoint:
    path: /datasets/{id}/banner
    method: PUT
- name: get a presigned URL for the banner image of a dataset
  endpoint:
    path: /datasets/id/banner
    method: PUT
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Readme Service
  endpoint:
    path: /reference/readme-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: get_presigned_url_banner_image
  endpoint:
    path: /reference/getbanner
    method: GET
- name: changelog
  endpoint:
    path: /reference/getchangelog
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: banner_image
  endpoint:
    path: /datasets/{id}/banner
    method: GET
    data_selector: No response
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: changelog
  endpoint:
    path: /datasets/{id}/changelog
    method: GET
    data_selector: No response
    params:
      id: string
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: dataset
  endpoint:
    path: /reference/uploadbanner
    method: PUT
- name: upload_banner_image
  endpoint:
    path: /datasets/{id}/banner
    method: PUT
- name: banner
  endpoint:
    path: /datasets/id/banner
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: dataset_changelog
  endpoint:
    path: /datasets/{id}/changelog
    method: PUT
    data_selector: null
    params:
      changelog: string
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: get_changelog
  endpoint:
    path: /reference/getchangelog
    method: GET
    data_selector: changelog
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /getmanifestarchiveurl
    method: GET
- name: Verify status for manifest files
  endpoint:
    path: /verifyfilestatus
    method: GET
- name: Get files for manifest
  endpoint:
    path: /getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /getmanifestlist
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxies
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
- name: changelog_events
  endpoint:
    path: /reference/getchangelogevents
    method: GET
    data_selector: events
    params: {}
- name: changelog
  endpoint:
    path: /datasets/{id}/changelog
    method: GET
- name: changelog_events
  endpoint:
    path: /datasets/{id}/changelog/events
    method: GET
    data_selector: events
    params:
      limit: '25'
      cursor: ''
- name: changelog_events
  endpoint:
    path: /datasets/id/changelog/events
    method: GET
    params:
      limit: '25'
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
    params: {}
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
    params: {}
- name: update_dataset_changelog
  endpoint:
    path: /datasets/{id}/changelog
    method: PUT
    data_selector: null
    params:
      changelog: required
- name: get_changelog_description
  endpoint:
    path: /reference/getchangelog
    method: GET
    data_selector: null
    params: {}
- name: dataset_changelog
  endpoint:
    path: /reference/getchangelogtimeline
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: dataset_changelog
  endpoint:
    path: /datasets/{id}/changelog/timeline
    method: GET
    params:
      userId: ''
      startDate: ''
      category: ''
      cursor: ''
      limit: 25
- name: changelog_events
  endpoint:
    path: /reference/getchangelogevents
    method: GET
- name: get events from changelog
  endpoint:
    path: /datasets/id/changelog/timeline
    method: GET
    params:
      limit: 25
- name: changelog_events
  endpoint:
    path: /datasets/{id}/changelog/events
    method: GET
    data_selector: events
    params:
      limit: 25
      cursor: ''
- name: changelog_events
  endpoint:
    path: /datasets/id/changelog/events
    method: GET
    params:
      limit: '25'
- name: records
  endpoint:
    path: /reference/records
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/models
    method: GET
    data_selector: models
- name: relationships
  endpoint:
    path: /reference/relationships
    method: GET
    data_selector: relationships
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: fetch_record_with_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags
    method: GET
    data_selector: tags
- name: dataset_changelog
  endpoint:
    path: /reference/getchangelogtimeline
    method: GET
- name: datasets
  endpoint:
    path: /datasets/{id}/collaborators
    method: DELETE
- name: dataset_changelog
  endpoint:
    path: /datasets/{id}/changelog/timeline
    method: GET
    data_selector: events
    params:
      userId: ''
      startDate: ''
      category: ''
      cursor: ''
      limit: 25
- name: get_dataset_changelog
  endpoint:
    path: /datasets/id/changelog
    method: GET
- name: get_collaborators
  endpoint:
    path: /datasets/id/collaborators
    method: GET
- name: get events from changelog
  endpoint:
    path: /datasets/id/changelog/timeline
    method: GET
    params:
      limit: '25'
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: get_collaborators
  endpoint:
    path: /reference/getcollaborators
    method: GET
    data_selector: collaborators
    params: {}
- name: collaborators
  endpoint:
    path: /datasets/{id}/collaborators
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: collaborators
  endpoint:
    path: /datasets/id/collaborators
    method: GET
- name: get dataset changelog
  endpoint:
    path: /reference/getchangelogtimeline
    method: GET
- name: get the collaborators of the data set
  endpoint:
    path: /reference/getcollaborators
    method: GET
- name: get_collaborators
  endpoint:
    path: /reference/getcollaborators
    method: GET
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: collaborators
  endpoint:
    path: /datasets/{id}/collaborators
    method: GET
- name: collaborators
  endpoint:
    path: /datasets/id/collaborators
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets
    method: GET
    data_selector: results
- name: datasets
  endpoint:
    path: /datasets/{id}/collaborators
    method: PUT
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: records
- name: get_collaborators
  endpoint:
    path: /datasets/id/collaborators
    method: PUT
    data_selector: object
    params: {}
- name: get_dataset_metadata
  endpoint:
    path: /getdatasetmetadata-1
    method: GET
    data_selector: object
    params: {}
- name: download_dataset_version
  endpoint:
    path: /downloaddatasetversion-1
    method: GET
    data_selector: object
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets/{id}/collaborators
    method: PUT
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: models
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: models
- name: get_collaborators
  endpoint:
    path: /datasets/id/collaborators
    method: PUT
- name: get_dataset_metadata
  endpoint:
    path: /getdatasetmetadata-1
    method: GET
- name: download_dataset
  endpoint:
    path: /downloaddatasetversion-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
    data_selector: records
- name: unshare_dataset_with_organization
  endpoint:
    path: /datasets/{id}/collaborators/organizations
    method: DELETE
    data_selector: No response
    params:
      id: string
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: Model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: model
- name: get the organizations allowed role on the dataset
  endpoint:
    path: /reference/getorganizationcollaboratorrole
    method: GET
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: metadata_models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
    data_selector: files
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
    data_selector: metrics
- name: organizations
  endpoint:
    path: /datasets/{id}/collaborators/organizations
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
    params: {}
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: manifest
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: manifests
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: models
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: queries
- name: organization_collaborator_role
  endpoint:
    path: /reference/getorganizationcollaboratorrole
    method: GET
    data_selector: records
- name: collaborators
  endpoint:
    path: /datasets/{id}/collaborators/organizations
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: organizations
  endpoint:
    path: /datasets/{id}/collaborators/organizations
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
    params: {}
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: relationships
    params: {}
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
    params: {}
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: inserted_records
    params: {}
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
    data_selector: model_version
    params: {}
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: model_versions
    params: {}
- name: update_model_metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
    data_selector: updated_model
    params: {}
- name: get_model_latest_version
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: latest_model
    params: {}
- name: create_new_dataset_model
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
    data_selector: new_dataset_model
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: datasets
  endpoint:
    path: /datasets/{id}/collaborators/organizations
    method: PUT
- name: switch_owner
  endpoint:
    path: /datasets/{id}/collaborators/owner
    method: PUT
    data_selector: null
    params:
      id: string
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: fetch_record_with_related_data
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: manifest
  endpoint:
    path: /manifests
    method: GET
    data_selector: records
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: switch_owner
  endpoint:
    path: /datasets/{id}/collaborators/owner
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: results
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: records
- name: templates_latest_versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
    data_selector: records
- name: delete_team_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/teams
    method: DELETE
    data_selector: null
    params:
      id: string
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: get_all_teams_collaborating_on_data_set
  endpoint:
    path: /reference/getteamcollaborators
    method: GET
- name: collaborators_teams
  endpoint:
    path: /datasets/{id}/collaborators/teams
    method: GET
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: metadata_models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: models
- name: files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
    data_selector: files
- name: collections
  endpoint:
    path: /reference/getcollections-1
    method: GET
    data_selector: collections
- name: collaborators
  endpoint:
    path: /datasets/id/collaborators/teams
    method: GET
- name: delete_team_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/teams
    method: DELETE
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: manifest
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: record
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: collaborators
  endpoint:
    path: /reference/getteamcollaborators
    method: GET
    data_selector: records
- name: collaborators_teams
  endpoint:
    path: /datasets/{id}/collaborators/teams
    method: GET
- name: add_team_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/teams
    method: PUT
- name: get_all_teams_collaborating_on_data_set
  endpoint:
    path: /getteamcollaborators
    method: GET
- name: remove_user_collaborator
  endpoint:
    path: /deleteusercollaborator
    method: DELETE
- name: collaborators
  endpoint:
    path: /datasets/id/collaborators/teams
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: remove_user_collaborator
  endpoint:
    path: /reference/deleteusercollaborator
    method: DELETE
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: delete_user_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/users
    method: DELETE
    data_selector: No response
    params:
      id: string
- name: manifests
  endpoint:
    path: /getmanifestlist
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /graphgetmodels
    method: GET
    data_selector: records
    params: {}
- name: user_collaborators
  endpoint:
    path: /reference/getusercollaborators
    method: GET
- name: collaborators
  endpoint:
    path: /datasets/{id}/collaborators/users
    method: GET
    data_selector: users
    params: {}
- name: user_collaborators
  endpoint:
    path: /datasets/id/collaborators/users
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: add_team_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/teams
    method: PUT
- name: get_all_teams_collaborating
  endpoint:
    path: /reference/getteamcollaborators
    method: GET
- name: remove_user_collaborator
  endpoint:
    path: /reference/deleteusercollaborator
    method: DELETE
- name: add_user_collaborator
  endpoint:
    path: /reference/addusercollaborator
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: remove_user_collaborator
  endpoint:
    path: /reference/deleteusercollaborator
    method: DELETE
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: add_user_as_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/users
    method: PUT
- name: get_individual_users_collaborating
  endpoint:
    path: /reference/getusercollaborators
    method: GET
- name: get_collections_to_data_set
  endpoint:
    path: /reference/getdatasetcollections
    method: GET
- name: delete_user_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/users
    method: DELETE
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: collections
  endpoint:
    path: /reference/getdatasetcollections
    method: GET
- name: collaborators
  endpoint:
    path: /reference/getusercollaborators
    method: GET
- name: collections
  endpoint:
    path: /datasets/{id}/collections
    method: GET
- name: collaborators
  endpoint:
    path: /datasets/{id}/collaborators/users
    method: GET
- name: dataset_collections
  endpoint:
    path: /datasets/id/collections
    method: GET
- name: get_user_collaborators
  endpoint:
    path: /datasets/id/collaborators/users
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: add_user_as_collaborator
  endpoint:
    path: /reference/addusercollaborator
    method: PUT
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getmanifest
    method: GET
    data_selector: records
- name: add_user_as_collaborator
  endpoint:
    path: /datasets/{id}/collaborators/users
    method: PUT
- name: add_dataset_to_collection
  endpoint:
    path: /datasets/{id}/collections
    method: PUT
    data_selector: null
    params:
      collectionId: int32
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: dataset_collections
  endpoint:
    path: /reference/getdatasetcollections
    method: GET
- name: dataset_contributors
  endpoint:
    path: /reference/getdatasetcontributors
    method: GET
- name: collections
  endpoint:
    path: /datasets/{id}/collections
    method: GET
- name: contributors
  endpoint:
    path: /datasets/{id}/contributors
    method: GET
- name: dataset_collections
  endpoint:
    path: /datasets/id/collections
    method: GET
- name: dataset_contributors
  endpoint:
    path: /datasets/id/contributors
    method: GET
    data_selector: array of objects
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: add_contributor
  endpoint:
    path: /reference/addcontributor
    method: PUT
- name: get_contributors
  endpoint:
    path: /reference/getcontributors
    method: GET
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: models
    params: {}
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
    params: {}
- name: add_contributor
  endpoint:
    path: /datasets/{id}/contributors
    method: PUT
    data_selector: No response
    params:
      id: data set id
      contributorId: required
- name: get_contributors
  endpoint:
    path: /datasets/{id}/contributors
    method: GET
    data_selector: contributors
    params:
      id: data set id
- name: List all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: Attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: Create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: Delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: Delete a relationship between two records
  endpoint:
    path: /reference/deleterelationship
    method: DEL
- name: List relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: Get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: Insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: Create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: List model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: Update model metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: Get model with latest version or version as of
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: Create a new version of an existing model from a model template version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: List all models for a dataset with their latest versions or version as of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: Create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: Create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: Create template version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: List template versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: Update template metadata
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
- name: List templates latest versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: Get template latest/as of
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
- name: Create model template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: add this dataset to a collection
  endpoint:
    path: /reference/addcollection
    method: PUT
- name: DOI
  endpoint:
    path: /reference/reservedoi
    method: POST
- name: DataSets
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: doi
  endpoint:
    path: /datasets/{id}/doi
    method: POST
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: add_collection
  endpoint:
    path: /datasets/{id}/collections
    method: PUT
- name: get_collections
  endpoint:
    path: /datasets/{id}/collections
    method: GET
- name: get_contributors
  endpoint:
    path: /datasets/{id}/contributors
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete_relationships
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: doi_information
  endpoint:
    path: /reference/getdoi
    method: GET
    data_selector: records
- name: doi_information
  endpoint:
    path: /datasets/{id}/doi
    method: GET
- name: metadata_records
  endpoint:
    path: /metadata/records
    method: GET
    data_selector: records
    params: {}
- name: dataset_proposals
  endpoint:
    path: /dataset_proposals
    method: GET
    data_selector: proposals
    params: {}
- name: doi
  endpoint:
    path: /datasets/id/doi
    method: GET
    data_selector: object
    params: {}
- name: get_contributors
  endpoint:
    path: /reference/getdatasetcontributors
    method: GET
- name: contributors
  endpoint:
    path: /datasets/{id}/contributors
    method: GET
- name: upload_manifest
  endpoint:
    path: /upload-service
    method: POST
    data_selector: records
    params: {}
- name: metadata
  endpoint:
    path: /metadata-service
    method: GET
    data_selector: records
    params: {}
- name: dataset_contributors
  endpoint:
    path: /datasets/id/contributors
    method: GET
    data_selector: array of objects
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: add_contributor
  endpoint:
    path: /reference/addcontributor
    method: PUT
- name: event
  endpoint:
    path: /datasets/{id}/event
    method: POST
    data_selector: null
    params:
      eventType: string
      message: string
- name: manifest
  endpoint:
    path: /getmanifestlist
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /graphgetmodels
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /concept_instances
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /metadata/records
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /metadata/models
    method: GET
    data_selector: records
- name: add_contributor
  endpoint:
    path: /datasets/{id}/contributors
    method: PUT
- name: get_contributors
  endpoint:
    path: /datasets/{id}/contributors
    method: GET
- name: ignore_files
  endpoint:
    path: /reference/getignorefiles
    method: GET
    data_selector: files
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: ignore_files
  endpoint:
    path: /datasets/{id}/ignore-files
    method: GET
- name: reservedoi
  endpoint:
    path: /reference/reservedoi
    method: post
- name: ignore_files
  endpoint:
    path: /datasets/id/ignore-files
    method: GET
    data_selector: ignoreFiles
- name: doi_reservation
  endpoint:
    path: /datasets/{id}/doi
    method: POST
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: models
  endpoint:
    path: /reference/listallmodels
    method: GET
    data_selector: models
- name: get_dataset
  endpoint:
    path: /datasets/id/doi
    method: POST
    data_selector: 'null'
    params: {}
- name: ignore_files
  endpoint:
    path: /reference/getignorefiles
    method: GET
    data_selector: files
- name: set_ignore_files
  endpoint:
    path: /reference/setignorefiles
    method: PUT
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach_a_Pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete_all_inbound_and_outbound_relationships_for_a_record
  endpoint:
    path: /reference/deleterelationships
    method: DELETE
- name: delete_a_relationship_between_two_records
  endpoint:
    path: /reference/deleterelationship
    method: DELETE
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: execute_a_select_statement_over_model_records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update_record_new_version
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DELETE
- name: archive_all_records_optionally_by_version
  endpoint:
    path: /reference/archiverecords
    method: DELETE
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update_model_metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: get_model_with_latest_version_or_version_as_of
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: create_a_new_version_of_an_existing_model_from_a_model_template_version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: list_all_models_for_a_dataset_with_their_latest_versions_or_version_as_of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: create_a_new_dataset_model_from_a_specific_version_of_a_model_template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create_template_version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: list_template_versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: update_template_metadata
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
- name: list_templates_latest_versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: get_template_latest_as_of
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
- name: create_model_template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: DOI Information
  endpoint:
    path: /reference/getdoi
    method: GET
    data_selector: records
- name: doi_information
  endpoint:
    path: /datasets/{id}/doi
    method: GET
- name: dataset
  endpoint:
    path: /datasets/id/doi
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: metadata_service
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: upload_service
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: collections_service
  endpoint:
    path: /reference/getcollections-1
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: ignore_files
  endpoint:
    path: /reference/getignorefiles
    method: GET
- name: ignore_files
  endpoint:
    path: /datasets/{id}/ignore-files
    method: GET
    data_selector: response
- name: ignore_files
  endpoint:
    path: /datasets/id/ignore-files
    method: GET
    data_selector: ignoreFiles
- name: ignore_files
  endpoint:
    path: /datasets/{id}/ignore-files
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_new_version_of_model
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update_model_metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create_model_template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: list_templates_latest_versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: ignore_files
  endpoint:
    path: /datasets/id/ignore-files
    method: PUT
- name: package_type_counts
  endpoint:
    path: /getpackagetypecounts
    method: GET
- name: get_ignore_files
  endpoint:
    path: /reference/getignorefiles
    method: GET
- name: set_ignore_files
  endpoint:
    path: /reference/setignorefiles
    method: PUT
- name: model_service
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: zipit_service
  endpoint:
    path: /
    method: POST
- name: timeseries_service
  endpoint:
    path: /reference/getchannels-1
    method: GET
- name: collections_service
  endpoint:
    path: /reference/getcollections-1
    method: GET
- name: open_repository_services
  endpoint:
    path: /reference/getpublishingrepositories-1
    method: GET
- name: metadata_service
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: POST
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: POST
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: POST
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: POST
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: POST
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: POST
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: POST
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: POST
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: POST
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: POST
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: POST
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: POST
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: POST
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: POST
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: POST
- name: ignore_files
  endpoint:
    path: /datasets/id/ignore-files
    method: PUT
- name: package_type_counts
  endpoint:
    path: /getpackagetypecounts
    method: GET
- name: data_package_type_counts
  endpoint:
    path: /reference/getpackagetypecounts
    method: GET
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
    params: {}
- name: packages
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: data_package_type_counts
  endpoint:
    path: /reference/getpackagetypecounts
    method: GET
- name: packageTypeCounts
  endpoint:
    path: /datasets/id/packageTypeCounts
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: metadata_models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: packageTypeCounts
  endpoint:
    path: /datasets/id/packageTypeCounts
    method: GET
- name: packages
  endpoint:
    path: /reference/getpackages
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
- name: packages
  endpoint:
    path: /datasets/{id}/packages
    method: GET
    data_selector: packages
- name: get_packages_in_a_dataset
  endpoint:
    path: /reference/getpackages
    method: GET
- name: packages
  endpoint:
    path: /datasets/id/packages
    method: GET
    data_selector: records
    params:
      includeSourceFiles: 'false'
- name: packages
  endpoint:
    path: /datasets/{id}/packages
    method: GET
    data_selector: packages
    params: {}
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: model
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
    data_selector: models
- name: packages
  endpoint:
    path: /datasets/id/packages
    method: GET
    data_selector: records
    params:
      includeSourceFiles: 'false'
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: packages
  endpoint:
    path: /reference/getbatchpackages
    method: GET
    data_selector: records
- name: packages_batch
  endpoint:
    path: /datasets/{id}/packages/batch
    method: GET
- name: multiple_packages
  endpoint:
    path: /reference/getbatchpackages
    method: GET
- name: packages
  endpoint:
    path: /datasets/id/packages/batch
    method: GET
- name: packages_batch
  endpoint:
    path: /datasets/{id}/packages/batch
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: get_packages_in_a_dataset
  endpoint:
    path: /datasets/id/packages/batch
    method: GET
- name: get_user_effective_permission_to_dataset
  endpoint:
    path: /getdatasetpermission
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: user_permission
  endpoint:
    path: /datasets/{id}/permission
    method: GET
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
    data_selector: records
    params: {}
- name: package_metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
    data_selector: records
    params: {}
- name: dataset_permission
  endpoint:
    path: /datasets/id/permission
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: datasets_permission
  endpoint:
    path: /datasets/{id}/permission
    method: GET
    data_selector: permission
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: dataset_permission
  endpoint:
    path: /datasets/id/permission
    method: GET
- name: get_dataset_metadata
  endpoint:
    path: /getdatasetmetadata-1
    method: GET
- name: download_dataset_version
  endpoint:
    path: /downloaddatasetversion-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: records
  endpoint:
    path: /reference/records
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/models
    method: GET
    data_selector: models
- name: packages
  endpoint:
    path: /reference/packages
    method: GET
    data_selector: packages
- name: publication_accept
  endpoint:
    path: /datasets/{id}/publication/accept
    method: POST
    data_selector: null
    params: {}
- name: dataset_permission
  endpoint:
    path: /reference/getdatasetpermission
    method: GET
    data_selector: null
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: cancel_publication
  endpoint:
    path: /datasets/{id}/publication/cancel
    method: POST
- name: publish_complete
  endpoint:
    path: /reference/publishcomplete
    method: PUT
- name: get_record_with_relationshipsandpackages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: list_recordpackages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DELETE
- name: delete_relationship
  endpoint:
    path: /reference/deleterelationship
    method: DELETE
- name: detach_all_packages_from_a_record
  endpoint:
    path: /reference/deleteallrecordpackages
    method: DELETE
- name: detach_a_single_package_from_a_record
  endpoint:
    path: /reference/deleterecordpackage
    method: DELETE
- name: get_relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: models
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: manifests
- name: publication_complete
  endpoint:
    path: /datasets/{id}/publication/complete
    method: PUT
    data_selector: success
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: cancel_publication
  endpoint:
    path: /datasets/{id}/publication/cancel
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: notify_publish_complete
  endpoint:
    path: /reference/publishcomplete
    method: PUT
- name: data_use_agreement
  endpoint:
    path: /reference/getpublicationdatauseagreement
    method: GET
    data_selector: data_use_agreement
- name: data_use_agreement
  endpoint:
    path: /datasets/{id}/publication/data-use-agreement
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: data_use_agreement
  endpoint:
    path: /datasets/id/publication/data-use-agreement
    method: GET
    data_selector: object
- name: publication_complete
  endpoint:
    path: /datasets/{id}/publication/complete
    method: PUT
    data_selector: success
    params:
      publishedDatasetId: int32
      publishedVersionCount: int32
      lastPublishedDate: date-time
      success: boolean
      error: string
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: get_files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: remove_preview_access
  endpoint:
    path: /reference/deletepreview
    method: DELETE
    data_selector: response
    params: {}
- name: data_use_agreement
  endpoint:
    path: /reference/getpublicationdatauseagreement
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: data_use_agreement
  endpoint:
    path: /datasets/{id}/publication/data-use-agreement
    method: GET
- name: remove_preview_access
  endpoint:
    path: /datasets/{id}/publication/preview
    method: DELETE
- name: data_use_agreement
  endpoint:
    path: /datasets/id/publication/data-use-agreement
    method: GET
- name: remove_preview_access_to_user
  endpoint:
    path: /reference/deletepreview
    method: DELETE
    data_selector: response
    params: {}
- name: grant_preview_access_to_user
  endpoint:
    path: /reference/postpreview
    method: POST
    data_selector: response
    params: {}
- name: record_package
  endpoint:
    path: /reference/deleterecordpackage
    method: DEL
    data_selector: records
    params: {}
- name: record_relationship
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
    params: {}
- name: Grant preview access to a user
  endpoint:
    path: /reference/postpreview
    method: POST
- name: Request preview access to a dataset
  endpoint:
    path: /reference/requestpreview
    method: POST
- name: Get the latest published version of each dataset
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1query
    method: POST
    data_selector: records
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxies
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: remove_preview_access
  endpoint:
    path: /datasets/{id}/publication/preview
    method: DELETE
- name: preview_access
  endpoint:
    path: /datasets/{id}/publication/preview
    method: POST
    data_selector: No response
    params:
      userId: int32
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: relationships
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: request_preview_access
  endpoint:
    path: /reference/postpreview
    method: POST
- name: get_datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: get_dataset
  endpoint:
    path: /reference/getdataset-1
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: templates
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: user_preview_rights
  endpoint:
    path: /reference/getpreview
    method: GET
- name: user_preview_rights
  endpoint:
    path: /datasets/{id}/publication/preview
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1query
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxies
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
- name: dataset_preview
  endpoint:
    path: /datasets/id/publication/preview
    method: GET
    data_selector: array of objects
- name: request_preview_access
  endpoint:
    path: /requestpreview
    method: POST
    data_selector: object
- name: grant_preview_access
  endpoint:
    path: /datasets/{id}/publication/preview
    method: POST
    data_selector: null
    params:
      id: string
      userId: int32
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
- name: user_with_preview_rights
  endpoint:
    path: /reference/getpreview
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: publication_preview
  endpoint:
    path: /datasets/{id}/publication/preview
    method: GET
    data_selector: response
    params:
      id: string
- name: publication_preview
  endpoint:
    path: /datasets/id/publication/preview
    method: GET
    data_selector: array of objects
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: reject_publication_request
  endpoint:
    path: /datasets/{id}/publication/reject
    method: POST
    params:
      embargoReleaseDate: string
      comments: string
      publicationType: string
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: package_metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: models_for_dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: datasets_service_trashcan
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: create_workflow
  endpoint:
    path: /reference/createworkflow
    method: POST
- name: get_workflows
  endpoint:
    path: /reference/getworkflows
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: models
    params: {}
- name: files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
    data_selector: files
    params: {}
- name: repositories
  endpoint:
    path: /reference/getrepositories
    method: GET
    data_selector: repositories
    params: {}
- name: release_embargoed_dataset
  endpoint:
    path: /datasets/{id}/publication/release
    method: POST
    params:
      embargoReleaseDate: ''
      comments: ''
      publicationType: ''
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: repositories
  endpoint:
    path: /reference/getrepositories
    method: GET
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: records
- name: model
  endpoint:
    path: /createmodel
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: publication_request
  endpoint:
    path: /datasets/{id}/publication/request
    method: POST
    params:
      embargoReleaseDate: string
      comments: string
      publicationType: string
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: get_files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: get_package_metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: get_models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: search_metadata
  endpoint:
    path: /reference/querygraph
    method: POST
- name: create_relationships
  endpoint:
    path: /reference/batchcreaterelationships
    method: POST
- name: list_trashcan
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: presigned_url_to_manifest
  endpoint:
    path: /reference/getmanifest
    method: GET
- name: restore_deleted_items
  endpoint:
    path: /reference/restoreitems
    method: POST
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: publishing_status
  endpoint:
    path: /reference/getpublishstatus
    method: GET
    data_selector: publishing_status
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: publishing_status
  endpoint:
    path: /datasets/{id}/published
    method: GET
- name: published_dataset
  endpoint:
    path: /datasets/id/published
    method: GET
- name: dataset_metadata
  endpoint:
    path: /getdatasetmetadata-1
    method: GET
- name: dataset_versions
  endpoint:
    path: /getdatasetversions-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_record
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_record
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: fetch_record_with_relationships_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: get_publish_status
  endpoint:
    path: /reference/getpublishstatus
    method: GET
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: published_status
  endpoint:
    path: /datasets/{id}/published
    method: GET
- name: dataset_readme
  endpoint:
    path: /datasets/{id}/readme
    method: GET
    data_selector: No response
- name: dataset
  endpoint:
    path: /datasets/id/published
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: manifest
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: dataset
  endpoint:
    path: /reference/getsubmitteddatasetproposals-1
    method: GET
- name: metadata_models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: datasets
- name: update_readme
  endpoint:
    path: /datasets/{id}/readme
    method: PUT
- name: get_readme
  endpoint:
    path: /datasets/{id}/readme
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationship_instancesget_concept_instance_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: List all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: Attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: Create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: Delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: List relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: Get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: Insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: Create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: List model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: Get model with latest version or version as of
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: update_readme
  endpoint:
    path: /datasets/{id}/readme
    method: PUT
- name: get_readme
  endpoint:
    path: /datasets/{id}/readme
    method: GET
- name: user_effective_role
  endpoint:
    path: /reference/getdatasetrole
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: ''
    params: {}
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: ''
    params: {}
- name: user_effective_role
  endpoint:
    path: /reference/getdatasetrole
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationship_instancesget_concept_instance_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: dataset_role
  endpoint:
    path: /datasets/id/role
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: dataset_role
  endpoint:
    path: /datasets/id/role
    method: GET
    data_selector: object
    params: {}
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: status_log
  endpoint:
    path: /reference/getstatuslog
    method: GET
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: List trashcan contents for a dataset by folder
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: Get workflow instances
  endpoint:
    path: /reference/getworkflowinstances
    method: GET
- name: Get integration by uuid
  endpoint:
    path: /reference/getintegration
    method: GET
- name: Get account details for a specific compute resource
  endpoint:
    path: /reference/getaccount
    method: GET
- name: status_log
  endpoint:
    path: /reference/getstatuslog
    method: GET
- name: status_log
  endpoint:
    path: /datasets/{id}/status-log
    method: GET
    data_selector: status_changes
    params:
      incremental: id
- name: status_log
  endpoint:
    path: /datasets/{id}/status-log
    method: GET
    params:
      limit: 25
      offset: 0
- name: status_log
  endpoint:
    path: /datasets/id/status-log
    method: GET
    params:
      limit: '25'
      offset: '0'
- name: status_log
  endpoint:
    path: /datasets/id/status-log
    method: GET
    params:
      limit: 25
      offset: 0
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: DatasetIntegration
  endpoint:
    path: /reference/getdatasetintegrations
    method: GET
    data_selector: DatasetIntegration
- name: dataset_integration
  endpoint:
    path: /datasets/{id}/webhook
    method: GET
- name: get_dataset_integrations
  endpoint:
    path: /datasets/id/webhook
    method: GET
- name: get_status_log
  endpoint:
    path: /reference/getstatuslog
    method: GET
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: packages_service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: integration_service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: imaging_service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: import_service
  endpoint:
    path: /reference/import-service
    method: GET
- name: discover_rehydration_service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: readme_service
  endpoint:
    path: /reference/readme-service
    method: GET
- name: account_service
  endpoint:
    path: /reference/account-service
    method: GET
- name: compute_node_service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: app_deploy_service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: repository_service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: github_service
  endpoint:
    path: /reference/github-service
    method: GET
- name: drs_service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: timeseries_service
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: collections_service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: open_repository_services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: metadata_api
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: template_version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: DatasetIntegration
  endpoint:
    path: /reference/getdatasetintegrations
    method: GET
    data_selector: DatasetIntegration
- name: disable_integration
  endpoint:
    path: /reference/disableintegration
    method: DELETE
- name: enabled_integrations
  endpoint:
    path: /datasets/{id}/webhook
    method: GET
- name: get_dataset_webhook
  endpoint:
    path: /datasets/id/webhook
    method: GET
    data_selector: webhookId
- name: metadata_models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: files
  endpoint:
    path: /reference/serverapiv1concepts/get_files
    method: GET
- name: repositories
  endpoint:
    path: /reference/getrepositories
    method: GET
- name: dataset_integration
  endpoint:
    path: /datasets/id/webhook/webhookId
    method: DELETE
    data_selector: DatasetIntegration
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: attach_a_Pennsieve_package_to_a_record
  endpoint:
    path: /createrecordpackage
    method: POST
- name: delete_a_relationship_between_two_records
  endpoint:
    path: /deleterelationship
    method: DEL
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: get_files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: get_package_metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: get_models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: search_metadata
  endpoint:
    path: /reference/querygraph
    method: POST
- name: get_workflows
  endpoint:
    path: /reference/getworkflows
    method: GET
- name: create_workflow
  endpoint:
    path: /reference/createworkflow
    method: POST
- name: get_workflow_statuses
  endpoint:
    path: /reference/getworkflows
    method: GET
- name: delete_workflow
  endpoint:
    path: /reference/deleteapplication
    method: DELETE
- name: dataset_integration
  endpoint:
    path: /reference/getdatasetintegrations
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: dataset_integration
  endpoint:
    path: /datasets/{id}/webhook/{webhookId}
    method: PUT
- name: datasets
  endpoint:
    path: /datasets/{id}/webhook/{webhookId}
    method: DELETE
- name: webhook
  endpoint:
    path: /datasets/id/webhook/webhookId
    method: PUT
- name: dataset_integration
  endpoint:
    path: /datasets/id/webhook/webhookId
    method: DELETE
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Verify status for manifest files
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach_package_to_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: execute_select_statement_over_model_records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: add_external_user_as_collaborator
  endpoint:
    path: /reference/addexternalcollaborator
    method: PUT
- name: dataset_integration
  endpoint:
    path: /reference/getdatasetintegrations
    method: GET
- name: dataset
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: Dataset Integration
  endpoint:
    path: /datasets/{id}/webhook/{webhookId}
    method: PUT
- name: metadata_models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /datasets/id/webhook/webhookId
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: add_external_user_as_collaborator
  endpoint:
    path: /datasets/{nodeId}/collaborators/external
    method: PUT
- name: add_external_user_as_collaborator
  endpoint:
    path: /reference/addexternalcollaborator
    method: PUT
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
    data_selector: models
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1query
    method: POST
    data_selector: queries
- name: packages
  endpoint:
    path: /reference/createpackage
    method: post
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: get
- name: add_external_user_collaborator
  endpoint:
    path: /datasets/{nodeId}/collaborators/external
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: fetch_record_with_relationships
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: packages
  endpoint:
    path: /packages/
    method: POST
- name: packages
  endpoint:
    path: /packages/
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: packages
  endpoint:
    path: /packages/
    method: POST
- name: packages
  endpoint:
    path: /packages/
    method: POST
- name: dataset
  endpoint:
    path: /datasets-1
    method: GET
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
    data_selector: files
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
    data_selector: metrics
- name: manifest_download
  endpoint:
    path: /packages/download-manifest
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: download_manifest
  endpoint:
    path: /packages/download-manifest
    method: POST
    data_selector: data
- name: get_presigned_url_to_manifest_archive
  endpoint:
    path: /getmanifestarchiveurl
    method: GET
    data_selector: records
- name: list_manifests_for_dataset
  endpoint:
    path: /getmanifestlist
    method: GET
    data_selector: records
- name: get_workflows
  endpoint:
    path: /getworkflows
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /packages/download-manifest
    method: POST
    data_selector: nodeIds
    params: {}
- name: download_manifest
  endpoint:
    path: /packages/download-manifest
    method: POST
    data_selector: data
- name: download_dataset_version
  endpoint:
    path: /downloaddatasetversion-1
    method: GET
    data_selector: data
- name: dataset
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tag
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: download_manifest
  endpoint:
    path: /datacanvas/download-manifest
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
    data_selector: records
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
    data_selector: records
- name: download_manifest
  endpoint:
    path: /download-manifest
    method: POST
- name: download_package_manifest
  endpoint:
    path: /download-package-manifest
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /packages/{id}
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: download_manifest
  endpoint:
    path: /datacanvas/download-manifest
    method: POST
- name: get_dataset_metadata
  endpoint:
    path: /getdatasetmetadata-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: packages
  endpoint:
    path: /packages/{id}
    method: PUT
- name: package
  endpoint:
    path: /packages/id
    method: PUT
- name: metadata
  endpoint:
    path: /reference/metadata-service
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /reference/packages-service
    method: GET
    data_selector: records
- name: annotations
  endpoint:
    path: /reference/getannotations
    method: GET
    data_selector: annotations
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: annotations
  endpoint:
    path: /packages/{id}/annotations
    method: GET
- name: annotations
  endpoint:
    path: /packages/id/annotations
    method: GET
    data_selector: object
    params: {}
- name: packages
  endpoint:
    path: /packages/{id}
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: data_sets
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: packages
  endpoint:
    path: /reference/getpackages
    method: GET
- name: export_package
  endpoint:
    path: /packages/{id}/export
    method: PUT
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /packages/{id}
    method: PUT
- name: export_package
  endpoint:
    path: /packages/id/export
    method: PUT
- name: get_annotations
  endpoint:
    path: /getannotations
    method: GET
- name: get_package_files
  endpoint:
    path: /getpackagefiles
    method: GET
- name: packages
  endpoint:
    path: /packages/id
    method: PUT
    params:
      updateStorage: 'true'
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: attach_a_Pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
    data_selector: record
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: relationships
- name: delete_all_inbound_and_outbound_relationships_for_a_record
  endpoint:
    path: /reference/deleterelationships
    method: DELETE
    data_selector: status
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
    data_selector: model_version
- name: annotations
  endpoint:
    path: /reference/getannotations
    method: GET
- name: package_files
  endpoint:
    path: /reference/getpackagefiles
    method: GET
- name: annotations
  endpoint:
    path: /packages/{id}/annotations
    method: GET
- name: annotations
  endpoint:
    path: /packages/id/annotations
    method: GET
- name: files
  endpoint:
    path: /packages/{id}/files
    method: GET
    data_selector: sources
    params:
      limit: 100
      offset: 0
- name: package_files
  endpoint:
    path: /packages/id/files
    method: GET
    params:
      limit: 100
      offset: 0
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Packages Service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: process_package
  endpoint:
    path: /reference/processpackage
    method: PUT
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: packages
  endpoint:
    path: /packages/{id}/export
    method: PUT
    data_selector: response
    params: {}
- name: process_package
  endpoint:
    path: /packages/{id}/process
    method: PUT
- name: get_package_files
  endpoint:
    path: /reference/getpackagefiles
    method: GET
- name: get_package_sources
  endpoint:
    path: /reference/getpackagesources
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: search
  endpoint:
    path: /reference/search
    method: GET
- name: packages
  endpoint:
    path: /reference/packages
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: package_sources
  endpoint:
    path: /reference/getpackagesources
    method: GET
- name: get_package_files
  endpoint:
    path: /reference/getpackagefiles
    method: GET
- name: get_packages
  endpoint:
    path: /reference/getpackages
    method: GET
- name: sources
  endpoint:
    path: /packages/{id}/sources
    method: GET
    data_selector: sources
    params:
      limit: 100
      offset: 0
- name: package_files
  endpoint:
    path: /packages/{id}/files
    method: GET
    params:
      limit: 100
      offset: 0
- name: packages_sources
  endpoint:
    path: /packages/id/sources
    method: GET
    data_selector: sources
    params:
      limit: 100
      offset: 0
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: get_packages_sources
  endpoint:
    path: /reference/getpackagesourcespaged
    method: GET
- name: package_files
  endpoint:
    path: /packages/id/files
    method: GET
    params:
      limit: 100
      offset: 0
- name: sources
  endpoint:
    path: /packages/{id}/sources-paged
    method: GET
    params:
      limit: 100
      offset: 0
      order-by: Name
      order-by-direction: Asc
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: process_package
  endpoint:
    path: /reference/processpackage
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxies
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: get_packages_sources
  endpoint:
    path: /reference/getpackagesources
    method: GET
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: records
  endpoint:
    path: /reference/batchcreaterelationships
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: packages_sources_paged
  endpoint:
    path: /packages/id/storage
    method: PUT
- name: sources
  endpoint:
    path: /packages/{id}/sources
    method: GET
    params:
      limit: 100
      offset: 0
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: get_packages_sources
  endpoint:
    path: /packages/id/sources
    method: GET
    params:
      limit: 100
      offset: 0
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: relationships
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: get_packages_sources
  endpoint:
    path: /reference/getpackagesourcespaged
    method: GET
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: sources_paged
  endpoint:
    path: /packages/{id}/sources-paged
    method: GET
    data_selector: sources
    params:
      limit: 100
      offset: 0
      order-by: Name
      order-by-direction: Asc
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: fetch_record_with_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: package_view
  endpoint:
    path: /reference/getpackageview
    method: GET
- name: view_objects
  endpoint:
    path: /packages/{id}/view
    method: GET
    params:
      limit: 100
      offset: 0
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
    data_selector: files
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
    data_selector: metrics
- name: package_view
  endpoint:
    path: /packages/id/view
    method: GET
    data_selector: array of objects
- name: file_download
  endpoint:
    path: /getfile
    method: GET
    data_selector: object
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/batchcreaterelationships
    method: POST
    data_selector: records
- name: get_file
  endpoint:
    path: /reference/getfile
    method: GET
    data_selector: url
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /packages/{packageId}/files/{id}
    method: GET
- name: package_view
  endpoint:
    path: /packages/packageId/files/id
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: packages
  endpoint:
    path: /reference/getpackages
    method: GET
    data_selector: packages
- name: create_dimension
  endpoint:
    path: /reference/createdimension
    method: POST
- name: get_dimensions
  endpoint:
    path: /reference/getdimensions
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: create_dimension
  endpoint:
    path: /imaging/{packageId}/dimensions
    method: POST
- name: List all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: Fetch a record with its related records and packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: Get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: Insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: get_package_view
  endpoint:
    path: /reference/getpackageview
    method: GET
- name: get_package_files
  endpoint:
    path: /reference/getpackagefiles
    method: GET
- name: get_packages_sources
  endpoint:
    path: /reference/getpackagesources
    method: GET
- name: view_objects
  endpoint:
    path: /packages/{id}/view
    method: GET
    params:
      limit: 100
      offset: 0
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: delete a relationship between two records
  endpoint:
    path: /reference/deleterelationship
    method: DEL
- name: list relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: execute a select statement over model records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: fetch a record with its related records and packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: update record (new version)
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update model metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: package_view
  endpoint:
    path: /packages/id/view
    method: GET
    params:
      limit: 100
      offset: 0
- name: file_download
  endpoint:
    path: /getfile
    method: GET
- name: dimensions
  endpoint:
    path: /reference/getdimensions
    method: GET
- name: dimensions
  endpoint:
    path: /imaging/{packageId}/dimensions
    method: GET
    data_selector: response
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: fetch a record with its related records and packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions
    method: GET
- name: get_file
  endpoint:
    path: /reference/getfile
    method: GET
- name: get_presigned_url
  endpoint:
    path: /packages/{packageId}/files/{id}
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: relationships
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: inserted_records
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: model
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: package_files
  endpoint:
    path: /packages/packageId/files/id?short=false
    method: GET
- name: package_view
  endpoint:
    path: /packages/packageId/view
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: models_for_dataset
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
- name: delete_multiple_dimensions
  endpoint:
    path: /imaging/{packageId}/dimensions/batch
    method: DELETE
- name: dimension
  endpoint:
    path: /reference/createdimension
    method: POST
- name: health
  endpoint:
    path: /reference/gethealth
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: create_dimension
  endpoint:
    path: /imaging/{packageId}/dimensions
    method: POST
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions
    method: POST
    headers:
      accept: '*/*'
      content-type: application/json
- name: dimension
  endpoint:
    path: /reference/createdimensions
    method: POST
- name: dataset
  endpoint:
    path: /reference/createdataset
    method: POST
- name: annotation
  endpoint:
    path: /reference/createannotation
    method: POST
- name: model_service
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: zipit_service
  endpoint:
    path: /
    method: POST
- name: timeseries_api
  endpoint:
    path: /reference/getchannels-1
    method: GET
- name: collections_api
  endpoint:
    path: /reference/getcollections-1
    method: GET
- name: open_repository_services
  endpoint:
    path: /reference/getpublishingrepositories-1
    method: GET
- name: metadata_api
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions/batch
    method: POST
    data_selector: response
    params: {}
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update model metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: get model with latest version or version as_of
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: create a new version of an existing model from a model template version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: list all models for a dataset with their latest versions or version as_of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create template version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: list template versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: update template metadata
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
- name: list templates latest versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: get template latest/as_of
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
- name: create model template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: dimensions
  endpoint:
    path: /reference/getdimensions
    method: GET
- name: get_dimensions
  endpoint:
    path: /imaging/{packageId}/dimensions
    method: GET
    data_selector: dimensions
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions
    method: GET
    data_selector: array of objects
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: records
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationship_instancesget_concept_instance_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions/batch
    method: PUT
    data_selector: array of objects
- name: manifests
  endpoint:
    path: /getmanifestlist
    method: GET
- name: models
  endpoint:
    path: /graphgetmodels
    method: GET
- name: records
  endpoint:
    path: /concept_instances
    method: GET
- name: repositories
  endpoint:
    path: /getrepositories
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: delete_multiple_dimensions
  endpoint:
    path: /imaging/{packageId}/dimensions/batch
    method: DELETE
- name: dimensions_count
  endpoint:
    path: /reference/getdimensionscount
    method: GET
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: POST
    data_selector: files
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
    data_selector: records
- name: dimensions_count
  endpoint:
    path: /imaging/{packageId}/dimensions/count
    method: GET
    data_selector: ''
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: dimensions_count
  endpoint:
    path: /imaging/packageId/dimensions/count
    method: GET
    data_selector: ''
- name: dimensions_batch
  endpoint:
    path: /imaging/{packageId}/dimensions/batch
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
    params: {}
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
    params: {}
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
    params: {}
- name: delete_dimension
  endpoint:
    path: /imaging/{packageId}/dimensions/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: search_results
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions/id
    method: DELETE
- name: dimension_count
  endpoint:
    path: /reference/getdimensionscount
    method: GET
- name: metadata_model
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: metadata_record
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: query
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: proxy
  endpoint:
    path: /reference/serverapiv1proxies
    method: GET
- name: relationship
  endpoint:
    path: /reference/serverapiv1relationships
    method: GET
- name: property
  endpoint:
    path: /reference/serverapiv1properties
    method: GET
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions/batch
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DELETE
- name: detach_a_single_package_from_a_record
  endpoint:
    path: /reference/deleterecordpackage
    method: DELETE
- name: detach_all_packages_from_a_record
  endpoint:
    path: /reference/deleteallrecordpackages
    method: DELETE
- name: list_relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: fetch_a_record_with_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: archive_all_records
  endpoint:
    path: /reference/archiverecords
    method: DELETE
- name: dimensions_count
  endpoint:
    path: /reference/getdimensionscount
    method: GET
- name: get_dimension_for_package
  endpoint:
    path: /reference/getdimension
    method: GET
- name: dimensions_count
  endpoint:
    path: /imaging/{packageId}/dimensions/count
    method: GET
- name: get_dimension_for_package
  endpoint:
    path: /imaging/{packageId}/dimensions/{id}
    method: GET
    data_selector: response
- name: dimensions_count
  endpoint:
    path: /imaging/packageId/dimensions/count
    method: GET
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions/id
    method: GET
    data_selector: object
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_record_package
  endpoint:
    path: /reference/createrecordpackage
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: select_records
  endpoint:
    path: /reference/selectrecords
    method: POST
    data_selector: records
- name: get_record_with_relationships_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: update_dimension
  endpoint:
    path: /imaging/{packageId}/dimensions/{id}
    method: PUT
    data_selector: response
    params: {}
- name: get dimension for package
  endpoint:
    path: /imaging/packageId/dimensions/id
    method: PUT
- name: dimensions
  endpoint:
    path: /imaging/{packageId}/dimensions/{id}
    method: DELETE
- name: dimensions
  endpoint:
    path: /imaging/packageId/dimensions/id
    method: DELETE
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: POST
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: account_service
  endpoint:
    path: /reference/account-service
    method: GET
- name: compute_node_service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: repository_service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: API Token
  endpoint:
    path: /reference/createapitoken
    method: POST
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: get_files_for_manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: get_package_metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: get_models_for_dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: API Token
  endpoint:
    path: /token
    method: POST
    data_selector: object
- name: dimension
  endpoint:
    path: /reference/getdimensions
    method: GET
    data_selector: records
- name: get_dimension_for_package
  endpoint:
    path: /imaging/{packageId}/dimensions/{id}
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: api_token
  endpoint:
    path: /reference/getapitokens
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: API Token
  endpoint:
    path: /token/
    method: GET
    data_selector: array of objects
- name: updatedimension
  endpoint:
    path: /reference/updatedimension
    method: PUT
- name: update_dimension
  endpoint:
    path: /imaging/{packageId}/dimensions/{id}
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: get_dimension_for_package
  endpoint:
    path: /imaging/packageId/dimensions/id
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: API Token
  endpoint:
    path: /api/token
    method: DELETE
    data_selector: response
    params: {}
- name: API Token
  endpoint:
    path: /reference/createapitoken
    method: POST
- name: DataSets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: api_token
  endpoint:
    path: /token
    method: POST
- name: API Token
  endpoint:
    path: /token/{uuid}
    method: DELETE
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: record_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: models
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
    data_selector: records
- name: API Token
  endpoint:
    path: /reference/getapitokens
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: API Token
  endpoint:
    path: /reference/createapitoken
    method: POST
    data_selector: records
- name: DataSets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: records
- name: api_token
  endpoint:
    path: /token/
    method: GET
    data_selector: array of objects
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: records
  endpoint:
    path: /reference/metadata_service/records
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: templates
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: API Token
  endpoint:
    path: /reference/createapitoken
    method: post
- name: deletes API Token
  endpoint:
    path: /reference/deleteapitoken
    method: del
- name: api_token
  endpoint:
    path: /token/{uuid}
    method: PUT
    data_selector: null
    params:
      uuid: string
- name: delete_api_token
  endpoint:
    path: /token/{uuid}
    method: DELETE
    data_selector: null
    params:
      uuid: string
- name: get_api_tokens
  endpoint:
    path: /getapitokens
    method: GET
    data_selector: null
    params: {}
- name: create_api_token
  endpoint:
    path: /createapitoken
    method: POST
    data_selector: null
    params: {}
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: get_temporary_upload_credentials
  endpoint:
    path: /reference/gettemporaryuploadcredentials
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: proxies
  endpoint:
    path: /reference/serverapiv1proxiesget_all_proxy_instances
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationship_instancesget_concept_instance_relationships
    method: GET
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: manifest
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
    data_selector: records
- name: API Token
  endpoint:
    path: /token/{uuid}
    method: DELETE
- name: Get API Tokens
  endpoint:
    path: /getapitokens
    method: GET
- name: Update API Token
  endpoint:
    path: /updateapitoken
    method: PUT
- name: Create API Token
  endpoint:
    path: /createapitoken
    method: POST
- name: get_temporary_credentials
  endpoint:
    path: /security/user/credentials/upload/{dataset}
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: get_record_with_relationshipsandpackages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: execute_a_select_statement_over_model_records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: API Token
  endpoint:
    path: /reference/createapitoken
    method: POST
- name: DataSets
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: manifest
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: ''
    params: {}
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: ''
    params: {}
- name: record
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: ''
    params: {}
- name: annotations_window
  endpoint:
    path: /reference/getallannotationswindow
    method: GET
- name: api_token
  endpoint:
    path: /token/{uuid}
    method: PUT
- name: aggregations
  endpoint:
    path: /timeseries/{id}/annotations/window
    method: GET
    data_selector: annotations
    params:
      layerIds: required
      aggregation: required
      start: required
      end: required
      period: required
- name: annotations_window
  endpoint:
    path: /timeseries/id/annotations/window
    method: GET
    data_selector: annotations
    params:
      aggregation: count
      mergePeriods: 'false'
      startAtEpoch: 'false'
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Collections Service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: timeseries_channels
  endpoint:
    path: /timeseries/{id}/channels
    method: POST
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: dataservice
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: channels
  endpoint:
    path: /timeseries/id/channels
    method: POST
- name: annotations
  endpoint:
    path: /getallannotationswindow
    method: GET
- name: get_temporary_upload_credentials
  endpoint:
    path: /security/user/credentials/upload/{dataset}
    method: GET
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: get_all_annotations_window
  endpoint:
    path: /reference/getallannotationswindow
    method: GET
- name: aggregate_annotations
  endpoint:
    path: /timeseries/{id}/annotations/window
    method: GET
    params:
      layerIds: []
      aggregation: ''
      start: ''
      end: ''
      period: ''
      channelIds: []
      mergePeriods: false
      startAtEpoch: false
- name: annotations_window
  endpoint:
    path: /timeseries/id/annotations/window
    method: GET
    data_selector: annotations
    params:
      aggregation: count
      mergePeriods: 'false'
      startAtEpoch: 'false'
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: detach_a_single_package_from_a_record
  endpoint:
    path: /reference/deleterecordpackage
    method: DEL
- name: detach_all_packages_from_a_record
  endpoint:
    path: /reference/deleteallrecordpackages
    method: DEL
- name: attach_a_Pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete_all_inbound_and_outbound_relationships_for_a_record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: delete_a_relationship_between_two_records
  endpoint:
    path: /reference/deleterelationship
    method: DEL
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: execute_a_select_statement_over_model_records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update_record_(new_version)
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: archive_all_records_(optionally_by_version)
  endpoint:
    path: /reference/archiverecords
    method: DEL
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update_model_metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: get_model_with_latest_version_or_version_as_of
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: create_a_new_version_of_an_existing_model_from_a_model_template_version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: list_all_models_for_a_dataset_with_their_latest_versions_or_version_as_of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: create_a_new_dataset_model_from_a_specific_version_of_a_model_template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create_template_version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: list_template_versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: update_template_metadata
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
- name: list_templates_latest_versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: get_template_latest/as_of
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
- name: create_model_template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: Get workflow by uuid
  endpoint:
    path: /reference/getworkflow
    method: GET
- name: List trashcan contents for a dataset by folder
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: Get integrations
  endpoint:
    path: /reference/getintegrations
    method: GET
- name: Get account details for a specific compute resource
  endpoint:
    path: /reference/getaccount
    method: GET
- name: Get details for a specific compute node
  endpoint:
    path: /reference/getcomputenode
    method: GET
- name: Get all Repositories that the authenticated user has access to
  endpoint:
    path: /reference/getrepositories
    method: GET
- name: channels
  endpoint:
    path: /reference/getchannels
    method: GET
    data_selector: records
- name: channels
  endpoint:
    path: /reference/createchannel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: channels
  endpoint:
    path: /timeseries/{id}/channels
    method: GET
    data_selector: channels
    params:
      startAtEpoch: 'false'
- name: channels
  endpoint:
    path: /timeseries/{id}/channels
    method: POST
- name: channels
  endpoint:
    path: /timeseries/id/channels
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: update_existing_channel
  endpoint:
    path: /reference/updatechannels
    method: PUT
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: update_channel
  endpoint:
    path: /timeseries/{id}/channels
    method: PUT
- name: channels
  endpoint:
    path: /reference/getchannels
    method: GET
    data_selector: channels
- name: channels
  endpoint:
    path: /timeseries/id/channels
    method: PUT
- name: channels
  endpoint:
    path: /timeseries/{id}/channels
    method: GET
- name: channels
  endpoint:
    path: /timeseries/id/channels
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: channel
  endpoint:
    path: /reference/deletechannel
    method: DELETE
- name: channels
  endpoint:
    path: /reference/updatechannels
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: delete_channel
  endpoint:
    path: /timeseries/{id}/channels/{channelId}
    method: DELETE
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: record_relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: records
- name: channel
  endpoint:
    path: /reference/getchannel
    method: GET
    data_selector: channel_data
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: channels
  endpoint:
    path: /reference/deletechannel
    method: DELETE
- name: time_series_channel
  endpoint:
    path: /timeseries/{id}/channels/{channelId}
    method: GET
    params: {}
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: channel
  endpoint:
    path: /timeseries/id/channels/channelId
    method: GET
    data_selector: object
    params:
      startAtEpoch: 'false'
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: package
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: update_channel
  endpoint:
    path: /reference/updatechannel
    method: PUT
- name: channel
  endpoint:
    path: /reference/getchannel
    method: GET
    data_selector: channel
- name: get_channel
  endpoint:
    path: /timeseries/{id}/channels/{channelId}
    method: GET
- name: channel
  endpoint:
    path: /timeseries/id/channels/channelId
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: package
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: update_channel
  endpoint:
    path: /reference/updatechannels
    method: PUT
- name: update_channel_properties
  endpoint:
    path: /reference/updatechannelproperties
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationship_instancesget_concept_instance_relationships
    method: GET
- name: channels_properties
  endpoint:
    path: /timeseries/{id}/channels/{channelId}/properties
    method: PUT
- name: channel
  endpoint:
    path: /timeseries/id/channels/channelId
    method: PUT
    data_selector: object
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: relationships
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: annotations
  endpoint:
    path: /reference/hasannotations
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach_a_Pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: create_a_new_dataset_model_from_a_specific_version_of_a_model_template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create_model_template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: timeseries_annotations
  endpoint:
    path: /timeseries/{id}/hasAnnotations
    method: GET
    data_selector: annotations
    params: {}
- name: update_channel_properties
  endpoint:
    path: /reference/updatechannelproperties
    method: PUT
- name: hasAnnotations
  endpoint:
    path: /timeseries/id/hasAnnotations
    method: GET
    data_selector: boolean
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: template versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: create_time_series_layer
  endpoint:
    path: /reference/createtimeserieslayer
    method: POST
- name: packages_attached_to_a_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_between_records
  endpoint:
    path: /createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
- name: create_time_series_layer
  endpoint:
    path: /timeseries/{id}/layers
    method: POST
- name: annotations
  endpoint:
    path: /reference/hasannotations
    method: GET
- name: time_series_layers
  endpoint:
    path: /timeseries/id/layers
    method: POST
- name: get_layers
  endpoint:
    path: /getlayers
    method: GET
- name: timeseries_annotations
  endpoint:
    path: /timeseries/{id}/hasAnnotations
    method: GET
- name: hasAnnotations
  endpoint:
    path: /timeseries/id/hasAnnotations
    method: GET
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: records
- name: layers
  endpoint:
    path: /reference/getlayers
    method: GET
    data_selector: records
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: List all Metadata Models for a dataset
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: timeseries_layers
  endpoint:
    path: /timeseries/{id}/layers
    method: GET
    data_selector: layers
- name: layers
  endpoint:
    path: /timeseries/id/layers
    method: GET
    data_selector: results
- name: create_time_series_layer
  endpoint:
    path: /reference/createtimeserieslayer
    method: POST
- name: get_all_layers
  endpoint:
    path: /reference/getlayers
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: create_time_series_layer
  endpoint:
    path: /timeseries/{id}/layers
    method: POST
- name: delete_timeseries_layer
  endpoint:
    path: /reference/deletetimeserieslayer
    method: DELETE
- name: layers
  endpoint:
    path: /timeseries/id/layers
    method: POST
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: delete_layer
  endpoint:
    path: /timeseries/{id}/layers/{layerId}
    method: DELETE
- name: layers
  endpoint:
    path: /reference/getlayers
    method: GET
    data_selector: layers
- name: timeseries_layers
  endpoint:
    path: /timeseries/{id}/layers
    method: GET
    data_selector: response
- name: layers
  endpoint:
    path: /timeseries/id/layers
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: fetch_record_with_relationships
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: delete_timeseries_layer
  endpoint:
    path: /reference/deletetimeserieslayer
    method: DELETE
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Packages Service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Readme Service
  endpoint:
    path: /reference/readme-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: time_series_layer
  endpoint:
    path: /reference/gettimeserieslayer
    method: GET
    data_selector: layer
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: timeseries_layer
  endpoint:
    path: /timeseries/{id}/layers/{layerId}
    method: GET
- name: timeseries_layer
  endpoint:
    path: /reference/gettimeserieslayer
    method: GET
- name: timeseries_layer
  endpoint:
    path: /timeseries/id/layers/layerId
    method: GET
- name: timeseries_layer
  endpoint:
    path: /timeseries/{id}/layers/{layerId}
    method: GET
- name: time_series_layer
  endpoint:
    path: /timeseries/id/layers/layerId
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: time_series_layer
  endpoint:
    path: /reference/updatetimeserieslayer
    method: PUT
- name: update_time_series_layer
  endpoint:
    path: /timeseries/{id}/layers/{layerId}
    method: PUT
- name: timeseries_layer
  endpoint:
    path: /timeseries/id/layers/layerId
    method: PUT
    data_selector: object
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: manifest
  endpoint:
    path: /getmanifest
    method: GET
    data_selector: records
    params: {}
- name: workflow
  endpoint:
    path: /getworkflows
    method: GET
    data_selector: records
    params: {}
- name: update_timeseries_layer
  endpoint:
    path: /reference/updatetimeserieslayer
    method: PUT
- name: get_timeseries_layer
  endpoint:
    path: /reference/gettimeserieslayer
    method: GET
- name: delete_timeseries_layer
  endpoint:
    path: /reference/deletetimeserieslayer
    method: DELETE
- name: delete_timeseries_annotations
  endpoint:
    path: /reference/deletetimeseriesannotations
    method: DELETE
- name: update_layer
  endpoint:
    path: /timeseries/{id}/layers/{layerId}
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: timeseries_layer
  endpoint:
    path: /timeseries/id/layers/layerId
    method: PUT
    data_selector: object
    params: {}
- name: delete_annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations
    method: DELETE
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: Get all Metadata Records for a Model
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: delete_timeseries_annotations
  endpoint:
    path: /reference/deletetimeseriesannotations
    method: DELETE
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: results
- name: delete_annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations
    method: DELETE
    data_selector: null
    params: {}
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: get_files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: get_package_metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: get_models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: autocomplete_search
  endpoint:
    path: /reference/autocomplete
    method: POST
- name: search_metadata_graph
  endpoint:
    path: /reference/querygraph
    method: POST
- name: create_relationships
  endpoint:
    path: /reference/batchcreaterelationships
    method: POST
- name: list_trashcan_contents
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: get_manifest
  endpoint:
    path: /reference/getmanifest
    method: GET
- name: restore_deleted_items
  endpoint:
    path: /reference/restoreitems
    method: POST
- name: update_workflow_properties
  endpoint:
    path: /reference/updateworkflow
    method: PUT
- name: create_workflow
  endpoint:
    path: /reference/createworkflow
    method: POST
- name: initiate_workflow_instance
  endpoint:
    path: /reference/initiateworkflow
    method: POST
- name: get_workflows
  endpoint:
    path: /reference/getworkflows
    method: GET
- name: manifest
  endpoint:
    path: /reference/getmanifest
    method: GET
- name: trashcan
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: workflow
  endpoint:
    path: /reference/getworkflows
    method: GET
- name: create_annotation
  endpoint:
    path: /reference/createannotation
    method: POST
- name: get_annotations
  endpoint:
    path: /reference/gettimeseriesannotations
    method: GET
- name: create_annotation
  endpoint:
    path: /reference/createannotation
    method: POST
- name: get_annotations
  endpoint:
    path: /reference/gettimeseriesannotations
    method: GET
- name: create_annotation
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations
    method: POST
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations
    method: POST
    data_selector: annotations
    params:
      startAtEpoch: 'false'
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations
    method: POST
    data_selector: annotations
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations
    method: POST
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Verify status for manifest files
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: Get all Metadata Records for a Model
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: packages_service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: integration_service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: imaging_service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: import_service
  endpoint:
    path: /reference/import-service
    method: GET
- name: discover_rehydration_service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: account_service
  endpoint:
    path: /reference/account-service
    method: GET
- name: compute_node_service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: app_deploy_service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: repository_service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: github_service
  endpoint:
    path: /reference/github-service
    method: GET
- name: drs_service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: timeseries_service
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: collections_service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: open_repository_services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: metadata_api
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: annotations
  endpoint:
    path: /reference/gettimeseriesannotations
    method: GET
- name: annotations
  endpoint:
    path: /reference/gettimeseriesannotations
    method: GET
- name: annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations
    method: GET
    params:
      start: int64
      end: int64
      includeLinks: boolean
      channelIds: array of strings
      limit: int64
      offset: int64
      layerName: string
      startAtEpoch: boolean
- name: annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations
    method: GET
    params:
      start: int64
      end: int64
      includeLinks: boolean
      channelIds: array of strings
      limit: int64
      offset: int64
      layerName: string
      startAtEpoch: boolean
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations
    method: GET
    data_selector: annotations
    params:
      includeLinks: 'true'
      startAtEpoch: 'false'
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: model_with_latest_version
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: create_new_dataset_model
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
    data_selector: records
- name: annotations
  endpoint:
    path: /reference/getannotationswindow
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: get_files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: get_annotations_window
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations/window
    method: GET
    data_selector: annotations
    params:
      aggregation: average
      start: ''
      end: ''
      period: ''
      channelIds: ''
      mergePeriods: false
      startAtEpoch: false
- name: annotations
  endpoint:
    path: /reference/getannotationswindow
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations/window
    method: GET
    data_selector: array of objects
- name: get_annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations/window
    method: GET
    data_selector: annotations
    params:
      aggregation: count
      start: int64
      end: int64
      period: int64
      channelIds: array of strings
      mergePeriods: boolean
      startAtEpoch: boolean
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: annotations_window
  endpoint:
    path: /timeseries/id/layers/layerId/annotations/window
    method: GET
    params:
      aggregation: count
      mergePeriods: 'false'
      startAtEpoch: 'false'
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /reference/searchfiles-3
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: search_results
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: Metadata Models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: Metadata Records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: Queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: Publishing Service
  endpoint:
    path: /reference/getpublishingrepositories-1
    method: GET
- name: delete_annotation
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations/{annotationId}
    method: DELETE
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: annotation
  endpoint:
    path: /reference/getannotationoperation
    method: GET
- name: get_annotation
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations/{annotationId}
    method: GET
- name: annotation
  endpoint:
    path: /reference/getannotationoperation
    method: GET
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations/annotationId
    method: GET
    data_selector: annotations
    params:
      includeLinks: 'true'
      startAtEpoch: 'false'
- name: annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations/{annotationId}
    method: GET
    data_selector: response
    params:
      includeLinks: true
      startAtEpoch: false
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations/annotationId
    method: GET
    data_selector: annotations
    params:
      includeLinks: 'true'
      startAtEpoch: 'false'
- name: annotations
  endpoint:
    path: /reference/gettimeseriesannotations
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: annotations
  endpoint:
    path: /timeseries/id/layers/layerId/annotations/annotationId
    method: PUT
    data_selector: object
    params:
      startAtEpoch: 'false'
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: list relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update model metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: list all models for a dataset with their latest versions or version as_of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: touch_dataset
  endpoint:
    path: /internal/datasets/{id}/touch
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: detached_package
  endpoint:
    path: /reference/deleterecordpackage
    method: DEL
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: timeseries_annotations
  endpoint:
    path: /timeseries/{id}/layers/{layerId}/annotations/{annotationId}
    method: PUT
    data_selector: response
    params: {}
- name: createcollection
  endpoint:
    path: /reference/createcollection
    method: POST
- name: getcollections
  endpoint:
    path: /reference/getcollections
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: collections
  endpoint:
    path: /collections/
    method: POST
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: package_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: fetch_record_with_relationships
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: touch_dataset
  endpoint:
    path: /internal/datasets/{id}/touch
    method: POST
- name: model_service
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: zipit_service
  endpoint:
    path: /reference/post_
    method: POST
- name: timeseries_service
  endpoint:
    path: /reference/getchannels-1
    method: GET
- name: collections_service
  endpoint:
    path: /reference/getcollections-1
    method: GET
- name: open_repository_services
  endpoint:
    path: /reference/getpublishingrepositories-1
    method: GET
- name: metadata_api
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: get_record_with_relationships
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: collection
  endpoint:
    path: /reference/createcollection
    method: POST
- name: dataset
  endpoint:
    path: /reference/createdataset
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: collections
  endpoint:
    path: /collections/
    method: POST
- name: webhook
  endpoint:
    path: /reference/createwebhook
    method: POST
- name: integrations
  endpoint:
    path: /reference/getintegrations-1
    method: GET
- name: organization
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: search
  endpoint:
    path: /reference/search
    method: GET
- name: packages
  endpoint:
    path: /reference/packages
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: webhook_integration
  endpoint:
    path: /webhooks/
    method: POST
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: collections
  endpoint:
    path: /collections/{id}
    method: PUT
- name: upload_manifest
  endpoint:
    path: /reference/deletemanifestarchive
    method: DELETE
- name: presigned_url
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: archive_manifest
  endpoint:
    path: /reference/archivemanifest
    method: POST
- name: verify_status
  endpoint:
    path: /reference/verifyfilestatus
    method: GET
- name: get_files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: synchronize_manifest
  endpoint:
    path: /reference/syncmanifest
    method: POST
- name: list_manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: integrations
  endpoint:
    path: /reference/getintegrations-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
    data_selector: records
- name: webhooks
  endpoint:
    path: /webhooks/
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: webhook
  endpoint:
    path: /reference/createwebhook
    method: POST
- name: integrations
  endpoint:
    path: /reference/getintegrations-1
    method: GET
- name: webhook
  endpoint:
    path: /reference/deletewebhook
    method: DELETE
- name: webhook_integration
  endpoint:
    path: /webhooks/
    method: POST
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: delete
- name: webhooks
  endpoint:
    path: /webhooks/
    method: POST
    data_selector: hasAccess
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/id
    method: DELETE
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: webhook
  endpoint:
    path: /reference/getwebhook
    method: GET
- name: upload_manifest
  endpoint:
    path: /upload-service/manifest
    method: POST
    data_selector: manifest
    params: {}
- name: metadata
  endpoint:
    path: /metadata-service/records
    method: GET
    data_selector: records
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
- name: integrations
  endpoint:
    path: /reference/getintegrations-1
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/id
    method: GET
    data_selector: object
- name: integrations
  endpoint:
    path: /webhooks/
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: webhook
  endpoint:
    path: /reference/updatewebhook
    method: PUT
- name: update_webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: delete_relationship
  endpoint:
    path: /reference/deleterelationship
    method: DEL
- name: delete_webhook
  endpoint:
    path: /reference/deletewebhook
    method: DELETE
- name: webhook
  endpoint:
    path: /webhooks/id
    method: PUT
    data_selector: object
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/id
    method: DELETE
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: webhook
  endpoint:
    path: /reference/getwebhook
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/id
    method: GET
    data_selector: object
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: webhook
  endpoint:
    path: /reference/updatewebhook
    method: PUT
- name: record_package
  endpoint:
    path: /reference/deleterecordpackage
    method: DEL
    data_selector: ''
    params: {}
- name: all_record_packages
  endpoint:
    path: /reference/deleteallrecordpackages
    method: DEL
    data_selector: ''
    params: {}
- name: attached_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: ''
    params: {}
- name: record_relationships
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: ''
    params: {}
- name: inbound_outbound_relationships
  endpoint:
    path: /reference/deleterelationships
    method: DEL
    data_selector: ''
    params: {}
- name: relationship_between_records
  endpoint:
    path: /reference/deleterelationship
    method: DEL
    data_selector: ''
    params: {}
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: ''
    params: {}
- name: model_records
  endpoint:
    path: /reference/selectrecords
    method: POST
    data_selector: ''
    params: {}
- name: record_with_relationships
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: ''
    params: {}
- name: relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
    data_selector: ''
    params: {}
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
    data_selector: ''
    params: {}
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DEL
    data_selector: ''
    params: {}
- name: archive_all_records
  endpoint:
    path: /reference/archiverecords
    method: DEL
    data_selector: ''
    params: {}
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: ''
    params: {}
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: ''
    params: {}
- name: model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
    data_selector: ''
    params: {}
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: ''
    params: {}
- name: update_model_metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
    data_selector: ''
    params: {}
- name: latest_model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: ''
    params: {}
- name: model_template_version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
    data_selector: ''
    params: {}
- name: dataset_models_latest
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
    data_selector: ''
    params: {}
- name: new_dataset_model
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
    data_selector: ''
    params: {}
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: ''
    params: {}
- name: template_version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
    data_selector: ''
    params: {}
- name: template_versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
    data_selector: ''
    params: {}
- name: update_template_metadata
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
    data_selector: ''
    params: {}
- name: latest_template
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
    data_selector: ''
    params: {}
- name: model_template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    params: {}
- name: organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
    data_selector: organizations
- name: organizations
  endpoint:
    path: /organizations/
    method: GET
    data_selector: organizations
    params:
      includeAdmins: 'true'
- name: webhook
  endpoint:
    path: /webhooks/id
    method: PUT
- name: get_webhook
  endpoint:
    path: /webhooks
    method: GET
- name: organizations
  endpoint:
    path: /organizations/
    method: GET
    params:
      includeAdmins: 'true'
- name: get_package_metadata
  endpoint:
    path: /graph/getpackagemetadata
    method: GET
- name: get_models_for_dataset
  endpoint:
    path: /graph/getmodels
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
    data_selector: organizations
- name: organizations
  endpoint:
    path: /organizations/
    method: GET
- name: organizations
  endpoint:
    path: /organizations/
    method: GET
    params:
      includeAdmins: 'true'
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: organization
  endpoint:
    path: /organizations/{id}
    method: GET
    data_selector: response
- name: organizations
  endpoint:
    path: /organizations/id
    method: GET
- name: upload_manifest
  endpoint:
    path: /upload-service
    method: POST
    data_selector: records
- name: get_package_metadata
  endpoint:
    path: /metadata-service/get-packages-metadata
    method: GET
    data_selector: records
- name: organization
  endpoint:
    path: /reference/getorganization
    method: GET
- name: organization
  endpoint:
    path: /organizations/{id}
    method: GET
    data_selector: ''
- name: organization
  endpoint:
    path: /organizations/id
    method: GET
    data_selector: object
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /organizations/{id}
    method: PUT
    data_selector: response
    params: {}
- name: datasets
  endpoint:
    path: /api/v2/datasets
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/v2/models
    method: GET
    data_selector: records
    params: {}
- name: organization
  endpoint:
    path: /organizations/id
    method: PUT
- name: get_organization
  endpoint:
    path: /getorganization
    method: GET
- name: organization
  endpoint:
    path: /reference/updateorganization
    method: PUT
- name: organizations
  endpoint:
    path: /organizations/{id}
    method: PUT
- name: organization
  endpoint:
    path: /organizations/id
    method: PUT
    data_selector: object
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: records
  endpoint:
    path: /records
    method: GET
    data_selector: records
    params: {}
- name: add_to_organization
  endpoint:
    path: /reference/addtoorganization
    method: POST
- name: get_organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: metadata
    params: {}
- name: add_members_to_organization
  endpoint:
    path: /organizations/{id}/members
    method: POST
- name: organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: records
- name: members
  endpoint:
    path: /organizations/id/members
    method: POST
- name: add_members_to_organization
  endpoint:
    path: /organizations/{id}/members
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: members
  endpoint:
    path: /organizations/id/members
    method: POST
- name: members
  endpoint:
    path: /reference/getmembers
    method: GET
- name: organization_members
  endpoint:
    path: /organizations/{id}/members
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: create_relationship
  endpoint:
    path: /createrelationship
    method: POST
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: records
- name: members
  endpoint:
    path: /reference/getmembers
    method: GET
    data_selector: ''
- name: members
  endpoint:
    path: /organizations/id/members
    method: GET
    data_selector: array of objects
- name: organization_members
  endpoint:
    path: /organizations/{id}/members
    method: GET
    data_selector: members
    params:
      id: organization id
- name: members
  endpoint:
    path: /organizations/id/members
    method: GET
    data_selector: array of objects
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: models
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: template_versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: custom_terms_of_service
  endpoint:
    path: /reference/getcustomtermsofservice
    method: GET
- name: record
  endpoint:
    path: /deleterecordpackage
    method: DELETE
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
- name: custom_terms_of_service
  endpoint:
    path: /organizations/{organizationId}/custom-terms-of-service
    method: GET
- name: custom_terms_of_service
  endpoint:
    path: /organizations/organizationId/custom-terms-of-service
    method: GET
- name: custom_terms_of_service
  endpoint:
    path: /reference/getcustomtermsofservice
    method: GET
    data_selector: terms
    params: {}
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: attach_a_Pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: delete_all_inbound_and_outbound_relationships_for_a_record
  endpoint:
    path: /reference/deleterelationships
    method: DELETE
    data_selector: records
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: custom_terms_of_service
  endpoint:
    path: /organizations/{organizationId}/custom-terms-of-service
    method: GET
    data_selector: response
    params:
      organizationId: string
- name: data_use_agreement
  endpoint:
    path: /reference/createdatauseagreement
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: organization
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: custom_terms_of_service
  endpoint:
    path: /organizations/organizationId/custom-terms-of-service
    method: GET
- name: data_use_agreement
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements
    method: POST
- name: packages
  endpoint:
    path: /deleterecordpackage
    method: DELETE
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
- name: data_use_agreements
  endpoint:
    path: /organizations/organizationId/data-use-agreements
    method: POST
    data_selector: data
    params: {}
- name: data_use_agreement
  endpoint:
    path: /reference/createdatauseagreement
    method: POST
    data_selector: data_use_agreement
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /createrelationship
    method: POST
- name: insert_records
  endpoint:
    path: /insertrecords
    method: POST
- name: archive_record
  endpoint:
    path: /archiverecord
    method: DEL
- name: data_use_agreement
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements
    method: POST
    data_selector: response
    params:
      organizationId: string
      name: string
      body: string
      isDefault: boolean
      description: string
- name: data_use_agreement
  endpoint:
    path: /reference/deletedatauseagreement
    method: DELETE
- name: data_use_agreement
  endpoint:
    path: /organizations/organizationId/data-use-agreements
    method: POST
    data_selector: data
    params: {}
- name: delete_data_use_agreement
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements/{agreementId}
    method: DELETE
- name: data_use_agreement
  endpoint:
    path: /organizations/organizationId/data-use-agreements/agreementId
    method: DELETE
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: data_use_agreement
  endpoint:
    path: /reference/getdatauseagreement
    method: GET
    data_selector: data_use_agreement
- name: create_data_use_agreement
  endpoint:
    path: /reference/createdatauseagreement
    method: POST
    data_selector: created_data_use_agreement
- name: update_data_use_agreement
  endpoint:
    path: /reference/updatedatauseagreement
    method: PUT
    data_selector: updated_data_use_agreement
- name: delete_data_use_agreement
  endpoint:
    path: /reference/deletedatauseagreement
    method: DELETE
    data_selector: deleted_data_use_agreement
- name: manifest
  endpoint:
    path: /getmanifest
    method: GET
    data_selector: records
    params: {}
- name: record
  endpoint:
    path: /getrecord
    method: GET
    data_selector: records
    params: {}
- name: data_use_agreement
  endpoint:
    path: /reference/deletedatauseagreement
    method: DELETE
- name: data_use_agreement
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements/{agreementId}
    method: DELETE
    params: {}
- name: data_use_agreement
  endpoint:
    path: /organizations/organizationId/data-use-agreements/agreementId
    method: DELETE
    data_selector: object
    params: {}
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: models
    params: {}
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
    params: {}
- name: data_use_agreement
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements/{agreementId}
    method: PUT
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: data_use_agreement
  endpoint:
    path: /reference/getdatauseagreement
    method: GET
- name: dataset
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DELETE
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: dataset_status
  endpoint:
    path: /reference/createdatasetstatus
    method: POST
    data_selector: status
    params: {}
- name: data_use_agreement
  endpoint:
    path: /organizations/{organizationId}/data-use-agreements/{agreementId}
    method: PUT
    data_selector: null
    params: {}
- name: dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status
    method: POST
    data_selector: object
- name: dataset_status
  endpoint:
    path: /reference/createdatasetstatus
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status
    method: POST
    params:
      organizationId: string
      displayName: string
      color: string
- name: dataset_status
  endpoint:
    path: /reference/getdatasetstatus
    method: GET
    data_selector: datasetStatusOptions
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status
    method: POST
- name: dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status
    method: GET
    data_selector: ''
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach_a_pennsieve_package_to_a_record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: execute_a_select_statement_over_model_records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets
    method: GET
    data_selector: results
- name: delete_dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status/{datasetStatusId}
    method: DELETE
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status/datasetStatusId
    method: DELETE
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DEL
- name: delete a relationship between two records
  endpoint:
    path: /reference/deleterelationship
    method: DEL
- name: list relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: execute a select statement over model records
  endpoint:
    path: /reference/selectrecords
    method: POST
- name: fetch a record with its related records and packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: create relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update record (new version)
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: archive all records (optionally by version)
  endpoint:
    path: /reference/archiverecords
    method: DEL
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update model metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: get model with latest version or version as_of
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: create a new version of an existing model from a model template version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: list all models for a dataset with their latest versions or version as_of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create template version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: list template versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: update template metadata
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
- name: list templates latest versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: get template latest/as_of
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
- name: create model template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: dataset_status_options
  endpoint:
    path: /reference/getdatasetstatus
    method: GET
- name: dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status
    method: GET
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: packages_service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: integration_service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: imaging_service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: repository_service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: github_service
  endpoint:
    path: /reference/github-service
    method: GET
- name: drs_service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: timeseries_service
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: collections_service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: publishing_service
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: metadata_api
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status
    method: GET
    data_selector: array of objects
- name: dataset_status
  endpoint:
    path: /reference/updatedatasetstatus
    method: PUT
- name: dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status/{datasetStatusId}
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status/datasetStatusId
    method: PUT
- name: organization_invites
  endpoint:
    path: /organization/invites
    method: GET
- name: delete_dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status/{datasetStatusId}
    method: DELETE
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: organization_invites
  endpoint:
    path: /reference/getorganizationinvites
    method: GET
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status/datasetStatusId
    method: DELETE
- name: invites
  endpoint:
    path: /organizations/{organizationId}/invites
    method: GET
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get all Metadata Records for a Model
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: organization_invites
  endpoint:
    path: /organizations/organizationId/invites
    method: GET
- name: dataset_status
  endpoint:
    path: /reference/updatedatasetstatus
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: update_dataset_status
  endpoint:
    path: /organizations/{organizationId}/dataset-status/{datasetStatusId}
    method: PUT
- name: delete_organization_invite
  endpoint:
    path: /reference/deleteorganizationinvite
    method: del
- name: dataset_status
  endpoint:
    path: /organizations/organizationId/dataset-status/datasetStatusId
    method: PUT
    data_selector: object
- name: invites
  endpoint:
    path: /organizations/organizationId/invites
    method: GET
    data_selector: object
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: package
  endpoint:
    path: /deleterecordpackage
    method: DELETE
- name: record
  endpoint:
    path: /listrecordpackages
    method: GET
- name: relationship
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
- name: organization_invites
  endpoint:
    path: /reference/getorganizationinvites
    method: GET
    data_selector: invites
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: invites
  endpoint:
    path: /organizations/{organizationId}/invites
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /reference/getdatasets
    method: GET
    data_selector: datasets
- name: organization
  endpoint:
    path: /reference/getorganizations
    method: GET
    data_selector: organizations
- name: organization_invites
  endpoint:
    path: /organizations/organizationId/invites
    method: GET
    data_selector: array of objects
- name: refresh_invite
  endpoint:
    path: /organizations/{organizationId}/invites/{id}
    method: PUT
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: organization_invite
  endpoint:
    path: /organizations/organizationId/invites/id
    method: PUT
    data_selector: success
    params: {}
- name: organization_invite
  endpoint:
    path: /reference/deleteorganizationinvite
    method: DELETE
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: remove_from_organization
  endpoint:
    path: /reference/removefromorganization
    method: DELETE
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/serverapiv1relationshipsget_concept_relationships
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: properties
  endpoint:
    path: /reference/serverapiv1propertiesget_units
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: organization_invite
  endpoint:
    path: /reference/refreshorganizationinvite
    method: PUT
- name: update_member
  endpoint:
    path: /reference/updatemember
    method: PUT
- name: update_member
  endpoint:
    path: /organizations/{organizationId}/members/{id}
    method: PUT
- name: refresh_invite
  endpoint:
    path: /organizations/{organizationId}/invites/{id}
    method: PUT
- name: organization_invite
  endpoint:
    path: /organizations/organizationId/invites/id
    method: PUT
- name: organization_invite_delete
  endpoint:
    path: /organizations/organizationId/invites/id
    method: DELETE
- name: remove_from_organization
  endpoint:
    path: /reference/removefromorganization
    method: DELETE
- name: create_team
  endpoint:
    path: /reference/createteam
    method: POST
- name: datasets
  endpoint:
    path: /reference/datasets
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/models
    method: GET
    data_selector: records
- name: remove_from_organization
  endpoint:
    path: /reference/removefromorganization
    method: DELETE
- name: manifest
  endpoint:
    path: /reference/getmanifest
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: results
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: dataset
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: user
  endpoint:
    path: /reference/getcurrentuser
    method: GET
    data_selector: user
    params: {}
- name: create_team
  endpoint:
    path: /organizations/{organizationId}/teams
    method: POST
- name: organization_member
  endpoint:
    path: /reference/updatemember
    method: PUT
- name: teams
  endpoint:
    path: /organizations/organizationId/teams
    method: POST
- name: get_teams
  endpoint:
    path: /getteams
    method: GET
- name: update_member
  endpoint:
    path: /organizations/{organizationId}/members/{id}
    method: PUT
- name: datasets
  endpoint:
    path: /reference/datasets
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /reference/metadata
    method: GET
    data_selector: records
- name: members
  endpoint:
    path: /organizations/organizationId/members/id
    method: PUT
    data_selector: object
    params: {}
- name: teams
  endpoint:
    path: /reference/getteams
    method: GET
    data_selector: teams
- name: teams
  endpoint:
    path: /organizations/{organizationId}/teams
    method: GET
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: teams
  endpoint:
    path: /organizations/organizationId/teams
    method: GET
    data_selector: array of objects
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: models
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: create_team
  endpoint:
    path: /reference/createteam
    method: POST
- name: get_organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: get_current_user
  endpoint:
    path: /reference/getcurrentuser
    method: GET
- name: delete_team
  endpoint:
    path: /reference/deleteteam
    method: DELETE
- name: create_team
  endpoint:
    path: /organizations/{organizationId}/teams
    method: POST
- name: teams
  endpoint:
    path: /organizations/organizationId/teams
    method: POST
- name: get_teams
  endpoint:
    path: /getteams
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: manifest
  endpoint:
    path: /getmanifest
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /getmodels
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /getdatasets
    method: GET
    data_selector: records
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: teams
  endpoint:
    path: /reference/getteams
    method: GET
- name: team
  endpoint:
    path: /reference/getteam
    method: GET
    data_selector: team
    params: {}
- name: teams
  endpoint:
    path: /organizations/{organizationId}/teams
    method: GET
    data_selector: teams
    params:
      organizationId: string
- name: teams
  endpoint:
    path: /organizations/{organizationId}/teams/{id}
    method: GET
- name: teams
  endpoint:
    path: /organizations/organizationId/teams
    method: GET
    data_selector: array of objects
- name: team
  endpoint:
    path: /organizations/organizationId/teams/id
    method: GET
    data_selector: object
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: record_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: records
- name: template_versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: get_model_with_latest_version
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: teams
  endpoint:
    path: /organizations/{organizationId}/teams/{id}
    method: PUT
- name: team
  endpoint:
    path: /organizations/organizationId/teams/id
    method: PUT
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: add_team_member
  endpoint:
    path: /organizations/{organizationId}/teams/{id}/members
    method: POST
- name: team
  endpoint:
    path: /reference/getteam
    method: GET
    data_selector: records
    params: {}
- name: get_team
  endpoint:
    path: /organizations/{organizationId}/teams/{id}
    method: GET
- name: team_member
  endpoint:
    path: /organizations/organizationId/teams/id/members
    method: POST
- name: team
  endpoint:
    path: /organizations/organizationId/teams/id
    method: GET
    data_selector: object
    params: {}
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: model
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: team_members
  endpoint:
    path: /reference/getteammembers
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: fetch_record_with_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: team_members
  endpoint:
    path: /organizations/{organizationId}/teams/{id}/members
    method: GET
- name: team_members
  endpoint:
    path: /organizations/organizationId/teams/id/members
    method: GET
    data_selector: array of objects
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: dataset_models_latest
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: teams
  endpoint:
    path: /organizations/{organizationId}/teams/{id}
    method: PUT
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: list_record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: get_relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: add_team_member
  endpoint:
    path: /organizations/{organizationId}/teams/{id}/members
    method: POST
- name: metadata_model
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
    data_selector: models
- name: metadata_record
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
    data_selector: records
- name: team_members
  endpoint:
    path: /organizations/organizationId/teams/id/members
    method: POST
    data_selector: members
    params: {}
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: workflow
  endpoint:
    path: /reference/getworkflows
    method: GET
- name: collection
  endpoint:
    path: /reference/getcollections-1
    method: GET
- name: team_members
  endpoint:
    path: /reference/getteammembers
    method: GET
- name: contributor
  endpoint:
    path: /reference/createcontributor
    method: POST
- name: dataset
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: team_members
  endpoint:
    path: /organizations/{organizationId}/teams/{id}/members
    method: GET
- name: contributors
  endpoint:
    path: /contributors/
    method: POST
- name: team_members
  endpoint:
    path: /organizations/organizationId/teams/id/members
    method: GET
    data_selector: members
- name: get_contributor
  endpoint:
    path: /contributors/
    method: GET
- name: remove_from_team
  endpoint:
    path: /removefromteam
    method: DELETE
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: model
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: contributor
  endpoint:
    path: /reference/getcontributor
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: contributors
  endpoint:
    path: /contributors/{id}
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
    data_selector: records
- name: contributor
  endpoint:
    path: /contributors/id
    method: GET
    data_selector: object
- name: packages_attached_to_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_between_records
  endpoint:
    path: /createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: contributor
  endpoint:
    path: /reference/createcontributor
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: search_results
- name: contributors
  endpoint:
    path: /contributors/
    method: POST
- name: contributors
  endpoint:
    path: /contributors/{id}
    method: PUT
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: contributor
  endpoint:
    path: /contributors/id
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: current_user
  endpoint:
    path: /reference/getcurrentuser
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /user
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: contributors
  endpoint:
    path: /reference/getcontributors
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: contributors
  endpoint:
    path: /contributors/{id}
    method: GET
- name: contributor
  endpoint:
    path: /contributors/id
    method: GET
    data_selector: object
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: contributor
  endpoint:
    path: /reference/updatecontributor
    method: PUT
    data_selector: records
- name: user
  endpoint:
    path: /reference/updateuser
    method: PUT
- name: contributors
  endpoint:
    path: /contributors/{id}
    method: PUT
- name: contributor
  endpoint:
    path: /contributors/id
    method: PUT
- name: user
  endpoint:
    path: /user/
    method: PUT
    data_selector: response
    params: {}
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: POST
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: current_user
  endpoint:
    path: /reference/getcurrentuser
    method: GET
    data_selector: user
- name: user
  endpoint:
    path: /user
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
    params: {}
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: accept_custom_terms_of_service
  endpoint:
    path: /reference/acceptcustomtermsofservice
    method: PUT
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: model
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: models
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: collections
  endpoint:
    path: /reference/getcollections-1
    method: GET
- name: metadata
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: user
  endpoint:
    path: /reference/updateuser
    method: PUT
    data_selector: ''
    params: {}
- name: custom_terms_of_service
  endpoint:
    path: /user/custom-terms-of-service
    method: PUT
    data_selector: object
    params: {}
- name: user
  endpoint:
    path: /user
    method: PUT
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: current_user
  endpoint:
    path: /user/
    method: PUT
    data_selector: object
- name: user
  endpoint:
    path: /reference/updateuseremail
    method: PUT
- name: update_user_email
  endpoint:
    path: /user/email
    method: PUT
- name: upload
  endpoint:
    path: /reference/upload-service
    method: POST
    data_selector: records
- name: metadata
  endpoint:
    path: /reference/metadata-service
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: get_user_by_email
  endpoint:
    path: /user/email
    method: GET
- name: update_user_email
  endpoint:
    path: /user/email
    method: PUT
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: records
- name: custom_terms_of_service
  endpoint:
    path: /user/custom-terms-of-service
    method: PUT
    data_selector: response
    params: {}
- name: user_by_email
  endpoint:
    path: /user/getuserbyemail
    method: GET
    data_selector: user
    params: {}
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: records
- name: user_by_email
  endpoint:
    path: /user/email/{email}
    method: GET
- name: user
  endpoint:
    path: /user/email/email
    method: GET
    data_selector: object
    params: {}
- name: data_use_agreement
  endpoint:
    path: /datauseagreement
    method: GET
    data_selector: object
    params: {}
- name: user
  endpoint:
    path: /reference/updateuseremail
    method: PUT
    data_selector: records
- name: update_user_email
  endpoint:
    path: /user/email
    method: PUT
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: fetch a record with its related records and packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: user
  endpoint:
    path: /user/email
    method: PUT
- name: user
  endpoint:
    path: /reference/merge-user-accounts
    method: PUT
- name: merge_user_accounts
  endpoint:
    path: /user/merge/{userId}
    method: PUT
- name: manifest
  endpoint:
    path: /getmanifest
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /graphgetmodels
    method: GET
    data_selector: records
    params: {}
- name: trashcan
  endpoint:
    path: /gettrashcan
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /reference/getuserbyemail
    method: GET
    data_selector: user
    params: {}
- name: user
  endpoint:
    path: /user/email/{email}
    method: GET
    data_selector: response
- name: user
  endpoint:
    path: /user/merge/userId
    method: PUT
    data_selector: object
    params: {}
- name: user
  endpoint:
    path: /user/email/email
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /reference/datasets
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /reference/files
    method: GET
    data_selector: records
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
    params: {}
- name: delete_orcid
  endpoint:
    path: /reference/deleteorcid
    method: DELETE
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
    data_selector: records
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: delete_orcid
  endpoint:
    path: /user/orcid
    method: DELETE
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
    params: {}
- name: merge_user_accounts
  endpoint:
    path: /user/merge/{userId}
    method: PUT
- name: user
  endpoint:
    path: /user/merge/userId
    method: PUT
    data_selector: null
    params: {}
- name: Get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: Insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: Create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: List model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: Update model metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: Get model with latest version or version as_of
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: Create a new version of an existing model from a model template version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: list all models for a dataset with their latest versions or version as_of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: Create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: Create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: Create template version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: List template versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: Update template metadata
  endpoint:
    path: /reference/updatemodeltemplate
    method: PATCH
- name: List templates latest versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: Get template latest/as_of
  endpoint:
    path: /reference/getmodeltemplatelatest
    method: GET
- name: Create model template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: create_orcid
  endpoint:
    path: /reference/createorcid
    method: POST
- name: upload_manifest
  endpoint:
    path: /upload-service
    method: POST
    data_selector: records
    params: {}
- name: get_presigned_url
  endpoint:
    path: /getmanifestarchiveurl
    method: GET
    data_selector: records
    params: {}
- name: orcid_authorization
  endpoint:
    path: /user/orcid
    method: POST
- name: delete_orcid
  endpoint:
    path: /reference/deleteorcid
    method: DELETE
- name: orcid
  endpoint:
    path: /user/orcid
    method: POST
- name: manifests
  endpoint:
    path: /reference/getmanifestlist
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /reference/graphgetmodels
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
    data_selector: records
- name: integration
  endpoint:
    path: /reference/callintegration
    method: POST
    data_selector: records
- name: repositories
  endpoint:
    path: /reference/getrepositories
    method: GET
    data_selector: records
- name: delete_orcid
  endpoint:
    path: /user/orcid
    method: DELETE
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: versions
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: user_terms_of_service
  endpoint:
    path: /reference/updatepennsievetermsofservice
    method: PUT
- name: create_orcid
  endpoint:
    path: /reference/createorcid
    method: POST
- name: update_terms_of_service
  endpoint:
    path: /user/pennsieve-terms-of-service
    method: PUT
- name: associate_orcid
  endpoint:
    path: /user/orcid
    method: POST
- name: user
  endpoint:
    path: /user/pennsieve-terms-of-service
    method: PUT
    data_selector: object
- name: orcid
  endpoint:
    path: /user/orcid
    method: POST
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: user
  endpoint:
    path: /reference/updatepennsievetermsofservice
    method: PUT
- name: pennsieve_terms_of_service
  endpoint:
    path: /user/pennsieve-terms-of-service
    method: PUT
- name: user
  endpoint:
    path: /reference/getuser
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /user/{userId}
    method: GET
- name: user
  endpoint:
    path: /user/pennsieve-terms-of-service
    method: PUT
    data_selector: response
    params: {}
- name: user
  endpoint:
    path: /user/userId
    method: GET
    data_selector: object
    params: {}
- name: create_user_from_invite
  endpoint:
    path: /reference/createuserfrominvite
    method: POST
- name: update_user_from_invite
  endpoint:
    path: /reference/updateuserfrominvite
    method: PUT
- name: self_service_signup
  endpoint:
    path: /reference/signupuser
    method: POST
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
    params: {}
- name: create_user
  endpoint:
    path: /account/
    method: POST
- name: user
  endpoint:
    path: /reference/getcurrentuser
    method: GET
    data_selector: user
- name: user
  endpoint:
    path: /user/{userId}
    method: GET
- name: user
  endpoint:
    path: /account/
    method: POST
    data_selector: object
    params: {}
- name: user
  endpoint:
    path: /user/userId
    method: GET
    data_selector: object
    params: {}
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: upload_service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: metadata_service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: datasets_service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: integration_service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: imaging_service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: repository_service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: github_service
  endpoint:
    path: /reference/github-service
    method: GET
- name: drs_service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: collections_service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: timeseries_service
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: open_repository_services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: update_user_from_invite
  endpoint:
    path: /reference/updateuserfrominvite
    method: PUT
- name: create_user_from_invite
  endpoint:
    path: /reference/createuserfrominvite
    method: POST
- name: create_user_from_invite
  endpoint:
    path: /reference/createuserfrominvite
    method: POST
- name: update_user
  endpoint:
    path: /account/
    method: PUT
- name: account
  endpoint:
    path: /account/
    method: PUT
- name: create_user
  endpoint:
    path: /account/
    method: POST
    data_selector: response
    params: {}
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: packages
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
- name: update_user_from_invite
  endpoint:
    path: /reference/updateuserfrominvite
    method: PUT
- name: sign_up
  endpoint:
    path: /account/sign-up
    method: POST
- name: update_user
  endpoint:
    path: /account/
    method: PUT
- name: create_user_from_invite
  endpoint:
    path: /reference/createuserfrominvite
    method: POST
- name: self_service_sign_up
  endpoint:
    path: /reference/signupuser
    method: POST
- name: user
  endpoint:
    path: /account/user
    method: GET
    data_selector: object
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: object
    params: {}
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: signup_user
  endpoint:
    path: /reference/signupuser
    method: POST
- name: data_canvas
  endpoint:
    path: /reference/createdatacanvas
    method: POST
    data_selector: data-canvas
    params: {}
- name: sign_up
  endpoint:
    path: /account/sign-up
    method: POST
- name: data_canvas
  endpoint:
    path: /datacanvas/
    method: POST
- name: user
  endpoint:
    path: /account/sign-up
    method: POST
- name: data_canvas
  endpoint:
    path: /datacanvas/
    method: POST
- name: get_owned_data_canvases
  endpoint:
    path: /getowneddatacanvases
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: data_canvas
  endpoint:
    path: /reference/getowneddatacanvases
    method: GET
- name: data_canvas
  endpoint:
    path: /reference/createdatacanvas
    method: POST
- name: get_owned_data_canvases
  endpoint:
    path: /reference/getowneddatacanvases
    method: GET
- name: get_public_data_canvases_for_organization
  endpoint:
    path: /reference/getpublicdatacanvasesforanorganization
    method: GET
- name: get_public_data_canvas
  endpoint:
    path: /reference/getpublicdatacanvas
    method: GET
- name: delete_data_canvas
  endpoint:
    path: /reference/deletedatacanvas
    method: DEL
- name: datacanvas
  endpoint:
    path: /datacanvas/
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1conceptsget_all_concepts
    method: GET
- name: records
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/
    method: POST
    data_selector: data
    params: {}
- name: get_owned_data_canvases
  endpoint:
    path: /getowneddatacanvases
    method: GET
    data_selector: data
    params: {}
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: public_data_canvas
  endpoint:
    path: /reference/getpublicdatacanvasesforanorganization
    method: GET
    data_selector: records
- name: data_canvases
  endpoint:
    path: /reference/getowneddatacanvases
    method: GET
    data_selector: data-canvases
- name: data_canvas
  endpoint:
    path: /datacanvas/
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/
    method: GET
    data_selector: array of objects
- name: data_canvas
  endpoint:
    path: /datacanvas/get/organization/{orgNodeId}
    method: GET
    data_selector: records
    params: {}
- name: Get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: Insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: Create a new version of an existing model from a model template version
  endpoint:
    path: /reference/createmodelversionfromtemplate
    method: POST
- name: List all models for a dataset with their latest versions or version as_of
  endpoint:
    path: /reference/listdatasetmodelslatest
    method: GET
- name: Create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: Create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: data_canvas
  endpoint:
    path: /datacanvas/get/organization/orgNodeId
    method: GET
    data_selector: array of objects
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: public_data_canvas
  endpoint:
    path: /reference/getpublicdatacanvasesforanorganization
    method: GET
- name: data_canvas
  endpoint:
    path: /reference/getpublicdatacanvas
    method: GET
- name: organization_data_canvas
  endpoint:
    path: /datacanvas/get/organization/{orgNodeId}
    method: GET
    data_selector: response
    params:
      orgNodeId: string
- name: data_canvas
  endpoint:
    path: /datacanvas/get/{nodeId}
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/get/organization/orgNodeId
    method: GET
    data_selector: array of objects
- name: public_data_canvas
  endpoint:
    path: /datacanvas/get
    method: GET
- name: data_canvas_folder
  endpoint:
    path: /datacanvas/folder
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: package
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationship
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: data_canvas
  endpoint:
    path: /reference/createdatacanvas
    method: POST
- name: data_canvas_folder
  endpoint:
    path: /reference/createdatacanvasfolder
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: public_data_canvas
  endpoint:
    path: /reference/getpublicdatacanvas
    method: GET
- name: create_data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder
    method: POST
- name: public_data_canvas
  endpoint:
    path: /datacanvas/get/{nodeId}
    method: GET
- name: public_data_canvas
  endpoint:
    path: /datacanvas/get
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: records
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: data-canvas folder paths
  endpoint:
    path: /reference/getdatacanvasfolderpaths
    method: GET
- name: data-canvas
  endpoint:
    path: /reference/createdatacanvas
    method: POST
- name: dataset
  endpoint:
    path: /reference/createdataset
    method: POST
- name: data_canvas_folder_paths
  endpoint:
    path: /datacanvas/{canvasId}/folder/paths
    method: GET
- name: data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder
    method: POST
- name: data_canvas_folder_paths
  endpoint:
    path: /datacanvas/canvasId/folder/paths
    method: GET
    data_selector: array of objects
- name: data_canvas
  endpoint:
    path: /datacanvas/canvasId/folder
    method: POST
- name: public_data_canvas
  endpoint:
    path: /datacanvas/getpublicdatacanvas
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationship
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: delete_data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}
    method: DELETE
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: list_relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: data_canvas_folder_paths
  endpoint:
    path: /datacanvas/folder/paths
    method: GET
- name: data_canvas_folder
  endpoint:
    path: /datacanvas/folder
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas
    method: GET
- name: data_canvas_folder_paths
  endpoint:
    path: /reference/getdatacanvasfolderpaths
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: data_canvas_folder_paths
  endpoint:
    path: /datacanvas/{canvasId}/folder/paths
    method: GET
    data_selector: ''
- name: data_canvas_folder
  endpoint:
    path: /reference/getdatacanvasfolder
    method: GET
- name: data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}
    method: GET
- name: data_canvas_folder_paths
  endpoint:
    path: /datacanvas/canvasId/folder/paths
    method: GET
- name: data_canvas_folder
  endpoint:
    path: /datacanvas/canvasId/folder/folderId
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: search_results
- name: data-canvas
  endpoint:
    path: /reference/createdatacanvas
    method: POST
- name: data-canvas folder
  endpoint:
    path: /reference/createdatacanvasfolder
    method: POST
- name: delete data-canvas folder
  endpoint:
    path: /reference/deletedatacanvasfolder
    method: DELETE
- name: move data-canvas folder
  endpoint:
    path: /reference/movedatacanvasfolder
    method: PUT
- name: delete_data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}
    method: DELETE
- name: data-canvas folder paths
  endpoint:
    path: /datacanvas/canvasId/folder/folderId
    method: DELETE
- name: move_data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}/move
    method: PUT
- name: data_canvas
  endpoint:
    path: /datacanvas/canvasId/folder/folderId/move
    method: PUT
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: POST
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: POST
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Packages Service
  endpoint:
    path: /reference/packages-service
    method: POST
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: POST
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: POST
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: POST
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: POST
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: POST
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: POST
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: POST
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: POST
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: POST
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: POST
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: POST
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: data_canvas
  endpoint:
    path: /reference/createdatacanvas
    method: POST
- name: add_package
  endpoint:
    path: /reference/addpackagetodatacanvas
    method: POST
- name: data_canvas_folder
  endpoint:
    path: /reference/getdatacanvasfolder
    method: GET
- name: add_package_to_data_canvas
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}/package
    method: POST
- name: data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}
    method: GET
    params: {}
- name: data_canvas
  endpoint:
    path: /datacanvas/canvasId/folder/folderId
    method: GET
- name: get_dataset_metadata
  endpoint:
    path: /reference/getdatasetmetadata-1
    method: GET
    data_selector: records
- name: download_dataset_version
  endpoint:
    path: /reference/downloaddatasetversion-1
    method: GET
    data_selector: records
- name: get_datasets_by_doi
  endpoint:
    path: /reference/getdatasetsbydoi
    method: GET
    data_selector: records
- name: List all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: Fetch a record with its related records and packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: remove_package_from_data_canvas
  endpoint:
    path: /reference/removepackagefromdatacanvas
    method: DELETE
    data_selector: records
- name: move_data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}/move
    method: PUT
- name: data_canvas
  endpoint:
    path: /datacanvas
    method: GET
- name: data_canvas_folder
  endpoint:
    path: /datacanvas/folder
    method: GET
- name: models
  endpoint:
    path: /reference/serverapiv1concepts
    method: GET
- name: metadata_records
  endpoint:
    path: /reference/serverapiv1concept_instances
    method: GET
- name: queries
  endpoint:
    path: /reference/serverapiv1queryrun
    method: POST
- name: upload_service
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: account_service
  endpoint:
    path: /reference/getpennsieveaccounts
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas
    method: GET
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: records
- name: data_canvas
  endpoint:
    path: /reference/addpackagetodatacanvas
    method: POST
- name: add_package_to_data_canvas
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}/package
    method: POST
- name: data_canvas
  endpoint:
    path: /datacanvas/canvasId/folder/folderId/package
    method: POST
    data_selector: null
    params: {}
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: remove_package_from_data_canvas
  endpoint:
    path: /reference/removepackagefromdatacanvas
    method: del
- name: delete_package
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}/package/{packageId}
    method: DELETE
- name: data_canvas
  endpoint:
    path: /datacanvas/canvasId/folder/folderId/package/packageId
    method: DELETE
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: detach_a_single_package_from_a_record
  endpoint:
    path: /deleterecordpackage
    method: DEL
    data_selector: ''
    params: {}
- name: detach_all_packages_from_a_record
  endpoint:
    path: /deleteallrecordpackages
    method: DEL
    data_selector: ''
    params: {}
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: ''
    params: {}
- name: attach_a_Pennsieve_package_to_a_record
  endpoint:
    path: /createrecordpackage
    method: POST
    data_selector: ''
    params: {}
- name: create_relationships_using_record_keys
  endpoint:
    path: /createrelationshipsbetweenrecords
    method: POST
    data_selector: ''
    params: {}
- name: delete_all_inbound_and_outbound_relationships_for_a_record
  endpoint:
    path: /deleterelationships
    method: DEL
    data_selector: ''
    params: {}
- name: delete_a_relationship_between_two_records
  endpoint:
    path: /deleterelationship
    method: DEL
    data_selector: ''
    params: {}
- name: list_relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: ''
    params: {}
- name: execute_a_select_statement_over_model_records
  endpoint:
    path: /selectrecords
    method: POST
    data_selector: ''
    params: {}
- name: fetch_a_record_with_its_related_records_and_packages
  endpoint:
    path: /getrecordwithrelationshipsandpackages
    method: GET
    data_selector: ''
    params: {}
- name: create_relationship
  endpoint:
    path: /createrelationship
    method: POST
    data_selector: ''
    params: {}
- name: update_record_new_version
  endpoint:
    path: /updaterecord
    method: PUT
    data_selector: ''
    params: {}
- name: archive_record
  endpoint:
    path: /archiverecord
    method: DEL
    data_selector: ''
    params: {}
- name: archive_all_records_optionally_by_version
  endpoint:
    path: /archiverecords
    method: DEL
    data_selector: ''
    params: {}
- name: get_paginated_records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: ''
    params: {}
- name: insert_records
  endpoint:
    path: /insertrecords
    method: POST
    data_selector: ''
    params: {}
- name: create_model_version
  endpoint:
    path: /createmodelversion
    method: POST
    data_selector: ''
    params: {}
- name: list_model_versions
  endpoint:
    path: /listmodelversions
    method: GET
    data_selector: ''
    params: {}
- name: update_model_metadata
  endpoint:
    path: /updatemodel
    method: PATCH
    data_selector: ''
    params: {}
- name: get_model_with_latest_version_or_version_as_of
  endpoint:
    path: /getmodellatest
    method: GET
    data_selector: ''
    params: {}
- name: create_a_new_version_of_an_existing_model_from_a_model_template_version
  endpoint:
    path: /createmodelversionfromtemplate
    method: POST
    data_selector: ''
    params: {}
- name: list_all_models_for_a_dataset_with_their_latest_versions_or_version_as_of
  endpoint:
    path: /listdatasetmodelslatest
    method: GET
    data_selector: ''
    params: {}
- name: create_a_new_dataset_model_from_a_specific_version_of_a_model_template
  endpoint:
    path: /createmodelfromtemplate
    method: POST
    data_selector: ''
    params: {}
- name: create_model
  endpoint:
    path: /createmodel
    method: POST
    data_selector: ''
    params: {}
- name: create_template_version
  endpoint:
    path: /createmodeltemplateversion
    method: POST
    data_selector: ''
    params: {}
- name: list_template_versions
  endpoint:
    path: /listmodeltemplateversions
    method: GET
    data_selector: ''
    params: {}
- name: update_template_metadata
  endpoint:
    path: /updatemodeltemplate
    method: PATCH
    data_selector: ''
    params: {}
- name: list_templates_latest_versions
  endpoint:
    path: /listworkspacemodeltemplateslatest
    method: GET
    data_selector: ''
    params: {}
- name: get_template_latest_as_of
  endpoint:
    path: /getmodeltemplatelatest
    method: GET
    data_selector: ''
    params: {}
- name: create_model_template
  endpoint:
    path: /createmodeltemplate
    method: POST
    data_selector: ''
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: rename_data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}/rename
    method: PUT
- name: rename_data_canvas_folder
  endpoint:
    path: /datacanvas/{canvasId}/folder/{folderId}/rename
    method: PUT
- name: datasets
  endpoint:
    path: /reference/discover_datasets
    method: GET
- name: tags
  endpoint:
    path: /reference/discover_tags
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: models
- name: data_canvas
  endpoint:
    path: /datacanvas
    method: GET
- name: dataset
  endpoint:
    path: /datasets
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: searchResults
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: delete_data_canvas
  endpoint:
    path: /datacanvas/{id}
    method: DELETE
    data_selector: ''
- name: data_canvas
  endpoint:
    path: /datacanvas/{id}
    method: DELETE
- name: data_canvas
  endpoint:
    path: /datacanvas/id
    method: DELETE
- name: data_canvas
  endpoint:
    path: /datacanvas/id
    method: DELETE
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_between_records
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: data_canvas
  endpoint:
    path: /reference/getdatacanvas
    method: GET
    data_selector: data-canvas
- name: data_canvas
  endpoint:
    path: /reference/getdatacanvas
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/{id}
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/{id}
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/id
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/{id}
    method: GET
- name: public_data_canvas
  endpoint:
    path: /public/datacanvas
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: data_canvas
  endpoint:
    path: /reference/getdatacanvas
    method: GET
- name: data_canvas
  endpoint:
    path: /datacanvas/{id}
    method: PUT
    data_selector: response
    params: {}
- name: data_canvas
  endpoint:
    path: /datacanvas/{id}
    method: put
- name: data_canvas
  endpoint:
    path: /datacanvas/id
    method: PUT
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
- name: data-canvas
  endpoint:
    path: /datacanvas/id
    method: PUT
- name: public data-canvas
  endpoint:
    path: /getpublicdatacanvas
    method: GET
- name: owned data-canvases
  endpoint:
    path: /getowneddatacanvases
    method: GET
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
    data_selector: metrics
- name: datasets
  endpoint:
    path: /discover/datasets
    method: GET
    data_selector: datasets
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: datasets
  endpoint:
    path: /discover/datasets
    method: GET
- name: datasets
  endpoint:
    path: /discover/datasets
    method: GET
    data_selector: datasets
    params:
      limit: 10
      offset: 0
- name: get_record_with_relationshipsand_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: list_all_packages_attached_to_a_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: datasets
  endpoint:
    path: /discover/datasets
    method: GET
    data_selector: datasets
    params:
      limit: 10
      offset: 0
      orderBy: relevance
      orderDirection: desc
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: datasets
  endpoint:
    path: /discover/datasets/{datasetId}
    method: GET
    data_selector: object
    params: {}
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /discover/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: datasets
  endpoint:
    path: /discover/datasets/{datasetId}
    method: GET
    data_selector: object
- name: dataset
  endpoint:
    path: /discover/datasets/{datasetId}
    method: GET
    data_selector: object
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: versions
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: attach a Pennsieve package to a record
  endpoint:
    path: /reference/createrecordpackage
    method: POST
- name: create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: delete all inbound and outbound relationships for a record
  endpoint:
    path: /reference/deleterelationships
    method: DELETE
- name: list relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create model version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list model versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: update model metadata
  endpoint:
    path: /reference/updatemodel
    method: PATCH
- name: create a new dataset model from a specific version of a model template
  endpoint:
    path: /reference/createmodelfromtemplate
    method: POST
- name: create model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasetsbydoi
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasetsbydoi
    method: GET
- name: datasets_by_dois
  endpoint:
    path: /discover/datasets/doi
    method: GET
    data_selector: object
    params:
      doi: array of strings
- name: datasets_by_doi
  endpoint:
    path: /discover/datasets/doi
    method: GET
    data_selector: object
    params:
      doi: array of strings
- name: get_dataset_by_doi
  endpoint:
    path: /discover/datasets/doi
    method: GET
- name: dataset_by_doi
  endpoint:
    path: /discover/datasets/doi
    method: GET
    data_selector: string
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: dataset
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: preview_access
  endpoint:
    path: /discover/datasets/{datasetId}/preview
    method: POST
    data_selector: response
    params: {}
- name: datasets
  endpoint:
    path: /discover/datasets
    method: GET
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Packages Service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Readme Service
  endpoint:
    path: /reference/readme-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: get_all_published_versions_of_a_dataset
  endpoint:
    path: /reference/getdatasetversions-1
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: get_all_published_versions
  endpoint:
    path: /discover/datasets/{datasetId}/versions
    method: GET
    data_selector: array of objects
- name: dataset_preview
  endpoint:
    path: /discover/datasets/{datasetId}/preview
    method: POST
- name: get_dataset_by_version
  endpoint:
    path: /getdatasetversion-1
    method: GET
- name: get_all_published_versions_of_a_dataset
  endpoint:
    path: /getdatasetversions-1
    method: GET
- name: request_preview_access_to_a_dataset
  endpoint:
    path: /requestpreview-1
    method: POST
- name: datasets
  endpoint:
    path: /discover/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: dataset_versions
  endpoint:
    path: /reference/getdatasetversions-1
    method: GET
    data_selector: dataset_versions
- name: datasets
  endpoint:
    path: /reference/getdatasetversion-1
    method: GET
- name: dataset_versions
  endpoint:
    path: /discover/datasets/{datasetId}/versions
    method: GET
    data_selector: array of objects
- name: dataset_version
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}
    method: GET
    data_selector: object
    params:
      datasetId: int32
      versionId: int32
- name: get_dataset_by_version
  endpoint:
    path: /getdatasetversion-1
    method: GET
- name: get_all_published_versions
  endpoint:
    path: /getdatasetversions-1
    method: GET
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: inserted_records
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
    data_selector: model
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: POST
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: POST
- name: Collections Service
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: POST
- name: get a dataset by version
  endpoint:
    path: /reference/getdatasetversion-1
    method: GET
- name: file
  endpoint:
    path: /reference/getfile-1
    method: GET
    data_selector: file
- name: dataset
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}
    method: GET
    data_selector: object
    params: {}
- name: get_file_from_dataset
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/files
    method: GET
    data_selector: object
    params:
      path: string
- name: dataset_versions
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}
    method: GET
    data_selector: records
- name: dataset_version_files
  endpoint:
    path: /datasets/{datasetId}/versions/{versionId}/files
    method: GET
    data_selector: files
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: packages
  endpoint:
    path: /listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: records
  endpoint:
    path: /getrecordspaginated
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: download_zip
  endpoint:
    path: /reference/downloaddatasetversion-1
    method: GET
    data_selector: download
- name: get_file
  endpoint:
    path: /reference/getfile-1
    method: GET
    data_selector: files
    params: {}
- name: get_file
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/files
    method: GET
    data_selector: object
    params:
      path: string
- name: datasets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/download
    method: GET
    data_selector: downloads
    params:
      downloadOrigin: SPARCDiscover
- name: dataset_version_files
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/files
    method: GET
    data_selector: records
- name: package
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationship
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: get_file
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/download
    method: GET
    data_selector: string
    params: {}
- name: download_metadata
  endpoint:
    path: /reference/getdatasetmetadata-1
    method: GET
    data_selector: string
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: datasets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/download
    method: GET
    params:
      downloadOrigin: SPARCDiscover
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: records
- name: dataset_metadata
  endpoint:
    path: /reference/getdatasetmetadata-1
    method: GET
- name: get_file
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/download
    method: GET
    data_selector: string
- name: get_dataset_metadata
  endpoint:
    path: /discover/datasets/{datasetId}/metadata
    method: GET
    data_selector: string
- name: metadata
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/metadata
    method: GET
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: List trashcan contents for a dataset by folder
  endpoint:
    path: /reference/gettrashcan
    method: GET
- name: Presigned url to manifest of dataset
  endpoint:
    path: /reference/getmanifest
    method: GET
- name: Get all Metadata Records for a Model
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: dataset_metadata
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/metadata
    method: GET
    data_selector: string
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /reference/getdatasetmetadata-1
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /upload-service
    method: POST
- name: metadata
  endpoint:
    path: /metadata-service
    method: GET
- name: datasets
  endpoint:
    path: /datasets-service
    method: GET
- name: dataset_metadata
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/metadata
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: dataset_metadata
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/metadata
    method: GET
    data_selector: string
- name: files
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/files/browse
    method: GET
    data_selector: files
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: dataset_metadata
  endpoint:
    path: /reference/getdatasetmetadata-1
    method: GET
    data_selector: object
- name: all_release_assets
  endpoint:
    path: /reference/browseallassets
    method: GET
    data_selector: object
- name: files_for_dataset
  endpoint:
    path: /reference/browsefiles-1
    method: GET
    data_selector: object
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: results
- name: release_assets
  endpoint:
    path: /reference/browseallassets
    method: GET
- name: files
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/files/browse
    method: GET
    data_selector: files
    params:
      limit: 100
      offset: 0
- name: release_assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets
    method: GET
    data_selector: assets
- name: dataset_metadata
  endpoint:
    path: /reference/getdatasetmetadata-1
    method: GET
    data_selector: object
    params: {}
- name: release_assets
  endpoint:
    path: /reference/browseallassets
    method: GET
    data_selector: assets
    params: {}
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: dataset_assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets
    method: GET
    data_selector: assets
- name: release_assets
  endpoint:
    path: /reference/browseallassets
    method: GET
    data_selector: records
- name: release_assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets
    method: GET
    data_selector: assets
- name: assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets
    method: GET
    data_selector: object
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: fetch_record_with_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_model_version
  endpoint:
    path: /reference/createmodelversion
    method: POST
- name: list_model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: create_model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: create_template_version
  endpoint:
    path: /reference/createmodeltemplateversion
    method: POST
- name: list_template_versions
  endpoint:
    path: /reference/listmodeltemplateversions
    method: GET
- name: list_templates_latest_versions
  endpoint:
    path: /reference/listworkspacemodeltemplateslatest
    method: GET
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: release_assets
  endpoint:
    path: /reference/browseallassets
    method: GET
    data_selector: assets
- name: release_assets
  endpoint:
    path: /reference/browseassets
    method: GET
- name: release_assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets/browse
    method: GET
    data_selector: assets
    params:
      limit: 100
      offset: 0
- name: assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets/browse
    method: GET
    data_selector: assets
    params:
      limit: 100
      offset: 0
- name: release_assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets/browse
    method: GET
    data_selector: assets
    params:
      limit: 100
      offset: 0
- name: release_assets
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/assets/browse
    method: GET
    data_selector: assets
- name: dataset_metadata
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/metadata
    method: GET
    data_selector: metadata
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
    data_selector: records
- name: model_versions
  endpoint:
    path: /reference/listmodelversions
    method: GET
    data_selector: records
- name: latest_model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: download_manifest
  endpoint:
    path: /reference/downloadmanifest-1
    method: POST
- name: download_manifest
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/files/download-manifest
    method: POST
    data_selector: data
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Packages Service
  endpoint:
    path: /reference/packages-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Import Service
  endpoint:
    path: /reference/import-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: download_manifest
  endpoint:
    path: /reference/downloadmanifest-1
    method: POST
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: package
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: model
  endpoint:
    path: /reference/listmodelversions
    method: GET
- name: download_manifest
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/files/download-manifest
    method: POST
- name: doi_page
  endpoint:
    path: /reference/getdoipage
    method: GET
    data_selector: records
- name: dois
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/dois
    method: GET
    data_selector: dois
    params:
      limit: 10
      offset: 0
- name: doi_page
  endpoint:
    path: /reference/getdoipage
    method: GET
- name: download_manifest
  endpoint:
    path: /reference/downloadmanifest-1
    method: POST
- name: get_dataset_metadata
  endpoint:
    path: /reference/getdatasetmetadata-1
    method: GET
- name: get_dataset_by_version
  endpoint:
    path: /reference/getdatasetversion-1
    method: GET
- name: get_latest_version
  endpoint:
    path: /reference/getdataset-1
    method: GET
- name: doi
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/dois
    method: GET
    data_selector: records
    params:
      limit: '10'
      offset: '0'
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: archive_record
  endpoint:
    path: /reference/archiverecord
    method: DEL
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: doi_page
  endpoint:
    path: /reference/getdoipage
    method: GET
- name: data_use_agreement
  endpoint:
    path: /reference/getdatauseagreement
    method: GET
    data_selector: data
    params: {}
- name: dois
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/dois
    method: GET
    data_selector: dois
    params:
      limit: '10'
      offset: '0'
- name: data_use_agreement
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement
    method: GET
    data_selector: body
    params:
      datasetId: int32
- name: dois
  endpoint:
    path: /discover/datasets/{datasetId}/versions/{versionId}/dois
    method: GET
    data_selector: records
    params:
      limit: 10
      offset: 0
- name: data_use_agreement
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement
    method: GET
    data_selector: data_use_agreement
- name: dois
  endpoint:
    path: /discover/datasets/{datasetId}/dois
    method: GET
    data_selector: dois
- name: manifest
  endpoint:
    path: /reference/getmanifest
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /reference/metadata-service
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: data_use_agreement
  endpoint:
    path: /reference/getdatauseagreement-1
    method: GET
    data_selector: data_use_agreement
- name: data_use_agreement
  endpoint:
    path: /reference/getdatauseagreement-1
    method: GET
    data_selector: data_use_agreement
- name: datasets
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement/download
    method: GET
- name: data_use_agreement
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement
    method: GET
    data_selector: object
    params:
      datasetId: int32
- name: data_use_agreement
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement/download
    method: GET
    data_selector: string
- name: data_use_agreement
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement
    method: GET
    data_selector: dataUseAgreement
    params: {}
- name: doi_page
  endpoint:
    path: /discover/datasets/{datasetId}/dois
    method: GET
    data_selector: dois
    params: {}
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record_with_relationships
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: dataset_tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: tags
  endpoint:
    path: /discover/tags
    method: GET
- name: data_use_agreement
  endpoint:
    path: /reference/getdatauseagreement
    method: GET
- name: tags
  endpoint:
    path: /discover/tags
    method: GET
    data_selector: array of objects
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: data_use_agreement
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement/download
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: data_use_agreement
  endpoint:
    path: /discover/datasets/{datasetId}/data-use-agreement/download
    method: GET
- name: datasets
  endpoint:
    path: /discover/search/datasets
    method: GET
    data_selector: datasets
    params:
      limit: '10'
      offset: '0'
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
- name: datasets
  endpoint:
    path: /discover/search/datasets
    method: GET
    data_selector: records
    params:
      limit: '10'
      offset: '0'
      orderBy: relevance
      orderDirection: desc
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: dataset_tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: tags
    params: {}
- name: tags
  endpoint:
    path: /discover/tags
    method: GET
- name: files
  endpoint:
    path: /discover/search/files
    method: GET
    params:
      limit: 10
      offset: 0
- name: tags
  endpoint:
    path: /discover/tags
    method: GET
    data_selector: array of objects
- name: files
  endpoint:
    path: /search/files
    method: GET
    data_selector: files
    params:
      limit: 10
      offset: 0
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: create_relationships_using_record_keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
    data_selector: records
- name: fetch_record_with_related_records_and_packages
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: get_paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets
    method: GET
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
    params: {}
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /discover/search/datasets
    method: GET
    data_selector: datasets
    params:
      limit: 10
      offset: 0
- name: search_records
  endpoint:
    path: /discover/search/records
    method: GET
    params:
      limit: 10
      offset: 0
- name: records
  endpoint:
    path: /discover/search/records
    method: GET
    data_selector: records
    params:
      limit: 10
      offset: 0
- name: datasets
  endpoint:
    path: /discover/search/datasets
    method: GET
    data_selector: records
    params:
      limit: '10'
      offset: '0'
      orderBy: relevance
      orderDirection: desc
- name: record
  endpoint:
    path: /reference/getrecordwithrelationshipsandpackages
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /reference/getmodellatest
    method: GET
    data_selector: records
- name: record_packages
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: records
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: file_from_source_package_id
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /discover/packages/{sourcePackageId}/files
    method: GET
    params:
      limit: 100
      offset: 0
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: datasets
- name: files
  endpoint:
    path: /reference/searchfiles-3
    method: GET
    data_selector: files
- name: records_matching_criteria
  endpoint:
    path: /reference/searchrecords-3
    method: GET
    data_selector: records
    params:
      limit: 100
      offset: 0
- name: files_search
  endpoint:
    path: /discover/search/files
    method: GET
    data_selector: files
    params:
      limit: 10
      offset: 0
- name: list all packages attached to a record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: create relationships using record keys
  endpoint:
    path: /reference/createrelationshipsbetweenrecords
    method: POST
- name: detach a single package from a record
  endpoint:
    path: /reference/deleterecordpackage
    method: DELETE
- name: detach all packages from a record
  endpoint:
    path: /reference/deleteallrecordpackages
    method: DELETE
- name: get paginated records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: files
  endpoint:
    path: /discover/search/files
    method: GET
    data_selector: files
    params:
      limit: 10
      offset: 0
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
    data_selector: packages
- name: relationships_for_record
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
    data_selector: relationships
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
    data_selector: records
- name: organization_dataset_metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
    data_selector: metrics
- name: organization_dataset_metrics
  endpoint:
    path: /discover/organizations/{organizationId}/datasets/metrics
    method: GET
    data_selector: datasets
- name: datasets
  endpoint:
    path: /reference/getdatasets-1
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /reference/gettags-1
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: records
- name: metrics
  endpoint:
    path: /discover/organizations/{organizationId}/datasets/metrics
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: model
  endpoint:
    path: /reference/createmodel
    method: POST
- name: template
  endpoint:
    path: /reference/createmodeltemplate
    method: POST
- name: search_records
  endpoint:
    path: /discover/search/records
    method: GET
    data_selector: records
    params:
      offset: 0
- name: records
  endpoint:
    path: /discover/search/records
    method: GET
    data_selector: records
    params:
      limit: '10'
      offset: '0'
- name: Get Presigned URL to Manifest archive
  endpoint:
    path: /reference/getmanifestarchiveurl
    method: GET
- name: Get files for manifest
  endpoint:
    path: /reference/getmanifestfiles
    method: GET
- name: List manifests for dataset
  endpoint:
    path: /reference/getmanifestlist
    method: GET
- name: Get package metadata
  endpoint:
    path: /reference/graphgetpackagemetadata
    method: GET
- name: Get models for dataset
  endpoint:
    path: /reference/graphgetmodels
    method: GET
- name: Get all Metadata Records for a Model
  endpoint:
    path: /reference/serverapiv1concept_instancesget_all_concept_instances
    method: GET
- name: files
  endpoint:
    path: /reference/getfilefromsourcepackageid-1
    method: GET
    data_selector: files
    params: {}
- name: files
  endpoint:
    path: /discover/packages/{sourcePackageId}/files
    method: GET
    data_selector: files
    params:
      limit: 100
      offset: 0
- name: records_matching_criteria
  endpoint:
    path: /reference/searchrecords-3
    method: GET
    data_selector: records
- name: files_matching_criteria
  endpoint:
    path: /reference/searchfiles-3
    method: GET
    data_selector: files
- name: datasets_matching_criteria
  endpoint:
    path: /reference/searchdatasets-3
    method: GET
    data_selector: datasets
- name: packages_attached_to_record
  endpoint:
    path: /reference/listrecordpackages
    method: GET
- name: relationships
  endpoint:
    path: /reference/getrelationshipsforrecord
    method: GET
- name: paginated_records
  endpoint:
    path: /reference/getrecordspaginated
    method: POST
- name: insert_records
  endpoint:
    path: /reference/insertrecords
    method: POST
- name: create_relationship
  endpoint:
    path: /reference/createrelationship
    method: POST
- name: update_record
  endpoint:
    path: /reference/updaterecord
    method: PUT
- name: organization_dataset_metrics
  endpoint:
    path: /reference/getorganizationdatasetmetrics-1
    method: GET
    data_selector: metrics
- name: organization_datasets_metrics
  endpoint:
    path: /discover/organizations/{organizationId}/datasets/metrics
    method: GET
    data_selector: datasets
    params:
      organizationId: int32
- name: metrics
  endpoint:
    path: /discover/organizations/{organizationId}/datasets/metrics
    method: GET
- name: Upload Service
  endpoint:
    path: /reference/upload-service
    method: GET
- name: Metadata Service
  endpoint:
    path: /reference/metadata-service
    method: GET
- name: Datasets Service
  endpoint:
    path: /reference/datasets-service
    method: GET
- name: Integration Service
  endpoint:
    path: /reference/integration-service
    method: GET
- name: Imaging Service
  endpoint:
    path: /reference/imaging-service
    method: GET
- name: Discover/Rehydration Service
  endpoint:
    path: /reference/discoverrehydration-service
    method: GET
- name: Account Service
  endpoint:
    path: /reference/account-service
    method: GET
- name: Compute Node Service
  endpoint:
    path: /reference/compute-node-service
    method: GET
- name: App Deploy Service
  endpoint:
    path: /reference/app-deploy-service
    method: GET
- name: Repository Service
  endpoint:
    path: /reference/repository-service
    method: GET
- name: GitHub Service
  endpoint:
    path: /reference/github-service
    method: GET
- name: DRS Service
  endpoint:
    path: /reference/drs-service
    method: GET
- name: Timeseries API
  endpoint:
    path: /reference/timeseries-service
    method: GET
- name: Collections API
  endpoint:
    path: /reference/collections-service
    method: GET
- name: Open Repository Services
  endpoint:
    path: /reference/publishing-service-1
    method: GET
- name: Metadata API
  endpoint:
    path: /reference/metadata-service-1
    method: GET
notes:
- Requires setup of connected app in Pennsieve
- Requires setup of connected app in Pennsieve.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The Pennsieve platform is a cloud-based scientific data management platform.
- Uses OAuth2 with refresh token — requires setup of connected app in Pennsieve
- Some projects are focused on making scientific data publicly available, others use
  the platform for private collaboration and inter-institutional efforts.
- Uses OAuth2 with refresh token — requires setup of connected app in Pennsieve.
- Users cannot create a new workspace without talking to the Pennsieve team.
- Typically, a workspace is associated with a grant funded project, a consortium,
  or a center.
- Workspace owners can create and manage custom data use agreements.
- Collaborators can create new datasets in a workspace.
- Users can see a list of workspaces they belong to.
- All users can see the available dataset status options in a workspace.
- Datasets are the primary containers for data in a Pennsieve Workspace.
- A snapshot of a dataset can be published to make the dataset publicly available.
- Analytic workflows are still in active development.
- Users can publish multiple versions of a dataset and each version will be assigned
  a DOI that can be cited in publications.
- Pennsieve serializes all dataset information, including metadata records, to files
  on AWS S3.
- Users can submit dataset proposals to the repository using the Pennsieve web application.
- Proposals are reviewed by the repository 'publishers' and the user will be informed
  if the proposed dataset is in scope of the selected repository.
- Anybody can list public datasets
- In order to access embargoed datasets, you need to have a Pennsieve account
- Office hours are Mondays (1:00-2:00 ET)
- 'Uploading files is a two-step process: create a manifest and then upload it.'
- Requires Pennsieve agent to be installed and running.
- The Pennsieve Agent needs to be started for operations.
- Setting the active dataset is persistent until manually changed.
- Each time you upload files to a dataset, an upload manifest is created.
- Users with access to a dataset can see all upload manifests.
- Requires Pennsieve Agent to be running locally.
- Each user who has access to a dataset can see all upload manifests created for a
  dataset.
- Public collections reflect only the latest published version. Draft changes you
  make in your workspace are not visible until you publish.
- The current schema does not export annotations on files.
- Files that are remote resources are not included in the published data.
- Pennsieve integrates with GitHub to enable users to publish code and workflows.
- The current schema does not export annotations on files, any discussions captured
  as part of the dataset, permissions associated with the dataset prior to publishing,
  or files that are remote resources.
- Pennsieve Discover is a web application which provides access to all data published
  through Pennsieve
- Users can submit a dataset proposal for review by the review committee before uploading
  data.
- We will never charge for access to our data and tools.
- All datasets can be accessed by directly interacting with AWS using your own AWS
  account.
- Any costs associated with downloading the data will be charged to your AWS account.
- Rehydrated public datasets will remain available for 14 days.
- This process can take up to 24hrs to complete.
- 'Upload Service fails for datasets with large numbers of files: May 18, 2022: At
  this time, the upload mechanism for the Pennsieve platform has trouble handling
  single upload sessions for folders with very large numbers of files (> 1000). If
  datasets with very large numbers of files are uploaded in a single upload session,
  the upload service can significantly slow down, or fail. This is not impacted by
  file-size.'
- 'Current Workaround: In case an investigator needs to submit a dataset that is comprised
  of large numbers of files, they can either: Upload the dataset in multiple steps
  (upload folders individually, or grouped instead of the entire dataset folder) or
  Contact our team (jacb@seas.upenn.edu, joostw@seas.upenn.edu) for more information.'
- 'Planned improvements: A new upload service is currently under development and is
  expected to be in place by end of July 2022. This should remove any restrictions
  in the number of files and supported file-sizes.'
- There are costs associated with running analysis using Pennsieve. Make sure you
  understand how running compute on your cloud resource is invoiced.
- Compute resources currently support AWS accounts.
- Select the files to run the workflow on and then click 'Run Analysis'
- Navigate to Analysis > Activity to view the running workflow
- Pennsieve provides rich tools to interact with the platform programmatically
- The Pennsieve agent is an installable client-tool that runs in the background
- Agent requires an API key for configuration
- Ensure to follow the configuration steps in the documentation to properly set up
  the agent.
- This feature is in Beta mode and is currently still undergoing testing and optimization.
- Make sure to save your new API key/secret pair before exiting the dialog! For security
  purposes, you will not be able to view the key/secret again.
- The Pennsieve Agent must be running to upload files.
- A manifest is required to upload files.
- In order to use the Python package, you need to have the Pennsieve Agent installed
  and properly configured on your system.
- The Pennsieve Agent needs to be started before using Pennsieve client functionalities.
- Using 'fetch' and 'sync' allows for users to efficiently map Pennsieve datasets
  to their local machines without requiring to download each file in the dataset.
- This functionality is currently in Beta and is subject to change as we improve and
  mature the service.
- All Pennsieve Discover objects are in the U.S. East (N. Virginia) region.
- this functionality is currently in Beta and is subject to change as we improve and
  mature the service
- We recommend to increase the number of concurrent connections to 200.
- AWS recommends to not use the root user for everyday tasks.
- Downloading data can have costs associated with it.
- This functionality is currently in active development and will be rolled out iteratively
  over the following couple of months (June 2024)
- Pennsieve is collecting your ORCID iD so we can associate your identity with datasets
  that you make public through the platform.
- Integrations are not enabled for datasets by default and must be enabled for each
  dataset.
- Integrations are not enabled by default for datasets and must be enabled for each
  dataset.
- The University of Pennsylvania may update Pennsieve Properties with or without notifying
  you.
- Certain Services may be subject to additional terms.
- We may use and allow service providers and other third parties to use cookies and
  similar technologies to track your browsing activity over time and across the Services
  and third party websites.
- If files do not show up after 1-2 minutes, it is possible that something is not
  functioning correctly.
- Removing local Pennsieve Agent Database files does not affect any data on your computer
  or on the Pennsieve platform.
- The Pennsieve platform is built on AWS and leverages several different technologies
  to provide scalable and sustainable services to the scientific community.
- The Pennsieve Agent requires only outbound HTTPS access to api.pennsieve.io and
  api2.pennsieve.io.
- If files do not show up after 1-2 minutes, check the status of uploaded files for
  a manifest.
- The Pennsieve platform is in constant development; verify that you are using the
  latest software.
- 'A detailed page describing how to configure the Pennsieve Agent and how to setup
  profiles associated with your Pennsieve user-account can be found here: [Configuring
  client credentials](/docs/configuring-client-credentials).'
- Installation instructions for Windows, Mac, and Linux are provided.
- To interact with the Pennsieve Platform, the Pennsieve Agent must be installed.
- 'The Pennsieve Agent contains two components: The Pennsieve Agent and The Pennsieve
  Command Line Interface (CLI).'
- Users first create a local manifest, and then initiate uploading the manifest.
- 'Each file can have one of the following statuses: LOCAL, REGISTERED, UPLOADED,
  IMPORTED, FINALIZED, VERIFIED, CANCELLED, FAILED.'
- Pennsieve provides advanced functionality to publish versioned datasets for public
  use.
- Pennsieve Open Repositories is a new feature and is currently tested with a small
  number of participating efforts. Not all functionality might be available to all
  users.
- Uses REST API for data retrieval
- Moves files or packages into a destination package.
- Uses OAuth2 authentication
- Uses OAuth2 for authentication.
- Ensure to manage token expiration effectively.
- Some objects may return nulls in deeply nested fields
- API supports various services including upload and metadata.
- Ensure to handle pagination when fetching records.
- Some endpoints are deprecated and may not be supported in future versions.
- Requires setup of connected app in api
- Requires OAuth2 setup for access
- Check permissions for each endpoint
- Requires setup of OAuth2 credentials in Pennsieve
- Some API endpoints may return rate limiting errors
- The URL for the request expires after 30 days.
- The URL for this request expired after 30 days.
- Some endpoints may require additional permissions based on user roles
- The API version is 2.0.
- Creates a new data set that belongs to the current organization a user is logged
  into
- gets all data sets that a user has permission to and that belong to the given organization
- creates a new data set that belongs to the current organization a user is logged
  into
- get the contributors that belong to an organization
- URL for requests expires after 30 days.
- this endpoint is under active development and subject to change
- retrieve the publishing status of all datasets in the organization
- remove contributor from this dataset
- Updates a data set
- Defaults to false for includePublishedDataset
- Defaults to 100 for limit
- Defaults to 0 for offset
- Requires proper authentication setup to upload images.
- API requires setup of connected app in Pennsieve
- The URL for requests expires after 30 days.
- Requires setup of API token for authentication.
- Requires setup of connected app in Pennsieve for OAuth2.
- Some endpoints may require additional permissions.
- Uses OAuth2 for authentication
- URL for this request expired after 30 days.
- Some operations may require specific permissions.
- Requires setup for OAuth2 authentication.
- Some responses may include nested fields
- Requires OAuth2 authentication to access resources.
- Ensure OAuth setup is completed for API access.
- Uses OAuth2 for authentication, which requires proper setup.
- Some endpoints may have rate limits
- Requires setup of OAuth2 for authentication
- Message that should be send to subscribed integrations
- The API requires authentication via OAuth2.
- Log in to see full request history
- Retrieves DOI information for the data set
- Some endpoints may have specific authentication requirements.
- Some endpoints may require specific permissions.
- Uses REST API for interaction with Metadata.
- Requires authentication to access records and models.
- Notifies the Discover service to extract and publish a dataset and knowledge graph,
  or revise the metadata of that graph.
- Rate limiting is applied to all API calls.
- Notify API that Discover has completed a publish job
- Requires setup of connected app in Pennsieve API
- Some endpoints may require additional permissions based on user roles.
- Requires authentication for all endpoints.
- Requires OAuth2 authentication with refresh tokens.
- Requires setup of connected app
- Ensure to manage authentication tokens properly to avoid expiration.
- Log in to use your API keys
- Uses a cursor-based pagination for fetching records.
- Disable integration for a given dataset. Returns the number of disabled integrations.
- Enable integration for a given dataset. Returns a DatasetIntegration.
- API rate limits may apply
- Returns the tree structure, including signed s3 urls and the corresponding paths
  that will make up an archive to download.
- Uses OAuth2 for authentication — requires setup of connected app.
- Requires Pennsieve account for authentication
- Ensure API limits are respected during data ingestion
- Ensure the OAuth2 connected app is correctly configured.
- The URL for this request expires after 30 days.
- This API provides access to various metadata operations.
- Gets view objects for a package of the given id, if no view objects exist, returns
  files, if no files exist, return sources
- This endpoint is deprecated and will go away in a future release (2.7.3)
- If no view objects exist, returns files, if no files exist, return sources.
- No view objects exist, returns files, if no files exist, return sources
- Requires API keys for access
- Updates multiple dimensions on a package
- updates a dimension on a package
- Deletes API Token if the requesting User has access to it
- creates an API Token for the requesting User
- gets all the API Tokens the requesting User has access to
- Updates the API Token if the requesting User has access to it
- Requires OAuth2 authentication.
- Endpoints are organized under various services.
- Uses OAuth2 with refresh token
- API for updating existing channel objects in the graph
- get a single channel that belongs to the time series package
- update an existing channel object in the graph
- Update an existing channel object's properties in the graph
- Returns true if any annotations exist for the time series package
- update an existing channel object's properties in the graph
- Requires setup of API Token for authentication.
- Requires authentication for all endpoints
- Requires setup of API keys
- Requires authentication to access the API.
- URL expires after 30 days
- Some endpoints may require specific user permissions
- URL for the request expired after 30 days.
- Uses OAuth2 — requires setup of connected app in Pennsieve
- delete a webhook for an organization
- Gets all integrations that a user has permission to and that belong to the given
  organization
- Requires API keys for authentication
- Adds members to an organization, notifies them over email
- adds members to an organization, notifies them over email
- Some datasets may have additional access restrictions
- Given a version, gets the custom terms of service for an organization
- API documentation includes various endpoints related to datasets and user management.
- Some API endpoints may require specific permissions based on user roles
- Updated 11 months ago
- Get the dataset status options for an organization
- Update a dataset status for an organization
- Delete an invite to a particular organization
- Ensure proper OAuth scopes are set
- Requires setup of connected app in pennsieve
- get the teams that belong to an organization
- Some objects like datasets may return nulls in deeply nested fields
- Notifies members over email when added to a team
- Uses OAuth2 with refresh token — requires setup of connected app in API
- creates a new contributor that belongs to the current organization
- marks the user as having accepted a custom terms of service
- Ensure OAuth2 token is refreshed before making requests
- Returns the current user
- The API requires OAuth2 authentication
- Refer to the documentation for specific endpoint parameters and behaviors
- User must accept a custom terms of service.
- delete orcid for the current user
- update an existing user's pennsieve terms of service version
- 'Internal use only: release an embargoed dataset to Discover'
- Some API calls may have rate limits
- Internal Use Only
- Uses OAuth2 with refresh token — requires setup of connected app in pennsieve
- The API requires user account setup before accessing datasets.
- Self-service sign up a new user account
- Uses OAuth2.
- gets a public data-canvas regardless of organization
- Requires setup of OAuth2 to access the API.
- Requires setup of OAuth2 credentials.
- Request preview access to a dataset for the current user.
- Some endpoints may require specific user permissions.
- Some endpoints may require specific permissions to access.
- Rate limiting may apply for certain operations.
- Requires authentication to access data.
- Get the data use agreement for this dataset, if under embargo
- get all dataset tags
- Download the data use agreement for this dataset, if under embargo
- Requires authentication to access data
- Some datasets may return nulls in deeply nested fields
- Query params include limit and offset.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your authentication credentials.'
- '400 Bad Request: Ensure the manifest is correctly formatted.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Check client credentials or token expiration'
- '400 Bad Request: Verify the manifest structure'
- '404 Not Found: Check the dataset ID or endpoint'
- '401 Unauthorized: Check your credentials and token validity.'
- '404 Not Found: Verify the endpoint and resource you are trying to access.'
- Costs associated with downloading the data will be charged to your AWS account.
- 404 Not Found
- '401 Unauthorized: Recheck client credentials or token expiration'
- 'URL Expired: The URL for this request expired after 30 days.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Verify endpoint and resource availability.'
- '401 Unauthorized: Invalid or expired token'
- '404 Not Found: Check the endpoint path'
- '400 Bad Request: Validate request parameters'
- '401 Unauthorized: Check your credentials and permissions'
- '429 Too Many Requests: Reduce the frequency of requests'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: The requested resource does not exist'
- '400 Bad Request: Ensure the image file is valid.'
- '401 Unauthorized: Check API token validity.'
- '404 Not Found: Ensure the endpoint is correct.'
- '404 Not Found: Verify the endpoint path.'
- '400 Bad Request: Check request format and parameters'
- '401 Unauthorized: Verify OAuth token and permissions'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Resource does not exist.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: Verify endpoint and parameters'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Ensure the resource path is correct.'
- '404 Not Found: Check the endpoint path or resource ID'
- '401 Unauthorized: Recheck authentication credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '400 Bad Request: Check the request format and parameters.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- '404 Not Found: Verify the resource path and identifier.'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '404 Not Found: Verify the endpoint path and resource.'
- '404 Not Found: Check the endpoint and parameters used.'
- '401 Unauthorized: Check authentication credentials'
- '404 Not Found: Verify endpoint paths'
- '500 Internal Server Error: Retry the request after a short delay'
- '404 Not Found: Verify the resource path.'
- '404 Not Found: Verify the resource path or ID'
- '400 Bad Request: Check request parameters and syntax'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '404 Not Found: Check endpoint path and parameters'
- '500 Internal Server Error: Retry request or contact support'
- '400 Bad Request: Ensure all required parameters are included'
- '401 Unauthorized: Check token validity'
- '404 Not Found: Ensure the endpoint is correct or user has permission'
- '400 Bad Request: Verify the request parameters and syntax'
- '400: Bad Request'
- '401 Unauthorized: URL expired'
- '404 Not Found: Resource not found'
- '401 Unauthorized: URL Expired'
- '401 Unauthorized: Response body indicates an expired URL'
- '401'
- '404 Not Found: The requested resource could not be found.'
- '403 Forbidden: Access denied for the requested resource.'
- 401 Unauthorized
- 403 Forbidden
- '403 Forbidden: Access denied'
- '403 Forbidden: Check permissions for the requested resource'
- '403'
- '401 Unauthorized: Response body'
- '403 Forbidden: Response body'
- '404'
- 401 dataset is under embargo
- 403 dataset is under embargo
- 404 resource not found
- '401: dataset is under embargo'
- '403: dataset is under embargo'
- '404: resource not found'
- '400: invalid root path'
- '403: dataset is under embargo or requested files are too large to download'
- 400 invalid root path
- 403 dataset is under embargo or requested files are too large to download
- '404 Not Found: Check the datasetId provided'
- '404: Not Found'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - PennsieveClient
  - OAuthToken
  - API Token
  - User
  - OAuth2
client:
  base_url: https://api.pennsieve.io
  headers:
    Accept: application/json
source_metadata: null
