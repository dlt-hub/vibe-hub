resources:
- name: measurements
  endpoint:
    path: /v1/measurements
    method: POST
    data_selector: measurements
    params: {}
- name: measurements
  endpoint:
    path: /v1/measurements/:measurement
    method: GET
    data_selector: series
- name: metrics
  endpoint:
    path: /v1/metrics/:name
    method: GET
    data_selector: attributes
- name: metrics
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
- name: spaces
  endpoint:
    path: /v1/spaces
    method: GET
    data_selector: spaces
- name: space
  endpoint:
    path: /v1/spaces/:id
    method: GET
    data_selector: name
- name: create_space
  endpoint:
    path: /v1/spaces
    method: POST
    data_selector: id
- name: update_space
  endpoint:
    path: /v1/spaces/:id
    method: PUT
- name: delete_space
  endpoint:
    path: /v1/spaces/:id
    method: DELETE
- name: charts
  endpoint:
    path: /v1/spaces/:space_id/charts
    method: POST
- name: chart
  endpoint:
    path: /v1/spaces/:space_id/charts/:chart_id
    method: GET
- name: update_chart
  endpoint:
    path: /v1/spaces/:space_id/charts/:chart_id
    method: PUT
- name: charts_in_space
  endpoint:
    path: /v1/spaces/:id/charts
    method: GET
    data_selector: '[]'
- name: delete_chart
  endpoint:
    path: /v1/spaces/:id/charts/:chart_id
    method: DELETE
    data_selector: ''
- name: measurements
  endpoint:
    path: /v1/measurements
    method: POST
    data_selector: measurements
- name: metrics
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
- name: update_metric
  endpoint:
    path: /v1/metrics/:name
    method: PUT
    data_selector: null
- name: delete_metric
  endpoint:
    path: /v1/metrics/:name
    method: DELETE
    data_selector: null
- name: metrics
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
    params:
      name: api
      offset: '20'
      limit: '10'
- name: spaces
  endpoint:
    path: /v1/spaces
    method: GET
    data_selector: spaces
    params: {}
- name: charts
  endpoint:
    path: /v1/spaces/:space_id/charts
    method: POST
    data_selector: id
    params: {}
- name: charts
  endpoint:
    path: /v1/spaces/:id/charts
    method: GET
    data_selector: charts
- name: delete_chart
  endpoint:
    path: /v1/spaces/:id/charts/:chart_id
    method: DELETE
- name: annotations
  endpoint:
    path: /v1/annotations/:name
    method: POST
    data_selector: annotations
    params: {}
- name: annotation_event
  endpoint:
    path: /v1/annotations/:name/:id
    method: GET
    data_selector: events
    params: {}
- name: annotations
  endpoint:
    path: /v1/annotations
    method: GET
    data_selector: annotations
- name: alerts
  endpoint:
    path: /v1/alerts
    method: POST
    data_selector: alerts
- name: alert_status
  endpoint:
    path: /v1/alerts/:alert_id/status
    method: GET
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: alerts
- name: api_tokens
  endpoint:
    path: /v1/api_tokens
    method: GET
    data_selector: api_tokens
- name: api_tokens
  endpoint:
    path: /v1/api_tokens
    method: GET
    data_selector: api_tokens
- name: jobs
  endpoint:
    path: /v1/jobs/:id
    method: GET
    data_selector: id
- name: snapshots
  endpoint:
    path: /v1/snapshots/:id
    method: GET
    data_selector: href
- name: services
  endpoint:
    path: /v1/services
    method: GET
    data_selector: services
- name: router_metrics
  endpoint:
    path: /api/router_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: postgres_metrics
  endpoint:
    path: /api/postgres_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: per_dyno_runtime_metrics
  endpoint:
    path: /api/per_dyno_runtime_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: measurements
  endpoint:
    path: /v1/measurements
    method: POST
    data_selector: measurements
    params: {}
- name: measurements
  endpoint:
    path: /v1/measurements/:measurement
    method: GET
    data_selector: series
    params:
      resolution: 60
      duration: 86400
- name: metrics
  endpoint:
    path: /v1/metrics/:name
    method: PUT
    data_selector: metrics
    params: {}
- name: metrics
  endpoint:
    path: /v1/metrics
    method: PUT
    data_selector: response
    params: {}
- name: metrics_by_name
  endpoint:
    path: /v1/metrics/:name
    method: DELETE
    data_selector: response
    params: {}
- name: spaces
  endpoint:
    path: /v1/spaces
    method: GET
    data_selector: spaces
- name: space
  endpoint:
    path: /v1/spaces/:id
    method: GET
    data_selector: name
- name: charts
  endpoint:
    path: /v1/spaces/:space_id/charts
    method: POST
    data_selector: id
- name: chart
  endpoint:
    path: /v1/spaces/:space_id/charts/:chart_id
    method: GET
    data_selector: id
- name: charts_in_space
  endpoint:
    path: /v1/spaces/:id/charts
    method: GET
    data_selector: charts
- name: delete_chart
  endpoint:
    path: /v1/spaces/:id/charts/:chart_id
    method: DELETE
- name: measurements
  endpoint:
    path: /v1/measurements
    method: POST
    data_selector: measurements
- name: metrics
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
- name: measurements
  endpoint:
    path: /v1/measurements/:measurement
    method: GET
    data_selector: series
- name: metrics
  endpoint:
    path: /v1/metrics/:name
    method: PUT
    data_selector: null
- name: metrics
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: spaces
  endpoint:
    path: /v1/spaces
    method: GET
    data_selector: spaces
- name: charts
  endpoint:
    path: /v1/spaces/:id/charts
    method: POST
    data_selector: charts
- name: charts
  endpoint:
    path: /v1/spaces/:id/charts
    method: GET
- name: delete_chart
  endpoint:
    path: /v1/spaces/:id/charts/:chart_id
    method: DELETE
- name: annotation_event
  endpoint:
    path: /v1/annotations/:name
    method: POST
    data_selector: annotations
    params: {}
- name: retrieve_annotation
  endpoint:
    path: /v1/annotations/:name
    method: GET
    data_selector: annotations
    params: {}
- name: update_annotation
  endpoint:
    path: /v1/annotations/:name/:id
    method: PUT
    data_selector: annotations
    params: {}
- name: delete_annotation
  endpoint:
    path: /v1/annotations/:name/:id
    method: DELETE
    data_selector: annotations
    params: {}
- name: annotations
  endpoint:
    path: /v1/annotations
    method: GET
    data_selector: annotations
    params: {}
- name: alerts
  endpoint:
    path: /v1/alerts
    method: POST
    data_selector: alerts
    params: {}
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: alerts
- name: api_tokens
  endpoint:
    path: /v1/api_tokens
    method: GET
    data_selector: api_tokens
- name: api_tokens
  endpoint:
    path: /v1/api_tokens
    method: GET
    data_selector: api_tokens
- name: jobs
  endpoint:
    path: /v1/jobs/:id
    method: GET
    data_selector: id
- name: snapshots
  endpoint:
    path: /v1/snapshots/:id
    method: GET
    data_selector: href
- name: services
  endpoint:
    path: /v1/services
    method: GET
    data_selector: services
notes:
- All requests must include the Content-Type header set to application/json.
- Metric names must be 255 or fewer characters and may only consist of 'A-Za-z0-9.:-_'
- Use URL encoding for special characters in query parameters.
- Measurements can be retrieved with complex queries through tags_search.
- Pagination not available, use list_metrics() for all metrics
- Authorization requires a username and token.
- Rate limiting is implemented with headers in responses.
- Metric names must be 255 or fewer characters and may only consist of A-Za-z0-9.:-_.
- Tag names must match the regular expression /\A[-.:_\w]{1,64}\z/.
- Pagination is not available; use list_metrics() for all metrics.
- Annotations can track events that impact monitored metrics.
- Each annotation event has an associated time and metadata description.
- The title of an annotation is a required parameter.
- Default value of the `orderby` pagination parameter is `name`.
- API Tokens are used for authenticating with the API.
- Some resources require job tracking due to long processing times.
- Services, Software, and Documentation are provided on an 'AS IS' basis.
- Librato will indemnify, defend, and hold You harmless from any third party claim.
- The Services, Software, and Documentation delivered to You under this Agreement
  are subject to export control laws and regulations.
- User may access, use, and display this Website on a single computer only and download
  and print copies of the Content only for non-commercial, informational, personal
  use.
- Metric names must be 255 or fewer characters, and may only consist of 'A-Za-z0-9.:-_'
- Tag names must match the regular expression '/\A[-.:_\w]{1,64}\z/'
- Uses API key for authentication
- Batch-delete a set of metrics. Both the metrics and all of their measurements will
  be removed.
- Pagination not available, use list_metrics() for all metrics.
- Uses Basic Auth with username and token.
- Every response will include headers that define the current API limits related to
  the request made.
- Create an annotation event requires title and can include source, description, start_time,
  and links.
- Retrieving annotations can include time interval parameters.
- Pagination is supported with orderby parameter.
errors:
- '400: Bad Request - The request could not be parsed or the parameters were not valid.
  The request should be modified before resubmitting.'
- '401: Unauthorized - Challenges the user to provide authentication credentials.'
- '403: Forbidden - The request was not encrypted via SSL or the account is rate limited.'
- '404: Not Found - The request refers to a resource that either does not exist or
  the user does not have permissions to access.'
- '415: Incorrect Content-Type - Content type was not application/json.'
- '429: Rate Limited - Request was rate limited.'
- '503: Service Unavailable - The API is in maintenance mode.'
- '400: Bad Request: The request could not be parsed or the parameters were not valid.
  The request should be modified before resubmitting.'
- '401: Unauthorized: Challenges the user to provide authentication credentials.'
- '403: Forbidden: The request was not encrypted via SSL or the account is rate limited.'
- '404: Not Found: The request refers to a resource that either does not exist or
  the user does not have permissions to access.'
- '415: Incorrect Content-Type: Content type was not application/json.'
- '429: Rate Limited: Request was rate limited.'
- '503: Service Unavailable: The API should be available again shortly so it is advised
  that you resubmit your request later.'
- '400: Bad Request - Invalid metric name or tag format.'
- '429: Too Many Requests - Rate limit exceeded.'
- '401 Unauthorized: Recheck credentials.'
- '404 Not Found: Verify the measurement or metric name.'
- 204 No Content
- 202 Accepted
- '401 Unauthorized: Invalid username or token.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Challenges the user to provide authentication credentials.'
- '403 Forbidden: The request was not encrypted via SSL or the account is rate limited.'
- '404 Not Found: The request refers to a resource that either does not exist or the
  user does not have permissions to access.'
- '400: Bad Request - Check for invalid parameters.'
- '401: Unauthorized - Verify credentials.'
- '404: Not Found - Resource not found.'
- '204 No Content: Successful operation.'
- '202 Accepted: Operation is in progress.'
- '200 OK: Successful request'
- '201 Created: Resource created successfully'
- '204 No Content: Request successful but no content to return'
- '204 No Content: Successful deletion of the chart.'
- '200 OK: Successful retrieval of charts.'
- '204 No Content: Successful request with no content returned'
- '201 Created: Successful creation of an annotation'
- '200 OK: Successful retrieval of an annotation'
- '401 Unauthorized: Attempting to authenticate using a token that has active set
  to false will result in a 401 response.'
- '401 Unauthorized: Check your API credentials'
- '404 Not Found: Verify the resource ID'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '415: Incorrect Content-Type'
- '422: Entity Already Exists'
- '429: Rate Limited'
- '503: Service Unavailable'
- '400: Bad request - Check the metric name or tag format'
- '401: Unauthorized - Check the authentication credentials'
- '401 Unauthorized: Check API key or permissions'
- '400: Bad request — check your parameters and request format.'
- '401: Unauthorized — check your authentication credentials.'
- '404: Not found — the requested resource does not exist.'
- '200: OK'
- '201: Created'
- '204: No Content'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: The specified annotation stream or event does not exist.'
- '401 Unauthorized: Check username and token.'
- '404 Not Found: Verify the endpoint.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://metrics-api.librato.com
  auth:
    type: basic
    location: header
source_metadata: null
