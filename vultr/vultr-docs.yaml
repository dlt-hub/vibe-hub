resources:
- name: students
  endpoint:
    path: /students
    method: GET
    data_selector: students
    params: {}
- name: student
  endpoint:
    path: /students/{student_id}
    method: GET
    data_selector: student
    params: {}
- name: student_add
  endpoint:
    path: /students
    method: POST
    data_selector: student
    params: {}
- name: student_update
  endpoint:
    path: /students/{student_id}
    method: PUT
    data_selector: student
    params: {}
- name: student_delete
  endpoint:
    path: /students/{student_id}
    method: DELETE
    data_selector: students
    params: {}
- name: n8n
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: docker_installation
  endpoint:
    path: /install/docker
    method: POST
    data_selector: results
- name: docker_installation
  endpoint:
    path: /install/docker
    method: POST
    data_selector: installation_records
    params: {}
- name: container_registry
  endpoint:
    path: /registry
    method: GET
    data_selector: registry_records
    params: {}
- name: Docker Installation
  endpoint:
    path: /install/docker
    method: GET
    data_selector: steps
    params: {}
- name: Docker Installation
  endpoint:
    path: /install/docker
    method: GET
    data_selector: instructions
- name: Container Registry
  endpoint:
    path: /registry
    method: GET
    data_selector: registries
- name: cloud_compute
  endpoint:
    path: /v1/cloud-compute
    method: GET
    data_selector: instances
    params: {}
- name: object_storage
  endpoint:
    path: /v1/object-storage
    method: GET
    data_selector: buckets
    params: {}
- name: postgresql
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: amusement_park
  endpoint:
    path: /databases/amusement_park
    method: POST
    data_selector: records
    params: {}
- name: visitors
  endpoint:
    path: /tables/visitors
    method: POST
    data_selector: records
    params: {}
- name: Linux Guides
  endpoint:
    path: /category/linux-guides
    method: GET
    data_selector: articles
    params: {}
- name: teachers
  endpoint:
    path: /CREATE TABLE teachers
    method: CREATE
    data_selector: records
    params: {}
- name: school
  endpoint:
    path: /CREATE DATABASE school
    method: CREATE
    data_selector: records
    params: {}
- name: postgresql_installation
  endpoint:
    path: /instructions/debian
    method: GET
    data_selector: steps
    params: {}
- name: postgresql
  endpoint:
    path: /postgresql
    method: GET
    data_selector: records
    params: {}
- name: postgresql
  endpoint:
    path: /apt/postgresql.org
    method: GET
    data_selector: packages
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: features
  endpoint:
    path: /features
    method: GET
    data_selector: features
- name: instance
  endpoint:
    path: /instances
    method: GET
    data_selector: instances
    params: {}
- name: volume
  endpoint:
    path: /volumes
    method: GET
    data_selector: volumes
    params: {}
- name: run_container
  endpoint:
    path: /docker/container/run
    method: POST
    data_selector: commands
    params:
      option: --rm
- name: run_container
  endpoint:
    path: /docker/container/run
    method: POST
    data_selector: commands
    params:
      options: --rm
- name: docker_commit
  endpoint:
    path: /docker/container/commit
    method: POST
    data_selector: committed_images
    params: {}
- name: docker_container_commit
  endpoint:
    path: /docker/container/commit
    method: POST
    data_selector: results
    params: {}
- name: list_running_containers
  endpoint:
    path: /docker/container/ls
    method: GET
    data_selector: containers
    params: {}
- name: running_containers
  endpoint:
    path: /docker/container/ls
    method: GET
    data_selector: containers
    params: {}
- name: Pritunl
  endpoint:
    path: /pritunl
    method: GET
    data_selector: data
    params: {}
- name: Pritunl Installation
  endpoint:
    path: /install
    method: GET
    data_selector: records
- name: openvpn_server
  endpoint:
    path: /etc/openvpn/server.conf
    method: GET
    data_selector: configuration
    params: {}
- name: OpenVPN Server Configuration
  endpoint:
    path: /etc/openvpn/server.conf
    method: GET
    data_selector: configuration
    params: {}
- name: vpnclient1
  endpoint:
    path: /home/linuxuser/vpnclient1.ovpn
    method: GET
    data_selector: configuration
    params: {}
- name: wireguard_installation
  endpoint:
    path: /install-wireguard
    method: GET
    data_selector: records
    params: {}
- name: client_configuration
  endpoint:
    path: /client/configuration
    method: GET
    data_selector: client_config
- name: wireguard_configuration
  endpoint:
    path: /etc/wireguard/wg0.conf
    method: GET
    data_selector: configuration
- name: wireguard_client_configuration
  endpoint:
    path: /etc/wireguard/client1.conf
    method: GET
    data_selector: client_configuration
- name: client_configuration
  endpoint:
    path: /client/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: cloud_compute
  endpoint:
    path: /v1/cloud-compute
    method: GET
    data_selector: instances
    params: {}
- name: object_storage
  endpoint:
    path: /v1/object-storage
    method: GET
    data_selector: objects
    params: {}
- name: nextcloud
  endpoint:
    path: /server/releases/latest.zip
    method: GET
    data_selector: records
    params: {}
- name: nextcloud
  endpoint:
    path: /server/releases/latest.zip
    method: GET
    data_selector: ''
    params: {}
- name: nextcloud
  endpoint:
    path: /server/releases/latest.zip
    method: GET
    data_selector: ''
- name: nextcloud_files
  endpoint:
    path: /server/releases/latest.zip
    method: GET
    data_selector: files
    params: {}
- name: nextcloud
  endpoint:
    path: /var/www/html
    method: GET
    data_selector: records
    params: {}
- name: nextcloud
  endpoint:
    path: /var/www/html/config/config.php
    method: GET
    data_selector: config
    params: {}
- name: limited_user_login
  endpoint:
    path: /v1/instances
    method: POST
    data_selector: data
    params:
      user_scheme: limited
- name: limited_user_login
  endpoint:
    path: /api/instances
    method: POST
    data_selector: instance
    params:
      user_scheme: limited
- name: nextcloud_configuration
  endpoint:
    path: /var/snap/nextcloud/current/nextcloud/config/config.php
    method: GET
    data_selector: trusted_domains
- name: nextcloud
  endpoint:
    path: /nextcloud
    method: GET
    data_selector: records
    params: {}
- name: instances
  endpoint:
    path: /v2/instances
    method: GET
    data_selector: instances
- name: regions
  endpoint:
    path: /v2/regions
    method: GET
    data_selector: regions
- name: nginx_installation
  endpoint:
    path: /how-to/install-nginx
    method: GET
    data_selector: content
    params: {}
- name: mysql_installation
  endpoint:
    path: /how-to/install-mysql
    method: GET
    data_selector: content
    params: {}
- name: php_installation
  endpoint:
    path: /how-to/install-php
    method: GET
    data_selector: content
    params: {}
- name: nextcloud
  endpoint:
    path: /snap/nextcloud/current/htdocs/
    method: GET
    data_selector: config
    params: {}
- name: iso
  endpoint:
    path: /iso
    method: GET
    data_selector: isos
    params: {}
- name: instances
  endpoint:
    path: /instances
    method: POST
    data_selector: id
    params: {}
- name: nginx_installation
  endpoint:
    path: /install/nginx
    method: GET
    data_selector: steps
- name: mariadb_installation
  endpoint:
    path: /install/mariadb
    method: GET
    data_selector: steps
- name: php_installation
  endpoint:
    path: /install/php
    method: GET
    data_selector: steps
- name: letsencrypt_installation
  endpoint:
    path: /install/letsencrypt
    method: GET
    data_selector: steps
- name: nvidia_driver_management
  endpoint:
    path: /v1/nvidia/driver
    method: GET
    data_selector: drivers
    params: {}
- name: iso
  endpoint:
    path: /iso
    method: GET
    data_selector: isos
- name: instances
  endpoint:
    path: /instances
    method: POST
    data_selector: id
- name: setup_keys
  endpoint:
    path: /setup_keys
    method: POST
    data_selector: keys
    params: {}
- name: peers
  endpoint:
    path: /peers
    method: GET
    data_selector: peers
    params: {}
- name: Vultr Account
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: account
- name: upload_iso
  endpoint:
    path: /upload_iso
    method: POST
    data_selector: data
    params: {}
- name: AWS to Vultr Migration
  endpoint:
    path: /migrate/aws-to-vultr
    method: GET
    data_selector: articles
    params: {}
- name: Linode to Vultr Migration
  endpoint:
    path: /migrate/linode-to-vultr
    method: GET
    data_selector: articles
    params: {}
- name: Google Cloud to Vultr Migration
  endpoint:
    path: /migrate/google-cloud-to-vultr
    method: GET
    data_selector: articles
    params: {}
- name: Linode Block Storage to Vultr Block Storage
  endpoint:
    path: /migrate/linode-block-storage-to-vultr
    method: GET
    data_selector: articles
    params: {}
- name: DigitalOcean to Vultr Migration
  endpoint:
    path: /migrate/digitalocean-to-vultr
    method: GET
    data_selector: articles
    params: {}
- name: NetBird Management Interface
  endpoint:
    path: /
    method: GET
    data_selector: dashboard
    params: {}
- name: Vultr Account
  endpoint:
    path: /accounts
    method: POST
    data_selector: account
    params: {}
- name: current_user_api_key_management
  endpoint:
    path: /platform/other/api/current-user
    method: GET
- name: other_users_api_key_management
  endpoint:
    path: /platform/other/api/other-user
    method: GET
- name: server_status
  endpoint:
    path: /v1/server/status
    method: GET
    data_selector: status
    params: {}
- name: Block Storage
  endpoint:
    path: /products/cloud-storage/block-storage
    method: GET
- name: Object Storage
  endpoint:
    path: /products/cloud-storage/object-storage
    method: GET
- name: File System
  endpoint:
    path: /products/cloud-storage/file-system
    method: GET
- name: Storage Gateway
  endpoint:
    path: /products/cloud-storage/storage-gateway
    method: GET
- name: Provisioning
  endpoint:
    path: /products/cloud-storage/block-storage/provisioning
    method: GET
    data_selector: records
- name: Management
  endpoint:
    path: /products/cloud-storage/block-storage/management
    method: GET
    data_selector: records
- name: Monitor Block Storage
  endpoint:
    path: /products/cloud-storage/block-storage/management/monitor-block-storage
    method: GET
    data_selector: records
- name: Attach Instances
  endpoint:
    path: /products/cloud-storage/block-storage/management/attach-instances
    method: GET
    data_selector: records
- name: Resize Block Storage
  endpoint:
    path: /products/cloud-storage/block-storage/management/resize-block-storage
    method: GET
    data_selector: records
- name: Delete Block Storage
  endpoint:
    path: /products/cloud-storage/block-storage/management/delete-block-storage
    method: GET
    data_selector: records
- name: Shrink Block Storage
  endpoint:
    path: /products/cloud-storage/block-storage/management/shrink-block-storage
    method: GET
    data_selector: records
- name: Mount
  endpoint:
    path: /products/cloud-storage/block-storage/mount
    method: GET
    data_selector: records
- name: Block Storage
  endpoint:
    path: /products/cloud-storage/block-storage
    method: GET
- name: Object Storage
  endpoint:
    path: /products/cloud-storage/object-storage
    method: GET
- name: File System
  endpoint:
    path: /products/cloud-storage/file-system
    method: GET
- name: Storage Gateway
  endpoint:
    path: /products/cloud-storage/storage-gateway
    method: GET
- name: Attach Instances
  endpoint:
    path: /products/cloud-storage/vultr-file-system/attach-instances
    method: GET
- name: Delete
  endpoint:
    path: /products/cloud-storage/vultr-file-system/delete-file-system
    method: GET
- name: Resize
  endpoint:
    path: /products/cloud-storage/vultr-file-system/resize-file-system
    method: GET
- name: Mount
  endpoint:
    path: /products/cloud-storage/vultr-file-system/mount
    method: GET
- name: Linux
  endpoint:
    path: /products/cloud-storage/vultr-file-system/linux
    method: GET
- name: Windows
  endpoint:
    path: /products/cloud-storage/vultr-file-system/windows
    method: GET
- name: FAQ
  endpoint:
    path: /products/cloud-storage/vultr-file-system/faq
    method: GET
- name: BGP
  endpoint:
    path: /products/network/bgp
    method: GET
    data_selector: records
    params: {}
- name: DNS
  endpoint:
    path: /products/network/dns
    method: GET
    data_selector: records
    params: {}
- name: Firewall
  endpoint:
    path: /products/network/firewall
    method: GET
    data_selector: records
    params: {}
- name: Reserved IPs
  endpoint:
    path: /products/network/reserved-ips
    method: GET
    data_selector: records
    params: {}
- name: VPC 2.0
  endpoint:
    path: /products/network/vpc-2
    method: GET
    data_selector: records
    params: {}
- name: VPC
  endpoint:
    path: /products/network/vpc
    method: GET
    data_selector: records
    params: {}
- name: asn_information
  endpoint:
    path: /products/network/bgp/asn-information
    method: GET
    data_selector: records
- name: access_credentials
  endpoint:
    path: /products/network/bgp/access-credentials
    method: GET
    data_selector: records
- name: add_prefixes
  endpoint:
    path: /products/network/bgp/add-prefixes
    method: GET
    data_selector: records
- name: request_access
  endpoint:
    path: /products/network/bgp/request-access
    method: GET
    data_selector: records
- name: rpki
  endpoint:
    path: /products/network/bgp/rpki
    method: GET
    data_selector: records
- name: Pull Zone
  endpoint:
    path: /products/cdn/pull-zone
    method: GET
    data_selector: records
- name: Push Zone
  endpoint:
    path: /products/cdn/push-zone
    method: GET
    data_selector: records
- name: Provisioning
  endpoint:
    path: /products/network/firewall/provisioning
    method: GET
- name: Management
  endpoint:
    path: /products/network/firewall/management
    method: GET
- name: Delete
  endpoint:
    path: /products/network/firewall/management/delete
    method: GET
- name: Groups
  endpoint:
    path: /products/network/firewall/management/groups
    method: GET
- name: Link
  endpoint:
    path: /products/network/firewall/management/link
    method: GET
- name: Rules
  endpoint:
    path: /products/network/firewall/management/rules
    method: GET
- name: Provisioning
  endpoint:
    path: /products/network/vpc/provisioning
    method: GET
    data_selector: records
- name: Management
  endpoint:
    path: /products/network/vpc/management
    method: GET
    data_selector: records
- name: Delete
  endpoint:
    path: /products/network/vpc/management/delete
    method: GET
    data_selector: records
- name: Monitor
  endpoint:
    path: /products/network/vpc/management/monitor
    method: GET
    data_selector: records
- name: FAQ
  endpoint:
    path: /products/network/vpc/faq
    method: GET
    data_selector: records
- name: BGP
  endpoint:
    path: /products/network/bgp
    method: GET
- name: DNS
  endpoint:
    path: /products/network/dns
    method: GET
- name: Firewall
  endpoint:
    path: /products/network/firewall
    method: GET
- name: Reserved IPs
  endpoint:
    path: /products/network/reserved-ips
    method: GET
- name: VPC 2.0
  endpoint:
    path: /products/network/vpc-2
    method: GET
- name: VPC
  endpoint:
    path: /products/network/vpc
    method: GET
- name: asn_information
  endpoint:
    path: /products/network/bgp/asn-information
    method: GET
- name: access_credentials
  endpoint:
    path: /products/network/bgp/access-credentials
    method: GET
- name: add_prefixes
  endpoint:
    path: /products/network/bgp/add-prefixes
    method: GET
- name: request_access
  endpoint:
    path: /products/network/bgp/request-access
    method: GET
- name: rpki
  endpoint:
    path: /products/network/bgp/rpki
    method: GET
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
- name: available_plans
  endpoint:
    path: /regions/{region-id}/availability
    method: GET
    data_selector: plans
- name: kubernetes_versions
  endpoint:
    path: /kubernetes/versions
    method: GET
    data_selector: versions
- name: create_kubernetes_cluster
  endpoint:
    path: /kubernetes/clusters
    method: POST
    data_selector: cluster
- name: list_kubernetes_clusters
  endpoint:
    path: /kubernetes/clusters
    method: GET
    data_selector: clusters
- name: provisioning
  endpoint:
    path: /products/network/firewall/provisioning
    method: GET
- name: management
  endpoint:
    path: /products/network/firewall/management
    method: GET
- name: delete
  endpoint:
    path: /products/network/firewall/management/delete
    method: GET
- name: groups
  endpoint:
    path: /products/network/firewall/management/groups
    method: GET
- name: link
  endpoint:
    path: /products/network/firewall/management/link
    method: GET
- name: rules
  endpoint:
    path: /products/network/firewall/management/rules
    method: GET
- name: Snapshots
  endpoint:
    path: /products/orchestration/snapshots
    method: GET
    data_selector: records
    params: {}
- name: vke_cluster
  endpoint:
    path: /vke/clusters
    method: GET
    data_selector: clusters
- name: node_pool
  endpoint:
    path: /vke/node_pools
    method: GET
    data_selector: nodePools
- name: persistent_storage
  endpoint:
    path: /vke/persistent_storage
    method: GET
    data_selector: persistentVolumes
- name: list_registry_regions
  endpoint:
    path: /registry/region/list
    method: GET
- name: list_registry_plans
  endpoint:
    path: /registry/plan/list
    method: GET
- name: create_container_registry
  endpoint:
    path: /registry
    method: POST
- name: list_container_registries
  endpoint:
    path: /registries
    method: GET
- name: regions
  endpoint:
    path: /v2/regions
    method: GET
- name: available_plans
  endpoint:
    path: /v2/regions/{region-id}/availability
    method: GET
- name: kubernetes_versions
  endpoint:
    path: /v2/kubernetes/versions
    method: GET
- name: create_kubernetes_cluster
  endpoint:
    path: /v2/kubernetes/clusters
    method: POST
- name: list_kubernetes_clusters
  endpoint:
    path: /v2/kubernetes/clusters
    method: GET
- name: artifact
  endpoint:
    path: /products/container-registry/repository/artifact
    method: GET
- name: delete_artifact
  endpoint:
    path: /products/container-registry/repository/artifact/delete
    method: DELETE
- name: retrieve_artifact
  endpoint:
    path: /products/container-registry/repository/artifact/retrieve
    method: GET
- name: delete_repository
  endpoint:
    path: /products/container-registry/repository/delete
    method: DELETE
- name: retrieve_repository
  endpoint:
    path: /products/container-registry/repository/retrieve
    method: GET
- name: update_repository
  endpoint:
    path: /products/container-registry/repository/update
    method: POST
- name: delete
  endpoint:
    path: /products/container-registry/robot/delete
    method: DELETE
- name: retrieve
  endpoint:
    path: /products/container-registry/robot/retrieve
    method: GET
- name: update
  endpoint:
    path: /products/container-registry/robot/update
    method: UPDATE
- name: Docker Hub Proxy
  endpoint:
    path: /products/container-registry/dockerhub-proxy
    method: GET
    data_selector: records
    params: {}
- name: list_registry_regions
  endpoint:
    path: /registry/region/list
    method: GET
- name: list_registry_plans
  endpoint:
    path: /registry/plan/list
    method: GET
- name: create_container_registry
  endpoint:
    path: /registry
    method: POST
- name: list_container_registries
  endpoint:
    path: /registries
    method: GET
- name: regions
  endpoint:
    path: /regions
    method: GET
- name: load_balancers
  endpoint:
    path: /load-balancers
    method: GET
- name: create_load_balancer
  endpoint:
    path: /load-balancers
    method: POST
- name: artifact
  endpoint:
    path: /products/container-registry/repository/artifact
    method: GET
- name: delete_artifact
  endpoint:
    path: /products/container-registry/repository/artifact/delete
    method: DELETE
- name: retrieve_artifact
  endpoint:
    path: /products/container-registry/repository/artifact/retrieve
    method: GET
- name: delete_repository
  endpoint:
    path: /products/container-registry/repository/delete
    method: DELETE
- name: retrieve_repository
  endpoint:
    path: /products/container-registry/repository/retrieve
    method: GET
- name: update_repository
  endpoint:
    path: /products/container-registry/repository/update
    method: PUT
- name: regions
  endpoint:
    path: /regions
    method: GET
- name: load_balancers
  endpoint:
    path: /load-balancers
    method: GET
- name: update_load_balancer
  endpoint:
    path: /load-balancers/{load-balancer-id}
    method: PATCH
- name: Delete
  endpoint:
    path: /products/container-registry/robot/delete
    method: DELETE
- name: Retrieve
  endpoint:
    path: /products/container-registry/robot/retrieve
    method: GET
- name: Update
  endpoint:
    path: /products/container-registry/robot/update
    method: UPDATE
- name: Docker Hub Proxy
  endpoint:
    path: /docker.io/{account}/{repository}
    method: GET
- name: monitor
  endpoint:
    path: /products/load-balancer/management/monitor
    method: GET
- name: delete
  endpoint:
    path: /products/load-balancer/management/delete
    method: GET
- name: resize
  endpoint:
    path: /products/load-balancer/management/resize
    method: GET
- name: update
  endpoint:
    path: /products/load-balancer/management/update
    method: GET
- name: instances
  endpoint:
    path: /products/load-balancer/management/instances
    method: GET
- name: attach
  endpoint:
    path: /products/load-balancer/management/instances/attach
    method: GET
- name: detach
  endpoint:
    path: /products/load-balancer/management/instances/detach
    method: GET
- name: regions
  endpoint:
    path: /regions
    method: GET
- name: create_load_balancer
  endpoint:
    path: /load-balancers
    method: POST
- name: list_load_balancers
  endpoint:
    path: /load-balancers
    method: GET
- name: Load Balancer
  endpoint:
    path: /api/load-balancer
    method: GET
    data_selector: load_balancers
    params: {}
- name: Forwarding Rules
  endpoint:
    path: /api/load-balancer/forwarding-rules
    method: GET
    data_selector: forwarding_rules
    params: {}
- name: Health Checks
  endpoint:
    path: /api/load-balancer/health-checks
    method: GET
    data_selector: health_checks
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
- name: load_balancers
  endpoint:
    path: /load-balancers
    method: GET
    data_selector: load_balancers
- name: update_load_balancer
  endpoint:
    path: /load-balancers/{load-balancer-id}
    method: PATCH
    data_selector: load_balancer
- name: monitor
  endpoint:
    path: /products/load-balancer/management/monitor
    method: GET
- name: delete
  endpoint:
    path: /products/load-balancer/management/delete
    method: GET
- name: resize
  endpoint:
    path: /products/load-balancer/management/resize
    method: GET
- name: update
  endpoint:
    path: /products/load-balancer/management/update
    method: GET
- name: instances
  endpoint:
    path: /products/load-balancer/management/instances
    method: GET
- name: attach
  endpoint:
    path: /products/load-balancer/management/instances/attach
    method: GET
- name: detach
  endpoint:
    path: /products/load-balancer/management/instances/detach
    method: GET
- name: Make Account Payments
  endpoint:
    path: /platform/billing/make-account-payments
    method: GET
- name: Manage Account Limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
- name: View Bandwidth Usage
  endpoint:
    path: /platform/billing/view-bandwidth-usage
    method: GET
- name: View Payment History
  endpoint:
    path: /platform/billing/view-payment-history
    method: GET
- name: FAQ
  endpoint:
    path: /platform/billing/faq
    method: GET
- name: make_account_payments
  endpoint:
    path: /platform/billing/make-account-payments
    method: GET
    data_selector: records
    params: {}
- name: manage_account_limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
    data_selector: records
    params: {}
- name: view_bandwidth_usage
  endpoint:
    path: /platform/billing/view-bandwidth-usage
    method: GET
    data_selector: records
    params: {}
- name: view_payment_history
  endpoint:
    path: /platform/billing/view-payment-history
    method: GET
    data_selector: records
    params: {}
- name: faq
  endpoint:
    path: /platform/billing/faq
    method: GET
    data_selector: records
    params: {}
- name: Account Limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
    data_selector: data
    params: {}
- name: Account Payments
  endpoint:
    path: /platform/billing/make-account-payments
    method: GET
    data_selector: data
    params: {}
- name: Bandwidth Usage
  endpoint:
    path: /platform/billing/view-bandwidth-usage
    method: GET
    data_selector: data
    params: {}
- name: Payment History
  endpoint:
    path: /platform/billing/view-payment-history
    method: GET
    data_selector: data
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
- name: instances
  endpoint:
    path: /instances
    method: GET
    data_selector: instances
- name: account_bandwidth
  endpoint:
    path: /account/bandwidth
    method: GET
    data_selector: data
- name: account_info
  endpoint:
    path: /account
    method: GET
- name: billing_history
  endpoint:
    path: /billing/history
    method: GET
- name: get_invoice
  endpoint:
    path: /billing/invoices/{invoice-id}
    method: GET
- name: get_invoice_items
  endpoint:
    path: /billing/invoices/{invoice-id}/items
    method: GET
- name: Make Account Payments
  endpoint:
    path: /platform/billing/make-account-payments
    method: GET
    data_selector: records
    params: {}
- name: Manage Account Limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
    data_selector: records
    params: {}
- name: View Bandwidth Usage
  endpoint:
    path: /platform/billing/view-bandwidth-usage
    method: GET
    data_selector: records
    params: {}
- name: View Payment History
  endpoint:
    path: /platform/billing/view-payment-history
    method: GET
    data_selector: records
    params: {}
- name: FAQ
  endpoint:
    path: /platform/billing/faq
    method: GET
    data_selector: records
    params: {}
- name: Make Account Payments
  endpoint:
    path: /platform/billing/make-account-payments
    method: GET
- name: Manage Account Limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
- name: View Bandwidth Usage
  endpoint:
    path: /platform/billing/view-bandwidth-usage
    method: GET
- name: View Payment History
  endpoint:
    path: /platform/billing/view-payment-history
    method: GET
- name: FAQ
  endpoint:
    path: /platform/billing/faq
    method: GET
- name: users
  endpoint:
    path: /platform/other/users
    method: GET
    data_selector: records
- name: ssh_keys
  endpoint:
    path: /platform/other/ssh-keys
    method: GET
    data_selector: records
- name: api
  endpoint:
    path: /platform/other/api
    method: GET
    data_selector: records
- name: sub_accounts
  endpoint:
    path: /platform/other/sub-accounts
    method: GET
    data_selector: records
- name: notifications
  endpoint:
    path: /platform/other/manage-notifications
    method: GET
    data_selector: records
- name: account_logs
  endpoint:
    path: /platform/other/account-logs
    method: GET
    data_selector: records
- name: Make Account Payments
  endpoint:
    path: /platform/billing/make-account-payments
    method: GET
    data_selector: content
    params: {}
- name: Manage Account Limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
    data_selector: content
    params: {}
- name: View Bandwidth Usage
  endpoint:
    path: /platform/billing/view-bandwidth-usage
    method: GET
    data_selector: content
    params: {}
- name: View Payment History
  endpoint:
    path: /platform/billing/view-payment-history
    method: GET
    data_selector: content
    params: {}
- name: FAQ
  endpoint:
    path: /platform/billing/faq
    method: GET
    data_selector: content
    params: {}
- name: account_limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
    data_selector: limits
    params: {}
- name: VoIP Services
  endpoint:
    path: /platform/customer-advisory/voip
    method: GET
    data_selector: policy
- name: account_bandwidth
  endpoint:
    path: /account/bandwidth
    method: GET
    data_selector: data
    params: {}
- name: prefix_limits
  endpoint:
    path: /platform/customer-advisory/byoip/prefix_limits
    method: GET
    data_selector: data
    params: {}
- name: registration_requirements
  endpoint:
    path: /platform/customer-advisory/byoip/registration_requirements
    method: GET
    data_selector: data
    params: {}
- name: usage_restrictions
  endpoint:
    path: /platform/customer-advisory/byoip/usage_restrictions
    method: GET
    data_selector: data
    params: {}
- name: compliance_enforcement
  endpoint:
    path: /platform/customer-advisory/byoip/compliance_enforcement
    method: GET
    data_selector: data
    params: {}
- name: account_info
  endpoint:
    path: /account
    method: GET
- name: billing_history
  endpoint:
    path: /billing/history
    method: GET
- name: invoice
  endpoint:
    path: /billing/invoices/{invoice-id}
    method: GET
- name: invoice_items
  endpoint:
    path: /billing/invoices/{invoice-id}/items
    method: GET
- name: vendor_account
  endpoint:
    path: /create/vendor_account
    method: POST
    data_selector: account_info
    params: {}
- name: application_profile
  endpoint:
    path: /create/application_profile
    method: POST
    data_selector: app_info
    params: {}
- name: Make Account Payments
  endpoint:
    path: /platform/billing/make-account-payments
    method: GET
- name: Manage Account Limits
  endpoint:
    path: /platform/billing/manage-account-limits
    method: GET
- name: View Bandwidth Usage
  endpoint:
    path: /platform/billing/view-bandwidth-usage
    method: GET
- name: View Payment History
  endpoint:
    path: /platform/billing/view-payment-history
    method: GET
- name: FAQ
  endpoint:
    path: /platform/billing/faq
    method: GET
- name: users
  endpoint:
    path: /platform/other/users
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /platform/other/api
    method: GET
    data_selector: records
    params: {}
- name: ssh_keys
  endpoint:
    path: /platform/other/ssh-keys
    method: GET
    data_selector: records
    params: {}
- name: sub_accounts
  endpoint:
    path: /platform/other/sub-accounts
    method: GET
    data_selector: records
    params: {}
- name: notifications
  endpoint:
    path: /platform/other/manage-notifications
    method: GET
    data_selector: records
    params: {}
- name: account_logs
  endpoint:
    path: /platform/other/account-logs
    method: GET
    data_selector: records
    params: {}
- name: application
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: marketplace
  endpoint:
    path: /marketplace
    method: GET
    data_selector: marketplace
- name: users
  endpoint:
    path: /platform/other/users/manage-users
    method: GET
    data_selector: records
    params: {}
- name: api_access
  endpoint:
    path: /platform/other/users/manage-users/api-access
    method: GET
    data_selector: records
    params: {}
- name: cloud-init_rhel
  endpoint:
    path: /cloud_init_beta/cloud-init_rhel_latest.rpm
    method: GET
- name: cloud-init_debian
  endpoint:
    path: /cloud_init_beta/cloud-init_debian_latest.deb
    method: GET
- name: cloud-init_universal
  endpoint:
    path: /cloud_init_beta/cloud-init_universal_latest.deb
    method: GET
- name: notifications
  endpoint:
    path: /platform/other/manage-notifications
    method: GET
    data_selector: notifications
- name: account_logs
  endpoint:
    path: /v2/logs
    method: GET
    data_selector: logs
    params: {}
- name: update_user
  endpoint:
    path: /v2/users/{user-id}
    method: PATCH
    data_selector: null
    params: {}
- name: Readme
  endpoint:
    path: /marketplace/readme
    method: GET
    data_selector: content
- name: App Instructions
  endpoint:
    path: /marketplace/app-instructions
    method: GET
    data_selector: instructions
- name: Vultr Creator's Handbook
  endpoint:
    path: https://drive.google.com/file/d/18H0eZpVRyLhxjvBIy0mN6AmMIt6sMPIQ/view?usp=sharing
    method: GET
- name: Sign Up to Become a Vultr Creator
  endpoint:
    path: https://creators.vultr.community/signup
    method: GET
- name: Vultr Glossary
  endpoint:
    path: https://docs.vultr.com/platform/glossary
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: features
  endpoint:
    path: /features
    method: GET
    data_selector: features
- name: solutions
  endpoint:
    path: /solutions
    method: GET
    data_selector: solutions
- name: marketplace
  endpoint:
    path: /marketplace
    method: GET
    data_selector: marketplace
- name: users
  endpoint:
    path: /platform/other/users/manage-users
    method: GET
    data_selector: records
    params: {}
- name: api_access
  endpoint:
    path: /platform/other/users/manage-users/api-access
    method: GET
    data_selector: records
    params: {}
- name: sub_accounts
  endpoint:
    path: /platform/other/sub-accounts
    method: GET
    data_selector: records
    params: {}
- name: notifications
  endpoint:
    path: /platform/other/manage-notifications
    method: GET
    data_selector: notifications
    params: {}
- name: logs
  endpoint:
    path: /v2/logs
    method: GET
    data_selector: logs
    params: {}
- name: update_user
  endpoint:
    path: /v2/users/{user-id}
    method: PATCH
    data_selector: api_enabled
    params: {}
- name: compute_instance
  endpoint:
    path: /v1/compute/instances
    method: GET
    data_selector: instances
    params: {}
- name: instances
  endpoint:
    path: /v1/instances
    method: GET
    data_selector: instances
    params: {}
- name: regions
  endpoint:
    path: /v1/regions
    method: GET
    data_selector: regions
    params: {}
- name: Automate Image Management
  endpoint:
    path: /support/products/container-registry/can-i-automate-image-management-in-vultr-container-registry-using-the-api
    method: GET
    data_selector: records
- name: Manage Container Image Versions
  endpoint:
    path: /support/products/container-registry/can-i-manage-container-image-versions-in-vultr-container-registry
    method: GET
    data_selector: records
- name: Push Docker Images
  endpoint:
    path: /support/products/container-registry/can-i-push-docker-images-to-vultr-container-registry
    method: GET
    data_selector: records
- name: Roll Back to Previous Versions
  endpoint:
    path: /support/products/container-registry/can-i-roll-back-to-previous-versions-of-a-container-image-in-vultr-container-registry
    method: GET
    data_selector: records
- name: Share Container Images
  endpoint:
    path: /support/products/container-registry/can-i-share-my-container-images-with-others-using-vultr-container-registry
    method: GET
    data_selector: records
- name: Use with Kubernetes Engine
  endpoint:
    path: /support/products/container-registry/can-i-use-vultr-container-registry-with-vultr-kubernetes-engine-vke
    method: GET
    data_selector: records
- name: Air-Gapped Environments
  endpoint:
    path: /support/products/container-registry/can-vultr-container-registry-be-used-in-air-gapped-or-restricted-environments
    method: GET
    data_selector: records
- name: Manage Repositories
  endpoint:
    path: /support/products/container-registry/how-do-i-manage-repositories-in-a-vultr-container-registry
    method: GET
    data_selector: records
- name: CI/CD Workflows
  endpoint:
    path: /support/products/container-registry/how-does-vultr-container-registry-support-ci-cd-workflows-for-automated-deployments
    method: GET
    data_selector: records
- name: Access Control
  endpoint:
    path: /support/products/container-registry/how-does-vultr-enforce-access-control-and-image-security-at-scale
    method: GET
    data_selector: records
- name: Storage Limit Exceeded
  endpoint:
    path: /support/products/container-registry/what-happens-if-i-exceed-the-storage-limit-in-my-vultr-container-registry
    method: GET
    data_selector: records
- name: profile
  endpoint:
    path: /profile
    method: GET
    data_selector: data
    params: {}
- name: inference
  endpoint:
    path: /v1/inference
    method: POST
    data_selector: data
    params: {}
- name: Block Storage
  endpoint:
    path: /support/products/storage
    method: GET
    data_selector: records
    params: {}
- name: File System
  endpoint:
    path: /support/products/file-system
    method: GET
    data_selector: records
    params: {}
- name: servers
  endpoint:
    path: /v2/servers
    method: GET
    data_selector: servers
- name: images
  endpoint:
    path: /v2/images
    method: GET
    data_selector: images
- name: account
  endpoint:
    path: /reference/vultr-cli/account
    method: GET
    data_selector: account_info
- name: apps
  endpoint:
    path: /reference/vultr-cli/apps
    method: GET
    data_selector: applications
- name: backups
  endpoint:
    path: /reference/vultr-cli/backups
    method: GET
    data_selector: backups
- name: bare-metal
  endpoint:
    path: /reference/vultr-cli/bare-metal
    method: GET
    data_selector: bare_metal_servers
- name: billing
  endpoint:
    path: /reference/vultr-cli/billing
    method: GET
    data_selector: billing_info
- name: block-storage
  endpoint:
    path: /reference/vultr-cli/block-storage
    method: GET
    data_selector: block_storage
- name: cdn
  endpoint:
    path: /reference/vultr-cli/cdn
    method: GET
    data_selector: cdn_configurations
- name: container-registry
  endpoint:
    path: /reference/vultr-cli/container-registry
    method: GET
    data_selector: container_registries
- name: database
  endpoint:
    path: /reference/vultr-cli/database
    method: GET
    data_selector: managed_databases
- name: dns
  endpoint:
    path: /reference/vultr-cli/dns
    method: GET
    data_selector: dns_records
- name: firewall
  endpoint:
    path: /reference/vultr-cli/firewall
    method: GET
    data_selector: firewall_groups
- name: inference
  endpoint:
    path: /reference/vultr-cli/inference
    method: GET
    data_selector: inference_instances
- name: instance
  endpoint:
    path: /reference/vultr-cli/instance
    method: GET
    data_selector: instances
- name: iso
  endpoint:
    path: /reference/vultr-cli/iso
    method: GET
    data_selector: isos
- name: kubernetes
  endpoint:
    path: /reference/vultr-cli/kubernetes
    method: GET
    data_selector: kubernetes_clusters
- name: load-balancer
  endpoint:
    path: /reference/vultr-cli/load-balancer
    method: GET
    data_selector: load_balancers
- name: marketplace
  endpoint:
    path: /reference/vultr-cli/marketplace
    method: GET
    data_selector: marketplace_apps
- name: object-storage
  endpoint:
    path: /reference/vultr-cli/object-storage
    method: GET
    data_selector: object_storage_instances
- name: os
  endpoint:
    path: /reference/vultr-cli/os
    method: GET
    data_selector: operating_systems
- name: plans
  endpoint:
    path: /reference/vultr-cli/plans
    method: GET
    data_selector: service_plans
- name: regions
  endpoint:
    path: /reference/vultr-cli/regions
    method: GET
    data_selector: regions
- name: reserved-ip
  endpoint:
    path: /reference/vultr-cli/reserved-ip
    method: GET
    data_selector: reserved_ips
- name: script
  endpoint:
    path: /reference/vultr-cli/script
    method: GET
    data_selector: startup_scripts
- name: snapshot
  endpoint:
    path: /reference/vultr-cli/snapshot
    method: GET
    data_selector: snapshots
- name: ssh-key
  endpoint:
    path: /reference/vultr-cli/ssh-key
    method: GET
    data_selector: ssh_keys
- name: user
  endpoint:
    path: /reference/vultr-cli/user
    method: GET
    data_selector: users
- name: vpc
  endpoint:
    path: /reference/vultr-cli/vpc
    method: GET
    data_selector: vpcs
- name: vpc2
  endpoint:
    path: /reference/vultr-cli/vpc-2
    method: GET
    data_selector: vpc2_networks
- name: get_vpc
  endpoint:
    path: /reference/vultr-cli/vpc-2/get
    method: GET
- name: list_vpcs
  endpoint:
    path: /reference/vultr-cli/vpc-2/list
    method: GET
- name: update_vpc
  endpoint:
    path: /reference/vultr-cli/vpc-2/update
    method: POST
- name: delete_vpc
  endpoint:
    path: /reference/vultr-cli/vpc-2/delete
    method: DELETE
- name: list_nodes
  endpoint:
    path: /reference/vultr-cli/vpc-2/nodes
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: products
- name: features
  endpoint:
    path: /v1/features
    method: GET
    data_selector: features
- name: marketplace
  endpoint:
    path: /v1/marketplace
    method: GET
    data_selector: marketplace_items
- name: Profile
  endpoint:
    path: /support/platform/profile
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /reference/vultr-cli/account
    method: GET
    data_selector: account_info
- name: apps
  endpoint:
    path: /reference/vultr-cli/apps
    method: GET
    data_selector: apps_list
- name: backups
  endpoint:
    path: /reference/vultr-cli/backups
    method: GET
    data_selector: backups_list
- name: billing
  endpoint:
    path: /reference/vultr-cli/billing
    method: GET
    data_selector: billing_info
- name: block-storage
  endpoint:
    path: /reference/vultr-cli/block-storage
    method: GET
    data_selector: block_storage_info
- name: cdn
  endpoint:
    path: /reference/vultr-cli/cdn
    method: GET
    data_selector: cdn_info
- name: container-registry
  endpoint:
    path: /reference/vultr-cli/container-registry
    method: GET
    data_selector: container_registry_info
- name: database
  endpoint:
    path: /reference/vultr-cli/database
    method: GET
    data_selector: database_info
- name: dns
  endpoint:
    path: /reference/vultr-cli/dns
    method: GET
    data_selector: dns_info
- name: firewall
  endpoint:
    path: /reference/vultr-cli/firewall
    method: GET
    data_selector: firewall_info
- name: inference
  endpoint:
    path: /reference/vultr-cli/inference
    method: GET
    data_selector: inference_info
- name: instance
  endpoint:
    path: /reference/vultr-cli/instance
    method: GET
    data_selector: instance_info
- name: iso
  endpoint:
    path: /reference/vultr-cli/iso
    method: GET
    data_selector: iso_info
- name: kubernetes
  endpoint:
    path: /reference/vultr-cli/kubernetes
    method: GET
    data_selector: kubernetes_info
- name: load-balancer
  endpoint:
    path: /reference/vultr-cli/load-balancer
    method: GET
    data_selector: load_balancer_info
- name: marketplace
  endpoint:
    path: /reference/vultr-cli/marketplace
    method: GET
    data_selector: marketplace_info
- name: object-storage
  endpoint:
    path: /reference/vultr-cli/object-storage
    method: GET
    data_selector: object_storage_info
- name: os
  endpoint:
    path: /reference/vultr-cli/os
    method: GET
    data_selector: os_info
- name: plans
  endpoint:
    path: /reference/vultr-cli/plans
    method: GET
    data_selector: plans_info
- name: regions
  endpoint:
    path: /reference/vultr-cli/regions
    method: GET
    data_selector: regions_info
- name: reserved-ip
  endpoint:
    path: /reference/vultr-cli/reserved-ip
    method: GET
    data_selector: reserved_ip_info
- name: script
  endpoint:
    path: /reference/vultr-cli/script
    method: GET
    data_selector: script_info
- name: snapshot
  endpoint:
    path: /reference/vultr-cli/snapshot
    method: GET
    data_selector: snapshot_info
- name: ssh-key
  endpoint:
    path: /reference/vultr-cli/ssh-key
    method: GET
    data_selector: ssh_key_info
- name: user
  endpoint:
    path: /reference/vultr-cli/user
    method: GET
    data_selector: user_info
- name: vpc
  endpoint:
    path: /reference/vultr-cli/vpc
    method: GET
    data_selector: vpc_info
- name: vpc2
  endpoint:
    path: /reference/vultr-cli/vpc2
    method: GET
    data_selector: vpc2_info
- name: vultr_account
  endpoint:
    path: /reference/terraform/data-sources/account
    method: GET
    data_selector: records
- name: vultr_application
  endpoint:
    path: /reference/terraform/data-sources/application
    method: GET
    data_selector: records
- name: vultr_backup
  endpoint:
    path: /reference/terraform/data-sources/backup
    method: GET
    data_selector: records
- name: vultr_bare_metal_plan
  endpoint:
    path: /reference/terraform/data-sources/bare_metal_plan
    method: GET
    data_selector: records
- name: vultr_bare_metal_server
  endpoint:
    path: /reference/terraform/data-sources/bare_metal_server
    method: GET
    data_selector: records
- name: vultr_block_storage
  endpoint:
    path: /reference/terraform/data-sources/block_storage
    method: GET
    data_selector: records
- name: vultr_container_registry
  endpoint:
    path: /reference/terraform/data-sources/container_registry
    method: GET
    data_selector: records
- name: vultr_database
  endpoint:
    path: /reference/terraform/data-sources/database
    method: GET
    data_selector: records
- name: vultr_dns_domain
  endpoint:
    path: /reference/terraform/data-sources/dns_domain
    method: GET
    data_selector: records
- name: vultr_firewall_group
  endpoint:
    path: /reference/terraform/data-sources/firewall_group
    method: GET
    data_selector: records
- name: vultr_inference
  endpoint:
    path: /reference/terraform/data-sources/inference
    method: GET
    data_selector: records
- name: vultr_instance
  endpoint:
    path: /reference/terraform/data-sources/instance
    method: GET
    data_selector: records
- name: vultr_instance_ipv4
  endpoint:
    path: /reference/terraform/data-sources/instance_ipv4
    method: GET
    data_selector: records
- name: vultr_instances
  endpoint:
    path: /reference/terraform/data-sources/instances
    method: GET
    data_selector: records
- name: vultr_iso_private
  endpoint:
    path: /reference/terraform/data-sources/iso_private
    method: GET
    data_selector: records
- name: vultr_iso_public
  endpoint:
    path: /reference/terraform/data-sources/iso_public
    method: GET
    data_selector: records
- name: vultr_kubernetes
  endpoint:
    path: /reference/terraform/data-sources/kubernetes
    method: GET
    data_selector: records
- name: vultr_load_balancer
  endpoint:
    path: /reference/terraform/data-sources/load_balancer
    method: GET
    data_selector: records
- name: vultr_object_storage
  endpoint:
    path: /reference/terraform/data-sources/object_storage
    method: GET
    data_selector: records
- name: vultr_object_storage_cluster
  endpoint:
    path: /reference/terraform/data-sources/object_storage_cluster
    method: GET
    data_selector: records
- name: vultr_object_storage_tier
  endpoint:
    path: /reference/terraform/data-sources/object_storage_tier
    method: GET
    data_selector: records
- name: vultr_os
  endpoint:
    path: /reference/terraform/data-sources/os
    method: GET
    data_selector: records
- name: vultr_plan
  endpoint:
    path: /reference/terraform/data-sources/plan
    method: GET
    data_selector: records
- name: vultr_region
  endpoint:
    path: /reference/terraform/data-sources/region
    method: GET
    data_selector: records
- name: vultr_reserved_ip
  endpoint:
    path: /reference/terraform/data-sources/reserved_ip
    method: GET
    data_selector: records
- name: vultr_reverse_ipv4
  endpoint:
    path: /reference/terraform/data-sources/reverse_ipv4
    method: GET
    data_selector: records
- name: vultr_reverse_ipv6
  endpoint:
    path: /reference/terraform/data-sources/reverse_ipv6
    method: GET
    data_selector: records
- name: vultr_snapshot
  endpoint:
    path: /reference/terraform/data-sources/snapshot
    method: GET
    data_selector: records
- name: vultr_ssh_key
  endpoint:
    path: /reference/terraform/data-sources/ssh_key
    method: GET
    data_selector: records
- name: vultr_startup_script
  endpoint:
    path: /reference/terraform/data-sources/startup_script
    method: GET
    data_selector: records
- name: vultr_user
  endpoint:
    path: /reference/terraform/data-sources/user
    method: GET
    data_selector: records
- name: vultr_virtual_file_system_storage
  endpoint:
    path: /reference/terraform/data-sources/virtual_file_system_storage
    method: GET
    data_selector: records
- name: vultr_vpc
  endpoint:
    path: /reference/terraform/data-sources/vpc
    method: GET
    data_selector: records
- name: vultr_vpc2
  endpoint:
    path: /reference/terraform/data-sources/vpc2
    method: GET
    data_selector: records
- name: VPC 2.0 Network
  endpoint:
    path: /reference/vultr-cli/vpc-2/get
    method: GET
- name: List VPCs
  endpoint:
    path: /reference/vultr-cli/vpc-2/list
    method: GET
- name: Update VPC
  endpoint:
    path: /reference/vultr-cli/vpc-2/update
    method: POST
- name: Nodes
  endpoint:
    path: /reference/vultr-cli/vpc-2/nodes
    method: GET
- name: account
  endpoint:
    path: /reference/vultr-cli/account
    method: GET
    data_selector: ''
    params: {}
- name: vultr_instance
  endpoint:
    path: /vultr_instance
    method: POST
- name: applications
  endpoint:
    path: /v2/applications
    method: GET
    data_selector: applications
- name: get_backup
  endpoint:
    path: /reference/vultr-cli/backups/get
    method: GET
- name: list_backups
  endpoint:
    path: /reference/vultr-cli/backups/list
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: features
  endpoint:
    path: /features
    method: GET
- name: marketplace
  endpoint:
    path: /marketplace
    method: GET
- name: pricing
  endpoint:
    path: /pricing
    method: GET
- name: partners
  endpoint:
    path: /partners
    method: GET
- name: company
  endpoint:
    path: /company
    method: GET
- name: contact_sales
  endpoint:
    path: /contact/sales
    method: GET
- name: app
  endpoint:
    path: /reference/vultr-cli/bare-metal/app
    method: GET
- name: bandwidth
  endpoint:
    path: /reference/vultr-cli/bare-metal/bandwidth
    method: GET
- name: create
  endpoint:
    path: /reference/vultr-cli/bare-metal/create
    method: POST
- name: delete
  endpoint:
    path: /reference/vultr-cli/bare-metal/delete
    method: DELETE
- name: get
  endpoint:
    path: /reference/vultr-cli/bare-metal/get
    method: GET
- name: halt
  endpoint:
    path: /reference/vultr-cli/bare-metal/halt
    method: POST
- name: image
  endpoint:
    path: /reference/vultr-cli/bare-metal/image
    method: GET
- name: ipv4
  endpoint:
    path: /reference/vultr-cli/bare-metal/ipv4
    method: GET
- name: ipv6
  endpoint:
    path: /reference/vultr-cli/bare-metal/ipv6
    method: GET
- name: list
  endpoint:
    path: /reference/vultr-cli/bare-metal/list
    method: GET
- name: os
  endpoint:
    path: /reference/vultr-cli/bare-metal/os
    method: GET
- name: reboot
  endpoint:
    path: /reference/vultr-cli/bare-metal/reboot
    method: POST
- name: reinstall
  endpoint:
    path: /reference/vultr-cli/bare-metal/reinstall
    method: POST
- name: start
  endpoint:
    path: /reference/vultr-cli/bare-metal/start
    method: POST
- name: tags
  endpoint:
    path: /reference/vultr-cli/bare-metal/tags
    method: POST
- name: user-data
  endpoint:
    path: /reference/vultr-cli/bare-metal/user-data
    method: GET
- name: vnc
  endpoint:
    path: /reference/vultr-cli/bare-metal/vnc
    method: GET
- name: vpc2
  endpoint:
    path: /reference/vultr-cli/bare-metal/vpc2
    method: GET
- name: nginx_service
  endpoint:
    path: /nginx/service
    method: GET
    data_selector: status
    params: {}
- name: vultr_account
  endpoint:
    path: /reference/terraform/data-sources/account
    method: GET
- name: vultr_application
  endpoint:
    path: /reference/terraform/data-sources/application
    method: GET
- name: vultr_backup
  endpoint:
    path: /reference/terraform/data-sources/backup
    method: GET
- name: vultr_bare_metal_plan
  endpoint:
    path: /reference/terraform/data-sources/bare_metal_plan
    method: GET
- name: vultr_bare_metal_server
  endpoint:
    path: /reference/terraform/data-sources/bare_metal_server
    method: GET
- name: vultr_block_storage
  endpoint:
    path: /reference/terraform/data-sources/block_storage
    method: GET
- name: vultr_container_registry
  endpoint:
    path: /reference/terraform/data-sources/container_registry
    method: GET
- name: vultr_database
  endpoint:
    path: /reference/terraform/data-sources/database
    method: GET
- name: vultr_dns_domain
  endpoint:
    path: /reference/terraform/data-sources/dns_domain
    method: GET
- name: vultr_firewall_group
  endpoint:
    path: /reference/terraform/data-sources/firewall_group
    method: GET
- name: vultr_inference
  endpoint:
    path: /reference/terraform/data-sources/inference
    method: GET
- name: vultr_instance
  endpoint:
    path: /reference/terraform/data-sources/instance
    method: GET
- name: vultr_instance_ipv4
  endpoint:
    path: /reference/terraform/data-sources/instance_ipv4
    method: GET
- name: vultr_instances
  endpoint:
    path: /reference/terraform/data-sources/instances
    method: GET
- name: vultr_iso_private
  endpoint:
    path: /reference/terraform/data-sources/iso_private
    method: GET
- name: vultr_iso_public
  endpoint:
    path: /reference/terraform/data-sources/iso_public
    method: GET
- name: vultr_kubernetes
  endpoint:
    path: /reference/terraform/data-sources/kubernetes
    method: GET
- name: vultr_load_balancer
  endpoint:
    path: /reference/terraform/data-sources/load_balancer
    method: GET
- name: vultr_object_storage
  endpoint:
    path: /reference/terraform/data-sources/object_storage
    method: GET
- name: vultr_object_storage_cluster
  endpoint:
    path: /reference/terraform/data-sources/object_storage_cluster
    method: GET
- name: vultr_object_storage_tier
  endpoint:
    path: /reference/terraform/data-sources/object_storage_tier
    method: GET
- name: vultr_os
  endpoint:
    path: /reference/terraform/data-sources/os
    method: GET
- name: vultr_plan
  endpoint:
    path: /reference/terraform/data-sources/plan
    method: GET
- name: vultr_region
  endpoint:
    path: /reference/terraform/data-sources/region
    method: GET
- name: vultr_reserved_ip
  endpoint:
    path: /reference/terraform/data-sources/reserved_ip
    method: GET
- name: vultr_reverse_ipv4
  endpoint:
    path: /reference/terraform/data-sources/reverse_ipv4
    method: GET
- name: vultr_reverse_ipv6
  endpoint:
    path: /reference/terraform/data-sources/reverse_ipv6
    method: GET
- name: vultr_snapshot
  endpoint:
    path: /reference/terraform/data-sources/snapshot
    method: GET
- name: vultr_ssh_key
  endpoint:
    path: /reference/terraform/data-sources/ssh_key
    method: GET
- name: vultr_startup_script
  endpoint:
    path: /reference/terraform/data-sources/startup_script
    method: GET
- name: vultr_user
  endpoint:
    path: /reference/terraform/data-sources/user
    method: GET
- name: vultr_virtual_file_system_storage
  endpoint:
    path: /reference/terraform/data-sources/virtual_file_system_storage
    method: GET
- name: vultr_vpc
  endpoint:
    path: /reference/terraform/data-sources/vpc
    method: GET
- name: vultr_vpc2
  endpoint:
    path: /reference/terraform/data-sources/vpc2
    method: GET
- name: nginx_service
  endpoint:
    path: /nginx/service
    method: GET
    data_selector: status
    params: {}
- name: account
  endpoint:
    path: /vultr-cli/account
    method: GET
    data_selector: account information
    params: {}
- name: bandwidth
  endpoint:
    path: /vultr-cli/account/bandwidth
    method: GET
    data_selector: bandwidth usage
    params: {}
- name: info
  endpoint:
    path: /vultr-cli/account/info
    method: GET
    data_selector: account information
    params: {}
- name: nginx_service
  endpoint:
    path: /nginx
    method: GET
    data_selector: service_status
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
    params: {}
- name: get_backup
  endpoint:
    path: /reference/vultr-cli/backups/get
    method: GET
- name: list_backups
  endpoint:
    path: /reference/vultr-cli/backups/list
    method: GET
- name: nginx_service
  endpoint:
    path: /etc/nginx/nginx.conf
    method: GET
    data_selector: status
    params: {}
- name: bare_metal
  endpoint:
    path: /bare-metal
    method: GET
    data_selector: data
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
- name: FastAPI Application
  endpoint:
    path: /deploy-fastapi
    method: GET
    data_selector: records
    params: {}
- name: vultr_instance
  endpoint:
    path: /instances
    method: POST
    data_selector: instance
    params: {}
- name: vultr_block_storage
  endpoint:
    path: /block-storage
    method: POST
    data_selector: block_storage
    params: {}
- name: vultr_reserved_ip
  endpoint:
    path: /reserved-ips
    method: POST
    data_selector: reserved_ip
    params: {}
- name: nginx_service
  endpoint:
    path: /etc/nginx/sites-available/app.example.com.conf
    method: GET
    data_selector: configuration
    params: {}
- name: vultr_instance
  endpoint:
    path: /instances
    method: POST
    data_selector: instance
    params: {}
- name: vultr_block_storage
  endpoint:
    path: /block-storage
    method: POST
    data_selector: block_storage
    params: {}
- name: vultr_reserved_ip
  endpoint:
    path: /reserved-ips
    method: POST
    data_selector: reserved_ip
    params: {}
- name: Manage Records
  endpoint:
    path: /products/network/dns/management/manage-records
    method: GET
- name: Manage Zone Settings
  endpoint:
    path: /products/network/dns/management/manage-zone-settings
    method: GET
- name: Delete Domains
  endpoint:
    path: /products/network/dns/management/delete-domains
    method: GET
- name: Configure rDNS
  endpoint:
    path: /products/network/dns/management/configure-rdns
    method: GET
- name: Point to Vultr Name Servers
  endpoint:
    path: /products/network/dns/point-to-vultr-name-servers
    method: GET
- name: nginx_service
  endpoint:
    path: /systemctl/nginx
    method: GET
    data_selector: status
- name: nginx_installation
  endpoint:
    path: /apt/nginx
    method: POST
    data_selector: install
- name: proxmox_mail_gateway
  endpoint:
    path: /
    method: GET
- name: proxmox_backup_server
  endpoint:
    path: /how-to-install-proxmox-backup-server-on-debian-11
    method: GET
    data_selector: content
    params: {}
- name: Nginx Installation
  endpoint:
    path: /install/nginx
    method: GET
    data_selector: installation_steps
- name: Nginx Management
  endpoint:
    path: /manage/nginx
    method: GET
    data_selector: management_steps
- name: Nginx Virtual Host
  endpoint:
    path: /create-virtual-host
    method: GET
    data_selector: virtual_host_steps
- name: Secure Nginx
  endpoint:
    path: /secure/nginx
    method: GET
    data_selector: secure_steps
- name: Firewall Rules
  endpoint:
    path: /firewall/rules
    method: GET
    data_selector: firewall_steps
- name: nginx_installation
  endpoint:
    path: /docs/how-to-install-nginx-webserver-on-debian-12
    method: GET
    data_selector: content
    params: {}
- name: buckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: Buckets
- name: objects
  endpoint:
    path: /objects
    method: GET
    data_selector: Contents
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
- name: vultr_instance
  endpoint:
    path: /v1/instance
    method: POST
    data_selector: instance
    params: {}
- name: vultr_block_storage
  endpoint:
    path: /v1/block-storage
    method: POST
    data_selector: block_storage
    params: {}
- name: vultr_reserved_ip
  endpoint:
    path: /v1/reserved_ip
    method: POST
    data_selector: reserved_ip
    params: {}
- name: mssql-loadbalancer
  endpoint:
    path: /mssql-loadbalancer
    method: POST
    data_selector: status
    params: {}
- name: mssql-data
  endpoint:
    path: /mssql-data
    method: POST
    data_selector: status
    params: {}
- name: mssql-deployment
  endpoint:
    path: /mssql-deployment
    method: POST
    data_selector: status
    params: {}
- name: sql_server_connection
  endpoint:
    path: /sqlcmd
    method: POST
    data_selector: results
    params: {}
- name: express-deployment
  endpoint:
    path: /kubernetes/deployments/express-deployment
    method: POST
    data_selector: deployment
    params: {}
- name: express-service
  endpoint:
    path: /kubernetes/services/express-service
    method: POST
    data_selector: service
    params: {}
- name: express-ingress
  endpoint:
    path: /kubernetes/ingresses/express-ingress
    method: POST
    data_selector: ingress
    params: {}
- name: management_interface
  endpoint:
    path: /
    method: GET
    data_selector: accessibility
    params: {}
- name: buckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: buckets
- name: objects
  endpoint:
    path: /objects
    method: GET
    data_selector: objects
- name: Person
  endpoint:
    path: /cpp/examples/store-and-display-information-using-structure
    method: GET
    data_selector: records
    params: {}
- name: Student
  endpoint:
    path: /cpp/examples/store-information-of-a-student-in-a-structure
    method: GET
    data_selector: records
    params: {}
- name: swap_two_numbers
  endpoint:
    path: /cpp/examples/swap-two-numbers
    method: GET
    data_selector: records
    params: {}
- name: mssql-login
  endpoint:
    path: /create/secret/mssql-login
    method: POST
    data_selector: status
    params: {}
- name: mssql-data
  endpoint:
    path: /create/persistentVolumeClaim/mssql-data
    method: POST
    data_selector: status
    params: {}
- name: mssql-deployment
  endpoint:
    path: /create/deployment/mssql-deployment
    method: POST
    data_selector: status
    params: {}
- name: mssql-loadbalancer
  endpoint:
    path: /create/service/mssql-loadbalancer
    method: POST
    data_selector: status
    params: {}
- name: sql_server_connection
  endpoint:
    path: /connect/sql_server
    method: POST
    data_selector: connection_info
    params: {}
- name: express-deployment
  endpoint:
    path: /api/v1/deployment
    method: POST
    data_selector: deployment
    params: {}
- name: express-service
  endpoint:
    path: /api/v1/service
    method: POST
    data_selector: service
    params: {}
- name: express-ingress
  endpoint:
    path: /api/v1/ingress
    method: POST
    data_selector: ingress
    params: {}
- name: C Program to Count the Number of Vowels, Consonants and so on
  endpoint:
    path: /counting-characters-in-a-string
    method: GET
    data_selector: results
    params: {}
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: products
- name: features
  endpoint:
    path: /v1/features
    method: GET
    data_selector: features
- name: C++ Program to Swap Two Numbers
  endpoint:
    path: /cpp/examples/swap-two-numbers
    method: GET
    data_selector: records
    params: {}
- name: C++ Program to Find Quotient and Remainder
  endpoint:
    path: /cpp/examples/find-quotient-and-remainder
    method: GET
    data_selector: content
    params: {}
- name: display_prime_numbers
  endpoint:
    path: /clang/examples/display-prime-numbers-between-two-intervals
    method: GET
    data_selector: records
    params: {}
notes:
- Uses Docker for installation and configuration.
- Nginx serves as a reverse proxy for HTTPS termination.
- Always use visudo to edit the sudoers file. Editing it directly with a standard
  text editor can result in syntax errors that break sudo functionality.
- Vultr Cloud GPU instances running Ubuntu come with Docker as a pre-installed feature.
- 'Warning: Installing Docker on Vultr Cloud GPU instances may cause conflicts.'
- 'Warning: Vultr Cloud GPU instances running Ubuntu come with Docker as a pre-installed
  feature.'
- 'Warning: Vultr Cloud GPU instances running Ubuntu come with Docker as a pre-installed
  feature. Attempting to install Docker on these servers may result in conflicts with
  the NVIDIA Container Toolkit, potentially impacting GPU performance and container
  compatibility.'
- Requires setup of connected app in Vultr
- PostgreSQL is a reliable and scalable open-source relational database system.
- PostgreSQL is available in the default package repositories on Debian 12.
- By default, PostgreSQL creates an administrative 'postgres' user.
- PostgreSQL is available in the default APT repositories on Ubuntu.
- Use 'sudo' for administrative commands.
- Requires setup of an API key for authentication
- API uses API key for authentication. Ensure it's kept secure.
- Use the --rm flag to automatically remove the container after it exits.
- Automatically removes the container after it exits.
- Uses Docker CLI commands for managing images and containers.
- The main command to list containers is 'docker container ls'.
- Common options include '--all', '--quiet', '--latest', and '--filter'.
- The main command to list containers is docker container ls.
- Common options include --all, --quiet, --latest, --filter, --no-trunc, and --size.
- Pritunl is an open-source VPN solution that supports multiple protocols including
  OpenVPN and WireGuard.
- Pritunl requires MongoDB, OpenVPN, and WireGuard to store management data and create
  VPN connections.
- Each server in the Pritunl web console uses a different port and protocol.
- Requires setup of connected app in API
- Uses Routing and Remote Access feature to configure VPN
- For PPTP, a static IP address range of 10.0.0.1 to 10.0.0.50 is recommended
- OpenVPN requires a server certificate, private key, and encryption files signed
  by a trusted certificate authority (CA) to enable VPN tunnel connections.
- Uses OpenVPN on Ubuntu 24.04.
- The above net.ipv4.ip_forward=1 configuration enables IP forwarding, allowing OpenVPN
  clients to route traffic through the VPN.
- The above firewall configuration modifies the default POSTROUTING policy in the
  nat table to masquerade all traffic from the 10.10.10.0/24 VPN subnet through the
  server's enp1s0 public network interface.
- The above net/ipv4/ip_forward=1 configuration enables IP forwarding through the
  firewall to route packets between the OpenVPN tun interface and other interfaces
  on the server.
- The above configuration enables UFW to allow forwarded packets through the firewall.
- Ensure the remote configuration points to your OpenVPN server's public IP address
  and port.
- Verify that the key-direction configuration is set to 1.
- Verify that the `remote` configuration points to your OpenVPN server's public IP
  address and port.
- Check the server's UFW status and verify that the OpenVPN port is allowed through
  the firewall.
- Verify that the `key-direction` configuration is set to `1`.
- WireGuard is lightweight and has a smaller codebase.
- Requires setup of connected app in api.
- Follow the steps to connect VPN clients using configuration files.
- WireGuard uses Cryptokey routing to enable VPN tunnels
- The WireGuard interface listens on port 51820
- OAuth2 authentication is required.
- Some API endpoints may have rate limits.
- Nextcloud is a free and open-source platform for hosting and managing file storage
  services.
- The source code is publicly available on GitHub for review and contributions.
- Ensure the output shows 'active (running)' to confirm Nginx is operational
- Test the Nginx configuration with 'sudo nginx -t'.
- Allow Nginx access to Nextcloud files using SELinux with 'sudo chcon -R -t httpd_sys_content_t
  /var/www/nextcloud'.
- Restart Nginx web server with 'sudo systemctl restart nginx'.
- Verify that the Nginx web server is running and active with 'sudo systemctl status
  nginx'.
- Ensure that port 80 (HTTP) and 443 (HTTPS) are open in the firewall before running
  Certbot.
- Replace credentials and domain as needed in the .env file for Docker setup.
- Adjust the domain names, passwords, and other values in the .env file to match your
  setup.
- Feature allows provisioning with a limited non-root sudo user named 'linuxuser'
- Root user is locked and can only be accessed using 'sudo'
- By default, a new user named `linuxuser` will be created when deploying an instance
  with Limited User Login.
- The `root` user is locked and can only be accessed using `sudo`.
- NextCloud files are stored in the /snap/nextcloud/current/htdocs/ directory
- NextCloud setup includes server and database configuration.
- Ensure Redis is configured for caching.
- Requires setup of a cloud server with Debian 11.
- Ensure to use valid API keys for authentication.
- Ensure the server is updated before installation.
- NextCloud is installed using Snap for quick setup, automatic updates, and enhanced
  security.
- The ISO must be smaller than 10 GB (10240 MB).
- Each account can store a maximum of two ISOs at a time.
- NextCloud uses this user to authenticate a connection with MySQL.
- Guide for installing LEMP stack on Debian 11.
- This guide applies to both Bare Metal GPU instances and Passthrough GPU instances
  deployed with a GPU-enabled OS image.
- Drivers are installed directly on dedicated hardware for Bare Metal. For Passthrough,
  drivers are installed inside a virtual machine.
- This guide does not apply to vGPU instances, where driver versions are managed by
  the host hypervisor.
- Uses a LEMP stack for serving dynamic web applications.
- Managing NVIDIA vGPU on Vultr Cloud GPU instances ensures that your GPU resources
  are properly configured, drivers are up to date, and licensing is valid.
- The ISO URL must be an absolute path without authentication or query parameters.
- Setup keys are pre-authorized tokens for joining headless servers or containers.
- Requires an API Key associated with your Vultr account.
- Make sure to handle file uploads properly.
- NVIDIA drivers are essential for enabling GPU acceleration on Bare Metal instances.
- Uses setup keys for peer registration
- Ensure domain's A record points to server’s public IP address
- API keys remain active indefinitely until manually revoked or regenerated by the
  user.
- API requires an API key for authentication.
- Requires setup of correct IAM permissions and policies.
- Vultr allows only one API key per account, with options to restrict access using
  ACLs or create Sub-Accounts for separate environments.
- High-performance dedicated physical servers with no virtualization layer, offering
  maximum control and resources for demanding workloads.
- Scalable, flexible storage solutions for your cloud infrastructure with multiple
  options to meet diverse data management needs.
- Secure, scalable cloud storage solution for storing and retrieving any amount of
  data from anywhere on the web with S3 compatibility.
- Scalable, flexible storage solutions for cloud infrastructure with multiple options.
- Container Registry is fully OCI-compliant, ensuring compatibility with standard
  container workflows and tools
- Container Registry provides multi-layered security for private container images
  with encryption at rest and in transit
- Block Storage volumes can only be attached to compute instances within the same
  region due to infrastructure limitations.
- Block Storage offers flexible volume deployment with generous size limits and high
  aggregate storage capacity per account, varying by region and account type.
- Yes, Vultr allows attaching up to 16 Block Storage volumes to a single Compute instance,
  with each volume appearing as an independent disk device in the operating system.
- Block Storage volumes cannot be attached to Bare Metal Servers, as theyre designed
  only for virtual instances like Cloud Compute.
- Managed MySQL databases support customizing SQL modes through the Settings tab to
  control database behavior and error handling
- Primary keys are mandatory for all tables in Vultr Managed MySQL/PostgreSQL clusters
  to ensure data integrity and efficient database operations
- Automatically backs up Managed MySQL and PostgreSQL databases for disaster recovery,
  with user-initiated backup options available on certain plans
- Load balancers improve application reliability and performance by distributing client
  traffic across multiple backend instances to prevent overload and ensure high availability.
- A scalable cloud storage solution that provides file sharing capabilities with easy
  provisioning, management, and mounting options.
- Serverless Inference currently specializes in serving large language models with
  optimized GPU resources and token streaming capabilities.
- Serverless Inference provides low-latency AI model deployment optimized for real-time
  applications with minimal cold-start delays.
- A powerful, open-source relational database system available on Vultr with provisioning,
  management options, and troubleshooting support.
- BGP configuration is managed through the Vultr platform.
- Dedicated static IP addresses that remain assigned to your account even when not
  attached to a server, providing flexibility for high-availability setups and seamless
  server migrations.
- A private, isolated network that allows secure communication between your Vultr
  resources without traversing the public internet.
- Manage and automate your infrastructure resources with Vultrs comprehensive orchestration
  tools for system backups, recovery, and deployment.
- Manage your Vultr network infrastructure including routing, security, and domain
  services.
- Snapshots allow you to create point-in-time backups of your instances for quick
  recovery, cloning, or deployment across regions.
- An existing VPC can only be attached to a new VKE cluster if both are in the same
  region.
- Supports OIDC-based authentication
- Vultr Kubernetes Engine (VKE) supports both manual and automatic scaling of node
  pools.
- Persistent Volume Claims (PVCs) are used to allocate and manage storage for applications.
- Add support for OIDC-based authentication
- Vultr Kubernetes Engine (VKE) is a fully managed Kubernetes service that simplifies
  Kubernetes management.
- VKE supports both manual and automatic scaling of node pools.
- VKE allows you to create multiple Node Pools within a single cluster, each with
  different compute types.
- VKE uses Vultr's Container Storage Interface (CSI) to provide persistent block storage.
- VKE does not include a pre-configured ingress controller.
- VKE provides a dedicated Manage Upgrades tab for controlling cluster upgrades.
- Only use kubeconfig files from trusted sources.
- Vultr Kubernetes Engine (VKE) uses the Calico Container Network Interface (CNI)
  for networking.
- If you delete a worker node outside the Vultr Kubernetes Engine (VKE) Dashboard,
  it will automatically redeploy the node.
- Uses a public proxy cache to avoid Docker Hub's rate limits.
- Choosing the best regional endpoint optimizes network performance.
- All data in Vultr Container Registry is encrypted both in transit and at rest, ensuring
  the security of your container images and other artifacts.
- Ensure the Vultr Terraform provider is configured in your Terraform project.
- User requests to the parent Load Balancer are routed to the nearest child Load Balancer
  in a region depending on the user's location.
- A caching proxy service that speeds up Docker image pulls by storing frequently
  used images locally on your Vultr infrastructure.
- Using a geographically closer registry can significantly reduce network congestion
  and improve deployment speed.
- All data in Vultr Container Registry is encrypted both in transit and at rest.
- Create at least one HTTPS forwarding rule before enabling HTTP/2 or HTTP/3. Enable
  HTTP/3 only if an HTTP/2 rule exists.
- Default interval between health checks is 15 seconds.
- Maximum number of forwarding rules is 15.
- Child Load Balancers can be provisioned in selected regions.
- The default interval between health checks is 15 seconds.
- You can create a maximum of 15 forwarding rules for each Load Balancer.
- Core documentation covering Vultrs platform fundamentals, technical references,
  and system updates.
- The Vultr API requires an API key for authentication.
- Rate limits are enforced on API requests.
- Vultr release notes provide a transparent view into the ongoing improvements, feature
  releases, and platform enhancements across our cloud ecosystem.
- Limits are necessary to control costs or excessive usage of cloud account resource
  allocations.
- Some endpoints may return deprecated fields.
- VoIP call quality cannot be guaranteed on any service, including Bare Metal servers.
- Uses API key for authentication — requires configuration in Vultr account
- Customers may bring up to 5 prefixes in total, including both IPv4 and IPv6 prefixes.
- Each IPv4 prefix must be no shorter than a /16 and no longer than a /24.
- Each IPv6 prefix must be no shorter than a /32 and no longer than a /48.
- Invoices can be downloaded in PDF and CSV formats.
- Vendor accounts allow development teams with established product to join Vultr's
  Image Marketplace.
- Application profiles help vendors provide information about the application.
- Vultr accepts various payment methods including Visa, Mastercard, American Express,
  Discover, JCB, and PayPal.
- Vultr provides invoices in CSV and PDF formats.
- Use the smallest filesystem possible.
- Use an OS that supports cloud-init.
- Include the Vultr kernel option.
- Cloud-init may not correctly interface with NetworkManager on some distros, such
  as CentOS and RHEL. On these distributions, the network will not be configured correctly,
  and the boot process fails. If this occurs, disable NetworkManager, then install
  and enable the network-scripts package. NetworkManager must be disabled but does
  not need to be uninstalled.
- The Marketplace requires the kernel option vultr on Bare Metal instances. It's optional
  for cloud deployment, but it's a best practice to make your application compatible
  with both VPS and Bare Metal deployments.
- Administrative and security settings for managing Vultr account access, compliance,
  and authentication.
- Requires setup of vendor account to publish applications
- VoIP call quality cannot be guaranteed on any service, including Bare Metal servers.
  While call quality cannot be guaranteed, Bare Metal servers are better suited to
  meet the demands of VoIP services compared to VPS.
- A partnership program that rewards content creators for sharing their expertise
  about Vultrs cloud infrastructure through tutorials, videos, and other educational
  content.
- Monitor your credit balance in the billing section to avoid unexpected charges.
- Ensure to deprovision the resources before your credits expire or end to avoid getting
  billed extra.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Manage user accounts and control access permissions to your Vultr resources.
- Vultr Marketplace has a few technical requirements for your application.
- It is recommended to use the marketplace-2c-2gb plan, which includes 2 vCPUs, 2
  GB of memory, and 8 GB of storage.
- Marketplace allows vendors to publish custom applications.
- Manage separate accounts with unique credentials and permissions under your primary
  Vultr account for team collaboration and access control.
- Sub-Accounts remain operational with active infrastructure even when the Parent
  Account is suspended.
- Vultr allows unlimited Sub-Accounts to be created and attached to a Parent Account
  for better infrastructure organization with centralized billing.
- Customizable notifications for key events affecting infrastructure.
- Email alerts can be toggled for scheduled maintenance and real-time outage notifications.
- Requires setup of vendor account and application profile to publish.
- Vultr retains customer activity logs for 30 days.
- Outbound traffic on port 25 is blocked by default on new Vultr Compute Instances
  to prevent abuse and protect IP reputation.
- Maintains full GDPR compliance through strict data protection policies and security
  controls for processing personal information.
- A secure, scalable registry service for storing, managing, and deploying container
  images with API automation capabilities
- Sub-Accounts allow you to create multiple user profiles under your primary account
  with customizable access permissions to manage your infrastructure.
- Load Balancers are a fully managed service where Vultr handles all infrastructure
  provisioning, operations, and maintenance without requiring customer configuration
  of the underlying software stack.
- The default health check interval for Vultr Load Balancers is 10 seconds and can
  be modified through configuration settings.
- Load Balancers include configurable health checks that automatically monitor instance
  status and remove failing servers from rotation.
- Load Balancers include configurable firewall rules to restrict inbound traffic based
  on IP addresses, subnets, or ranges for enhanced security.
- Load Balancers enable horizontal scaling by distributing traffic across multiple
  backend instances to handle increased demand efficiently.
- Load Balancers can only distribute traffic to instances within the same region to
  ensure optimal performance and reliable health checks.
- Load Balancers work with any application using TCP, HTTP, or HTTPS protocols, supporting
  diverse workloads from web apps to game servers.
- Load Balancers support advanced deployment strategies like blue-green and canary
  releases through selective traffic routing and backend pool management.
- Load Balancers provide automatic failover through continuous health checks on attached
  instances to ensure high availability.
- Load Balancers are bandwidth neutral with traffic charges applied to the attached
  instances rather than the load balancer itself.
- Load Balancers support SSL termination, handling TLS handshakes and decrypting HTTPS
  traffic before forwarding to backend servers.
- Each Vultr Load Balancer supports a maximum of 15 forwarding rules for directing
  incoming traffic to backend instances.
- Load Balancers optimize edge latency in multi-region deployments by intelligently
  routing traffic to the nearest healthy backend servers based on geographic proximity
  and server health.
- Vultr allows only one API key per account.
- API keys remain active indefinitely until manually revoked or regenerated.
- Managed Databases offer enterprise-grade reliability, performance, and scalability
  with production-ready features for business-critical applications.
- Fully-managed database service offering automated deployment, maintenance, and scaling
  for various database engines with enterprise-grade reliability and performance.
- Vultr Compute instances receive static public IP addresses upon deployment that
  remain assigned until instance deletion, not true dedicated IPs.
- Vultr allows attaching up to 16 Block Storage volumes to a single Compute instance,
  with each volume appearing as an independent disk device in the operating system.
- Multiple Vultr Cloud Compute instances can be attached to a single Vultr File System
  volume when located in the same region.
- File System volumes can only be attached to instances within the same location for
  low-latency access and data consistency.
- File System volumes support cross-platform simultaneous attachment to both Windows
  and Linux instances in the same region for shared storage access.
- Some endpoints may return paginated results
- Container Registry supports versioning through Docker image tags, allowing management
  of multiple container image versions within a repository.
- Container Registry allows rolling back to previous image versions by pulling specific
  tagged versions, supporting semantic versioning and custom labels.
- Container Registry provides multi-layered security for private container images
  with encryption at rest and in transit.
- Vultr does not accept Apple Pay or Google Pay as payment methods despite these options
  sometimes appearing in browsers or devices
- Explains Vultrs billing policy for instances that are stopped but not destroyed,
  confirming charges continue while resources remain allocated
- Vultr charges for stored snapshots based on their size at a rate of $0.05 per GB
  per month
- Invoices are issued exclusively in USD with no support for local currency billing
- Vultr offers invoices in downloadable PDF and CSV formats for customer billing records
- Vultr uses UTC for invoice timestamps since January 1, 2017, while older invoices
  display times in US Eastern Standard Time (EST)
- Explains why Vultr requires a payment method for account verification and platform
  security before allowing resource deployment
- Vultr charges for stored snapshots based on their size at a rate of $0.05 per GB
  per month.
- Invoices are issued exclusively in USD with no support for local currency billing.
- Vultr uses UTC for invoice timestamps since January 1, 2017, while older invoices
  display times in US Eastern Standard Time (EST).
- Vultr offers invoices in downloadable PDF and CSV formats for customer billing records.
- Vultr's no-refund policy for all services provided on the platform.
- Load Balancers support TCP, HTTP, and HTTPS protocols for distributing traffic across
  multiple servers.
- Load Balancers are available in all Vultr datacenter regions for distributing traffic
  across compute instances.
- Email address changes for OAuth or SSO accounts must be made through the external
  authentication provider.
- Serverless Inference provides a REST API-based service that easily integrates with
  existing ML pipelines for model deployment and inference.
- Vultr does not support changing the OAuth provider (Google or GitHub) associated
  with an existing account after initial setup
- Two-factor authentication for OAuth 2.0 logins is managed by your identity provider
  rather than Vultr directly
- Uses OAuth2 with refresh token — requires setup of connected app in Vultr
- Vultr uses UTC for invoice timestamps since January 1, 2017.
- Explains Vultrs billing policy for instances that are stopped but not destroyed,
  confirming charges continue while resources remain allocated.
- User preferences are individually maintained for each account user, with separate
  settings for theme, timezone, and date format.
- Changing your display timezone in the Vultr Customer Portal only affects how time
  data is shown and does not impact your actual billing cycle.
- Email address changes for OAuth or SSO accounts must be made through the external
  authentication provider, not the Vultr portal.
- Vultr limits API calls to 30 calls per second.
- Uses a Unix socket for efficient communication between Gunicorn and Nginx
- Nginx is a free and open-source web server software.
- Nginx is an open-source web server that delivers static and dynamic web applications
  or services.
- Nginx is an open-source web server application.
- Nginx uses systemd for service management.
- Requires configuration for virtual hosts.
- Uses Gunicorn and Nginx for deployment
- Requires SSL for secure connections
- Ensure to enable the Vultr API and obtain the API key.
- Nginx is included in the default APT repositories for Ubuntu 25.04.
- SSL certificates protect data by encrypting communication between a user's browser
  and the Nginx web server over the HTTPS protocol.
- Requires enabling API in the Vultr Customer Portal and obtaining an API Key.
- Nginx supports various virtual host configurations for secure delivery of applications.
- Nginx supports multiple virtual hosts for secure application delivery and can be
  integrated with other applications like MySQL and PHP.
- Uses Nginx as a reverse proxy for PMG's management interface & installed an SSL
  Certificate using certbot.
- Uses a self-signed SSL certificate by default
- Nginx is an open-source, high-performance webserver.
- Requires a Debian 12 instance.
- Self-signed certificates are commonly used in internal environments for development
  or testing purposes.
- Let's Encrypt certificates have a validity of 90 days.
- Commercial SSL certificates have a validity of 1 year.
- You only need to install the `openai` package if you are using the OpenAI SDK for
  Vultr Serverless Inference.
- The Vultr provider plugin uses the Vultr API to interact with the cloud infrastructure.
- The Developer edition offers the same features as the Enterprise edition but is
  restricted to development use only.
- The End-User License Agreement (EULA) must be accepted for using SQL Server.
- Requires DockerHub for container image management
- Uses Let's Encrypt for SSL certificates
- Uses Nginx as a reverse proxy for PMG's management interface
- SSL Certificate can be obtained using Let's Encrypt
- Some objects like Contact may return nulls in deeply nested fields
- Swapping two numbers can be implemented in several ways, including using temporary
  variables, arithmetic operations, and the standard library functions.
- The Developer edition offers the same features as the Enterprise edition but is
  for development purposes only.
- Using paid editions without a valid license could result in legal consequences.
- Prime numbers have always held an important place in mathematics and computer algorithms
  due to their fundamental properties and applications in numerous areas including
  cryptography.
- Building a program to display prime numbers between two intervals in C++ is an excellent
  way to practice understanding functions and loops.
- Ensure to configure DNS settings for express.example.com
- Structures in C++ offer a robust method for managing grouped data.
- By understanding how to define, initialize, and manipulate structures, you enhance
  your ability to manage and display complex data efficiently.
errors:
- Timeout settings for long-running workflows.
- 'CONFLICT: Attempting to install Docker on a server with Docker pre-installed.'
- '401 Unauthorized: Check credentials and permissions'
- '404 Not Found: Verify the endpoint path'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- No PostgreSQL version is installed on the server.
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify endpoint path'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify endpoint URL.'
- Container remains on the system in exited state if --rm is not used.
- 'Invalid Option: Check the command options for correctness.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Configuration test errors may occur if paths are incorrect.
- 'Connection Timeout: Error Connecting to the OpenVPN Server'
- 'Authenticate/Decrypt packet error: packet HMAC authentication failed'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Ensure the token is valid.'
- '302 Found: Redirect to /login'
- '401 Unauthorized: Check API key or OAuth token.'
- '429 Too Many Requests: Rate limit exceeded.'
- '500 Internal Server Error: Check server logs for details.'
- '401 Unauthorized: Recheck API key or permissions.'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Ensure the API key is valid.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Recheck API key validity'
- '404 Not Found: Verify endpoint URL'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- 'Access denied: Permission errors when importing databases with DEFINER clauses
  that reference non-existent or unauthorized user accounts'
- '401 Unauthorized: Recheck API key or permissions'
- If you exceed your registry storage limit, new container images cannot be pushed
  to the registry until you either free up space by deleting images or upgrade to
  a higher storage plan.
- 'Unauthorized: Check your API key.'
- 'Too Many Requests: Throttle your requests.'
- Instance fails health checks if not accessible.
- Check configured port and protocol for accuracy.
- 'Unauthorized: Check API key or permissions'
- '429 Too Many Requests: Exceeded rate limit.'
- '401 Unauthorized: Invalid API key.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check API key'
- '401 Unauthorized: Invalid API key'
- Deleting an app prevents customers from deploying new instances.
- '401 Unauthorized: Recheck API key or access permissions'
- '504 Gateway Timeout: Vultr Load Balancers return 504 Gateway Timeout errors and
  their relationship to backend server response times.'
- 'HTTP 503: A 503 error from Vultr Load Balancer occurs when no healthy backend instances
  are available to handle requests.'
- '504 Gateway Timeout: Occurs when backend server response times are too long.'
- 'HTTP 503 Error: Occurs when no healthy backend instances are available to handle
  requests.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '429 Too Many Requests: Throttle API calls'
- '500 Internal Server Error: Check the API status'
- '401 Unauthorized: Verify OAuth credentials'
- Explains the consequences of unpaid invoices and outlines the actions Vultr may
  take regarding account suspension or termination per their Terms of Service
- Explains common reasons for credit card declines when purchasing Vultr services
  and troubleshooting steps to resolve payment issues
- '504 Gateway Timeout: Explains why Vultr Load Balancers return 504 Gateway Timeout
  errors and their relationship to backend server response times.'
- 'HTTP 503 Error: A 503 error from Vultr Load Balancer occurs when no healthy backend
  instances are available to handle requests.'
- 'AUTH failed: Troubleshooting guide for resolving authentication failures when connecting
  to Vultr Managed Valkey Database'
- 'authentication failed: Troubleshooting guide for resolving PostgreSQL authentication
  failures when connecting to Vultr Managed Databases'
- 'Host is blocked: A guide to resolving MySQL connection blocks caused by excessive
  failed connection attempts from a client IP address'
- Exceeding the 50 million token allocation results in an overage rate of $0.0002
  per 1,000 tokens.
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'nginx: configuration file /etc/nginx/nginx.conf syntax is ok'
- 'nginx: configuration file /etc/nginx/nginx.conf test is successful'
- '403 Forbidden: Check API key and permissions'
- '404 Not Found: Verify resource identifiers'
- '500 Internal Server Error: Retry the request'
- '403 Forbidden: Check API Key permissions'
- '404 Not Found: Verify endpoint and resource existence'
- '400 Bad Request: Validate request parameters and values'
- '404 Not Found: Verify the resource ID or endpoint'
- Ensure the Kubernetes cluster is provisioned in the region closest to the client
  to avoid slow operations.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - api_key
  - Vultr API Key
  - NamedCredential
client:
  base_url: https://www.vultr.com
  headers:
    Accept: application/json
source_metadata: null
