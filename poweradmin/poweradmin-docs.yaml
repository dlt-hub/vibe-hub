resources:
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: data
- name: records
  endpoint:
    path: /zones/{id}/records
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: data
- name: API
  endpoint:
    path: /api/docs
    method: GET
    data_selector: api documentation
    params: {}
- name: database
  endpoint:
    path: /create_database
    method: POST
    data_selector: database
    params:
      charset: utf8mb4
- name: database
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: database
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: database_settings
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: database
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: database
  endpoint:
    path: /path/to/your/poweradmin.sqlite
    method: GET
    data_selector: database
    params: {}
- name: database
  endpoint:
    path: /sql/poweradmin-mysql-db-structure.sql
    method: POST
- name: dynamic_update
  endpoint:
    path: /update
    method: GET
- name: nic_update
  endpoint:
    path: /nic/update
    method: GET
- name: database_settings
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: security_settings
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: security
    params: {}
- name: dns_settings
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: dns
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: records
    params: {}
- name: permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: records
    params: {}
- name: PowerDNS API
  endpoint:
    path: /
    method: GET
    data_selector: response
    params: {}
- name: database
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: security
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: security
    params: {}
- name: dns
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: dns
    params: {}
- name: PowerDNS API
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: ldap_settings
  endpoint:
    path: /ldap/settings
    method: GET
    data_selector: settings
    params: {}
- name: other_settings
  endpoint:
    path: /misc/settings
    method: GET
    data_selector: settings
    params: {}
- name: dns
  endpoint:
    path: /api/dns
    method: GET
    data_selector: records
- name: dns_settings
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: dns
    params: {}
- name: database
  endpoint:
    path: /config/settings.php/database
    method: GET
    data_selector: database
    params: {}
- name: database
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: servers
  endpoint:
    path: /api/v1/servers/localhost
    method: GET
- name: servers
  endpoint:
    path: /api/v1/servers/localhost
    method: GET
- name: dnssec
  endpoint:
    path: /dnssec
    method: POST
    data_selector: dnssec
    params:
      enabled: true
      debug: false
- name: logging
  endpoint:
    path: /advanced/logging-config/
    method: GET
    data_selector: logging
    params: {}
- name: logging
  endpoint:
    path: /api/logging
    method: GET
    data_selector: records
    params: {}
- name: ldap
  endpoint:
    path: /ldap
    method: GET
    data_selector: records
    params:
      enabled: true
      base_dn: ou=users,dc=example,dc=com
      search_filter: (objectClass=account)
- name: mail_settings
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: mail
    params: {}
- name: mail_configuration
  endpoint:
    path: /config/settings.php/mail
    method: GET
    data_selector: mail_settings
    params: {}
- name: domain_record_types
  endpoint:
    path: /settings.php
    method: POST
    data_selector: dns.domain_record_types
    params: {}
- name: reverse_record_types
  endpoint:
    path: /settings.php
    method: POST
    data_selector: dns.reverse_record_types
    params: {}
- name: domain_record_types
  endpoint:
    path: /settings.php
    method: GET
    data_selector: dns.domain_record_types
    params: {}
- name: reverse_record_types
  endpoint:
    path: /settings.php
    method: GET
    data_selector: dns.reverse_record_types
    params: {}
- name: password_policy
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: security.password_policy
    params: {}
- name: security
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: security
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois_data
    params: {}
- name: rdap_lookup
  endpoint:
    path: /lookup
    method: GET
    data_selector: data
    params: {}
- name: rdap_lookup
  endpoint:
    path: /rdap/query
    method: GET
    data_selector: responses
    params:
      timeout: '10'
- name: user_agreement
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: user_agreement
    params: {}
- name: user_permissions
  endpoint:
    path: /api/user_permissions
    method: GET
    data_selector: permissions
    params: {}
- name: zone_permissions
  endpoint:
    path: /api/zone_permissions
    method: GET
    data_selector: permissions
    params: {}
- name: supermaster_permissions
  endpoint:
    path: /api/supermaster_permissions
    method: GET
    data_selector: permissions
    params: {}
- name: user_management
  endpoint:
    path: /api/v1/user_management
    method: GET
    data_selector: users
    params: {}
- name: permission_templates
  endpoint:
    path: /api/v1/permission_templates
    method: GET
    data_selector: templates
    params: {}
- name: zone_template
  endpoint:
    path: /api/zone_template
    method: GET
    data_selector: templates
- name: PTR Records
  endpoint:
    path: /reverse-dns
    method: GET
    data_selector: records
    params: {}
- name: User Permissions
  endpoint:
    path: /permissions/user
    method: GET
    data_selector: permissions
    params: {}
- name: Zone Permissions
  endpoint:
    path: /permissions/zone
    method: GET
    data_selector: permissions
    params: {}
- name: Supermaster Permissions
  endpoint:
    path: /permissions/supermaster
    method: GET
    data_selector: permissions
    params: {}
- name: PTR Records
  endpoint:
    path: /reverse-dns/ptr-records
    method: POST
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /config/settings.php
    method: GET
    data_selector: database
    params: {}
- name: api_keys
  endpoint:
    path: /api/keys
    method: GET
    data_selector: api_keys
    params: {}
- name: security
  endpoint:
    path: /security
    method: GET
    data_selector: security
    params:
      login_token_validation: true
      global_token_validation: true
- name: interface
  endpoint:
    path: /interface
    method: GET
    data_selector: interface
    params:
      show_record_id: true
      position_record_form_top: false
      position_save_button_top: false
      show_record_comments: false
- name: logging
  endpoint:
    path: /logging
    method: GET
    data_selector: logging
    params:
      type: 'null'
      level: info
- name: misc
  endpoint:
    path: /misc
    method: GET
    data_selector: misc
    params:
      record_comments_sync: false
- name: database
  endpoint:
    path: /inc/config.inc.php
    method: POST
    data_selector: database
    params:
      pdns_db_name: powerdns
- name: interface
  endpoint:
    path: /inc/config.inc.php
    method: POST
    data_selector: interface
    params:
      enabled_languages: cs_CZ,de_DE,en_EN,fr_FR,it_IT,ja_JP,lt_LT,nb_NO,nl_NL,pl_PL,ru_RU,tr_TR,zh_CN
      search_group_records: false
- name: database
  endpoint:
    path: inc/config.inc.php
    method: UPDATE
    data_selector: database
    params:
      pdns_db_name: powerdns
- name: interface
  endpoint:
    path: inc/config.inc.php
    method: UPDATE
    data_selector: interface
    params:
      enabled_languages: cs_CZ,de_DE,en_EN,fr_FR,it_IT,ja_JP,lt_LT,nb_NO,nl_NL,pl_PL,ru_RU,tr_TR,zh_CN
      search_group_records: false
- name: configuration_updates
  endpoint:
    path: /inc/config.inc.php
    method: GET
    data_selector: config_options
    params: {}
- name: zone_comments
  endpoint:
    path: /path/to/zone/comments
    method: GET
    data_selector: records
    params: {}
- name: soa_record_settings
  endpoint:
    path: /path/to/soa/record/settings
    method: GET
    data_selector: records
    params: {}
- name: configuration
  endpoint:
    path: /inc/config.inc.php
    method: GET
    data_selector: config
    params: {}
- name: dns_zone_type_default
  endpoint:
    path: /inc/config.inc.php
    method: SET
    data_selector: dns_zone_type_default
    params:
      value: MASTER
- name: dnssec_debug
  endpoint:
    path: /inc/config.inc.php
    method: SET
    data_selector: dnssec_debug
    params:
      value: false
- name: unit_tests
  endpoint:
    path: /tests/unit
    method: GET
    data_selector: tests
    params: {}
- name: integration_tests
  endpoint:
    path: /tests/integration
    method: GET
    data_selector: tests
    params: {}
- name: end_to_end_tests
  endpoint:
    path: /cypress/e2e
    method: GET
    data_selector: tests
    params: {}
- name: unit_tests
  endpoint:
    path: /tests/unit
    method: GET
    data_selector: tests
    params: {}
- name: integration_tests
  endpoint:
    path: /tests/integration
    method: GET
    data_selector: tests
    params: {}
- name: cypress_tests
  endpoint:
    path: /cypress/e2e
    method: GET
    data_selector: tests
    params: {}
- name: unit_tests
  endpoint:
    path: /tests/unit
    method: GET
    data_selector: tests
- name: integration_tests
  endpoint:
    path: /tests/integration
    method: GET
    data_selector: tests
- name: end_to_end_tests
  endpoint:
    path: /cypress/e2e
    method: GET
    data_selector: tests
notes:
- Enable API keys for authentication.
- Logging of API requests is supported.
- This documentation is still in progress, not reviewed properly, and might contain
  some errors or outdated images.
- This demo uses SQLite with pre-configured test data.
- 'Port conflicts: Use -p 8080:80 if port 80 is in use.'
- Distributions listed as unsupported can potentially be configured manually with
  a custom PHP build, but this is not officially supported.
- Upgrade paths are recommended for unsupported distributions to maintain security
  and compatibility.
- It's intended for the upcoming 4.0.0 release, so configuration settings might be
  different from previous versions.
- This documentation is still in progress, not reviewed properly, and might contain
  some errors or outdated images. It's intended for the upcoming 4.0.0 release, so
  configuration settings might be different from previous versions.
- php-fpm is required only if you plan to use Nginx or choose not to use mod_php with
  Apache.
- You can safely remove the default index.html (or derivative) if it exists.
- Use MySQL 5.7+ or MariaDB 10.3+
- Change the database password from 'your_password' to a secure one
- Configuration settings might be different from previous versions.
- PostgreSQL uses uppercase charset names.
- The web server user (e.g., www-data, apache, nginx) needs read/write access to both
  the directory and database file
- PHP with PDO SQLite extension enabled is required.
- The web server user needs read/write access to the directory and database file.
- Default login credentials are admin/admin — change immediately after first login
  for security reasons.
- The .htaccess file in the root directory is essential for the API to work properly.
- Ensure that AllowOverride All is set in your Apache configuration to allow the .htaccess
  file to function properly.
- Default login credentials must be changed immediately after first login.
- Default login credentials are 'admin' for username and 'admin' for password. Change
  these immediately after your first login for security reasons.
- This documentation is intended for the upcoming 4.0.0 release, configuration settings
  might be different from previous versions.
- Poweradmin requires access to the PowerDNS API for DNSSEC management and certain
  operations.
- The PowerDNS API method is strongly recommended over the legacy pdnsutil method.
- Always change default values, especially the `session_key`, in production environments
- Always change default values, especially the session_key, in production environments
- Never commit sensitive information like passwords to version control
- Always use HTTPS for production environments
- Restrict API access to trusted IP addresses
- Use a strong API key and rotate it regularly
- 'The API method provides several advantages: No need to configure special permissions
  for the web server user, more secure as it doesn''t require shell access, better
  error handling and feedback, full support for all DNSSEC operations.'
- The API method is strongly recommended for security reasons.
- Always use LDAPS (LDAP over SSL/TLS) in production environments
- Implement least privilege access for binding
- Default email functionality is enabled.
- SMTP settings include host and port configuration.
- Default behavior shows all supported record types if settings are null.
- By default, both settings are set to null, which means Poweradmin will display all
  supported record types for the respective zone type.
- WHOIS queries may be slow and depend on network conditions.
- 'Admin restriction: By default, only users with administrator privileges can use
  WHOIS functionality'
- 'Rate limiting: Consider implementing rate limiting for WHOIS queries to prevent
  abuse'
- 'Timeout settings: Adjust socket timeout based on your network conditions'
- 'Logging: WHOIS queries may be logged depending on your logging configuration'
- WHOIS queries are network-dependent and may be slow
- Consider caching results for frequently queried domains
- Set appropriate timeout values to prevent interface blocking
- HTTPS encryption - All queries use encrypted connections
- Admin restriction - Access limited to administrators by default
- Uses HTTPS encryption for all queries
- Access is restricted to administrators by default
- Zones do NOT automatically update when templates are modified. This is by design
  to give administrators explicit control over when changes are applied.
- Legacy configuration format (`inc/config.inc.php`) is still supported but will be
  removed in a future version
- You can have both configuration files during the transition period
- The new configuration system offers more flexibility and better organization
- Review security settings after upgrade to take advantage of new account lockout
  features
- This is a significant update that lays groundwork for future improvements
- Consider testing in a staging environment before applying to production
- No database schema changes are required for this update
- This release is compatible with all configurations from v3.9.2
- Users with PowerDNS database prefixes should verify record operations work correctly
- PostgreSQL users should test domain listing and pagination functionality
- This release maintains full backward compatibility with v3.9.0
- The update is recommended for all users due to security improvements
- This patch version focuses solely on bug fixes and enhancements without introducing
  new features
- The new 'txt_auto_quote' option is disabled by default for backward compatibility
- This release is compatible with all configurations from v3.9.1
- Enable the 'txt_auto_quote' feature if users frequently forget to add quotes to
  TXT records or if you've experienced issues with unquoted TXT records
- The feature only adds quotes when they're completely missing and won't modify properly
  quoted records
- Database schema changes are required for this update - make sure to run the appropriate
  SQL commands
- All new configuration options have sensible defaults if not specified
- The record comments synchronization feature is disabled by default
- Token validation is enabled by default for better security
- If you've customized any templates, review them after the upgrade as some interface
  elements may have changed
- This release maintains full backward compatibility with v3.8.0
- The update is recommended for all users, especially those using the new features
  introduced in v3.8.0
- The separate PowerDNS database feature is marked as experimental - test thoroughly
  before using in production
- If you have customized templates, review them after upgrade as some interface elements
  may have changed
- This release maintains backward compatibility with v3.7.0 configuration
- The older command-line based DNSSEC management will still work if you don't configure
  the API
- Using the PowerDNS API is strongly recommended for better security and reliability
- Review your firewall settings if using a remote PowerDNS server to ensure API access
- This update significantly improves DNSSEC management but requires PowerDNS to be
  configured for API access
- This release maintains full backward compatibility with v3.6.0
- This patch version focuses solely on bug fixes and security enhancements without
  introducing new features
- This release maintains backward compatibility with v3.5.1 configuration
- New configuration options are optional with sensible defaults
- Consider reviewing your permission templates after upgrade as some new features
  may require additional permissions
- Users upgrading from versions prior to v3.5.0 should first upgrade to v3.5.0 or
  v3.5.1 before proceeding to v3.6.0
- This release maintains full backward compatibility with v3.5.0
- This release maintains backward compatibility with v3.4.2 configuration files
- Users upgrading from versions prior to v3.4.0 should first upgrade incrementally
- If you have customized templates, review them against the new versions as some structure
  may have changed
- This release maintains full backward compatibility with v3.4.1
- This release maintains full backward compatibility with v3.4.0
- The installation process improvements only affect new installations
- This release maintains backward compatibility with v3.3.0 configuration files
- Users upgrading from versions prior to v3.2.0 should first upgrade to v3.2.0 before
  proceeding to v3.4.0
- The improvements to DNSSEC management are particularly beneficial for users actively
  using DNSSEC
- This release maintains backward compatibility with v3.2.0 configuration files
- The performance improvements are especially noticeable on systems with many zones
- Users upgrading from versions prior to v3.2.0 should first upgrade to v3.2.0 before
  proceeding to v3.3.0
- Database logging is disabled by default. Enable it in the configuration if needed.
- Older logs will not be available after upgrade - only new activity will be logged.
- Regular database maintenance may be needed if logs accumulate in high-traffic environments.
- Consider implementing a log rotation policy for long-term use.
- This release is fully compatible with v3.0.0 configuration files, with the addition
  of the new index_display option
- Users upgrading from versions prior to v3.0.0 should first upgrade to v3.0.0 before
  proceeding to v3.1.0
- This is a major version upgrade that includes substantial changes to the codebase
- Plan for adequate testing time before deploying to production
- For complex installations, consider setting up a test environment first
- Review all configuration options carefully to ensure secure settings
- This release maintains backward compatibility with v2.2.1
- If you are upgrading from a version earlier than v2.2.0, please first upgrade to
  v2.2.0 before proceeding to v2.2.2
- Review your custom templates if you have any, as some template structure may have
  changed
- This release maintains backward compatibility with v2.2.0
- If you are upgrading from a version earlier than v2.2.0, please first upgrade to
  v2.2.0 before proceeding to v2.2.1
- Review all configuration options after upgrade to ensure they match your requirements
- The database structure changes improve data integrity and performance
- If you had customized templates or styles, you may need to reapply your changes
- This release adds support for configuring the default zone type when creating new
  zones
- DNSSEC debugging can now be enabled for troubleshooting DNSSEC-related issues
- Various bug fixes and performance improvements are included in this release
- Version 2.1.7 introduces several bug fixes and usability improvements, particularly
  for zone management and DNSSEC handling.
- This release maintains full backward compatibility with v2.1.2
- The update is strongly recommended for all users due to security improvements
- Users upgrading from versions earlier than v2.1.2 should first upgrade to v2.1.2
  before proceeding to v2.1.3
- This release maintains full backward compatibility with v2.1.1
- Users running versions earlier than v2.1.1 should first upgrade to v2.1.1 before
  proceeding to v2.1.2
- This release is fully backward compatible with v2.1.0
- The update is strongly recommended for all users due to critical security fixes
- This update addresses the most commonly reported issues following the v2.1.0 release
- This release maintains backward compatibility with v2.0.0 configuration
- Users are encouraged to update directly to the latest v2.1.x version after upgrading
  to v2.1.0
- 'The initial v2.1.0 release lays the groundwork for additional features introduced
  in subsequent v2.1.x releases, including: Support for additional database types
  (added in 2.1.5/2.1.6), Improved password encryption options (added in 2.1.6), DNSSEC
  support (added in 2.1.7), LDAP authentication (added in 2.1.7)'
- Consider migrating to the new configuration format using the provided script.
errors:
- '401 Unauthorized: Invalid API key or credentials'
- '403 Forbidden: Insufficient permissions'
- '500 Internal Server Error: Server configuration issue'
- 'Port conflicts: Use -p 8080:80 if port 80 is in use.'
- 'Invalid database path: Ensure the path to the SQLite database file is correct.'
- PHP syntax errors may occur if certain characters are used in passwords.
- 'RATE_LIMIT_EXCEEDED: Respect RDAP server rate limits'
- 'INVALID_DOMAIN: Ensure domain names are valid before queries'
- 'No matching reverse zone found: Create the appropriate reverse zone first'
- 'Permission denied: Ensure you have rights to add records to the reverse zone'
- 'No records created: Check if records already exist (they will be skipped)'
- 'Feature not visible: Check if you have the required permissions'
auth_info:
  mentioned_objects:
  - API Key
  - HTTP Basic Authentication
client:
  base_url: http://localhost
  headers:
    Accept: application/json
source_metadata: null
