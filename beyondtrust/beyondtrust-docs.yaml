resources:
- name: site
  endpoint:
    path: /sites
    method: GET
- name: Identity Provider
  endpoint:
    path: /Connections/Application
    method: POST
- name: identity_provider
  endpoint:
    path: /identity-providers
    method: POST
    data_selector: providers
    params: {}
- name: audit_logs
  endpoint:
    path: /pathfinder-audit-logs
    method: GET
- name: AD Bridge
  endpoint:
    path: /adb/docs/apache
    method: GET
- name: BeyondInsight for Unix and Linux
  endpoint:
    path: /epm-ul/docs/elastic-search-logstash-integration
    method: GET
- name: Endpoint Privilege Management for Windows and Mac
  endpoint:
    path: /epm-wm/docs/servicenow
    method: GET
- name: Secrets Safe
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}
    method: GET
    data_selector: SecretType
    params: {}
- name: Password Safe
  endpoint:
    path: /Password-Safe/Requests
    method: GET
    data_selector: RequestorName, RequestorUserID
    params:
      limit: optional
      offset: optional
- name: Secrets
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}
    method: GET
    data_selector: SecretType
    params: {}
- name: Requests
  endpoint:
    path: /Requests
    method: GET
    data_selector: RequestorName, RequestorUserID
    params: {}
- name: password_safe
  endpoint:
    path: /api/v1/passwordsafe
    method: GET
    data_selector: records
    params: {}
- name: Windows Servers Discovery
  endpoint:
    path: /smart_rules/windows_servers/discovery
    method: POST
    data_selector: assets
    params: {}
- name: Windows Servers Management
  endpoint:
    path: /smart_rules/windows_servers/management
    method: POST
    data_selector: assets
    params: {}
- name: Linux Servers Discovery
  endpoint:
    path: /smart_rules/linux_servers/discovery
    method: POST
    data_selector: assets
    params: {}
- name: Linux Servers Management
  endpoint:
    path: /smart_rules/linux_servers/management
    method: POST
    data_selector: assets
    params: {}
- name: Network Devices Discovery
  endpoint:
    path: /smart_rules/network_devices/discovery
    method: POST
    data_selector: assets
    params: {}
- name: Network Devices Management
  endpoint:
    path: /smart_rules/network_devices/management
    method: POST
    data_selector: assets
    params: {}
- name: SAML Authentication
  endpoint:
    path: /api/auth/saml
    method: POST
    data_selector: token
    params: {}
- name: identity_provider
  endpoint:
    path: /identity-providers
    method: POST
    data_selector: provider
    params: {}
- name: smart_rule
  endpoint:
    path: /api/smart_rules
    method: POST
    data_selector: results
    params: {}
- name: Smart Rules
  endpoint:
    path: /bips/docs/pathfinder-smart-rules
    method: GET
- name: discovery_scans
  endpoint:
    path: /password_safe/discovery
    method: GET
    data_selector: scans
- name: discovery_scan
  endpoint:
    path: /scans
    method: POST
    data_selector: scan_results
- name: managed_accounts
  endpoint:
    path: /managed_accounts
    method: GET
    data_selector: Managed Accounts
- name: managed_accounts
  endpoint:
    path: /api/managed_accounts
    method: GET
    data_selector: accounts
- name: approvals
  endpoint:
    path: /api/approvals
    method: GET
    data_selector: requests
    params: {}
- name: sessions
  endpoint:
    path: /path/to/sessions
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: active_sessions
  endpoint:
    path: /active_sessions
    method: GET
    data_selector: active_sessions
- name: completed_sessions
  endpoint:
    path: /completed_sessions
    method: GET
    data_selector: completed_sessions
- name: safes
  endpoint:
    path: /safes
    method: GET
    data_selector: safes
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: secrets
  endpoint:
    path: /secrets
    method: GET
    data_selector: secrets
    params: {}
- name: Discovery
  endpoint:
    path: /path/to/discovery
    method: GET
    data_selector: details
- name: Network Discovery
  endpoint:
    path: /path/to/network-discovery
    method: GET
    data_selector: details
- name: Assets
  endpoint:
    path: /path/to/assets
    method: GET
    data_selector: details
- name: Service
  endpoint:
    path: /path/to/service
    method: GET
    data_selector: details
- name: Software
  endpoint:
    path: /path/to/software
    method: GET
    data_selector: details
- name: User Account
  endpoint:
    path: /path/to/user-account
    method: GET
    data_selector: details
- name: Operating System
  endpoint:
    path: /path/to/operating-system
    method: GET
    data_selector: details
- name: Port
  endpoint:
    path: /path/to/port
    method: GET
    data_selector: details
- name: Windows Events
  endpoint:
    path: /path/to/windows-events
    method: GET
    data_selector: details
- name: Custom Attributes
  endpoint:
    path: /path/to/custom-attributes
    method: GET
    data_selector: details
- name: User Audits
  endpoint:
    path: /path/to/user-audits
    method: GET
    data_selector: details
- name: Database User List
  endpoint:
    path: /path/to/database-user-list
    method: GET
    data_selector: details
- name: Activity
  endpoint:
    path: /path/to/activity
    method: GET
    data_selector: details
- name: Password Release Activity
  endpoint:
    path: /path/to/password-release-activity
    method: GET
    data_selector: details
- name: Password Update Activity
  endpoint:
    path: /path/to/password-update-activity
    method: GET
    data_selector: details
- name: Password Update Schedule
  endpoint:
    path: /path/to/password-update-schedule
    method: GET
    data_selector: details
- name: Managed Account Password Age
  endpoint:
    path: /path/to/managed-account-password-age
    method: GET
    data_selector: details
- name: Account Password Age by Last Scan
  endpoint:
    path: /path/to/account-password-age-by-last-scan
    method: GET
    data_selector: details
- name: Service Account Usage
  endpoint:
    path: /path/to/service-account-usage
    method: GET
    data_selector: details
- name: Scheduled Password Change Configuration
  endpoint:
    path: /path/to/scheduled-password-change-configuration
    method: GET
    data_selector: details
- name: Password and Session Activity
  endpoint:
    path: /path/to/password-and-session-activity
    method: GET
    data_selector: details
- name: Admin Session Activity
  endpoint:
    path: /path/to/admin-session-activity
    method: GET
    data_selector: details
- name: Entitlement by User
  endpoint:
    path: /path/to/entitlement-by-user
    method: GET
    data_selector: details
- name: Entitlement by Group
  endpoint:
    path: /path/to/entitlement-by-group
    method: GET
    data_selector: details
- name: Inactive Managed Accounts
  endpoint:
    path: /path/to/inactive-managed-accounts
    method: GET
    data_selector: details
- name: Application Inventory
  endpoint:
    path: /path/to/application-inventory
    method: GET
    data_selector: details
- name: Smart Rule Details
  endpoint:
    path: /path/to/smart-rule-details
    method: GET
    data_selector: details
- name: Remote Session Activity
  endpoint:
    path: /path/to/remote-session-activity
    method: GET
    data_selector: details
- name: Smart Rule Overlap
  endpoint:
    path: /path/to/smart-rule-overlap
    method: GET
    data_selector: details
- name: Reviewed Sessions
  endpoint:
    path: /path/to/reviewed-sessions
    method: GET
    data_selector: details
- name: Application Audit
  endpoint:
    path: /path/to/application-audit
    method: GET
    data_selector: details
- name: Asset SSH Keys
  endpoint:
    path: /path/to/asset-ssh-keys
    method: GET
    data_selector: details
- name: IIS Application Pool Account Usage
  endpoint:
    path: /path/to/iis-application-pool-account-usage
    method: GET
    data_selector: details
- name: Scheduled Tasks Account Usage
  endpoint:
    path: /path/to/scheduled-tasks-account-usage
    method: GET
    data_selector: details
- name: Secrets Safe Entitlement Report
  endpoint:
    path: /path/to/secrets-safe-entitlement-report
    method: GET
    data_selector: details
- name: Active Users
  endpoint:
    path: /path/to/active-users
    method: GET
    data_selector: details
- name: System Usage Statistics
  endpoint:
    path: /path/to/system-usage-statistics
    method: GET
    data_selector: details
- name: Workforce Passwords Usage Summary
  endpoint:
    path: /path/to/workforce-passwords-usage-summary
    method: GET
    data_selector: details
- name: worker_node
  endpoint:
    path: /bips/docs/pathfinder-api-registration
    method: GET
    data_selector: worker_nodes
    params: {}
- name: managed_account
  endpoint:
    path: /bips/docs/pathfinder-managed-accounts
    method: GET
    data_selector: managed_accounts
    params: {}
- name: Smart Rules
  endpoint:
    path: /api/smart_rules
    method: GET
    data_selector: rules
    params: {}
- name: Managed Accounts
  endpoint:
    path: /api/managed_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: Managed Systems
  endpoint:
    path: /api/managed_systems
    method: GET
    data_selector: systems
    params: {}
- name: directory_query
  endpoint:
    path: /Configuration/RoleBaseAccess/DirectoryQueries
    method: POST
    data_selector: directoryQuery
    params:
      directory_type: Active Directory
      scope: This Object and All Child Objects
      object_type: User Objects
      dynamically_refresh_results: true
- name: smart_rule_managed_account
  endpoint:
    path: /SmartRules
    method: POST
    data_selector: smartRuleManagedAccount
    params:
      category: Managed Accounts
- name: group_permissions
  endpoint:
    path: /api/group_permissions
    method: GET
    data_selector: permissions
- name: password_safe_roles
  endpoint:
    path: /api/password_safe_roles
    method: GET
    data_selector: roles
- name: application_user
  endpoint:
    path: /api/user_management/application_user
    method: POST
- name: ldap_user
  endpoint:
    path: /api/user_management/ldap_user
    method: POST
- name: entra_id_user
  endpoint:
    path: /api/user_management/entra_id_user
    method: POST
- name: Active Directory credential
  endpoint:
    path: /create/active-directory
    method: POST
- name: LDAP credential
  endpoint:
    path: /create/ldap
    method: POST
- name: Entra ID credential
  endpoint:
    path: /create/entra-id
    method: POST
- name: applications
  endpoint:
    path: /bips/docs/api/applications
    method: POST
    data_selector: applications
    params: {}
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: managed_accounts
  endpoint:
    path: /managed_accounts
    method: GET
    data_selector: managed_accounts
- name: access_policies
  endpoint:
    path: /access_policies
    method: GET
    data_selector: access_policies
- name: sap
  endpoint:
    path: /sap
    method: GET
    data_selector: sap
- name: custom_platform
  endpoint:
    path: /bips/docs/ps-add-custom-platform
    method: POST
    data_selector: response
    params: {}
- name: Functional Accounts
  endpoint:
    path: /configuration/functional-accounts
    method: POST
- name: Managed Accounts
  endpoint:
    path: /managed-accounts
    method: POST
- name: session_monitoring
  endpoint:
    path: /session_monitoring
    method: GET
    data_selector: settings
    params: {}
- name: purging
  endpoint:
    path: /purging
    method: GET
    data_selector: settings
    params: {}
- name: miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: settings
    params: {}
- name: access_policy
  endpoint:
    path: /Configuration/PrivilegedAccessManagement/Policies/AccessPolicies
    method: GET
    data_selector: policies
- name: connection_profile
  endpoint:
    path: /Configuration/PrivilegedAccessManagement/Policies/ConnectionProfiles
    method: GET
    data_selector: profiles
- name: SSH Key Policy
  endpoint:
    path: /api/ssh-key-policies
    method: POST
    data_selector: policy
    params: {}
- name: Password Policies
  endpoint:
    path: /bips/docs/ps-create-password-policies
    method: GET
    data_selector: records
    params: {}
- name: password_change_agent
  endpoint:
    path: /Configuration/Privileged Access Management Agents/Password Change Agent
    method: POST
    data_selector: configuration
    params:
      enable: 'true'
      active_change_tasks: 5
      check_queue_every_seconds: 60
      retry_failed_changes_after_minutes: 5
      maximum_retries: 3
      unlimited_retries: 'true'
- name: mail_agent
  endpoint:
    path: /Configuration/Privileged Access Management Agents/Mail Agent
    method: POST
    data_selector: configuration
    params:
      enable: 'true'
      send_mail_every_minutes: 10
      delete_messages_after_failed_attempts: 3
- name: password_test_agent
  endpoint:
    path: /Configuration/Privileged Access Management Agents/Password Test Agent
    method: POST
    data_selector: configuration
    params:
      enable: 'true'
- name: session_agents
  endpoint:
    path: /Configuration/Privileged Access Management Agents/Session Agents
    method: POST
    data_selector: configuration
    params: {}
- name: global_settings
  endpoint:
    path: /Configuration/Privileged Access Management/Global Settings
    method: POST
    data_selector: configuration
    params:
      allow_users_to_select_remote_proxy: 'true'
- name: BGSessions
  endpoint:
    path: /Configuration/Secure Remote Access/Database Configuration
    method: POST
    data_selector: session_data
    params: {}
- name: event_forwarding
  endpoint:
    path: /connectors
    method: POST
- name: Secrets Safe
  endpoint:
    path: /secrets/safe
    method: GET
    data_selector: secrets
    params: {}
- name: Edge Installation
  endpoint:
    path: /edge/installation
    method: GET
    data_selector: settings
    params: {}
- name: Firefox Installation
  endpoint:
    path: /firefox/installation
    method: GET
    data_selector: settings
    params: {}
- name: resource_broker
  endpoint:
    path: /resources/broker
    method: GET
    data_selector: brokers
- name: resource_broker_gateway
  endpoint:
    path: /resource_broker/gateway
    method: GET
- name: resource_broker_listener
  endpoint:
    path: /resource_broker/listener
    method: GET
- name: resource_broker_management_agent
  endpoint:
    path: /resource_broker/management_agent
    method: GET
- name: password_services
  endpoint:
    path: /resource_broker/password_services
    method: GET
- name: password_services_framework_agent
  endpoint:
    path: /resource_broker/password_services_framework_agent
    method: GET
- name: connector_services_agent
  endpoint:
    path: /resource_broker/connector_services_agent
    method: GET
- name: directory_services
  endpoint:
    path: /resource_broker/directory_services
    method: GET
- name: discovery_scanner
  endpoint:
    path: /resource_broker/discovery_scanner
    method: GET
- name: session_monitoring
  endpoint:
    path: /resource_broker/session_monitoring
    method: GET
- name: SAML Identity Provider
  endpoint:
    path: /SAML/AssertionConsumerService.aspx
    method: POST
- name: ServiceProvider
  endpoint:
    path: /SAML/AssertionConsumerService.aspx
    method: POST
    data_selector: SAMLConfiguration
    params: {}
- name: AD FS Relying Party Trust
  endpoint:
    path: /adfs/management/relyingpartytrust
    method: POST
- name: SAML Identity Provider
  endpoint:
    path: /SAML/IdentityProvider
    method: POST
    data_selector: claims
    params: {}
- name: SAML Identity Provider
  endpoint:
    path: /SAMLConfiguration
    method: POST
    data_selector: identityProviders
- name: SAML Identity Provider
  endpoint:
    path: /saml/identity-provider
    method: POST
    data_selector: provider
    params: {}
- name: Password Safe
  endpoint:
    path: /bips/docs/pathfinder-password-safe
    method: GET
- name: SAML identity provider
  endpoint:
    path: /saml/configuration
    method: POST
    data_selector: SAML configuration settings
    params: {}
- name: user_management
  endpoint:
    path: /Configuration/Role-Based-Access/User-Management
    method: GET
- name: group_synchronization
  endpoint:
    path: /Configuration/Role-Based-Access/Entra-ID-Group-Synchronization
    method: POST
- name: group_permissions
  endpoint:
    path: /api/group/permissions
    method: GET
    data_selector: permissions
- name: features_permissions
  endpoint:
    path: /api/features/permissions
    method: GET
    data_selector: features
- name: Smart Rules
  endpoint:
    path: /api/smart_rules
    method: GET
- name: Managed Accounts
  endpoint:
    path: /api/managed_accounts
    method: GET
- name: Managed Systems
  endpoint:
    path: /api/managed_systems
    method: GET
- name: Assets
  endpoint:
    path: /api/assets
    method: GET
- name: managed_systems
  endpoint:
    path: /managed_systems
    method: GET
    data_selector: records
- name: managed_accounts
  endpoint:
    path: /managed_accounts
    method: GET
    data_selector: records
- name: database_instances
  endpoint:
    path: /path/to/database_instances
    method: POST
    data_selector: instances
    params: {}
- name: application_details
  endpoint:
    path: /configuration/privileged_access_management/applications
    method: GET
    data_selector: applications
    params: {}
- name: managed_accounts
  endpoint:
    path: /managed_accounts
    method: GET
    data_selector: managed_accounts
    params: {}
- name: custom_platform
  endpoint:
    path: /api/custom_platforms
    method: POST
    data_selector: data
    params: {}
- name: application_platform
  endpoint:
    path: /api/application_platforms
    method: POST
    data_selector: data
    params: {}
- name: functional_account
  endpoint:
    path: /configuration/functional_accounts
    method: POST
    data_selector: account
    params: {}
- name: managed_account
  endpoint:
    path: /managed_systems/accounts
    method: POST
    data_selector: account
    params: {}
- name: public_key
  endpoint:
    path: /managed_accounts/public_key
    method: GET
    data_selector: current_public_key
    params: {}
- name: ssh_key_policy
  endpoint:
    path: /ssh_key_policies
    method: POST
    data_selector: policy_details
    params: {}
- name: minimum_retention_for_old_password
  endpoint:
    path: /settings/minimum_retention_for_old_password
    method: GET
    data_selector: default
    params:
      default: 30
      range: 1 - 360
- name: number_of_old_passwords_to_retain
  endpoint:
    path: /settings/number_of_old_passwords_to_retain
    method: GET
    data_selector: default
    params:
      default: 5
      range: 1 - 30
- name: retention_period_for_sent_mail_log
  endpoint:
    path: /settings/retention_period_for_sent_mail_log
    method: GET
    data_selector: default
    params:
      default: 30
      range: 1 - 365
- name: retention_period_for_admin_log
  endpoint:
    path: /settings/retention_period_for_admin_log
    method: GET
    data_selector: default
    params:
      default: 90
      range: 30 - 365
- name: retention_period_for_password_change_log
  endpoint:
    path: /settings/retention_period_for_password_change_log
    method: GET
    data_selector: default
    params:
      default: 90
      range: 30 - 365
- name: retention_period_for_password_test_results
  endpoint:
    path: /settings/retention_period_for_password_test_results
    method: GET
    data_selector: default
    params:
      default: 30
      range: 10 - 90
- name: retention_period_for_system_event_log
  endpoint:
    path: /settings/retention_period_for_system_event_log
    method: GET
    data_selector: default
    params:
      default: 365
      range: 5 - 1095
- name: session_settings
  endpoint:
    path: /settings/session
    method: GET
    data_selector: settings
    params: {}
- name: host_key_algorithms
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\BeyondTrust\PBPS\SessionManager\ssh_proxy\client_host_key_algorithms
    method: SET
    data_selector: algorithms
    params: {}
- name: kex_algorithms
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\BeyondTrust\PBPS\SessionManager\ssh_proxy\kex_algorithms
    method: SET
    data_selector: algorithms
    params: {}
- name: mac_algorithms
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\BeyondTrust\PBPS\SessionManager\ssh_proxy\client_macs
    method: SET
    data_selector: algorithms
    params: {}
- name: ciphers
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\BeyondTrust\PBPS\SessionManager\ssh_proxy\client_ciphers
    method: SET
    data_selector: algorithms
    params: {}
- name: rsa_host_key_size
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\BeyondTrust\PBPS\SessionManager\ssh_proxy\rsa_host_key_size
    method: SET
    data_selector: size
    params:
      valid_values:
      - 2048
      - 3072
      - 4096
- name: password_change_agent
  endpoint:
    path: /configuration/privileged-access-management-agents/password-change-agent
    method: GET
- name: mail_agent
  endpoint:
    path: /configuration/privileged-access-management-agents/mail-agent
    method: GET
- name: password_test_agent
  endpoint:
    path: /configuration/privileged-access-management-agents/password-test-agent
    method: GET
- name: session_agents
  endpoint:
    path: /configuration/privileged-access-management-agents/session-agents
    method: GET
- name: global_settings
  endpoint:
    path: /configuration/privileged-access-management/global-settings
    method: GET
- name: ticket_systems
  endpoint:
    path: /api/ticket_systems
    method: POST
    data_selector: ticket_system
    params: {}
- name: agents
  endpoint:
    path: /api/agents
    method: GET
    data_selector: agents
    params: {}
- name: accounts
  endpoint:
    path: /bips/docs/ps-cloud-accounts
    method: GET
    data_selector: managed_accounts
    params: {}
- name: requests
  endpoint:
    path: /bips/docs/ps-cloud-requests
    method: GET
    data_selector: requests
    params: {}
- name: approvals
  endpoint:
    path: /bips/docs/ps-cloud-approvals
    method: GET
    data_selector: approvals
    params: {}
- name: approvals
  endpoint:
    path: /api/approvals
    method: GET
    data_selector: requests
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: resource_broker
  endpoint:
    path: /bips/docs/ps-cloud-resource-broker-install
    method: GET
    data_selector: resources
    params: {}
- name: AWSWebApp
  endpoint:
    path: /AWSWebApp.ini
    method: GET
    data_selector: records
- name: BIWebApp
  endpoint:
    path: /BIWebApp.ini
    method: GET
    data_selector: records
- name: GoogleWebApp
  endpoint:
    path: /GoogleWebApp.ini
    method: GET
    data_selector: records
- name: MSWebApp
  endpoint:
    path: /MSWebApp.ini
    method: GET
    data_selector: records
- name: ssms_database
  endpoint:
    path: /ssms_database.ini
    method: GET
    data_selector: records
- name: Smart Rules
  endpoint:
    path: /bips/docs/bi-cloud-smart-rules
    method: GET
- name: Smart Groups
  endpoint:
    path: /bips/docs/bi-cloud-smart-groups
    method: GET
- name: Smart Rule Filters
  endpoint:
    path: /smart_rules/filters
    method: GET
    data_selector: filters
- name: Smart Group Categories
  endpoint:
    path: /smart_groups/categories
    method: GET
    data_selector: categories
- name: managed_systems
  endpoint:
    path: /api/v1/managed_systems
    method: GET
    data_selector: managed_systems
- name: managed_accounts
  endpoint:
    path: /bi-cloud-managed-accounts
    method: GET
    data_selector: Managed Accounts
    params: {}
- name: managed_accounts
  endpoint:
    path: /managed_accounts
    method: GET
- name: managed_account_aliases
  endpoint:
    path: /managed_account_aliases
    method: GET
- name: accounts
  endpoint:
    path: /bips/docs/ps-cloud-accounts
    method: GET
- name: requests
  endpoint:
    path: /bips/docs/ps-cloud-requests
    method: GET
- name: approvals
  endpoint:
    path: /bips/docs/ps-cloud-approvals
    method: GET
- name: safes
  endpoint:
    path: /safes
    method: GET
    data_selector: safes
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
- name: reports
  endpoint:
    path: /bips/docs/bi-analytics-and-reporting
    method: GET
    data_selector: reports
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: Account Delta by Day
  endpoint:
    path: /reports/account-delta-by-day
    method: GET
    data_selector: records
- name: Account Delta by Month
  endpoint:
    path: /reports/account-delta-by-month
    method: GET
    data_selector: records
- name: Account Delta by Week
  endpoint:
    path: /reports/account-delta-by-week
    method: GET
    data_selector: records
- name: Account Last Login
  endpoint:
    path: /reports/account-last-login
    method: GET
    data_selector: records
- name: Account Password Age by Last Scan
  endpoint:
    path: /reports/account-password-age
    method: GET
    data_selector: records
- name: Database User List
  endpoint:
    path: /reports/database-user-list
    method: GET
    data_selector: records
- name: User Account List
  endpoint:
    path: /reports/user-account-list
    method: GET
    data_selector: records
- name: AWS Scan Target Collector
  endpoint:
    params:
      Region: ''
      Access Key ID: ''
      Secret Access Key ID: ''
- name: Azure Scan Target Collector
  endpoint:
    params:
      Region: ''
      Client ID: ''
      Client Server: ''
      Tenant ID: ''
      Subscription ID: ''
- name: Google Cloud Scan Target Collector
  endpoint:
    params:
      Server: ''
      Project Name: ''
      Key File: ''
- name: Hyper-V Scan Target Collector
  endpoint:
    params:
      Server: ''
      Username: ''
      Password: ''
- name: Rackspace Scan Target Collector
  endpoint:
    params:
      Account Type: ''
      Username: ''
      API Key: ''
- name: group_permissions
  endpoint:
    path: /api/groups/permissions
    method: POST
    data_selector: permissions
    params: {}
- name: smart_groups
  endpoint:
    path: /api/groups/smart-groups
    method: GET
    data_selector: smartGroups
    params: {}
- name: api_registrations
  endpoint:
    path: /api/groups/api-registrations
    method: GET
    data_selector: apiRegistrations
    params: {}
- name: group_creation
  endpoint:
    path: /Configuration/Groups/Create
    method: POST
    data_selector: group_creation
    params: {}
- name: quarantine_user_accounts
  endpoint:
    path: /Configuration/UserManagement/Quarantine
    method: POST
    data_selector: quarantine_user
    params: {}
- name: api_access_configuration
  endpoint:
    path: /Configuration/APIAccess
    method: POST
    data_selector: api_access
    params: {}
- name: application_user
  endpoint:
    path: /users/application
    method: POST
- name: ldap_user
  endpoint:
    path: /users/ldap
    method: POST
- name: entra_id_user
  endpoint:
    path: /users/entra
    method: POST
- name: Edge Installation
  endpoint:
    path: /edge/installation
    method: POST
    data_selector: installation_data
    params: {}
- name: Firefox Installation
  endpoint:
    path: /firefox/installation
    method: POST
    data_selector: installation_data
    params: {}
- name: enterprise_application
  endpoint:
    path: /api/enterprise-applications
    method: POST
    data_selector: application
    params:
      assignment_required: 'No'
      allow_public_client_flows: 'Yes'
- name: radius_server_configuration
  endpoint:
    path: /configuration/radius
    method: POST
    data_selector: radius_server
    params:
      alias: Duo
      authentication_mechanism: PAP
      initial_request: Forward User Name and Password
- name: radius_authentication_options
  endpoint:
    path: /authentication/radius/options
    method: PUT
    data_selector: radius_options
    params:
      alternate_directory_attribute: extensionName
      enable_for_new_directory_accounts: true
- name: SAML Identity Provider
  endpoint:
    path: /SAML/AssertionConsumerService.aspx
    method: POST
    data_selector: response
    params: {}
- name: ServiceProvider
  endpoint:
    path: /saml/ServiceProvider
    method: POST
    data_selector: SAMLConfiguration
- name: PartnerIdentityProvider
  endpoint:
    path: /saml/PartnerIdentityProvider
    method: POST
    data_selector: PartnerIdentityProviders
- name: SAML Identity Provider
  endpoint:
    path: /saml/identity_provider
    method: POST
    data_selector: provider_details
- name: SAML application
  endpoint:
    path: /saml/application
    method: POST
    data_selector: application
    params: {}
- name: SAML Identity Provider
  endpoint:
    path: /bips/docs/on-prem-bi-authentication-ping-identity
    method: GET
    data_selector: SAML Identity Providers
    params: {}
- name: Password Safe App
  endpoint:
    path: /bips/docs/api
    method: GET
    data_selector: records
    params: {}
- name: group_permissions
  endpoint:
    path: /api/groups/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: user_audits
  endpoint:
    path: /api/user/audits
    method: GET
    data_selector: audit_records
    params: {}
- name: Entra ID Group
  endpoint:
    path: /add/EntraIDGroup
    method: POST
- name: Active Directory Group
  endpoint:
    path: /add/ActiveDirectoryGroup
    method: POST
- name: LDAP Group
  endpoint:
    path: /add/LDAPGroup
    method: POST
- name: general_target_data
  endpoint:
    path: /general_target_data
    method: GET
    data_selector: records
    params: {}
- name: target_machine_information
  endpoint:
    path: /target_machine_information
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /asset
    method: GET
    data_selector: records
    params: {}
- name: open_ports
  endpoint:
    path: /open_ports
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: records
    params: {}
- name: software
  endpoint:
    path: /software
    method: GET
    data_selector: records
    params: {}
- name: scheduled_tasks
  endpoint:
    path: /scheduled_tasks
    method: GET
    data_selector: records
    params: {}
- name: event_forwarder_messages
  endpoint:
    path: /api/event_forwarder/messages
    method: GET
    data_selector: messages
    params: {}
- name: event_fields
  endpoint:
    path: /passwordsafe/event_fields
    method: GET
    data_selector: fields
- name: event_triggers
  endpoint:
    path: /passwordsafe/event_triggers
    method: GET
    data_selector: triggers
- name: hardware_events
  endpoint:
    path: /passwordsafe/hardware_events
    method: GET
    data_selector: hardware_events
- name: monitored_services
  endpoint:
    path: /passwordsafe/monitored_services
    method: GET
    data_selector: services
- name: performance_counters
  endpoint:
    path: /passwordsafe/performance_counters
    method: GET
    data_selector: counters
- name: syslog_output_formats
  endpoint:
    path: /api/syslog/output/formats
    method: GET
    data_selector: formats
- name: dedicated_account_smart_rule
  endpoint:
    path: /configuration/role_based_access/directory_queries
    method: POST
    data_selector: results
    params: {}
- name: managed_account_smart_rule
  endpoint:
    path: /smart_rules/managed_account
    method: POST
    data_selector: results
    params: {}
- name: entra_id_smart_rule
  endpoint:
    path: /smart_rules/entra_id
    method: POST
    data_selector: results
    params: {}
- name: managed_systems
  endpoint:
    path: /managed_systems
    method: GET
    data_selector: managed_systems
    params: {}
- name: managed_accounts
  endpoint:
    path: /managed_accounts
    method: GET
    data_selector: managed_accounts
    params: {}
- name: smart_rules
  endpoint:
    path: /smart_rules
    method: GET
    data_selector: smart_rules
    params: {}
- name: database_instances
  endpoint:
    path: /api/database_instances
    method: GET
    data_selector: instances
- name: database_instance
  endpoint:
    path: /api/v1/database_instances
    method: GET
    data_selector: records
    params: {}
- name: applications
  endpoint:
    path: /api/applications
    method: POST
    data_selector: applications
- name: SAP
  endpoint:
    path: /add/sap
    method: POST
    data_selector: result
    params:
      instance_number: required
      client_id: required
- name: custom_platform
  endpoint:
    path: /api/custom_platforms
    method: POST
    data_selector: platforms
- name: application_platform
  endpoint:
    path: /api/application_platforms
    method: POST
    data_selector: platforms
- name: Functional Account
  endpoint:
    path: /bips/docs/ps-create-functional-account
    method: POST
- name: Managed Account
  endpoint:
    path: /bips/docs/ps-create-managed-account
    method: POST
- name: SSH Key Policy
  endpoint:
    path: /configuration/privileged_access_management/ssh_key_policies
    method: POST
    data_selector: data
    params: {}
- name: session_monitoring
  endpoint:
    path: /api/session_monitoring
    method: GET
    data_selector: settings
    params: {}
- name: purging
  endpoint:
    path: /api/purging
    method: GET
    data_selector: settings
    params: {}
- name: miscellaneous
  endpoint:
    path: /api/miscellaneous
    method: GET
    data_selector: settings
    params: {}
- name: email_notifications
  endpoint:
    path: /bips/docs/ps-customize-email-notifications
    method: GET
    data_selector: notifications
    params: {}
- name: access_policy
  endpoint:
    path: /configuration/privileged_access_management_policies/access_policies
    method: POST
- name: connection_profile
  endpoint:
    path: /configuration/privileged_access_management_policies/connection_profiles
    method: POST
- name: host_key_algorithms
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\client_host_key_algorithms
    method: REG_MULTI_SZ
- name: server_host_key_algorithms
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\host_key_algorithms
    method: REG_MULTI_SZ
- name: kex_algorithms
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\kex_algorithms
    method: REG_MULTI_SZ
- name: client_kex_algorithms
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\client_kex_algorithms
    method: REG_MULTI_SZ
- name: client_macs
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\client_macs
    method: REG_MULTI_SZ
- name: server_macs
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\macs
    method: REG_MULTI_SZ
- name: client_ciphers
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\client_ciphers
    method: REG_MULTI_SZ
- name: server_ciphers
  endpoint:
    path: HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Beyondtrust\PBPS\SessionManager\ssh_proxy\ciphers
    method: REG_MULTI_SZ
- name: ssh_proxy
  endpoint:
    path: /services/data/vXX.X/sobjects/ssh_proxy
    method: GET
    data_selector: records
- name: rdp_proxy
  endpoint:
    path: /services/data/vXX.X/sobjects/rdp_proxy
    method: GET
    data_selector: records
- name: password_change_agent
  endpoint:
    params:
      active_change_tasks: number of accounts to change
      check_change_queue_every: seconds
      retry_failed_changes_after: minutes
      maximum_retries: number of times to retry
      unlimited_retries: enable/disable
- name: mail_agent
  endpoint:
    params:
      send_mail_every: minutes
      delete_messages_after: attempts
- name: password_test_agent
  endpoint:
    params: {}
- name: session_agents
  endpoint:
    params:
      display_name: name in Password Safe web portal
      host_name_override: custom host name
- name: global_settings
  endpoint:
    params:
      allow_remote_proxy_selection: true/false
- name: Ticket System
  endpoint:
    path: /api/ticket-systems
    method: POST
    data_selector: ticketSystem
    params: {}
- name: Password Safe Agents
  endpoint:
    path: /api/agents
    method: GET
    data_selector: agents
    params: {}
- name: worker_node
  endpoint:
    path: /configuration/privileged-access-management/worker-nodes
    method: GET
    data_selector: nodes
- name: managed_account
  endpoint:
    path: /managed-accounts
    method: GET
    data_selector: accounts
- name: workgroup
  endpoint:
    path: /workgroups
    method: GET
    data_selector: workgroups
- name: accounts
  endpoint:
    path: /api/accounts
    method: GET
    data_selector: accounts
- name: requests
  endpoint:
    path: /api/requests
    method: GET
    data_selector: requests
- name: approvals
  endpoint:
    path: /api/approvals
    method: GET
    data_selector: approvals
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
- name: admin_sessions
  endpoint:
    path: /api/admin_sessions
    method: GET
    data_selector: admin_sessions
- name: rdp_session
  endpoint:
    path: /api/v1/rdp/session
    method: POST
    data_selector: session
    params: {}
- name: ssh_session
  endpoint:
    path: /api/v1/ssh/session
    method: POST
    data_selector: session
    params: {}
- name: Requests
  endpoint:
    path: /bips/docs/ps-requests
    method: GET
    data_selector: requests
    params: {}
- name: approvals
  endpoint:
    path: /approvals
    method: GET
    data_selector: requests
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: records
- name: Dashboard
  endpoint:
    path: /bips/docs/bi-on-prem-navigation#menu
    method: GET
    data_selector: features
- name: Assets
  endpoint:
    path: /bips/docs/bi-assets
    method: GET
    data_selector: assets
- name: Smart Rules
  endpoint:
    path: /bips/docs/bi-smart-rules
    method: GET
    data_selector: smart_rules
- name: Discovery
  endpoint:
    path: /bips/docs/bi-on-prem-discovery-scans
    method: GET
    data_selector: discovery_scans
- name: Managed Systems
  endpoint:
    path: /bips/docs/bi-managed-systems
    method: GET
    data_selector: managed_systems
- name: Managed Accounts
  endpoint:
    path: /bips/docs/bi-managed-accounts
    method: GET
    data_selector: managed_accounts
- name: Password Safe
  endpoint:
    path: /bips/docs/bi-on-prem-password-safe
    method: GET
    data_selector: password_safe
- name: Secrets Safe
  endpoint:
    path: /bips/docs/bi-secrets-safe
    method: GET
    data_selector: secrets_safe
- name: Analytics & Reporting
  endpoint:
    path: /bips/docs/bi-analytics
    method: GET
    data_selector: analytics_reporting
- name: Configuration
  endpoint:
    path: /bips/docs/configuration
    method: GET
    data_selector: configuration
- name: assets
  endpoint:
    path: /bips/docs/api/assets
    method: GET
    data_selector: assets
- name: discovery_scans
  endpoint:
    path: /discovery/scans
    method: GET
    data_selector: scans
    params: {}
- name: AWS Policy
  endpoint:
    path: /create-policy
    method: POST
    data_selector: PolicyDocument
    params: {}
- name: aws_scan_target_collector
  endpoint:
    path: /api/aws
    method: POST
    data_selector: data
    params: {}
- name: azure_scan_target_collector
  endpoint:
    path: /api/azure
    method: POST
    data_selector: data
    params: {}
- name: google_cloud_scan_target_collector
  endpoint:
    path: /api/google-cloud
    method: POST
    data_selector: data
    params: {}
- name: hyper_v_scan_target_collector
  endpoint:
    path: /api/hyper-v
    method: POST
    data_selector: data
    params: {}
- name: rackspace_scan_target_collector
  endpoint:
    path: /api/rackspace
    method: POST
    data_selector: data
    params: {}
- name: process_details
  endpoint:
    path: /process/details
    method: GET
    data_selector: records
- name: discovery
  endpoint:
    path: /discovery
    method: GET
    data_selector: records
- name: actions
  endpoint:
    path: /actions
    method: GET
    data_selector: records
- name: trusted_application_protection
  endpoint:
    path: /trusted/application/protection
    method: GET
    data_selector: records
- name: user_experience
  endpoint:
    path: /user/experience
    method: GET
    data_selector: records
- name: privileged_logons
  endpoint:
    path: /privileged/logons
    method: GET
    data_selector: records
- name: summary_dashboard
  endpoint:
    path: /summary_dashboard
    method: GET
    data_selector: dashboard_data
- name: events_dashboard
  endpoint:
    path: /events_dashboard
    method: GET
    data_selector: event_data
- name: discovery_dashboard
  endpoint:
    path: /discovery_dashboard
    method: GET
    data_selector: discovery_data
- name: actions_dashboard
  endpoint:
    path: /actions_dashboard
    method: GET
    data_selector: actions_data
- name: target_types_dashboard
  endpoint:
    path: /target_types_dashboard
    method: GET
    data_selector: target_types_data
- name: user_experience_dashboard
  endpoint:
    path: /user_experience_dashboard
    method: GET
    data_selector: user_experience_data
- name: privileged_logons_dashboard
  endpoint:
    path: /privileged_logons_dashboard
    method: GET
    data_selector: privileged_logons_data
- name: privileged_account_management_dashboard
  endpoint:
    path: /privileged_account_management_dashboard
    method: GET
    data_selector: privileged_account_management_data
- name: trusted_application_protection_dashboard
  endpoint:
    path: /trusted_application_protection_dashboard
    method: GET
    data_selector: trusted_application_protection_data
- name: privileged_account_management
  endpoint:
    path: /privileged_account_management
    method: GET
    data_selector: events
    params: {}
- name: endpoint_privilege_management_events
  endpoint:
    path: /endpoint_privilege_management_events
    method: GET
    data_selector: events
    params: {}
- name: endpoint_privilege_management_exclusions
  endpoint:
    path: /endpoint_privilege_management_exclusions
    method: GET
    data_selector: exclusions
    params: {}
- name: endpoint_privilege_management_policies
  endpoint:
    path: /endpoint_privilege_management_policies
    method: GET
    data_selector: policies
    params: {}
- name: policy_users
  endpoint:
    path: /api/policy_users
    method: GET
    data_selector: policy_users
- name: agents
  endpoint:
    path: /api/agents
    method: GET
    data_selector: agents
- name: file_integrity_monitoring
  endpoint:
    path: /api/file_integrity_monitoring
    method: GET
    data_selector: events
- name: session_monitoring
  endpoint:
    path: /api/session_monitoring
    method: GET
    data_selector: sessions
- name: managed_accounts
  endpoint:
    path: /managed_accounts
    method: GET
- name: user_management
  endpoint:
    path: /user_management
    method: GET
- name: Add Users and Groups
  endpoint:
    path: /add-users-groups
    method: GET
    data_selector: permissions
    params: {}
- name: Manage Folders
  endpoint:
    path: /manage-folders
    method: GET
    data_selector: folders
    params: {}
- name: Add Secrets
  endpoint:
    path: /add-secrets
    method: POST
    data_selector: secrets
    params: {}
- name: View Secrets
  endpoint:
    path: /view-secrets
    method: GET
    data_selector: secretDetails
    params: {}
- name: reports
  endpoint:
    path: /analytics/reports
    method: GET
    data_selector: reports
    params: {}
- name: report_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: pivot_grid
  endpoint:
    path: /pivotgrid
    method: GET
    data_selector: pivot_grid_data
- name: Account Delta by Day
  endpoint:
    path: /reports/account_delta_by_day
    method: GET
    data_selector: records
- name: Account Delta by Month
  endpoint:
    path: /reports/account_delta_by_month
    method: GET
    data_selector: records
- name: Account Delta by Week
  endpoint:
    path: /reports/account_delta_by_week
    method: GET
    data_selector: records
- name: Account Last Login
  endpoint:
    path: /reports/account_last_login
    method: GET
    data_selector: records
- name: Account Password Age by Last Scan
  endpoint:
    path: /reports/account_password_age_by_last_scan
    method: GET
    data_selector: records
- name: Database User List
  endpoint:
    path: /reports/database_user_list
    method: GET
    data_selector: records
- name: User Account List
  endpoint:
    path: /reports/user_account_list
    method: GET
    data_selector: records
- name: Functional Account
  endpoint:
    path: /Configuration/Privileged Access Management/Functional Accounts
    method: POST
- name: Managed System
  endpoint:
    path: /Managed Systems
    method: POST
- name: Managed Account
  endpoint:
    path: /Managed Accounts
    method: POST
- name: Secrets Safe
  endpoint:
    path: /secrets-safe
    method: GET
    data_selector: secrets
    params: {}
- name: Edge Extension
  endpoint:
    path: /extensions/edge
    method: POST
    data_selector: installation_settings
    params:
      installation_mode: force_installed
      update_url: https://edge.microsoft.com/extensionwebstorebase/v1/crx
- name: Firefox Extension
  endpoint:
    path: /extensions/firefox
    method: POST
    data_selector: installation_settings
    params:
      install_url: https://addons.mozilla.org/firefox/downloads/latest/beyondtrust-workforcepasswords/latest.xpi
      prevent_disable: workforce-passwords@beyondtrust.com
- name: RADIUS
  endpoint:
    path: /bips/docs/on-prem-bi-authentication-two-factor-authentication
    method: POST
- name: Active Directory Credential
  endpoint:
    method: POST
- name: LDAP Credential
  endpoint:
    method: POST
- name: Entra ID Credential
  endpoint:
    method: POST
- name: SAML Identity Provider
  endpoint:
    path: /SAML/AssertionConsumerService.aspx
    method: POST
- name: ServiceProvider
  endpoint:
    path: /saml.config
    method: POST
    data_selector: SAMLConfiguration
    params: {}
- name: PartnerIdentityProvider
  endpoint:
    path: /saml.config
    method: POST
    data_selector: PartnerIdentityProviders
    params: {}
- name: SAML Identity Provider
  endpoint:
    path: /SAML/IdentityProvider
    method: POST
    data_selector: identity_provider
    params: {}
- name: Service Provider
  endpoint:
    path: /SAML/ServiceProvider
    method: GET
    data_selector: service_provider
    params: {}
- name: SAML Configuration
  endpoint:
    path: /saml/configuration
    method: POST
    data_selector: configuration
- name: group_permissions
  endpoint:
    path: /api/groups/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: user_audits
  endpoint:
    path: /api/user/audits
    method: GET
    data_selector: audits
    params: {}
- name: local_group
  endpoint:
    path: /configuration/role-based-access/user-management/groups
    method: POST
    data_selector: groups
- name: active_directory_group
  endpoint:
    path: /configuration/role-based-access/user-management/groups/ad
    method: POST
    data_selector: groups
- name: entra_id_group
  endpoint:
    path: /configuration/role-based-access/user-management/groups/entra-id
    method: POST
    data_selector: groups
- name: ldap_group
  endpoint:
    path: /configuration/role-based-access/user-management/groups/ldap
    method: POST
    data_selector: groups
- name: general_target_data
  endpoint:
    path: /general/target/data
    method: GET
    data_selector: records
- name: target_machine_information
  endpoint:
    path: /target/machine/information
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /asset
    method: GET
    data_selector: records
- name: open_ports
  endpoint:
    path: /open/ports
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: records
- name: software
  endpoint:
    path: /software
    method: GET
    data_selector: records
- name: scheduled_tasks
  endpoint:
    path: /scheduled/tasks
    method: GET
    data_selector: records
- name: Event Forwarder Message Fields
  endpoint:
    path: /bips/docs/on-prem-bi-event-forwarder-message-fields
    method: GET
    data_selector: message components
    params: {}
- name: password_safe_events
  endpoint:
    path: /api/v1/password_safe/events
    method: GET
    data_selector: events
- name: syslog_format_newline_delimited
  endpoint:
    path: /bips/docs/on-prem-bi-sample-syslog-output
    method: GET
    data_selector: records
- name: syslog_format_tab_delimited
  endpoint:
    path: /bips/docs/on-prem-bi-sample-syslog-output
    method: GET
    data_selector: records
- name: json_syslog_format
  endpoint:
    path: /bips/docs/on-prem-bi-sample-syslog-output
    method: GET
    data_selector: records
- name: Password Safe API
  endpoint:
    path: /api/v1/passwordsafe
    method: GET
    data_selector: records
    params: {}
- name: U-Series Appliance
  endpoint:
    path: /services/data/vXX.X/sobjects/U-SeriesAppliance
    method: GET
    data_selector: records
    params: {}
- name: Azure SQL Database
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Amazon RDS
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: security_updates
  endpoint:
    path: /software-and-licensing/security-updates
    method: GET
    data_selector: updates
    params: {}
- name: security_update_history
  endpoint:
    path: /software-and-licensing/security-update-history
    method: GET
    data_selector: history
    params: {}
- name: dependency_management
  endpoint:
    path: /software-and-licensing/security-updates/dependency-management
    method: GET
    data_selector: dependencies
    params: {}
- name: High Availability
  endpoint:
    path: /bips/docs/u-series-business-continuity
    method: GET
- name: HighAvailability
  endpoint:
    path: /UVMInterface/api/HighAvailability
    method: GET
    data_selector: Role
    params: {}
- name: Set Windows License
  endpoint:
    path: /BaseProductLicense/setwindowslicense
    method: POST
- name: Skip Windows License Page
  endpoint:
    path: /BaseProductLicense/skippage
    method: POST
- name: Deployment Wizard Automation
  endpoint:
    path: /DeploymentWizardAutomation
    method: POST
- name: Get Deployment Wizard Status
  endpoint:
    path: /DeploymentWizardAutomation
    method: GET
- name: Configuration Wizard Automation
  endpoint:
    path: /ConfigurationWizardAutomation
    method: POST
- name: Get Configuration Wizard Status
  endpoint:
    path: /ConfigurationWizardAutomation
    method: GET
- name: Appliance Configuration Status
  endpoint:
    path: /UVMInterface/api/UVMConfiguration/IsApplianceConfigured
    method: GET
- name: Network Details
  endpoint:
    path: /ApplianceInfoAutomation
    method: GET
- name: success_criteria_level_A
  endpoint:
    path: /success_criteria_level_A
    method: GET
    data_selector: criteria
    params: {}
- name: success_criteria_level_AA
  endpoint:
    path: /success_criteria_level_AA
    method: GET
    data_selector: criteria
    params: {}
- name: success_criteria_level_AAA
  endpoint:
    path: /success_criteria_level_AAA
    method: GET
    data_selector: criteria
    params: {}
- name: functional_performance_criteria
  endpoint:
    path: /functional_performance_criteria
    method: GET
    data_selector: criteria
    params: {}
- name: support_documentation_services
  endpoint:
    path: /support_documentation_services
    method: GET
    data_selector: criteria
    params: {}
- name: update
  endpoint:
    path: /productupdates.beyondtrust.com
    method: GET
    data_selector: updates
    params: {}
- name: App Protection Policy
  endpoint:
    path: /apps/app-protection-policies
    method: POST
    data_selector: policy
    params: {}
- name: ManagedAccounts
  endpoint:
    path: /api/ManagedAccounts
    method: GET
    data_selector: records
- name: Credentials
  endpoint:
    path: /api/Credentials
    method: GET
    data_selector: records
- name: Requests
  endpoint:
    path: /api/Requests
    method: POST
    data_selector: records
- name: ListAssets
  endpoint:
    path: Workgroups/{workgroupID}/Assets
    method: GET
    params: {}
- name: ListWorkgroups
  endpoint:
    path: Workgroups
    method: GET
    params: {}
- name: ListSystems
  endpoint:
    path: ManagedSystems
    method: GET
    params: {}
- name: ListAccounts
  endpoint:
    path: ManagedAccounts
    method: GET
    params: {}
- name: ListAliases
  endpoint:
    path: Aliases
    method: GET
    params: {}
- name: ListGroups
  endpoint:
    path: UserGroups
    method: GET
    params: {}
- name: ListGroupMembership
  endpoint:
    path: UserGroups/{userGroupId}/Users
    method: GET
    params: {}
- name: ListRequests
  endpoint:
    path: Requests
    method: GET
    params: {}
- name: ListRoles
  endpoint:
    path: Roles
    method: GET
    params: {}
- name: ListSmartRules
  endpoint:
    path: SmartRules
    method: GET
    params: {}
- name: Request
  endpoint:
    path: Requests
    method: POST
    params: {}
- name: ISARequests
  endpoint:
    path: ISARequests
    method: POST
    params: {}
- name: Retrieve
  endpoint:
    path: Credentials/{requestId}
    method: GET
    params: {}
- name: Release
  endpoint:
    path: Requests/{requestId}/Checkin
    method: PUT
    params: {}
- name: ImportFile
  endpoint:
    path: Imports
    method: POST
    params: {}
- name: ForceReset
  endpoint:
    path: ManagedAccounts
    method: GET
    params: {}
- name: AddressGroups
  endpoint:
    path: /AddressGroups
    method: GET
    data_selector: AddressGroups
    params: {}
- name: Addresses
  endpoint:
    path: /Addresses
    method: GET
    data_selector: Addresses
    params: {}
- name: ApiRegistrations
  endpoint:
    path: /ApiRegistrations
    method: GET
    data_selector: ApiRegistrations
    params: {}
- name: Assets
  endpoint:
    path: /Assets
    method: GET
    data_selector: Assets
    params: {}
- name: access_levels
  endpoint:
    path: /AccessLevels
    method: GET
    data_selector: ''
    params: {}
- name: user_group_smart_rule_access_levels
  endpoint:
    path: /UserGroups/{userGroupId}/SmartRules/{smartRuleId}/AccessLevels
    method: POST
    data_selector: ''
    params: {}
- name: address_groups
  endpoint:
    path: /AddressGroups
    method: GET
    data_selector: ''
    params: {}
- name: organization_address_groups
  endpoint:
    path: /Organizations/{orgID}/AddressGroups
    method: GET
    data_selector: ''
    params: {}
- name: address_group_addresses
  endpoint:
    path: /AddressGroups/{addressGroupId}/Addresses
    method: GET
    data_selector: ''
    params: {}
- name: create_address
  endpoint:
    path: /AddressGroups/{id}/Addresses
    method: POST
    data_selector: ''
    params: {}
- name: delete_address_group
  endpoint:
    path: /AddressGroups/{addressGroupId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_addresses_in_group
  endpoint:
    path: /AddressGroups/{addressGroupId}/Addresses
    method: DELETE
    data_selector: ''
    params: {}
- name: assets
  endpoint:
    path: /Assets/{id}
    method: PUT
    data_selector: Asset
    params: {}
- name: search_assets
  endpoint:
    path: /Assets/Search
    method: POST
    data_selector: Assets
    params:
      limit: 100000
      offset: 0
- name: delete_asset
  endpoint:
    path: /Assets/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: smart_rule_assets
  endpoint:
    path: /SmartRules/{id}/Assets
    method: GET
    data_selector: Assets
    params:
      limit: 100000
      offset: 0
- name: get_attributes
  endpoint:
    path: /Assets/{assetID}/Attributes
    method: GET
    data_selector: Attributes
    params: {}
- name: post_attributes
  endpoint:
    path: /Assets/{assetID}/Attributes/{attributeID}
    method: POST
    data_selector: Attribute
    params: {}
- name: delete_attributes
  endpoint:
    path: /Assets/{assetID}/Attributes
    method: DELETE
    data_selector: null
    params: {}
- name: delete_attribute
  endpoint:
    path: /Attributes/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: get_databases
  endpoint:
    path: /Databases
    method: GET
    data_selector: Databases
    params: {}
- name: post_database
  endpoint:
    path: /Assets/{id}/Databases
    method: POST
    data_selector: Database
    params: {}
- name: OperatingSystems
  endpoint:
    path: /OperatingSystems
    method: GET
    data_selector: ''
    params: {}
- name: Organizations
  endpoint:
    path: /Organizations
    method: GET
    data_selector: ''
    params: {}
- name: UserGroups
  endpoint:
    path: /UserGroups
    method: GET
    data_selector: ''
    params: {}
- name: UserAudits
  endpoint:
    path: /UserAudits
    method: GET
    data_selector: ''
    params: {}
- name: SubscriptionsDelivery
  endpoint:
    path: /Subscriptions/Delivery
    method: GET
    data_selector: ''
    params: {}
- name: UserGroups
  endpoint:
    path: /UserGroups
    method: POST
    data_selector: GroupID
    params: {}
- name: Users
  endpoint:
    path: /Users
    method: GET
    data_selector: UserID
    params: {}
- name: workgroups
  endpoint:
    path: /Workgroups
    method: GET
    data_selector: Workgroups
    params: {}
- name: workgroup_by_id
  endpoint:
    path: /Workgroups/{id}
    method: GET
    data_selector: Workgroup
    params:
      id: Workgroup ID
- name: workgroup_by_name
  endpoint:
    path: /Workgroups
    method: GET
    data_selector: Workgroup
    params:
      name: Workgroup name
- name: create_workgroup
  endpoint:
    path: /Workgroups
    method: POST
    data_selector: Workgroup
    params: {}
- name: AccessPolicies
  endpoint:
    path: /AccessPolicies
    method: GET
    data_selector: AccessPolicies
    params: {}
- name: AccessPoliciesTest
  endpoint:
    path: /AccessPolicies/Test
    method: POST
    data_selector: AccessPolicies
    params: {}
- name: Aliases
  endpoint:
    path: /Aliases
    method: GET
    data_selector: Aliases
    params: {}
- name: AliasesByName
  endpoint:
    path: /Aliases/{name}
    method: GET
    data_selector: Alias
    params: {}
- name: Directories
  endpoint:
    path: /Directories/{id}
    method: PUT
    data_selector: DirectoryID
    params: {}
- name: OracleInternetDirectories
  endpoint:
    path: /OracleInternetDirectories
    method: GET
    data_selector: ''
    params: {}
- name: DSSKeyRules
  endpoint:
    path: /DSSKeyRules
    method: GET
    data_selector: ''
    params: {}
- name: FunctionalAccounts
  endpoint:
    path: /FunctionalAccounts
    method: GET
    data_selector: ''
    params: {}
- name: ISARequests
  endpoint:
    path: /ISARequests
    method: POST
    data_selector: Credentials
    params: {}
- name: aliases_by_id
  endpoint:
    path: /Aliases/{id}
    method: GET
    data_selector: AliasId
    params: {}
- name: aliases_by_name
  endpoint:
    path: /Aliases?name={name}
    method: GET
    data_selector: AliasId
    params: {}
- name: applications
  endpoint:
    path: /Applications
    method: GET
    data_selector: ApplicationID
    params: {}
- name: application_by_id
  endpoint:
    path: /Applications/{id}
    method: GET
    data_selector: ApplicationID
    params: {}
- name: managed_account_attributes
  endpoint:
    path: /ManagedAccounts/{managedAccountID}/Attributes
    method: GET
    data_selector: AttributeID
    params: {}
- name: managed_system_attributes
  endpoint:
    path: /ManagedSystems/{managedSystemID}/Attributes
    method: GET
    data_selector: AttributeID
    params: {}
- name: configuration_version
  endpoint:
    path: /Configuration/Version
    method: GET
    data_selector: Version
    params: {}
- name: directories
  endpoint:
    path: /Directories
    method: GET
    data_selector: DirectoryID
    params: {}
- name: directory_by_id
  endpoint:
    path: /Directories/{id}
    method: GET
    data_selector: DirectoryID
    params: {}
- name: ManagedAccounts
  endpoint:
    path: /ManagedAccounts/{id}
    method: GET
    data_selector: ManagedAccountID
    params: {}
- name: ManagedAccountsBySystemID
  endpoint:
    path: /ManagedSystems/{systemID}/ManagedAccounts
    method: GET
    data_selector: ManagedAccountID
    params: {}
- name: ManagedAccountByName
  endpoint:
    path: /ManagedSystems/{systemID}/ManagedAccounts
    method: GET
    data_selector: ManagedAccountID
    params:
      name: '{name}'
- name: sessions_keystrokes
  endpoint:
    path: /Sessions/{sessionId:int}/Keystrokes
    method: GET
    data_selector: Keystrokes
- name: keystrokes_by_id
  endpoint:
    path: /Keystrokes/{id:long}
    method: GET
    data_selector: Keystroke
- name: search_keystrokes
  endpoint:
    path: /Keystrokes/Search
    method: POST
    data_selector: Keystrokes
- name: managed_systems_linked_accounts
  endpoint:
    path: /ManagedSystems/{systemID}/LinkedAccounts
    method: GET
    data_selector: LinkedAccounts
- name: link_managed_account
  endpoint:
    path: /ManagedSystems/{systemID}/LinkedAccounts/{accountID}
    method: POST
    data_selector: ManagedAccount
- name: unlink_all_linked_accounts
  endpoint:
    path: /ManagedSystems/{systemID}/LinkedAccounts
    method: DELETE
- name: unlink_linked_account
  endpoint:
    path: /ManagedSystems/{systemID}/LinkedAccounts/{accountID}
    method: DELETE
- name: managed_accounts
  endpoint:
    path: /ManagedAccounts
    method: GET
    data_selector: ManagedAccounts
- name: ManagedAccounts
  endpoint:
    path: /ManagedAccounts/{id}
    method: PUT
- name: ManagedAccounts
  endpoint:
    path: /ManagedAccounts/{systemID}/ManagedAccounts
    method: POST
    data_selector: ManagedAccountID
    params:
      version: '3.0'
- name: UpdateCredentials
  endpoint:
    path: /ManagedAccounts/{managedAccountID}/Credentials
    method: PUT
    data_selector: none
    params: {}
- name: DeleteManagedAccountById
  endpoint:
    path: /ManagedAccounts/{id}
    method: DELETE
    data_selector: none
    params: {}
- name: DeleteManagedAccountByName
  endpoint:
    path: /ManagedSystems/{systemID}/ManagedAccounts/{accountName}
    method: DELETE
    data_selector: none
    params: {}
- name: DeleteAllManagedAccounts
  endpoint:
    path: /ManagedSystems/{id}/ManagedAccounts
    method: DELETE
    data_selector: none
    params: {}
- name: PUT_Credentials
  endpoint:
    path: /PUT_Credentials?workgroupName={workgroupName}&assetName={assetName}&accountName={accountName}
    method: PUT
    data_selector: null
    params: {}
- name: POST_ManagedAccounts_Test
  endpoint:
    path: /POST_ManagedAccounts/{managedAccountID}/Credentials/Test
    method: POST
    data_selector: null
    params: {}
- name: POST_ManagedAccounts_Change
  endpoint:
    path: /POST_ManagedAccounts/{managedAccountID}/Credentials/Change
    method: POST
    data_selector: null
    params: {}
- name: GET_QuickRules_ManagedAccounts
  endpoint:
    path: /GET_QuickRules/{quickRuleID}/ManagedAccounts
    method: GET
    data_selector: null
    params: {}
- name: PUT_QuickRules_ManagedAccounts
  endpoint:
    path: /PUT_QuickRules/{quickRuleID}/ManagedAccounts
    method: PUT
    data_selector: null
    params: {}
- name: POST_QuickRules_ManagedAccounts
  endpoint:
    path: /POST_QuickRules/{quickRuleID}/ManagedAccounts/{accountID}
    method: POST
    data_selector: null
    params: {}
- name: DELETE_QuickRules_ManagedAccounts
  endpoint:
    path: /DELETE_QuickRules/{quickRuleID}/ManagedAccounts/{accountID}
    method: DELETE
    data_selector: null
    params: {}
- name: ManagedAccounts
  endpoint:
    path: /SmartRules/{smartRuleID}/ManagedAccounts
    method: GET
    data_selector: records
    params: {}
- name: ManagedAccountApplications
  endpoint:
    path: /ManagedAccounts/{accountID}/Applications
    method: GET
    data_selector: records
    params: {}
- name: ManagedSystems
  endpoint:
    path: /ManagedSystems
    method: GET
    data_selector: records
    params:
      limit: 100000
      offset: 0
- name: ManagedSystemById
  endpoint:
    path: /ManagedSystems/{id}
    method: GET
    data_selector: records
    params: {}
- name: ManagedSystemsForAsset
  endpoint:
    path: /Assets/{assetId}/ManagedSystems
    method: GET
    data_selector: ''
    params: {}
- name: ManagedSystemsForDatabase
  endpoint:
    path: /Databases/{databaseID}/ManagedSystems
    method: GET
    data_selector: ''
    params: {}
- name: ManagedSystemsForFunctionalAccount
  endpoint:
    path: /FunctionalAccounts/{id}/ManagedSystems
    method: GET
    data_selector: ''
    params:
      limit: 100000
      offset: 0
- name: managed_systems
  endpoint:
    path: /Workgroups/{id}/ManagedSystems
    method: GET
    data_selector: Data
    params:
      limit: '100000'
      offset: '0'
- name: Managed Systems
  endpoint:
    path: /ManagedSystems/{id}
    method: PUT
    data_selector: response
    params: {}
- name: ManagedSystems
  endpoint:
    path: /ManagedSystems/{id}
    method: POST
    data_selector: ManagedSystem
    params: {}
- name: QuickRulesManagedSystems
  endpoint:
    path: /QuickRules/{quickRuleID}/ManagedSystems
    method: GET
    data_selector: ManagedSystem
    params: {}
- name: ManagedSystems
  endpoint:
    path: /Assets/{assetId}/ManagedSystems
    method: POST
    data_selector: ManagedSystem
    params: {}
- name: ManagedSystemsForDatabase
  endpoint:
    path: /Databases/{databaseID}/ManagedSystems
    method: POST
    data_selector: ManagedSystem
    params: {}
- name: Requests
  endpoint:
    path: /Requests
    method: GET
    data_selector: '[]'
    params: {}
- name: QuickRules
  endpoint:
    path: /QuickRules
    method: GET
    data_selector: '[]'
    params: {}
- name: pbsm_replay
  endpoint:
    path: /pbsm/replay
    method: POST
    data_selector: '{}'
    params: {}
- name: QuickRules_ManagedSystems
  endpoint:
    path: /QuickRules/{quickRuleID}/ManagedSystems/{systemID}
    method: POST
    data_selector: response
    params: {}
- name: SmartRules_ManagedSystems
  endpoint:
    path: /SmartRules/{id}/ManagedSystems
    method: GET
    data_selector: response
    params:
      limit: 100000
      offset: 0
- name: Nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: response
    params:
      includeInactive: false
- name: PasswordRules
  endpoint:
    path: /PasswordRules
    method: GET
    data_selector: response
    params: {}
- name: Platforms
  endpoint:
    path: /Platforms
    method: GET
    data_selector: response
    params: {}
- name: PropagationActionTypes
  endpoint:
    path: /PropagationActionTypes
    method: GET
    data_selector: response
    params: {}
- name: PropagationActions
  endpoint:
    path: /PropagationActions
    method: GET
    data_selector: response
    params: {}
- name: CreateAdminSession
  endpoint:
    path: /Sessions/Admin
    method: POST
    data_selector: SessionDetails
- name: LockSession
  endpoint:
    path: /Sessions/{sessionID}/Lock
    method: POST
    data_selector: LockDetails
- name: TerminateSession
  endpoint:
    path: /Sessions/{sessionID}/Terminate
    method: POST
    data_selector: TerminateDetails
- name: GetSyncedAccounts
  endpoint:
    path: /ManagedAccounts/{id}/SyncedAccounts
    method: GET
    data_selector: SyncedAccounts
- name: ticket_systems
  endpoint:
    path: /TicketSystems
    method: GET
    data_selector: ''
- name: Approve Request
  endpoint:
    path: /Requests/{id}/Approve
    method: PUT
    data_selector: None
    params: {}
- name: Deny Request
  endpoint:
    path: /Requests/{id}/Deny
    method: PUT
    data_selector: None
    params: {}
- name: RotateOnCheckin Request
  endpoint:
    path: /Requests/{id}/RotateOnCheckin
    method: PUT
    data_selector: None
    params: {}
- name: Terminate Managed Account Requests
  endpoint:
    path: /ManagedAccounts/{managedAccountID}/Requests/Terminate
    method: POST
    data_selector: None
    params: {}
- name: Terminate Managed System Requests
  endpoint:
    path: /ManagedSystems/{managedSystemID}/Requests/Terminate
    method: POST
    data_selector: None
    params: {}
- name: Terminate User Requests
  endpoint:
    path: /Users/{userID}/Requests/Terminate
    method: POST
    data_selector: None
    params: {}
- name: Get Request Sets
  endpoint:
    path: /RequestSets
    method: GET
    data_selector: None
    params: {}
- name: Post Request Sets
  endpoint:
    path: /RequestSets
    method: POST
    data_selector: None
    params: {}
- name: Get Roles
  endpoint:
    path: /Roles
    method: GET
    data_selector: None
    params: {}
- name: Get User Group Smart Rules Roles
  endpoint:
    path: /UserGroups/{userGroupId}/SmartRules/{smartRuleId}/Roles
    method: GET
    data_selector: None
    params: {}
- name: Post User Group Smart Rules Roles
  endpoint:
    path: /UserGroups/{userGroupId}/SmartRules/{smartRuleId}/Roles
    method: POST
    data_selector: None
    params: {}
- name: Delete User Group Smart Rules Roles
  endpoint:
    path: /UserGroups/{userGroupId}/SmartRules/{smartRuleId}/Roles
    method: DELETE
    data_selector: None
    params: {}
- name: Get Sessions
  endpoint:
    path: /Sessions
    method: GET
    data_selector: None
    params: {}
- name: Get Session By ID
  endpoint:
    path: /Sessions/{id}
    method: GET
    data_selector: None
    params: {}
- name: Create Session for Request
  endpoint:
    path: /Requests/{requestID}/Sessions
    method: POST
    data_selector: None
    params: {}
- name: secrets
  endpoint:
    path: /Secrets-Safe/Folders/{folderId:guid}/secrets
    method: POST
    data_selector: Id
    params: {}
- name: text_secrets
  endpoint:
    path: /Secrets-Safe/Folders/{folderId:guid}/secrets/text
    method: POST
    data_selector: Id
    params: {}
- name: file_secrets
  endpoint:
    path: /Secrets-Safe/Folders/{folderId:guid}/secrets/file
    method: POST
    data_selector: Id
    params: {}
- name: update_secret
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}/
    method: PUT
    data_selector: Id
    params: {}
- name: update_text_secret
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}/text
    method: PUT
    data_selector: Id
    params: {}
- name: update_file_secret
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}/file
    method: PUT
    data_selector: Id
    params: {}
- name: safe_permissions
  endpoint:
    path: /secrets-safe/safes/safe-permissions
    method: GET
    data_selector: None
    params: {}
- name: secrets
  endpoint:
    path: /Secrets-Safe/Secrets
    method: GET
    data_selector: secrets
    params:
      Limit: 1000
- name: secret_by_id
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}
    method: GET
    data_selector: secret
    params: {}
- name: secrets_by_folder
  endpoint:
    path: /Secrets-Safe/Folders/{folderId:guid}/secrets
    method: GET
    data_selector: secrets
    params: {}
- name: secret_text
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}/text
    method: GET
    data_selector: secretText
    params: {}
- name: secret_file
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}/file
    method: GET
    data_selector: secretFile
    params: {}
- name: delete_secret
  endpoint:
    path: /Secrets-Safe/Secrets/{secretId:guid}/
    method: DELETE
    data_selector: deleteResponse
    params: {}
- name: create_safe
  endpoint:
    path: /secrets-safe/safes
    method: POST
    data_selector: newSafe
    params: {}
- name: get_safes
  endpoint:
    path: /secrets-safe/safes
    method: GET
    data_selector: safes
    params: {}
- name: get_safe_by_id
  endpoint:
    path: /secrets-safe/safes/{id}
    method: GET
    data_selector: safe
    params: {}
- name: managed_accounts
  endpoint:
    path: /v3/ManagedAccounts
    method: GET
- name: requests
  endpoint:
    path: /v3/Requests
    method: POST
- name: credentials
  endpoint:
    path: /v3/Credentials/{requestId}
    method: GET
- name: workgroups
  endpoint:
    path: /v3/Workgroups
    method: GET
- name: BMC Remedy Connector
  endpoint:
    path: /connectors/bmc_remedy
    method: POST
    data_selector: response
    params: {}
- name: event_forwarding
  endpoint:
    path: /create-connector
    method: POST
    data_selector: event_data
    params: {}
- name: event_forwarding
  endpoint:
    path: /configure/event/forwarding
    method: POST
    data_selector: connector
    params: {}
- name: event_data
  endpoint:
    path: /api/qradar/events
    method: POST
    data_selector: events
    params: {}
- name: Local Event Log Forwarding
  endpoint:
    path: /bips/docs/bi-local-event-log-integration
    method: GET
    data_selector: events
    params: {}
- name: LogRhythm Event Forwarding
  endpoint:
    path: /configuration/connectors
    method: POST
    data_selector: connectors
    params: {}
- name: NetIQ Sentinel
  endpoint:
    path: /config/connectors
    method: POST
- name: IdentityIQ Credential Cycling
  endpoint:
    path: /api/identityiq/credentialcycling
    method: POST
- name: application
  endpoint:
    path: /services/scim/v2/Applications
    method: POST
    data_selector: applications
    params: {}
- name: users
  endpoint:
    path: /scim/v2/Users
    method: GET
- name: groups
  endpoint:
    path: /scim/v2/Groups
    method: GET
- name: ServiceNow Scan Target Collector
  endpoint:
    path: /api/now/table/cmdb_ci_computer
    method: GET
    data_selector: result
    params: {}
- name: ServiceNow Export Connector
  endpoint:
    path: /api/now/table/asset
    method: POST
    data_selector: result
    params: {}
- name: Smart Group
  endpoint:
    path: /api/now/table/smart_group
    method: POST
    data_selector: result
    params: {}
- name: Ticket System
  endpoint:
    path: /api/now/table/ticket_system
    method: POST
    data_selector: result
    params: {}
- name: SNMP Event Forwarder
  endpoint:
    path: /configuration/general/connectors
    method: POST
    data_selector: connector
    params: {}
- name: Syslog Event Forwarder
  endpoint:
    path: /configuration/general/connectors
    method: POST
    data_selector: connector
    params: {}
- name: Splunk Event Forwarder
  endpoint:
    path: /services/collector/event
    method: POST
- name: event_filters
  endpoint:
    path: /configuration/general/connectors/event_filters
    method: GET
    data_selector: event_types
    params: {}
- name: Appliance Health
  endpoint:
    path: /beyondtrust/event/beyondinsight/genapphlth
    method: GET
- name: Clarity
  endpoint:
    path: /beyondtrust/event/beyondinsight/clarity_mlwr
    method: GET
- name: File Integrity Monitoring
  endpoint:
    path: /beyondtrust/event/beyondinsight/fim
    method: GET
- name: PBMac
  endpoint:
    path: /beyondtrust/event/beyondinsight/pbmac
    method: GET
- name: PBPS
  endpoint:
    path: /beyondtrust/event/beyondinsight/pbps
    method: GET
- name: PBW - Events
  endpoint:
    path: /beyondtrust/event/beyondinsight/pbw
    method: GET
- name: PBW - Vulnerabilities
  endpoint:
    path: /beyondtrust/event/beyondinsight/pbw_vulnerability
    method: GET
- name: Retina
  endpoint:
    path: /beyondtrust/event/beyondinsight/retina
    method: GET
- name: Uncategorized Events
  endpoint:
    path: /beyondtrust/event/beyondinsight/uncategorized
    method: GET
- name: Test Events
  endpoint:
    path: /beyondtrust/event/beyondinsight/test
    method: GET
- name: gotManagedAccount
  endpoint:
    path: /secrets_safe_lookup
    method: GET
- name: gotSecrets
  endpoint:
    path: /secrets_safe_lookup
    method: GET
- name: secrets_safe_lookup
  endpoint:
    path: /secrets_safe/lookup
    method: GET
    data_selector: secrets
    params:
      api_url: https://your-instance.api-name.com
      api_version: '3.1'
      retrieval_type: SECRET
      client_id: '{{ dlt.secrets[''api_client_id''] }}'
      client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
      secret_list: path/title,path/title
- name: API Registration
  endpoint:
    path: /bips/docs/ps-configure-api-registration
    method: POST
    data_selector: registration_details
    params: {}
- name: User Management
  endpoint:
    path: /bips/docs/ps-configure-access-policies
    method: POST
    data_selector: user_management_details
    params: {}
- name: authentication
  endpoint:
    path: /auth/SignAppin
    method: POST
- name: managed_accounts
  endpoint:
    path: /ManagedAccounts
    method: GET
    params:
      system Name: $ManagedSystem$
      accountName: $ManagedAccount$
      type: system
- name: checkout_credentials
  endpoint:
    path: /ISARequests
    method: POST
- name: Secrets Safe secret task
  endpoint:
    path: /path/to/secrets/safe
    method: GET
    data_selector: secrets
    params:
      API Version: '3.1'
- name: Secrets Safe service connection
  endpoint:
    path: /configure/secrets-safe
    method: POST
- name: Password Safe user requests
  endpoint:
    path: /api/user-requests
    method: POST
    data_selector: requests
    params: {}
- name: Password Safe ISA requests
  endpoint:
    path: /api/isa-requests
    method: POST
    data_selector: isa_requests
    params: {}
- name: Password Safe Secrets Safe requests
  endpoint:
    path: /api/secrets-safe-requests
    method: POST
    data_selector: secrets_safe_requests
    params: {}
- name: functional_account
  endpoint:
    path: /configuration/functional_accounts
    method: POST
    data_selector: account
    params: {}
- name: ticket_system
  endpoint:
    path: /configuration/ticket_systems
    method: POST
    data_selector: ticket_system
    params: {}
- name: ticket_system
  endpoint:
    path: /create_ticket_system
    method: POST
    data_selector: ticket_system
    params:
      access_policy_certificate_common_name: ServiceDesk DEFAULT
      access_policy_code: DEFAULT
- name: HSM credentials
  endpoint:
    path: /configure/hsm/credentials
    method: POST
    data_selector: hsm_credentials
    params: {}
- name: application_rule
  endpoint:
    path: /application/rules
    method: POST
    data_selector: rules
    params: {}
- name: off_network_management
  endpoint:
    path: /off-network/management
    method: GET
    data_selector: management
    params: {}
- name: EPM for Mac
  endpoint:
    path: /epm/mac
    method: GET
    data_selector: settings_app.xml
    params: {}
- name: EPM for Windows
  endpoint:
    path: /epm/windows
    method: GET
    data_selector: assets
    params: {}
- name: enterprise_application
  endpoint:
    path: /bips/docs/ps-entra-id
    method: GET
    data_selector: application
    params: {}
- name: authentication_authorization
  endpoint:
    path: /bips/docs/ps-entra-id
    method: GET
    data_selector: authentication
    params: {}
- name: single_sign_on
  endpoint:
    path: /bips/docs/ps-entra-id
    method: GET
    data_selector: single_sign_on
    params: {}
notes:
- You must be an administrator to access site management features.
- Deleting a user is an unrecoverable operation.
- The field, SAML Single Sign-On URL, only displays after the initial save of the
  identity provider.
- If there is more than one domainless IdP configuration, local login is not available.
- Importing metadata is preferred over manual setup.
- Creating the initial setup without adding a domain provides a way to test the configuration
  using a local account.
- Local login is not available if there is more than one domainless IdP.
- Currently, auditing is available on user management. Auditing in other areas of
  Pathfinder will be available in a future release.
- Default access rules apply to all IdPs configured in your organization.
- Direct upgrades to 25.1.0 are supported from BeyondInsight versions 23.1 or later
  releases.
- BeyondInsight 25.1.0 supports SQL Server 2016 SP2 or higher
- This release is available by download for BeyondTrust customers and by using the
  BeyondTrust BT Updater.
- The mobile app requires customers to be on version 25.1 or later.
- Web console login sessions are now limited to one session per user.
- BeyondTrust Password Safe (PS) is your Just-in-Time (JIT) privileged access management
  solution that ensures your resources are protected from insider threats.
- Requires setup of connected app in BeyondTrust.
- API usage may be subject to rate limits.
- All customer data is confined to a dedicated instance of BeyondTrust allocated to
  your organization.
- All traffic to and from Password Safe Cloud is encrypted using TLS 1.2.
- All data in Password Safe Cloud, except for session recordings, is stored in Azure
  SQL databases with transparent encryption enabled.
- Formal Business Continuity (BC) and Disaster Recovery (DR) plans have been implemented
  for the corporate and cloud environment as well as other defined categories related
  to personnel shortages and environmental disasters.
- BeyondTrust's availability SLA for the service shall be 99.9% during a calendar
  month. From an historical standpoint (Q1 2022 to present), BeyondTrust has exceeded
  this SLA uptime averaging (99.997%) but is unable to commit to anything higher due
  to these values reflecting the contractual commitments between BeyondTrust and Microsoft
  Azure.
- Password Safe is your privileged access management solution to ensure your resources
  are protected from insider threats.
- Password Safe creates and secures privileged accounts through automated password
  management, encryption, secure storage of credentials, and a sealed operating system.
- Recipients may receive a large number of email notifications. Selective use of this
  option is strongly advised.
- The Log in to list is only displayed on the Login page when there are either AD
  or LDAP user groups created in the BeyondInsight console.
- When working in the console, the times displayed match the web browser on the local
  computer unless stated otherwise.
- If the initial login attempt fails, and two-factor authentication (2FA) is enabled,
  the user is taken to the 2FA page for security reasons.
- Uses Smart Groups to discover and manage accounts across Windows, Linux, and Network
  devices.
- Automatic password rotation is configured for local admin/root accounts.
- You must be a Pathfinder administrator to access identity provider features.
- We recommend importing metadata to configure the IdP.
- Ensure that the Service Provider Entity ID matches the Identifier (Entity ID) configured
  in Azure.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- You can view your account settings and notifications from any page in Password Safe.
- To maintain a manageable database size, assets and scan data is purged every 30
  days. We recommend running discovery scans at least every 30 days to refresh asset
  data.
- To maintain a manageable database size, assets and scan data is purged every 30
  days.
- We recommend running discovery scans at least every 30 days to refresh asset data.
- EPM agents can use OAuth authentication for integration with Password Safe.
- Virtual machine asset onboarding with predefined Smart Rules has been deprecated
  as of Password Safe 24.1.
- Multi-Node Processing is turned off by default. Enable this to allow assignment
  of Smart Rules to process specific worker nodes.
- The Multi-Node Processing setting is turned off by default.
- Turning it on is beneficial if multiple worker nodes or Omni Workers are available,
  and if the existing Omni Workers are running at full capacity.
- If turning this feature on doesn’t help Omni Worker performance, support should
  be contacted.
- The scan name cannot be longer than 58 characters and cannot contain specific characters.
- The fingerprint must be unique. An error message is displayed if the key is already
  imported.
- Automatic Password Management must be enabled for both the subscriber account and
  its associated Managed System
- Each managed account can only be mapped to a single alias
- Disabled at Rest managed accounts
- The Disabled at Rest feature is only available for Active Directory (AD) and Entra
  ID accounts.
- The Disabled at Rest feature is not supported with Password Cache.
- The Status column from the Local Accounts and Domain Linked Accounts grids was removed
  in Password Safe version 23.1. This column, now called Account Status, has been
  re-added in Password Safe version 23.3.
- For optimum efficiency, the web portal screen resolution should be no less than
  1280 × 800 pixels.
- Direct Connect feature allows RDP session without viewing managed account's credentials.
- RDP connection file downloads with a one-time use token, which expires after a period
  of time based on Session Initialization timeout settings.
- Admin sessions are recorded by default.
- Using a configuration that requires requests are approved by a designated approver
  provides accountability and ensures the security of the system's account passwords
  by providing dual control over the managed accounts.
- Approvers can view all requests for managed systems for which they have been assigned
  the Approver role.
- Password Safe administrators can view all requests for all managed systems.
- Requires setup of connected app in api
- Session monitoring records actions of users accessing managed systems.
- You must clear the browser cache to see new images after they have been updated.
- It is a good practice to back up image files to a safe location because they will
  be overwritten on the next upgrade.
- Each safe operates as an isolated space where users can securely manage secrets
  within that safe.
- Secrets Safe minimizes the risk of unauthorized access to secrets.
- Administrators need to toggle Show All Safes to view all safes.
- Users must have Manage Safe permission to delete or rename a safe.
- Users must have read permissions to the Analytics and Reporting and Management Console
  Access features to view reports.
- Only subscription owners and administrators can edit and delete subscriptions.
- Reports generated from subscriptions are stored for 7 days.
- Application users cannot log in to the user portal.
- Once recycled, the previous client secret is no longer valid.
- The default duration of a client secret is 365 days.
- If a worker node is not assigned to a workgroup, the worker node functions on a
  global level and can change any account that does not have a designated workgroup
  assigned.
- Any managed accounts that are in a workgroup that is not assigned to a worker node
  will not be processed.
- Every time a worker node is reassigned to a workgroup, the Password Safe omniservice
  must be restarted.
- The settings in a Smart Rule override the settings configured on the managed system.
- There can be delays when a Smart Rule depends on external data source, such as LDAP.
- Users must have permissions to the grid corresponding to the Smart Rule to view
  results.
- You cannot assign roles to the Password Safe administrator.
- The quarantine is only applied to the user account after the cache is updated.
- You cannot delete a managed account if it is used as a credential for a user group.
- Permissions are system-wide and provide access to various components of the Password
  Safe infrastructure.
- A user account must be a member of a user group because permissions to features
  are assigned at the group level.
- A maximum of 250 users from Entra ID is retrieved.
- The default filter is an asterisk (*), which is a wild card filter that returns
  all groups.
- 'Account Lockout Duration: Sets the number of minutes that the user is locked out
  after they hit the account lockout threshold.'
- 'Account Lockout Threshold: Sets the number of times a user can try their password
  before the account is locked out.'
- 'Account Lockout Reset Interval: Sets the number of minutes after an account is
  locked due to unsuccessful entry attempts before resetting the lockout counter.'
- 'Unlock account upon password reset request: When set to Yes, unlocks the account
  when the Forgot Your Password process is followed by the user.'
- 'Send lockout notification: When set to Yes, sends a notification to the email address
  configured in the Lockout Notification Recipients when any account becomes locked
  out.'
- 'Lockout notification recipients: Sets the email address where the lockout notification
  is sent.'
- Can configure global settings from the Configuration > System > Site Options page
- A maximum of 10 installer activation keys can be present at any one time, including
  the system generated key.
- Once the endpoint communication is established with Password Safe, the activation
  key is no longer required.
- If you delete the key and an endpoint stops working and must be reconfigured, create
  a new installer activation key before uninstalling and reinstalling the client.
- You can manage address groups which can be used as filters when creating Smart Rules.
- You can manage credentials types assigned to user groups within Password Safe.
- Applications can be managed by Password Safe
- Application sessions can be recorded
- The PS_Automate utility is for Windows only. It is not supported on macOS.
- Platform names cannot be changed after they have been created.
- Custom application platforms only support SSH; Telnet is not supported.
- Accounts can be managed with or without multifactor authentication enabled in Azure.
- Default token timeout for remote session playback is 30 seconds.
- Session initialization timeout default is 60 seconds, range is 5 - 600 seconds.
- Default RDP screen resolution range is 640x480 - 1920x2058 pixels.
- Session monitoring captures text that is copied in an RDP session window. The copied
  text is captured only the first time. Any subsequent copy tasks of the same text
  are not captured for the session.
- To use enhanced session auditing, the functional account of the managed Windows
  host or Remote Desktop Services host must have administrative rights.
- 'SSH Key authentication is supported on the following systems: Linux, AIX, HP-iLO,
  HP-UX, DRAC, MAC OSX, Solaris, Juniper, and RACF.'
- Password Safe accepts SSH keys in the OpenSSH format.
- Password Safe ships with a default SSH Key policy
- You cannot delete the default policy
- Ensure the policies you create in Password Safe align with password complexity and
  restrictions in place on the managed system; otherwise, Password Safe might create
  a password that does not comply with the rules in place on that managed system.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Password Safe uses the BeyondTrust Endpoint Credential Manager (ECM) service to
  communicate with the Secure Remote Access Appliance.
- If you are not using the bundled ECM plugin, Contact Support for assistance integrating
  BeyondTrust Secure Remote Access and Password Safe.
- The Password Safe and Secure Remote Access integration must be fully configured
  before Managed Systems can be searched and accessed.
- Searching and accessing Password Safe Managed Systems requires a deployed Jumpoint
  in PRA.
- You must have administrator permissions to configure the connection to Identity
  Security Insights.
- To pause event forwarding, toggle the Enabled option to disable the existing key,
  and then click Update Settings.
- Workforce Passwords user guide for Pathfinder
- Workforce Passwords requires Password Safe 23.2 or a later release.
- Workforce Passwords should only be used for business credentials.
- For version 23.3.0.2 of the Workforce Passwords browser extension and for Firefox
  browsers only, you must enable the Access your data for all websites permission
  for the extension before logging in to it.
- Ensure the Password Safe URL matches the SAML redirect URL; otherwise, the Workforce
  Passwords login does not work.
- Administrators can deploy the Workforce Passwords extension across Chrome, Edge,
  and Firefox browsers on Windows systems efficiently by using Windows Group Policy
  Objects (GPOs) to centrally deploy the extension to all domain-joined Windows machines.
- At least one resource zone is required.
- You can install up to 200 resource brokers across all of your zones.
- Resource brokers automatically update as part of the Password Safe upgrade process.
- It is strongly recommended that the Resource Broker machine is dedicated for the
  Resource Broker only.
- UDP port 1812 must be open for the SecureAuth instance.
- For the push method, increase the timeout to 30 seconds.
- Uses RADIUS for authentication
- If Use SSL is enabled, SSL authentication must also be enabled in the Password Safe
  configuration tool.
- Only one credential is supported per Entra ID tenant.
- If credentials are not mapped, or both mapped credentials fail, Password Safe attempts
  login following the legacy process of not using mapped credentials.
- Check the Default Identity Provider option if you have more than one IdP for the
  same service provider (SP).
- Check Force Reauthentication to require users to authenticate with the identity
  provider for each Password Safe session.
- This command requires PowerShell 5.0 or later (Windows 10 or Server 2016).
- The host name is the fully qualified domain name used to access BI/PS. If this is
  a load-balanced instance, the host name is the same on all servers.
- Uses SAML for authentication
- AD FS uses trust relationships to allow AD to issue authentication claims for transferring
  user identities.
- Ensure the Group Attribute Statements section does not contain the group attribute.
- Please contact BeyondTrust Support for assistance if you need to bulk-apply this
  setting to existing accounts.
- Group can also be mapped to the user's groups in Active Directory if all groups
  are required. However the redirect URL must be limited to a max of 2048 characters.
  We recommend using a single group or minimal groups. If too many groups are returned,
  a login issue can occur.
- In BI version 6.4.4 and later releases, the user is automatically logged in to Password
  Safe, and can then navigate to Password Safe, if they have the proper permissions.
- PingOne users can log on to Password Safe using single sign-on.
- Changes to a user's access level take effect the next time the user logs in.
- The Log in to list is displayed by default, but may be disabled/enabled by an admin
  user.
- By default, new groups are not assigned any permissions.
- Permissions for a Password Safe user must be assigned cumulatively and at the group
  level.
- For on-premises Password Safe deployments only.
- Smart Rules process when asset changes are detected.
- Processing frequency can be adjusted.
- To add Smart Rules processing statistics to the grid, use the Column chooser.
- Two newly created Smart Rules must be processed to list dedicated accounts on the
  Managed Accounts page.
- The functional account associated with the SCOM Managed System must be added to
  the Operations Manager Administrators profile in the SCOM Operations Manager Console.
- When configuring IP rules, it is important to start by adding the IP address you
  are currently using to the allow list.
- Users editing the IP Allow List and Resource Broker IPs must be added before restrictions
  are enabled.
- Resource Broker IPs are located on the Resource Broker Grid, which can be found
  at the bottom of the BeyondInsight console home page.
- If the Resource Broker IPs are located behind a VPN or NAT gateway, IP rules must
  be added accordingly to cover the necessary address space.
- An Oracle database can be part of a database cluster. If several nodes are found
  through discovery, only a single database managed system is created. Cluster fail
  over is supported.
- The Smart Rule auto-excludes the functional account assigned for that system, as
  well as the sa account for MS SQL Server systems, from Password Safe onboarding.
- To view the contents of a Smart Rule when creating a new rule or editing an existing
  rule, click View Results after saving the rule.
- When using MYSQL with multiple accounts with the same name, Password Safe can only
  support rotating the password on all instances of the username using a functional
  account.
- To view the contents of a Smart Rule when creating a new rule or editing an existing
  rule, the Smart Rule must be saved with Show <entity> as Smart Group selected under
  Actions to view the results.
- Application sessions can be recorded.
- Application access policies apply to all applications.
- Users must be managed accounts that are members of a group to access applications.
- Some objects like Contact may return nulls in deeply nested fields
- The Steps tab is configured in the same way as it is for all custom platforms.
- For application platforms, there are 6 additional fields available for Expect statements.
- SSH Key authentication with Password Safe Cloud
- SSH Key authentication is supported on Linux, AIX, HP-iLO, HP-UX, DRAC, MAC OSX,
  Solaris, Juniper, and RACF.
- Password Safe ships with a default SSH Key policy of type RSA and bit size 2048.
- You cannot delete the default SSH Key policy.
- You must have administrator permissions in BeyondInsight to configure the connection
  to Identity Security Insights.
- Bypass SSH Connection Tests option is disabled by default.
- Concurrent accounts, those that are used by multiple users, are disabled only after
  the account is no longer in use by anyone.
- Email notifications are used to alert users on particular Password Safe actions,
  such as connection profile alerts, release requests, and password check failures.
- Application users cannot log in to the BeyondInsight console.
- An API Registration type of API Access Policy must be assigned to an application
  user.
- When transferring files using SCP, there may be some incompatibilities with specific
  clients (e.g. WinSCP). We recommend using SFTP or a different client.
- For more information, please see Issues with WinSCP Using SCP Mode
- All registry changes must be done on each machine hosting a resource broker.
- Weak RSA server host keys shorter than 1024 bits are rejected by default.
- Password Safe can be configured to allow references to ticketing systems in the
  password release requests.
- Role-based access
- Creating groups gives you great flexibility in delegating access to managed systems.
- Permissions provide access to BeyondInsight system components, while Password Safe
  roles determine the scope of access to managed systems.
- You cannot assign roles to the BeyondInsight administrator.
- Status column from the Local Accounts and Domain Linked Accounts grids was removed
  in Password Safe version 23.1. This column, now called Account Status, has been
  re-added in Password Safe version 23.3.
- RDP Direct Connect supports only push two-factor authentication. An access-challenge
  response is not supported.
- LDAP users that use the mail account naming attribute cannot use RDP Direct Connect.
- Session monitoring records the actions of a user while they access your password-protected
  managed systems.
- When a session is complete, the logs are copied to your Azure storage account.
- Session recording is enabled by default for all admin sessions.
- Keystroke logging is enabled by default.
- Each resource zone must have at least one resource broker installed on a Windows
  2019 x64 or Windows 2022 x64 server.
- Resource brokers automatically update as part of the Password Safe Cloud upgrade
  process.
- Audit data is retained for a minimum of 1 year.
- Audit data can be exported through Reporting and Analytics or the REST API.
- PS_Automate is a utility for Windows only. It is not supported on macOS.
- The system must have internet access to download browser drivers.
- SAML authentication is supported for single sign-on access.
- Passwordless authentication is available only for local BeyondInsight users. Support
  for Active Directory, LDAP, and Entra ID directory users is not available at this
  time.
- If your initial SAML login attempt fails, and two-factor authentication (2FA) is
  enabled, you are redirected to the 2FA page for security reasons.
- Passwordless authentication is available only for local BeyondInsight users. Support
  for Active Directory, LDAP, and Entra ID directory users is planned for a future
  release.
- SSH key enforcement is not supported when using the pbrun jumphost elevated credential.
- Assets and scan data is purged every 30 days.
- Virtual machine asset onboarding with predefined Smart Rules has been deprecated
  as of BeyondInsight and Password Safe 24.1.
- Multi-node processing is turned off by default.
- The default setting for each Smart Rule type is 5 threads.
- The valid range is between 1 and 20 threads.
- The Process action on the Smart Rules page does not apply to managed account and
  managed system Quick Group Smart Rules, because these only run once.
- Discovered assets do not count toward your license.
- Any assets discovered using the IP Discovery scan, if subsequently rescanned with
  another scan type, are listed in BeyondInsight as duplicates.
- The Discovery Scan always tries to discover those assets.
- Managed systems provide centralized control, security, and organization for various
  assets, databases, directories, etc.
- The Status column from the Local Accounts and Domain Linked Accounts grids was removed
  in Password Safe version 23.1.
- Users must have the Manage Safe permission assigned to them directly, or to a group
  they’re a member of, to delete or rename a safe.
- Users must have read permissions to the Analytics and Reporting and Management Console
  Access features.
- Some report categories are visible only when specific product licenses are detected.
- Selective use of email notifications is strongly advised due to potential high volume.
- Direct Connect does not support using SAML as an authentication method.
- API Registrations provide a way to integrate part of the BeyondInsight and Password
  Safe functionality into your applications using an API key.
- Users may be both approvers and requestors in peer approval environments.
- Roles are only available to BeyondInsight features.
- The user can remain logged in and sessions remain active up until the refresh interval
  time passes.
- Disable the Change Password After Release option on the managed account, because
  log files can grow significantly in a short time when using managed account credentials
  with a directory query.
- A user account must be a member of a BeyondInsight user group because permissions
  to features are assigned at the group level.
- Active Directory users must log in to the management console at least once to receive
  email notifications.
- Users can log in to the management console using Active Directory or LDAP credentials.
- The 'Log in to' list is only displayed on the Login page when there are either Active
  Directory or LDAP user groups created in the management console.
- The default value for the number of accounts to display in the Password Safe Accounts
  grid is 1,000 accounts.
- The minimum limit for accounts displayed is 100 accounts.
- The maximum limit for accounts displayed is 10,000 accounts.
- Once the key has been changed, any script using the old key receives a '401 unauthorized'
  error until the new key is used in its place.
- Read access and rotation of the key are audited.
- Disable Forms Login for new directory accounts option to enable it.
- Automatic synchronization occurs only when logging in with the browser extension.
- This applies to Windows systems only.
- Traffic proxies through the Resource Broker and on to the on-prem RADIUS server
  if a Resource Zone is selected.
- If Use SSL is enabled, SSL authentication must also be enabled in the BeyondInsight
  configuration tool.
- Only one credential can be set for group resolution per domain or server.
- Smart cards can be used for authentication when logging into BeyondInsight and Password
  Safe.
- Your network must already be configured to use smart card technology to use this
  feature.
- The information for Active Directory and LDAP user settings is retrieved from the
  corresponding setting in the directory for the user account logging in.
- Service Provider Settings are auto-generated by BeyondInsight.
- Assertion requirements change based on the SAML mapping you choose when configuring
  SAML.
- This command requires PowerShell 5.0 or later (Windows 10 or Server 2016)
- The host name is the fully qualified domain name used to access BI/PS.
- Entra ID provides single sign-on, multifactor authentication, and conditional access.
- SAML for single sign-on authentication for BeyondTrust Password Safe using Azure
- AD FS uses trust relationships to allow AD to issue authentication claims for transferring
  user identities to the requesting application.
- Ensure the Group Attribute Statements section does not contain the group attribute.
  It is fine to leave this section empty.
- In environments where SAML, smart card, or claims-aware is configured, we recommend
  enabling the Disable Forms Login authentication option to disallow users from using
  the standard login form in BeyondInsight.
- Group can also be mapped to the user's groups in Active Directory if all groups
  are required. However, the redirect URL must be limited to a max of 2048 characters.
- In BI version 6.4.4 and later releases, the user is automatically logged in to Password
  Safe, and can then navigate to BeyondInsight, if they have the proper permissions.
- Configure Password Safe and Ping Identity for PingOne
- Permissions must be assigned cumulatively and at the group level.
- User audits older than 120 days are purged from the database.
- If an Active Directory user is a member of more than 120 Active Directory groups,
  the user may encounter authentication failures.
- For more information, please see Problems with Kerberos authentication when a user
  belongs to many groups.
- 'Three authentication methods available: Certificate, OAuth, Password.'
- Recommended to use OAuth for authentication.
- The Event Forwarder only scrapes and forwards events from the database.
- Sample message format includes priority, timestamp, sender IP, and key-value pairs.
- Event mappings include various fields such as Event Date, Source Host, and Event
  Severity.
- This is a small sample of event messages in various formats, not an all-encompassing
  set of every possible event.
- Smart Rules must process to display contents in the grid.
- Built-in Smart Rules cannot be deleted.
- Uses local agent for propagation actions on Windows systems.
- Requires Microsoft .NET Framework version 4.7.2 or above on the target managed system(s).
- The Smart Rule auto-excludes the functional account assigned for that system.
- To add an application to Password Safe management, you must set up the application
  details in Password Safe configuration.
- Recording and keystroke logging can be turned on when creating an access policy.
- The instance number and client ID are provided in an email when you purchase SAP.
- SAP RFC privileges are needed for password changes.
- You must select an Application Host for Check/Change Password tab.
- SSH Key authentication is a secure alternative to password authentication.
- You can change the settings for the default policy but you cannot delete the policy
- To pause event forwarding, toggle the Enabled option to disable the existing key.
- Default token timeout for remote session playback is 30 seconds
- Default session initialization timeout is 60 seconds
- For more information about site replication considerations when leveraging the Disable
  at Rest feature, please refer to your Active Directory administrators.
- Application users represent applications that interface with the BeyondInsight public
  API.
- Once recycled, you can copy or view the new secret.
- Selective use of email notifications is strongly advised.
- Connection policies apply to SSH and SSH application sessions.
- You must install PuTTY to enable SSH functionality.
- If you use a Windows 8 or Windows Server 2012 VMWare virtual machine, VMWare Tools
  installs itself as a URL Handler for SSH and stops the sample registry script from
  working.
- Uses Direct Connect for remote session requests for SSH and RDP sessions.
- Worker nodes must be assigned to a workgroup in multi-tenant environments.
- Resetting the console password is not available to users logging in with Active
  Directory, LDAP, or Entra ID credentials.
- Uses OAuth2 with refresh token.
- Session tokens expire after a period of time based on Session Initialization timeout
  settings.
- 'The default location for session monitoring files is in the installation directory:
  \data\sessionmonitoring.'
- Admin sessions allow you to open ad hoc RDP and SSH sessions without going through
  the request process.
- Installation on domain controllers or small business servers is not supported.
- Microsoft SQL Server Express is not supported and will cause installation errors
  if attempted.
- Increases in size of Azure SQL database might be required in the future as usage
  grows.
- While Full Text Search is enabled by default, additional steps are required to create
  a full-text index and catalog in order to run a keyword search for Password Safe
  Session Recordings.
- You can select Mixed mode authentication, if desired, and provide the sa account
  password. However, this is not necessary when SQL Server resides on the same machine
  as the console.
- Uses OAuth2 with refresh token - requires setup of connected app in api
- Certificates are used for secure communication between agents and BeyondInsight.
- 'Two types of certificates are used: SSL certificate for encrypting communication
  and Client certificate for authenticating a client.'
- Analytics & Reporting is not supported on an external SQL Server.
- You cannot leave the SQL Server Agent service account field blank.
- The user credentials must have the appropriate rights to deploy to SQL Server, Analysis
  Services, Integration Services, and to configure the BeyondInsight website settings.
- Setting a dashboard as default causes that dashboard to be displayed when the user
  logs in, or every time the user clicks on Home, and replaces the default dashboard.
- Users assigned Read Only permissions on these features may only view the details
  of Smart Rules.
- Do not set up a functional account as a managed account. Functional accounts have
  built-in management capabilities and passwords might fail to synchronize, causing
  issues.
- The settings vary, depending on the type and platform chosen.
- The Virtualized Devices category for Smart Rules still displays in the UI; however,
  any Smart Rules based on this category are marked as inactive.
- 'For ''Resource'': ''*'', you must determine what JSON is required for your current
  needs.'
- You may also need a condition with this, such as if you want only the dev group
  to have access to certain instances.
- Dashboard displays bar charts for important activity over a defined time period.
- Warning may display if there is a backlog of event processing.
- This feature is available only when an Endpoint Privilege Management license is
  detected.
- This feature is only available when an Endpoint Privilege Management license is
  detected.
- DSS authentication is a secure alternative to using password authentication.
- 'DSS authentication is supported on the following systems: Linux, AIX, HP-iLO, HP-UX,
  DRAC, MAC OSX, Solaris, Juniper, and RACF.'
- Ensure that the su command is available on the platform.
- Be sure to add sudo elevation to the functional account on the managed system.
- Once the Scanner option is enabled, the key must be specified again if the account
  is edited.
- Each managed account can only be mapped to a single alias.
- Ownership can be managed by anyone who is a current owner of the secret or has the
  Manage Safe permission.
- Permissions combine individual user permissions and inherited group permissions.
- Users with full permissions can create secrets in the safe or its subfolders.
- CSV import requires Workforce Passwords to be enabled for the user.
- Users must have read permissions to Analytics and Reporting and Management Console
  Access features to view reports.
- Uses BeyondInsight on-premises deployment for analytics and reporting.
- You can save pivot grid data in JSON format.
- The default number of days to keep general events is 7.
- Recommended to keep attack data for 90 days.
- The default value for purging application events is 7 days.
- The default value for purging reports is 90 days.
- The default value for purging user application audit data is 120 days.
- The default value for purging closed tickets is based on the last updated date.
- The default value for maximum job refresh frequency is 360 minutes.
- The default value for scan threads is 16.
- The default value for asset threads is 1.
- The default value for maximum Smart Rule refresh frequency is 60 minutes.
- The default maximum number of accounts to display in the Password Safe Accounts
  grid is 1000.
- The API Key is masked and can be shown in plain text by clicking the Show Key icon.
- Once the key has been changed, any script using the old key receives a '401 unauthorized'
  error until the new key is used.
- Administrators can pre-configure the Workforce Passwords server URL to provide a
  seamless setup for end users.
- If a Resource Zone is selected, traffic is routed over a Resource Broker. If no
  Resource Zone is selected, traffic is routed directly from the cloud.
- Passwordless authentication is available only for local BeyondInsight users.
- Configure smart card authentication
- You must enable smart card two-factor authentication configuration settings.
- Primary and fallback credentials can include Password Safe managed accounts.
- Configure SAML in BeyondInsight
- Check the Default Identity Provider option if you have more than one IdP for the
  same service provider.
- Check Force Reauthentication to require users to authenticate with the identity
  provider for each BeyondInsight session.
- Configure ADFS with Password Safe Using SAML
- Requires configuration of SAML Identity Provider settings
- To disable forms login for existing users, enable this option directly on a user
  account.
- To disable forms login globally for newly created directory accounts, check the
  corresponding option in the Configuration settings.
- Group must match the group created in BeyondInsight.
- If too many groups are returned, a login issue can occur.
- PingOne users can now log on to Password Safe using single sign-on.
- Role-Based Access
- Users must belong to at least one group with permissions assigned to log in.
- Groups associated with a secret or credential in Secrets Safe cannot be deleted.
- AD users must log in to the management console at least once to receive email notifications.
- LDAP users must log in to the BeyondInsight console at least once to receive email
  notifications.
- Authentication fails with *The username or password is incorrect. Please try again*
  if an Active Directory user is a member of more than 120 Active Directory groups.
- Internal Server Error (500) usually indicates that the **web.config** file is not
  formatted correctly.
- If using certificates, ensure the 'eEyeEmsClient.pfx' certificate is located in
  c:\temp.
- Event Server is FIPS 140-2 compliant and supports TLS versions up to TLS 1.2.
- If the connection to the database is lost, all events are stored in an encrypted
  local database. There are no limits on the number of events that can be stored.
- Client certificates must contain the intended purpose for the certificate.
- Key Usage value must be Digital Signature, Key Encipherment, Data Encipherment,
  Key Agreement.
- A comprehensive list of all Syslog Event Messages is currently unavailable.
- Event names and types may change over time and are not guaranteed to include every
  possible value.
- Starting in BeyondInsight 24.1 and Endpoint Privilege Management 24.3, the components
  can be configured to communicate via OAuth.
- Configuring using OAuth is the preferred method.
- Windows authentication to the PMR database is not supported.
- If using U-Series Appliance, before continuing with configuration, disable RDP access
  again by going to Maintenance > Network and RDP Settings on the appliance and clicking
  the toggle to turn off the Enable Remote Desktop option.
- If you change your SQL Server port or Endpoint Privilege Management Reporting database
  configuration, restart the Reporting Gateway service and Event Collector service
  to pick up the changes.
- If using an external BI Event Collector it is recommended to use the Microsoft JDBC
  driver as specified in SQL Connection Options, using either the instance name or
  the port number.
- If using external event collector worker nodes, do not enter localhost even if the
  PMR database is hosted on the same server as the BI management server.
- We recommend using the Reporting Events option, because PMR contains more detail
  in the events and provides advanced functionality such as Add to Policy.
- The screen PowerShell command remains with the cursor '-' for a few minutes while
  the command is in progress This is normal; do not close the window.
- If you run the command below without first copying the logs, you must re-do this
  process to collect the logs again.
- U-Series is a self-contained physical or virtual appliance that contains the operating
  system, the database, the BeyondTrust BeyondInsight platform, and the BeyondTrust
  Password Safe solution.
- Browser communications required over HTTPS
- Complex password required for all configurations
- Turn off automatic updates to ensure updates are not occurring during this process.
- If you are migrating from 2012 R2 OS, WSUS is not migrated, because it is not supported
  on 2022 OS.
- RDP must be enabled to access C:\LocalBackups.
- Physical U-Series Appliances cannot be updated to Windows 2022. You must purchase
  a new U-Series Appliance.
- 'Downtime is necessary, with the following exception: For an active / active setup,
  the U-Series Appliance can be removed from the pool before migration and re-added
  after migration is complete. This prevents downtime for the end user.'
- Windows Server 2022 U-Series Appliances can be deployed side by side.
- When deploying a new machine with the same name as the previous, if both are on
  at the same time, DNS issues can occur.
- TLS 1.3 may be enabled on newer 2022 images. This is not supported by BeyondInsight
  and Password Safe 24.1 and earlier releases and may cause errors when initiating
  an RDP or SSH session using Password Safe.
- This equipment has been tested and found to comply with the limits for a Class A
  digital device pursuant to Part 15 of the FCC Rules.
- The U-Series Appliance is accompanied by a three-year manufacturer’s warranty based
  on the invoice date.
- Requires setup of connected app in BeyondTrust
- The license included with the U-Series v20 and U-Series v20 SQL Free for Microsoft
  Windows Server 2022 covers up to 16 cores on the physical virtualization (host)
  server.
- After importing the image, wait 30 minutes before continuing setup or otherwise
  interacting with the virtual appliance. This allows time for initialization scripts
  to run.
- The username must be btadmin during install.
- The U-Series Appliance requires a Windows 2022 activation key for deployment.
- BeyondInsight 22.2 or later release is required for Azure SQL.
- BeyondInsight 22.3 or later release is required for Amazon RDS.
- U-Series Appliance 4.0 or later release is required for Amazon RDS.
- OAuth2 authentication is supported.
- Joining a U-Series Appliance to a domain is not recommended. However, if required
  for your deployment, please contact your BeyondTrust representative for assistance.
- Users that are assigned permissions to the U-Series Appliance Login feature are
  authenticated into the appliance with admin privileges.
- RDP and console access is disabled by default as a security measure.
- Activation code from BeyondTrust Technical Support is required to enable RDP and
  appliance console access.
- You can view network configuration information and use ping to assist with diagnosing
  network connectivity issues.
- API key is automatically generated and should be regenerated regularly.
- The file cannot be saved on the U-Series Appliance.
- Database creation can take up to an hour to complete.
- New updates delivered to the appliance are added to the grid automatically every
  15 minutes.
- A new schedule must be created to include new packages received before the scheduled
  run time.
- High availability (HA) is designed to work in an active / passive configuration.
- HA only includes databases for features that are enabled and configured at the time
  HA is initialized.
- Medium Availability Mode for High Availability can no longer be configured as of
  release 4.1.
- Do not turn high availability OFF while doing upgrades.
- Any time an installer or login page for the U-Series Appliance recommends to reboot
  after installation, reboot before continuing.
- There is no need to perform a backup, because all the settings are still on the
  active U-Series Appliance.
- The database is not accessible on the secondary U-Series Appliance. This is expected,
  due to SQL mirroring.
- If you use Password Safe, all credentials are stored in the database using an AES-256
  block cipher by RijndaelManaged.
- In Server Manager, install and enable BITS. Activating BITS ensures prerequisites
  are installed regardless of OS or IIS version installed.
- 'If you are using IIS 7.5 and the ASP.NET 4.5 role did not install automatically:
  Install the ASP.NET role. Run the command C:\Windows\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe
  -i. Log in to Server Manager and select the IIS instance. Double-click ISAPI and
  CGI Restrictions. Ensure that ASP.NET 4.0 is set to Allowed.'
- A valid BeyondInsight serial key must be passed through a HTTP header on each call.
- The TimeZoneName parameter can be one of the listed strings.
- Set Windows license endpoint or skip license page endpoint must be called before
  running scripts.
- No significant UI changes have been made since the last report.
- BT Updater does not include scheduling the Security Update Package Installer (SUPI)
  for updates.
- By default, BT Updater checks for updates every 12 hours.
- FQDN is the complete domain name for the server.
- Once a BT Updater Enterprise server has been entered, the Subscription Frequency
  settings are disabled as this instance of BT Updater now checks for updates every
  30 minutes from the BT Updater Enterprise provided. Air-Gapped Mode is also disabled.
- The update process will close the application. If desired, you can disable automatic
  checking for updates on the Settings page and manually update at any time by clicking
  Update Now on the Subscriptions page.
- Users are only created on the primary replica. You must create users on the secondary
  replica and synchronize the SIDs between the replicas.
- SQL Server has a single master model; therefore, only one replica has write access
  at any one time.
- Sessions are proxied via the local worker node; recorded keystrokes are stored in
  the central database.
- SAML authentication is not supported. Customers using Pathfinder can only authenticate
  to the mobile app using local accounts.
- The BeyondTrust Password Safe app for Android is officially supported on phones
  and tablets.
- BeyondTrust Password Safe for iOS is supported only on iPhones and iPads. Other
  iOS-based devices are not tested or certified for compatibility.
- Your iOS device must be running iOS version 14 or later to use the BeyondTrust Password
  Safe app.
- To manage your mobile application using Microsoft Intune, the first step is registering
  your app in the Intune admin center.
- PSRUN allows execution of BeyondInsight and Password Safe API calls.
- SSL is required to use the Password Safe Public API.
- Provides various endpoints for managing user groups, permissions, and audits.
- Creating a user group with Secrets Safe feature requires the caller to be an administrator.
- Deleting a user group with Secrets Safe feature requires the caller to be an administrator.
- Requires Password Safe System Management or Domain Management permissions.
- Requires setup of OAuth2 credentials for access
- Requires Password Safe Account Management (Read) permissions.
- Requires Password Safe Account Management permissions to access the endpoints.
- Requires Password Safe Account Management (Read/Write) permissions.
- Read access to the Smart Rule is required to access Managed Accounts.
- Password Safe Account Management (Read/Write) is required for assigning applications.
- Requires Password Safe System Management (Read) permission.
- Requires Password Safe System Management permissions for operations.
- 'Required permissions: Password Safe System Management (Read/Write)'
- List registered ticket systems.
- In BeyondInsight/Password Safe 24.3, 'UserGroupId' has been deprecated.
- In BeyondInsight/Password Safe 24.3, 'OwnerId' and 'OwnerType' have been deprecated.
  New parameters from 'Owners' are used instead.
- All parameters are optional for the Secrets API.
- Authorization header now communicates the API application key as well as the RunAs
  username.
- Starting with BIPS 24.3, the Password Safe platforms Cloud - Azure and Cloud - Office
  365 are deprecated and replaced with the Microsoft Entra ID platform.
- In October 2024, Microsoft enforced required multi-factor authentication (MFA) for
  all Azure sign-ins.
- Comply with required multi-factor authentication (MFA)
- BeyondInsight and Password Safe cannot interface with the built-in helpdesk in BMC
  IT Service Management (ITSM) solution.
- The integration between BeyondInsight and BMC Remedy has been tested using only
  the BMC Action Request System (ArSYS).
- The connector credentials must match the credentials of the functional account.
- If an event is received from Password Safe Cloud, a Resource Zone can now be associated
  with any connector that sends data using syslog.
- You need a FireEye Comm Broker Sender installed and available to BeyondInsight.
- Use the connector over Syslog.
- Password Safe communicates with HSMs using a commonly supported API called PKCS#11.
- HSM appliances vary in a number of ways depending on the model, and each appliance
  comes with its own documentation supplied by the vendor.
- Editing an existing HSM credential could prevent Password Safe from successfully
  decrypting the credential.
- Deleted credentials cannot be recovered, and Password Safe is unable to decrypt
  any credentials encrypted with those HSM credentials.
- Uses TCP, TCP-SSL, or UDP protocols for sending data.
- LEEF Format V1 uses a static identifier per event type.
- The managed account must have an API enabled.
- Password for the managed account in Password Safe must use the JSON format.
- Password Safe group synchronization is triggered by synchronization interval, manual
  synchronization, or at log in.
- Client credentials are recommended for testing. A refresh token is used in production
  where security requirements are higher.
- Only one SCIM connector can be created by Password Safe per instance.
- Refresh and access tokens are an OAuth 2.0 concept.
- Using client credentials (client ID and client secret) is recommended for lab or
  testing environments. For a production environment, using refresh tokens is a more
  secure option.
- BeyondInsight supports only ServiceNow Cloud Solutions.
- You can change the default value in the RemManagerSvc.ece.config file.
- You cannot enter a value greater than 10000 for importBatchLimit.
- Assets are only exported once in the defined expiration period.
- Ensure the Requestor is populated in the Assigned To field in the ServiceNow web
  portal.
- Configure Password Safe to forward events to Splunk.
- Ensure the Splunk HTTP EC data source is configured.
- A machine reboot might be required to register the new software after installing
  the Trellix Agent and DXL Client.
- 'To debug installer issues, execute the installer with the command: <path to your
  installer>\msiexec /i BeyondInsightDXLMessageBroker.msi /l*v MyLogFile.txt'
- A 1603 Error Code often indicates insufficient privileges to enable the MSMQ Windows
  feature.
- If JSON format is selected, enable the Use Syslog option to add the syslog header
  format to the JSON output file.
- Automate for scale by integrating with an extensive set of enterprise tools and
  systems to orchestrate PAM enterprise-wide.
- Ensure the User password required option is disabled in API registration.
- An API registration must be assigned to the Automation 360 bot, with an IP Filter
  rule to allow the bot access to the Password Safe API.
- Action to check out credentials requires POST method
- Output from authentication action is assigned to access_output
- Use a functional account that has permissions to access CA Service Desk Manager.
- Two access policies are required for functional account access.
- Password Safe uses only one set of HSM credentials to encrypt any stored credential
  at a given time.
- The HSM service must be started.
- EPM must be installed using the BIMODE=1 flag.
- The Password Safe account name must be a managed account associated with the managed
  system.
- The default for PasswordSafeState is Not_Configured.
- The default for PasswordSafeHeartBeatInterval is 60 minutes.
- Entra ID group memberships for a user are synchronized every time the user logs
  in. For example, a user that has been removed from all Groups can no longer log
  in to Password Safe.
- Advanced configurations and features, such as high-availability implementations,
  are typically transparent in Password Safe.
- The BeyondInsight server firewall does not allow incoming connections. Therefore,
  remote administration and RFS facilities are not available from this server.
- We recommend uninstalling any existing nShield software before installing the new
  nShield software.
- For more information on the integration of nShield HSMs and nShield as a Service
  with Password Safe, see the content available from the BeyondTrust nFinity HSM Partner
  Program page.
- Integration supports Fortanix DSM 4.14 and later, and Password Safe 21.3 and later.
- Use BeyondInsight Configuration tool to configure HSM credentials with the API key.
errors:
- 'Unauthorized: Contact BeyondTrust Support to change a user''s email.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check permissions for the requested resource.'
- Contact BeyondTrust Support with any issues that arise for resolution.
- '400 Bad Request: Check the request parameters and format.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '404 Not Found: Verify the endpoint path.'
- 'CheckLocationAllowed: XForwardedForHeaderValue 1.1.1.1 is not registered/trusted.
  Add this XForwardedForHeaderValue to the TestGroupName Address group'
- Jumpoint for External Jump Items not configured
- The client and server cannot communicate, because they do not possess a common algorithm
- This service has reported as unhealthy.
- 'Runtime Error: Add customErrors mode=''Off'' to the web.config file.'
- 'Internal Server Error (500): Indicates that the web.config file is not formatted
  correctly.'
- 'RestrictedAddress - Error message displayed: "Restricted IP address, see documentation
  for more details."'
- 'The client and server cannot communicate, because they do not possess a common
  algorithm: Set the SchUseStrongCrypto (DWORD) registry key to a value of 1.'
- 'This service has reported as unhealthy: Ensure the Resource Broker machine is dedicated
  and check proxy configurations.'
- '401 Unauthorized: Check your credentials or SAML configuration.'
- Unauthorized exceptions when requests are sent without proper configuration.
- Missing required Password Safe role.
- '401 unauthorized: If the X-Forwarded-For header is missing, the request fails.'
- Login issues can occur if too many groups are returned.
- Authentication fails with The username or password is incorrect. Please try again.
- A local error occurred.
- Internal Server Error (500) usually indicates that the web.config file is not formatted
  correctly.
- 'CheckLocationAllowed: XForwardedForHeaderValue 1.1.1.1 is not registered/trusted.'
- 'INVALID_SESSION: Session has expired or is invalid.'
- 'AUTHORIZATION_FAILED: Check user permissions.'
- 'Unauthorized: Recheck user permissions or account status'
- 'BACKLOG: Verify database configuration for processing large number of events.'
- 'Permission Denied: Check user/group access to the safe.'
- 'Secret Not Found: Ensure the secret ID is correct.'
- '401 unauthorized: Recheck API Key usage after rotation.'
- Authentication fails with *The username or password is incorrect. Please try again*.
- 'Internal Server Error (500): Ensure the **web.config** file is formatted correctly.'
- If a message appears informing you that the file or folder is in use even after
  stopping the above services, you may also need to stop the BeyondInsight Admin API
  service.
- '401: Either alpha feature has not been enabled or the U-Series Appliance has already
  been configured.'
- '0: Success'
- '1: Failure'
- '401 Unauthorized: Check that the user has permission to use the API key.'
- 400 – Bad Request – Validation failure, missing request body, or string values exceed
  the maximum length. Reason in response body.
- '401 – Unauthorized – User is not authenticated. Typical reasons include: An invalid
  product license was detected. The request headers were not set properly. The server
  could not verify the validity of the request (due to one or more API factors). The
  user session has expired. The API key has been rotated but has not been updated
  in the calling script or application.'
- 403 – Access forbidden. User does not have the appropriate role or permission.
- 404 – Object not found where expected. Reason in response body.
- 500 – Unexpected server error occurred.
- '200: Request successful.'
- '201: Request successful. User in the response body.'
- 200 - Request successful.
- 403 - User does not have permissions to request the indicated account or the account
  does not have API access enabled.
- '400 Bad Request: Invalid parameters or missing required fields.'
- '401 Unauthorized: Invalid authentication or insufficient permissions.'
- 403 - User does not have permissions.
- 404 - Resource not found.
- '201: Request successful. Managed Account in the response body.'
- '400 Bad Request: Managed Account credentials testing is not supported by Amazon.'
- 401 - Unauthorized access.
- 400 - Bad request.
- '200: Request successful. Managed System in response body.'
- 200 - Request successful - Asset was already managed. Managed System in response
  body.
- 201 - Request successful - Asset is now managed. Managed System in response body.
- 403 – Access forbidden.
- 404 – Not found.
- 403 – Access forbidden. Response body contains a message or status code indicating
  the reason for this forbidden access.
- 200 – Request successful. Ticket systems in the response body
- 204 – Request successful. No content in body.
- 403 – User does not have permissions.
- 4033 – Approver only - User cannot approve his or her own request.
- 4036 – Request has been approved already.
- 409 - Conflict
- 201 - Created
- 400 - Bad Request
- 403 - Forbidden
- 200 – OK
- 200 - OK
- 404 - Not Found
- '401 Unauthorized: Recheck API key or RunAs username'
- '400 Bad Request: Check required parameters are provided.'
- '401 Unauthorized: Verify API credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
auth_info:
  mentioned_objects:
  - Password Safe
  - Active Directory
  - LDAP
  - RADIUS
  - Smart Card
  - SAML
  - IdentityProvider
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Application (Client) ID
  - Directory (Tenant) ID
  - SAML 2.0
  - directory credentials
  - Azure
  - SecureAuth
  - ADFS
  - Okta
  - Ping Identity
  - SAML Identity Provider
  - RADIUS server
  - Entra ID
  - OAuth
  - FunctionalAccount
  - ManagedSystem
  - SmartRule
  - admin
  - ssh-keygen
  - BeyondInsight user account
  - SAML Application
  - Identity Provider
  - Service Provider
  - Password Safe System Management
  - Password Safe Domain Management
  - OAuth Client ID
  - OAuth Client Secret
client:
  base_url: https://app.beyondtrust.io
source_metadata: null
