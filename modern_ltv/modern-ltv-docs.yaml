resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer_intelligence
  endpoint:
    path: /api/customer/intelligence
    method: GET
    data_selector: data
    params: {}
- name: customer_data
  endpoint:
    path: /api/v1/customer_data
    method: GET
    data_selector: records
    params: {}
- name: customer_intelligence
  endpoint:
    path: /api/v1/customer_intelligence
    method: GET
    data_selector: data
    params: {}
- name: customer_intelligence
  endpoint:
    path: /api/v1/customer_intelligence
    method: GET
    data_selector: data
    params: {}
- name: customer_data
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer_data
  endpoint:
    path: /api/v1/customer_data
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer_data
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
    params: {}
- name: attributes
  endpoint:
    path: /api/v1/attributes
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: custom_source_attribute_values
  endpoint:
    path: /custom-sources/attribute-values
    method: POST
- name: create_attribute
  endpoint:
    path: /sources/create-attribute
    method: POST
- name: custom_source_attribute_values
  endpoint:
    path: /custom-sources/attribute-values
    method: POST
- name: create_attribute
  endpoint:
    path: /sources/create-attribute
    method: POST
- name: custom_sources_attributes_value
  endpoint:
    path: /billers/{CLIENT_ID}/custom-sources/{SOURCE_NAME}/attribute-values
    method: POST
- name: create_attribute
  endpoint:
    path: /billers/{CLIENT_ID}/sources/{SOURCE_NAME}/create-attribute
    method: POST
- name: connect
  endpoint:
    path: /destinations/connect
    method: POST
- name: custom_sources_attribute_values
  endpoint:
    path: /billers/{CLIENT_ID}/custom-sources/{SOURCE_NAME}/attribute-values
    method: POST
- name: create_attribute
  endpoint:
    path: /billers/{CLIENT_ID}/sources/{SOURCE_NAME}/create-attribute
    method: POST
- name: destinations_connect
  endpoint:
    path: /destinations/connect
    method: POST
- name: connect
  endpoint:
    path: /destinations/connect
    method: POST
- name: attributes_sync
  endpoint:
    path: /attributes/sync
    method: POST
- name: connect
  endpoint:
    path: /destinations/connect
    method: POST
- name: attributes_sync
  endpoint:
    path: /attributes/sync
    method: POST
    data_selector: attribute
    params: {}
- name: attributes_sync_batch
  endpoint:
    path: /attributes/sync/batch
    method: POST
    data_selector: attributes
    params: {}
- name: attributes_sync
  endpoint:
    path: /attributes/sync
    method: POST
- name: attributes_sync
  endpoint:
    path: /attributes/sync
    method: POST
- name: attributes_sync_batch
  endpoint:
    path: /attributes/sync/batch
    method: POST
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in ModernLTV
- Integration requires setup of OAuth2 credentials.
- Payment systems are often the source of truth for a business.
- Empower your customers with full visibility and access to all their valuable payments
  and subscription data to increase engagement, drive sales, and maximize growth.
- No code required for pre-built integration, requires API keys and/or credentials.
- Some objects may return nulls in deeply nested fields
- ModernLTV requires zero engineering and is intentionally designed to be used by
  any member of your team, regardless of their technical proficiency.
- We may use your personal information for our own business purposes, such as for
  undertaking internal research for technological development and demonstration.
- The ModernLTV REST API uses an Account ID and API Key for authentication.
- ModernLTV uses an Account ID and API Key for authentication.
- Access all the intelligence you need to deliver a highly personalized and engaged
  experience that maximizes customer LTV.
- No more manual ETL or custom APIs. Build and automate end-to-end data pipelines
  in minutes, without the maintenance overhead.
- You must create the custom source from your dashboard by going 'Connections' > click
  on '+Source' > scroll to bottom and click '+Custom source'.
- ModernLTV will never override existing data fields in a destination.
- ModernLTV will always generate a new attribute with the prefix `modernltv` on first
  sync.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad request'
- '401: Not authorized'
- '403: Forbidden'
- '404: Not found'
- '429: Rate limit'
- '500: Server error'
- '503: Service unavailable'
- 'INVALID_CLIENT: Check client ID and secret.'
- 'ACCESS_DENIED: Ensure proper scope is requested.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
client:
  base_url: https://app.modernltv.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
