resources:
- name: test
  endpoint:
    path: /api/
    method: GET
    data_selector: tests
- name: tests
  endpoint:
    path: tests
    method: GET
    data_selector: records
    params: {}
- name: test_settings
  endpoint:
    path: /test_settings
    method: GET
    data_selector: settings
- name: moveToElement
  endpoint:
    path: /v09/api/moveToElement
    method: POST
- name: pause
  endpoint:
    path: /v09/api/pause
    method: POST
- name: perform
  endpoint:
    path: /v09/api/perform
    method: POST
- name: resizeWindow
  endpoint:
    path: /v09/api/resizeWindow
    method: POST
- name: saveScreenshot
  endpoint:
    path: /v09/api/saveScreenshot
    method: POST
- name: setCookie
  endpoint:
    path: /v09/api/setCookie
    method: POST
- name: setValue
  endpoint:
    path: /v09/api/setValue
    method: POST
- name: setWindowPosition
  endpoint:
    path: /v09/api/setWindowPosition
    method: POST
- name: submitForm
  endpoint:
    path: /v09/api/submitForm
    method: POST
- name: switchWindow
  endpoint:
    path: /v09/api/switchWindow
    method: POST
- name: urlHash
  endpoint:
    path: /v09/api/urlHash
    method: POST
- name: useCss
  endpoint:
    path: /v09/api/useCss
    method: POST
- name: useXpath
  endpoint:
    path: /v09/api/useXpath
    method: POST
- name: waitForElementNotPresent
  endpoint:
    path: /v09/api/waitForElementNotPresent
    method: POST
- name: waitForElementNotVisible
  endpoint:
    path: /v09/api/waitForElementNotVisible
    method: POST
- name: waitForElementPresent
  endpoint:
    path: /v09/api/waitForElementPresent
    method: POST
- name: waitForElementVisible
  endpoint:
    path: /v09/api/waitForElementVisible
    method: POST
- name: session
  endpoint:
    path: /v09/api/session
    method: POST
- name: sessions
  endpoint:
    path: /v09/api/sessions
    method: POST
- name: timeouts
  endpoint:
    path: /v09/api/timeouts
    method: POST
- name: timeoutsAsyncScript
  endpoint:
    path: /v09/api/timeoutsAsyncScript
    method: POST
- name: timeoutsImplicitWait
  endpoint:
    path: /v09/api/timeoutsImplicitWait
    method: POST
- name: status
  endpoint:
    path: /v09/api/status
    method: GET
- name: sessionLog
  endpoint:
    path: /v09/api/sessionLog
    method: POST
- name: sessionLogTypes
  endpoint:
    path: /v09/api/sessionLogTypes
    method: POST
- name: url
  endpoint:
    path: /v09/api/url.html
    method: GET
- name: back
  endpoint:
    path: /v09/api/back.html
    method: GET
- name: forward
  endpoint:
    path: /v09/api/forward.html
    method: GET
- name: refresh
  endpoint:
    path: /v09/api/refresh.html
    method: GET
- name: title
  endpoint:
    path: /v09/api/title.html
    method: GET
- name: window
  endpoint:
    path: /v09/api/window.html
    method: GET
- name: windowHandle
  endpoint:
    path: /v09/api/windowHandle.html
    method: GET
- name: windowHandles
  endpoint:
    path: /v09/api/windowHandles.html
    method: GET
- name: windowMaximize
  endpoint:
    path: /v09/api/windowMaximize.html
    method: GET
- name: windowPosition
  endpoint:
    path: /v09/api/windowPosition.html
    method: GET
- name: windowSize
  endpoint:
    path: /v09/api/windowSize.html
    method: GET
- name: frame
  endpoint:
    path: /v09/api/frame.html
    method: GET
- name: frameParent
  endpoint:
    path: /v09/api/frameParent.html
    method: GET
- name: test
  endpoint:
    path: ./nightwatch/examples
    method: GET
- name: default
  endpoint:
    path: /tests
    method: GET
- name: integration
  endpoint:
    path: /staging.host
    method: GET
- name: globals
  endpoint:
    path: /lib/globals.js
    method: GET
    data_selector: module.exports
    params: {}
- name: session_capabilities
  endpoint:
    path: /session
    method: POST
    data_selector: value.capabilities
- name: finding_elements
  endpoint:
    path: /guide/writing-tests/selectors.html
    method: GET
- name: commands
  endpoint:
    path: /guide/writing-tests/commands.html
    method: GET
- name: assertions
  endpoint:
    path: /guide/writing-tests/adding-assertions.html
    method: GET
- name: nightwatch_inspector
  endpoint:
    path: /guide/writing-tests/nightwatch-inspector.html
    method: GET
- name: chrome_dev_tools
  endpoint:
    path: /guide/writing-tests/chrome-devtools-recorder.html
    method: GET
- name: css_selectors
  endpoint:
    path: /guide/writing-tests/selectors.html#postdoc-css-selectors
    method: GET
    data_selector: examples
- name: xpath_selectors
  endpoint:
    path: /guide/writing-tests/selectors.html#postdoc-xpath-selectors
    method: GET
    data_selector: examples
- name: text_based_selectors
  endpoint:
    path: /guide/writing-tests/selectors.html#postdoc-text-based
    method: GET
    data_selector: examples
- name: placeholder_text_based_selectors
  endpoint:
    path: /guide/writing-tests/selectors.html#postdoc-placeholder-text-based
    method: GET
    data_selector: examples
- name: alt_text_based_selectors
  endpoint:
    path: /guide/writing-tests/selectors.html#postdoc-alt-text-based
    method: GET
    data_selector: examples
- name: inputs_based_on_labels
  endpoint:
    path: /guide/writing-tests/selectors.html#postdoc-inputs-based-on-labels
    method: GET
    data_selector: examples
- name: selecting_nth_element
  endpoint:
    path: /guide/writing-tests/selectors.html#postdoc-selecting-nth-element
    method: GET
    data_selector: examples
- name: demo_test
  endpoint:
    path: /tests/sampleTest.js
    method: GET
    data_selector: tests
- name: globals
  endpoint:
    path: /nightwatch/globals.js
    method: GET
    data_selector: module.exports
    params: {}
- name: axeInject
  endpoint:
    path: /api/axeInject
    method: GET
    data_selector: records
- name: axeRun
  endpoint:
    path: /api/axeRun
    method: GET
    data_selector: records
- name: screenshotIdenticalToBaseline
  endpoint:
    path: /screenshotIdenticalToBaseline
    method: POST
    data_selector: results
    params: {}
- name: unit_tests_mode
  endpoint:
    path: nightwatch.json
    method: GET
    data_selector: unit_tests_mode
    params: {}
- name: test_doubles
  endpoint:
    path: /api/test_doubles
    method: GET
    data_selector: test_doubles
    params: {}
- name: testdoubles
  endpoint:
    path: /nightwatch/testdoubles
    method: GET
    data_selector: records
- name: tests
  endpoint:
    path: /tests
    method: GET
    data_selector: tests
- name: sample test
  endpoint:
    path: /tests/sampleTest.js
    method: GET
- name: smoketests
  endpoint:
    path: /smoketests
    method: GET
    data_selector: tests
    params: {}
- name: client
  endpoint:
    path: /createClient
    method: POST
    data_selector: client
    params: {}
- name: updateCapabilities
  endpoint:
    path: /updateCapabilities
    method: POST
    data_selector: capabilities
    params: {}
- name: launchBrowser
  endpoint:
    path: /launchBrowser
    method: POST
    data_selector: browser
    params: {}
- name: browser.mountVueComponent
  endpoint:
    path: browser.mountVueComponent(componentPath, options, callback)
    method: CALL
    data_selector: parameters
- name: browser.mountReactComponent
  endpoint:
    path: browser.mountReactComponent(componentPath, props, callback)
    method: CALL
    data_selector: parameters
- name: browser.launchComponentRenderer
  endpoint:
    path: browser.launchComponentRenderer()
    method: CALL
    data_selector: parameters
- name: browser.importScript
  endpoint:
    path: browser.importScript(scriptPath, options, callback)
    method: CALL
    data_selector: parameters
- name: component_tests
  endpoint:
    path: /tests/component
    method: GET
    data_selector: tests
- name: Form
  endpoint:
    path: /components/Form
    method: GET
    data_selector: stories
    params: {}
- name: Form
  endpoint:
    path: /src/stories/Form.stories.jsx
    method: GET
- name: Button
  endpoint:
    path: /stories/Button.stories.jsx
    method: GET
- name: nightwatch-angular-plugin
  endpoint:
    path: https://github.com/nightwatchjs/nightwatch-plugin-angular
    method: GET
    data_selector: plugin details
    params: {}
- name: native_mobile_app_testing
  endpoint:
    path: /mobile/app/testing
    method: GET
    data_selector: tests
- name: mobile_app_testing_android
  endpoint:
    path: /mobile-helper/android
    method: GET
    data_selector: ''
    params: {}
- name: mobile_app_testing_ios
  endpoint:
    path: /mobile-helper/ios
    method: GET
    data_selector: ''
    params: {}
- name: selectors
  endpoint:
    path: /guide/mobile-app-testing/selectors.html
    method: GET
    data_selector: selectors
    params: {}
- name: commands
  endpoint:
    path: /guide/mobile-app-testing/commands.html
    method: GET
    data_selector: commands
    params: {}
- name: assertions
  endpoint:
    path: /guide/mobile-app-testing/assertions.html
    method: GET
    data_selector: assertions
    params: {}
- name: click
  endpoint:
    path: /click
    method: POST
    data_selector: selector
    params: {}
- name: send_keys
  endpoint:
    path: /send_keys
    method: POST
    data_selector: selector
    params: {}
- name: clear_value
  endpoint:
    path: /clear_value
    method: POST
    data_selector: selector
    params: {}
- name: set_value
  endpoint:
    path: /set_value
    method: POST
    data_selector: selector
    params: {}
- name: get_context
  endpoint:
    path: /get_context
    method: GET
    data_selector: context
    params: {}
- name: get_contexts
  endpoint:
    path: /get_contexts
    method: GET
    data_selector: contexts
    params: {}
- name: set_context
  endpoint:
    path: /set_context
    method: POST
    data_selector: context
    params: {}
- name: start_activity
  endpoint:
    path: /start_activity
    method: POST
    data_selector: activity
    params: {}
- name: get_current_activity
  endpoint:
    path: /get_current_activity
    method: GET
    data_selector: activity
    params: {}
- name: get_current_package
  endpoint:
    path: /get_current_package
    method: GET
    data_selector: package
    params: {}
- name: get_orientation
  endpoint:
    path: /get_orientation
    method: GET
    data_selector: orientation
    params: {}
- name: set_orientation
  endpoint:
    path: /set_orientation
    method: POST
    data_selector: orientation
    params: {}
- name: get_geolocation
  endpoint:
    path: /get_geolocation
    method: GET
    data_selector: geolocation
    params: {}
- name: set_geolocation
  endpoint:
    path: /set_geolocation
    method: POST
    data_selector: geolocation
    params: {}
- name: press_key
  endpoint:
    path: /press_key
    method: POST
    data_selector: key_code
    params: {}
- name: long_press_key
  endpoint:
    path: /long_press_key
    method: POST
    data_selector: key_code
    params: {}
- name: hide_keyboard
  endpoint:
    path: /hide_keyboard
    method: POST
    data_selector: keyboard
    params: {}
- name: is_keyboard_shown
  endpoint:
    path: /is_keyboard_shown
    method: GET
    data_selector: keyboard_shown
    params: {}
- name: textContains
  endpoint:
    path: /assert/textContains
    method: GET
    data_selector: selector
    params: {}
- name: textEquals
  endpoint:
    path: /assert/textEquals
    method: GET
    data_selector: selector
    params: {}
- name: textMatches
  endpoint:
    path: /assert/textMatches
    method: GET
    data_selector: selector
    params: {}
- name: attributeContains
  endpoint:
    path: /assert/attributeContains
    method: GET
    data_selector: selector
    params: {}
- name: attributeEquals
  endpoint:
    path: /assert/attributeEquals
    method: GET
    data_selector: selector
    params: {}
- name: attributeMatches
  endpoint:
    path: /assert/attributeMatches
    method: GET
    data_selector: selector
    params: {}
- name: selected
  endpoint:
    path: /assert/selected
    method: GET
    data_selector: selector
    params: {}
- name: enabled
  endpoint:
    path: /assert/enabled
    method: GET
    data_selector: selector
    params: {}
- name: visible
  endpoint:
    path: /assert/visible
    method: GET
    data_selector: selector
    params: {}
- name: elementsCount
  endpoint:
    path: /assert/elementsCount
    method: GET
    data_selector: selector
    params: {}
- name: elementsPresent
  endpoint:
    path: /assert/elementsPresent
    method: GET
    data_selector: selector
    params: {}
- name: browserstack.android
  endpoint:
    path: /app-automate/sample-apps/android
    method: POST
    data_selector: desiredCapabilities
    params: {}
- name: browserstack.ios
  endpoint:
    path: /app-automate/sample-apps/ios
    method: POST
    data_selector: desiredCapabilities
    params: {}
- name: sample nightwatch test
  endpoint:
    path: ./tests/sample-nightwatch-test.js
    method: N/A
    data_selector: N/A
    params: {}
- name: exclude
  endpoint:
    path: excluded-folder
    method: GET
- name: filter
  endpoint:
    path: tests/*-smoke.js
    method: GET
- name: skipgroup
  endpoint:
    path: subfolder
    method: GET
- name: skiptags
  endpoint:
    path: tagname
    method: GET
- name: browserstack
  endpoint:
    path: /automate/capabilities
    method: POST
    data_selector: capabilities
- name: page_objects
  endpoint:
    path: nightwatch/pages
    method: GET
    data_selector: records
    params: {}
- name: examplePage
  endpoint:
    path: /nightwatch/pages/examplePage.js
    method: GET
    data_selector: url
    params: {}
- name: capture_console_events
  endpoint:
    path: /capture-console-events
    method: POST
    data_selector: event
    params: {}
- name: take_heap_snapshot
  endpoint:
    path: /guide/running-tests/take-heap-snapshot
    method: GET
    data_selector: snapshot
    params: {}
- name: node
  endpoint:
    path: /actions/setup-node@v3
    method: GET
- name: azure-pipelines
  endpoint:
    path: /azure-pipelines.yml
    method: POST
    data_selector: steps
    params: {}
- name: test_async
  endpoint:
    path: /api/v4/projects/:id/repository/commits
    method: POST
    data_selector: commits
    params: {}
- name: network_requests
  endpoint:
    path: /captureNetworkRequests
    method: POST
    data_selector: requestParams
    params: {}
- name: mockNetworkResponse
  endpoint:
    path: /mockNetworkResponse
    method: POST
    data_selector: response
    params: {}
- name: mock_geolocation_example
  endpoint:
    path: /mock/geolocation
    method: POST
    data_selector: example
    params: {}
- name: JUnit XML Report
  endpoint:
    path: /tests_output
    method: GET
    data_selector: testsuites
- name: HTML Reporter
  endpoint:
    path: /api/
    method: GET
    data_selector: test results
    params: {}
- name: reporter
  endpoint:
    path: /services/.../reporter
    method: POST
    data_selector: results
    params: {}
- name: custom_reporter
  endpoint:
    path: /path/to/custom_reporter.js
    method: GET
- name: modify_device_dimensions
  endpoint:
    path: /guide/mobile-web-testing/override-device-dimensions.html
    method: GET
    data_selector: tests
    params: {}
- name: reset_device_dimensions
  endpoint:
    path: /guide/mobile-web-testing/override-device-dimensions.html
    method: GET
    data_selector: tests
    params: {}
- name: custom_commands
  endpoint:
    path: nightwatch/commands
    method: POST
    data_selector: commands
- name: plugin_installation
  endpoint:
    path: /guide/extending-nightwatch/adding-plugins
    method: GET
    data_selector: plugins
    params: {}
- name: browserstack
  endpoint:
    path: /hub-cloud.browserstack.com
    method: GET
    data_selector: desiredCapabilities
    params: {}
- name: nightwatch
  endpoint:
    path: /_setup-nightwatch-env.js
    method: GET
- name: axeInject
  endpoint:
    path: /api/axeInject
    method: GET
- name: captureBrowserConsoleLogs
  endpoint:
    path: /api/client-commands/logs/captureBrowserConsoleLogs
    method: POST
    data_selector: event
    params: {}
- name: debug
  endpoint:
    path: /api/debug
    method: GET
    data_selector: available_commands
    params: {}
- name: end
  endpoint:
    path: /api/end
    method: POST
    data_selector: session
    params: {}
- name: getLog
  endpoint:
    path: /api/getLog
    method: GET
    data_selector: logEntriesArray
    params: {}
- name: log_types
  endpoint:
    path: /getLogTypes
    method: GET
    data_selector: logTypes
- name: getPerformanceMetrics
  endpoint:
    path: /api/getPerformanceMetrics
    method: GET
- name: performance_metrics
  endpoint:
    path: /getPerformanceMetrics
    method: GET
    data_selector: metrics
- name: getTitle
  endpoint:
    path: /api/getTitle
    method: GET
    data_selector: title
    params: {}
- name: screenshot
  endpoint:
    path: /api/saveScreenshot
    method: POST
- name: saveSnapshot
  endpoint:
    path: /lib/api/client-commands/saveSnapshot.js
    method: GET
    data_selector: parameters
    params: {}
- name: screenshot
  endpoint:
    path: /#take-screenshot
    method: GET
- name: session
  endpoint:
    path: /session
    method: GET
    data_selector: value
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
- name: setGeolocation
  endpoint:
    path: /api/client-commands/setGeolocation
    method: POST
    data_selector: coordinates
    params: {}
- name: status
  endpoint:
    path: /#status
    method: GET
- name: takeHeapSnapshot
  endpoint:
    path: /api/takeHeapSnapshot
    method: GET
    data_selector: value
- name: timeoutsAsyncScript
  endpoint:
    path: /lib/api/protocol/timeoutsAsyncScript.js
    method: GET
    data_selector: result
    params: {}
- name: timeoutsImplicitWait
  endpoint:
    path: /api/protocol/timeoutsImplicitWait
    method: POST
    data_selector: result
    params: {}
- name: useXpath
  endpoint:
    path: /api/client-commands/useXpath
    method: GET
- name: waitForElementVisible
  endpoint:
    path: /api/element-commands/waitForElementVisible
    method: GET
    data_selector: records
    params: {}
- name: accept
  endpoint:
    path: /alerts/accept
    method: POST
    data_selector: alert
    params: {}
- name: alerts
  endpoint:
    path: /alerts/dismiss
    method: POST
    data_selector: alert
    params: {}
- name: getText
  endpoint:
    path: /api/alerts/getText
    method: GET
- name: setText
  endpoint:
    path: /alerts/setText
    method: POST
    data_selector: value
    params: {}
- name: get_context
  endpoint:
    path: /api/appium/getContext
    method: GET
    data_selector: value
    params: {}
- name: getContexts
  endpoint:
    path: /appium/getContexts
    method: GET
    data_selector: value
- name: getCurrentActivity
  endpoint:
    path: /appium/getCurrentActivity
    method: GET
    data_selector: value
    params: {}
- name: getCurrentPackage
  endpoint:
    path: /appium/getCurrentPackage
    method: GET
- name: getOrientation
  endpoint:
    path: /appium/getOrientation
    method: GET
    data_selector: ''
    params: {}
- name: hideKeyboard
  endpoint:
    path: /appium/hideKeyboard
    method: POST
    data_selector: result
    params: {}
- name: longPressKeyCode
  endpoint:
    path: /api/protocol/appium/longPressKeyCode
    method: POST
    data_selector: keycode
- name: pressKeyCode
  endpoint:
    path: /api/appium/pressKeyCode
    method: POST
- name: setContext
  endpoint:
    path: /api/protocol/appium/setContext
    method: POST
- name: startActivity
  endpoint:
    path: /docs/en/commands/device/activity/start-activity/
    method: POST
    data_selector: opts
- name: assert
  endpoint:
    path: /api/assert/
    method: GET
    data_selector: assertions
    params: {}
- name: attributeEquals
  endpoint:
    path: /api/assert/attributeEquals
    method: GET
    data_selector: definition
    params: {}
- name: attributeMatches
  endpoint:
    path: /api/assert/attributeMatches
    method: GET
    data_selector: params
- name: cssProperty
  endpoint:
    path: /api/assert/cssProperty
    method: GET
    data_selector: checks
    params: {}
- name: elementsCount
  endpoint:
    path: /api/assert/elementsCount
    method: GET
    data_selector: usage
    params: {}
- name: hasClass
  endpoint:
    path: /api/assertions/hasClass
    method: GET
    data_selector: parameters
- name: assert.hasDescendants
  endpoint:
    path: /api/assert/hasDescendants
    method: GET
    data_selector: parameters
- name: assert.enabled
  endpoint:
    path: /api/assert/enabled
    method: GET
    data_selector: definition
- name: assert.textEquals
  endpoint:
    path: /api/assert/textEquals
    method: GET
    data_selector: parameters
- name: textMatches
  endpoint:
    path: /api/assert/textMatches
    method: GET
    data_selector: parameters
- name: titleContains
  endpoint:
    path: /api/assert/titleContains
    method: GET
    data_selector: parameters
- name: assert.titleEquals
  endpoint:
    path: /api/assert/titleEquals
    method: GET
    data_selector: parameters
- name: titleMatches
  endpoint:
    path: .assert.titleMatches()
    method: GET
    data_selector: ''
    params: {}
- name: urlContains
  endpoint:
    path: /api/assert/urlContains
    method: GET
    data_selector: parameters
- name: urlEquals
  endpoint:
    path: /assert/urlEquals
    method: GET
    data_selector: urlEquals
- name: urlMatches
  endpoint:
    path: /assert/urlMatches
    method: GET
    data_selector: urlMatches
    params: {}
- name: assert.valueContains
  endpoint:
    path: /api/assert/valueContains
    method: GET
    data_selector: parameters
- name: valueEquals
  endpoint:
    path: /api/assert/valueEquals
    method: GET
    data_selector: definition
    params: {}
- name: assert.visible
  endpoint:
    path: /api/assert/visible
    method: GET
    data_selector: definition
- name: cookies
  endpoint:
    path: /api/cookies/delete
    method: POST
    data_selector: response
    params: {}
- name: delete_all_cookies
  endpoint:
    path: /cookies/deleteAll
    method: DELETE
    data_selector: ''
    params: {}
- name: cookie
  endpoint:
    path: /cookies/get
    method: GET
    data_selector: value
- name: cookies
  endpoint:
    path: /cookies/getAll
    method: GET
- name: cookie
  endpoint:
    path: /cookies/set
    method: POST
    data_selector: cookie
    params: {}
- name: get page source
  endpoint:
    path: /#get-page-source
    method: GET
    data_selector: result.value
- name: executeScript
  endpoint:
    path: /api/document/executeScript
    method: POST
    data_selector: result
- name: executeAsync
  endpoint:
    path: /document/executeAsyncScript
    method: GET
- name: find
  endpoint:
    path: /api/element/find
    method: GET
- name: findAll
  endpoint:
    path: /api/element/findAll
    method: GET
    data_selector: Array.<ScopeWebElement>
- name: find_by_alt_text
  endpoint:
    path: /api/web-element/commands/findByAltText
    method: GET
    data_selector: parameters
- name: findAllByAltText
  endpoint:
    path: /api/web-element/commands/findAllByAltText
    method: GET
- name: findAllByPlaceholderText
  endpoint:
    path: /lib/api/web-element/commands/findAllByPlaceholderText.js
    method: GET
    data_selector: elements
    params: {}
- name: findByRole
  endpoint:
    path: /lib/api/web-element/commands/findByRole.js
    method: GET
    data_selector: element
    params: {}
- name: findAllByRole
  endpoint:
    path: /api/web-element/commands/findAllByRole
    method: GET
    data_selector: elements
    params: {}
- name: findByLabelText
  endpoint:
    path: /lib/api/web-element/commands/findByLabelText.js
    method: GET
    data_selector: element
    params: {}
- name: findByText
  endpoint:
    path: /api/web-element/commands/findByText
    method: GET
    data_selector: element
    params: {}
- name: findAllByText
  endpoint:
    path: /api/web-element/commands/findAllByText
    method: GET
    data_selector: elements
- name: getFirstElementChild
  endpoint:
    path: /api/element/getFirstElementChild
    method: GET
- name: getLastElementChild
  endpoint:
    path: /lib/api/web-element/commands/getLastElementChild.js
    method: GET
    data_selector: resultElement
- name: getNextElementSibling
  endpoint:
    path: /lib/api/web-element/commands/getNextElementSibling.js
    method: GET
    data_selector: returns
- name: getPreviousElementSibling
  endpoint:
    path: /lib/api/web-element/commands/getPreviousElementSibling.js
    method: GET
    data_selector: resultElement
- name: getShadowRoot
  endpoint:
    path: /getShadowRoot
    method: GET
    data_selector: shadowRoot
    params: {}
- name: clear
  endpoint:
    path: /element/clear
    method: POST
    data_selector: ScopedWebElement
- name: element.click
  endpoint:
    path: /api/web-element/commands/click
    method: GET
    data_selector: element
    params: {}
- name: dragAndDrop
  endpoint:
    path: /api/web-element/commands/dragAndDrop
    method: GET
    data_selector: description
- name: setAttribute
  endpoint:
    path: /api/element/setAttribute
    method: POST
    data_selector: ScopedWebElement
    params: {}
- name: setProperty
  endpoint:
    path: /lib/api/web-element/commands/setProperty.js
    method: GET
    data_selector: parameters
    params: {}
- name: setValue
  endpoint:
    path: /api/web-element/commands/setValue
    method: POST
    data_selector: result
    params: {}
- name: submit
  endpoint:
    path: /api/web-element/commands/submit
    method: POST
    data_selector: ScopedWebElement
    params: {}
- name: update
  endpoint:
    path: /api/element/update
    method: POST
    data_selector: element
    params: {}
- name: upload
  endpoint:
    path: /element/upload
    method: POST
    data_selector: ScopedWebElement
- name: submitForm
  endpoint:
    path: /api/element-commands/submitForm
    method: POST
    data_selector: result
- name: uncheck
  endpoint:
    path: /lib/api/web-element/commands/uncheck.js
    method: GET
    data_selector: element.uncheck
- name: updateValue
  endpoint:
    path: /api/element-commands/updateValue
    method: POST
    data_selector: records
- name: uploadFile
  endpoint:
    path: /api/element-commands/uploadFile
    method: POST
    data_selector: records
- name: clearValue
  endpoint:
    path: /api/element-commands/clearValue
    method: GET
    data_selector: result
- name: elementActive
  endpoint:
    path: /lib/api/protocol/elementActive.js
    method: GET
    data_selector: result
    params: {}
- name: getAttribute
  endpoint:
    path: /api/web-element/commands/getAttribute
    method: GET
    data_selector: attribute
    params: {}
- name: getCssProperty
  endpoint:
    path: /api/web-element/commands/getCssProperty
    method: GET
    data_selector: cssProperty
- name: getProperty
  endpoint:
    path: /lib/api/web-element/commands/getProperty.js
    method: GET
    data_selector: result
    params: {}
- name: getRect
  endpoint:
    path: /api/element/getRect
    method: GET
- name: getElementSize
  endpoint:
    path: /api/element-commands/getElementSize
    method: GET
    data_selector: '*'
- name: getTagName
  endpoint:
    path: /api/web-element/commands/getTagName
    method: GET
    data_selector: ScopedValue<string>
- name: element_getText
  endpoint:
    path: /api/element/getText
    method: GET
    data_selector: returns
- name: getValue
  endpoint:
    path: /api/web-element/commands/getValue
    method: GET
    data_selector: returns
- name: getId
  endpoint:
    path: /api/web-element/commands/getId
    method: GET
    data_selector: element ID
- name: hasDescendants
  endpoint:
    path: /lib/api/element-commands/hasDescendants.js
    method: GET
    data_selector: result
- name: isEnabled
  endpoint:
    path: /lib/api/web-element/commands/isEnabled.js
    method: GET
    data_selector: ScopedValue<boolean>
    params: {}
- name: isSelected
  endpoint:
    path: /lib/api/web-element/commands/isSelected.js
    method: GET
    data_selector: description
- name: isPresent
  endpoint:
    path: /lib/api/web-element/commands/isPresent.js
    method: GET
    data_selector: ScopedValue<boolean>
    params: {}
- name: isActive
  endpoint:
    path: /lib/api/web-element/commands/isActive.js
    method: GET
- name: waitUntil
  endpoint:
    path: /api/element/waitUntil
    method: GET
- name: clickAndHold
  endpoint:
    path: /api/element/clickAndHold
    method: POST
    data_selector: ScopedWebElement
- name: doubleClick
  endpoint:
    path: /lib/api/web-element/commands/doubleClick.js
    method: GET
- name: rightClick
  endpoint:
    path: /api/web-element/commands/rightClick
    method: GET
- name: element_moveTo
  endpoint:
    path: /api/element/moveTo
    method: POST
    data_selector: ScopedWebElement
    params: {}
- name: mock_response
  endpoint:
    path: /network/mockResponse
    method: POST
    data_selector: response
    params: {}
- name: set_conditions
  endpoint:
    path: /network/setConditions
    method: POST
    data_selector: spec
    params: {}
- name: getAllHandles
  endpoint:
    path: /api/client-commands/window/getAllHandles
    method: GET
    data_selector: result.value
    params: {}
- name: getHandle
  endpoint:
    path: /window/getHandle
    method: GET
- name: get_current_window_position
  endpoint:
    path: /window/getPosition
    method: GET
    data_selector: value
    params: {}
- name: getRect
  endpoint:
    path: /window/getRect
    method: GET
    data_selector: result.value
    params: {}
- name: window_size
  endpoint:
    path: /window/getSize
    method: GET
    data_selector: value
    params: {}
- name: window_minimize
  endpoint:
    path: /lib/api/client-commands/window/minimize.js
    method: GET
    data_selector: usage
- name: window_open
  endpoint:
    path: /api/client-commands/window/open.js
    method: GET
    data_selector: window.open
- name: setPosition
  endpoint:
    path: /api/window/setPosition
    method: POST
    data_selector: result
    params: {}
- name: setRect
  endpoint:
    path: /window/setRect
    method: POST
    data_selector: options
    params: {}
- name: window.switchTo
  endpoint:
    path: /api/window/switchTo
    method: GET
    data_selector: switchTo
    params: {}
notes:
- Analyzes the current page against applied axe rules.
- Nightwatch is committed to open source. Everything works for everyone.
- Tests can have multiple steps
- Using XPath selectors
- BDD Expect Assertions
- Asynchronous before[Each] and after[Each] hooks
- Parallel Running
- Unit tests now written in Nightwatch are also fully compatible with Mocha's Exports
  interface.
- Nightwatch was established in 2014 and since 2021 it is actively maintained at BrowserStack
  with the help of all our contributors.
- Code licensed under the MIT License.
- Nightwatch v3 introduces a point and click tool that can help you easily find selectors.
- Visual regression testing is available as an in-house plugin.
- Nightwatch supports all Node versions above V14.20
- This controls whether to abort the test execution when an assertion failed and skip
  the rest
- The external globals file can also contain global test hooks, a custom reporter,
  test specific settings
- Test concurrency is done at the file level. Each test file will fill a test worker
  slot. Individual tests/steps in a test file will not run concurrently.
- You can create a separate environment per browser (by chaining `desiredCapabilities`)
  and then run them in parallel.
- You can find all key press constants here
- By default, Nightwatch automatically retries failed assertions for up to 5000 milliseconds.
- Globals can be defined either as a 'globals' property or as an external file which
  is specified as the 'globals_path' property.
- Global before and after hooks can be defined.
- Asynchronous methods must call the callback when the operation finishes.
- Nightwatch VRT uses the JIMP image processing library for image comparison.
- Requires Nightwatch 2.6.4 or higher.
- Ensure that the API tests are run against an environment where the start_session
  and webdriver -> start_process are set to false.
- Set the unit_tests_mode option to true in the nightwatch.json
- You can set the @unitTest property to true if you'd like to have individual test
  suites as unit tests
- Supports running tests in parallel mode via test workers.
- Can specify the testing environment using --env or -e argument.
- Chrome DevTools Recorder allows you to record and replay test actions directly in
  the browser.
- Nightwatch assumes the Vite dev server is already running
- The @nightwatch/react plugin manages its own Vite dev server internally
- File names must use .jsx or .tsx as extension
- Nightwatch automatically picks up the A11y rules from the story config and uses
  them to run its own accessibility test commands.
- Mobile app testing setup steps include using commands like npx @nightwatch/mobile-helper.
- Appium setup is required for mobile testing.
- Appium supports selector strategies like id and xpath.
- XPath should only be used when there is no ID, Name, or accessibility ID assigned
  to a specific UI element.
- Using XPath is not recommended because it has stability and performance issues.
- Supports testing on real devices via BrowserStack.
- Debugging mobile app tests is not as straightforward as the web as dev tools is
  not available.
- Appium inspector is recommended for debugging tests.
- Uses Appium for debugging mobile app tests
- Using it with Nightwatch is very straightforward and there is configuration in the
  auto-generated 'nightwatch.conf.js' file.
- Remember to also enable HTTP keepalive for improved network performance.
- BrowserStack Local needs to be instantiated only once at the beginning of your build
  and stopped once all the tests execution has completed.
- Nightwatch reads the page objects from the folder specified in the page_objects_path
  configuration property.
- Usage of .pause() command to pause the test programmatically.
- pause() command can be used while debugging.
- Please use async/await while using the .debug() command, otherwise proper results
  won't be returned back to the interface.
- Uses browser.captureBrowserExceptions() to capture JS exceptions.
- Jenkins executes the pipeline in a blank shell instance. In order to use npm commands,
  the NodeJS plugin would have to be installed.
- This workflow will do a clean installation of node dependencies, cache/restore them,
  build the source code and run tests across different versions of node.
- Bamboo is a continuous integration server developed by Atlassian, that allows you
  to build, test, and deploy your web applications.
- We presume you have a working project to test that has been pushed to Github. And
  your tests are running properly in your local system.
- 'Java and a database (eg: postgres, MySQL etc) must be installed; walkthrough the
  guide for supported versions'
- In case while executing these commands you are getting errors in default Node.js
  executable. You may try using node version manager to install Node.js and get its
  path using which node command.
- After saving and running, you may encounter an error stating that no hosted parallelism
  has been purchased or granted. Please fill out the form to request a free parallelism
  grant.
- You can copy and paste this template into a new `.gitlab-ci.yml` file.
- Ensure to install Google Chrome and Chromedriver in the pipeline.
- This command only works with Chromium based browsers such as Google Chrome and Microsoft
  Edge.
- Mocking the geolocation of your browser allows you to override the location sent
  by your browser to your website.
- The JUnit XML report files will be saved in the output_folder specified.
- If output_folder’s subfolder nightwatch-examples isn’t already present and the parameter
  --reporter=json supplied explicitly then the reports will be stored inside output_folder
  itself.
- You must create a Slack app and set up an incoming webhook to send messages.
- slack_webhook_url must be configured with the URL obtained from Slack.
- In order to compose with another reporter (e.g. nightwatch-html-reporter), you can
  follow the example shown below.
- HTML snapshots are embedded in the report in the browser itself.
- Open the DevTools window automatically during test run.
- Packed extensions are a single file with a .crx extension.
- Unpacked extensions are a directory containing the extension, including a manifest.json
  file.
- The setDeviceDimensions() command only works with Chromium based browsers such as
  Google Chrome and Microsoft Edge.
- Specify the path to custom commands in the nightwatch.json file using the custom_commands_path
  property.
- Use class-based approach for defining custom commands
- Function-style commands are deprecated
- To install SafariDriver, download the SafariDriver.safariextz file from the folder
  that matches the version of Selenium you're using.
- Ava is a test runner for Node.js with a concise API.
- Ava can be configured with Nightwatch.js to function as an integrated test framework.
- Ava has different naming conventions so you should confirm that your tests are following
  the guide
- Jest has different naming conventions for hooks so you should confirm that your
  tests are following this guide.
- Metrics collection only begin after enablePerformanceMetrics() command is called.
- getPerformanceMetrics() is only available when using Chrome or Edge drivers.
- setDeviceDimensions() is only available when using Chrome or Edge drivers.
- takeHeapSnapshot() is only available when using Chrome or Edge drivers.
- Configure or retrieve the amount of time that a particular type of operation can
  execute for before they are aborted and a Timeout error is returned to the client.
- Set the amount of time, in milliseconds, that asynchronous scripts executed by .executeAsync
  are permitted to run before they are aborted and a |Timeout| error is returned to
  the client.
- The driver should wait when searching for elements.
- Default timeout is 5000ms for waitForElementNotPresent.
- Polling interval can be defined in nightwatch.json or external globals file.
- If the element fails to be present in the specified amount of time, the test fails.
- You can change the polling interval by defining a waitForConditionPollInterval property
  (in milliseconds) in as a global property in your nightwatch.json or in your external
  globals file.
- Similarly, the default timeout can be specified as a global waitForConditionTimeout
  property (in milliseconds).
- Waits a given time in milliseconds (default 5000ms) for an element to be visible
  in the page before performing any other commands or assertions.
- Similarly, a default timeout can be specified as a global waitForConditionTimeout
  property (in milliseconds).
- Press and hold a particular key on an Android Device.
- appPackage and appActivity are required, others are optional.
- The built-in extendable `assert`/`verify` library is available on the Nightwatch
  instance.
- Checks if the given element contains the specified text.
- Utility command to load an external script into the page specified by url.
- An object map with available keys and their respective UTF-8 characters is loaded
  onto the main Nightwatch instance as browser.Keys.
- The command getElementSize() will automatically wait for the element to be present
  (until the specified timeout). If the element is not found, an error is thrown which
  will cause the test to fail.
- The command hasDescendants() will automatically wait for the element to be present
  (until the specified timeout).
- If the element is not found, an error is thrown which will cause the test to fail.
- You can suppress element not found errors by specifying the selector argument as
  an object and passing the suppressNotFoundErrors = true option.
- Waits a given time in milliseconds (default 5000ms) for an element to be in the
  action state provided before performing any other commands or assertions.
- network.captureRequests() is only available when using Chrome or Edge drivers.
- Retrieve the list of all window handles available to the session.
- Fetches the window rect - size and position of the current window.
- This command is only available for W3C Webdriver compatible browsers.
- Change the window rect - size and position of the current window.
- All attributes are in CSS pixels.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '403 Forbidden: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request later.'
- Ensure all dependencies are installed correctly before running tests.
- 'Element not found error: Can suppress by specifying the selector argument as an
  object and passing suppressNotFoundErrors = true option.'
auth_info:
  mentioned_objects:
  - userName
  - accessKey
client:
  base_url: http://localhost
  selenium:
    port: 4444
    start_process: false
    desiredCapabilities:
      browserName: firefox
      marionette: true
  test_settings:
    default:
      launch_url: http://localhost
      selenium_port: 4444
      selenium_host: localhost
      silent: true
      screenshots:
        enabled: false
        path: ''
    chrome:
      desiredCapabilities:
        browserName: chrome
    edge:
      desiredCapabilities:
        browserName: MicrosoftEdge
source_metadata: null
