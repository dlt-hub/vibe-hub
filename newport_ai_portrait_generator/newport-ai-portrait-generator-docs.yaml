resources:
- name: ai_portrait_generator
  endpoint:
    path: /api/async/ai_portrait_generator
    method: POST
- name: get_pattern_list
  endpoint:
    path: /api/async/get_pattern_list
    method: GET
- name: polling
  endpoint:
    path: /api/async/polling
    method: POST
- name: ai_portrait_patterns
  endpoint:
    path: /api/ai_portrait_patterns
    method: GET
    data_selector: data.list
- name: ai_portrait_patterns
  endpoint:
    path: /api/ai_portrait_patterns
    method: GET
- name: colorize
  endpoint:
    path: /api/async/colorize
    method: POST
    data_selector: data
    params: {}
- name: colorize
  endpoint:
    path: /api/async/colorize
    method: POST
    data_selector: data
    params: {}
- name: enhance
  endpoint:
    path: /api/async/enhance
    method: POST
    data_selector: data.taskId
    params: {}
- name: inpainting
  endpoint:
    path: /api/async/inpainting
    method: POST
    data_selector: data
    params: {}
- name: enhance
  endpoint:
    path: /api/async/enhance
    method: POST
    data_selector: data
    params: {}
- name: outpainting
  endpoint:
    path: /api/async/outpainting
    method: POST
    data_selector: data
    params: {}
- name: inpainting
  endpoint:
    path: /api/async/inpainting
    method: POST
    data_selector: data
    params: {}
- name: replace_background
  endpoint:
    path: /api/async/replace_background
    method: POST
    data_selector: data
    params: {}
- name: outpainting
  endpoint:
    path: /api/async/outpainting
    method: POST
    data_selector: data
    params: {}
- name: merge_face
  endpoint:
    path: /api/async/merge_face
    method: POST
    data_selector: data
    params: {}
- name: replace_background
  endpoint:
    path: /api/async/replace_background
    method: POST
    data_selector: data
    params: {}
- name: restore_face
  endpoint:
    path: /api/async/restore_face
    method: POST
    data_selector: data
    params: {}
- name: merge_face
  endpoint:
    path: /api/async/merge_face
    method: POST
    data_selector: data
    params: {}
- name: live_photo_templates
  endpoint:
    path: /api/live_photo_templates
    method: POST
    data_selector: data.templates
- name: live_photo
  endpoint:
    path: /api/async/live_photo
    method: POST
    data_selector: data
    params: {}
- name: restore_face
  endpoint:
    path: /api/async/restore_face
    method: POST
- name: talking_face
  endpoint:
    path: /api/async/talking_face
    method: POST
    data_selector: data
    params: {}
- name: live_photo_templates
  endpoint:
    path: /api/live_photo_templates
    method: POST
    data_selector: data.templates
- name: talking_image
  endpoint:
    path: /api/async/talking_image
    method: POST
- name: live_photo
  endpoint:
    path: /api/async/live_photo
    method: POST
    data_selector: data
    params: {}
- name: text_to_video
  endpoint:
    path: /api/async/text2video
    method: POST
    data_selector: data
    params: {}
- name: img2video
  endpoint:
    path: /api/async/img2video
    method: POST
    data_selector: data
    params: {}
- name: talking_face
  endpoint:
    path: /api/async/talking_face
    method: POST
    data_selector: data
    params: {}
- name: character_to_video
  endpoint:
    path: /api/async/character2video
    method: POST
    data_selector: data
    params: {}
- name: talking_image
  endpoint:
    path: /api/async/talking_image
    method: POST
    data_selector: data
    params: {}
- name: video_template
  endpoint:
    path: /api/get_video_template
    method: GET
    data_selector: data.list
    params: {}
- name: text_to_video
  endpoint:
    path: /api/async/text2video
    method: POST
    data_selector: data
    params: {}
- name: template_to_video
  endpoint:
    path: /api/async/template2video
    method: POST
    data_selector: data
    params: {}
- name: image_to_video
  endpoint:
    path: /api/async/img2video
    method: POST
    data_selector: data
    params: {}
- name: video_translate
  endpoint:
    path: /api/async/video_translate
    method: POST
    data_selector: data
    params: {}
- name: character_to_video
  endpoint:
    path: /api/async/character2video
    method: POST
    data_selector: data
    params: {}
- name: video_translate_only_voice
  endpoint:
    path: /api/async/video_translate_only_voice
    method: POST
    data_selector: data
    params: {}
- name: video_template
  endpoint:
    path: /api/get_video_template
    method: GET
    data_selector: data.list
    params: {}
- name: voice_clone
  endpoint:
    path: /api/async/voice_clone
    method: POST
    data_selector: data
    params: {}
- name: polling
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: template_to_video
  endpoint:
    path: /api/async/template2video
    method: POST
    data_selector: data
    params: {}
- name: get_video_template
  endpoint:
    path: /docs/get-video-template
    method: GET
    data_selector: templates
    params: {}
- name: do_tts_clone
  endpoint:
    path: /api/async/do_tts_clone
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: video_translate
  endpoint:
    path: /api/async/video_translate
    method: POST
    data_selector: data
    params: {}
- name: video_translate_only_voice
  endpoint:
    path: /api/async/video_translate_only_voice
    method: POST
- name: do_tts_common
  endpoint:
    path: /api/async/do_tts_common
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: voice_clone
  endpoint:
    path: /api/async/voice_clone
    method: POST
    data_selector: data
    params: {}
- name: polling
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: do_tts_pro
  endpoint:
    path: /api/async/do_tts_pro
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: do_tts_clone
  endpoint:
    path: /api/async/do_tts_clone
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: do_stt
  endpoint:
    path: /api/async/do_stt
    method: POST
    data_selector: data
    params: {}
- name: getAsyncResult
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: do_stt_pro
  endpoint:
    path: /api/async/do_stt_pro
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: do_tts_common
  endpoint:
    path: /api/async/do_tts_common
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: get_policy
  endpoint:
    path: /get_policy
    method: POST
    data_selector: data
    params:
      scene: Dream-CN
- name: do_tts_pro
  endpoint:
    path: /api/async/do_tts_pro
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: upload
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: upload_result
  endpoint:
    path: /api/file/v1/policy_upload_finish
    method: POST
    data_selector: data
    params: {}
- name: do_stt
  endpoint:
    path: /api/async/do_stt
    method: POST
    data_selector: data
    params: {}
- name: getAsyncResult
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: getAsyncResult
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: do_stt_pro
  endpoint:
    path: /api/async/do_stt_pro
    method: POST
    data_selector: data
    params: {}
- name: get_async_result
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
- name: get_upload_policy
  endpoint:
    path: /get_policy
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: upload_result
  endpoint:
    path: /api/file/v1/policy_upload_finish
    method: POST
    data_selector: data
    params:
      reqId: reqId
- name: getAsyncResult
  endpoint:
    path: /api/getAsyncResult
    method: POST
    data_selector: data
    params: {}
notes:
- Use Bearer authentication format
- 'Bearer authentication format, for example: Bearer'
- Uses Bearer authentication format
- Use Replace backgroup API to get taskId with POST method.
- Use Polling API to get Replace backgroup result with POST method.
- Use Polling API to get the result.
- Use Face Restoration API to get taskId with POST method.
- Use Polling API to get Face Restoration result with POST method.
- Use Face Merging API to get taskId with POST method.
- Use Polling API to get Face Merging result with POST method.
- Bearer authentication format required.
- Supports multiple languages.
- Use Live Photo API to get taskId with POST method.
- Use Polling API to get Live Photo result with POST method.
- The image format only supports JPG and PNG, with a size limit of 50MB. The aspect
  ratio needs to be less than 1:4 or 4:1.
- User will receive a video generated based on the uploaded image and the selected
  template style.
- Bearer authentication format is required.
- Clone Id is required, use the Voice Clone API first to get the cloneId.
- Use Do STT API to get taskId with POST method.
- Use Polling API to get result.
- Requires a voiceId from the common voice list
- Use Polling API to get the result after creating a task
- Authorization in Bearer format is required.
- audioId, text, and lan are required fields in the request body.
- The form request contains file content and parameters returned by the server.
- Uses Bearer authentication format.
- Audio file must be less than 20MB and 2 hours long.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The request for signature is required.
- File that need to be upload must be the last parameter of the form.
errors:
- '0: success, or error code'
- '0: success, or error code.'
- 0 success, or error code.
- 'code: 0 success, or error code.'
- 0 success, or error code
- '0: success'
- 'error code: specific error codes not detailed'
- 'code: 0 for success, or error code returned in the response'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.newportai.com
  auth:
    type: Bearer
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
