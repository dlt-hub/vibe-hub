resources:
- name: species
  endpoint:
    path: /api/v1/species
    method: GET
    data_selector: results
- name: occurrences
  endpoint:
    path: /api/v1/occurrences
    method: GET
    data_selector: results
- name: occurrence
  endpoint:
    path: /v1/occurrence
    method: GET
    data_selector: results
- name: dataset_validator
  endpoint:
    path: /tools/data-validator
    method: GET
    data_selector: records
- name: species_matching
  endpoint:
    path: /tools/species-lookup
    method: GET
    data_selector: records
- name: species_api
  endpoint:
    path: /openapi/v1/species
    method: GET
    data_selector: records
- name: checklistbank
  endpoint:
    path: /checklistbank.json
    method: GET
- name: event
  endpoint:
    path: /event.json
    method: GET
- name: literature
  endpoint:
    path: /literature.json
    method: GET
- name: matching-xcol
  endpoint:
    path: /matching-xcol.json
    method: GET
- name: occurrence-annotation
  endpoint:
    path: /occurrence-annotation.json
    method: GET
- name: occurrence-download-launcher
  endpoint:
    path: /occurrence-download-launcher.json
    method: GET
- name: occurrence
  endpoint:
    path: /occurrence.json
    method: GET
- name: registry-principal-methods
  endpoint:
    path: /registry-principal-methods.json
    method: GET
- name: registry
  endpoint:
    path: /registry.json
    method: GET
- name: v2-maps
  endpoint:
    path: /v2-maps.json
    method: GET
- name: v2-maps-old
  endpoint:
    path: /v2-maps.json.old
    method: GET
- name: validator
  endpoint:
    path: /validator.json
    method: GET
- name: vocabulary
  endpoint:
    path: /vocabulary.json
    method: GET
- name: species_search
  endpoint:
    path: /species/search
    method: GET
    data_selector: Name usages found
    params: {}
- name: root_name_usages
  endpoint:
    path: /species/root/{datasetKey}
    method: GET
    data_selector: Root name usages of a dataset
    params:
      datasetKey: string
- name: species_match
  endpoint:
    path: /v2/species/match
    method: GET
    data_selector: suggestions
- name: species_match_legacy
  endpoint:
    path: /v1/species/match
    method: GET
    data_selector: suggestions
    params:
      deprecated: true
- name: parse_name
  endpoint:
    path: /parser/name
    method: GET
    data_selector: ParsedName
    params: {}
- name: get_name_usage_vernacular_names
  endpoint:
    path: /species/{usageKey}/vernacularNames
    method: GET
    data_selector: PagingResponseVernacularName
    params: {}
- name: get_name_usage_verbatim
  endpoint:
    path: /species/{usageKey}/verbatim
    method: GET
    data_selector: VerbatimNameUsage
    params: {}
- name: get_name_usage_type_specimens
  endpoint:
    path: /species/{usageKey}/typeSpecimens
    method: GET
    data_selector: PagingResponseTypeSpecimen
    params: {}
- name: get_name_usage_descriptions_table_of_contents
  endpoint:
    path: /species/{usageKey}/toc
    method: GET
    data_selector: TableOfContents
    params: {}
- name: get_name_usage_synonyms
  endpoint:
    path: /species/{usageKey}/synonyms
    method: GET
    data_selector: PagingResponseNameUsage
    params: {}
- name: get_name_usage_species_profiles
  endpoint:
    path: /species/{usageKey}/speciesProfiles
    method: GET
    data_selector: PagingResponseSpeciesProfile
    params: {}
- name: get_name_usage_related
  endpoint:
    path: /species/{usageKey}/related
    method: GET
    data_selector: PagingResponseNameUsage
    params: {}
- name: get_name_usage_references
  endpoint:
    path: /species/{usageKey}/references
    method: GET
    data_selector: PagingResponseReference
    params: {}
- name: vernacular_name
  endpoint:
    path: /vernacularNames
    method: GET
    data_selector: results
    params: {}
- name: type_specimen
  endpoint:
    path: /typeSpecimens
    method: GET
    data_selector: results
    params: {}
- name: name_usage_media
  endpoint:
    path: /nameUsage/media
    method: GET
    data_selector: results
- name: identifier
  endpoint:
    path: /identifier
    method: GET
    data_selector: results
- name: distribution
  endpoint:
    path: /distribution
    method: GET
    data_selector: results
- name: name_usage_parents
  endpoint:
    path: /species/{usageKey}/parents
    method: GET
    data_selector: content.application/json.schema.items
    params:
      usageKey: '5231190'
- name: name_usage_name_parsed
  endpoint:
    path: /species/{usageKey}/name
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_metrics
  endpoint:
    path: /species/{usageKey}/metrics
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_media
  endpoint:
    path: /species/{usageKey}/media
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_iucn_red_list_category
  endpoint:
    path: /species/{usageKey}/iucnRedListCategory
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_identifiers
  endpoint:
    path: /species/{usageKey}/identifier
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_distributions
  endpoint:
    path: /species/{usageKey}/distributions
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_descriptions
  endpoint:
    path: /species/{usageKey}/descriptions
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_recombinations
  endpoint:
    path: /species/{usageKey}/combinations
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_children_all
  endpoint:
    path: /species/{usageKey}/childrenAll
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage_children
  endpoint:
    path: /species/{usageKey}/children
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: name_usage
  endpoint:
    path: /species/{usageKey}
    method: GET
    data_selector: content.application/json.schema
    params:
      usageKey: '5231190'
- name: suggest_names
  endpoint:
    path: /species/suggest
    method: GET
    data_selector: content.application/json.schema.items
    params: {}
- name: event
  endpoint:
    path: /api/v1/event
    method: GET
    data_selector: results
    params: {}
- name: occurrence
  endpoint:
    path: /v1/occurrence
    method: GET
    data_selector: results
- name: occurrence
  endpoint:
    path: /occurrence/search
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: validateDownloadRequest
  endpoint:
    path: /event/download/request/validate
    method: POST
    data_selector: 'null'
- name: requestDownload
  endpoint:
    path: /event/download/request
    method: POST
    data_selector: 'null'
- name: subEvents
  endpoint:
    path: /event/{id}/subEvents
    method: GET
    data_selector: PagingResponseEvent
- name: getParentEvent
  endpoint:
    path: /event/{id}/parent
    method: GET
    data_selector: Event
- name: getOccurrences
  endpoint:
    path: /event/{id}/occurrences
    method: GET
    data_selector: PagingResponseOccurrence
- name: getLineage
  endpoint:
    path: /event/{id}/lineage
    method: GET
    data_selector: Lineage
- name: get
  endpoint:
    path: /event/{id}
    method: GET
    data_selector: Event
- name: subEvents_1
  endpoint:
    path: /event/{datasetKey}/{eventId}/subEvents
    method: GET
    data_selector: PagingResponseEvent
- name: getParentEvent_1
  endpoint:
    path: /event/{datasetKey}/{eventId}/parent
    method: GET
    data_selector: Event
- name: getOccurrences_1
  endpoint:
    path: /event/{datasetKey}/{eventId}/occurrences
    method: GET
    data_selector: PagingResponseOccurrence
- name: getLineage_1
  endpoint:
    path: /event/{datasetKey}/{eventId}/lineage
    method: GET
    data_selector: Lineage
- name: get_1
  endpoint:
    path: /event/{datasetKey}/{eventId}
    method: GET
    data_selector: Event
- name: search
  endpoint:
    path: /event/search
    method: GET
    data_selector: SearchResponseEventOccurrenceSearchParameter
- name: retrieveDownload
  endpoint:
    path: /event/download/request/{key}
    method: GET
    data_selector: 'null'
- name: cancelDownload
  endpoint:
    path: /event/download/request/{key}
    method: DELETE
    data_selector: 'null'
- name: searchToPredicate
  endpoint:
    path: /event/download/request/predicate
    method: GET
    data_selector: DownloadRequest
- name: literature_search
  endpoint:
    path: /literature/search
    method: GET
    data_selector: results
- name: countriesOfResearcher
  endpoint:
    path: /v1/enumeration/country
    method: GET
    data_selector: countries
    params: {}
- name: literature
  endpoint:
    path: /v1/literature
    method: GET
    data_selector: literature
    params: {}
- name: literature_item_by_id
  endpoint:
    path: /literature/{uuid}
    method: GET
    data_selector: LiteratureSearchResult
    params: {}
- name: search_literature
  endpoint:
    path: /literature/search
    method: GET
    data_selector: LiteratureSearchResult
    params: {}
- name: export_literature_search_results
  endpoint:
    path: /literature/export
    method: GET
    data_selector: LiteratureSearchResult
    params: {}
- name: match_names
  endpoint:
    path: /v2/species/match
    method: GET
    data_selector: application/json
    params: {}
- name: metadata
  endpoint:
    path: /v2/species/match/metadata
    method: GET
    data_selector: application/json
    params: {}
- name: join_lookup
  endpoint:
    path: /v2/species/match/joins/{identifier}
    method: GET
    data_selector: application/json
    params: {}
- name: id_lookup
  endpoint:
    path: /v2/species/match/id/{identifier}
    method: GET
    data_selector: application/json
    params: {}
- name: id_lookup_by_dataset
  endpoint:
    path: /v2/species/match/id/{datasetId}/{identifier}
    method: GET
    data_selector: application/json
    params: {}
- name: legacy_match_names
  endpoint:
    path: /v1/species/match
    method: GET
    data_selector: application/json
    params: {}
- name: ruleset
  endpoint:
    path: /occurrence/experimental/annotation/ruleset/{id}
    method: GET
    data_selector: Ruleset
    params: {}
- name: project
  endpoint:
    path: /occurrence/experimental/annotation/project/{id}
    method: GET
    data_selector: Project
    params: {}
- name: rule
  endpoint:
    path: /occurrence/experimental/annotation/rule
    method: GET
    data_selector: Rule
    params: {}
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: records
- name: parameters
  endpoint:
    path: /parameters
    method: GET
    data_selector: records
- name: occurrence_search
  endpoint:
    path: /occurrence/search
    method: GET
    data_selector: results
    params: {}
- name: occurrence_download_request
  endpoint:
    path: /occurrence/download/request
    method: POST
    data_selector: request
    params: {}
- name: occurrence_search
  endpoint:
    path: /occurrence/search
    method: GET
    data_selector: records
- name: retrieveDownload
  endpoint:
    path: /occurrence/download/request/{key}
    method: GET
    data_selector: content
    params: {}
- name: cancelDownload
  endpoint:
    path: /occurrence/download/request/{key}
    method: DELETE
    data_selector: content
    params: {}
- name: validateDownloadRequest
  endpoint:
    path: /occurrence/download/request/validate
    method: POST
    data_selector: content
    params: {}
- name: searchToPredicate
  endpoint:
    path: /occurrence/download/request/predicate
    method: GET
    data_selector: content
    params: {}
- name: searchToSql_1
  endpoint:
    path: /occurrence/download/request/sql
    method: GET
    data_selector: content
    params: {}
- name: predicateSearchOccurrence
  endpoint:
    path: /occurrence/search/predicate
    method: POST
    data_selector: content
    params: {}
- name: occurrence_download_statistics
  endpoint:
    path: /occurrence/download/statistics
    method: GET
    data_selector: records
    params: {}
- name: export_dataset_usages_by_download_key
  endpoint:
    path: /occurrence/download/{key}/datasets/export
    method: GET
    data_selector: datasets
    params:
      key: string
      format: string
- name: get_download_citation_by_key
  endpoint:
    path: /occurrence/download/{key}/citation
    method: GET
    data_selector: citation
    params:
      key: string
- name: get_download_citation_by_doi
  endpoint:
    path: /occurrence/download/{prefix}/{suffix}/citation
    method: GET
    data_selector: citation
    params:
      prefix: string
      suffix: string
- name: suggestParentEventIds
  endpoint:
    path: /occurrence/search/parentEventId
    method: GET
    data_selector: items
    params:
      q: string
      limit: integer
- name: suggestRecordNumbers
  endpoint:
    path: /occurrence/search/recordNumber
    method: GET
    data_selector: items
    params:
      q: string
      limit: integer
- name: suggestRecordedBy
  endpoint:
    path: /occurrence/search/recordedBy
    method: GET
    data_selector: items
    params:
      q: string
      limit: integer
- name: suggestSamplingProtocols
  endpoint:
    path: /occurrence/search/samplingProtocol
    method: GET
    data_selector: items
    params:
      q: string
      limit: integer
- name: suggestStateProvinces
  endpoint:
    path: /occurrence/search/stateProvince
    method: GET
    data_selector: items
    params:
      q: string
      limit: integer
- name: suggestWaterBodies
  endpoint:
    path: /occurrence/search/waterBody
    method: GET
    data_selector: items
    params:
      q: string
      limit: integer
- name: suggestTerm
  endpoint:
    path: /occurrence/search/experimental/term/{term}
    method: GET
    data_selector: items
    params:
      term: string
      q: string
      limit: integer
- name: exportDownloadedStatistics
  endpoint:
    path: /occurrence/download/statistics/export
    method: GET
    data_selector: Download statistics.
    params:
      fromDate: required
      toDate: required
      publishingCountry: required
- name: getDownloadsByUserCountry
  endpoint:
    path: /occurrence/download/statistics/downloadsByUserCountry
    method: GET
    data_selector: Download statistics.
    params: {}
- name: getDownloadedRecordsByDataset_1
  endpoint:
    path: /occurrence/download/statistics/downloadedRecordsByDataset
    method: GET
    data_selector: Download statistics.
    params: {}
- name: getDownloadedRecordsByDataset
  endpoint:
    path: /occurrence/download/statistics/downloadsByDataset
    method: GET
    data_selector: Download statistics.
    params: {}
- name: getDownloadedRecordsBySource
  endpoint:
    path: /occurrence/download/statistics/downloadsBySource
    method: GET
    data_selector: Download statistics.
    params: {}
- name: gadmRegionBrowseLevel0
  endpoint:
    path: /geocode/gadm/browse
    method: GET
    data_selector: items
- name: gadmRegionBrowseLevel1
  endpoint:
    path: /geocode/gadm/browse/{level0}
    method: GET
    data_selector: items
- name: gadmRegionBrowseLevel2
  endpoint:
    path: /geocode/gadm/browse/{level0}/{level1}
    method: GET
    data_selector: items
- name: gadmRegionBrowseLevel3
  endpoint:
    path: /geocode/gadm/browse/{level0}/{level1}/{level2}
    method: GET
    data_selector: items
- name: gadmRegionSearch
  endpoint:
    path: /geocode/gadm/search
    method: GET
    data_selector: items
- name: occurrence
  endpoint:
    path: /v1/occurrence
    method: GET
    data_selector: results
    params: {}
- name: occurrence_count
  endpoint:
    path: /occurrence/count
    method: GET
    data_selector: count
    params: {}
- name: occurrence_inventory_basis_of_record
  endpoint:
    path: /occurrence/counts/basisOfRecord
    method: GET
    data_selector: inventory
    params: {}
- name: occurrence_inventory_year
  endpoint:
    path: /occurrence/counts/year
    method: GET
    data_selector: inventory
    params:
      year: year
- name: occurrence_inventory_dataset
  endpoint:
    path: /occurrence/counts/datasets
    method: GET
    data_selector: inventory
    params:
      country: country
      taxonKey: taxonKey
- name: occurrence_inventory_country
  endpoint:
    path: /occurrence/counts/countries
    method: GET
    data_selector: inventory
    params:
      publishingCountry: publishingCountry
- name: occurrence_inventory_publishing_country
  endpoint:
    path: /occurrence/counts/publishingCountries
    method: GET
    data_selector: inventory
    params:
      country: country
- name: Occurrence
  endpoint:
    path: /occurrence
    method: GET
    data_selector: results
- name: OccurrenceRelation
  endpoint:
    path: /occurrence/relation
    method: GET
    data_selector: results
- name: occurrence
  endpoint:
    path: /occurrence
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset_search
  endpoint:
    path: /dataset/search
    method: GET
    data_selector: items
    params: {}
- name: collection_export
  endpoint:
    path: /grscicoll/collection/export
    method: GET
    data_selector: results
    params: {}
- name: derived_dataset
  endpoint:
    path: /derivedDataset
    method: POST
- name: collections
  endpoint:
    path: /grscicoll/collection
    method: GET
- name: datasets
  endpoint:
    path: /dataset
    method: GET
- name: installations
  endpoint:
    path: /installation
    method: GET
    data_selector: content
    params: {}
- name: institutions
  endpoint:
    path: /grscicoll/institution
    method: GET
    data_selector: content
    params: {}
- name: networks
  endpoint:
    path: /network
    method: GET
    data_selector: content
    params: {}
- name: nodes
  endpoint:
    path: /node
    method: GET
    data_selector: content
    params: {}
- name: organizations
  endpoint:
    path: /organization
    method: GET
    data_selector: content
    params: {}
- name: institution
  endpoint:
    path: /grscicoll/institution/export
    method: GET
    data_selector: results
    params:
      format: TSV
- name: dataset
  endpoint:
    path: /dataset/search/export
    method: GET
    data_selector: results
    params:
      format: TSV
- name: dataset
  endpoint:
    path: /dataset/{key}
    method: GET
    data_selector: Dataset
    params: {}
- name: derived_dataset
  endpoint:
    path: /derivedDataset/{doiPrefix}/{doiSuffix}
    method: GET
    data_selector: PagingResponseDerivedDataset
    params: {}
- name: publishing_organization
  endpoint:
    path: /organization/{key}
    method: GET
    data_selector: content
    params: {}
- name: derived_dataset_related_datasets
  endpoint:
    path: /derivedDataset/{doiPrefix}/{doiSuffix}/datasets
    method: GET
    data_selector: content
    params:
      limit: null
      offset: null
- name: network
  endpoint:
    path: /networks
    method: GET
    data_selector: records
- name: institution
  endpoint:
    path: /institutions
    method: GET
    data_selector: records
- name: Organization
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
- name: Endpoint
  endpoint:
    path: /endpoints
    method: GET
    data_selector: endpoints
- name: Identifier
  endpoint:
    path: /identifiers
    method: GET
    data_selector: identifiers
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: DerivedDataset
  endpoint:
    path: /derivedDataset
    method: GET
    data_selector: results
- name: Metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: results
- name: VernacularName
  endpoint:
    path: /vernacularName
    method: GET
    data_selector: results
- name: TypeSpecimen
  endpoint:
    path: /typeSpecimen
    method: GET
    data_selector: results
- name: NameUsageMetrics
  endpoint:
    path: /nameUsageMetrics
    method: GET
- name: NameUsageMediaObject
  endpoint:
    path: /nameUsageMedia
    method: GET
- name: Distribution
  endpoint:
    path: /distribution
    method: GET
- name: Description
  endpoint:
    path: /description
    method: GET
- name: master_source_metadata
  endpoint:
    path: /masterSourceMetadata
    method: GET
    data_selector: masterSourceMetadata
    params: {}
- name: occurrence_mapping
  endpoint:
    path: /occurrenceMapping
    method: GET
    data_selector: occurrenceMappings
    params: {}
- name: institution_change_suggestion
  endpoint:
    path: /institutionChangeSuggestion
    method: GET
    data_selector: institutionChangeSuggestions
    params: {}
- name: collection_change_suggestion
  endpoint:
    path: /collectionChangeSuggestion
    method: GET
    data_selector: collectionChangeSuggestions
    params: {}
- name: SearchResponseNameUsageSearchResultNameUsageSearchParameter
  endpoint:
    path: /search/nameUsage
    method: GET
    data_selector: results
    params: {}
- name: Occurrence
  endpoint:
    path: /occurrence
    method: GET
- name: occurrence
  endpoint:
    path: /occurrence/search
    method: GET
    data_selector: results
    params: {}
- name: participant
  endpoint:
    path: /api/participant
    method: GET
    data_selector: participantNode
- name: download
  endpoint:
    path: /v1/download
    method: GET
    data_selector: results
    params: {}
- name: download_statistics
  endpoint:
    path: /v1/download/statistics
    method: GET
    data_selector: results
    params: {}
- name: collection
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: DescriptorSearchRequest
  endpoint:
    path: /v1/descriptor/search
    method: GET
    data_selector: results
    params: {}
- name: CollectionSearchResponse
  endpoint:
    path: /v1/collection/search
    method: GET
    data_selector: results
    params: {}
- name: DatasetSuggestResult
  endpoint:
    path: /dataset/suggest
    method: GET
    data_selector: results
- name: DatasetSearchResult
  endpoint:
    path: /dataset/search
    method: GET
    data_selector: results
- name: institution
  endpoint:
    path: /institution
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: collection
  endpoint:
    path: /collection
    method: GET
    data_selector: results
    params: {}
- name: institution
  endpoint:
    path: /grscicoll/institution
    method: GET
    data_selector: results
    params: {}
- name: network
  endpoint:
    path: /network
    method: GET
    data_selector: results
    params: {}
- name: collections
  endpoint:
    path: /grscicoll/collection
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /dataset
    method: GET
    data_selector: records
    params: {}
- name: installations
  endpoint:
    path: /installation
    method: GET
    data_selector: records
    params: {}
- name: institutions
  endpoint:
    path: /grscicoll/institution
    method: GET
    data_selector: records
    params: {}
- name: derivedDataset
  endpoint:
    path: /derivedDataset
    method: POST
    data_selector: Derived dataset information.
- name: enumerationBasic
  endpoint:
    path: /enumeration/basic
    method: GET
    data_selector: List of enumerations.
- name: collection
  endpoint:
    path: /grscicoll/collection
    method: GET
    data_selector: List all collections
- name: collection_export
  endpoint:
    path: /grscicoll/collection/export
    method: GET
    data_selector: results
    params: {}
- name: institution_export
  endpoint:
    path: /grscicoll/institution/export
    method: GET
    data_selector: results
    params: {}
- name: dataset_search_export
  endpoint:
    path: /dataset/search/export
    method: GET
    data_selector: results
    params:
      format: TSV
- name: grscicoll_collection_export_for_institution
  endpoint:
    path: /grscicoll/collection/exportForInstitution
    method: GET
    data_selector: collections
    params:
      format: TSV
- name: Participant nodes
  endpoint:
    path: /node
    method: GET
- name: Publishing organizations
  endpoint:
    path: /organization
    method: GET
- name: Institutions
  endpoint:
    path: /grscicoll/institution/geojson
    method: GET
- name: Search collections and institutions
  endpoint:
    path: /grscicoll/search
    method: GET
- name: Search across all datasets
  endpoint:
    path: /dataset/search
    method: GET
- name: suggestDatasets
  endpoint:
    path: /suggest
    method: GET
    data_selector: datasets
    params: {}
- name: suggestInstallations
  endpoint:
    path: /installation/suggest
    method: GET
    data_selector: installations
    params: {}
- name: suggestInstitutions
  endpoint:
    path: /grscicoll/institution/suggest
    method: GET
    data_selector: institutions
    params: {}
- name: suggestNetworks
  endpoint:
    path: /network/suggest
    method: GET
    data_selector: networks
    params: {}
- name: suggestNodes
  endpoint:
    path: /node/suggest
    method: GET
    data_selector: nodes
    params: {}
- name: suggestOrganizations
  endpoint:
    path: /organization/suggest
    method: GET
    data_selector: organizations
    params: {}
- name: listCollectionsForInstitutions
  endpoint:
    path: /grscicoll/collection/listForInstitution
    method: GET
    data_selector: collections
    params: {}
- name: enumerationCountry
  endpoint:
    path: /enumeration/country
    method: GET
    data_selector: countries
    params: {}
- name: getDataset
  endpoint:
    path: /dataset/{key}
    method: GET
    data_selector: dataset
    params: {}
- name: derivedDataset
  endpoint:
    path: /derivedDataset/dataset/{key}
    method: GET
    params:
      limit: integer
      offset: integer
- name: institution
  endpoint:
    path: /grscicoll/institution/search
    method: GET
    params:
      hl: boolean
      type: string
      institutionalGovernance: string
      discipline: string
      sourceId: string
      source: string
      code: string
      name: string
      alternativeCode: string
      contact: string
      machineTagNamespace: string
      machineTagName: string
      machineTagValue: string
      identifierType: string
      identifier: string
      country: string
      gbifRegion: string
      city: string
      fuzzyName: string
      active: boolean
      masterSourceType: string
      numberSpecimens: string
      displayOnNHCPortal: boolean
      replacedBy: string
      occurrenceCount: string
      typeSpecimenCount: string
      institutionKey: string
      sortBy: string
      sortOrder: string
      contactUserId: string
      contactEmail: string
      q: string
      limit: integer
      offset: integer
- name: collection
  endpoint:
    path: /grscicoll/collection/search
    method: GET
    params:
      institution: string
      contentType: string
      preservationType: string
      accessionStatus: string
      personalCollection: boolean
      sourceId: string
      source: string
      hl: boolean
      code: string
      name: string
      alternativeCode: string
      contact: string
      machineTagNamespace: string
      machineTagName: string
      machineTagValue: string
      identifierType: string
      identifier: string
      country: string
      gbifRegion: string
      city: string
      fuzzyName: string
      active: boolean
      masterSourceType: string
      numberSpecimens: string
      displayOnNHCPortal: boolean
      replacedBy: string
      occurrenceCount: string
      typeSpecimenCount: string
      institutionKey: string
      sortBy: string
      sortOrder: string
      contactUserId: string
      contactEmail: string
      q: string
      limit: integer
      offset: integer
- name: dataset_document
  endpoint:
    path: /dataset/{key}/document
    method: GET
    data_selector: content
    params: {}
- name: dataset_metadata
  endpoint:
    path: /dataset/{key}/metadata
    method: GET
    data_selector: content
    params: {}
- name: descriptor_change_suggestion
  endpoint:
    path: /grscicoll/collection/{collectionKey}/descriptorGroup/suggestion/{key}
    method: GET
    data_selector: content
    params: {}
- name: comment
  endpoint:
    path: /organization/{key}/comment
    method: GET
    data_selector: content
    params: {}
- name: comment
  endpoint:
    path: /{key}/comment
    method: GET
    data_selector: comments
- name: comment
  endpoint:
    path: /{key}/comment
    method: POST
    data_selector: comment
- name: comment
  endpoint:
    path: /{key}/comment/{commentKey}
    method: DELETE
    data_selector: status
- name: contact
  endpoint:
    path: /dataset/{key}/contact
    method: PUT
    data_selector: Contact
    params:
      key: string
- name: updateIdentifier
  endpoint:
    path: /grscicoll/collection/{key}/identifier/{identifierKey}
    method: PUT
    data_selector: isPrimary
    params:
      key: string
      identifierKey: integer
- name: deleteIdentifier
  endpoint:
    path: /grscicoll/collection/{key}/identifier/{identifierKey}
    method: DELETE
    data_selector: null
    params:
      key: string
      identifierKey: integer
- name: dataset
  endpoint:
    path: /dataset/{key}/endpoint
    method: GET
    data_selector: endpoints
- name: organization
  endpoint:
    path: /organization/{key}/endpoint/{endpointKey}
    method: DELETE
    data_selector: deleted
- name: organization_machine_tag
  endpoint:
    path: /organization/{key}/machineTag
    method: GET
    data_selector: items
- name: node_machine_tag
  endpoint:
    path: /node/{key}/machineTag
    method: GET
    data_selector: items
- name: network_machine_tag
  endpoint:
    path: /network/{key}/machineTag
    method: GET
    data_selector: items
- name: installation_machine_tag
  endpoint:
    path: /installation/{key}/machineTag
    method: GET
    data_selector: items
- name: institution_machine_tag
  endpoint:
    path: /grscicoll/institution/{key}/machineTag
    method: GET
    data_selector: items
- name: collection_machine_tag
  endpoint:
    path: /grscicoll/collection/{key}/machineTag
    method: GET
    data_selector: items
- name: dataset_machine_tag
  endpoint:
    path: /dataset/{key}/machineTag
    method: GET
    data_selector: items
- name: tag
  endpoint:
    path: /dataset/{key}/tag
    method: POST
    data_selector: tag added
    params: {}
- name: occurrenceMapping
  endpoint:
    path: /grscicoll/institution/{key}/occurrenceMapping
    method: GET
    data_selector: List of occurrence mappings
    params: {}
- name: changeSuggestion
  endpoint:
    path: /grscicoll/collection/changeSuggestion
    method: GET
    data_selector: content
    params: {}
- name: institutionChangeSuggestion
  endpoint:
    path: /grscicoll/institution/changeSuggestion/{key}
    method: GET
    data_selector: content
    params: {}
- name: collection_descriptor_group
  endpoint:
    path: /grscicoll/collection/{collectionKey}/descriptorGroup
    method: GET
    data_selector: descriptorGroups
- name: deleted_installations
  endpoint:
    path: /installation/deleted
    method: GET
    data_selector: deletedInstallations
- name: deleted_organizations
  endpoint:
    path: /organization/deleted
    method: GET
    data_selector: deletedOrganizations
- name: deleted_institutions
  endpoint:
    path: /grscicoll/institution/deleted
    method: GET
    data_selector: deletedInstitutions
- name: deleted_collections
  endpoint:
    path: /grscicoll/collection/deleted
    method: GET
    data_selector: deletedCollections
- name: deleted_datasets
  endpoint:
    path: /dataset/deleted
    method: GET
    data_selector: content.application/json.schema.$ref
    params: {}
- name: duplicate_datasets
  endpoint:
    path: /dataset/duplicate
    method: GET
    data_selector: content.application/json.schema.$ref
    params: {}
- name: pending_organizations
  endpoint:
    path: /organization/pending
    method: GET
    data_selector: content.application/json.schema.$ref
    params: {}
- name: possible_duplicates_institutions
  endpoint:
    path: /grscicoll/institution/possibleDuplicates
    method: GET
    data_selector: content.application/json.schema.$ref
    params: {}
- name: possible_duplicates_collections
  endpoint:
    path: /grscicoll/collection/possibleDuplicates
    method: GET
    data_selector: content.application/json.schema.$ref
    params: {}
- name: network_machine_tag
  endpoint:
    path: /network/{key}/machineTag/{namespace}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
- name: installation_machine_tag
  endpoint:
    path: /installation/{key}/machineTag/{namespace}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
- name: institution_machine_tag
  endpoint:
    path: /grscicoll/institution/{key}/machineTag/{namespace}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
- name: collection_machine_tag
  endpoint:
    path: /grscicoll/collection/{key}/machineTag/{namespace}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
- name: dataset_machine_tag
  endpoint:
    path: /dataset/{key}/machineTag/{namespace}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
- name: organization_machine_tag_name
  endpoint:
    path: /organization/{key}/machineTag/{namespace}/{name}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
      name: string
- name: node_machine_tag_name
  endpoint:
    path: /node/{key}/machineTag/{namespace}/{name}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
      name: string
- name: network_machine_tag_name
  endpoint:
    path: /network/{key}/machineTag/{namespace}/{name}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
      name: string
- name: installation_machine_tag_name
  endpoint:
    path: /installation/{key}/machineTag/{namespace}/{name}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
      name: string
- name: institution_machine_tag_name
  endpoint:
    path: /grscicoll/institution/{key}/machineTag/{namespace}/{name}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
      name: string
- name: collection_machine_tag_name
  endpoint:
    path: /grscicoll/collection/{key}/machineTag/{namespace}/{name}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
      name: string
- name: dataset_machine_tag_name
  endpoint:
    path: /dataset/{key}/machineTag/{namespace}/{name}
    method: DELETE
    data_selector: '204'
    params:
      key: string
      namespace: string
      name: string
- name: datasets_with_no_endpoint
  endpoint:
    path: /dataset/withNoEndpoint
    method: GET
    data_selector: datasets
    params: {}
- name: non_publishing_installations
  endpoint:
    path: /installation/nonPublishing
    method: GET
    data_selector: installations
    params: {}
- name: non_publishing_organizations
  endpoint:
    path: /organization/nonPublishing
    method: GET
    data_selector: organizations
    params: {}
- name: organizations_as_geojson
  endpoint:
    path: /organization/geojson
    method: GET
    data_selector: organizations
    params: {}
- name: descriptor
  endpoint:
    path: /grscicoll/collection/{collectionKey}/descriptorGroup/{descriptorGroupKey}/descriptor/{key}
    method: GET
    data_selector: '200'
    params: {}
- name: batch
  endpoint:
    path: /grscicoll/institution/batch/{key}
    method: GET
    data_selector: '200'
    params: {}
- name: auditLog
  endpoint:
    path: /grscicoll/auditLog
    method: GET
    params:
      limit: default maximum threshold
      offset: determines the offset for the search results
- name: Network
  endpoint:
    path: /networks
    method: GET
    data_selector: records
- name: Installation
  endpoint:
    path: /installations
    method: GET
    data_selector: records
- name: Institution
  endpoint:
    path: /institutions
    method: GET
    data_selector: records
- name: registry
  endpoint:
    path: /oai-pmh/registry
    method: GET
    data_selector: null
    params:
      params: null
- name: search
  endpoint:
    path: /occurrence/search/
    method: GET
    data_selector: null
    params:
      arg0: null
- name: suggest
  endpoint:
    path: /species/suggest
    method: GET
    data_selector: null
    params:
      arg0: null
- name: suggestCatalogNumbers
  endpoint:
    path: /occurrence/catalogNumber
    method: GET
    data_selector: null
    params:
      q: null
- name: suggestCollectionCodes
  endpoint:
    path: /occurrence/search/collectionCode
    method: GET
    data_selector: null
    params:
      q: null
- name: suggestDatasetName
  endpoint:
    path: /occurrence/search/datasetName
    method: GET
    data_selector: null
    params:
      q: null
- name: suggestEventId
  endpoint:
    path: /occurrence/search/eventId
    method: GET
    data_selector: null
    params:
      q: null
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: identified_by
  endpoint:
    path: /occurrence/search/identifiedBy
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: institution_code
  endpoint:
    path: /occurrence/search/institutionCode
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: locality
  endpoint:
    path: /occurrence/search/locality
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: occurrence_id
  endpoint:
    path: /occurrence/search/occurrenceId
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: organism_id
  endpoint:
    path: /occurrence/search/organismId
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: other_catalog_numbers
  endpoint:
    path: /occurrence/search/otherCatalogNumbers
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: parent_event_id
  endpoint:
    path: /occurrence/search/parentEventId
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: record_number
  endpoint:
    path: /occurrence/search/recordNumber
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: recorded_by
  endpoint:
    path: /occurrence/search/recordedBy
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: sampling_protocol
  endpoint:
    path: /occurrence/search/samplingProtocol
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: state_province
  endpoint:
    path: /occurrence/search/stateProvince
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: water_body
  endpoint:
    path: /occurrence/search/waterBody
    method: GET
    data_selector: items
    params:
      q: ''
      limit: ''
- name: DerivedDataset
  endpoint:
    path: /derived_dataset
    method: GET
    data_selector: records
- name: Metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: records
- name: VernacularName
  endpoint:
    path: /vernacular_name
    method: GET
    data_selector: records
- name: TypeSpecimen
  endpoint:
    path: /type_specimen
    method: GET
    data_selector: records
- name: search_results
  endpoint:
    path: /search/results
    method: GET
    data_selector: results
    params: {}
- name: NameUsageMetrics
  endpoint:
    path: /nameUsageMetrics
    method: GET
    data_selector: results
- name: NameUsageMediaObject
  endpoint:
    path: /nameUsageMedia
    method: GET
    data_selector: results
- name: Distribution
  endpoint:
    path: /distribution
    method: GET
    data_selector: results
- name: Description
  endpoint:
    path: /description
    method: GET
    data_selector: results
- name: download_request
  endpoint:
    path: /v1/download/request
    method: POST
    data_selector: results
    params: {}
- name: participant
  endpoint:
    path: /participant
    method: GET
    data_selector: records
- name: occurrence
  endpoint:
    path: /v1/occurrence
    method: GET
    data_selector: results
- name: participant_node
  endpoint:
    path: /participant/nodes
    method: GET
    data_selector: results
- name: paging_response_node
  endpoint:
    path: /paging/nodes
    method: GET
    data_selector: results
- name: collection_full_search_response
  endpoint:
    path: /collections/full
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: endpoints
  endpoint:
    path: /endpoints
    method: GET
    data_selector: endpoints
- name: machineTags
  endpoint:
    path: /machineTags
    method: GET
    data_selector: machineTags
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: identifiers
  endpoint:
    path: /identifiers
    method: GET
    data_selector: identifiers
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
- name: bibliographicCitations
  endpoint:
    path: /bibliographicCitations
    method: GET
    data_selector: bibliographicCitations
- name: curatorialUnits
  endpoint:
    path: /curatorialUnits
    method: GET
    data_selector: curatorialUnits
- name: taxonomicCoverages
  endpoint:
    path: /taxonomicCoverages
    method: GET
    data_selector: taxonomicCoverages
- name: geographicCoverages
  endpoint:
    path: /geographicCoverages
    method: GET
    data_selector: geographicCoverages
- name: temporalCoverages
  endpoint:
    path: /temporalCoverages
    method: GET
    data_selector: temporalCoverages
- name: keywordCollections
  endpoint:
    path: /keywordCollections
    method: GET
    data_selector: keywordCollections
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: dataDescriptions
  endpoint:
    path: /dataDescriptions
    method: GET
    data_selector: dataDescriptions
- name: dataLanguage
  endpoint:
    path: /dataLanguage
    method: GET
    data_selector: dataLanguage
- name: purpose
  endpoint:
    path: /purpose
    method: GET
    data_selector: purpose
- name: introduction
  endpoint:
    path: /introduction
    method: GET
    data_selector: introduction
- name: gettingStarted
  endpoint:
    path: /gettingStarted
    method: GET
    data_selector: gettingStarted
- name: acknowledgements
  endpoint:
    path: /acknowledgements
    method: GET
    data_selector: acknowledgements
- name: additionalInfo
  endpoint:
    path: /additionalInfo
    method: GET
    data_selector: additionalInfo
- name: pubDate
  endpoint:
    path: /pubDate
    method: GET
    data_selector: pubDate
- name: maintenanceUpdateFrequency
  endpoint:
    path: /maintenanceUpdateFrequency
    method: GET
    data_selector: maintenanceUpdateFrequency
- name: maintenanceDescription
  endpoint:
    path: /maintenanceDescription
    method: GET
    data_selector: maintenanceDescription
- name: license
  endpoint:
    path: /license
    method: GET
    data_selector: license
- name: institution
  endpoint:
    path: /institution
    method: GET
    data_selector: results
    params: {}
- name: collection
  endpoint:
    path: /collection
    method: GET
    data_selector: results
    params: {}
- name: DatasetSuggestResult
  endpoint:
    path: /dataset/suggest
    method: GET
- name: DatasetSearchResult
  endpoint:
    path: /dataset/search
    method: GET
- name: DescriptorSearchRequest
  endpoint:
    path: /descriptor/search
    method: GET
    data_selector: results
- name: CollectionSearchResponse
  endpoint:
    path: /collection/search
    method: GET
    data_selector: results
- name: map_tile
  endpoint:
    path: /en/openapi/v1/occurrence/{z}/{x}/{y}/{srs}/{format}
    method: GET
    data_selector: map tile
    params: {}
- name: density_tile
  endpoint:
    path: /map/occurrence/density/{z}/{x}/{y}{format}
    method: GET
- name: density_capabilities
  endpoint:
    path: /map/occurrence/density/capabilities.json
    method: GET
- name: adhoc_tile
  endpoint:
    path: /map/occurrence/adhoc/{z}/{x}/{y}{format}
    method: GET
- name: occurrence_density
  endpoint:
    path: /occurrence/density/{z}/{x}/{y}@1x.png
    method: GET
    data_selector: records
- name: occurrence_adhoc
  endpoint:
    path: /occurrence/adhoc/{z}/{x}/{y}@1x.png
    method: GET
    data_selector: records
- name: Dataset
  endpoint:
    path: /v1/dataset
    method: GET
    data_selector: datasets
    params: {}
- name: Citation
  endpoint:
    path: /citations
    method: GET
    data_selector: citations
- name: Comment
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
- name: Contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: cancel
  endpoint:
    path: /validation/{key}/cancel
    method: PUT
- name: get
  endpoint:
    path: /validation/{key}
    method: GET
- name: update
  endpoint:
    path: /validation/{key}
    method: PUT
- name: delete
  endpoint:
    path: /validation/{key}
    method: DELETE
- name: submitUrl
  endpoint:
    path: /validation/url
    method: POST
- name: validateEml
  endpoint:
    path: /validation/eml
    method: POST
- name: getEml
  endpoint:
    path: /validation/{key}/eml
    method: GET
- name: getRunningValidations
  endpoint:
    path: /validation/running
    method: GET
- name: validationStatuses
  endpoint:
    path: /validation/enumeration/ValidationStatus
    method: GET
- name: fileFormats
  endpoint:
    path: /validation/enumeration/FileFormat
    method: GET
- name: evaluationTypes
  endpoint:
    path: /validation/enumeration/EvaluationType
    method: GET
- name: evaluationCategories
  endpoint:
    path: /validation/enumeration/EvaluationCategory
    method: GET
- name: dwcFileTypes
  endpoint:
    path: /validation/enumeration/DwcFileType
    method: GET
- name: suggest
  endpoint:
    path: /vocabularies/suggest
    method: GET
    data_selector: results
    params: {}
- name: vocabularies
  endpoint:
    path: /vocabularies
    method: GET
- name: deprecateConcept
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/deprecate
    method: PUT
- name: restoreDeprecatedConcept
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}
    method: DELETE
- name: deprecateVocabulary
  endpoint:
    path: /vocabularies/{name}/deprecate
    method: PUT
- name: listConcepts
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts
    method: GET
    data_selector: concepts
- name: createConcept
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts
    method: POST
    data_selector: concept
- name: listLanguages
  endpoint:
    path: /vocabularyLanguage
    method: GET
    data_selector: languages
- name: listTags
  endpoint:
    path: /vocabularyTags
    method: GET
    data_selector: tags
- name: listVocabularies
  endpoint:
    path: /vocabularies
    method: GET
    data_selector: vocabularies
- name: concept_label
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/label/{key}
    method: DELETE
- name: vocabulary_label
  endpoint:
    path: /vocabularies/{name}/label/{key}
    method: DELETE
- name: listConceptTags
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/tags
    method: GET
    data_selector: tags
    params:
      vocabularyName: string
      name: string
- name: addConceptTag
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/tags
    method: PUT
    data_selector: tags
    params:
      vocabularyName: string
      name: string
- name: listVocabularyDefinitions
  endpoint:
    path: /vocabularies/{name}/definition
    method: GET
    data_selector: definitions
    params:
      name: string
- name: getVocabularyDefinition
  endpoint:
    path: /vocabularies/{name}/definition/{key}
    method: GET
    data_selector: definition
    params:
      name: string
      key: integer
- name: alternative_label
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/alternativeLabels
    method: post
    data_selector: content
    params: {}
- name: hidden_label
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/hiddenLabels
    method: post
    data_selector: content
    params: {}
- name: list_hidden_labels
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/hiddenLabels
    method: get
    data_selector: content
    params: {}
- name: delete_hidden_label
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/hiddenLabels/{key}
    method: delete
    data_selector: content
    params: {}
- name: list_concepts_latest_release
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/latestRelease
    method: get
    data_selector: content
    params: {}
- name: suggest_concepts
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/latestRelease
    method: GET
    data_selector: items
    params:
      vocabularyName: vocabulary_name
      locale: locale_value
      fallbackLocale: fallback_locale_value
- name: get_concept
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/latestRelease/{name}
    method: GET
    data_selector: item
    params:
      vocabularyName: vocabulary_name
      name: concept_name
- name: list_concept_definitions
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/latestRelease/{name}/definition
    method: GET
    data_selector: definitions
    params:
      vocabularyName: vocabulary_name
      name: concept_name
      lang: language_value
- name: list_concept_labels
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/latestRelease/{name}/label
    method: GET
    data_selector: labels
    params:
      vocabularyName: vocabulary_name
      name: concept_name
      lang: language_value
- name: deprecateVocabulary
  endpoint:
    path: /vocabularies/{name}/deprecate
    method: POST
    data_selector: responses
    params:
      name: string
- name: restoreDeprecatedVocabulary
  endpoint:
    path: /vocabularies/{name}/restore
    method: DELETE
    data_selector: responses
    params:
      name: string
      restoreDeprecatedConcepts: boolean
- name: exportVocabulary
  endpoint:
    path: /vocabularies/{name}/export
    method: GET
    data_selector: responses
    params:
      name: string
- name: listConceptDefinitions
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/definition
    method: GET
    data_selector: responses
    params:
      vocabularyName: string
      name: string
      lang: string
- name: getConceptDefinition
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/definition/{key}
    method: GET
    data_selector: responses
    params:
      vocabularyName: string
      name: string
      key: integer
- name: updateConceptDefinition
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/definition/{key}
    method: PUT
    data_selector: responses
    params:
      vocabularyName: string
      name: string
      key: integer
- name: deleteConceptDefinition
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/{name}/definition/{key}
    method: DELETE
    data_selector: responses
    params:
      vocabularyName: string
      name: string
      key: integer
- name: listVocabularyReleases
  endpoint:
    path: /vocabularies/{name}/releases
    method: GET
    data_selector: responses
    params:
      name: string
      version: string
      limit: integer
      offset: integer
- name: getRelease
  endpoint:
    path: /vocabularies/{name}/releases/{version}
    method: GET
    data_selector: responses
    params:
      name: string
      version: string
- name: concepts_hidden_labels
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/latestRelease/{name}/hiddenLabels
    method: GET
    params:
      limit: default maximum threshold
      offset: Determines the offset for the search results
- name: concepts
  endpoint:
    path: /vocabularies/{vocabularyName}/concepts/latestRelease/{name}/alternativeLabels
    method: GET
    data_selector: alternativeLabels
    params:
      lang: query
- name: concept_lookup
  endpoint:
    path: /{vocabularyName}/concepts/lookup
    method: GET
    data_selector: concepts
- name: latest_release_concept_lookup
  endpoint:
    path: /{vocabularyName}/concepts/latestRelease/lookup
    method: GET
    data_selector: concepts
- name: occurrence_download_request
  endpoint:
    path: /occurrence/download/request
    method: POST
    data_selector: ''
    params: {}
- name: download_status
  endpoint:
    path: /occurrence/download/{downloadKey}
    method: GET
    data_selector: ''
    params: {}
- name: download_file
  endpoint:
    path: /occurrence/download/request/{downloadKey}.zip
    method: GET
    data_selector: ''
    params: {}
- name: occurrence
  endpoint:
    path: /occurrences
    method: GET
    data_selector: results
    params: {}
- name: occurrence
  endpoint:
    path: /occurrence.txt
    method: GET
    data_selector: records
- name: multimedia
  endpoint:
    path: /multimedia.txt
    method: GET
    data_selector: records
- name: verbatim
  endpoint:
    path: /verbatim.txt
    method: GET
    data_selector: records
- name: occurrence
  endpoint:
    path: /occurrence.txt
    method: GET
    data_selector: records
- name: multimedia
  endpoint:
    path: /multimedia.txt
    method: GET
    data_selector: records
- name: verbatim
  endpoint:
    path: /verbatim.txt
    method: GET
    data_selector: records
- name: multimedia
  endpoint:
    path: /multimedia
    method: GET
    data_selector: records
    params: {}
- name: occurrence
  endpoint:
    path: /occurrence
    method: GET
    data_selector: records
    params: {}
- name: occurrences
  endpoint:
    path: /occurrences
    method: GET
    data_selector: records
- name: species_list_downloads
  endpoint:
    path: /species_list_downloads
    method: GET
    data_selector: records
- name: namePublishedIn
  endpoint:
    path: /dwc/namePublishedIn
    method: GET
    data_selector: records
- name: namePublishedInYear
  endpoint:
    path: /dwc/namePublishedInYear
    method: GET
    data_selector: records
- name: higherClassification
  endpoint:
    path: /dwc/higherClassification
    method: GET
    data_selector: records
- name: kingdom
  endpoint:
    path: /dwc/kingdom
    method: GET
    data_selector: records
- name: phylum
  endpoint:
    path: /dwc/phylum
    method: GET
    data_selector: records
- name: class
  endpoint:
    path: /dwc/class
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /dwc/order
    method: GET
    data_selector: records
- name: superfamily
  endpoint:
    path: /dwc/superfamily
    method: GET
    data_selector: records
- name: family
  endpoint:
    path: /dwc/family
    method: GET
    data_selector: records
- name: subfamily
  endpoint:
    path: /dwc/subfamily
    method: GET
    data_selector: records
- name: tribe
  endpoint:
    path: /dwc/tribe
    method: GET
    data_selector: records
- name: subtribe
  endpoint:
    path: /dwc/subtribe
    method: GET
    data_selector: records
- name: genus
  endpoint:
    path: /dwc/genus
    method: GET
    data_selector: records
- name: genericName
  endpoint:
    path: /dwc/genericName
    method: GET
    data_selector: records
- name: subgenus
  endpoint:
    path: /dwc/subgenus
    method: GET
    data_selector: records
- name: infragenericEpithet
  endpoint:
    path: /dwc/infragenericEpithet
    method: GET
    data_selector: records
- name: specificEpithet
  endpoint:
    path: /dwc/specificEpithet
    method: GET
    data_selector: records
- name: infraspecificEpithet
  endpoint:
    path: /dwc/infraspecificEpithet
    method: GET
    data_selector: records
- name: cultivarEpithet
  endpoint:
    path: /dwc/cultivarEpithet
    method: GET
    data_selector: records
- name: taxonRank
  endpoint:
    path: /dwc/taxonRank
    method: GET
    data_selector: records
- name: verbatimTaxonRank
  endpoint:
    path: /dwc/verbatimTaxonRank
    method: GET
    data_selector: records
- name: scientificNameAuthorship
  endpoint:
    path: /dwc/scientificNameAuthorship
    method: GET
    data_selector: records
- name: vernacularName
  endpoint:
    path: /dwc/vernacularName
    method: GET
    data_selector: records
- name: nomenclaturalCode
  endpoint:
    path: /dwc/nomenclaturalCode
    method: GET
    data_selector: records
- name: taxonomicStatus
  endpoint:
    path: /dwc/taxonomicStatus
    method: GET
    data_selector: records
- name: nomenclaturalStatus
  endpoint:
    path: /dwc/nomenclaturalStatus
    method: GET
    data_selector: records
- name: taxonRemarks
  endpoint:
    path: /dwc/taxonRemarks
    method: GET
    data_selector: records
- name: verbatimElevation
  endpoint:
    path: /verbatimElevation
    method: GET
    data_selector: records
    params: {}
- name: verticalDatum
  endpoint:
    path: /verticalDatum
    method: GET
    data_selector: records
    params: {}
- name: minimumDepthInMeters
  endpoint:
    path: /minimumDepthInMeters
    method: GET
    data_selector: records
    params: {}
- name: maximumDepthInMeters
  endpoint:
    path: /maximumDepthInMeters
    method: GET
    data_selector: records
    params: {}
- name: verbatimDepth
  endpoint:
    path: /verbatimDepth
    method: GET
    data_selector: records
    params: {}
- name: minimumDistanceAboveSurfaceInMeters
  endpoint:
    path: /minimumDistanceAboveSurfaceInMeters
    method: GET
    data_selector: records
    params: {}
- name: maximumDistanceAboveSurfaceInMeters
  endpoint:
    path: /maximumDistanceAboveSurfaceInMeters
    method: GET
    data_selector: records
    params: {}
- name: locationAccordingTo
  endpoint:
    path: /locationAccordingTo
    method: GET
    data_selector: records
    params: {}
- name: locationRemarks
  endpoint:
    path: /locationRemarks
    method: GET
    data_selector: records
    params: {}
- name: decimalLatitude
  endpoint:
    path: /decimalLatitude
    method: GET
    data_selector: records
    params: {}
- name: decimalLongitude
  endpoint:
    path: /decimalLongitude
    method: GET
    data_selector: records
    params: {}
- name: geodeticDatum
  endpoint:
    path: /geodeticDatum
    method: GET
    data_selector: records
    params: {}
- name: coordinateUncertaintyInMeters
  endpoint:
    path: /coordinateUncertaintyInMeters
    method: GET
    data_selector: records
    params: {}
- name: coordinatePrecision
  endpoint:
    path: /coordinatePrecision
    method: GET
    data_selector: records
    params: {}
- name: pointRadiusSpatialFit
  endpoint:
    path: /pointRadiusSpatialFit
    method: GET
    data_selector: records
    params: {}
- name: verbatimCoordinates
  endpoint:
    path: /verbatimCoordinates
    method: GET
    data_selector: records
    params: {}
- name: verbatimLatitude
  endpoint:
    path: /verbatimLatitude
    method: GET
    data_selector: records
    params: {}
- name: verbatimLongitude
  endpoint:
    path: /verbatimLongitude
    method: GET
    data_selector: records
    params: {}
- name: verbatimCoordinateSystem
  endpoint:
    path: /verbatimCoordinateSystem
    method: GET
    data_selector: records
    params: {}
- name: verbatimSRS
  endpoint:
    path: /verbatimSRS
    method: GET
    data_selector: records
    params: {}
- name: footprintWKT
  endpoint:
    path: /footprintWKT
    method: GET
    data_selector: records
    params: {}
- name: footprintSRS
  endpoint:
    path: /footprintSRS
    method: GET
    data_selector: records
    params: {}
- name: footprintSpatialFit
  endpoint:
    path: /footprintSpatialFit
    method: GET
    data_selector: records
    params: {}
- name: georeferencedBy
  endpoint:
    path: /georeferencedBy
    method: GET
    data_selector: records
    params: {}
- name: georeferencedDate
  endpoint:
    path: /georeferencedDate
    method: GET
    data_selector: records
    params: {}
- name: georeferenceProtocol
  endpoint:
    path: /georeferenceProtocol
    method: GET
    data_selector: records
    params: {}
- name: georeferenceSources
  endpoint:
    path: /georeferenceSources
    method: GET
    data_selector: records
    params: {}
- name: georeferenceRemarks
  endpoint:
    path: /georeferenceRemarks
    method: GET
    data_selector: records
    params: {}
- name: geologicalContextID
  endpoint:
    path: /geologicalContextID
    method: GET
    data_selector: records
    params: {}
- name: earliestEonOrLowestEonothem
  endpoint:
    path: /earliestEonOrLowestEonothem
    method: GET
    data_selector: records
    params: {}
- name: latestEonOrHighestEonothem
  endpoint:
    path: /latestEonOrHighestEonothem
    method: GET
    data_selector: records
    params: {}
- name: earliestEraOrLowestErathem
  endpoint:
    path: /earliestEraOrLowestErathem
    method: GET
    data_selector: records
    params: {}
- name: latestEraOrHighestErathem
  endpoint:
    path: /latestEraOrHighestErathem
    method: GET
    data_selector: records
    params: {}
- name: earliestPeriodOrLowestSystem
  endpoint:
    path: /earliestPeriodOrLowestSystem
    method: GET
    data_selector: records
    params: {}
- name: latestPeriodOrHighestSystem
  endpoint:
    path: /latestPeriodOrHighestSystem
    method: GET
    data_selector: records
    params: {}
- name: earliestEpochOrLowestSeries
  endpoint:
    path: /earliestEpochOrLowestSeries
    method: GET
    data_selector: records
    params: {}
- name: latestEpochOrHighestSeries
  endpoint:
    path: /latestEpochOrHighestSeries
    method: GET
    data_selector: records
    params: {}
- name: earliestAgeOrLowestStage
  endpoint:
    path: /earliestAgeOrLowestStage
    method: GET
    data_selector: records
    params: {}
- name: latestAgeOrHighestStage
  endpoint:
    path: /latestAgeOrHighestStage
    method: GET
    data_selector: records
    params: {}
- name: lowestBiostratigraphicZone
  endpoint:
    path: /lowestBiostratigraphicZone
    method: GET
    data_selector: records
    params: {}
- name: highestBiostratigraphicZone
  endpoint:
    path: /highestBiostratigraphicZone
    method: GET
    data_selector: records
    params: {}
- name: lithostratigraphicTerms
  endpoint:
    path: /lithostratigraphicTerms
    method: GET
    data_selector: records
    params: {}
- name: group
  endpoint:
    path: /group
    method: GET
    data_selector: records
    params: {}
- name: formation
  endpoint:
    path: /formation
    method: GET
    data_selector: records
    params: {}
- name: member
  endpoint:
    path: /member
    method: GET
    data_selector: records
    params: {}
- name: bed
  endpoint:
    path: /bed
    method: GET
    data_selector: records
    params: {}
- name: identificationID
  endpoint:
    path: /identificationID
    method: GET
    data_selector: records
    params: {}
- name: verbatimIdentification
  endpoint:
    path: /verbatimIdentification
    method: GET
    data_selector: records
    params: {}
- name: identificationQualifier
  endpoint:
    path: /identificationQualifier
    method: GET
    data_selector: records
    params: {}
- name: typeStatus
  endpoint:
    path: /typeStatus
    method: GET
    data_selector: records
    params: {}
- name: identifiedBy
  endpoint:
    path: /identifiedBy
    method: GET
    data_selector: records
    params: {}
- name: identifiedByID
  endpoint:
    path: /identifiedByID
    method: GET
    data_selector: records
    params: {}
- name: dateIdentified
  endpoint:
    path: /dateIdentified
    method: GET
    data_selector: records
    params: {}
- name: identificationReferences
  endpoint:
    path: /identificationReferences
    method: GET
    data_selector: records
    params: {}
- name: identificationVerificationStatus
  endpoint:
    path: /identificationVerificationStatus
    method: GET
    data_selector: records
    params: {}
- name: identificationRemarks
  endpoint:
    path: /identificationRemarks
    method: GET
    data_selector: records
    params: {}
- name: taxonID
  endpoint:
    path: /taxonID
    method: GET
    data_selector: records
    params: {}
- name: scientificNameID
  endpoint:
    path: /scientificNameID
    method: GET
    data_selector: records
    params: {}
- name: acceptedNameUsageID
  endpoint:
    path: /acceptedNameUsageID
    method: GET
    data_selector: records
    params: {}
- name: parentNameUsageID
  endpoint:
    path: /parentNameUsageID
    method: GET
    data_selector: records
    params: {}
- name: originalNameUsageID
  endpoint:
    path: /originalNameUsageID
    method: GET
    data_selector: records
    params: {}
- name: nameAccordingToID
  endpoint:
    path: /nameAccordingToID
    method: GET
    data_selector: records
    params: {}
- name: namePublishedInID
  endpoint:
    path: /namePublishedInID
    method: GET
    data_selector: records
    params: {}
- name: taxonConceptID
  endpoint:
    path: /taxonConceptID
    method: GET
    data_selector: records
    params: {}
- name: scientificName
  endpoint:
    path: /scientificName
    method: GET
    data_selector: records
    params: {}
- name: acceptedNameUsage
  endpoint:
    path: /acceptedNameUsage
    method: GET
    data_selector: records
    params: {}
- name: parentNameUsage
  endpoint:
    path: /parentNameUsage
    method: GET
    data_selector: records
    params: {}
- name: originalNameUsage
  endpoint:
    path: /originalNameUsage
    method: GET
    data_selector: records
    params: {}
- name: nameAccordingTo
  endpoint:
    path: /nameAccordingTo
    method: GET
    data_selector: records
    params: {}
- name: occurrence
  endpoint:
    path: /api/sql/downloads
    method: GET
    data_selector: records
- name: occurrence
  endpoint:
    path: /occurrence/download/describe/sql
    method: GET
    data_selector: columns
    params: {}
- name: occurrence_download_request
  endpoint:
    path: /occurrence/download/request
    method: POST
    data_selector: response
    params: {}
- name: occurrence_download_status
  endpoint:
    path: /occurrence/download/{download_key}
    method: GET
    data_selector: response
    params: {}
- name: municipality
  endpoint:
    path: /municipality
    method: GET
    data_selector: records
- name: locality
  endpoint:
    path: /locality
    method: GET
    data_selector: records
- name: verbatimlocality
  endpoint:
    path: /verbatimlocality
    method: GET
    data_selector: records
- name: verbatimelevation
  endpoint:
    path: /verbatimelevation
    method: GET
    data_selector: records
- name: verticaldatum
  endpoint:
    path: /verticaldatum
    method: GET
    data_selector: records
- name: verbatimdepth
  endpoint:
    path: /verbatimdepth
    method: GET
    data_selector: records
- name: minimumdistanceabovesurfaceinmeters
  endpoint:
    path: /minimumdistanceabovesurfaceinmeters
    method: GET
    data_selector: records
- name: maximumdistanceabovesurfaceinmeters
  endpoint:
    path: /maximumdistanceabovesurfaceinmeters
    method: GET
    data_selector: records
- name: locationaccordingto
  endpoint:
    path: /locationaccordingto
    method: GET
    data_selector: records
- name: locationremarks
  endpoint:
    path: /locationremarks
    method: GET
    data_selector: records
- name: decimallatitude
  endpoint:
    path: /decimallatitude
    method: GET
    data_selector: records
- name: decimallongitude
  endpoint:
    path: /decimallongitude
    method: GET
    data_selector: records
- name: coordinateuncertaintyinmeters
  endpoint:
    path: /coordinateuncertaintyinmeters
    method: GET
    data_selector: records
- name: coordinateprecision
  endpoint:
    path: /coordinateprecision
    method: GET
    data_selector: records
- name: pointradiusspatialfit
  endpoint:
    path: /pointradiusspatialfit
    method: GET
    data_selector: records
- name: verbatimcoordinatesystem
  endpoint:
    path: /verbatimcoordinatesystem
    method: GET
    data_selector: records
- name: verbatimsrs
  endpoint:
    path: /verbatimsrs
    method: GET
    data_selector: records
- name: footprintwkt
  endpoint:
    path: /footprintwkt
    method: GET
    data_selector: records
- name: footprintsrs
  endpoint:
    path: /footprintsrs
    method: GET
    data_selector: records
- name: footprintspatialfit
  endpoint:
    path: /footprintspatialfit
    method: GET
    data_selector: records
- name: georeferencedby
  endpoint:
    path: /georeferencedby
    method: GET
    data_selector: records
- name: georeferenceddate
  endpoint:
    path: /georeferenceddate
    method: GET
    data_selector: records
- name: georeferenceprotocol
  endpoint:
    path: /georeferenceprotocol
    method: GET
    data_selector: records
- name: georeferencesources
  endpoint:
    path: /georeferencesources
    method: GET
    data_selector: records
- name: georeferenceremarks
  endpoint:
    path: /georeferenceremarks
    method: GET
    data_selector: records
- name: geologicalcontextid
  endpoint:
    path: /geologicalcontextid
    method: GET
    data_selector: records
- name: earliesteonorlowesteonothem
  endpoint:
    path: /earliesteonorlowesteonothem
    method: GET
    data_selector: records
- name: latesteonorhighesteonothem
  endpoint:
    path: /latesteonorhighesteonothem
    method: GET
    data_selector: records
- name: earliesteraorlowesterathem
  endpoint:
    path: /earliesteraorlowesterathem
    method: GET
    data_selector: records
- name: latesteraorhighesterathem
  endpoint:
    path: /latesteraorhighesterathem
    method: GET
    data_selector: records
- name: earliestperiodorlowestsystem
  endpoint:
    path: /earliestperiodorlowestsystem
    method: GET
    data_selector: records
- name: latestperiodorhighestsystem
  endpoint:
    path: /latestperiodorhighestsystem
    method: GET
    data_selector: records
- name: earliestepochorlowestseries
  endpoint:
    path: /earliestepochorlowestseries
    method: GET
    data_selector: records
- name: latestepochorhighestseries
  endpoint:
    path: /latestepochorhighestseries
    method: GET
    data_selector: records
- name: earliestageorloweststage
  endpoint:
    path: /earliestageorloweststage
    method: GET
    data_selector: records
- name: latestageorhigheststage
  endpoint:
    path: /latestageorhigheststage
    method: GET
    data_selector: records
- name: lowestbiostratigraphiczone
  endpoint:
    path: /lowestbiostratigraphiczone
    method: GET
    data_selector: records
- name: highestbiostratigraphiczone
  endpoint:
    path: /highestbiostratigraphiczone
    method: GET
    data_selector: records
- name: lithostratigraphicterms
  endpoint:
    path: /lithostratigraphicterms
    method: GET
    data_selector: records
- name: group
  endpoint:
    path: /group
    method: GET
    data_selector: records
- name: formation
  endpoint:
    path: /formation
    method: GET
    data_selector: records
- name: member
  endpoint:
    path: /member
    method: GET
    data_selector: records
- name: bed
  endpoint:
    path: /bed
    method: GET
    data_selector: records
- name: identificationid
  endpoint:
    path: /identificationid
    method: GET
    data_selector: records
- name: verbatimidentification
  endpoint:
    path: /verbatimidentification
    method: GET
    data_selector: records
- name: identificationqualifier
  endpoint:
    path: /identificationqualifier
    method: GET
    data_selector: records
- name: typestatus
  endpoint:
    path: /typestatus
    method: GET
    data_selector: records
- name: identifiedby
  endpoint:
    path: /identifiedby
    method: GET
    data_selector: records
- name: identifiedbyid
  endpoint:
    path: /identifiedbyid
    method: GET
    data_selector: records
- name: dateidentified
  endpoint:
    path: /dateidentified
    method: GET
    data_selector: records
- name: identificationreferences
  endpoint:
    path: /identificationreferences
    method: GET
    data_selector: records
- name: identificationverificationstatus
  endpoint:
    path: /identificationverificationstatus
    method: GET
    data_selector: records
- name: identificationremarks
  endpoint:
    path: /identificationremarks
    method: GET
    data_selector: records
- name: taxonid
  endpoint:
    path: /taxonid
    method: GET
    data_selector: records
- name: scientificnameid
  endpoint:
    path: /scientificnameid
    method: GET
    data_selector: records
- name: acceptednameusageid
  endpoint:
    path: /acceptednameusageid
    method: GET
    data_selector: records
- name: parentnameusageid
  endpoint:
    path: /parentnameusageid
    method: GET
    data_selector: records
- name: originalnameusageid
  endpoint:
    path: /originalnameusageid
    method: GET
    data_selector: records
- name: nameaccordingtoid
  endpoint:
    path: /nameaccordingtoid
    method: GET
    data_selector: records
- name: namepublishedinid
  endpoint:
    path: /namepublishedinid
    method: GET
    data_selector: records
- name: taxonconceptid
  endpoint:
    path: /taxonconceptid
    method: GET
    data_selector: records
- name: scientificname
  endpoint:
    path: /scientificname
    method: GET
    data_selector: records
- name: acceptednameusage
  endpoint:
    path: /acceptednameusage
    method: GET
    data_selector: records
- name: parentnameusage
  endpoint:
    path: /parentnameusage
    method: GET
    data_selector: records
- name: originalnameusage
  endpoint:
    path: /originalnameusage
    method: GET
    data_selector: records
- name: nameaccordingto
  endpoint:
    path: /nameaccordingto
    method: GET
    data_selector: records
- name: namepublishedin
  endpoint:
    path: /namepublishedin
    method: GET
    data_selector: records
- name: namepublishedinyear
  endpoint:
    path: /namepublishedinyear
    method: GET
    data_selector: records
- name: higherclassification
  endpoint:
    path: /higherclassification
    method: GET
    data_selector: records
- name: kingdom
  endpoint:
    path: /kingdom
    method: GET
    data_selector: records
- name: dataset_id
  endpoint:
    path: /v_datasetid
    method: GET
    data_selector: records
- name: institution_code
  endpoint:
    path: /v_institutioncode
    method: GET
    data_selector: records
- name: collection_code
  endpoint:
    path: /v_collectioncode
    method: GET
    data_selector: records
- name: dataset_name
  endpoint:
    path: /v_datasetname
    method: GET
    data_selector: records
- name: owner_institution_code
  endpoint:
    path: /v_ownerinstitutioncode
    method: GET
    data_selector: records
- name: basis_of_record
  endpoint:
    path: /v_basisofrecord
    method: GET
    data_selector: records
- name: information_withheld
  endpoint:
    path: /v_informationwithheld
    method: GET
    data_selector: records
- name: data_generalizations
  endpoint:
    path: /v_datageneralizations
    method: GET
    data_selector: records
- name: dynamic_properties
  endpoint:
    path: /v_dynamicproperties
    method: GET
    data_selector: records
- name: occurrence_id
  endpoint:
    path: /v_occurrenceid
    method: GET
    data_selector: records
- name: catalog_number
  endpoint:
    path: /v_catalognumber
    method: GET
    data_selector: records
- name: record_number
  endpoint:
    path: /v_recordnumber
    method: GET
    data_selector: records
- name: recorded_by
  endpoint:
    path: /v_recordedby
    method: GET
    data_selector: records
- name: recorded_by_id
  endpoint:
    path: /v_recordedbyid
    method: GET
    data_selector: records
- name: individual_count
  endpoint:
    path: /v_individualcount
    method: GET
    data_selector: records
- name: organism_quantity
  endpoint:
    path: /v_organismquantity
    method: GET
    data_selector: records
- name: organism_quantity_type
  endpoint:
    path: /v_organismquantitytype
    method: GET
    data_selector: records
- name: sex
  endpoint:
    path: /v_sex
    method: GET
    data_selector: records
- name: life_stage
  endpoint:
    path: /v_lifestage
    method: GET
    data_selector: records
- name: reproductive_condition
  endpoint:
    path: /v_reproductivecondition
    method: GET
    data_selector: records
- name: caste
  endpoint:
    path: /v_caste
    method: GET
    data_selector: records
- name: behavior
  endpoint:
    path: /v_behavior
    method: GET
    data_selector: records
- name: vitality
  endpoint:
    path: /v_vitality
    method: GET
    data_selector: records
- name: establishment_means
  endpoint:
    path: /v_establishmentmeans
    method: GET
    data_selector: records
- name: degree_of_establishment
  endpoint:
    path: /v_degreeofestablishment
    method: GET
    data_selector: records
- name: pathway
  endpoint:
    path: /v_pathway
    method: GET
    data_selector: records
- name: georeference_verification_status
  endpoint:
    path: /v_georeferenceverificationstatus
    method: GET
    data_selector: records
- name: occurrence_status
  endpoint:
    path: /v_occurrencestatus
    method: GET
    data_selector: records
- name: preparations
  endpoint:
    path: /v_preparations
    method: GET
    data_selector: records
- name: disposition
  endpoint:
    path: /v_disposition
    method: GET
    data_selector: records
- name: associated_media
  endpoint:
    path: /v_associatedmedia
    method: GET
    data_selector: records
- name: associated_occurrences
  endpoint:
    path: /v_associatedoccurrences
    method: GET
    data_selector: records
- name: associated_references
  endpoint:
    path: /v_associatedreferences
    method: GET
    data_selector: records
- name: associated_sequences
  endpoint:
    path: /v_associatedsequences
    method: GET
    data_selector: records
- name: associated_taxa
  endpoint:
    path: /v_associatedtaxa
    method: GET
    data_selector: records
- name: other_catalog_numbers
  endpoint:
    path: /v_othercatalognumbers
    method: GET
    data_selector: records
- name: occurrence_remarks
  endpoint:
    path: /v_occurrenceremarks
    method: GET
    data_selector: records
- name: organism_id
  endpoint:
    path: /v_organismid
    method: GET
    data_selector: records
- name: organism_name
  endpoint:
    path: /v_organismname
    method: GET
    data_selector: records
- name: organism_scope
  endpoint:
    path: /v_organismscope
    method: GET
    data_selector: records
- name: associated_organisms
  endpoint:
    path: /v_associatedorganisms
    method: GET
    data_selector: records
- name: previous_identifications
  endpoint:
    path: /v_previousidentifications
    method: GET
    data_selector: records
- name: organism_remarks
  endpoint:
    path: /v_organismremarks
    method: GET
    data_selector: records
- name: material_entity_id
  endpoint:
    path: /v_materialentityid
    method: GET
    data_selector: records
- name: material_entity_remarks
  endpoint:
    path: /v_materialentityremarks
    method: GET
    data_selector: records
- name: verbatim_label
  endpoint:
    path: /v_verbatimlabel
    method: GET
    data_selector: records
- name: material_sample_id
  endpoint:
    path: /v_materialsampleid
    method: GET
    data_selector: records
- name: event_id
  endpoint:
    path: /v_eventid
    method: GET
    data_selector: records
- name: parent_event_id
  endpoint:
    path: /v_parenteventid
    method: GET
    data_selector: records
- name: event_type
  endpoint:
    path: /v_eventtype
    method: GET
    data_selector: records
- name: field_number
  endpoint:
    path: /v_fieldnumber
    method: GET
    data_selector: records
- name: event_date
  endpoint:
    path: /v_eventdate
    method: GET
    data_selector: records
- name: event_time
  endpoint:
    path: /v_eventtime
    method: GET
    data_selector: records
- name: start_day_of_year
  endpoint:
    path: /v_startdayofyear
    method: GET
    data_selector: records
- name: end_day_of_year
  endpoint:
    path: /v_enddayofyear
    method: GET
    data_selector: records
- name: year
  endpoint:
    path: /v_year
    method: GET
    data_selector: records
- name: month
  endpoint:
    path: /v_month
    method: GET
    data_selector: records
- name: day
  endpoint:
    path: /v_day
    method: GET
    data_selector: records
- name: verbatim_event_date
  endpoint:
    path: /v_verbatimeventdate
    method: GET
    data_selector: records
- name: habitat
  endpoint:
    path: /v_habitat
    method: GET
    data_selector: records
- name: sampling_protocol
  endpoint:
    path: /v_samplingprotocol
    method: GET
    data_selector: records
- name: sample_size_value
  endpoint:
    path: /v_samplesizevalue
    method: GET
    data_selector: records
- name: sample_size_unit
  endpoint:
    path: /v_samplesizeunit
    method: GET
    data_selector: records
- name: sampling_effort
  endpoint:
    path: /v_samplingeffort
    method: GET
    data_selector: records
- name: field_notes
  endpoint:
    path: /v_fieldnotes
    method: GET
    data_selector: records
- name: event_remarks
  endpoint:
    path: /v_eventremarks
    method: GET
    data_selector: records
- name: location_id
  endpoint:
    path: /v_locationid
    method: GET
    data_selector: records
- name: higher_geography_id
  endpoint:
    path: /v_highergeographyid
    method: GET
    data_selector: records
- name: higher_geography
  endpoint:
    path: /v_highergeography
    method: GET
    data_selector: records
- name: continent
  endpoint:
    path: /v_continent
    method: GET
    data_selector: records
- name: water_body
  endpoint:
    path: /v_waterbody
    method: GET
    data_selector: records
- name: island_group
  endpoint:
    path: /v_islandgroup
    method: GET
    data_selector: records
- name: island
  endpoint:
    path: /v_island
    method: GET
    data_selector: records
- name: country
  endpoint:
    path: /v_country
    method: GET
    data_selector: records
- name: country_code
  endpoint:
    path: /v_countrycode
    method: GET
    data_selector: records
- name: state_province
  endpoint:
    path: /v_stateprovince
    method: GET
    data_selector: records
- name: county
  endpoint:
    path: /v_county
    method: GET
    data_selector: records
- name: municipality
  endpoint:
    path: /v_municipality
    method: GET
    data_selector: records
- name: locality
  endpoint:
    path: /v_locality
    method: GET
    data_selector: records
- name: verbatim_locality
  endpoint:
    path: /v_verbatimlocality
    method: GET
    data_selector: records
- name: minimum_elevation_in_meters
  endpoint:
    path: /v_minimumelevationinmeters
    method: GET
    data_selector: records
- name: maximum_elevation_in_meters
  endpoint:
    path: /v_maximumelevationinmeters
    method: GET
    data_selector: records
- name: verbatim_elevation
  endpoint:
    path: /v_verbatimelevation
    method: GET
    data_selector: records
- name: vertical_datum
  endpoint:
    path: /v_verticaldatum
    method: GET
    data_selector: records
- name: minimum_depth_in_meters
  endpoint:
    path: /v_minimumdepthinmeters
    method: GET
    data_selector: records
- name: maximum_depth_in_meters
  endpoint:
    path: /v_maximumdepthinmeters
    method: GET
    data_selector: records
- name: verbatim_depth
  endpoint:
    path: /v_verbatimdepth
    method: GET
    data_selector: records
- name: namePublishedIn
  endpoint:
    path: /v_namepublishedin
    method: GET
    data_selector: records
- name: namePublishedInYear
  endpoint:
    path: /v_namepublishedinyear
    method: GET
    data_selector: records
- name: higherClassification
  endpoint:
    path: /v_higherclassification
    method: GET
    data_selector: records
- name: kingdom
  endpoint:
    path: /v_kingdom
    method: GET
    data_selector: records
- name: phylum
  endpoint:
    path: /v_phylum
    method: GET
    data_selector: records
- name: class
  endpoint:
    path: /v_class
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /v_order
    method: GET
    data_selector: records
- name: superfamily
  endpoint:
    path: /v_superfamily
    method: GET
    data_selector: records
- name: family
  endpoint:
    path: /v_family
    method: GET
    data_selector: records
- name: subfamily
  endpoint:
    path: /v_subfamily
    method: GET
    data_selector: records
- name: tribe
  endpoint:
    path: /v_tribe
    method: GET
    data_selector: records
- name: subtribe
  endpoint:
    path: /v_subtribe
    method: GET
    data_selector: records
- name: genus
  endpoint:
    path: /v_genus
    method: GET
    data_selector: records
- name: genericName
  endpoint:
    path: /v_genericname
    method: GET
    data_selector: records
- name: subgenus
  endpoint:
    path: /v_subgenus
    method: GET
    data_selector: records
- name: infragenericEpithet
  endpoint:
    path: /v_infragenericepithet
    method: GET
    data_selector: records
- name: specificEpithet
  endpoint:
    path: /v_specificepithet
    method: GET
    data_selector: records
- name: infraspecificEpithet
  endpoint:
    path: /v_infraspecificepithet
    method: GET
    data_selector: records
- name: cultivarEpithet
  endpoint:
    path: /v_cultivarepithet
    method: GET
    data_selector: records
- name: taxonRank
  endpoint:
    path: /v_taxonrank
    method: GET
    data_selector: records
- name: verbatimTaxonRank
  endpoint:
    path: /v_verbatimtaxonrank
    method: GET
    data_selector: records
- name: scientificNameAuthorship
  endpoint:
    path: /v_scientificnameauthorship
    method: GET
    data_selector: records
- name: vernacularName
  endpoint:
    path: /v_vernacularname
    method: GET
    data_selector: records
- name: nomenclaturalCode
  endpoint:
    path: /v_nomenclaturalcode
    method: GET
    data_selector: records
- name: taxonomicStatus
  endpoint:
    path: /v_taxonomicstatus
    method: GET
    data_selector: records
- name: nomenclaturalStatus
  endpoint:
    path: /v_nomenclaturalstatus
    method: GET
    data_selector: records
- name: taxonRemarks
  endpoint:
    path: /v_taxonremarks
    method: GET
    data_selector: records
- name: minimum_distance_above_surface_in_meters
  endpoint:
    path: /dwc/minimumDistanceAboveSurfaceInMeters
    method: GET
    data_selector: records
- name: maximum_distance_above_surface_in_meters
  endpoint:
    path: /dwc/maximumDistanceAboveSurfaceInMeters
    method: GET
    data_selector: records
- name: location_according_to
  endpoint:
    path: /dwc/locationAccordingTo
    method: GET
    data_selector: records
- name: location_remarks
  endpoint:
    path: /dwc/locationRemarks
    method: GET
    data_selector: records
- name: decimal_latitude
  endpoint:
    path: /dwc/decimalLatitude
    method: GET
    data_selector: records
- name: decimal_longitude
  endpoint:
    path: /dwc/decimalLongitude
    method: GET
    data_selector: records
- name: geodetic_datum
  endpoint:
    path: /dwc/geodeticDatum
    method: GET
    data_selector: records
- name: coordinate_uncertainty_in_meters
  endpoint:
    path: /dwc/coordinateUncertaintyInMeters
    method: GET
    data_selector: records
- name: coordinate_precision
  endpoint:
    path: /dwc/coordinatePrecision
    method: GET
    data_selector: records
- name: point_radius_spatial_fit
  endpoint:
    path: /dwc/pointRadiusSpatialFit
    method: GET
    data_selector: records
- name: verbatim_coordinates
  endpoint:
    path: /dwc/verbatimCoordinates
    method: GET
    data_selector: records
- name: verbatim_latitude
  endpoint:
    path: /dwc/verbatimLatitude
    method: GET
    data_selector: records
- name: verbatim_longitude
  endpoint:
    path: /dwc/verbatimLongitude
    method: GET
    data_selector: records
- name: verbatim_coordinate_system
  endpoint:
    path: /dwc/verbatimCoordinateSystem
    method: GET
    data_selector: records
- name: verbatim_srs
  endpoint:
    path: /dwc/verbatimSRS
    method: GET
    data_selector: records
- name: footprint_wkt
  endpoint:
    path: /dwc/footprintWKT
    method: GET
    data_selector: records
- name: footprint_srs
  endpoint:
    path: /dwc/footprintSRS
    method: GET
    data_selector: records
- name: footprint_spatial_fit
  endpoint:
    path: /dwc/footprintSpatialFit
    method: GET
    data_selector: records
- name: georeferenced_by
  endpoint:
    path: /dwc/georeferencedBy
    method: GET
    data_selector: records
- name: georeferenced_date
  endpoint:
    path: /dwc/georeferencedDate
    method: GET
    data_selector: records
- name: georeference_protocol
  endpoint:
    path: /dwc/georeferenceProtocol
    method: GET
    data_selector: records
- name: georeference_sources
  endpoint:
    path: /dwc/georeferenceSources
    method: GET
    data_selector: records
- name: georeference_remarks
  endpoint:
    path: /dwc/georeferenceRemarks
    method: GET
    data_selector: records
- name: geological_context_id
  endpoint:
    path: /dwc/geologicalContextID
    method: GET
    data_selector: records
- name: earliest_eon_or_lowest_eonothem
  endpoint:
    path: /dwc/earliestEonOrLowestEonothem
    method: GET
    data_selector: records
- name: latest_eon_or_highest_eonothem
  endpoint:
    path: /dwc/latestEonOrHighestEonothem
    method: GET
    data_selector: records
- name: earliest_era_or_lowest_erathem
  endpoint:
    path: /dwc/earliestEraOrLowestErathem
    method: GET
    data_selector: records
- name: latest_era_or_highest_erathem
  endpoint:
    path: /dwc/latestEraOrHighestErathem
    method:
      GET: GET
      data_selector: records
- name: earliest_period_or_lowest_system
  endpoint:
    path: /dwc/earliestPeriodOrLowestSystem
    method: GET
    data_selector: records
- name: latest_period_or_highest_system
  endpoint:
    path: /dwc/latestPeriodOrHighestSystem
    method: GET
    data_selector: records
- name: earliest_epoch_or_lowest_series
  endpoint:
    path: /dwc/earliestEpochOrLowestSeries
    method: GET
    data_selector: records
- name: latest_epoch_or_highest_series
  endpoint:
    path: /dwc/latestEpochOrHighestSeries
    method: GET
    data_selector: records
- name: earliest_age_or_lowest_stage
  endpoint:
    path: /dwc/earliestAgeOrLowestStage
    method: GET
    data_selector: records
- name: latest_age_or_highest_stage
  endpoint:
    path: /dwc/latestAgeOrHighestStage
    method: GET
    data_selector: records
- name: lowest_biostratigraphic_zone
  endpoint:
    path: /dwc/lowestBiostratigraphicZone
    method: GET
    data_selector: records
- name: highest_biostratigraphic_zone
  endpoint:
    path: /dwc/highestBiostratigraphicZone
    method: GET
    data_selector: records
- name: lithostratigraphic_terms
  endpoint:
    path: /dwc/lithostratigraphicTerms
    method: GET
    data_selector: records
- name: group
  endpoint:
    path: /dwc/group
    method: GET
    data_selector: records
- name: formation
  endpoint:
    path: /dwc/formation
    method: GET
    data_selector: records
- name: member
  endpoint:
    path: /dwc/member
    method: GET
    data_selector: records
- name: bed
  endpoint:
    path: /dwc/bed
    method: GET
    data_selector: records
- name: identification_id
  endpoint:
    path: /dwc/identificationID
    method: GET
    data_selector: records
- name: verbatim_identification
  endpoint:
    path: /dwc/verbatimIdentification
    method: GET
    data_selector: records
- name: identification_qualifier
  endpoint:
    path: /dwc/identificationQualifier
    method: GET
    data_selector: records
- name: type_status
  endpoint:
    path: /dwc/typeStatus
    method: GET
    data_selector: records
- name: identified_by
  endpoint:
    path: /dwc/identifiedBy
    method: GET
    data_selector: records
- name: identified_by_id
  endpoint:
    path: /dwc/identifiedByID
    method: GET
    data_selector: records
- name: date_identified
  endpoint:
    path: /dwc/dateIdentified
    method: GET
    data_selector: records
- name: identification_references
  endpoint:
    path: /dwc/identificationReferences
    method: GET
    data_selector: records
- name: identification_verification_status
  endpoint:
    path: /dwc/identificationVerificationStatus
    method: GET
    data_selector: records
- name: identification_remarks
  endpoint:
    path: /dwc/identificationRemarks
    method: GET
    data_selector: records
- name: taxon_id
  endpoint:
    path: /dwc/taxonID
    method: GET
    data_selector: records
- name: scientific_name_id
  endpoint:
    path: /dwc/scientificNameID
    method: GET
    data_selector: records
- name: accepted_name_usage_id
  endpoint:
    path: /dwc/acceptedNameUsageID
    method: GET
    data_selector: records
- name: parent_name_usage_id
  endpoint:
    path: /dwc/parentNameUsageID
    method: GET
    data_selector: records
- name: original_name_usage_id
  endpoint:
    path: /dwc/originalNameUsageID
    method: GET
    data_selector: records
- name: name_according_to_id
  endpoint:
    path: /dwc/nameAccordingToID
    method: GET
    data_selector: records
- name: name_published_in_id
  endpoint:
    path: /dwc/namePublishedInID
    method: GET
    data_selector: records
- name: taxon_concept_id
  endpoint:
    path: /dwc/taxonConceptID
    method: GET
    data_selector: records
- name: scientific_name
  endpoint:
    path: /dwc/scientificName
    method: GET
    data_selector: records
- name: accepted_name_usage
  endpoint:
    path: /dwc/acceptedNameUsage
    method: GET
    data_selector: records
- name: parent_name_usage
  endpoint:
    path: /dwc/parentNameUsage
    method: GET
    data_selector: records
- name: original_name_usage
  endpoint:
    path: /dwc/originalNameUsage
    method: GET
    data_selector: records
- name: name_according_to
  endpoint:
    path: /dwc/nameAccordingTo
    method: GET
    data_selector: records
- name: GBIF_DMSGCode
  endpoint:
    path: /GBIF_DMSGCode
    method: GET
    data_selector: result
    params: {}
- name: GBIF_ISEA3HCode
  endpoint:
    path: /GBIF_ISEA3HCode
    method: GET
    data_selector: result
    params: {}
- name: GBIF_MGRSCode
  endpoint:
    path: /GBIF_MGRSCode
    method: GET
    data_selector: result
    params: {}
- name: GBIF_TemporalUncertainty
  endpoint:
    path: /GBIF_TemporalUncertainty
    method: GET
    data_selector: result
    params: {}
- name: GBIF_MillisecondsToISO8601
  endpoint:
    path: /GBIF_MillisecondsToISO8601
    method: GET
    data_selector: result
    params: {}
- name: GBIF_SecondsToISO8601
  endpoint:
    path: /GBIF_SecondsToISO8601
    method: GET
    data_selector: result
    params: {}
- name: GBIF_SecondsToLocalISO8601
  endpoint:
    path: /GBIF_SecondsToLocalISO8601
    method: GET
    data_selector: result
    params: {}
- name: occurrence
  endpoint:
    path: /occurrence
    method: GET
    data_selector: records
    params:
      occurrenceStatus: PRESENT
      countryCode: PL
      year: 2000,*
      kingdomKey: 1
      hasCoordinate: true
notes:
- Most use of the GBIF API does not require authentication.
- POST, PUT, DELETE and some GET requests require authentication.
- All unprocessed verbatim data is available to end users via Darwin Core Archive
  (DwC-A) downloads.
- 'Version 1 - Warning: this method will be removed and users are advised to migrate
  to the version 2 API.'
- The endpoint returns occurrences data based on various parameters.
- Uses OAuth2 with refresh token — requires setup of connected app in GBIF
- Some objects may return nulls in deeply nested fields
- In order to retrieve all results for a given search filter you need to issue individual
  requests for each page, which is limited to a maximum size of 300 records per page.
- There is a hard limit for any query of 100,000 records.
- Query parameters include optional filters for searching subdivisions.
- Responses include 200 for success and 404 for unknown GADM regions.
- Uses Darwin Core terms for data representation.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- An occurrence download request.
- This API works against the GBIF Registry, which makes all registered Datasets, Installations,
  Organizations, Nodes, and Networks discoverable.
- Some responses may contain null values in non-required fields.
- The list can be empty if no facets were requested.
- If there are no values for a facet, it will not be included in the list.
- Uses OAuth2 for authentication.
- Methods to create, update and delete participant nodes are generally used only to
  synchronize the two systems.
- A limit of 20 and offset of 40 will get the third page of 20 results. Some services
  have a maximum offset.
- Requires UUID for various endpoints.
- API requires authentication with OAuth2.
- Requires setup of connected app in api
- Some endpoints may have deprecated parameters.
- It is possible for it to be restored in the future.
- Uses OAuth2 with refresh token — requires setup of connected app in GBIF.
- Some objects may return nulls in deeply nested fields.
- Refer to the official GBIF API documentation for detailed endpoint usage.
- API call to retrieve all official values for country.
- API call to retrieve all official values for License.
- Some services have a maximum offset.
- Occurrence downloads are created asynchronously.
- User registration on GBIF.org is required to create a download request.
- 'Recorded date invalid: The recording date given cannot be interpreted because it
  is invalid.'
- 'Recorded date mismatch: The recording date specified as the eventDate string and
  the individual year, month, day are contradicting.'
- 'Identified date unlikely: The identification date is in the future or before Linnean
  times (1700).'
- 'Recorded Date Unlikely: The recording date is highly unlikely, falling either into
  the future or representing a very old date before 1600 that predates modern taxonomy.'
- 'Multimedia date invalid: The creation date given cannot be interpreted because
  it is invalid.'
- 'Identified date invalid: The identification date given cannot be interpreted because
  it is invalid.'
- 'Modified date invalid: A (partial) invalid modified date is given.'
- 'Modified date unlikely: The modified date given is in the future or predates unix
  time (1970).'
- 'Georeferenced date invalid: The georeference date given cannot be interpreted because
  it is invalid.'
- 'Georeferenced date unlikely: The georeference date given is in the future or before
  Linnean times (1700).'
- 'Basis of record invalid: The given basis of record is impossible to interpret or
  very different from the recommended vocabulary.'
- 'Type status invalid: The given type status is impossible to interpret or very different
  from the recommended vocabulary.'
- 'Occurrence status unparsable: The given occurrenceStatus value cannot be interpreted.'
- 'Ambiguous institution: Multiple institutions were found in GRSciColl with the same
  level of confidence.'
- 'Ambiguous collection: Multiple collections were found in GRSciColl with the same
  level of confidence.'
- 'Institution match none: No match was found in GRSciColl.'
- 'Collection match none: No match was found in GRSciColl.'
- 'Institution match fuzzy: A match was found in GRSciColl but it was matched fuzzily.'
- 'Collection match fuzzy: A match was found in GRSciColl but it was matched fuzzily.'
- 'Institution collection mismatch: At least one possible collection match was found
  in GRSciColl but none of them belong to the institution matched.'
- 'Different owner institution: The institution doesn’t match the owner institution.'
- 'Individual count invalid: Individual count value not parsable into a positive integer.'
- 'Individual count conflicts with occurrence status: The values given for the individual
  count and for the status of the occurrence contradict each other.'
- 'Occurrence status inferred from individual count: The present/absent status of
  the occurrence was inferred from the individual count value.'
- 'Occurrence status inferred from basis of record: The present/absent status of the
  occurrence was inferred from the basis of record value.'
- 'References URI invalid: The references URL cannot be resolved.'
- 'Multimedia URI invalid: The multimedia URL cannot be resolved.'
- 'Interpretation error: An error occurred during interpretation, leaving the record
  interpretation incomplete.'
- Coordinates are exactly 0/0, often indicating an actual null coordinate.
- The supplied coordinates lie outside of the range for decimal lat/lon values (-90/90,
  -180/180).
- The interpreted occurrence coordinates fall outside of the indicated country.
- A coordinate value is given in some form, but GBIF is unable to interpret it.
- If the datum is null, data interpretation assumes the record coordinates are in
  WGS84.
- The geodetic datum could not be interpreted, because the supplied term cannot be
  matched against the vocabulary of known values.
- The spatial reference system could not be interpreted, because the supplied term
  could not be matched against the vocabulary of known values.
- The footprint well-known text (point, line or polygon) conflicts with the given
  coordinates.
- The footprint well-known text (point, line or polygon) could not be interpreted.
- Interpreted Country and Country code contradict each other.
- If the country and country code are not supplied or cannot be matched to known values,
  data interpretation derives their content from the decimal coordinates through a
  lookup service.
- The country or countryCode given cannot be matched to the vocabulary for country
  names.
- The interpreted occurrence coordinates fall outside of the indicated continent.
- The continent is based on the provided country, not the provided continent.
- The continent given cannot be matched to the vocabulary for continent names.
- In the data interpretation the original coordinates are rounded to 6 decimals (~1m
  precision).
- The original coordinates were successfully reprojected from a different geodetic
  datum to WGS84.
- Indicates successful coordinate reprojection according to provided datum, but which
  results in a datum shift larger than 0.1 decimal degrees.
- The given decimal latitude and longitude could not be reprojected to WGS84 based
  on the provided datum.
- The value given for Coordinate uncertainty in meters is not a valid number, or lies
  outside a plausible range.
- Indicates an invalid or very unlikely coordinates precision.
- The supplied longitude value places the coordinates outside of the indicated country.
- The supplied latitude value places the coordinates outside of the indicated country.
- Coordinates seem to be swapped when testing against the interpreted country.
- The values for minimum and maximum depth appear to the swapped.
- The values for minimum and maximum depth are non-numeric values and cannot be interpreted.
- The values for minimum and maximum depth are negative or higher than 11000.
- Set if supplied depth is not given in the metric system.
- The values for minimum and maximum elevation are non-numeric values and cannot be
  interpreted.
- The values for minimum and maximum elevation appear to the swapped.
- Set if supplied elevation is not given in the metric system.
- The values for minimum and maximum elevation are above the troposphere (17000 m)
  or below Mariana Trench (11000 m).
- The interpreted continent and country do not match up.
- If no value is supplied for the continent or if the values cannot be matched against
  a known vocabulary, data interpretation derives the continent from the decimal coordinates.
- SQL queries must be against a single table named occurrence.
- Only SELECT queries are supported. JOIN queries and sub-queries are not allowed.
- The SQL parser is strict, and column names that are also SQL keywords must be quoted.
- Many GBIF APIs are tolerant of small differences in how they are queried
- The SQL API is less forgiving, so some common parts of queries must be specified
  exactly as documented
- This is an experimental feature, and the implementation may change throughout 2025.
errors:
- '429: Reduce your query rate and try again'
- '400: Invalid query'
- '404: Name usage not found'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API access'
- '400: Invalid query, e.g. invalid vocabulary values'
- '429: Too many downloads, wait for one of your downloads to complete.'
- 'REQUEST_LIMIT_EXCEEDED: The offset + limit exceeds 100,000.'
- '400: Invalid request'
- '404: Entity or subentity not found'
- '5XX: System failure – try again'
- '401 Unauthorized: Check your credentials.'
- '400: Invalid search query provided'
- 401 Unauthorized
- 403 Forbidden
- 400 Invalid search query provided
- '401: Unauthorized'
- '403: Forbidden'
- '204: Endpoint deleted'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 422 The request is syntactically correct but the fields are invalid (required fields
  not set, duplicated keys, inconsistent keys, etc.)
- 404 Entity or subentity not found
- '400 Bad request: the JSON is invalid or the request is not well-formed'
- '422: The request is syntactically correct but the fields are invalid'
- '204: Vocabulary deprecated'
- '400: Bad request: the JSON is invalid or the request is not well-formed'
- '400: Invalid SQL query'
- '401: Incorrect username or password'
- '403: User does not have permission for this feature'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.gbif.org/v1
  headers:
    Accept: application/json
source_metadata: null
