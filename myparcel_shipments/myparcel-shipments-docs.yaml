resources:
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: ShipmentIds
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: ShipmentIds
    params: {}
- name: standard_shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipment
    headers:
      Content-Type: application/vnd.shipment+json;version=1.1
- name: related_return_shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: return_shipment
    headers:
      Content-Type: application/vnd.return_shipment+json;version=1.1
- name: unrelated_return_shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: unrelated_return_shipment
    headers:
      Content-Type: application/vnd.unrelated_return_shipment+json;version=1.1
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: data.shipments
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: data.shipments
    params: {}
- name: return_shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: data.return_shipments
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: data.shipments
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: data.shipments
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: GET
    data_selector: data.shipments
    params: {}
- name: shipment_ids
  endpoint:
    path: /shipments/ids
    method: GET
    data_selector: data.ids
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: GET
    data_selector: data.shipments
    params: {}
- name: shipment_ids
  endpoint:
    path: /shipments/ids
    method: GET
    data_selector: data.ids
    params: {}
- name: shipments
  endpoint:
    path: /shipments/[id[;id]]
    method: GET
    data_selector: array of Shipment objects
    params: {}
- name: delete_shipments
  endpoint:
    path: /shipments/id[;id]
    method: DELETE
    data_selector: None
    params: {}
- name: return_shipments
  endpoint:
    path: /return_shipments
    method: POST
    data_selector: DownloadUrl object
    params: {}
- name: shipment_labels
  endpoint:
    path: /shipment_labels/id[;id]
    method: GET
    data_selector: Shipment label PDF
    params: {}
- name: track_traces
  endpoint:
    path: /tracktraces/id[;id]
    method: GET
    data_selector: array of TrackTrace objects
    params: {}
- name: shipments
  endpoint:
    path: /shipments/[id[;id]]
    method: GET
    data_selector: data.search_results.shipments
- name: delete_shipment
  endpoint:
    path: /shipments/id[;id]
    method: DELETE
    data_selector: null
- name: return_shipments
  endpoint:
    path: /return_shipments
    method: POST
    data_selector: null
- name: shipment_labels
  endpoint:
    path: /shipment_labels/id[;id]
    method: GET
    data_selector: null
- name: tracktraces
  endpoint:
    path: /tracktraces/id[;id]
    method: GET
    data_selector: null
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: data.shipments
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: data.shipments
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: GET
    data_selector: data
    params: {}
- name: delivery_options
  endpoint:
    path: /delivery-options
    method: GET
    data_selector: options
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/shipments
    method: POST
    data_selector: shipment
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/shipments
    method: POST
    data_selector: shipment
    params: {}
- name: national_shipment
  endpoint:
    path: /shipments/national
    method: POST
    data_selector: shipments
    params: {}
- name: international_shipment
  endpoint:
    path: /shipments/international
    method: POST
    data_selector: shipments
    params: {}
- name: pickup_location
  endpoint:
    path: /pickups
    method: POST
    data_selector: data
    params: {}
- name: shipment_status
  endpoint:
    path: /shipments/status
    method: GET
    data_selector: shipments
    params: {}
- name: national_shipment
  endpoint:
    path: /national_shipment
    method: POST
    data_selector: shipments
    params: {}
- name: international_shipment
  endpoint:
    path: /international_shipment
    method: POST
    data_selector: shipments
    params: {}
- name: pickup_location
  endpoint:
    path: /pickup_location
    method: POST
    data_selector: data.shipments
    params: {}
- name: national_shipment_get
  endpoint:
    path: /national_shipment
    method: GET
    data_selector: shipments
    params: {}
- name: shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: data
    params: {}
- name: customs_declaration
  endpoint:
    path: /customs_declaration
    method: POST
    data_selector: data
    params: {}
- name: track_trace
  endpoint:
    path: /track_trace
    method: GET
    data_selector: data
    params: {}
- name: CustomsDeclaration
  endpoint:
    path: /api/customs_declaration
    method: POST
    data_selector: contents
    params: {}
- name: ReturnShipment
  endpoint:
    path: /api/return_shipment
    method: POST
    data_selector: parent
    params: {}
- name: UnrelatedReturnShipment
  endpoint:
    path: /api/unrelated_return_shipment
    method: POST
    data_selector: carrier
    params: {}
- name: DownloadUrl
  endpoint:
    path: /api/download_url
    method: POST
    data_selector: link
    params: {}
- name: TrackTrace
  endpoint:
    path: /api/track_trace
    method: GET
    data_selector: tracktraces
    params: {}
- name: TrackTraceLocation
  endpoint:
    path: /api/track-trace-location
    method: GET
    data_selector: location
    params: {}
- name: PickupLocation
  endpoint:
    path: /api/pickup-location
    method: POST
    data_selector: pickupLocation
    params: {}
- name: PaymentInstructions
  endpoint:
    path: /api/payment-instructions
    method: POST
    data_selector: paymentInstructions
    params: {}
- name: Invoice
  endpoint:
    path: /api/invoice
    method: POST
    data_selector: invoice
    params: {}
- name: ShipmentLabelDownloadLink
  endpoint:
    path: /api/shipment-label-download-link
    method: GET
    data_selector: downloadLink
    params: {}
- name: TrackTraceStatus
  endpoint:
    path: /api/track-trace-status
    method: GET
    data_selector: trackTraceStatus
    params: {}
- name: DeliveryMoment
  endpoint:
    path: /api/delivery-moment
    method: POST
    data_selector: deliveryMoment
    params: {}
- name: TrackTraceLocation
  endpoint:
    path: /api/v1/tracktrace/location
    method: GET
    data_selector: records
- name: PickupLocation
  endpoint:
    path: /api/v1/pickup/location
    method: POST
    data_selector: records
- name: PaymentInstructions
  endpoint:
    path: /api/v1/payment/instructions
    method: POST
    data_selector: records
- name: Invoice
  endpoint:
    path: /api/v1/invoice
    method: POST
    data_selector: records
- name: ShipmentLabelDownloadLink
  endpoint:
    path: /api/v1/shipment/label/download
    method: GET
    data_selector: records
- name: TrackTraceStatus
  endpoint:
    path: /api/v1/tracktrace/status
    method: GET
    data_selector: records
- name: DeliveryMoment
  endpoint:
    path: /api/v1/delivery/moment
    method: POST
    data_selector: records
- name: delivery_options
  endpoint:
    path: /delivery_options
    method: GET
    data_selector: array of DeliveryOptions or array of PickupOptions objects
    params:
      cc: country_code
      postal_code: string
      number: string
- name: pickup_locations
  endpoint:
    path: /pickup_locations
    method: GET
    data_selector: array of DeliveryOptions or array of PickupOptions objects
    params:
      cc: country_code
      postal_code: string
      number: string
- name: delivery_options
  endpoint:
    path: /delivery_options
    method: GET
    data_selector: array of DeliveryOptions
    params:
      cc: country_code
      postal_code: string
      number: string
- name: pickup_locations
  endpoint:
    path: /pickup_locations
    method: GET
    data_selector: array of PickupOptions
    params: {}
- name: delivery_options
  endpoint:
    path: /delivery_options
    method: GET
    data_selector: data.delivery
    params:
      platform: myparcel
      carrier: postnl
      cc: nl
      number: '31'
      postal_code: 2132JE
- name: pickup_locations
  endpoint:
    path: /pickup_locations
    method: GET
    data_selector: data.pickup_locations
    params:
      platform: myparcel
      carrierName: postnl
      cc: nl
      number: '31'
      postal_code: 2132JE
- name: delivery_options
  endpoint:
    path: /delivery_options
    method: GET
    data_selector: data.delivery
    params:
      platform: myparcel
      carrier: postnl
      cc: nl
      number: '31'
      postal_code: 2132JE
- name: pickup_locations
  endpoint:
    path: /pickup_locations
    method: GET
    data_selector: data.pickup_locations
    params:
      carrierName: postnl
      platform: myparcel
      cc: nl
      number: '31'
      postal_code: 2132JE
- name: delivery_options
  endpoint:
    path: /delivery_options
    method: GET
    data_selector: options
- name: pickup_options
  endpoint:
    path: /pickup_options
    method: GET
    data_selector: options
- name: delivery_options
  endpoint:
    path: /api/v1/delivery_options
    method: GET
    data_selector: delivery_options
    params: {}
- name: pickup_options
  endpoint:
    path: /api/v1/pickup_options
    method: GET
    data_selector: pickup_options
    params: {}
- name: webhook_subscriptions
  endpoint:
    path: /webhook_subscriptions
    method: POST
- name: get_webhook_subscriptions
  endpoint:
    path: /webhook_subscriptions/
    method: GET
- name: delete_webhook_subscription
  endpoint:
    path: /webhook_subscriptions/id[;id]
    method: DELETE
- name: webhook_subscriptions
  endpoint:
    path: /webhook_subscriptions
    method: POST
    data_selector: data.webhook_subscriptions
    params: {}
- name: get_webhook_subscriptions
  endpoint:
    path: /webhook_subscriptions/
    method: GET
    data_selector: data.webhook_subscriptions
    params: {}
- name: delete_webhook_subscription
  endpoint:
    path: /webhook_subscriptions/id[;id]
    method: DELETE
    data_selector: null
    params: {}
- name: webhook_subscriptions
  endpoint:
    path: /webhook_subscriptions
    method: POST
    data_selector: data.webhook_subscriptions
    params: {}
- name: shipment_status_change
  endpoint:
    path: /shipment_status_change
    method: GET
    data_selector: data.hooks
    params: {}
- name: shipment_label_created
  endpoint:
    path: /shipment_label_created
    method: GET
    data_selector: data.hooks
    params: {}
- name: drop_off_points
  endpoint:
    path: /drop_off_points
    method: GET
    data_selector: data.drop_off_points
    params:
      postal_code: 2132JE
      carrier_id: '5'
- name: subscription
  endpoint:
    path: /webhook_subscriptions
    method: POST
    data_selector: webhook_subscriptions
- name: shipment_status_change_event
  endpoint:
    path: /shipment_status_change_event
    method: GET
    data_selector: hooks
- name: shipment_label_created
  endpoint:
    path: /shipment_label_created
    method: GET
    data_selector: hooks
- name: drop_off_points
  endpoint:
    path: /drop_off_points
    method: GET
    data_selector: data.drop_off_points
    params:
      postal_code: string
      cc: country_code
      carrier_id: carrier
      distance: integer
      latitude: coordinates
      longitude: coordinates
- name: orders
  endpoint:
    path: /fulfilment/orders
    method: POST
    data_selector: data.orders
    params: {}
- name: get_order
  endpoint:
    path: /fulfilment/orders
    method: GET
    data_selector: data.orders
    params: {}
- name: edit_order
  endpoint:
    path: /fulfilment/orders
    method: PUT
    data_selector: data.orders
    params: {}
- name: orders
  endpoint:
    path: /fulfilment/orders
    method: GET
    data_selector: data.orders
    params: {}
- name: packing_slip
  endpoint:
    path: /fulfilment/orders/id[;id]/packing_slip
    method: GET
    data_selector: response.body
    params: {}
- name: orders
  endpoint:
    path: /fulfilment/orders
    method: POST
    data_selector: data.orders
- name: get_orders
  endpoint:
    path: /fulfilment/orders
    method: GET
    data_selector: data.orders
    params:
      status: open;partially_processed
- name: edit_orders
  endpoint:
    path: /fulfilment/orders
    method: PUT
    data_selector: data.orders
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
    params: {}
- name: shipment_items
  endpoint:
    path: /shipment/items
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /fulfilment/orders
    method: GET
    data_selector: data.orders
    params: {}
- name: packing_slips
  endpoint:
    path: /fulfilment/orders/id[;id]/packing_slip
    method: GET
    data_selector: data
    params: {}
- name: delete_order
  endpoint:
    path: /fulfilment/orders/id[;id]
    method: DELETE
    data_selector: null
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: product
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: products
- name: order_shipment
  endpoint:
    path: /api/v1/order_shipments
    method: GET
    data_selector: order_shipments
- name: shipped_items
  endpoint:
    path: /api/v1/shipped_items
    method: GET
    data_selector: shipped_items
- name: consignment
  endpoint:
    path: /consignments
    method: POST
    data_selector: data
- name: find_consignments
  endpoint:
    path: /consignments/{id}
    method: GET
    data_selector: data
- name: query_consignments
  endpoint:
    path: /consignments/query
    method: GET
    data_selector: data
- name: consignment
  endpoint:
    path: /consignments
    method: POST
    data_selector: data
    params: {}
- name: order
  endpoint:
    path: /orders
    method: POST
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
    params: {}
- name: consignment
  endpoint:
    path: /consignments
    method: GET
    data_selector: consignments
- name: consignment
  endpoint:
    path: /consignments
    method: POST
    data_selector: data
- name: carrier_options
  endpoint:
    path: /carrier-options
    method: GET
    data_selector: options
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: account
- name: consignment
  endpoint:
    path: /consignments
    method: POST
    data_selector: data
- name: order
  endpoint:
    path: /orders
    method: POST
    data_selector: data
- name: delivery_options
  endpoint:
    path: /delivery-options
    method: GET
    data_selector: options
- name: orders
  endpoint:
    path: /wp-json/myparcel/v1/orders
    method: GET
    data_selector: data
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: shipping_methods
  endpoint:
    path: /shipping_methods
    method: GET
- name: orders
  endpoint:
    path: /api/orders
    method: POST
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: POST
    data_selector: data
    params: {}
- name: label_settings
  endpoint:
    path: /api/label_settings
    method: GET
- name: standard_export_settings
  endpoint:
    path: /myparcel/standard-export-settings
    method: GET
    data_selector: data
    params: {}
- name: shipping_methods
  endpoint:
    path: /myparcel/shipping-methods
    method: GET
    data_selector: methods
    params: {}
- name: shipments
  endpoint:
    path: /api/shipments
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: tracking
  endpoint:
    path: /tracking
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: shipment
  endpoint:
    path: /api/v1/shipments
    method: POST
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
    params:
      status: Paid
- name: checkout_settings
  endpoint:
    path: /checkout/settings
    method: GET
    data_selector: settings
- name: delivery_options
  endpoint:
    path: /delivery/options
    method: GET
    data_selector: options
- name: shipping_labels
  endpoint:
    path: /api/shipping_labels
    method: POST
    data_selector: shipping_labels
- name: shipments
  endpoint:
    path: /api/shipments
    method: POST
    data_selector: data
- name: orders
  endpoint:
    path: /api/orders
    method: POST
    data_selector: order
    params: {}
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
notes:
- You will receive a URL that points to a PDF for shipment labels.
- For JSON requests a ShipmentIds object is returned. The ids in the ShipmentIds object
  will be in the same order they were sent.
- Specify Content-Type when you want to create standard shipments.
- Specify Content-Type when you want to create related return shipments. Parent shipment
  cannot be a concept (shipment-status 1 (pending - concept)). When a label is generated,
  the status of the shipment is converted to registered.
- Specify Content-Type when you want to create unrelated return shipments.
- Digital stamp shipments are available on platform 1 (myparcel) and to Dutch destinations
  only.
- Multi collo shipments are only available on platform 1 (myparcel).
- Domestic PostNL shipments are also supported on sendmyparcel.be, using a Belgian
  address.
- Bpost shipments are only supported on platform 3 (belgie).
- Only available on platform 3 (belgie) for pickup locations.
- Only shipments with shipment-status 1 (pending - concept) can be deleted.
- HTTP 204 No Content is returned if successful for delete request.
- Only shipments with `shipment-status 1 (pending - concept)` can be deleted.
- Secondary shipments only can be used in combination with package-type 1 (package)
  and can only be used for shipments to NL and BE.
- Secondary shipments can only be used in combination with package-type 1 (package)
  and can only be used for shipments to NL en BE.
- API returns data in JSON format.
- Default rate limits apply to many of our documented endpoints. Customers who would
  like a higher rate limit can contact us to discuss the possibilities.
- Default rate limits apply to many of our documented endpoints.
- All content must be encoded in UTF-8 and include the charset=utf-8.
- 'Example: Content-Type: application/json;charset=utf-8'
- HTTP basic access authentication on top of SSL is used for authentication. Every
  request must include an Authorization header with a base64 encoded API key.
- Requires customs declaration for non-EU shipments
- Requires physical properties for non-EU and digital stamp shipment types
- General settings for return shipments only accept the printer_identifier property.
- The printer_identifier property is accepted for general_settings in return shipments.
- This endpoint can only be used in the Netherlands or Belgium ( cc=NL or cc=BE ).
- If a request is made for the delivery options between Friday after the default cutoff_time
  (15:30) and Monday before the default cutoff_time (15:30) then Tuesday will be shown
  as the next possible delivery date.
- You can only have one webhook of each type at a time for a shop.
- Adding the same webhook overwrites any existing one.
- The URL protocol must be https.
- The country code for which to fetch the drop-off points can only be used in the
  Netherlands (cc=NL).
- Authorization requires bearer token in base64 format.
- The Order object includes required fields for shipment and order lines.
- Only orders with order-status open (Open) can be deleted.
- 'If you want to retrieve more than 5 packing slips in one response, you can use
  Accept: application/json;charset=utf8.'
- 'Required: shipment information for the order.'
- 'Required: order lines of the order.'
- 'Required: actual shipments for the order.'
- User exceptions are validations we do on our side, and can be fixed by changing
  the requests.
- Requires API key from backoffice for access.
- Your website must use HTTPS.
- Requires API key from backoffice for authentication
- Ensure to handle potential errors gracefully during API calls
- 'This page is currently only available in the following languages:'
- An API key can be generated in Shop Settings -> Integration.
- This is the MyParcel delivery options module for use in any e-commerce platform's
  checkout.
- The existing behavior will continue to work throughout v6 but will be removed/changed
  in the next major version.
- Ensure the API key is generated and entered in the MyParcel plugin settings.
- Uses API key for authentication
- Some options like avondlevering may not be visible under certain conditions
- Documentatie over SDK's en andere integraties is alleen beschikbaar in het Engels
- API key is required for using the MyParcel plugin.
- Requires setup of connected app in MyParcel API
- Wij adviseren om, na het installeren van de plugin, het bestelproces te doorlopen
  door een test-bestelling te plaatsen en zo te bekijken of de checkout naar wens
  is.
- Er worden geen kosten in rekening gebracht, zolang je de labels niet laat scannen
  bij een vervoerder.
- 'Let op: digitale postzegels worden wel direct in rekening gebracht.'
- API key is required for sending shipments to MyParcel and can be found in MyParcel
  account settings.
- Zet 'Track & Trace in e-mail' aan om de barcode en Track & Trace link mee te sturen
  in de verzendbevestiging naar je klanten.
- Plugin is compatible from version 6.3.0.0 of Shopware.
- Meest voorkomende oorzaak voor API key problemen is dat er niet op 'Wijzigingen
  opslaan' is geklikt.
- To export shipments to your MyParcel account, an API key is necessary.
- API key is required for access.
- Orders with status 'Betaald' are automatically sent to MyParcel.
- If orders do not appear, change status to 'Wacht op betaling' and back to 'Betaald'.
- MyParcel changes the order status in Bol automatically to 'Shipped' and fills the
  order with the Track & Trace barcode and carrier information.
- Requires MyParcel account to obtain API key for integration.
- Wix Stores must be installed to connect with MyParcel.
- Imported orders are created as draft shipments.
- 'Checkouts supported: OnePageCheckout, MagePlaza One Step Checkout v2.6.1'
- Postcode check extension can be used with MyParcel Magento 2 extension.
- Plugin is compatible starting from Shopware version 6.3.0.0
- Je hebt het 'Professional selling plan' van Amazon nodig om een API koppeling te
  kunnen maken.
- Gebruik je optionele kolommen in jouw orderoverzicht, zet deze dan (voor elk beschikbaar
  land) uit. Deze kolommen kunnen niet door de backoffice worden uitgelezen.
- Ja maar het douaneformulier wordt niet volledig gevuld en zal dus handmatig aangepast
  en aangevuld moeten worden.
- 'Mogelijk zijn er optionele kolommen aangezet. De koppeling kan deze helaas niet
  uitlezen. Gebruik alleen de standaard kolommen van het besteloverzicht ''Niet verzonden
  bestellingen''. Let op: Dit geldt voor alle landen, ook de landen waar je niet aan
  verkoopt.'
- Ja, de barcodes worden teruggekoppeld aan Etsy en de bestelling zal de status 'verzonden'
  krijgen zodra het label geprint is.
- Ja, maar het douaneformulier wordt niet volledig gevuld en zal dus handmatig aangevuld
  moeten worden.
- API key is necessary to export shipments to MyParcel.
- Shipments are exported based on the order's shipping status.
- Uses OAuth2 with refresh token — requires setup of connected app in MyParcel
- Bestellingen met status Betaald worden automatisch doorgeschoten naar MyParcel
- MyParcel verandert de orderstatus in Bol automatisch naar ‘Verzonden’ en vult de
  order aan met de Track & Trace-barcode en vervoerdersinformatie.
- Het is niet aan te raden om de zending in het Bol-portaal aan te passen voordat
  je deze importeert in MyParcel.
- Wix Stores moet als App geïnstalleerd zijn op je webshop om een koppeling met MyParcel
  te kunnen maken.
- Zendingen naar de rest van de Wereld kunnen met PostNL als standaard vervoerder
  wel geïmporteerd worden, maar de douanegegevens zullen handmatig aangevuld moeten
  worden.
- Bezorgopties als afhalen en avondbezorging kunnen vanwege beperkingen op het Wix
  platform niet getoond worden in de checkout.
- Gebruik alleen de standaard kolommen van het besteloverzicht 'Niet verzonden bestellingen'.
- Ja, de barcodes worden teruggekoppeld aan Etsy en de bestelling zal de status "verzonden"
  krijgen zodra het label geprint is.
- Als er geen Plug-in is gemaakt voor jouw specifieke verkoopplatform, kun je kiezen
  om de Google Chrome Extensie te installeren van MyParcel.
errors:
- 'HTTP 4xx: Check request parameters or body for errors.'
- 'HTTP 4xx: Error response'
- '401 Unauthorized: Check API key or token'
- '400 Bad Request: Check request format or required fields'
- '401 Unauthorized: Recheck API key or token expiration'
- 'HTTP 422 Unprocessable Entity: Shipment doesn''t exist.'
- 'HTTP 4xx: General error response.'
- 'HTTP 402 Payment Required: Payment needed for label.'
- 'HTTP 422 Unprocessable Entity: If the shipment doesn''t exist.'
- 'HTTP 4xx: General client error.'
- 'HTTP 402 Payment Required: If payment is required for the label.'
- '204 No Content: The request was successful, but there is no content to return.'
- '204 No Content: Successful request with no content returned.'
- 'HTTP 200 OK: Successful request.'
- 'HTTP 429 Too Many Requests: Too Many Requests'
- 'HTTP 429 Too Many Requests: Throttle API calls or reduce frequency.'
- '400 - Bad Request: When the request received is malformed.'
- '401 - Unauthorized: No credentials have been sent with the request, or the wrong
  credentials are sent. Tip: check if the API key is properly attached in the header.'
- '402 - Payment Required: When payment is required. An Invoice object may be sent
  with this response.'
- '403 - Forbidden: When the given credentials are not authorized to perform a certain
  action.'
- '404 - Not Found: When a resource cannot be found.'
- '405 - Method not allowed: When you used a method on an endpoint that is either
  not supported or not allowed for the given credentials.'
- '406 - Not acceptable: When the client requests a given format for a resource that
  is not supported.'
- '415 - Unsupported media type: When the client specifies a Content-Type in the request
  that is not supported.'
- '422 - Unprocessable Entity: When the client sends a request object with invalid
  data. The error message will specify what''s wrong with the request or the data
  sent to the API.'
- '409 - Conflict: When the client request conflicts with the current state of the
  resource.'
- '422 - Unprocessable Entity: When the client sends a request object with invalid
  data.'
- Error codes are defined in ranges to make it easier for developers to quickly diagnose
  and solve problems.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- HTTP/1.1 5xx < MESSAGE >
- HTTP/1.1 503 < MESSAGE >
- HTTP/1.1 4xx < MESSAGE >
- '401 Unauthorized: Recheck API key or authorization details'
- 'HTTP 4xx: Error'
- HTTP 204 No Content
- HTTP 422 Unprocessable Entity
- HTTP 4xx
- 'HTTP 4xx: Error response for invalid requests.'
- '400 Bad Request: Check the request data format and required fields.'
- '404 Not Found: Ensure the order identifier is correct.'
- 'HTTP 204 No Content: Successful deletion.'
- 'HTTP 422 Unprocessable Entity: Order doesn''t exist.'
- 'HTTP 4xx: Various errors related to request.'
- '3000: Access denied'
- '3001: Permission denied'
- '3100: Invalid content type'
- '3101: Invalid character set'
- '3102: Invalid accept header'
- '3103: Invalid authorization header'
- '3104: Invalid authentication method'
- '3105: Invalid route'
- '3106: Invalid origin url'
- '3107: Invalid referer url'
- '3200: Invalid query parameter: page'
- '3201: Invalid query parameter: size'
- '3202: Invalid query parameter: sort_column'
- '3203: Invalid query parameter: order'
- '3204: Invalid query parameter: column'
- '3205: Invalid query parameter: shipment_status'
- '3206: Invalid query parameter: from'
- '3207: Invalid query parameter: to'
- '3208: Invalid query parameter: q'
- '3209: Invalid query parameter: streetnumber'
- '3210: Invalid query parameter: id'
- '3211: Invalid query parameter: country_code'
- '3212: Missing required parameter'
- '3213: Invalid query parameter: dropoff_delay'
- '3214: Invalid query parameter: cutoff_time'
- '3217: Invalid query parameter: contents'
- '3218: Invalid query parameter: latitude'
- '3219: Invalid query parameter: longitude'
- '3220: Invalid query parameter: provider'
- '3221: Invalid query parameter: delivery_type'
- '3222: Invalid query parameter: carrier'
- '3223: Invalid query parameter: package_type'
- '3501: Invalid address'
- '3503: Invalid house number'
- '3505: Invalid postal code'
- '3506: Invalid country code'
- '3509: Recipient street max length exceeded'
- '3510: Recipient name max length exceeded'
- '3511: Invalid address number suffix'
- '3512: Invalid phone number'
- '3513: Company name max length exceeded'
- '3514: Invalid person or company name'
- '3515: Email address max length exceeded'
- '3516: Country not supported by carrier'
- '3517: Country not supported for product'
- '3518: Invalid CoC number'
- '3519: Sender street max length exceeded'
- '3520: Sender street additional info max length exceeded'
- '3702: Invalid customs declaration'
- '3703: Invalid invoice number in customs declaration'
- '3704: Invalid physical properties for shipment (length, width, height, weight)'
- '3705: Invalid shipment options or invalid combination of options'
- '3706: Invalid shipment status'
- '3707: Invalid shipment type'
- '3708: Invalid shipment label position'
- '3709: Invalid shipment label paper format'
- '3710: Return shipment url is expired'
- '3711: Cannot update shipment recipient country code'
- '3712: Cannot update shipment package type'
- '3713: Cannot update shipment status'
- '3714: Cannot create return shipment'
- '3715: Return shipments for EU shipments only'
- '3716: Shipment limit exceeded'
- '3717: Cannot update shipment'
- '3718: Invalid carrier for return shipment'
- '3719: Duplicate return shipment'
- '3720: Invalid parent shipment for related return shipment'
- '3721: Invalid delivery options for shipment'
- '3722: Invalid pickup location for shipment'
- '3723: Cannot delete shipment'
- '3726: Cannot determine insurance for shipment'
- '3727: Contribution too low for return shipment'
- '3728: Unsupported carrier'
- '3730: Invalid shipment weight'
- '3731: Cannot split address'
- '3733: Package type is not supported'
- '3735: Multi collo shipment not supported'
- '3736: Invalid data for multi collo shipment'
- '3739: Maximum colli amount exceeded for multi collo shipment'
- '3740: Maximum length property exceeded'
- '3743: Invalid insurance value'
- '3744: Shipment cannot be delivered due to Covid 19'
- '3745: Invalid sender'
- '3746: Cannot download expired shipment label'
- '3748: Invalid EORI number in customs declaration'
- '3749: Invalid VAT number in customs declaration'
- '3751: Missing email address and phone number in recipient'
- '3752: Invalid email domain of recipient'
- '3753: Unsupported postal code area'
- '3754: Cannot create shipment'
- '3758: Cannot generate shipment label'
- '3760: Invalid pickup location'
- '3761: Shipment cannot be delivered because country is temporary closed'
- '3762: For non-activated accounts, first two shipments can only be sent within the
  Netherlands and Belgium'
- '3765: One of the items in the customs declaration has an invalid amount'
- '3766: Recipient vat number is invalid'
- '3767: Uk vat number in the customs declaration is invalid'
- '3768: Recipient eori number is invalid'
- '4000: No nearest locations found'
- '4001: No delivery timeframe found'
- '5000: Invalid date'
- '10001: Invalid webhook subscription'
- '10002: Invalid webhook url'
- '10003: Invalid webhook hook'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your API key.'
- '404 Not Found: Ensure the consignment ID is correct.'
- 'HTTP 412 Precondition Failed: InvalidConsignmentException'
- 'HTTP 502 Bad Gateway: ApiException'
- 'HTTP 500 Internal Server Error: MissingFieldException'
- 'HTTP 500 Internal Server Error: InvalidArgumentException'
- 'HTTP 500 Internal Server Error: BadMethodCallException'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key'
- '404 Not Found: Resource may not exist or endpoint is incorrect'
- 'Street cannot be parsed: {code: 3501, label: error3501, status: 422, title: Street
  cannot be parsed, message: Street cannot be parsed}'
- '401 Unauthorized: Check API key validity.'
- '500 Internal Server Error: Check server logs for details.'
- '401 Unauthorized: Recheck API key configuration'
- '401 Unauthorized: Controleer de API-sleutel of de instellingen.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- '400 Bad Request: Check order status in Wix.'
- '401 Unauthorized: Verify OAuth permissions.'
- 'Invalid API Key: Ensure the API key is correct.'
- 'Shipment status not valid: Verify the shipment status for export.'
- Alleen orders met de status 'Paid' of 'Betaald' kunnen geïmporteerd worden.
auth_info:
  mentioned_objects:
  - API key
client:
  base_url: https://api.myparcel.nl
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    User-Agent: CustomApiCall/2
    Content-type: application/vnd.shipment+json;charset=utf-8;version=1.1
source_metadata: null
