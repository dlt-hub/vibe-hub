resources:
- name: GetNodeState
  endpoint:
    path: /node-state
    method: GET
    data_selector: info
    params: {}
- name: GetKnownPeers
  endpoint:
    path: /known-peers
    method: GET
    data_selector: known_peers
    params: {}
- name: GetPeersStat
  endpoint:
    path: /peers-stat
    method: GET
    data_selector: peers_stat
    params: {}
- name: GetStats
  endpoint:
    path: /stats
    method: GET
    data_selector: node_info
    params: {}
- name: GetAddressState
  endpoint:
    path: /address-state
    method: GET
    data_selector: state
    params: {}
- name: GetOptimizedAddressState
  endpoint:
    path: /optimized-address-state
    method: GET
    data_selector: state
    params: {}
- name: GetMultiSigAddressState
  endpoint:
    path: /multi-sig-address-state
    method: GET
    data_selector: state
    params: {}
- name: IsSlave
  endpoint:
    path: /is-slave
    method: GET
    data_selector: result
    params: {}
- name: GetObject
  endpoint:
    path: /object
    method: GET
    data_selector: result
    params: {}
- name: GetLatestData
  endpoint:
    path: /latest-data
    method: GET
    data_selector: transactions
    params: {}
- name: PushTransaction
  endpoint:
    path: /push-transaction
    method: POST
    data_selector: tx_hash
    params: {}
- name: TransferCoins
  endpoint:
    path: /transfer-coins
    method: POST
    data_selector: extended_transaction_unsigned
    params: {}
- name: ParseAddress
  endpoint:
    path: /parse-address
    method: GET
    data_selector: desc
    params: {}
- name: GetChainStats
  endpoint:
    path: /chain-stats
    method: GET
    data_selector: state_size
    params: {}
- name: GetAddressFromPK
  endpoint:
    path: /address-from-pk
    method: GET
    data_selector: address
    params: {}
- name: GetMultiSigCreateTxn
  endpoint:
    path: /multi-sig-create-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetMultiSigSpendTxn
  endpoint:
    path: /multi-sig-spend-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetMultiSigVoteTxn
  endpoint:
    path: /multi-sig-vote-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetMessageTxn
  endpoint:
    path: /message-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetTokenTxn
  endpoint:
    path: /token-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetTransferTokenTxn
  endpoint:
    path: /transfer-token-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetSlaveTxn
  endpoint:
    path: /slave-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetLatticeTxn
  endpoint:
    path: /lattice-txn
    method: POST
    data_selector: extended_transaction_unsigned
- name: GetTransaction
  endpoint:
    path: /transaction
    method: GET
    data_selector: tx
- name: GetMiniTransactionsByAddress
  endpoint:
    path: /mini-transaction-by-address
    method: GET
    data_selector: mini_transactions
- name: GetTransactionsByAddress
  endpoint:
    path: /transactions-by-address
    method: GET
    data_selector: transactions_detail
- name: GetTokensByAddress
  endpoint:
    path: /tokens-by-address
    method: GET
- name: GetSlavesByAddress
  endpoint:
    path: /slaves-by-address
    method: GET
- name: GetLatticePKsByAddress
  endpoint:
    path: /lattice-pks-by-address
    method: GET
- name: GetMultiSigAddressesByAddress
  endpoint:
    path: /multi-sig-addresses-by-address
    method: GET
- name: GetMultiSigSpendTxsByAddress
  endpoint:
    path: /multi-sig-spend-txs-by-address
    method: GET
- name: GetVoteStats
  endpoint:
    path: /vote-stats
    method: GET
- name: GetInboxMessagesByAddress
  endpoint:
    path: /inbox-messages-by-address
    method: GET
- name: GetBalance
  endpoint:
    path: /balance
    method: GET
- name: GetTotalBalance
  endpoint:
    path: /total-balance
    method: GET
- name: GetOTS
  endpoint:
    path: /ots
    method: GET
- name: GetHeight
  endpoint:
    path: /height
    method: GET
- name: GetBlock
  endpoint:
    path: /block
    method: GET
- name: GetBlockByNumber
  endpoint:
    path: /block-by-number
    method: GET
- name: StoredPeers
  endpoint:
    path: /storedpeers
    method: GET
    data_selector: peers
    params: {}
- name: AddressState
  endpoint:
    path: /addressstate
    method: GET
    data_selector: address
    params: {}
- name: OptimizedAddressState
  endpoint:
    path: /optimizedaddressstate
    method: GET
    data_selector: address
    params: {}
- name: MultiSigAddressState
  endpoint:
    path: /multisigaddressstate
    method: GET
    data_selector: address
    params: {}
- name: MultiSigAddressesList
  endpoint:
    path: /multisigaddresseslist
    method: GET
    data_selector: hashes
    params: {}
- name: DataList
  endpoint:
    path: /datalist
    method: GET
    data_selector: values
    params: {}
- name: Bitfield
  endpoint:
    path: /bitfield
    method: GET
    data_selector: bitfields
    params: {}
- name: TransactionHashList
  endpoint:
    path: /transactionhashlist
    method: GET
    data_selector: hashes
    params: {}
- name: TokenDetail
  endpoint:
    path: /tokendetail
    method: GET
    data_selector: token_txhash
    params: {}
- name: SlaveDetail
  endpoint:
    path: /slavedetail
    method: GET
    data_selector: slave_address
    params: {}
- name: LatticePKsDetail
  endpoint:
    path: /latticepksdetail
    method: GET
    data_selector: records
    params: {}
- name: MultiSigDetail
  endpoint:
    path: /multisigdetail
    method: GET
    data_selector: records
    params: {}
- name: VoteStats
  endpoint:
    path: /votestats
    method: GET
    data_selector: records
    params: {}
- name: ProposalVoteStats
  endpoint:
    path: /proposalvotestats
    method: GET
    data_selector: records
    params: {}
- name: ProposalRecord
  endpoint:
    path: /proposalrecord
    method: GET
    data_selector: records
    params: {}
- name: TokenList
  endpoint:
    path: /tokenlist
    method: GET
    data_selector: records
    params: {}
- name: TokenBalance
  endpoint:
    path: /tokenbalance
    method: GET
    data_selector: records
    params: {}
- name: OTSBitfieldByPage
  endpoint:
    path: /otsbitfieldbypage
    method: GET
    data_selector: records
    params: {}
- name: SlaveMetadata
  endpoint:
    path: /slavemetadata
    method: GET
    data_selector: records
    params: {}
- name: LatticePKMetadata
  endpoint:
    path: /latticepkmetadata
    method: GET
    data_selector: records
    params: {}
- name: TokenMetadata
  endpoint:
    path: /tokenmetadata
    method: GET
    data_selector: records
    params: {}
- name: EncryptedEphemeralMessage
  endpoint:
    path: /encryptedephemeralmessage
    method: GET
    data_selector: records
    params: {}
- name: AddressList
  endpoint:
    path: /addresslist
    method: GET
    data_selector: records
    params: {}
- name: BlockHeightData
  endpoint:
    path: /blockheightdata
    method: GET
    data_selector: records
    params: {}
- name: BlockMetaData
  endpoint:
    path: /blockmetadata
    method: GET
    data_selector: records
    params: {}
- name: BlockNumberMapping
  endpoint:
    path: /blocknumbermapping
    method: GET
    data_selector: records
    params: {}
- name: PeerStat
  endpoint:
    path: /peerstat
    method: GET
    data_selector: records
    params: {}
- name: NodeChainState
  endpoint:
    path: /nodechainstate
    method: GET
    data_selector: records
    params: {}
- name: NodeHeaderHash
  endpoint:
    path: /nodeheaderhash
    method: GET
    data_selector: records
    params: {}
- name: P2PAcknowledgement
  endpoint:
    path: /p2packnowledgement
    method: GET
    data_selector: records
    params: {}
- name: PeerInfo
  endpoint:
    path: /peerinfo
    method: GET
    data_selector: records
    params: {}
- name: Peers
  endpoint:
    path: /peers
    method: GET
    data_selector: records
    params: {}
- name: BlockDataPoint
  endpoint:
    path: /blockdatapoint
    method: GET
    data_selector: records
    params: {}
- name: Chain
  endpoint:
    path: /dev/chain
    method: GET
    data_selector: chain
    params: {}
- name: Block
  endpoint:
    path: /dev/block
    method: GET
    data_selector: block
    params: {}
- name: Transaction
  endpoint:
    path: /dev/transaction
    method: GET
    data_selector: transaction
    params: {}
- name: POW
  endpoint:
    path: /dev/pow
    method: GET
    data_selector: pow
    params: {}
- name: AddNewAddress
  endpoint:
    path: /qrl.WalletAPI.AddNewAddress
    method: POST
    data_selector: address
    params: {}
- name: AddNewAddressWithSlaves
  endpoint:
    path: /AddNewAddressWithSlaves
    method: POST
    data_selector: address
    params:
      height: 10
      number_of_slaves: 3
      hash_function: shake128
- name: ListAddresses
  endpoint:
    path: /ListAddresses
    method: GET
    data_selector: addresses
    params: {}
- name: RemoveAddress
  endpoint:
    path: /RemoveAddress
    method: DELETE
    data_selector: code
    params: {}
- name: IsValidAddress
  endpoint:
    path: /IsValidAddress
    method: POST
    data_selector: valid
    params: {}
- name: GetRecoverySeeds
  endpoint:
    path: /GetRecoverySeeds
    method: POST
    data_selector: hexseed
    params:
      address: QRL Address
- name: GetWalletInfo
  endpoint:
    path: /GetWalletInfo
    method: POST
    data_selector: version
    params: {}
- name: RelayTransferTxn
  endpoint:
    path: /RelayTransferTxn
    method: POST
    data_selector: tx
    params: {}
- name: RelayTransferTxnBySlave
  endpoint:
    path: /RelayTransferTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelayMessageTxn
  endpoint:
    path: /RelayMessageTxn
    method: rpc
    data_selector: RelayTxnResp
- name: RelayMessageTxnBySlave
  endpoint:
    path: /RelayMessageTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelayTokenTxn
  endpoint:
    path: /qrl.WalletAPI.RelayTokenTxn
    method: POST
    data_selector: tx
    params: {}
- name: RelayTokenTxnBySlave
  endpoint:
    path: /RelayTokenTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelayTransferTokenTxn
  endpoint:
    path: /RelayTransferTokenTxn
    method: POST
    data_selector: tx
    params: {}
- name: RelayTransferTokenTxnBySlave
  endpoint:
    path: /api/wallet-api/RelayTransferTokenTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelaySlaveTxn
  endpoint:
    path: /RelaySlaveTxn
    method: rpc
    data_selector: RelayTxnResp
    params: {}
- name: RelaySlaveTxnBySlave
  endpoint:
    path: /RelaySlaveTxnBySlave
    method: rpc
    data_selector: RelayTxnResp
    params: {}
- name: EncryptWallet
  endpoint:
    path: /EncryptWallet
    method: rpc
    data_selector: EncryptWalletResp
    params: {}
- name: LockWallet
  endpoint:
    path: /LockWallet
    method: rpc
    data_selector: LockWalletResp
    params: {}
- name: UnlockWallet
  endpoint:
    path: /UnlockWallet
    method: rpc
    data_selector: UnlockWalletResp
    params: {}
- name: ChangePassphrase
  endpoint:
    path: /ChangePassphrase
    method: rpc
    data_selector: ChangePassphraseResp
    params: {}
- name: GetTransactionsByAddress
  endpoint:
    path: /GetTransactionsByAddress
    method: rpc
    data_selector: TransactionsByAddressResp
    params: {}
- name: GetTransaction
  endpoint:
    path: /GetTransaction
    method: POST
    data_selector: tx
    params:
      tx_hash: string
- name: GetBalance
  endpoint:
    path: /GetBalance
    method: POST
    data_selector: balance
    params:
      address: string
- name: GetTotalBalance
  endpoint:
    path: /GetTotalBalance
    method: POST
    data_selector: balance
    params: {}
- name: GetOTS
  endpoint:
    path: /GetOTS
    method: POST
    data_selector: unused_ots_index_found
    params: {}
- name: GetHeight
  endpoint:
    path: /GetHeight
    method: POST
    data_selector: height
    params: {}
- name: GetBlock
  endpoint:
    path: /GetBlock
    method: POST
    data_selector: block
    params:
      header_hash: header_hash
- name: GetBlockByNumber
  endpoint:
    path: /GetBlockByNumber
    method: RPC
    data_selector: block
    params:
      block_number: block_number
- name: GetAddressFromPK
  endpoint:
    path: /GetAddressFromPK
    method: POST
    data_selector: address
    params:
      pk: string
- name: GetNodeInfo
  endpoint:
    path: /GetNodeInfo
    method: POST
    data_selector: version
    params: {}
- name: block
  endpoint:
    path: /api/block/#
    method: GET
    data_selector: json
    params: {}
- name: transaction
  endpoint:
    path: /api/tx/
    method: GET
    data_selector: json
    params: {}
- name: address
  endpoint:
    path: /api/a/
    method: GET
    data_selector: json
    params: {}
- name: emission
  endpoint:
    path: /api/emission
    method: GET
    data_selector: json
    params: {}
- name: reward
  endpoint:
    path: /api/reward
    method: GET
    data_selector: json
    params: {}
- name: rewardshor
  endpoint:
    path: /api/rewardshor
    method: GET
    data_selector: json
    params: {}
- name: blockheight
  endpoint:
    path: /api/blockheight
    method: GET
    data_selector: json
    params: {}
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: json
    params: {}
- name: miningstats
  endpoint:
    path: /api/miningstats
    method: GET
    data_selector: json
    params: {}
- name: AddNewAddress
  endpoint:
    path: /api/AddNewAddress
    method: POST
    data_selector: address
- name: AddNewAddressWithSlaves
  endpoint:
    path: /api/AddNewAddressWithSlaves
    method: POST
    data_selector: address
- name: IsValidAddress
  endpoint:
    path: /api/IsValidAddress
    method: POST
    data_selector: valid
- name: list_addresses
  endpoint:
    path: /ListAddresses
    method: GET
    data_selector: addresses
- name: remove_address
  endpoint:
    path: /RemoveAddress
    method: POST
    data_selector: code
- name: encrypt_wallet
  endpoint:
    path: /EncryptWallet
    method: POST
    data_selector: code
- name: lock_wallet
  endpoint:
    path: /LockWallet
    method: GET
    data_selector: code
- name: unlock_wallet
  endpoint:
    path: /UnlockWallet
    method: POST
    data_selector: code
- name: get_recovery_seeds
  endpoint:
    path: /GetRecoverySeeds
    method: POST
    data_selector: hexseed
- name: get_wallet_info
  endpoint:
    path: /GetWalletInfo
    method: GET
    data_selector: version
- name: RelayTransferTxn
  endpoint:
    path: /RelayTransferTxn
    method: POST
    data_selector: tx
    params: {}
- name: RelayTransferTxnBySlave
  endpoint:
    path: /RelayTransferTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelayMessageTxn
  endpoint:
    path: /RelayMessageTxn
    method: POST
    data_selector: tx
    params: {}
- name: RelayMessageTxnBySlave
  endpoint:
    path: /RelayMessageTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelayTokenTxn
  endpoint:
    path: /RelayTokenTxn
    method: POST
    data_selector: ''
    params: {}
- name: RelayTokenTxnBySlave
  endpoint:
    path: /RelayTokenTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelayTransferTokenTxn
  endpoint:
    path: /RelayTransferTokenTxn
    method: POST
    data_selector: tx
    params: {}
- name: RelayTransferTokenTxnBySlave
  endpoint:
    path: /RelayTransferTokenTxnBySlave
    method: POST
    data_selector: tx
    params: {}
- name: RelaySlaveTxn
  endpoint:
    path: /RelaySlaveTxn
    method: POST
    data_selector: tx
    params: {}
- name: GetTransactionsByAddress
  endpoint:
    path: /GetTransactionsByAddress
    method: POST
    data_selector: mini_transactions
    params:
      address: QRL address
- name: GetTransaction
  endpoint:
    path: /GetTransaction
    method: POST
    data_selector: tx
    params:
      tx_hash: Transaction hash
- name: GetBalance
  endpoint:
    path: /GetBalance
    method: POST
    data_selector: balance
    params:
      address: address
- name: GetTotalBalance
  endpoint:
    path: /GetTotalBalance
    method: GET
    data_selector: balance
    params: {}
- name: GetOTS
  endpoint:
    path: /GetOTS
    method: POST
    data_selector: next_unused_ots_index
    params:
      address: address
- name: GetHeight
  endpoint:
    path: /GetHeight
    method: GET
    data_selector: height
    params: {}
- name: GetBlock
  endpoint:
    path: /GetBlock
    method: POST
    data_selector: block
    params: {}
- name: GetBlockByNumber
  endpoint:
    path: /GetBlockByNumber
    method: POST
    data_selector: block
    params:
      block_number: N/A
- name: GetAddressFromPK
  endpoint:
    path: /GetAddressFromPK
    method: POST
    data_selector: address
    params:
      pk: N/A
- name: GetNodeInfo
  endpoint:
    path: /GetNodeInfo
    method: GET
    data_selector: version, num_connections, num_known_peers, uptime, block_height,
      block_last_hash, network_id
    params: {}
- name: GetNodeState
  endpoint:
    path: /grpc/mainnet/GetNodeState
    method: GET
- name: config
  endpoint:
    path: /~/.qrl/config.yml
    method: GET
    data_selector: mining_enabled, enable_peer_discovery, mining_api_enabled, public_api_enabled
    params: {}
- name: QRL Improvement Proposals
  endpoint:
    path: /api/qrl-improvement-proposals
    method: GET
    data_selector: proposals
    params: {}
- name: balance
  endpoint:
    path: /balance
    method: GET
    data_selector: balance_info
    params: {}
- name: create-wallet
  endpoint:
    path: /create-wallet
    method: POST
    data_selector: wallet_info
    params: {}
- name: generate-lattice-keys
  endpoint:
    path: /generate-lattice-keys
    method: POST
    data_selector: lattice_keys_info
    params: {}
- name: generate-shared-keys
  endpoint:
    path: /generate-shared-keys
    method: POST
    data_selector: shared_keys_info
    params: {}
- name: get-keys
  endpoint:
    path: /get-keys
    method: GET
    data_selector: keys_info
    params: {}
- name: notarize
  endpoint:
    path: /notarize
    method: POST
    data_selector: notarization_info
    params: {}
- name: ots
  endpoint:
    path: /ots
    method: GET
    data_selector: ots_info
    params: {}
- name: receive
  endpoint:
    path: /receive/{ADDRESS}
    method: GET
    data_selector: ''
    params: {}
- name: search
  endpoint:
    path: /search/{SEARCH}
    method: GET
    data_selector: ''
    params: {}
- name: send
  endpoint:
    path: /send/{QUANTITY}
    method: POST
    data_selector: ''
    params: {}
- name: send-message
  endpoint:
    path: /send-message
    method: POST
    data_selector: ''
    params: {}
- name: sign-tx-offline
  endpoint:
    path: /sign-tx-offline/{QUANTITY}/{OUTPUT}
    method: POST
    data_selector: ''
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: ''
    params: {}
- name: validate
  endpoint:
    path: /validate/{ADDRESS}
    method: GET
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /~/.qrl/config.yml
    method: GET
    data_selector: content
    params: {}
- name: running_qrl_node
  endpoint:
    path: /start_qrl
    method: POST
    data_selector: node
    params:
      miningAddress: Q010800dd14a340e6daf28d4dab9e42a534177db5bf06ef1bb300452f606a17331bacca9453aac1
      mockGetMeasurement: 1000000000
- name: ots_keys
  endpoint:
    path: /api/ots_keys
    method: GET
    data_selector: keys
    params: {}
- name: RelaySlaveTxn
  endpoint:
    path: /api/wallet-api#relayslavetxn
    method: POST
    data_selector: transactions
    params: {}
- name: richlist
  endpoint:
    path: /richlist
    method: GET
    data_selector: richlist
- name: validate_qrl_address
  endpoint:
    path: /api/validate
    method: POST
notes:
- While there is no authentication required to interact with most of the QRL's API's,
  you will need access to an API service IP and Port of a node running on the QRL
  network.
- Message length cannot be more than 80
- This error will not show up in the CLI, and will only display any issue in the node
  logs.
- Tokens can be created on the QRL blockchain using this method will use the slave
  addresses associated to the local wallet address.
- These tokens can be initially owned by up to 100 addresses and have a variety of
  values that may be defined.
- Requires token transaction hash
- Master address is only needed if sending from a slave address
- Wrong Token Transaction Hash if the transaction hash is not correct and does not
  point to a token on the blockchain
- Address Not Found or Incorrect if the address is not found in the local wallet.json
  file or the address is not valid
- Get QRL block data by block number from the QRL Blockchain.
- The wallet daemon will by default create the wallet file at ~/.qrl/walletd.json.
- Both addresses_to and amounts must be given as an array, even for single address
  transactions.
- Balance is returned in shor.
- 111 QRL =1000000000 shor.
- This library is distributed under the GPL3 software license
- 'Create a ~/.qrl/config.yml file and add these minimum configuration settings: mining_enabled:
  False, enable_peer_discovery: True, mining_api_enabled: True, public_api_enabled:
  True'
- Ensure ports 18090, 19007, 19009 are open and available for the pool.
- 'Advanced: you can use a custom defined node to broadcast the notarization.'
- Defaults to mainnet; network selection flags are (-m) mainnet, (-t) testnet.
- 'Advanced: you can use a custom defined node to query for status. Use the (-g) grpc
  endpoint.'
- If you previously ran QRL mainnet on the same node then you need to delete ~/.qrl/data/
- Each address contains multiple OTS key indexes generated from a random seed.
- An OTS key index can be used exactly one time.
- QRL Address tree height is chosen during initial address creation and cannot be
  changed.
- The QRL uses a mining algorithm that is specialized to be run on standard computers,
  prioritizing the CPU over GPU or specialized hardware like FPGA's and ASICS.
- API returns each address balance in shorshorshor or to the ninth decimal place.
- Richlist provides the top 100 richest QRL addresses.
- Provides a utility function to nodejs based applications.
- Part of a suite of development tools to simplify working within the QRL ecosystem.
errors:
- '1: For BDS traversal, H - K must be even, with H > K >= 2!'
- '1: XMSS does not support this hash function!'
- '1: Number of slaves cannot be more than 100'
- '1: No such address found'
- '1: Invalid QRL Address'
- No such address found in wallet
- 'Failed: Passphrase Missing'
- Custom validation failed
- hex string is expected to have an even number of characters
- Signer Address Not Found
- OTS Keys CANNOT be reused
- 'json: cannot unmarshal number into Go value of type []json.RawMessage'
- 'OTS_KEY_REUSE: cannot rewind'
- 'MESSAGE_LENGTH_EXCEEDS: Found message length'
- 'ADDRESS_NOT_FOUND: Signer Address Not Found'
- 'FEE_EXCEEDS: balance: 0, amount:'
- '1: Signer Address Not Found'
- Fee Exceeds Available Funds
- '1: (''Signer Address Not Found '', ''Q00030095e434327d8f22b05b23e4e50131e6265707bec7adf99035d3583da5f93c2c86744e1b26'')'
- Insufficient funds
- Address not found or Invalid
- Missing Token Symbol
- Missing Token Name
- Invalid Token Transaction, without any initial balance
- Token decimals cannot be more than 19
- Invalid Initial Amount in Token Transaction
- Decimal is greater than maximum allowed decimal
- TokenTransaction [%s] Invalid Fee = %d
- Token Symbol Length exceeds maximum limit
- Token Name Length exceeds maximum limit
- 'Invalid address addr_from: %s'
- 'Invalid address owner_addr: %s'
- 'Invalid address in initial_balances: %s'
- '1: cannot rewind'
- 'code: 1, error: (''Signer Address Not Found '', ''Address'')'
- 'INFO : [TransferTokenTransaction] State validation failed because: Insufficient
  funds'
- Number of slaves exceeds Allowable Quantity
- Wallet Already Encrypted
- Missing Passphrase
- Empty Address Array Found
- Invalid QRL Address
- '1: hex string is expected to have an even number of characters'
- '1: Invalid Address'
- '1: '''' has type str, but expected one of: bytes'
- 'Invalid Hex String: hex string is expected to have an even number of characters'
- 'No Block Found: Block not found for the given header hash'
- 'Error Code: 1 - Error Message: Only appears if any exception is triggered.'
- '1: InactiveRpcError of RPC that terminated'
- 'UNKNOWN: failed to connect to all addresses; last error: UNKNOWN: ipv4:127.0.0.1:19009:
  Failed to connect to remote host: Connection refused'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '1: list index out of range'
- '3: json: cannot unmarshal string into Go value of type []json.RawMessage'
- '1: Custom validation failed'
- '1: (''Signer Address Not Found '', ''Q010300133082645e43fa1cc0aa1e00f269c2aa8ec76cce87175b7e4099723913d50f7d87e9187'')'
- 'OTS Key-Reuse Detected: cannot rewind'
- 'Signer address invalid or not found in wallet: (''Signer Address Not Found '',
  ''Q0103001330b82645e43fa1cc0aa1e00f269c2aa8ec76cce87175b7e4099723913d50f7d87e917'')'
- 'Missing message data: Custom validation failed'
- code:1, error:('Signer Address Not Found ', 'Q010500e26037717191572726f1cab7c98f98db2e80b4465edc8700e1dfd6000cad0713356be6b')
- Number of Addresses & Amounts Mismatch
- cannot rewind
- 'code: UInt32'
- 'error: String'
- 'SIGNER_ADDRESS_NOT_FOUND: Invalid or missing signing address'
- 'NUMBER_OF_ADDRESSES_AND_AMOUNTS_MISMATCH: Address and amounts array do not contain
  the same count of values'
- 'OTS_KEY_REUSE_DETECTED: OTS Key-Reuse Detected'
- 'code: UInt32, error: String'
- '1: Invalid Old Passphrase'
- '1: Missing Old Passphrase'
- '1: Missing New Passphrase'
- '1: Old Passphrase and New Passphrase cannot be same'
- 'code:1,error:'''' has type str, but expected one of: bytes'
- code:1,error:hex string is expected to have an even number of characters
- 'INVALID_ARGUMENT: Invalid Address'
- 'Method Not Allowed: POST not allowed for this command'
- 'block: {}'
- 'code: 1, error: Invalid extended_pk size. It should be 67 bytes'
- 'code: 1, error: invalid hex digits in the string'
- 'Duplicate OTS key index: The QRL network nodes will reject any transaction that
  uses a duplicate OTS key index.'
auth_info:
  mentioned_objects: []
client:
  base_url: http://127.0.0.1:5359/api
  headers:
    Accept: application/json
source_metadata: null
