resources:
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: results
- name: workspace_versions
  endpoint:
    path: /workspaces/{workspaceId}/versions
    method: GET
    data_selector: results
    params:
      limit: 20
      page: 1
- name: User
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: Technology
  endpoint:
    path: /scim/Technologies/{technologyCode}
    method: DELETE
    data_selector: schemas
    params: {}
- name: objects
  endpoint:
    path: /objects
    method: GET
    data_selector: records
    params:
      versionId: required
      type: required
- name: object_details
  endpoint:
    path: /objects/{objectId}
    method: GET
    data_selector: records
    params:
      versionId: required
      objectId: required
- name: campaigns
  endpoint:
    path: /v2/campaigns
    method: GET
    data_selector: campaigns
- name: users
  endpoint:
    path: /v2/scim/Users/{userId}
    method: PUT
    data_selector: users
- name: Create Rule
  endpoint:
    path: /v2/rules
    method: POST
    data_selector: rules
    params: {}
- name: Get Rule
  endpoint:
    path: /v2/rules/{ruleId}
    method: GET
    data_selector: rule
    params: {}
- name: Update Rule
  endpoint:
    path: /v2/rules/{ruleId}
    method: PUT
    data_selector: rule
    params: {}
- name: Delete Rule
  endpoint:
    path: /v2/rules/{ruleId}
    method: DELETE
    data_selector: rule
    params: {}
- name: Create Rule Checks
  endpoint:
    path: /v2/rules/{ruleId}/checks
    method: POST
    data_selector: checks
    params: {}
- name: Get Rule Checks
  endpoint:
    path: /v2/rules/{ruleId}/checks
    method: GET
    data_selector: checks
    params: {}
- name: Delete Rule Check
  endpoint:
    path: /v2/rules/{ruleId}/checks/{checkId}
    method: DELETE
    data_selector: check
    params: {}
- name: User
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: id
- name: attribute_screen_layouts
  endpoint:
    path: /attributes/screens
    method: GET
    data_selector: layouts
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: property
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: id
    params: {}
- name: User
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: sources
  endpoint:
    path: /workspaces/{workspaceId}/versions
    method: GET
    data_selector: sources
    params: {}
- name: Users
  endpoint:
    path: /v2/scim/Users/{userId}
    method: PUT
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: results
- name: versions
  endpoint:
    path: /workspaces/{workspaceId}/versions
    method: GET
    data_selector: results
    params:
      limit: 20
      page: 1
- name: User
  endpoint:
    path: /v2/scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: Technology
  endpoint:
    path: /v2/technologies/{technologyCode}
    method: DELETE
    data_selector: resourceType
    params: {}
- name: bulk_create_containers
  endpoint:
    path: /v2/containers
    method: POST
    data_selector: containers
    params: {}
- name: bulk_edit_containers
  endpoint:
    path: /v2/containers
    method: PUT
    data_selector: containers
    params: {}
- name: bulk_delete_containers
  endpoint:
    path: /v2/containers
    method: DELETE
    data_selector: containerIds
    params: {}
- name: list_container_types
  endpoint:
    path: /v2/types
    method: GET
    data_selector: types
    params: {}
- name: return_a_list_of_structures
  endpoint:
    path: /v2/structures
    method: GET
    data_selector: structures
    params: {}
- name: return_a_structure
  endpoint:
    path: /v2/structures/{structureId}
    method: GET
    data_selector: structure
    params: {}
- name: delete_a_structure
  endpoint:
    path: /v2/structures/{structureId}
    method: DELETE
    data_selector: structure
    params: {}
- name: objects
  endpoint:
    path: /workspaces/{workspaceId}/objects
    method: GET
    params:
      versionId: required
      type: required
- name: object_details
  endpoint:
    path: /workspaces/{workspaceId}/objects/{objectId}
    method: GET
    params:
      versionId: required
      objectId: required
- name: edit_object
  endpoint:
    path: /workspaces/{workspaceId}/objects/{objectId}
    method: PUT
    params:
      versionId: required
      objectId: required
- name: delete_object
  endpoint:
    path: /workspaces/{workspaceId}/objects/{objectId}
    method: DELETE
    params:
      versionId: required
      objectId: required
- name: create_object
  endpoint:
    path: /workspaces/{workspaceId}/objects
    method: POST
    params:
      versionId: required
      parentId: required
- name: subscribe_notifications
  endpoint:
    path: /workspaces/{workspaceId}/objects/{objectId}/subscribe
    method: POST
    params:
      versionId: required
      objectId: required
- name: User
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: unsubscribe_notifications
  endpoint:
    path: /unsubscribe
    method: POST
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: data_quality_rules
  endpoint:
    path: /data_quality_rules
    method: GET
    data_selector: rules
    params: {}
- name: users
  endpoint:
    path: /v2/scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: data_processing
  endpoint:
    path: /v2/scim/DataProcessing
    method: GET
    data_selector: schemas
    params: {}
- name: Create Rule
  endpoint:
    path: /v2/rules
    method: POST
    data_selector: rules
- name: Get Rule
  endpoint:
    path: /v2/rules/{ruleId}
    method: GET
    data_selector: rule
- name: Update Rule
  endpoint:
    path: /v2/rules/{ruleId}
    method: PUT
    data_selector: updated_rule
- name: Delete Rule
  endpoint:
    path: /v2/rules/{ruleId}
    method: DELETE
    data_selector: delete_response
- name: Get Rule Checks
  endpoint:
    path: /v2/rules/{ruleId}/checks
    method: GET
    data_selector: checks
- name: Create Rule Checks
  endpoint:
    path: /v2/rules/{ruleId}/checks
    method: POST
    data_selector: created_check
- name: Delete Rule Check
  endpoint:
    path: /v2/rules/{ruleId}/checks/{checkId}
    method: DELETE
    data_selector: delete_check_response
- name: usage
  endpoint:
    path: /usages
    method: GET
    data_selector: records
- name: usage_types
  endpoint:
    path: /types
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: users
  endpoint:
    path: /v2/scim/Users
    method: GET
    data_selector: schemas
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: records
- name: users
  endpoint:
    path: /scim/Users
    method: GET
    data_selector: users
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: CreateAttributeValues
  endpoint:
    path: /CreateAttributeValues
    method: POST
    data_selector: records
- name: UpdateAttribute
  endpoint:
    path: /UpdateAttribute
    method: PUT
    data_selector: records
- name: Bulk create attributes
  endpoint:
    path: /BulkCreateAttributes
    method: POST
    data_selector: records
- name: Bulk edit attributes
  endpoint:
    path: /BulkEditAttributes
    method: PUT
    data_selector: records
- name: Delete a custom attribute
  endpoint:
    path: /DeleteAttribute
    method: DELETE
    data_selector: records
- name: Return a list of attribute screen layouts
  endpoint:
    path: /attributeScreenLayouts
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /v2/scim/Users
    method: GET
    data_selector: users
- name: licenses
  endpoint:
    path: /v2/licenses
    method: GET
    data_selector: licenses
- name: teams
  endpoint:
    path: /v2/teams
    method: GET
    data_selector: teams
- name: attribute_screen_layouts
  endpoint:
    path: /v2/attributes/screens
    method: GET
    data_selector: attributes
    params:
      dataType: property
      versionId: string
- name: properties
  endpoint:
    path: /v2/properties
    method: GET
    data_selector: properties
    params:
      versionId: string
- name: user
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: property
  endpoint:
    path: /properties/{propertyId}
    method: GET
    data_selector: details
    params:
      versionId: string
      propertyId: string
- name: property_edit
  endpoint:
    path: /properties/{propertyId}
    method: PUT
    data_selector: details
    params:
      versionId: string
      propertyId: string
- name: property_delete
  endpoint:
    path: /properties/{propertyId}
    method: DELETE
    data_selector: details
    params:
      versionId: string
      propertyId: string
- name: property_types
  endpoint:
    path: /types
    method: GET
    data_selector: types
- name: local_synonyms
  endpoint:
    path: /properties/{propertyId}/synonyms
    method: GET
    data_selector: synonyms
    params:
      versionId: string
      propertyId: string
- name: bulk_upsert
  endpoint:
    path: /properties/bulk
    method: POST
    data_selector: results
- name: Users
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: bulk_create_containers
  endpoint:
    path: /bulk/create/containers
    method: POST
    data_selector: Array
- name: bulk_edit_containers
  endpoint:
    path: /bulk/edit/containers
    method: PUT
    data_selector: Array
- name: bulk_delete_containers
  endpoint:
    path: /bulk/delete/containers
    method: DELETE
    data_selector: Array
- name: list_container_types
  endpoint:
    path: /types
    method: GET
    data_selector: Array
- name: return_a_list_of_structures
  endpoint:
    path: /structures
    method: GET
    data_selector: Array
- name: return_a_structure
  endpoint:
    path: /structures/{structureId}
    method: GET
    data_selector: Object
- name: delete_a_structure
  endpoint:
    path: /structures/{structureId}
    method: DELETE
    data_selector: Object
- name: User
  endpoint:
    path: /v2/scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: users
  endpoint:
    path: /v2/scim/Users/{userId}
    method: PUT
    data_selector: schemas
    params: {}
- name: usages
  endpoint:
    path: /v2/usages
    method: GET
    data_selector: schemas
    params:
      versionId: string
- name: usage
  endpoint:
    path: /v2/usage
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /v2/scim/Users
    method: GET
    data_selector: schemas
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: users
  endpoint:
    path: /scim/Users
    method: GET
    data_selector: users
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: users
  endpoint:
    path: /v2/scim/Users
    method: GET
    data_selector: users
    params: {}
- name: user
  endpoint:
    path: /v2/scim/Users/{userId}
    method: GET
    data_selector: user
    params: {}
- name: create_user
  endpoint:
    path: /v2/scim/Users
    method: POST
    data_selector: user
    params: {}
- name: patch_user
  endpoint:
    path: /v2/scim/Users/{userId}
    method: PATCH
    data_selector: user
    params: {}
- name: user
  endpoint:
    path: /scim/Users/{userId}
    method: PUT
    data_selector: ''
    params: {}
notes:
- The access token expires after 2 hours and can be regenerated.
- The maximum supported size of uploaded images is 1MB.
- Requires Personal Access Token for authorization.
- Attribute screen layouts returned are JSON-stringified versions of the Screen section
  on DataGalaxy Platform.
- 'Authorization header must contain a bearer token formatted as follows: Bearer <token>.'
- This endpoint will not create or update any rules if the provided request body contains
  invalid data.
- Once a rule is created, the associated entity and code cannot be modified via this
  endpoint.
- When updating a rule, any optional fields not provided with a value will be reset
  to null.
- Max 250,000 containers can be created or edited in a single request.
- Deleting a usage will delete its children objects in the process.
errors:
- '400: Bad request.'
- '401: Unauthorized.'
- '429: Too Many Requests.'
- '400 Bad request. Most common reasons: The data you provided is invalid.'
- '401 Unauthorized. Most common reasons: Your integrationToken is not an admin token.
  Your accessToken is missing/expired/invalid.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad request. Most common reasons: The data you provided is invalid.'
- '401: Unauthorized. Most common reasons: Your integrationToken is not an admin token.
  Your accessToken is missing/expired/invalid.'
- '400 Bad request. Most common reasons: - The data you provided is invalid.'
- '401 Unauthorized. Most common reasons: - Your integrationToken is not an admin
  token. - Your accessToken is missing/expired/invalid.'
- '400 Bad request: The data you provided is invalid.'
- '401 Unauthorized: Your integrationToken is not an admin token or your accessToken
  is missing/expired/invalid.'
- '401 Unauthorized: Your integrationToken is not an admin token. Your accessToken
  is missing/expired/invalid.'
- '400 Bad request: Most common reasons include invalid data.'
- '401 Unauthorized: Integration token not an admin token or accessToken missing/expired/invalid.'
- '400: Bad Request - The data you provided is invalid.'
- '401: Unauthorized - Your accessToken is missing/expired/invalid.'
- '429: Too Many Requests - Rate limiting exceeded.'
- '401 Unauthorized: Your integrationToken is not an admin token.'
- '400 Bad request: Most common reasons: - The data you provided is invalid.'
- '401 Unauthorized: Most common reasons: - Your integrationToken is not an admin
  token. - Your accessToken is missing/expired/invalid.'
- '400: Bad request. Most common reasons: - The data you provided is invalid.'
- '401: Unauthorized. Most common reasons: - Your integrationToken is not an admin
  token. - Your accessToken is missing/expired/invalid.'
- '404: API route not found'
- '201: Created'
auth_info:
  mentioned_objects:
  - Personal Access Token
  - Integration token
client:
  base_url: https://api.datagalaxy.com/v2
  auth:
    type: Personal Access Token
source_metadata: null
