resources:
- name: oauth_authorize
  endpoint:
    path: /-/oauth_authorize
    method: GET
    params:
      state: '{{ dlt.secrets[''oauth_state''] }}'
- name: rule_actions
  endpoint:
    path: /rule_actions
    method: POST
- name: modal_form
  endpoint:
    method: POST
    data_selector: form_response
- name: widget
  endpoint:
    path: Widget metadata URL
    method: GET
- name: widget_match
  endpoint:
    path: Match URL pattern
- name: widget
  endpoint:
    path: Widget metadata URL
    method: GET
    params:
      task: ''
      user: ''
      workspace: ''
- name: audit_log_events
  endpoint:
    path: /audit-log-events
    method: GET
- name: ai_studio_addon_type_changed
  endpoint:
    path: /events/ai_studio_addon_type_changed
    method: GET
- name: ai_studio_member_added
  endpoint:
    path: /events/ai_studio_member_added
    method: GET
- name: ai_studio_member_removed
  endpoint:
    path: /events/ai_studio_member_removed
    method: GET
- name: sandbox_created
  endpoint:
    path: /events/sandbox_created
    method: GET
- name: sandbox_deleted
  endpoint:
    path: /events/sandbox_deleted
    method: GET
- name: team_create_content_access_level_changed
  endpoint:
    path: /events/team_create_content_access_level_changed
    method: GET
- name: team_domain_guest_invite_management_access_level_changed
  endpoint:
    path: /events/team_domain_guest_invite_management_access_level_changed
    method: GET
- name: team_domain_member_invite_management_access_level_changed
  endpoint:
    path: /events/team_domain_member_invite_management_access_level_changed
    method: GET
- name: team_edit_team_description_access_level_changed
  endpoint:
    path: /events/team_edit_team_description_access_level_changed
    method: GET
- name: team_edit_team_name_access_level_changed
  endpoint:
    path: /events/team_edit_team_name_access_level_changed
    method: GET
- name: team_edit_team_trash_access_level_changed
  endpoint:
    path: /events/team_edit_team_trash_access_level_changed
    method: GET
- name: team_edit_team_type_access_level_changed
  endpoint:
    path: /events/team_edit_team_type_access_level_changed
    method: GET
- name: team_endorsed
  endpoint:
    path: /events/team_endorsed
    method: GET
- name: team_join_team_request_management_access_level_changed
  endpoint:
    path: /events/team_join_team_request_management_access_level_changed
    method: GET
- name: team_member_removal_access_level_changed
  endpoint:
    path: /events/team_member_removal_access_level_changed
    method: GET
- name: team_share_content_access_level_changed
  endpoint:
    path: /events/team_share_content_access_level_changed
    method: GET
- name: team_unendorsed
  endpoint:
    path: /events/team_unendorsed
    method: GET
- name: user_exempted_from_guest_deprovision_rule
  endpoint:
    path: /events/user_exempted_from_guest_deprovision_rule
    method: GET
- name: user_unexempted_from_guest_deprovision_rule
  endpoint:
    path: /events/user_unexempted_from_guest_deprovision_rule
    method: GET
- name: work_access_mode_disabled
  endpoint:
    path: /events/work_access_mode_disabled
    method: GET
- name: work_access_mode_enabled
  endpoint:
    path: /events/work_access_mode_enabled
    method: GET
- name: workspace_allowed_pat_usage_member_added
  endpoint:
    path: /events/workspace_allowed_pat_usage_member_added
    method: GET
- name: workspace_allowed_pat_usage_member_removed
  endpoint:
    path: /events/workspace_allowed_pat_usage_member_removed
    method: GET
- name: workspace_announcement_created
  endpoint:
    path: /events/workspace_announcement_created
    method: GET
- name: workspace_announcement_removed
  endpoint:
    path: /events/workspace_announcement_removed
    method: GET
- name: workspace_app_admin_approval_setting_changed
  endpoint:
    path: /events/workspace_app_admin_approval_setting_changed
    method: GET
- name: workspace_app_recipient_emails_changed
  endpoint:
    path: /events/workspace_app_recipient_emails_changed
    method: GET
- name: workspace_email_domain_added
  endpoint:
    path: /events/workspace_email_domain_added
    method: GET
- name: workspace_email_domain_removed
  endpoint:
    path: /events/workspace_email_domain_removed
    method: GET
- name: workspace_baa_signed
  endpoint:
    path: /events/workspace_baa_signed
    method: GET
- name: workspace_bypass_default_nux_disabled
  endpoint:
    path: /events/workspace_bypass_default_nux_disabled
    method: GET
- name: workspace_bypass_default_nux_enabled
  endpoint:
    path: /events/workspace_bypass_default_nux_enabled
    method: GET
- name: workspace_custom_branding_changed
  endpoint:
    path: /events/workspace_custom_branding_changed
    method: GET
- name: workspace_create_deprovisioning_project_disabled
  endpoint:
    path: /events/workspace_create_deprovisioning_project_disabled
    method: GET
- name: workspace_create_deprovisioning_project_enabled
  endpoint:
    path: /events/workspace_create_deprovisioning_project_enabled
    method: GET
- name: workspace_default_session_duration_changed
  endpoint:
    path: /events/workspace_default_session_duration_changed
    method: GET
- name: workspace_default_team_privacy_settings_changed
  endpoint:
    path: /events/workspace_default_team_privacy_settings_changed
    method: GET
- name: workspace_department_field_editability_changed
  endpoint:
    path: /events/workspace_department_field_editability_changed
    method: GET
- name: workspace_deprovision_inactive_guest_policy_changed
  endpoint:
    path: /events/workspace_deprovision_inactive_guest_policy_changed
    method: GET
- name: workspace_deprovisioning_project_include_completed_tasks_disabled
  endpoint:
    path: /events/workspace_deprovisioning_project_include_completed_tasks_disabled
    method: GET
- name: workspace_deprovisioning_project_include_completed_tasks_enabled
  endpoint:
    path: /events/workspace_deprovisioning_project_include_completed_tasks_enabled
    method: GET
- name: workspace_deprovisioning_project_recipient_changed
  endpoint:
    path: /events/workspace_deprovisioning_project_recipient_changed
    method: GET
- name: workspace_file_attachment_options_changed
  endpoint:
    path: /events/workspace_file_attachment_options_changed
    method: GET
- name: workspace_force_password_reset
  endpoint:
    path: /events/workspace_force_password_reset
    method: GET
- name: workspace_form_is_embeddable_forms_disabled
  endpoint:
    path: /events/workspace_form_is_embeddable_forms_disabled
    method: GET
- name: workspace_form_is_embeddable_forms_enabled
  endpoint:
    path: /events/workspace_form_is_embeddable_forms_enabled
    method: GET
- name: workspace_form_link_authentication_required_disabled
  endpoint:
    path: /events/workspace_form_link_authentication_required_disabled
    method: GET
- name: workspace_form_link_authentication_required_enabled
  endpoint:
    path: /events/workspace_form_link_authentication_required_enabled
    method: GET
- name: workspace_google_sso_settings_changed
  endpoint:
    path: /events/workspace_google_sso_settings_changed
    method: GET
- name: workspace_guest_app_usage_setting_changed
  endpoint:
    path: /events/workspace_guest_app_usage_setting_changed
    method: GET
- name: workspace_guest_invite_permissions_changed
  endpoint:
    path: /events/workspace_guest_invite_permissions_changed
    method: GET
- name: workspace_guest_pat_usage_setting_changed
  endpoint:
    path: /events/workspace_guest_pat_usage_setting_changed
    method: GET
- name: workspace_idle_session_duration_changed
  endpoint:
    path: /events/workspace_idle_session_duration_changed
    method: GET
- name: workspace_job_title_field_editability_changed
  endpoint:
    path: /events/workspace_job_title_field_editability_changed
    method: GET
- name: workspace_logged_out_view_authentication_required_disabled
  endpoint:
    path: /events/workspace_logged_out_view_authentication_required_disabled
    method: GET
- name: workspace_logged_out_view_authentication_required_enabled
  endpoint:
    path: /events/workspace_logged_out_view_authentication_required_enabled
    method: GET
- name: workspace_machine_learning_product_feature_changed
  endpoint:
    path: /events/workspace_machine_learning_product_feature_changed
    method: GET
- name: workspace_mobile_app_attachments_sharing_disabled
  endpoint:
    path: /events/workspace_mobile_app_attachments_sharing_disabled
    method: GET
- name: workspace_mobile_app_attachments_sharing_enabled
  endpoint:
    path: /events/workspace_mobile_app_attachments_sharing_enabled
    method: GET
- name: workspace_mobile_app_biometric_authentication_duration_changed
  endpoint:
    path: /events/workspace_mobile_app_biometric_authentication_duration_changed
    method: GET
- name: workspace_mobile_app_biometric_authentication_required_disabled
  endpoint:
    path: /events/workspace_mobile_app_biometric_authentication_required_disabled
    method: GET
- name: workspace_mobile_app_biometric_authentication_required_enabled
  endpoint:
    path: /events/workspace_mobile_app_biometric_authentication_required_enabled
    method: GET
- name: workspace_mobile_app_copy_paste_disabled
  endpoint:
    path: /events/workspace_mobile_app_copy_paste_disabled
    method: GET
- name: workspace_mobile_app_copy_paste_enabled
  endpoint:
    path: /events/workspace_mobile_app_copy_paste_enabled
    method: GET
- name: workspace_mobile_app_screen_capture_disabled
  endpoint:
    path: /events/workspace_mobile_app_screen_capture_disabled
    method: GET
- name: workspace_mobile_app_screen_capture_enabled
  endpoint:
    path: /events/workspace_mobile_app_screen_capture_enabled
    method: GET
- name: workspace_mobile_app_widgets_disabled
  endpoint:
    path: /events/workspace_mobile_app_widgets_disabled
    method: GET
- name: workspace_mobile_app_widgets_enabled
  endpoint:
    path: /events/workspace_mobile_app_widgets_enabled
    method: GET
- name: workspace_onboarding_content_changed
  endpoint:
    path: /events/workspace_onboarding_content_changed
    method: GET
- name: workspace_onboarding_deleted
  endpoint:
    path: /events/workspace_onboarding_deleted
    method: GET
- name: workspace_onboarding_targeting_changed
  endpoint:
    path: /events/workspace_onboarding_targeting_changed
    method: GET
- name: workspace_onboarding_targeting_email_domain_added
  endpoint:
    path: /events/workspace_onboarding_targeting_email_domain_added
    method: GET
- name: workspace_onboarding_targeting_email_domain_removed
  endpoint:
    path: /events/workspace_onboarding_targeting_email_domain_removed
    method: GET
- name: workspace_onboarding_targeting_team_added
  endpoint:
    path: /events/workspace_onboarding_targeting_team_added
    method: GET
- name: workspace_onboarding_targeting_team_removed
  endpoint:
    path: /events/workspace_onboarding_targeting_team_removed
    method: GET
- name: workspace_password_requirements_changed
  endpoint:
    path: /events/workspace_password_requirements_changed
    method: GET
- name: workspace_personal_access_token_disabled
  endpoint:
    path: /events/workspace_personal_access_token_disabled
    method: GET
- name: workspace_personal_access_token_enabled
  endpoint:
    path: /events/workspace_personal_access_token_enabled
    method: GET
- name: workspace_personal_access_token_expiry_changed
  endpoint:
    path: /events/workspace_personal_access_token_expiry_changed
    method: GET
- name: workspace_project_default_access_level_changed
  endpoint:
    path: /events/workspace_project_default_access_level_changed
    method: GET
- name: workspace_project_default_customization_permission_changed
  endpoint:
    path: /events/workspace_project_default_customization_permission_changed
    method: GET
- name: workspace_project_default_privacy_setting_changed
  endpoint:
    path: /events/workspace_project_default_privacy_setting_changed
    method: GET
- name: workspace_project_default_sharing_permission_changed
  endpoint:
    path: /events/workspace_project_default_sharing_permission_changed
    method: GET
- name: workspace_project_public_to_domain_permissions_changed
  endpoint:
    path: /events/workspace_project_public_to_domain_permissions_changed
    method: GET
- name: workspace_require_app_approvals_of_type_changed
  endpoint:
    path: /events/workspace_require_app_approvals_of_type_changed
    method: GET
- name: workspace_require_two_factor_auth_disabled
  endpoint:
    path: /events/workspace_require_two_factor_auth_disabled
    method: GET
- name: workspace_require_two_factor_auth_enabled
  endpoint:
    path: /events/workspace_require_two_factor_auth_enabled
    method: GET
- name: workspace_rules_triggered_by_web_request_disabled
  endpoint:
    path: /events/workspace_rules_triggered_by_web_request_disabled
    method: GET
- name: workspace_rules_triggered_by_web_request_enabled
  endpoint:
    path: /events/workspace_rules_triggered_by_web_request_enabled
    method: GET
- name: workspace_saml_settings_changed
  endpoint:
    path: /events/workspace_saml_settings_changed
    method: GET
- name: workspace_saml_url_changed
  endpoint:
    path: /events/workspace_saml_url_changed
    method: GET
- name: workspace_security_contact_email_changed
  endpoint:
    path: /events/workspace_security_contact_email_changed
    method: GET
- name: workspace_service_account_token_expiry_changed
  endpoint:
    path: /events/workspace_service_account_token_expiry_changed
    method: GET
- name: workspace_should_restore_data_for_rejoining_members_disabled
  endpoint:
    path: /events/workspace_should_restore_data_for_rejoining_members_disabled
    method: GET
- name: workspace_should_restore_data_for_rejoining_members_enabled
  endpoint:
    path: /events/workspace_should_restore_data_for_rejoining_members_enabled
    method: GET
- name: workspace_should_restore_data_for_rejoining_guests_disabled
  endpoint:
    path: /events/workspace_should_restore_data_for_rejoining_guests_disabled
    method: GET
- name: workspace_should_restore_data_for_rejoining_guests_enabled
  endpoint:
    path: /events/workspace_should_restore_data_for_rejoining_guests_enabled
    method: GET
- name: workspace_trusted_domain_added
  endpoint:
    path: /events/workspace_trusted_domain_added
    method: GET
- name: workspace_trusted_domain_removed
  endpoint:
    path: /events/workspace_trusted_domain_removed
    method: GET
- name: workspace_trusted_domains_setting_changed
  endpoint:
    path: /events/workspace_trusted_domains_setting_changed
    method: GET
- name: workspace_view_links_disabled
  endpoint:
    path: /events/workspace_view_links_disabled
    method: GET
- name: workspace_view_links_enabled
  endpoint:
    path: /events/workspace_view_links_enabled
    method: GET
- name: workspace_wide_reporting_disabled
  endpoint:
    path: /events/workspace_wide_reporting_disabled
    method: GET
- name: workspace_wide_reporting_enabled
  endpoint:
    path: /events/workspace_wide_reporting_enabled
    method: GET
- name: user_workspace_admin_role_changed
  endpoint:
    path: /audit-logs/user
    method: GET
    data_selector: events
    params:
      event_type: user_workspace_admin_role_changed
- name: user_division_admin_role_changed
  endpoint:
    path: /audit-logs/user
    method: GET
    data_selector: events
    params:
      event_type: user_division_admin_role_changed
- name: user_team_admin_role_changed
  endpoint:
    path: /audit-logs/user
    method: GET
    data_selector: events
    params:
      event_type: user_team_admin_role_changed
- name: workspace_export_started
  endpoint:
    path: /audit-logs/workspace
    method: GET
    data_selector: events
    params:
      event_type: workspace_export_started
- name: search_report_export_started
  endpoint:
    path: /audit-logs/search
    method: GET
    data_selector: events
    params:
      event_type: search_report_export_started
- name: workspace_teams_export_started
  endpoint:
    path: /audit-logs/workspace
    method: GET
    data_selector: events
    params:
      event_type: workspace_teams_export_started
- name: division_teams_export_started
  endpoint:
    path: /audit-logs/division
    method: GET
    data_selector: events
    params:
      event_type: division_teams_export_started
- name: workspace_members_export_started
  endpoint:
    path: /audit-logs/workspace
    method: GET
    data_selector: events
    params:
      event_type: workspace_members_export_started
- name: project_csv_export_started
  endpoint:
    path: /audit-logs/project
    method: GET
    data_selector: events
    params:
      event_type: project_csv_export_started
- name: time_tracking_csv_export_started
  endpoint:
    path: /audit-logs/project
    method: GET
    data_selector: events
    params:
      event_type: time_tracking_csv_export_started
- name: attachment_downloaded
  endpoint:
    path: /audit-logs/attachment
    method: GET
    data_selector: events
    params:
      event_type: attachment_downloaded
- name: workspace_attachment_export_started
  endpoint:
    path: /audit-logs/attachment
    method: GET
    data_selector: events
    params:
      event_type: workspace_attachment_export_started
- name: object_export_started
  endpoint:
    path: /audit-logs/workspace
    method: GET
    data_selector: events
    params:
      event_type: object_export_started
- name: workspace_audit_log_export_started
  endpoint:
    path: /audit-logs/workspace
    method: GET
    data_selector: events
    params:
      event_type: workspace_audit_log_export_started
- name: workspace_goals_export_started
  endpoint:
    path: /audit-logs/workspace
    method: GET
    data_selector: events
    params:
      event_type: workspace_goals_export_started
- name: app_insights_export_started
  endpoint:
    path: /audit-logs/workspace
    method: GET
    data_selector: events
    params:
      event_type: app_insights_export_started
- name: reporting_export_started
  endpoint:
    path: /audit-logs/reporting
    method: GET
    data_selector: events
    params:
      event_type: reporting_export_started
- name: access_request_approved
  endpoint:
    path: /access_request_approved
    method: GET
- name: access_request_cancelled
  endpoint:
    path: /access_request_cancelled
    method: GET
- name: access_request_denied
  endpoint:
    path: /access_request_denied
    method: GET
- name: custom_field_default_access_level_changed
  endpoint:
    path: /custom_field_default_access_level_changed
    method: GET
- name: custom_field_member_access_level_changed
  endpoint:
    path: /custom_field_member_access_level_changed
    method: GET
- name: custom_field_member_added
  endpoint:
    path: /custom_field_member_added
    method: GET
- name: custom_field_member_removed
  endpoint:
    path: /custom_field_member_removed
    method: GET
- name: custom_field_privacy_settings_changed
  endpoint:
    path: /custom_field_privacy_settings_changed
    method: GET
- name: dashboard_member_added
  endpoint:
    path: /dashboard_member_added
    method: GET
- name: dashboard_member_removed
  endpoint:
    path: /dashboard_member_removed
    method: GET
- name: dashboard_member_access_level_changed
  endpoint:
    path: /dashboard_member_access_level_changed
    method: GET
- name: form_configuration_incoming_replies_disabled
  endpoint:
    path: /form_configuration_incoming_replies_disabled
    method: GET
- name: form_configuration_incoming_replies_enabled
  endpoint:
    path: /form_configuration_incoming_replies_enabled
    method: GET
- name: form_configuration_outgoing_replies_disabled
  endpoint:
    path: /form_configuration_outgoing_replies_disabled
    method: GET
- name: form_configuration_outgoing_replies_enabled
  endpoint:
    path: /form_configuration_outgoing_replies_enabled
    method: GET
- name: license_downgraded
  endpoint:
    path: /license_downgraded
    method: GET
- name: license_request_approved
  endpoint:
    path: /license_request_approved
    method: GET
- name: license_request_rejected
  endpoint:
    path: /license_request_rejected
    method: GET
- name: license_upgraded
  endpoint:
    path: /license_upgraded
    method: GET
- name: portfolio_customization_permission_changed
  endpoint:
    path: /portfolio_customization_permission_changed
    method: GET
- name: portfolio_default_access_level_changed
  endpoint:
    path: /portfolio_default_access_level_changed
    method: GET
- name: portfolio_member_access_level_changed
  endpoint:
    path: /portfolio_member_access_level_changed
    method: GET
- name: portfolio_member_added
  endpoint:
    path: /portfolio_member_added
    method: GET
- name: portfolio_member_removed
  endpoint:
    path: /portfolio_member_removed
    method: GET
- name: portfolio_sharing_permission_changed
  endpoint:
    path: /portfolio_sharing_permission_changed
    method: GET
- name: project_custom_property_setting_changed
  endpoint:
    path: /project_custom_property_setting_changed
    method: GET
- name: project_multihoming_setting_changed
  endpoint:
    path: /project_multihoming_setting_changed
    method: GET
- name: project_share_link_enabled
  endpoint:
    path: /project_share_link_enabled
    method: GET
- name: project_share_link_disabled
  endpoint:
    path: /project_share_link_disabled
    method: GET
- name: project_view_link_enabled
  endpoint:
    path: /project_view_link_enabled
    method: GET
- name: project_view_link_disabled
  endpoint:
    path: /project_view_link_disabled
    method: GET
- name: project_privacy_settings_changed
  endpoint:
    path: /project_privacy_settings_changed
    method: GET
- name: project_customization_permission_changed
  endpoint:
    path: /project_customization_permission_changed
    method: GET
- name: project_default_access_level_changed
  endpoint:
    path: /project_default_access_level_changed
    method: GET
- name: project_member_access_level_changed
  endpoint:
    path: /project_member_access_level_changed
    method: GET
- name: project_member_added
  endpoint:
    path: /project_member_added
    method: GET
- name: project_member_removed
  endpoint:
    path: /project_member_removed
    method: GET
- name: project_sharing_permission_changed
  endpoint:
    path: /project_sharing_permission_changed
    method: GET
- name: team_join_request_created
  endpoint:
    path: /team_join_request_created
    method: GET
- name: team_member_removed
  endpoint:
    path: /team_member_removed
    method: GET
- name: team_member_added
  endpoint:
    path: /team_member_added
    method: GET
- name: team_privacy_settings_changed
  endpoint:
    path: /team_privacy_settings_changed
    method: GET
- name: team_harvest_integration_enabled
  endpoint:
    path: /audit/events/team_harvest_integration_enabled
    method: GET
- name: team_harvest_integration_disabled
  endpoint:
    path: /audit/events/team_harvest_integration_disabled
    method: GET
- name: user_app_authorized
  endpoint:
    path: /audit/events/user_app_authorized
    method: GET
- name: user_app_revoked
  endpoint:
    path: /audit/events/user_app_revoked
    method: GET
- name: user_personal_access_token_authorized
  endpoint:
    path: /audit/events/user_personal_access_token_authorized
    method: GET
- name: user_personal_access_token_revoked
  endpoint:
    path: /audit/events/user_personal_access_token_revoked
    method: GET
- name: service_account_created
  endpoint:
    path: /audit/events/service_account_created
    method: GET
- name: service_account_deleted
  endpoint:
    path: /audit/events/service_account_deleted
    method: GET
- name: service_account_name_changed
  endpoint:
    path: /audit/events/service_account_name_changed
    method: GET
- name: team_created
  endpoint:
    path: /audit/events/team_created
    method: GET
- name: attachment_uploaded
  endpoint:
    path: /audit/events/attachment_uploaded
    method: GET
- name: task_deleted
  endpoint:
    path: /audit/events/task_deleted
    method: GET
- name: task_permanently_deleted
  endpoint:
    path: /audit/events/task_permanently_deleted
    method: GET
- name: task_undeleted
  endpoint:
    path: /audit/events/task_undeleted
    method: GET
- name: project_deleted
  endpoint:
    path: /audit/events/project_deleted
    method: GET
- name: project_undeleted
  endpoint:
    path: /audit/events/project_undeleted
    method: GET
- name: portfolio_deleted
  endpoint:
    path: /audit/events/portfolio_deleted
    method: GET
- name: portfolio_undeleted
  endpoint:
    path: /audit/events/portfolio_undeleted
    method: GET
- name: goal_deleted
  endpoint:
    path: /audit/events/goal_deleted
    method: GET
- name: goal_undeleted
  endpoint:
    path: /audit/events/goal_undeleted
    method: GET
- name: custom_field_deleted
  endpoint:
    path: /audit/events/custom_field_deleted
    method: GET
- name: custom_field_undeleted
  endpoint:
    path: /audit/events/custom_field_undeleted
    method: GET
- name: message_deleted
  endpoint:
    path: /audit/events/message_deleted
    method: GET
- name: message_permanently_deleted
  endpoint:
    path: /audit/events/message_permanently_deleted
    method: GET
- name: message_undeleted
  endpoint:
    path: /audit/events/message_undeleted
    method: GET
- name: team_deleted
  endpoint:
    path: /audit/events/team_deleted
    method: GET
- name: team_undeleted
  endpoint:
    path: /audit/events/team_undeleted
    method: GET
- name: attachment_deleted
  endpoint:
    path: /audit/events/attachment_deleted
    method: GET
- name: attachment_undeleted
  endpoint:
    path: /audit/events/attachment_undeleted
    method: GET
- name: comment_deleted
  endpoint:
    path: /audit/events/comment_deleted
    method: GET
- name: comment_undeleted
  endpoint:
    path: /audit/events/comment_undeleted
    method: GET
- name: status_update_deleted
  endpoint:
    path: /audit/events/status_update_deleted
    method: GET
- name: status_update_permanently_deleted
  endpoint:
    path: /audit/events/status_update_permanently_deleted
    method: GET
- name: status_update_undeleted
  endpoint:
    path: /audit/events/status_update_undeleted
    method: GET
- name: task_template_deleted
  endpoint:
    path: /audit/events/task_template_deleted
    method: GET
- name: task_template_undeleted
  endpoint:
    path: /audit/events/task_template_undeleted
    method: GET
- name: project_template_deleted
  endpoint:
    path: /audit/events/project_template_deleted
    method: GET
- name: project_template_undeleted
  endpoint:
    path: /audit/events/project_template_undeleted
    method: GET
- name: story_deleted
  endpoint:
    path: /audit/events/story_deleted
    method: GET
- name: story_undeleted
  endpoint:
    path: /audit/events/story_undeleted
    method: GET
- name: bundle_deleted
  endpoint:
    path: /audit/events/bundle_deleted
    method: GET
- name: bundle_installation_deleted
  endpoint:
    path: /audit/events/bundle_installation_deleted
    method: GET
- name: goal_template_deleted
  endpoint:
    path: /audit/events/goal_template_deleted
    method: GET
- name: goal_template_undeleted
  endpoint:
    path: /audit/events/goal_template_undeleted
    method: GET
- name: user
  endpoint:
    path: /users/me
    method: GET
- name: project
  endpoint:
    path: /projects/{project_id}
    method: GET
- name: statuses
  endpoint:
    path: /projects/{project_id}/statuses
    method: GET
- name: users_me
  endpoint:
    path: /users/me
    method: GET
- name: project_status
  endpoint:
    path: /projects/{projectID}/statuses
    method: GET
    data_selector: data
- name: project_status
  endpoint:
    path: /projects/{project_gid}
    method: GET
    data_selector: data
    params:
      current_status:
        status_type: true
        title: true
        text: true
        author:
          name: true
        created_at: true
- name: status_updates
  endpoint:
    path: /status_updates
    method: GET
    data_selector: data
    params:
      parent: '{{ projectID }}'
      opt_fields: title,status_type,text,created_by.name,created_at
- name: batch_request
  endpoint:
    path: /batch
    method: POST
    data_selector: data
- name: widget_metadata
  endpoint:
    path: /widget/metadata
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: POST
    data_selector: tasks
- name: custom_fields
  endpoint:
    path: /custom_fields
    method: POST
    data_selector: custom_fields
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
- name: audit_log
  endpoint:
    method: GET
- name: custom_external_data
  endpoint:
    data_selector: '# not explicitly mentioned; inferred as primary object'
- name: custom_fields
  endpoint:
    path: /workspaces/{workspace_gid}/custom_fields
    method: GET
- name: projects
  endpoint:
    path: /workspaces/{workspace_gid}/projects
    method: GET
- name: user
  endpoint:
    path: /users/{user_gid}
    method: GET
- name: workspace
  endpoint:
    path: /workspaces/{workspace_gid}
    method: GET
- name: custom_fields
  endpoint:
    path: /custom_fields
    method: GET
    data_selector: custom_fields
- name: custom_field_settings
  endpoint:
    path: /custom_field_settings
    method: GET
    data_selector: custom_field_settings
- name: custom_fields_id
  endpoint:
    path: /custom_fields/{custom_fields_id}
    method: GET
    data_selector: custom_fields
- name: project_custom_field_settings
  endpoint:
    path: /projects/{project_gid}/custom_field_settings
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: POST
- name: tasks
  endpoint:
    path: /api/1.0/tasks
    method: GET
    params:
      project: '123456'
      modified_since: '2024-05-24T16:00:00.000Z'
- name: external_example_app_installation
  endpoint:
    path: /-/install_platform_ui_app
    method: GET
    params:
      app_id: '{{ dlt.secrets[''app_client_id''] }}'
- name: project_statuses
  endpoint:
    method: GET
    params:
      portfolio_gid: portfolio_gid
- name: portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users/me
    method: GET
- name: portfolio_items
  endpoint:
    path: /portfolios/{portfolio_gid}/items
    method: GET
    params:
      opt_fields: name,resource_type,archived,color,created_at,current_status_update.(created_by.name|status_type|created_at|text),notes,modified_at,public,owner.name,start_on,due_on
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
- name: users
  endpoint:
    path: /users/me
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: task_detail
  endpoint:
    path: /tasks/{task_gid}
    method: GET
- name: project
  endpoint:
    path: /project/{project_gid}
    method: GET
- name: project_tasks
  endpoint:
    path: /projects/{project_gid}/tasks
    method: GET
    data_selector: memberships
    params:
      opt_fields: memberships.(project|section).name
- name: tasks_assigned_to_user
  endpoint:
    path: /tasks
    method: GET
    params:
      assignee: me
      workspace: WORKSPACE_GID
      completed_since: now
      limit: 10
- name: user_task_list
  endpoint:
    path: /users/{user_gid}/user_task_list
    method: GET
- name: custom_field_settings
  endpoint:
    path: /projects/{project_gid}/custom_field_settings
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: POST
- name: portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}
    method: GET
    data_selector: portfolio
- name: project
  endpoint:
    path: /projects/{project_gid}
    method: GET
    data_selector: project
- name: task
  endpoint:
    path: /tasks/{task_gid}
    method: GET
    data_selector: task
- name: section
  endpoint:
    path: /sections/{section_gid}
    method: GET
    data_selector: section
- name: portfolio_to_portfolio
  endpoint:
    path: /portfolio_to_portfolio/{portfolio_to_portfolio_gid}
    method: GET
    data_selector: portfolio_to_portfolio
- name: project_to_portfolio
  endpoint:
    path: /project_to_portfolio/{project_to_portfolio_gid}
    method: GET
    data_selector: project_to_portfolio
- name: task
  endpoint:
    path: /tasks/{task_gid}
    method: GET
- name: task_story
  endpoint:
    path: /tasks/{task_gid}/stories
    method: POST
- name: task
  endpoint:
    path: /tasks/{task_gid}
    method: GET
    data_selector: data
    params:
      opt_fields: name
- name: story
  endpoint:
    path: /tasks/{task_gid}/stories
    method: POST
    data_selector: data
- name: rule_trigger
  endpoint:
    path: /rule_triggers/:trigger_identifier/run
    method: POST
- name: task
  endpoint:
    path: /trigger
    method: POST
    data_selector: data
- name: rule_triggers
  endpoint:
    path: /rule_triggers/trigger_identifier/run
    method: POST
- name: user
  endpoint:
    method: GET
    params:
      opt_fields: name,email
      opt_pretty: 'true'
- name: users
  endpoint:
    path: /users/me
    method: GET
- name: tasks
  endpoint:
    method: POST
    path: /tasks
- name: users
  endpoint:
    method: GET
    path: /users/get_user
- name: tasks
  endpoint:
    method: GET
    params:
      project: '1199684513975168'
- name: users
  endpoint:
    method: GET
    path: /users/me
- name: attachments
  endpoint:
    path: /attachments
    method: GET
- name: goals
  endpoint:
    path: /goals
    method: GET
- name: project_templates
  endpoint:
    path: /project_templates
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: stories
  endpoint:
    path: /stories
    method: GET
- name: task_templates
  endpoint:
    path: /task_templates
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: typeahead
  endpoint:
    path: /workspaces/{workspace_gid}/typeahead
    method: GET
- name: user
  endpoint:
    path: /users
    method: GET
- name: user_details
  endpoint:
    path: /users/{user_gid}
    method: GET
- name: user_favorites
  endpoint:
    path: /users/{user_gid}/favorites
    method: GET
- name: team_users
  endpoint:
    path: /teams/{team_gid}/users
    method: GET
- name: workspace_users
  endpoint:
    path: /workspaces/{workspace_gid}/users
    method: GET
- name: workspace
  endpoint:
    path: /workspaces
    method: GET
- name: specific_workspace
  endpoint:
    path: /workspaces/{workspace_gid}
    method: GET
- name: user_authorization
  endpoint:
    path: /-/oauth_authorize
    method: GET
- name: userinfo
  endpoint:
    path: /api/1.0/openid_connect/userinfo
    method: GET
    data_selector: .
- name: openid_configuration
  endpoint:
    path: /api/1.0/.well-known/openid-configuration
    method: GET
    data_selector: .
- name: user
  endpoint:
    path: /users/{user_gid}
    method: GET
- name: portfolio_items
  endpoint:
    path: /portfolios/{portfolio_gid}/items
    method: GET
- name: project
  endpoint:
    path: /projects/{project_gid}
    method: GET
- name: user_workspace
  endpoint:
    path: /users/me/workspaces
    method: GET
- name: user
  endpoint:
    path: /users/me
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: task_create
  endpoint:
    path: /tasks
    method: POST
    data_selector: data
- name: task_get
  endpoint:
    path: /tasks/{task_gid}
    method: GET
    data_selector: data
- name: task_update
  endpoint:
    path: /tasks/{task_gid}
    method: PUT
    data_selector: data
- name: task_delete
  endpoint:
    path: /tasks/{task_gid}
    method: DELETE
    data_selector: data
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: data
- name: tasks
  endpoint:
    path: /tasks
    method: POST
- name: tasks
  endpoint:
    path: /tasks
    method: POST
- name: task_creation
  endpoint:
    path: /tasks
    method: POST
    data_selector: data
- name: task_retrieval
  endpoint:
    path: /tasks/{task_gid}
    method: GET
    data_selector: data
- name: task_update
  endpoint:
    path: /tasks/{task_gid}
    method: PUT
    data_selector: data
- name: task_deletion
  endpoint:
    path: /tasks/{task_gid}
    method: DELETE
    data_selector: data
- name: task
  endpoint:
    path: /tasks/{gid}
    method: GET
    params:
      opt_fields: name,assignee,workspace
- name: task
  endpoint:
    path: /tasks
    method: POST
    data_selector: data
    params:
      workspace: WORKSPACE_GID
      name: Sample task
      assignee: me
- name: single_task
  endpoint:
    path: /tasks/{task_gid}
    method: GET
    data_selector: data
    params:
      opt_fields: name,assignee,workspace
- name: update_task
  endpoint:
    path: /tasks/{task_gid}
    method: PUT
    data_selector: data
    params:
      name: Modified task
- name: delete_task
  endpoint:
    path: /tasks/{task_gid}
    method: DELETE
    data_selector: data
- name: task_update
  endpoint:
    path: /tasks/TASK_GID
    method: PUT
    data_selector: data
    params:
      opt_fields: name,assignee,workspace
- name: task_create
  endpoint:
    path: /tasks
    method: POST
    data_selector: data
- name: task_get
  endpoint:
    path: /tasks/{task_gid}
    method: GET
    data_selector: data
- name: task_update
  endpoint:
    path: /tasks/{task_gid}
    method: PUT
    data_selector: data
- name: task_delete
  endpoint:
    path: /tasks/{task_gid}
    method: DELETE
    data_selector: data
- name: task_delete
  endpoint:
    path: /tasks/TASK_GID
    method: DELETE
- name: tasks
  endpoint:
    data_selector: html_notes
- name: projects
  endpoint:
    data_selector: html_notes
- name: stories
  endpoint:
    data_selector: html_text
- name: project_status_updates
  endpoint:
    data_selector: html_text
- name: project_briefs
  endpoint:
    data_selector: html_text
- name: teams
  endpoint:
    data_selector: html_description
- name: attachment_post
  endpoint:
    path: /attachments
    method: POST
- name: attachment_get
  endpoint:
    path: /attachments
    method: GET
- name: link
  endpoint:
    method: POST
    params:
      data-asana-gid: '123'
      data-asana-dynamic: 'false'
- name: inline_image
  endpoint:
    method: POST
    params:
      data-asana-gid: '1234'
- name: external_media_embed
  endpoint:
    method: POST
    params:
      data-asana-gid: '1234'
- name: user_info
  endpoint:
    path: /users/me
    method: GET
- name: service_provider_config
  endpoint:
    path: /ServiceProviderConfig
    method: GET
- name: resource_types
  endpoint:
    path: /ResourceTypes
    method: GET
- name: schemas
  endpoint:
    path: /Schemas
    method: GET
- name: users
  endpoint:
    path: /Users
    method: GET
    params:
      filter: userName
- name: user
  endpoint:
    path: /Users/:id
    method: GET
- name: create_user
  endpoint:
    path: /Users
    method: POST
- name: update_user
  endpoint:
    path: /Users/:id
    method: PUT
- name: patch_user
  endpoint:
    path: /Users/:id
    method: PATCH
- name: delete_user
  endpoint:
    path: /Users/:id
    method: DELETE
- name: groups
  endpoint:
    path: /Groups
    method: GET
    params:
      filter: displayName
- name: group
  endpoint:
    path: /Groups/:id
    method: GET
- name: create_group
  endpoint:
    path: /Groups
    method: POST
- name: update_group
  endpoint:
    path: /Groups/:id
    method: PUT
- name: patch_group
  endpoint:
    path: /Groups/:id
    method: PATCH
- name: group_list
  endpoint:
    path: /Groups
    method: GET
    data_selector: Resources
- name: create_group
  endpoint:
    path: /Groups
    method: POST
    data_selector: Resources
- name: modify_group
  endpoint:
    path: /Groups/{id}
    method: PATCH
    data_selector: ''
- name: script_actions
  endpoint:
    method: POST
- name: workspace_memberships_specific
  endpoint:
    path: /users/{user_gid}/workspace_memberships
    method: GET
- name: workspaces_current_user
  endpoint:
    path: /workspaces
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: tasks
  endpoint:
    path: /tasks/searchInWorkspace/{workspaceId}
    method: GET
    data_selector: data
    params:
      projects.any: '{{ config.designRequestProjectId }}'
      assignee.any: 'null'
      resource_subtype: default_task
      fields: gid
      limit: 100
- name: app
  endpoint:
    method: GET
- name: app
  endpoint:
    method: POST
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
- name: attachment
  endpoint:
    params:
      action:
      - deleted
      - undeleted
- name: goal
  endpoint:
    params:
      action:
      - added
      - changed
      - removed
      - deleted
      - undeleted
- name: portfolio
  endpoint:
    params:
      action:
      - added
      - deleted
      - removed
- name: project
  endpoint:
    params:
      action:
      - added
      - changed
      - deleted
      - removed
      - undeleted
- name: project_membership
  endpoint:
    params:
      action:
      - added
      - removed
- name: project_template_configuration
  endpoint:
    params:
      action:
      - added
      - deleted
      - removed
- name: project_template_configuration_membership
  endpoint:
    params:
      action:
      - added
      - removed
- name: section
  endpoint:
    params:
      action:
      - added
      - changed
      - deleted
      - undeleted
- name: story
  endpoint:
    data_selector: type
    params:
      action:
      - added
      - removed
      - undeleted
- name: tag
  endpoint:
    params:
      action:
      - added
      - changed
      - deleted
      - undeleted
- name: task
  endpoint:
    params:
      action:
      - added
      - changed
      - deleted
      - removed
      - undeleted
- name: team
  endpoint:
    params:
      action:
      - added
      - changed
      - deleted
- name: team_membership
  endpoint:
    params:
      action:
      - added
      - removed
- name: time_tracking_entry
  endpoint:
    params:
      action:
      - added
      - changed
      - deleted
- name: workspace
  endpoint:
    params:
      action:
      - changed
- name: workspace_memberships
  endpoint:
    params:
      action:
      - added
      - removed
- name: events
  endpoint:
    method: POST
    data_selector: events
- name: webhook
  endpoint:
    path: /webhooks/{webhook_gid}
    method: GET
    data_selector: data
    params: {}
- name: workspace_events
  endpoint:
    path: /workspaces/{workspace_gid}/events
    method: GET
    data_selector: data
    params:
      sync: '{{ sync_token }}'
- name: portfolio_custom_field_setting
  endpoint:
    path: /portfolios//addCustomFieldSetting
    method: POST
- name: custom_field_setting
  endpoint:
    path: /projects/addCustomFieldSetting
    method: POST
- name: task_dependencies
  endpoint:
    path: /tasks/addDependencies
    method: POST
- name: add_dependents_for_task
  endpoint:
    path: /tasks/{task_gid}/addDependents
    method: POST
- name: add_followers_to_project
  endpoint:
    path: /projects//addFollowers
    method: POST
- name: add_followers_to_task
  endpoint:
    path: /tasks//addFollowers
    method: POST
    data_selector: ''
- name: add_followers_to_goal
  endpoint:
    path: /goals//addFollowers
    method: POST
- name: portfolio_item
  endpoint:
    path: /portfolios/{portfolio_gid}/addItem
    method: POST
- name: portfolio_members
  endpoint:
    path: /portfolios//addMembers
    method: POST
- name: add_members_for_project
  endpoint:
    path: /api/1.0/projects//addMembers
    method: POST
- name: add_project_to_task
  endpoint:
    path: /tasks/<task_gid>/addProject
    method: POST
- name: goal_relationship
  endpoint:
    path: /goals//addSupportingRelationship
    method: POST
- name: add_tag_for_task
  endpoint:
    path: /tasks/{task_gid}/addTag
    method: POST
- name: add_task_to_section
  endpoint:
    path: /sections/{section_gid}/addTask
    method: POST
- name: team_membership
  endpoint:
    path: /teams//addUser
    method: POST
- name: add_user_to_workspace
  endpoint:
    path: /workspaces/{workspace_gid}/addUser
    method: POST
- name: allocation
  endpoint:
    path: /reference/allocations
    method: GET
    data_selector: effort
- name: attachment
  endpoint:
    path: /attachments/{attachment_gid}
    method: GET
    data_selector: data
- name: attachment_compact
  endpoint:
    path: /attachment_compact
    method: GET
    data_selector: data
- name: attachment
  endpoint:
    path: /attachment
    method: GET
    data_selector: data
- name: audit_log
  endpoint:
    method: GET
- name: AuditLogEvent
  endpoint:
    path: /audit-log-events
    method: GET
    data_selector: AuditLogEvent
- name: batch
  endpoint:
    path: /batch
    method: POST
    data_selector: body.data
- name: allocation
  endpoint:
    path: /allocations
    method: POST
- name: attachment
  endpoint:
    path: /attachments
    method: POST
    data_selector: record
    params: {}
- name: custom_field
  endpoint:
    path: /custom_fields
    method: POST
    data_selector: ''
- name: enum_option
  endpoint:
    path: /custom_fields//enum_options
    method: POST
- name: goal_metric_create
  endpoint:
    path: /goals//setMetric
    method: POST
- name: goal_metric_replace
  endpoint:
    path: /goals//setMetric
    method: POST
- name: goal
  endpoint:
    path: /goals
    method: POST
- name: graph_export
  endpoint:
    path: /exports/graph
    method: POST
- name: membership
  endpoint:
    path: /api/1.0/memberships
    method: POST
- name: organization_export
  endpoint:
    path: /organization_exports
    method: POST
- name: portfolio
  endpoint:
    path: /portfolios
    method: POST
- name: project_brief
  endpoint:
    path: /projects//project_briefs
    method: POST
- name: project
  endpoint:
    path: /teams//projects
    method: POST
- name: project
  endpoint:
    path: /workspaces/{workspace_id}/projects
    method: POST
- name: project_status
  endpoint:
    path: /projects/{project_id}/project_statuses
    method: POST
    data_selector: null
- name: status_update
  endpoint:
    path: /projects/{project_id}/status_updates
    method: POST
    data_selector: null
- name: project
  endpoint:
    path: /projects
    method: POST
- name: section
  endpoint:
    path: /projects/{project_gid}/sections
    method: POST
- name: status_update
  endpoint:
    path: /status_updates
    method: POST
- name: story_for_task
  endpoint:
    path: /tasks//stories
    method: POST
    data_selector: ''
- name: subtask
  endpoint:
    path: /tasks/{task_gid}/subtasks
    method: POST
- name: tag
  endpoint:
    path: /workspaces/{workspace_gid}/tags
    method: POST
- name: tag
  endpoint:
    path: /tags
    method: POST
    data_selector: records
- name: task
  endpoint:
    path: /tasks
    method: POST
- name: team
  endpoint:
    path: /teams
    method: POST
- name: time_tracking_entry
  endpoint:
    path: /tasks/{task_id}/time_tracking_entries
    method: POST
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: custom_field_setting
  endpoint:
    path: /projects/{project_gid}/addCustomFieldSetting
    method: POST
- name: custom_field_setting
  endpoint:
    path: /projects/{project_gid}/removeCustomFieldSetting
    method: POST
- name: custom_field_setting
  endpoint:
    path: /portfolios/{portfolio_gid}/addCustomFieldSetting
    method: POST
- name: custom_field_setting
  endpoint:
    path: /portfolios/{portfolio_gid}/removeCustomFieldSetting
    method: POST
- name: custom_field_setting
  endpoint:
    path: /custom_fields/{custom_field_gid}
    method: GET
    data_selector: data
    params: {}
- name: custom_field_compact
  endpoint:
    path: /custom_fields
    method: GET
    data_selector: items
    params: {}
- name: custom_field
  endpoint:
    path: /customFields
    method: GET
    data_selector: data
- name: custom_type
  endpoint:
    path: /custom_types
    method: GET
    data_selector: data
- name: custom_type_status_option
  endpoint:
    path: /custom_types/{custom_type_gid}/status_options
    method: GET
    data_selector: status_options
- name: allocation
  endpoint:
    path: /allocations/{allocation_id}
    method: DELETE
- name: attachment
  endpoint:
    path: /attachments/{attachment_gid}
    method: DELETE
    data_selector: null
- name: delete_custom_field
  endpoint:
    path: /custom_fields/{custom_field_id}
    method: DELETE
    data_selector: ''
- name: goal
  endpoint:
    path: /goals/{goal_id}
    method: DELETE
- name: membership
  endpoint:
    path: /memberships/{membership_id}
    method: DELETE
    data_selector: ''
- name: portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}
    method: DELETE
- name: project_brief
  endpoint:
    path: /project_briefs/{project_brief_gid}
    method: DELETE
    data_selector: ''
- name: project_status
  endpoint:
    path: /project_statuses/
    method: DELETE
    data_selector: null
- name: project_template
  endpoint:
    path: /project_templates/{project_template_id}
    method: DELETE
    data_selector: ''
- name: project
  endpoint:
    path: /projects/{project_id}
    method: DELETE
    data_selector: ''
- name: section
  endpoint:
    path: /sections/{section_gid}
    method: DELETE
- name: status_update
  endpoint:
    path: /status_updates/{status_update_id}
    method: DELETE
- name: delete_story
  endpoint:
    path: /stories/
    method: DELETE
    data_selector: ''
- name: tag
  endpoint:
    path: /tags/{tag_id}
    method: DELETE
- name: task_template
  endpoint:
    path: /task_templates/{task_template_id}
    method: DELETE
- name: task
  endpoint:
    path: /tasks/{task_id}
    method: DELETE
    data_selector: ''
- name: time_tracking_entry
  endpoint:
    path: /time_tracking_entries/{entry_id}
    method: DELETE
- name: webhook
  endpoint:
    path: /webhooks/
    method: DELETE
- name: duplicate_project
  endpoint:
    path: /projects/{project_gid}/duplicate
    method: POST
- name: events
  endpoint:
    path: /events
    method: GET
    params:
      sync: initial or previous sync token
- name: event
  endpoint:
    method: GET
    params:
      sync_token: initial or preceding sync_token
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    params:
      sync_token: '{{ last_sync_token }}'
- name: graph_export
  endpoint:
    path: /graph_export
    method: POST
    data_selector: new_graph_export
- name: graph_export_status
  endpoint:
    path: /graph_export/{gid}
    method: GET
    data_selector: new_graph_export
- name: graph_export_download
  endpoint:
    path: /graph_export/{gid}/download
    method: GET
    data_selector: new_graph_export
- name: action_metadata
  endpoint:
    path: /action.metadata_url_path_placeholder
    method: GET
- name: allocations
  endpoint:
    path: /allocations
    method: GET
- name: allocation
  endpoint:
    path: /allocations/{allocation_gid}
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: GET
    data_selector: compact
- name: attachment
  endpoint:
    path: /attachments
    method: GET
- name: audit_log_events
  endpoint:
    path: /reference/getauditlogevents
    method: GET
    data_selector: AuditLogEvent
    params: {}
- name: custom_field_settings_for_portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}/custom_field_settings
    method: GET
    data_selector: data
- name: custom_field_settings
  endpoint:
    path: /projects/{project_id}/custom_field_settings
    method: GET
    data_selector: data
- name: custom_fields
  endpoint:
    path: /workspaces/{workspaceId}/custom_fields
    method: GET
- name: custom_field
  endpoint:
    path: /custom_fields/
    method: GET
- name: custom_types
  endpoint:
    path: /custom_types
    method: GET
- name: task_dependencies
  endpoint:
    path: /tasks/{task_gid}/dependencies
    method: GET
    data_selector: data
- name: task_dependents
  endpoint:
    path: /tasks/{task_gid}/dependents
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /{path_to_resource}/events
    method: GET
    data_selector: events
- name: user_favorites
  endpoint:
    path: /users//favorites
    method: GET
- name: goal_relationships
  endpoint:
    path: /goal_relationships
    method: GET
    data_selector: data
- name: goal_relationship
  endpoint:
    path: /goal_relationships/
    method: GET
- name: goals
  endpoint:
    path: /goals
    method: GET
    data_selector: data
- name: goal
  endpoint:
    path: /goals/
    method: GET
    data_selector: data
- name: portfolio_items
  endpoint:
    path: /portfolios/{portfolio_gid}/items
    method: GET
- name: job
  endpoint:
    path: /jobs/{job_gid}
    method: GET
- name: memberships
  endpoint:
    path: /memberships
    method: GET
- name: project_membership
  endpoint:
    path: /memberships/{membership_id}
    method: GET
- name: goal_membership
  endpoint:
    path: /memberships/{membership_id}
    method: GET
- name: portfolio_membership
  endpoint:
    path: /memberships/{membership_id}
    method: GET
- name: custom_field_membership
  endpoint:
    path: /memberships/{membership_id}
    method: GET
- name: organization_export
  endpoint:
    path: /organization_exports/{organization_export_gid}
    method: GET
- name: parent_goals
  endpoint:
    path: /goals//parentGoals
    method: GET
- name: portfolio_memberships
  endpoint:
    path: /portfolios/{portfolio_gid}/portfolio_memberships
    method: GET
    data_selector: data
- name: portfolio_memberships
  endpoint:
    path: /portfolio_memberships
    method: GET
- name: portfolio_membership
  endpoint:
    path: /portfolio_memberships/
    method: GET
- name: portfolios
  endpoint:
    path: /portfolios
    method: GET
    data_selector: data
- name: portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}
    method: GET
- name: project_brief
  endpoint:
    path: /project_briefs/{project_brief_gid}
    method: GET
- name: project_memberships
  endpoint:
    path: /projects/{project_id}/project_memberships
    method: GET
    data_selector: data
- name: project_membership
  endpoint:
    path: /project_memberships/
    method: GET
- name: projects_for_task
  endpoint:
    path: /tasks/{task_gid}/projects
    method: GET
    data_selector: data
- name: projects_for_team
  endpoint:
    path: /teams/{team_gid}/projects
    method: GET
    data_selector: data
- name: projects_for_workspace
  endpoint:
    path: /workspaces/{workspace_gid}/projects
    method: GET
    data_selector: data
- name: project_statuses
  endpoint:
    path: /projects/{project_id}/project_statuses
    method: GET
    data_selector: data
- name: project_status
  endpoint:
    path: /project_statuses/
    method: GET
- name: status_update
  endpoint:
    path: /status_updates/{status_gid}
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: project_templates
  endpoint:
    path: /teams/{team_gid}/project_templates
    method: GET
    data_selector: data
- name: project_templates
  endpoint:
    path: /project_templates
    method: GET
    data_selector: data
- name: project_template
  endpoint:
    path: /project_templates/{project_template_gid}
    method: GET
- name: project
  endpoint:
    path: /projects/
    method: GET
- name: sections
  endpoint:
    path: /projects/{project_id}/sections
    method: GET
    data_selector: data
- name: section
  endpoint:
    path: /sections/{section_gid}
    method: GET
- name: status_updates
  endpoint:
    path: /status_updates
    method: GET
    data_selector: data
- name: status_update
  endpoint:
    path: /status_updates/{status_update_gid}
    method: GET
- name: task_stories
  endpoint:
    path: /tasks/{task_id}/stories
    method: GET
    data_selector: data
- name: story
  endpoint:
    path: /stories/
    method: GET
- name: subtasks
  endpoint:
    path: /tasks/{task_gid}/subtasks
    method: GET
    data_selector: data
- name: tags_for_task
  endpoint:
    path: /tasks/{task_gid}/tags
    method: GET
- name: tags_for_workspace
  endpoint:
    path: /workspaces/{workspace_id}/tags
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: data
- name: tag
  endpoint:
    path: /tags/{tag_gid}
    method: GET
- name: task_counts_for_project
  endpoint:
    path: /projects/{project_id}/task_counts
    method: GET
    data_selector: null
    params:
      opt_fields: num_tasks, num_incomplete_tasks, num_completed_tasks
- name: task
  endpoint:
    path: /workspaces/{workspace_gid}/tasks/{custom_id}
    method: GET
- name: tasks_for_project
  endpoint:
    path: /projects/{project_id}/tasks
    method: GET
    data_selector: data
- name: tasks_for_section
  endpoint:
    path: /sections/{section_gid}/tasks
    method: GET
    data_selector: data
- name: tasks_for_tag
  endpoint:
    path: /tags/{tag_id}/tasks
    method: GET
    data_selector: data
- name: tasks_for_user_task_list
  endpoint:
    path: /user_task_lists//tasks
    method: GET
    data_selector: data
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    params:
      required:
      - project
      - tag
      - assignee
      - workspace
- name: search_tasks
  endpoint:
    path: /workspaces/{workspace_gid}/tasks/search
    method: GET
- name: task_templates
  endpoint:
    path: /task_templates
    method: GET
    data_selector: data
    params:
      project: '{{ project_id }}'
- name: task_template
  endpoint:
    path: /task_templates/
    method: GET
- name: team_memberships
  endpoint:
    path: /teams//team_memberships
    method: GET
- name: team_memberships_for_user
  endpoint:
    path: /users//team_memberships
    method: GET
- name: team_memberships
  endpoint:
    path: /team_memberships
    method: GET
    data_selector: data
- name: team_membership
  endpoint:
    path: /team_memberships/
    method: GET
- name: user_teams
  endpoint:
    path: /users/{user_gid}/teams
    method: GET
    data_selector: data
- name: teams
  endpoint:
    path: /workspaces/{workspace_gid}/teams
    method: GET
    data_selector: data
- name: team
  endpoint:
    path: /teams/{team_gid}
    method: GET
- name: time_periods
  endpoint:
    path: /time_periods
    method: GET
    data_selector: data
- name: time_period
  endpoint:
    path: /time_periods/{time_period_gid}
    method: GET
- name: time_tracking_entries
  endpoint:
    path: /tasks/{task_gid}/time_tracking_entries
    method: GET
- name: time_tracking_entry
  endpoint:
    path: /time_tracking_entries/
    method: GET
- name: team_users
  endpoint:
    path: /teams//users
    method: GET
    data_selector: data
- name: users_for_workspace
  endpoint:
    path: /workspaces/{workspace_gid}/users
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    params:
      workspace_id: optional
- name: user_task_list
  endpoint:
    path: /users/{user_gid}/user_task_list
    method: GET
- name: user_task_list
  endpoint:
    path: /user_task_lists/
    method: GET
- name: user
  endpoint:
    path: /users/
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: data
- name: webhook
  endpoint:
    path: /webhooks/{webhook_gid}
    method: GET
- name: workspace_memberships
  endpoint:
    path: /users//workspace_memberships
    method: GET
    data_selector: data
- name: workspace_memberships
  endpoint:
    path: /workspaces//workspace_memberships
    method: GET
    data_selector: compact
- name: workspace_membership
  endpoint:
    path: /workspace_memberships/
    method: GET
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: data
- name: workspace
  endpoint:
    path: /workspaces/
    method: GET
- name: goal_relationship_compact
  endpoint:
    path: /goal-relationships
    method: GET
    data_selector: data
- name: goal_relationship
  endpoint:
    path: /goal-relationships
    method: GET
    data_selector: data
- name: goal_compact
  endpoint:
    path: /goals
    method: GET
    data_selector: .
- name: goal
  endpoint:
    path: /goals
    method: GET
    data_selector: data
- name: custom_field_enum_option
  endpoint:
    path: /custom_fields//enum_options/insert
    method: POST
- name: section_movement
  endpoint:
    path: /projects/{project_id}/sections/insert
    method: POST
    params:
      before_section: '{{ before_section_id }}'
      after_section: '{{ after_section_id }}'
- name: instantiate_project
  endpoint:
    path: /project_templates/instantiateProject
    method: POST
- name: instantiate_task
  endpoint:
    path: /task_templates/instantiateTask
    method: POST
- name: jobs
  endpoint:
    path: /jobs
    method: GET
- name: job_compact
  endpoint:
    path: /job_compact
    method: GET
    data_selector: ''
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: ''
    params: {}
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: ''
    params: {}
- name: project_template
  endpoint:
    path: /project_templates
    method: GET
    data_selector: ''
    params: {}
- name: graph_export
  endpoint:
    path: /graph_exports
    method: GET
    data_selector: ''
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: job
    params: {}
- name: new_project
  endpoint:
    path: /projects
    method: GET
    data_selector: new_project
    params: {}
- name: new_task
  endpoint:
    path: /tasks
    method: GET
    data_selector: new_task
    params: {}
- name: new_project_template
  endpoint:
    path: /project_templates
    method: GET
    data_selector: new_project_template
    params: {}
- name: new_graph_export
  endpoint:
    path: /graph_exports
    method: GET
    data_selector: new_graph_export
    params: {}
- name: AttachedResource
  endpoint:
    data_selector: resource_name
- name: TypeaheadList
  endpoint:
    data_selector: items
- name: memberships
  endpoint:
    path: /memberships
    method: GET
    data_selector: data
- name: form_metadata
  endpoint:
    path: /reference/modal-forms
    method: POST
    data_selector: metadata
    params:
      template: form_metadata_v0
- name: form_field_checkbox
  endpoint:
    path: /reference/modal-forms
    method: POST
    data_selector: options
    params:
      type: checkbox
- name: FormField-Dropdown
  endpoint:
    path: /modal/form/dropdown
    method: POST
    data_selector: options
    params:
      limit: 50
- name: FormField-MultiLineText
  endpoint:
    path: /modal/form/multilinetext
    method: POST
    data_selector: value
    params:
      limit: 3000
- name: FormField-RadioButton
  endpoint:
    path: /modal/form
    method: POST
    data_selector: options
    params:
      is_required: false
      is_watched: false
      type: radio_button
- name: FormField-RichText
  endpoint:
    path: /modal/form
    method: POST
    data_selector: value
    params:
      is_required: false
      is_watched: false
      type: rich_text
- name: single_line_text_field_1
  endpoint:
    path: /FormField-SingleLineText
    method: POST
    data_selector: form_data
    params:
      is_required: true
      is_watched: true
      width: full
- name: static_text_field_1
  endpoint:
    path: /FormField-StaticText
    method: POST
    data_selector: form_data
    params:
      style: default
- name: FormField-Typeahead
  endpoint:
    path: /FormField-Typeahead
    method: GET
    data_selector: value
    params:
      id: typeahead_field_1
      is_required: true
      is_watched: true
      name: Statuses
      type: typeahead
      typeahead_url: https://www.app-server.com/app/typeahead
      width: full
- name: TypeaheadList
  endpoint:
    path: /TypeaheadList
    method: GET
    data_selector: items
- name: AttachedResource
  endpoint:
    path: /AttachedResource
    method: GET
    data_selector: resource_url
    params:
      resource_name: Build the Thing
- name: rule_action
  endpoint:
    path: /action.on_submit_callback
    method: POST
- name: organization_export
  endpoint:
    path: /organization_exports
    method: POST
    data_selector: organization_export
- name: organization_export_status
  endpoint:
    path: /organization_exports/{export_id}
    method: GET
    data_selector: organization_export
- name: organization_export
  endpoint:
    path: /organization_export
    method: GET
    data_selector: organization_export
- name: deprecated_portfolio_membership_compact
  endpoint:
    path: /portfolio_memberships
    method: GET
    data_selector: data
- name: deprecated_portfolio_membership
  endpoint:
    path: /portfolio_memberships
    method: GET
    data_selector: data
- name: portfolio
  endpoint:
    path: /portfolios
    method: GET
    data_selector: data
- name: portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}
    method: GET
    data_selector: data
- name: portfolios
  endpoint:
    path: /portfolios
    method: GET
    data_selector: data
- name: project_brief_compact
  endpoint:
    path: /project_briefs/{project_brief_gid}
    method: GET
    data_selector: data
- name: project_brief
  endpoint:
    path: /project_briefs/{project_brief_gid}
    method: GET
    data_selector: data
- name: project_membership_compact
  endpoint:
    data_selector: project_membership_compact
- name: project_membership
  endpoint:
    path: /project_memberships
    method: GET
    data_selector: .
    params: {}
- name: project_status
  endpoint:
    path: /project-statuses
    method: POST
    data_selector: project_status
- name: project_status
  endpoint:
    path: /project-statuses
    method: DELETE
    data_selector: project_status
- name: project_template
  endpoint:
    path: /reference/project-templates
    method: GET
    data_selector: data
- name: project_template_compact
  endpoint:
    path: /reference/project-templates
    method: GET
    data_selector: data
- name: project_template_creation
  endpoint:
    path: /projects/saveAsTemplate
    method: POST
- name: project_compact
  endpoint:
    path: /reference/projects
    method: GET
    data_selector: ''
- name: project
  endpoint:
    path: /projects/{project_gid}
    method: GET
    data_selector: data
    params:
      opt_fields: gid,resource_type,name,archived,color,created_at,current_status,current_status_update,custom_field_settings,default_view,due_on,html_notes,members,modified_at,notes,privacy_setting,start_on,default_access_level,minimum_access_level_for_customization,minimum_access_level_for_sharing,custom_fields,completed,completed_at,completed_by,followers,owner,team,icon,permalink_url,project_brief,created_from_template,workspace
- name: remove_custom_field_setting_for_portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}/removeCustomFieldSetting
    method: POST
- name: remove_custom_field_setting
  endpoint:
    path: /projects/removeCustomFieldSetting
    method: POST
- name: remove_dependencies_for_task
  endpoint:
    path: /tasks//removeDependencies
    method: POST
- name: remove_dependents_for_task
  endpoint:
    path: /tasks//removeDependents
    method: POST
- name: remove_follower_for_task
  endpoint:
    path: /tasks//removeFollowers
    method: POST
- name: remove_followers_for_project
  endpoint:
    path: /projects//removeFollowers
    method: POST
- name: remove_followers
  endpoint:
    path: /goals//removeFollowers
    method: POST
- name: portfolio_item_removal
  endpoint:
    path: /portfolios/{portfolio_gid}/removeItem
    method: POST
    data_selector: ''
- name: remove_members_from_portfolio
  endpoint:
    path: /portfolios//removeMembers
    method: POST
- name: remove_project_members
  endpoint:
    path: /projects//removeMembers
    method: POST
- name: remove_project_for_task
  endpoint:
    path: /tasks//removeProject
    method: POST
- name: remove_supporting_relationship
  endpoint:
    path: /goals/{goal_gid}/removeSupportingRelationship
    method: POST
- name: remove_tag_for_task
  endpoint:
    path: /tasks/{task_gid}/removeTag
    method: POST
- name: remove_user_from_team
  endpoint:
    path: /teams//removeUser
    method: POST
- name: remove_user_workspace
  endpoint:
    path: /workspaces/removeUser
    method: POST
- name: RanAction
  endpoint:
    data_selector: action_result
    params:
      resources_created:
        resource_name: Build the Thing
        resource_url: https://example.atlassian.net/browse/CP-1
- name: FormMetadata
  endpoint:
    data_selector: metadata
    params:
      fields: []
      on_change_callback: https://www.example.com/on_change
      on_submit_callback: https://www.example.com/on_submit
      submit_button_text: Create New Issue
      title: Create New Issue
      template: form_metadata_v0
- name: FormField-Checkbox
  endpoint:
    path: /modal/formfield/checkbox
    method: POST
    data_selector: options
    params:
      id: checkbox_field_1
      is_required: true
      is_watched: true
      name: Resource name
      type: checkbox
      value:
      - opt-in
- name: FormField-Date
  endpoint:
    path: /modal/formfield/date
    method: POST
    data_selector: value
    params:
      id: date_field_1
      is_required: true
      is_watched: true
      name: Date
      placeholder: 2022-02-01
      type: date
      value: 2022-02-01
- name: FormField-Datetime
  endpoint:
    path: /FormField-Datetime
    method: GET
    data_selector: data
    params:
      is_required: true
      is_watched: true
- name: FormField-Dropdown
  endpoint:
    path: /FormField-Dropdown
    method: GET
    data_selector: data
    params:
      is_required: true
      is_watched: true
- name: FormField-MultiLineText
  endpoint:
    path: /FormField-MultiLineText
    method: POST
    data_selector: modal_form_field
    params:
      id: multi_line_text_field_1
      type: multi_line_text
      is_required: true
      is_watched: true
      name: Resource name
      placeholder: Enter the full title of the resource here
      value: Annual Kick-Off Meeting
- name: FormField-RadioButton
  endpoint:
    path: /FormField-RadioButton
    method: POST
    data_selector: modal_form_field
    params:
      id: radio_button_field_1
      type: radio_button
      is_required: true
      is_watched: true
      name: Resource name
      options:
      - id: radio_option_1
        label: Radio Option 1
        sub_label: '#0000FF'
      value: radio_option_1
- name: rich_text_field_1
  endpoint:
    path: Please review and change your input
    method: rich_text
    data_selector: Annual Kick-Off Meeting
    params:
      is_required: true
      is_watched: true
      name: Resource name
      placeholder: Enter the full title of the resource here
- name: single_line_text_field_1
  endpoint:
    path: Please review and change your input
    method: single_line_text
    data_selector: Annual Kick-Off Meeting
    params:
      is_required: true
      is_watched: true
      name: Resource name
      placeholder: Enter the full title of the resource here
      width: full
- name: static_text_field_1
  endpoint:
    path: Please enter the following details;
    method: static_text
    data_selector: null
    params:
      style: default
- name: FormField-Typeahead
  endpoint:
    path: typeahead_url
    method: POST
    data_selector: items
    params:
      error: Please review and change your input
      id: typeahead_field_1
      is_required: true
      is_watched: true
      name: Statuses
      type: typeahead
      value:
        icon_url: https://example-icon.png
        subtitle: OTP
        title: OTP Team PF
        value: OTP
      width: full
- name: TypeaheadList
  endpoint:
    path: typeahead_url
    method: POST
    data_selector: items
- name: AttachedResource
  endpoint:
    path: resource_url
    method: GET
    params:
      error: No resource matched that input
      resource_name: Build the Thing
      resource_url: https://example.atlassian.net/browse/CP-1
- name: rule_trigger
  endpoint:
    method: POST
- name: search_tasks_for_workspace
  endpoint:
    path: /searchtasksforworkspace
    method: GET
    params:
      limit: 100
- name: section
  endpoint:
    path: /sections
    method: GET
    data_selector: data
- name: section_compact
  endpoint:
    path: /section_compact
    method: GET
    data_selector: data
- name: set_parent_for_task
  endpoint:
    path: /tasks//setParent
    method: POST
- name: status_update
  endpoint:
    method: POST
    data_selector: status_update
- name: status_update
  endpoint:
    method: DELETE
    data_selector: status_update
- name: status_update
  endpoint:
    path: /status_updates
    method: GET
    data_selector: records
- name: story
  endpoint:
    path: /stories
    method: GET
    data_selector: data
- name: story
  endpoint:
    path: /stories
    method: GET
    data_selector: data
    params:
      incremental: created_at
- name: custom_field
  endpoint:
    path: /custom_fields
    method: GET
    data_selector: data
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: data
- name: tag_compact
  endpoint:
    path: /tags/{tag_gid}
    method: GET
    data_selector: null
    params: {}
- name: tag
  endpoint:
    path: /tags/{tag_gid}/details
    method: GET
    data_selector: null
    params: {}
- name: task_template
  endpoint:
    path: /task-templates
    method: GET
    data_selector: ''
- name: task_template
  endpoint:
    path: /task_templates
    method: GET
    data_selector: data
    params:
      incremental: created_at
- name: task
  endpoint:
    data_selector: tasks
- name: taskCompact
  endpoint:
    data_selector: tasks
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: data
    params:
      incremental: modified_at
- name: team_membership_compact
  endpoint:
    path: /team-memberships
    method: GET
    data_selector: data
- name: team_membership
  endpoint:
    path: /team-memberships
    method: GET
    data_selector: data
- name: team_compact
  endpoint:
    path: /teams
    method: GET
    data_selector: data
- name: team
  endpoint:
    path: /teams/{team_gid}
    method: GET
    data_selector: data
- name: time_period_compact
  endpoint:
    data_selector: .
- name: time_period
  endpoint:
    data_selector: .
- name: TimeTrackingEntryCompact
  endpoint:
    path: /services/data/vXX.X/sobjects/TimeTrackingEntryCompact
    method: GET
    data_selector: records
- name: triggerrule
  endpoint:
    path: /rule_triggers/{rule_trigger_gid}/run
    method: POST
- name: user
  endpoint:
    data_selector: gid; name
- name: project
  endpoint:
    data_selector: gid; name
- name: task
  endpoint:
    data_selector: gid; name
- name: project_template
  endpoint:
    data_selector: gid; name
- name: AsanaNamedResource
  endpoint:
    path: /typeahead
    method: GET
    data_selector: .
    params: {}
- name: allocation
  endpoint:
    path: /allocations/{allocation_id}
    method: PUT
    data_selector: data
- name: custom_field
  endpoint:
    path: /custom_fields/{custom_field_gid}
    method: PUT
- name: enum_option
  endpoint:
    path: /enum_options/
    method: PUT
- name: update_goal_metric
  endpoint:
    path: /goals//setMetricCurrentValue
    method: POST
- name: goal_relationship
  endpoint:
    path: /goal_relationships/
    method: PUT
    data_selector: data
- name: goal
  endpoint:
    path: /goals/{goal_gid}
    method: PUT
    data_selector: data
- name: membership
  endpoint:
    path: /memberships/
    method: PUT
- name: portfolio
  endpoint:
    path: /portfolios/{portfolio_gid}
    method: PUT
- name: project_brief
  endpoint:
    path: /project_briefs/{project_brief_id}
    method: PUT
    data_selector: data
- name: project
  endpoint:
    path: /projects/{project_id}
    method: PUT
    data_selector: data
- name: section
  endpoint:
    path: /sections/{section_gid}
    method: PUT
    data_selector: data
- name: story
  endpoint:
    path: /stories/
    method: PUT
    data_selector: null
    params: null
- name: tag
  endpoint:
    path: /tags/{tag_gid}
    method: PUT
    data_selector: data
- name: task
  endpoint:
    path: /tasks/{task_id}
    method: PUT
    data_selector: data
- name: team_update
  endpoint:
    path: /teams/{team_gid}
    method: PUT
- name: time_tracking_entry_update
  endpoint:
    path: /time_tracking_entries/{entry_id}
    method: PUT
- name: webhook
  endpoint:
    path: /webhooks/
    method: PUT
- name: workspace
  endpoint:
    path: /workspaces/{workspace_gid}
    method: PUT
    data_selector: data
- name: user_task_list_compact
  endpoint:
    path: /user_task_list_compact
    method: GET
    data_selector: .
- name: user_task_list
  endpoint:
    path: /user_task_list
    method: GET
    data_selector: .
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: data
- name: current_user
  endpoint:
    path: /users/me
    method: GET
    data_selector: data
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: '-'
    params: {}
- name: widget_metadata
  endpoint:
    path: /widget/metadata
    method: GET
    data_selector: metadata
- name: widgetfield_datetime_with_icon
  endpoint:
    path: /widgetfield/datetime_with_icon
    method: GET
    data_selector: .
- name: widgetfield_pill
  endpoint:
    path: /widgetfield/pill
    method: GET
    data_selector: .
- name: widgetfield_text_with_icon
  endpoint:
    path: /widgetfield/text_with_icon
    method: GET
    data_selector: .
- name: workspace_membership
  endpoint:
    path: /workspace_memberships
    method: GET
    data_selector: null
    params: {}
- name: workspace
  endpoint:
    path: /workspaces
    method: GET
    data_selector: data
- name: organization
  endpoint:
    path: /organizations
    method: GET
    data_selector: data
notes:
- Access to Asana REST API requires a personal access token (PAT)
- Ensure randomized "state" parameter to prevent CSRF
- Respect "expires_at" in query parameters for time-sensitive operations
- Verify "x-asana-request-signature" for request integrity
- Limit of 10 rule actions created per application
- Entry point must be configured before modal form and lookup can be initiated
- Modal form supports 0-20 fields with dynamic capabilities via branching logic
- Modal forms require an on_change_callback for dynamic updating
- Modal forms have on_submit_callback for enabling form submission
- Access restricted to Asana Enterprise+ and Legacy Enterprise tiers
- Authentication requires a Service Account's personal access token
- Personal Access Tokens (PATs) provide the same level of access as the user who generated
  them.
- Service Accounts offer complete access to all data within your Asana account.
- OAuth is recommended for applications requiring multiple users to sign in.
- OpenID Connect allows single sign-on using Asana credentials.
- Uses personal access token for authentication
- Integrates with Google Apps Scripts for automated reporting
- API key is set and stored securely, only accessible within the script.
- Ensure proper handling of API rate limits and authenticate using personal access
  tokens.
- Requires user authentication for accessing data; accuracy depends on user's project
  permissions
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- OAuth is required for apps that wish to be published to Asana's App Directory
- The authentication success message must be initiated from the same origin that receives
  the authentication request
- Developers can subscribe to the changelog to receive notifications
- API features include app component rule actions, webhooks, and the Events API
- Pagination is supported for large data extractions
- External `gid` capped at 1024 characters; data blob capped at 32768 characters
- OAuth authentication needed to access custom external data
- External data set by one OAuth app is invisible to other OAuth apps
- Data access limited to visibility of authenticated user's account
- Use a Service Account for complete workspace data access
- Due to the high volume of API calls, the script may sometimes hit rate limits and
  will set a delay between API calls. It will retry each API call with increasing
  delay until it succeeds or cancels after about 3 minutes.
- Direct value provision for text custom fields and GID for enum custom fields.
- Custom fields can be project-specific or workspace-wide.
- Metadata for custom fields may change, requiring updates in client applications.
- API will send 'Asana-Change' headers with information about upcoming changes
- During the deprecation period, headers 'Asana-Enable' and 'Asana-Disable' control
  feature toggling.
- API queries on very large result sets may have results truncated; applies to all
  objects like projects, tasks, teams
- Use hierarchical queries to avoid hitting limits; break down requests by teams or
  sections
- Requires a developer sandbox for installation and use
- Installation process is shown only once per user; to repeat, must navigate directly
  with full URL including app_client_id
- Personal access token must be valid for API requests
- The system retries requests up to 10 times upon failures before giving up
- Some requests return 'compact' representations to conserve resources
- Full data can be requested by specifying 'opt_fields' in the request
- Endpoint paths use placeholders like {project_gid}, {user_gid} which need to be
  replaced with actual IDs during requests.
- Asana OAuth currently does not support making token requests from a browser for
  security reasons
- Ensure the personal access token, project_gid, task_gid, and workspace_gid are correctly
  set for API calls
- Actions performed by the script are treated as if they were done by the user
- Scripts can do anything the user has access to do
- This feature is currently in beta and expected to change
- Only available in Asana Business and Asana Enterprise
- Requires operations to be performed by an authorized user
- During the beta period, a task ID (GID) must be provided as 'resource' to trigger
  the rule
- Developer console used for managing apps and personal access tokens
- OAuth is the preferred method of authentication for Asana.
- OAuth scopes are in preview and may change before final release in July 2025
- Scopes do not imply inheritance; for instance, 'write' does not include 'read'
- Tasks can be multi-homed across projects or orphaned
- Projects can be public or private within a team
- Subtasks do not inherit projects of their parent tasks
- Up to 5 levels of subtasks are allowed, more levels are not recommended
- No single request can fetch all subtasks for all tasks in a project
- Guest accounts can be used to create bot accounts with restricted access
- Supports OpenID Connect in addition to standard OAuth2, using id_token as response_type
- UserInfo endpoint requires OAuth access token with openid scope
- Apps can be built and shared with Asana users or specifically for an organization
- Apps can integrate with other tools, enhance data about the Work Graph, or automate
  workflows
- Personal Access Token (PAT) is used for initial testing by most developers
- Pagination is mandatory for new features; optional but recommended on older endpoints
  to avoid timeouts
- Offset token expires after some time due to data changes; use promptly
- Personal Access Tokens act like API keys and are used in Authorization header
- Tokens should be treated as sensitive and secured appropriately
- PATs are persistent by default with admin controls available in Enterprise+ tiers
- Authentication requires a personal access token (PAT)
- Library 'asana' supports both Python 2 and Python 3 with potential minor adjustments.
- API uses personal access tokens for quick authorization
- Supports compact representations of objects for efficient data transfer
- API accepts JSON or form-encoded content in requests and returns JSON content in
  all responses.
- Only UTF-8 character encoding is supported for both requests and responses.
- API requests can be made with cURL, Postman, or various client libraries in different
  programming languages.
- API accepts JSON or form-encoded content and returns JSON; supports only UTF-8 encoding
- API requires generating a personal access token (PAT) similar to a password.
- API returns JSON and supports only UTF-8 character encoding for requests and responses.
- Pagination is recommended for requests querying multiple objects.
- Use opt_fields query parameter to specify the exact set of fields to return.
- API uses personal access token for authentication
- Supports CRUD operations on tasks
- Uses offset pagination with 'next_page' structure
- For this request to work correctly, you must replace ACCESS_TOKEN and TASK_GID ('987654321'
  in this example) with your own actual token and task GID, respectively.
- We're using 'opt_fields' as we did previously in order to get a more compact response
  from the API.
- JSON is used for both requests and responses
- UTF-8 character encoding is required for requests and responses
- Standard rate limits vary by domain type; 150 requests per minute for free domains
  and 1500 for paid domains
- The API imposes a limit of 60 requests per minute specifically for the search API
- Concurrent job limits are set at 5 and include actions such as duplication and CSV
  imports from the Asana web app
- Concurrent request limits are 50 for GET requests and 15 for POST, PUT, PATCH, DELETE
  methods
- Cost limits are based on the computational cost of API requests which is roughly
  proportional to the number of links traversed in the object graph
- Treat rich text as arbitrary HTML and ensure that your code does not break when
  it encounters a tag not on the current list
- Apps should use parsers and display logic that is forward compatible with unknown
  future rich text formats.
- Invalid XML, as well as unsupported tags, will be rejected with a `400 Bad Request`
  error.
- The Asana Ruby SDK is no longer supported and does not receive updates.
- Script actions can only make API calls to Asana's API; third-party APIs are not
  supported.
- Script actions are rate limited per user of the "Scripts by Asana" app.
- Super Admin on Enterprise+ can block the "Scripts by Asana" app.
- Script actions have a timeout of 60s.
- Enterprise and Enterprise+ tiers have no caps on the amount of rules a workspace
  can run.
- Supports only Javascript via Node v3 client library.
- Script actions in Asana allow for custom Node.js scripts to automate processes
- Available only to Enterprise and Enterprise+ customers
- Personal access tokens (PATs) can only be used in workspaces where the user is a
  member
- Personal Access Token (PAT) used for authentication; treat like username and password
- Bot must be added to each project it needs to work in if it's a guest member
- 'Deprecations in progress: moving to string GIDs and changes in sections functionality'
- API does not support pagination for task search results; max return limit is 100
- Editing published apps is restricted; requires duplicating and resubmitting for
  review.
- Requires OAuth authentication
- Compatible with MCP clients that support SSE-based servers
- Bot accounts are used to authenticate actions in Asana as a machine rather than
  a human.
- Webhooks require a server to be accessible over the internet at all times to receive
  events
- Webhooks are designed for at-most-once delivery; missing events are possible
- If a server does not respond within 10 seconds, Asana will retry for up to 24 hours
- Webhooks may deliver an empty 'events' array as a heartbeat check.
- Events delivery can be delayed, typically under a minute but up to 10 minutes; in
  exceptional cases more than 10 minutes.
- Story consolidation may result in the replacement of multiple intermediate stories
  with a single final story.
- Webhook connections are deleted if no successful response to a heartbeat after 24
  hours.
- Verify each webhook event request to ensure it is from Asana by comparing the X-Hook-Signature
  in the request header with a signature you generate using the X-Hook-Secret and
  the request body.
- Access to this API is only available through a service account in an Enterprise+
  domain.
- Initial API request without a sync token behaves as if the sync token is expired.
- API returns a new sync token in responses for subsequent synchronization.
- Asana restricts each sync token to a maximum of 1000 events; if exceeded, 'has_more: true'
    indicates more events are available
- Asana's API does not provide past versions of an object; only the most recent version
  is retrievable
- Recommended to poll at least every few minutes to ensure all events are captured
- There may be a brief interval, typically under a minute but up to ten minutes, between
  a change in Asana and its availability in events
- Sync token expires after 4 hours of inactivity, leading to potential loss of events
  if not polled frequently enough
- Uses OAuth for authentication, recommended for apps intended for wide distribution
- PAT or Service Account token limits app usage within your own organization
- Requires 'tasks:write' scope for operation
- A task can have at most 20 projects multi-homed to it.
- Data is read-only; no write or update operations available
- Batch endpoint returns specific `Location` header only with a `201 Created` status.
- File size limit is enforced to 100MB on attachments
- Non-ASCII characters in file names should be URL-encoded
- Custom field's name must be unique within a workspace; conflicts with existing task
  properties are not allowed
- 'Custom field type must be one of: text, enum, multi_enum, number, date, or people'
- A custom field can have at most 500 enum options, including disabled options.
- Locked custom fields can only have enum options added by the user who locked the
  field.
- 'Deprecated: new integrations should prefer the /status_updates route.'
- Only supports creation of comment stories
- Authored by the currently authenticated user and timestamped upon receipt by the
  server
- Every tag is required to be created in a specific workspace or organization, and
  this cannot be changed once set.
- Every task is required to be created in a specific workspace, and this workspace
  cannot be changed once set
- Requires async handling to confirm webhook during POST request
- Invalid hostnames like localhost will receive a 403 Forbidden status code
- Deprecated: new integrations should prefer the /status_updates/{status_gid} route.
- Deleted tasks are moved to the user's trash and can be recovered within 30 days.
  After this period, they are permanently deleted.
- Asynchronous duplication of projects
- Events are retrievable for 24 hours after being processed
- Sync tokens expire after 24 hours or sooner depending on load
- Events are retrievable from the event stream for 24 hours after being processed.
- Sync tokens expire after 24 hours or sooner depending on the load.
- If a sync token is reused or used backwards, it might not be valid.
- The result of the export provides a presigned S3 URL that expires in 1 hour
- The file is gzipped and in JSONL format
- Requests return "compact" attachment objects by default
- Only available for Asana Enterprise+ and Legacy Enterprise tiers
- Data is deleted after 90 days; use a SIEM tool for permanent storage
- The resource returned will be the resource that triggered the event, which may be
  different from the one that the events were requested for.
- Requires OAuth2 scope `goals:read` for access
- Default response is "compact" portfolio objects; additional fields can be included
  via input/output options
- Requires 'portfolios:read' scope to access the portfolio endpoint.
- This endpoint is deprecated in favor of the new Get memberships endpoint
- This endpoint is deprecated in favor of the new Get a membership endpoint.
- Requires scope `projects:read` to access this endpoint
- Returns compact project objects by default; customization of the response is available
- Returns compact project records by default; additional fields can be included through
  input/output options
- Endpoint may timeout for large domains; prefer using /teams/{team_gid}/projects
  for such cases.
- Deprecated: new integrations should prefer the /status_updates route.
- This endpoint may timeout for large domains; suggested to filter by team
- 'Deprecation notice: cross-workspace access changing, opt-out by default starting
  June 2025'
- 'Deprecation notice: Cross-workspace access changing; opt-out by default starting
  June 2025'
- Endpoint has an additional rate limit; each field counts especially high against
  cost limits
- Requires scope `tasks:read` for access
- Endpoint returns compact task objects by default
- Endpoint returns compact task objects by default; additional fields can be included
  through input/output options.
- Access control is enforced; user's private tasks will be filtered out if not accessible
- Both complete and incomplete tasks are returned by default
- Endpoint returns compact team objects by default
- Requires OAuth2 authentication with scope 'teams:read'
- Required scope: teams:read
- Results are sorted alphabetically
- Default response type is "compact" user objects
- Return compact user objects by default; can be customized for more fields
- 'Deprecation notice: cross-workspace access changing; Starting June 2025, this behavior
  is opt-out by default.'
- Required scope `tasks:read` for accessing user task list data.
- Requires OAuth2 authentication with scope 'workspaces:read' to access workspaces
  data
- Returns compact workspace objects by default; additional fields can be included
  through customization options.
- Creates and returns a job to handle project instantiation asynchronously
- Recommended to first get a project template and use the 'gid' from 'requested_dates'
  for instantiation
- Request body differs if workspace is an organization
- Only the creator of a duplication process can access the duplication status of the
  new object
- Intermittent states of newly-created objects may vary until the job status is 'succeeded'
- Endpoint path is a placeholder and is set during app configuration
- 10-second timeout policy for requests
- Endpoint only available to Service Accounts of an Enterprise+ organization
- Export process involves creating an export request, polling until state is 'finished',
  and then downloading from 'download_url'
- Download URLs are temporary and expire 1 hour after generation
- Uses OAuth 2.0 for authentication
- Requires project or portfolio GID for specific data access
- Supports pagination through 'next_page' token
- Projects in organizations are shared with a single team
- Non-organization workspaces do not have teams
- Adding followers to a project will add them as members if they are not already
- Removing followers from a project will not affect membership
- Endpoints require authentication with OAuth2.
- All requests should include the 'opt_fields' param to specify which fields to return.
- Requests to add/remove followers return the complete updated goal record
- Endpoints requires Asana premium access
- Pagination does not guarantee stable order; manual sorting necessary
- Data indexing delay between 10 to 60 seconds
- Uses OAuth2 with refresh token â€” requires setup of connected app in Asana
- Task templates are only available to Premium, Business, and Enterprise customers
- Guests cannot edit or create task templates
- Uses OAuth2 with refresh token; ensure to configure the connected app correctly
- Pagination uses cursor method with 'next_page' field
- Date and time fields follow ISO 8601 format
- Requires OAuth for accessing or modifying external fields
- Certain fields like assignee_status are deprecated and should not be relied upon
- The result set is limited to a single page of results with a maximum size and cannot
  be paginated
- Search results are not guaranteed to be accurate or exhaustive
- Locked custom fields can only be updated by the user who locked the field
- Only the fields provided in the `data` block will be updated; any unspecified fields
  will remain unchanged.
- Returns the complete updated project brief record.
- Only the 'name' field can be updated in the section
- Only comment stories can have their text updated; only comment stories and attachment
  stories can be pinned.
- Only specified fields in the data block are updated; unspecified fields remain unchanged.
- Webhook filters are completely overwritten on update
errors:
- 422: State mismatch in OAuth callback
- 400: Signature mismatch in API request to app component endpoints
- 'Error: Unable to fetch data. Please verify your API key and try again.'
- 'Error: Please set your personal access token (pat) before running the script.'
- 400 Bad Request: Ensure actions are valid and not empty; avoid unsupported operations
    like uploads or SCIM.
- 429 Too Many Requests: Reduce the number of actions or frequency of requests to
    comply with rate limits.
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- QUERY_TIMEOUT: Break down filters or add selectivity
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- success: Use window.opener.postMessage to communicate authentication success
- 400 Bad Request: Check documentation and syntax of your request
- 401 Unauthorized: Provide a valid authentication token; check if app is disabled
    in workspace
- 402 Payment Required: Feature available only to premium organizations and workspaces
- 403 Forbidden: Authentication and request syntax valid but access to requested resources
    is denied
- 404 Not Found: Check if the method, path, or object exists
- 429 Too Many Requests: Exceeded rate limits; see rate limiting documentation
- 451 Unavailable For Legal Reasons: Request blocked for legal reasons, possibly due
    to embargoed IP addresses
- 500 Internal Server Error: Problem on Asana's end; use provided phrase when contacting
    support
- code: 400
  message: Truncated data set
- 'Installation process only shown once per user: Ensure to capture all necessary
  information during the first installation process'
- 400: Something went wrong with the request. Check your portfolio GID
- 401: You are not authorized to get this portfolio
- 403: You are not authorized to get this portfolio
- 404: We couldn't find that portfolio
- INVALID_JSON: Check JSON body for proper format before making a POST request
- RESULT_TOO_LARGE: Use pagination to handle large result sets
- 401 Unauthorized: Check if the personal access token is valid or expired
- Logs have a character limit of 5,000 and will be truncated if they exceed this limit.
- 400: Invalid payload format
- 401: A valid access token was not provided
- 404: The trigger or task was not found
- 429: User has sent too many requests in a given amount of time
- 500: Internal server error
- 429 Too Many Requests: Reduce the number of requests made in a short period of time
- 400 Bad Request: Check for omitted task ID in 'resource', ensure task ID belongs
    to the correct project, or validate JSON format
- 401 Unauthorized: Verify appropriate and up-to-date credentials
- 404 Not Found: Confirm correct 'trigger_identifier' or existence of task ID
- 403 Unauthorized: Ensure required scopes are requested and granted
- Unauthorized: Ensure correct OAuth scopes and token validity
- 400: Handle bad request errors
- Something went wrong. Try again later.
- 200 OK: The request was successful; check response data for details.
- 201 Created: Indicates that the request was successful and led to the creation of
    a resource.
- 200: Successful retrieval of data
- '200 OK: Standard response for successful HTTP requests.'
- '201 Created: The request has been fulfilled and has resulted in one or more new
  resources being created.'
- 200 OK: Successful request
- 201 Created: Resource successfully created
- 404 Not Found: The specified resource was not found
- 200 OK: Successful operation; check method for specific details
- 429 Too Many Requests: Respect the Retry-After header to manage request rate appropriately
- 429 Too Many Requests: Requests may be rejected if computational cost limits are
    exceeded; the Retry-After header indicates when to retry
- 400 Bad Request: Check if GID or href is provided correctly
- 400 Bad Request: Invalid XML or unsupported tags in the rich text.
- 400 Bad Request: Provide either a GID or a valid href
- Generic success message and runtime result shown on script success.
- Errors show specified logs.
- Unauthorized: Check if the app is shared with the workspace or if the PAT is correctly
    configured
- RATE_LIMIT_EXCEEDED: Reduce request frequency or implement retry with backoff
- Something went wrong. Try again later.: Check server response properties match schema;
    Validate CORS settings
- App server endpoints are not being triggered: Ensure endpoint paths match those
    configured in developer console
- Unable to trigger installation process again: Use the installation URL with app_client_id
- 'Rule actions: app server is not receiving a response back from Asana': Verify app
    server hosting
- App does not appear in the app gallery of my organization: Add app to organization
    via developer console settings
- Unauthorized: Check if app credentials are correctly configured or if OAuth permissions
    are set properly.
- Internal Server Error: Delete local ~/.mcp-auth directory or re-authenticate if
    necessary
- Delivery retry: If an error status code is received or the request times out, delivery
    retries occur with exponential backoff.
- Webhook deletion: If unable to deliver a message for 24 hours or if the webhook
    resource is deleted, the webhook will be automatically deleted after 72 hours.
- Webhook stopped receiving events: Respond to heartbeat events and re-establish a
    webhook connection if no response is received after 24 hours.
- Webhook seems to show duplicate events: Implement logic to batch or handle events
    within a defined timeframe to reduce the appearance of duplicates.
- 412 Precondition Failed: Sync token invalid or too old; fetch full dataset and use
    new sync token.
- 412: Sync token expired after 4 hours of inactivity; subsequent API call will return
    a new token
- 401 Unauthorized: Ensure correct use of Service Account's personal access token
- 'Error with non-ASCII filenames: Ensure filenames are URL-encoded'
- 403 Forbidden: Invalid hostnames like localhost not allowed
- 401 Unauthorized: Check your access token or API key validity
- 404 Not Found: The requested custom field setting does not exist, check the custom_field_gid
- 401 Unauthorized: Ensure the 'tasks:delete' scope is enabled for your OAuth token.
- 412 Precondition Failed: Indicates that the sync token is either invalid or expired
- '412 Precondition Failed: Sync token is invalid or expired. Re-crawl data or request
  a new sync token.'
- null: Check for 'next_page' with no further events
- BadRequest: Illegal or malformed request.
- Forbidden: Access forbidden.
- InternalServerError: Internal server error.
- NotFound: Not found.
- Unauthorized: Authorization required.
- BadRequest:
    error: Illegal or malformed request.
- 403 Forbidden: Access forbidden
- 500 InternalServerError: Internal server error
- 404 NotFound: Not found
- 401 Unauthorized: Authorization required
- 401 Unauthorized: Check OAuth credentials or token expiration
- 429 Too Many Requests: Implement retry logic with exponential backoff
- BadRequest:
    description: Illegal or malformed request.
- 403 Forbidden: Access forbidden.
- 500 InternalServerError: Internal server error.
- 404 NotFound: Not found.
- 401 Unauthorized: Authorization required.
- 429 Too Many Requests: Monitor and adjust request frequency to avoid rate limits
- 402 Payment Required: Ensure the user has premium status in Asana
- 500 Internal Server Error: Contact support or retry request
- 429 Too Many Requests: Implement backoff and retry mechanisms
- 401 Unauthorized: Check OAuth credentials and scopes
- 403 Forbidden: Ensure API key or token has necessary permissions
- 400: Responds with a 400 status code if no existing metric's current_number_value
    exists
auth_info:
  mentioned_objects:
  - state
  - FormMetadata
  - Service Account
  - Personal Access Token
  - OAuth
  - OpenID Connect
  - Bearer token
  - Authentication URL
  - Changelog
  - Service Account token
  - personal_access_token
  - PERSONAL_ACCESS_TOKEN
  - OAuth client libraries
  - Scripts by Asana app
  - node-asana
  - Asana API resources
  - Personal Access Tokens
  - Developer Console
  - Configuration
  - ApiClient
  - UsersApi
  - OAuth servers
  - OAuth libraries
  - OAuth Permission scopes
  - client_id
  - client_secret
  - OAuth scopes
  - Auth URL
  - Access Token URL
  - memberships
  - num_subtasks
  - JSON Web Token
  - ID Token
  - workspace_gid
  - developer console
  - attachment
  - WebView
  - Personal access tokens
  - PersonalAccessToken
  - OAuth application
  - PAT
  - Personal Access Token (PAT)
  - task
  - followers
  - Enterprise customers
  - ASANA_PAT
  - workspace
  - team
  - CustomFieldSetting
  - attachments:read
  - tasks:read
  - OauthToken
  - goals:read
  - time_periods:read
  - portfolios:read
  - projects:read
  - project_templates:read
  - custom_field_settings
  - OAuthToken
  - teams:read
  - OAuth Scopes
  - Service Accounts
  - OAuth2
  - Permissions
  - AccessControl
  - AuthProvider
  - NamedCredential
  - TagCompact
  - Tag
  - Task
  - TeamMembershipCompact
  - TeamMembership
  - api token
client:
  base_url: https://app.asana.com/api/1.0
  auth:
    type: apikey
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://app.asana.com/api/1.0
    client_id: '{{ dlt.secrets[''asana_client_id''] }}'
    client_secret: '{{ dlt.secrets[''asana_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''asana_refresh_token''] }}'
    scope: users:read
  headers:
    Accept: application/json
    Authorization: Bearer {{ dlt.secrets['pat'] }}
    Asana-Change: name={change_name};info={change_info_url}
    Asana-Enable: example_features
    Asana-Disable: example_feature
    Content-Type: application/json
    asana-enable: new_goal_memberships
    code_challenge_method: S256
    defaultHeaders:
      asana-enable: new_sections,string_ids
    X-Hook-Secret: '{{ X-Hook-Secret }}'
    X-Hook-Signature: SHA256 HMAC
  paginator:
    type: none
    cursor_path: next_page
    cursor_param: next
    page_size_param: limit
    default_page_size: 50
source_metadata: null
