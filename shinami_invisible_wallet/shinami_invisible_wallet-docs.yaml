resources:
- name: createSession
  endpoint:
    path: /sui/key/v1
    method: POST
    data_selector: result
    params: {}
- name: createWallet
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: getWallet
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: setBeneficiary
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params:
      method: shinami_walx_setBeneficiary
- name: unsetBeneficiary
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params:
      method: shinami_walx_unsetBeneficiary
- name: getBeneficiary
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params:
      method: shinami_walx_getBeneficiary
- name: signTransactionBlock
  endpoint:
    path: /shinami_wal_signTransactionBlock
    method: POST
    data_selector: result
    params: {}
- name: signPersonalMessage
  endpoint:
    path: /shinami_wal_signPersonalMessage
    method: POST
    data_selector: result
    params: {}
- name: executeGaslessTransactionBlock
  endpoint:
    path: /shinami_wal_executeGaslessTransactionBlock
    method: POST
    data_selector: result
    params: {}
- name: accounts
  endpoint:
    path: /reference/accounts
    method: GET
- name: blocks
  endpoint:
    path: /reference/blocks
    method: GET
- name: transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: sui_node
  endpoint:
    path: /sui/node/v1
    method: GET
- name: funds
  endpoint:
    path: /aptos/gas/funds
    method: GET
- name: sponsorship_insights
  endpoint:
    path: /aptos/gas/sponsorship_insights
    method: GET
- name: completed_transactions
  endpoint:
    path: /aptos/gas/completed_tx
    method: GET
- name: api_insights
  endpoint:
    path: /aptos/gas/insights
    method: GET
- name: current_token_ownerships_v2
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.current_token_ownerships_v2
- name: current_token_ownerships
  endpoint:
    path: /aptos/graphql/v1
    method: POST
    data_selector: data
    params: {}
- name: account_info
  endpoint:
    path: /aptos/node/v1/accounts/{accountAddress}
    method: GET
    data_selector: data
    params: {}
- name: fund
  endpoint:
    path: /gas/fund
    method: GET
    data_selector: fundDetails
    params: {}
- name: funds
  endpoint:
    path: /getFund
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /submitTransaction
    method: POST
    data_selector: records
    params: {}
- name: Invisible Wallet
  endpoint:
    path: /api/invisible-wallet
    method: POST
    data_selector: data
    params: {}
- name: sponsorAndSubmitTx
  endpoint:
    path: /sponsorAndSubmitTx
    method: POST
    data_selector: pendingTx
    params: {}
- name: create_collection
  endpoint:
    path: /services/data/vXX.X/collections
    method: POST
    data_selector: records
    params: {}
- name: mint_nft
  endpoint:
    path: /services/data/vXX.X/mint
    method: POST
    data_selector: records
    params: {}
- name: modify_nft
  endpoint:
    path: /services/data/vXX.X/modify
    method: POST
    data_selector: records
    params: {}
- name: account_balance
  endpoint:
    path: /aptos/node/v1/accounts/{address}/balance/{asset_type}
    method: GET
    data_selector: balance
- name: current_fungible_asset_balances
  endpoint:
    path: /
    method: POST
    data_selector: data.current_fungible_asset_balances
    params: {}
- name: fungible_asset_metadata
  endpoint:
    path: /
    method: POST
    data_selector: data.fungible_asset_metadata
    params: {}
- name: transaction_block
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: gas_getFund
  endpoint:
    path: /reference/gas-station-api#gas_getfund
    method: GET
    data_selector: data
    params: {}
- name: clockMoveCallGaslessTransactionOfflineBuildManualBudget
  endpoint:
    path: /reference/gas-station-api#gas_sponsortransactionblock
    method: POST
    data_selector: transaction
    params:
      gasBudget: 15000000
- name: sponsored_transaction
  endpoint:
    path: /sui/gas
    method: POST
    data_selector: sponsoredTransaction
    params: {}
- name: invisible_wallet
  endpoint:
    path: /invisible_wallet
    method: POST
    data_selector: wallet
    params: {}
- name: transaction
  endpoint:
    path: /api/add/tx
    method: POST
    data_selector: data
    params: {}
- name: admin_wallet
  endpoint:
    path: /api/admin/wallet
    method: GET
    data_selector: address
- name: mint_admin_cap
  endpoint:
    path: /api/heroes/mint/tx
    method: POST
    data_selector: ObjectId
    params:
      incremental: ObjectId
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transaction
  endpoint:
    path: /transaction/build
    method: POST
- name: getCoinMetadata
  endpoint:
    path: /reference/sui-json-rpc-read-api-objects-coins#suix_getcoinmetadata
    method: GET
    data_selector: result
    params: {}
- name: getTotalSupply
  endpoint:
    path: /reference/sui-json-rpc-read-api-objects-coins#sui_gettotalsupply
    method: GET
    data_selector: result
    params: {}
- name: coins
  endpoint:
    path: /reference/sui-json-rpc-read-api-objects-coins
    method: GET
    data_selector: result.data
    params: {}
- name: accounts
  endpoint:
    path: /reference/get_account
    method: GET
- name: blocks
  endpoint:
    path: /reference/get_block_by_height
    method: GET
- name: transactions
  endpoint:
    path: /reference/get_transactions
    method: GET
- name: account
  endpoint:
    path: /accounts/{address}
    method: GET
    data_selector: object
- name: account_resources
  endpoint:
    path: /accounts/{address}/resources
    method: GET
    data_selector: array of objects
    params:
      ledger_version: string
      start: string
      limit: uint16
- name: get_account_balance
  endpoint:
    path: /aptos/node/v1/accounts/{address}/balance/{asset_type}
    method: GET
    data_selector: uint64
    params:
      ledger_version: latest
- name: account_modules
  endpoint:
    path: /accounts/{address}/modules
    method: GET
- name: account_resource
  endpoint:
    path: /accounts/{address}/resource/{resource_type}
    method: GET
    data_selector: data
    params:
      ledger_version: ''
- name: account_module
  endpoint:
    path: /aptos/node/v1/accounts/{address}/module/{module_name}
    method: GET
    data_selector: object
    params:
      ledger_version: latest
- name: blocks_by_height
  endpoint:
    path: /blocks/by_height/{block_height}
    method: GET
    data_selector: transactions
- name: blocks_by_version
  endpoint:
    path: /blocks/by_version/{version}
    method: GET
    params:
      with_transactions: 'false'
- name: events
  endpoint:
    path: /aptos/node/v1/accounts/{address}/events/{creation_number}
    method: GET
    data_selector: array of objects
- name: events_by_event_handle
  endpoint:
    path: /aptos/node/v1/accounts/{address}/events/{event_handle}/{field_name}
    method: GET
- name: info
  endpoint:
    path: /info
    method: GET
- name: check_basic_node_health
  endpoint:
    path: /node/v1/-/healthy
    method: GET
- name: ledger_info
  endpoint:
    path: /
    method: GET
    data_selector: object
    params: {}
- name: table_item
  endpoint:
    path: /tables/{table_handle}/item
    method: POST
- name: get_raw_table_item
  endpoint:
    path: /tables/{table_handle}/raw_item
    method: POST
    data_selector: object
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: submit_transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: object
    params: {}
- name: transaction_by_hash
  endpoint:
    path: /transactions/by_hash/{txn_hash}
    method: GET
    data_selector: pending_transaction
    params: {}
- name: wait_transaction_by_hash
  endpoint:
    path: /aptos/node/v1/transactions/wait_by_hash/{txn_hash}
    method: GET
- name: get_transaction_by_version
  endpoint:
    path: /transactions/by_version/{txn_version}
    method: GET
- name: account_transactions
  endpoint:
    path: /accounts/{address}/transactions
    method: GET
    data_selector: array of objects
    params:
      start: string
      limit: uint16
- name: account_transaction_summaries
  endpoint:
    path: /accounts/{address}/transaction_summaries
    method: GET
    data_selector: array of objects
- name: execute_view_function
  endpoint:
    path: /view
    method: POST
- name: pendingTransaction
  endpoint:
    path: /mempool/pendingTransaction
    method: GET
    data_selector: result.pendingTransaction
    params: {}
- name: getFund
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: result
    params: {}
- name: key_createSession
  endpoint:
    path: /key/v1
    method: POST
    data_selector: result
    params: {}
- name: wal_createWallet
  endpoint:
    path: /wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: wal_executeGaslessTransaction
  endpoint:
    path: /aptos/wallet/v1
    method: POST
    data_selector: params
    params: {}
- name: initialize_wallet
  endpoint:
    path: /wal_initializeWalletOnChain
    method: POST
    data_selector: result
    params: {}
- name: create_wallet
  endpoint:
    path: /wal_createWalletOnChain
    method: POST
    data_selector: result
    params: {}
- name: get_wallet
  endpoint:
    path: /wal_getWallet
    method: POST
    data_selector: result
    params: {}
- name: sign_transaction
  endpoint:
    path: /wal_signTransaction
    method: POST
    data_selector: result
    params: {}
- name: events
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params:
      transaction_digest: <TransactionDigest>
- name: transaction_block
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      digest: <TransactionDigest>
      options: <TransactionBlockResponseOptions>
- name: query_events
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result.data
    params:
      query: '{{query}}'
      cursor: '{{cursor}}'
      limit: '{{limit}}'
      descending_order: '{{descending_order}}'
- name: total_transaction_blocks
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: transaction_block
  endpoint:
    path: /transaction-block
    method: GET
    data_selector: transaction
    params: {}
- name: transaction_blocks
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params:
      digests: <TransactionDigest>
      options: <TransactionBlockResponseOptions>
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: result
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: object_changes
  endpoint:
    path: /object_changes
    method: GET
    data_selector: objectChanges
    params: {}
- name: transaction_data
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transaction_block
  endpoint:
    path: /api/transaction_blocks
    method: GET
    data_selector: Vec<SuiTransactionBlockResponse>
- name: transaction_block
  endpoint:
    path: /sui_getTotalTransactionBlocks
    method: GET
    data_selector: data
    params: {}
- name: transaction_blocks
  endpoint:
    path: /suix_queryTransactionBlocks
    method: POST
    data_selector: data
    params:
      limit: 50
- name: sui_getObject
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result.data
    params: {}
- name: sui_multiGetObjects
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: dynamic_fields
  endpoint:
    path: /suix_getDynamicFields
    method: POST
    data_selector: result.data
    params:
      limit: 50
- name: owned_objects
  endpoint:
    path: /suix_getOwnedObjects
    method: POST
    data_selector: result.data
    params: {}
- name: balance
  endpoint:
    path: /suix_getBalance
    method: POST
    data_selector: result
    params: {}
- name: all_balances
  endpoint:
    path: /suix_getAllBalances
    method: POST
    data_selector: result
    params: {}
- name: sui_tryGetPastObject
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: sui_tryMultiGetPastObjects
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: suix_getDynamicFieldObject
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: total_supply
  endpoint:
    path: /suix_getTotalSupply
    method: POST
    data_selector: result
    params:
      coinType: 0x2::sui::SUI
- name: getCoins
  endpoint:
    path: /suix_getCoins
    method: POST
    data_selector: result.data
    params:
      owner: owner
      coin_type: coin_type
      cursor: cursor
      limit: limit
- name: getAllCoins
  endpoint:
    path: /suix_getAllCoins
    method: POST
    data_selector: result.data
    params:
      owner: owner
      cursor: cursor
      limit: limit
- name: getCoinMetadata
  endpoint:
    path: /suix_getCoinMetadata
    method: POST
    data_selector: result
    params:
      coinType: coinType
- name: protocol_config
  endpoint:
    path: /sui/getProtocolConfig
    method: POST
    data_selector: result
    params:
      version: '68'
- name: transaction_costs
  endpoint:
    path: /v1/transaction_costs
    method: GET
    data_selector: result.attributes
    params: {}
- name: resolveNameServiceNames
  endpoint:
    path: /suix_resolveNameServiceNames
    method: POST
    data_selector: result.data
    params:
      address: string
      cursor: string
      limit: integer
      format: string
- name: getChainIdentifier
  endpoint:
    path: /sui_getChainIdentifier
    method: POST
    data_selector: result
    params: {}
- name: getCheckpoint
  endpoint:
    path: /sui_getCheckpoint
    method: POST
    data_selector: result
    params:
      id: string
- name: getCheckpoints
  endpoint:
    path: /sui_getCheckpoints
    method: POST
    data_selector: result
    params:
      cursor: BigInt_for_uint64
      limit: uint
      descending_order: boolean
- name: getLatestCheckpointSequenceNumber
  endpoint:
    path: /sui_getLatestCheckpointSequenceNumber
    method: POST
    data_selector: result
    params: {}
- name: suix_resolveNameServiceAddress
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: sui_getMoveFunctionArgTypes
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: sui_getNormalizedMoveFunction
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: sui_getNormalizedMoveModule
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: sui_getNormalizedMoveModulesByPackage
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: sui_getNormalizedMoveStruct
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: protocol_config
  endpoint:
    path: /protocol/config
    method: GET
    data_selector: attributes
    params: {}
- name: CommitteeInfo
  endpoint:
    path: /suix_getCommitteeInfo
    method: POST
    data_selector: result
    params:
      epoch: <BigInt_for_uint64>
- name: LatestSuiSystemState
  endpoint:
    path: /suix_getLatestSuiSystemState
    method: POST
    data_selector: result
    params: {}
- name: ReferenceGasPrice
  endpoint:
    path: /suix_getReferenceGasPrice
    method: POST
    data_selector: result
    params: {}
- name: Stakes
  endpoint:
    path: /suix_getStakes
    method: POST
    data_selector: result
    params:
      owner: <SuiAddress>
- name: StakesByIds
  endpoint:
    path: /suix_getStakesByIds
    method: POST
    data_selector: result
    params:
      staked_sui_ids: <[ObjectID]>
- name: ValidatorsApy
  endpoint:
    path: /suix_getValidatorsApy
    method: POST
    data_selector: result
    params: {}
- name: submit_batch_transactions
  endpoint:
    path: /aptos/node/v1/transactions/batch
    method: POST
- name: sui_executeTransactionBlock
  endpoint:
    path: /sui_executeTransactionBlock
    method: POST
    data_selector: result
    params: {}
- name: dry_run_transaction_block
  endpoint:
    path: /sui_dryRunTransactionBlock
    method: POST
    data_selector: result
    params: {}
- name: execute_transaction_block
  endpoint:
    path: /sui_executeTransactionBlock
    method: POST
    data_selector: result
    params: {}
- name: sui_devInspectTransactionBlock
  endpoint:
    path: /sui/node/v1
    method: POST
    data_selector: result
    params: {}
- name: simulate_transaction
  endpoint:
    path: /aptos/node/v1/transactions/simulate
    method: POST
- name: encode_submission
  endpoint:
    path: /transactions/encode_submission
    method: POST
- name: unsafe_requestAddStake
  endpoint:
    path: /unsafe_requestAddStake
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_requestWithdrawStake
  endpoint:
    path: /unsafe_requestWithdrawStake
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_splitCoin
  endpoint:
    path: /unsafe_splitCoin
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_splitCoinEqual
  endpoint:
    path: /unsafe_splitCoinEqual
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_transferObject
  endpoint:
    path: /unsafe_transferObject
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_transferSui
  endpoint:
    path: /unsafe_transferSui
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_batchTransaction
  endpoint:
    path: /sui/node/v1/unsafe_batchTransaction
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_mergeCoins
  endpoint:
    path: /sui/node/v1/unsafe_mergeCoins
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_moveCall
  endpoint:
    path: /sui/node/v1/unsafe_moveCall
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_pay
  endpoint:
    path: /sui/node/v1/unsafe_pay
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_payAllSui
  endpoint:
    path: /sui/node/v1/unsafe_payAllSui
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_paySui
  endpoint:
    path: /sui/node/v1/unsafe_paySui
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: unsafe_publish
  endpoint:
    path: /sui/node/v1/unsafe_publish
    method: POST
    data_selector: TransactionBytes
    params: {}
- name: estimate_gas_price
  endpoint:
    path: /aptos/node/v1/estimate_gas_price
    method: GET
    data_selector: object
- name: event
  endpoint:
    path: /suix_subscribeEvent
    method: POST
    data_selector: params
- name: transaction
  endpoint:
    path: /suix_subscribeTransaction
    method: POST
    data_selector: params
- name: transaction
  endpoint:
    path: /suix_subscribeTransaction
    method: POST
    data_selector: result
    params: {}
- name: event
  endpoint:
    path: /suix_subscribeEvent
    method: POST
    data_selector: result
    params: {}
- name: transaction
  endpoint:
    path: /subscribeTransaction
    method: POST
    data_selector: transactionDigest
- name: gas_fund
  endpoint:
    path: /sui/gas/v1
    method: POST
    data_selector: result
    params: {}
- name: getOrCreateZkLoginWallet
  endpoint:
    path: /sui/zkwallet/v1
    method: POST
    data_selector: result
    params: {}
- name: account
  endpoint:
    path: /accounts/{address}
    method: GET
    data_selector: object
    params: {}
- name: execute_view_function
  endpoint:
    path: /view
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: table_item
  endpoint:
    path: /tables/{table_handle}/item
    method: POST
    data_selector: item
    params:
      ledger_version: latest
- name: events_by_creation_number
  endpoint:
    path: /aptos/node/v1/accounts/{address}/events/{creation_number}
    method: GET
    data_selector: events
    params: {}
- name: blocks
  endpoint:
    path: /blocks/by_height/{block_height}
    method: GET
    data_selector: object
    params:
      with_transactions: boolean
- name: pendingTransaction
  endpoint:
    path: /transactions/pending
    method: GET
    data_selector: pendingTransaction
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: transactionSigningMessage
    params: {}
- name: gas_getFund
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: gas_encodeAndSponsorTransaction
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: pendingTransaction
  endpoint:
    path: /pendingTransaction
    method: GET
    data_selector: result.pendingTransaction
- name: wal_executeGaslessTransaction
  endpoint:
    path: /aptos/wallet/v1
    method: POST
    data_selector: params
- name: key_createSession
  endpoint:
    path: /key/v1
    method: POST
    data_selector: result
    params: {}
- name: wal_createWallet
  endpoint:
    path: /wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: initializeWalletOnChain
  endpoint:
    path: /wal_initializeWalletOnChain
    method: POST
    data_selector: result
    params: {}
- name: createWalletOnChain
  endpoint:
    path: /wal_createWalletOnChain
    method: POST
    data_selector: result
    params: {}
- name: getWallet
  endpoint:
    path: /wal_getWallet
    method: POST
    data_selector: result
    params: {}
- name: signTransaction
  endpoint:
    path: /wal_signTransaction
    method: POST
    data_selector: result
    params: {}
- name: reference_gas_price
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      method: suix_getReferenceGasPrice
      jsonrpc: '2.0'
      id: 1
- name: fund_balance
  endpoint:
    path: /gas/getFund
    method: POST
    data_selector: result
    params: {}
- name: signTransactionBlock
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: signPersonalMessage
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: executeGaslessTransactionBlock
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: createSession
  endpoint:
    path: /key/v1
    method: POST
    data_selector: result
    params: {}
- name: createWallet
  endpoint:
    path: /wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: getWallet
  endpoint:
    path: /wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: setBeneficiary
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: unsetBeneficiary
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params: {}
- name: getBeneficiary
  endpoint:
    path: /sui/wallet/v1
    method: POST
    data_selector: result
    params: {}
notes:
- Shinami Wallet Services do not support CORS requests.
- Each walletId only works with the secret you create it with.
- Uses Shinami Gas Station fund to pay for the transaction.
- New base URL for our services hosted in US East, https://api.us1.shinami.com/, replaces
  now-deprecated URL https://api.shinami.com/. We'll still support for deprecated
  URL for a while, but please move to the new URL when you make Integration changes.
- Get answers to common billing and product usage questions in our Help Center.
- API keys - and the API Insights we show you with your request volumes, errors, and
  latency - are specific to a given region.
- When you're integrating a product it's useful to view the product FAQ and billing
  pages for it to understand what you'll pay for, how to view API metrics in the dashboard,
  etc.
- API access keys are tied to a region, and to services within that region.
- Aptos Node Service is currently only running out of our US East - us1 region.
- Make sure your integration has a retry with a backoff in the case of a rate-limit
  error (HTTP 429).
- Monitor for rate-limit errors and adjust request frequency accordingly.
- Aptos Gas Station is currently only running out of our US East - us1 region.
- Aptos Wallet Services are currently only running out of our US East - us1 region.
- For billing questions see our Sui Billing FAQ.
- API Insights are tied to a region.
- Sui Gas Station is currently only running out of our US East - us1 region.
- Sui Wallet Services are currently only running out of our US East - us1 region.
- For a limited time, our Aptos Node Service will be offered for free without any
  daily usage caps.
- The REST API will have no daily request cap, only a QPS limit per network.
- The GraphQL API will have no daily CU cap, only a CUPS limit per network.
- Invoices will be emailed to your workspace contact email and also will appear in
  your Shinami dashboard.
- Customers on the Free plan are not charged for requests but have a daily request
  limit per network per region.
- API key must be valid for the region URL you're making a request to.
- Gas Station and Wallet Services APIs must be accessed from the backend.
- Sponsors gas fees to increase user conversion and retention.
- Aptos was built to guard against security hacks that steal people's money.
- Dynamic, composable NFTs allow for countless possibilities to evolve and enhance
  your players' NFTs.
- Ensure to use a valid API Access Key tied to the US East - us1 region.
- API Access Keys are tied to a region, ensure to use keys from the US East - us1
  region.
- See the Aptos doc on Gas and Storage Fees for a more detailed overview of how transaction
  costs are determined, as well as guidance on how to estimate the costs for a transaction.
- Only workspace admins can view and change billing information.
- Gas Station does not support CORS, requests must be from backend.
- Requires setup of connected app in Aptos
- Pay attention to transaction expiration time
- Make sure the function call in Step 10 is uncommented.
- This tutorial requires a Shinami account.
- Initialization costs a very small amount of APT.
- Shinami's Gas Station only supports integration with your app's backend (no CORS
  support) for security reasons.
- Currently, Devnet has a limit of 10 requests per 5 min per user identity.
- Testnet and Mainnet each have a limit of 2 requests per 5 min per user identity.
- NFTs can be soul-bound, meaning they cannot be transferred after being owned.
- Requires valid API key for authorization
- Requires API key for access
- Response may contain null values for optional fields
- Sponsoring transactions for your end users creates a low-friction user experience,
  increasing user conversion, retention, and engagement.
- Shinami Invisible Wallets and zkLogin wallets remove the user burden of private
  key management and disruptive signing popups.
- Shinami's Gas Station charges in SUI because operational costs are primarily in
  SUI.
- User experience has been a big barrier to Web3 app adoption.
- 'With Sui’s zkLogin feature, apps can give users the best of both worlds: a Web2
  user experience along with ownership of a Web3 wallet and the assets it contains.'
- Logging in with zkLogin is as easy as logging in with the Google, Facebook, Twitch,
  or Apple account credentials the user already knows.
- In a sponsored transaction, you cannot use the gas object provided by Shinami for
  other purposes.
- Building transaction blocks creates requests to your Node Service account, which
  counts towards your access key's QPS.
- Gas Station requests must be from your backend.
- For compatibility with the Mysten SDK, the wrapBcs parameter needs to be set to
  true. When using the Shinami Clients SDK, it's set to true by default.
- Building transactions creates requests to your Node Service account, which counts
  towards your access key's QPS and your daily Node Service request count.
- If these keys are leaked, bad actors have the ability to sponsor transactions from
  your fund until it has been drained or you disable the key in your Shinami dashboard.
- This tutorial requires a Shinami account. If you do not have one, you can sign up
  here.
- For Apple, you must authorize a slightly different redirect URI.
- Uses OAuth2 with refresh token — requires setup of connected app in Shinami
- Sponsored transactions can remain in the 'In flight transactions' tab after a successful
  execution for a minute or so
- Requires setup of a Shinami Invisible Wallet for the game.
- Requires OAuth2 authentication
- Ensure correct API key usage
- As of March 10, 2025, Mysten is working on improving their congestion control system
  to allow more throughput for shared objects.
- The exact type and count of requests your Transaction.build() calls produce will
  vary based on the contents of your transaction blocks.
- Uses OAuth2 for authentication.
- Each coin is represented as an individual object in Sui.
- Uses OAuth2 with embedded wallets for Web2 natives.
- Region URLs - us1 above - only work with API keys created in the same region.
- Use an access key tied to the network you want to interact with.
- Gas Station doesn't support CORS, so you must send requests from your backend.
- You must use an API access key with both Gas Station and Node Service rights.
- Gas Station does not support CORS, so you must send requests from your backend.
- The transaction's expiration timestamp must be set to a time within the next hour.
- Requires an access key with Gas Station and Node Service rights for the Aptos network
- The Invisible wallet must be initialized on chain in order to sign.
- If you attempt to sign immediately after initializing a wallet you may get an error
  that the address was not found on chain.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- When surpassing the QPS limit for a key, a JSON-RPC error code `-32010` is returned.
- If daily request limits are hit, a `-32012` error occurs and should not be retried
  until the next day UTC.
- Requests for data that contain older object, transaction, and event data may have
  increased latency.
- This endpoint returns transaction response object for a specified transaction digest.
- The 'Package' and 'MoveEventField' filters, along with the 'All', 'Any', 'And' and
  'Or' operators, are not supported.
- Response will contain the fields you asked for via the options parameter.
- Provides transaction block data for Sui.
- Response will contain the fields you asked for via the options parameter
- Includes a nextCursor field which contains an optional txDigest, and a hasNextPage
  field with a boolean telling you whether or not there is a next page.
- Some queries can be slow to fulfill.
- Omitting filters may not return all transactions.
- Currently the only region where we offer Testnet is US East.
- Will not return data on deleted objects or old object versions unless using a Shinami
  dedicated node with extra history storage enabled.
- Uses OAuth2 with refresh token.
- Uses API key for authentication
- Different endpoints may have different request parameters
- Different name registry for Testnet and Mainnet.
- Some items may have null values.
- Uses OAuth2 with refresh token — requires setup of connected app in Sui Network
- A non-sponsored transaction would just have the sender's signature.
- This API requires a valid API key for access.
- 'Important note on Node usage and billing for this request: devInspectTransactionBlock
  can accept a TransactionBlock as input.'
- 'Authentication is via an ''Authorization: Bearer YOUR_API_ACCESS_KEY'' header'
- This API is currently the only region where we offer Testnet.
- This service may be fully removed by Mysten any day now!
- Deprecation was announced in the testnet-v1.28.2 release notes on July 2, 2024.
- Shinami Gas Station does not support CORS requests, so you must send requests from
  your backend.
- Get the balance for the Gas Station fund tied to the request's API access key.
- Shinami Wallet Services do not support CORS requests, so if you call these APIs
  from your frontend you'll get a CORS error.
- Devnet has a different zkey than Testnet and Mainnet. Shinami's zk prover currently
  only works with Testnet and Mainnet.
- We have a limit of two zk proofs per address per minute. When you hit this limit,
  we return a JSON-RPC code `-32012`.
- Gas Station API does not support CORS, so requests must be sent from your backend.
- You need to create a Gas Station fund in your Shinami dashboard before you create
  an access key.
- Transaction's expiration timestamp must be set to a time within the next hour.
- Requires access key with Gas Station and Node Service rights for the Aptos network
- Shinami Wallet Services do not support CORS requests, so if you make requests to
  these APIs from your frontend you'll get a CORS error.
- Initialization happens automatically if you send a transaction with an uninitialized
  wallet as the sender.
- Use an access key tied to the region and Sui network you want to interact with.
- Testnet is currently only offered in the US East region.
- When you create a Gas Station access key, you link it to exactly one Gas Station
  fund.
- You must generate a session token before creating a wallet or signing transactions.
- This API interacts with the Account Graph Move package.
- Requires setup of Access Key with rights to all services.
errors:
- '-32010: Rate limit exceeded'
- '-32012: Wallet creation limit reached'
- 'HTTP 429: Rate limit exceeded, retry with backoff'
- 'HTTP 404: account_not_found errors may occur'
- '-32010: Throttle API calls or reduce frequency'
- '32011: Attempting to make a websocket subscription when you''ve reached the limit
  for your access key.'
- 'JSON-RPC -32012: Your requests will be blocked if you don''t pay in 10 days.'
- 'HTTP 401 Unauthorized: The request is missing an authentication header or the API
  key is invalid.'
- '400: Bad Request: Check your request to ensure it''s properly formatted.'
- '401: Unauthorized: Confirm that you''ve correctly copied the value of an Access
  Key with rights for the service(s) you''re trying to use.'
- '429: Too Many Requests: Build in a retry with a backoff.'
- '500: Internal Server Error: A retry will often succeed.'
- '-32001: Method not found'
- '-32602: Invalid params'
- '-32010: Too Many Requests'
- '-32012: Resource Limit Exceeded'
- '-32050: Transient error during transaction execution'
- 'field ''current_token_ownerships_v0'' not found in type: ''query_root'''
- 'validation-failed: field ''current_token_ownerships_v0'' not found in type: ''query_root'''
- '404 account_not_found: Check the account address and ensure it has been initialized.'
- 'CORS_ERROR: Gas Station does not support CORS.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or permissions'
- 'INVALID_SIGNATURE: Ensure the actual feePayer''s address is set on the transaction
  before submission.'
- 'INVALID_SIGNATURE: Make sure the transaction you''re submitting has been updated
  to use the feePayer''s address.'
- '400 Bad Request: Check the account address or asset type'
- '401 Unauthorized: API key may be invalid or missing'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Check query structure'
- '-32602: Invalid Params'
- 'JSON-RPC -32602 error: If you try to sponsor a TransactionKind that uses the gas
  object.'
- 'CORS_ERROR: Attempting to make requests from frontend.'
- Signature is not valid for the provided message
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your token validity'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Retry after some time'
- 'ExecutionCancelledDueToSharedObjectCongestion: Increase gas price to get your transaction
  through.'
- 'HTTP 429: Throttle API calls or reduce frequency'
- 'HTTP 429: Throttle API calls or adjust rate limits.'
- account_not_found
- resource_not_found
- module_not_found
- struct_field_not_found
- version_not_found
- transaction_not_found
- table_item_not_found
- block_not_found
- state_value_not_found
- version_pruned
- block_pruned
- invalid_input
- invalid_transaction_update
- sequence_number_too_old
- vm_error
- rejected_by_filter
- health_check_failed
- mempool_is_full
- internal_error
- web_framework_error
- bcs_not_supported
- api_disabled
- '410: The requested ledger version has been pruned'
- '400: A message describing the error'
- '403: A message describing the error'
- '404: A message describing the error'
- '500: A message describing the error'
- '503: A message describing the error'
- '-32010: Rate limit exceeded, implement retries with backoff'
- '-32012: Wallet creation limit exceeded, do not retry'
- '-32012: Wallet creation limit reached, do not retry.'
- '-32010: Rate limit exceeded, implement retries with backoff.'
- '-32012: Daily request limit hit, do not retry until the next day.'
- 'notExists: The queried object does not exist.'
- 'VersionNotFound: The version is invalid or the FullNode is not storing it.'
- 'ObjectNotExists: Check that you are requesting for the correct network and object
  id.'
- 'Invalid parameters: Check the parameters passed in the request'
- 'Unauthorized: Check if the API key is valid'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Check the provided authentication credentials.'
- 'Invalid API Key: Check your API key and try again'
- 'Method not found: Ensure the method name is correct'
- 'Invalid parameters: Verify the parameters being sent'
- 'HTTP 429: Connection limit reached'
- 'JSON-RPC code -31011: Subscription limit reached'
- '-32602: Invalid parameters for the sponsored transaction.'
- '-32010: QPS limit exceeded'
- '-32012: Limit of wallet creations reached'
- 'JsonRpcError: Invalid user signature: Required Signature from 0x6e20e4e7e3822ccd19614dd8db4fafdab3e0a888d54d272ef678a4c24937c5b4
  is absent ["0x1c1a56df0bd80abc6dd097b98cd4ff341c3ef2bdb0f2ea7d0ebd87eff3268b6c",
  "0x3452ddf0448cc52e62d263c1c49553cb744dbb76bca56e9f12c98b2ffb9b82a5"] at SuiHTTPTransport.request
  (...node_modules/@mysten/sui/src/client/http-transport.ts:123:10) at process.processTicksAndRejections
  (node:internal/process/task_queues:95:5) at SuiClient.executeTransactionBlock (...src/server/main.ts:135:30)'
- '-32002: TransactionExecutionClientError'
- '-32010: Rate limit exceeded. Implement retries with backoff.'
- Gas Station doesn't support CORS, so you must send requests from your backend.
- You must use an API access key with both Gas Station and Node Service rights.
- '401 Unauthorized: Recheck API access key permissions.'
- '-32010: QPS limit exceeded, implement retries with backoff'
- '-32012: Wallet creation limit exceeded, should not retry.'
- '401 Unauthorized: Recheck API key.'
- '-32012: Daily request limit exceeded, do not retry until the next day.'
- '-32602: Invalid transaction request'
- '-32012: Wallet creation limit exceeded.'
auth_info:
  mentioned_objects:
  - Wallet Services
  - Gas Station
  - Node Service
  - SingleKeyAccount
  - Ed25519PrivateKey
  - GasStationClient
  - NodeClient
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.us1.shinami.com/aptos/graphql/v1
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
