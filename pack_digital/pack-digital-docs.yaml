resources:
- name: section_schema
  endpoint:
    path: /api/section-schema
    method: GET
    data_selector: schema
    params: {}
- name: section_schema
  endpoint:
    path: /developer-resources/section-schema-api
    method: GET
    data_selector: schema
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: date_field
  endpoint:
    path: /date-field
    method: GET
    data_selector: date
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: date_field
  endpoint:
    path: /date-field
    method: GET
    data_selector: date
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: records
- name: Admin API
  endpoint:
    params:
      Files:
      - write_files
      - read_files
      Metaobject definitions:
      - write_metaobject_definitions
      - read_metaobject_definitions
      Metaobject entries:
      - write_metaobject
      - read_metaobjects
      Products:
      - read_products
      Shopify Markets:
      - read_markets
      - write_markets
      Store content:
      - read_content
- name: Storefront API
  endpoint:
    params:
      Metaobject entries:
      - unauthenticated_read_metaobjects
      Customers: Select all scopes
- name: sections
  endpoint:
    path: /admin/sections
    method: GET
    data_selector: sections
    params: {}
- name: page_drafts
  endpoint:
    path: /create-manage-content/page-drafts
    method: GET
    data_selector: drafts
    params: {}
- name: Custom App Permissions
  endpoint:
    path: /api/reference/custom-app-permissions
    method: GET
    data_selector: permissions
- name: drafts
  endpoint:
    path: /create-manage-content/storefront-settings-drafts
    method: GET
    data_selector: drafts
    params: {}
- name: schedule_page
  endpoint:
    path: /create-manage-content/scheduling/schedule-a-page
    method: GET
    data_selector: scheduled_pages
- name: schedule_site_settings
  endpoint:
    path: /create-manage-content/scheduling/schedule-site-settings
    method: GET
    data_selector: scheduled_site_settings
- name: remove_page_schedule
  endpoint:
    path: /create-manage-content/scheduling/remove-page-from-a-schedule
    method: GET
    data_selector: removed_page_schedule
- name: edit_existing_schedule
  endpoint:
    path: /create-manage-content/scheduling/edit-an-existing-schedule
    method: GET
    data_selector: edited_schedule
- name: run_schedule_manually
  endpoint:
    path: /create-manage-content/scheduling/run-a-schedule-manually
    method: GET
    data_selector: manual_schedule_run
- name: delete_schedule
  endpoint:
    path: /create-manage-content/scheduling/delete-a-schedule
    method: GET
    data_selector: deleted_schedule
- name: clear_schedule
  endpoint:
    path: /create-manage-content/scheduling/clear-a-schedule
    method: GET
    data_selector: cleared_schedule
- name: content_environment
  endpoint:
    path: /create-manage-content/content-environments
    method: GET
    data_selector: environments
    params: {}
- name: sections
  endpoint:
    path: /api/sections
    method: GET
    data_selector: sections
    params: {}
- name: drafts
  endpoint:
    path: /create-manage-content/storefront-settings-drafts
    method: GET
    data_selector: drafts
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: bundles
  endpoint:
    path: /bundles
    method: GET
    data_selector: bundles
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: Upload Media
  endpoint:
    path: /create-manage-content/media-manager#upload-media
    method: GET
- name: Edit Media
  endpoint:
    path: /create-manage-content/media-manager#edit-media
    method: GET
- name: locales
  endpoint:
    path: /settings/localization
    method: GET
    data_selector: locales
    params: {}
- name: content_environments
  endpoint:
    path: /api/content-environments
    method: GET
    data_selector: environments
- name: storefront_seo_settings
  endpoint:
    path: /settings/storefront
    method: GET
    data_selector: seo_settings
- name: page_article_blog_seo_settings
  endpoint:
    path: /seo/pages
    method: GET
    data_selector: seo_settings
- name: product_collection_seo_settings
  endpoint:
    path: /seo/products
    method: GET
    data_selector: seo_settings
- name: container_settings
  endpoint:
    path: /app/settings/container
    method: GET
    data_selector: containerSettings
- name: hero_section
  endpoint:
    path: /app/sections/HeroSection/HeroSection.schema
    method: GET
    data_selector: Schema
- name: products
  endpoint:
    path: /admin/api/2023-01/products.json
    method: GET
    data_selector: products
    params: {}
- name: collections
  endpoint:
    path: /admin/api/2023-01/custom_collections.json
    method: GET
    data_selector: custom_collections
    params: {}
- name: bundles
  endpoint:
    path: /admin/api/2023-01/bundles.json
    method: GET
    data_selector: bundles
    params: {}
- name: groups
  endpoint:
    path: /admin/api/2023-01/product_groups.json
    method: GET
    data_selector: product_groups
    params: {}
- name: upload_media
  endpoint:
    path: /upload-media
    method: POST
- name: edit_media
  endpoint:
    path: /edit-media
    method: PATCH
- name: locales
  endpoint:
    path: /settings/localization
    method: GET
    data_selector: locales
    params: {}
- name: container_settings
  endpoint:
    path: /api/container/settings
    method: GET
    data_selector: fields
    params: {}
- name: Home
  endpoint:
    path: /
    method: GET
- name: Page
  endpoint:
    path: /pages/:handle
    method: GET
- name: Blog
  endpoint:
    path: /blogs/:handle
    method: GET
- name: Article
  endpoint:
    path: /blogs/:blogHandle/:articleHandle
    method: GET
- name: Product
  endpoint:
    path: /products/:handle
    method: GET
- name: Collection
  endpoint:
    path: /collections/:handle
    method: GET
- name: Account
  endpoint:
    path: /account/:subroute
    method: GET
- name: '404'
  endpoint:
    path: /404
    method: GET
- name: metaobjects
  endpoint:
    path: /admin/api/metaobjects.json
    method: GET
    data_selector: metaobjects
    params: {}
- name: image_tiles_grid
  endpoint:
    path: /image-tiles-grid
    method: GET
- name: image_tiles_mosaic
  endpoint:
    path: /image-tiles-mosaic
    method: GET
- name: social_images_grid
  endpoint:
    path: /social-images-grid
    method: GET
- name: tabbed_tiles_slider
  endpoint:
    path: /tabbed-tiles-slider
    method: GET
- name: tiles_slider
  endpoint:
    path: /tiles-slider
    method: GET
- name: tiles_stack
  endpoint:
    path: /tiles-stack
    method: GET
- name: video
  endpoint:
    path: /video
    method: GET
- name: video_embed
  endpoint:
    path: /video-embed
    method: GET
- name: marketing_signup
  endpoint:
    path: /marketing-signup
    method: GET
- name: press_slider
  endpoint:
    path: /press-slider
    method: GET
- name: products_slider
  endpoint:
    path: /products-slider
    method: GET
- name: testimonial_slider
  endpoint:
    path: /testimonial-slider
    method: GET
- name: Page
  endpoint:
    path: /api/pages
    method: GET
    data_selector: nodes
- name: PageHistory
  endpoint:
    path: /api/page-history
    method: GET
    data_selector: nodes
- name: PageRevision
  endpoint:
    path: /api/page-revisions
    method: GET
    data_selector: nodes
- name: Blog
  endpoint:
    path: /api/blogs
    method: GET
    data_selector: nodes
- name: Article
  endpoint:
    path: /api/articles
    method: GET
    data_selector: nodes
- name: ProductPage
  endpoint:
    path: /api/product-pages
    method: GET
    data_selector: nodes
- name: Collection
  endpoint:
    path: /api/collections
    method: GET
    data_selector: nodes
- name: Section
  endpoint:
    path: /api/sections
    method: GET
    data_selector: nodes
- name: Template
  endpoint:
    path: /api/templates
    method: GET
    data_selector: nodes
- name: SiteSettings
  endpoint:
    path: /api/site-settings
    method: GET
    data_selector: nodes
- name: Schedule
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: nodes
- name: ContentEnvironment
  endpoint:
    path: /api/content-environments
    method: GET
    data_selector: nodes
- name: User
  endpoint:
    path: /api/users
    method: GET
    data_selector: nodes
- name: settings
  endpoint:
    path: /settings/index.js
    method: GET
    data_selector: settings
    params: {}
- name: templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: PageByHandle
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.pageByHandle
    params: {}
- name: template
  endpoint:
    path: /content-management-api/queries/template
    method: GET
    data_selector: data
    params: {}
- name: templates
  endpoint:
    path: /content-management-api/queries/templates
    method: GET
    data_selector: data
    params: {}
- name: templateHistory
  endpoint:
    path: /content-management-api/queries/templateHistory
    method: GET
    data_selector: data
    params: {}
- name: templateReferences
  endpoint:
    path: /content-management-api/queries/templateReferences
    method: GET
    data_selector: data
    params: {}
- name: page
  endpoint:
    path: /api/pages
    method: GET
    data_selector: nodes
- name: page_history
  endpoint:
    path: /api/page-history
    method: GET
    data_selector: nodes
- name: blog
  endpoint:
    path: /api/blogs
    method: GET
    data_selector: nodes
- name: article
  endpoint:
    path: /api/articles
    method: GET
    data_selector: nodes
- name: product_page
  endpoint:
    path: /api/product-pages
    method: GET
    data_selector: nodes
- name: collection
  endpoint:
    path: /api/collections
    method: GET
    data_selector: nodes
- name: section
  endpoint:
    path: /api/sections
    method: GET
    data_selector: nodes
- name: template
  endpoint:
    path: /api/templates
    method: GET
    data_selector: nodes
- name: site_settings
  endpoint:
    path: /api/site-settings
    method: GET
    data_selector: nodes
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: nodes
- name: template
  endpoint:
    path: /content-management-api/queries/template
    method: GET
    data_selector: Template
    params: {}
- name: templates
  endpoint:
    path: /content-management-api/queries/templates
    method: GET
    data_selector: TemplateConnection
    params: {}
- name: templateHistory
  endpoint:
    path: /content-management-api/queries/templateHistory
    method: GET
    data_selector: TemplateVersionConnection
    params: {}
- name: templateReferences
  endpoint:
    path: /content-management-api/queries/templateReferences
    method: GET
    data_selector: '[Reference]'
    params: {}
- name: settings
  endpoint:
    path: /settings/index.js
    method: GET
    data_selector: settings
- name: templateCreate
  endpoint:
    path: /content-management-api/mutations/templateCreate
    method: POST
    data_selector: TemplateCreatetInput
    params: {}
- name: templateUpdate
  endpoint:
    path: /content-management-api/mutations/templateUpdate
    method: POST
    data_selector: TemplateUpdateInput
    params: {}
- name: templateDelete
  endpoint:
    path: /content-management-api/mutations/templateDelete
    method: POST
    data_selector: DeletePayload
    params: {}
- name: templatePublish
  endpoint:
    path: /content-management-api/mutations/templatePublish
    method: POST
    data_selector: Template
    params: {}
- name: templatePublishBulk
  endpoint:
    path: /content-management-api/mutations/templatePublishBulk
    method: POST
    data_selector: Job
    params: {}
- name: templateUnpublish
  endpoint:
    path: /content-management-api/mutations/templateUnpublish
    method: POST
    data_selector: Template
    params: {}
- name: templateUnpublishBulk
  endpoint:
    path: /content-management-api/mutations/templateUnpublishBulk
    method: POST
    data_selector: Job
    params: {}
- name: templateAddSectionsBulk
  endpoint:
    path: /content-management-api/mutations/templateAddSectionsBulk
    method: POST
    data_selector: Job
    params: {}
- name: template
  endpoint:
    path: /content-management-api/queries/template
    method: POST
    data_selector: template
- name: templates
  endpoint:
    path: /content-management-api/queries/templates
    method: POST
    data_selector: templates
- name: templateHistory
  endpoint:
    path: /content-management-api/queries/templateHistory
    method: POST
    data_selector: templateHistory
- name: templateReferences
  endpoint:
    path: /content-management-api/queries/templateReferences
    method: POST
    data_selector: templateReferences
- name: template
  endpoint:
    path: /content-management-api/queries/template
    method: GET
    data_selector: Template
    params: {}
- name: templates
  endpoint:
    path: /content-management-api/queries/templates
    method: GET
    data_selector: TemplateConnection
    params: {}
- name: templateHistory
  endpoint:
    path: /content-management-api/queries/templateHistory
    method: GET
    data_selector: TemplateVersionConnection
    params: {}
- name: templateReferences
  endpoint:
    path: /content-management-api/queries/templateReferences
    method: GET
    data_selector: '[Reference]'
    params: {}
- name: A/B Testing API
  endpoint:
    path: /ab-testing-api
    method: GET
    data_selector: data
    params: {}
- name: templateCreate
  endpoint:
    path: /content-management-api/mutations/templateCreate
    method: POST
- name: templateUpdate
  endpoint:
    path: /content-management-api/mutations/templateUpdate
    method: POST
- name: templateDelete
  endpoint:
    path: /content-management-api/mutations/templateDelete
    method: POST
- name: templatePublish
  endpoint:
    path: /content-management-api/mutations/templatePublish
    method: POST
- name: templatePublishBulk
  endpoint:
    path: /content-management-api/mutations/templatePublishBulk
    method: POST
- name: templateUnpublish
  endpoint:
    path: /content-management-api/mutations/templateUnpublish
    method: POST
- name: templateUnpublishBulk
  endpoint:
    path: /content-management-api/mutations/templateUnpublishBulk
    method: POST
- name: templateAddSectionsBulk
  endpoint:
    path: /content-management-api/mutations/templateAddSectionsBulk
    method: POST
- name: BigQuery
  endpoint:
    path: /bigquery/integration
    method: POST
    data_selector: integration
    params:
      GCP_Project_ID: g4a-bigquery-pack-data
      Dataset_Name: analytics_GA4PROPERTYID
      Service_Account_JSON_File: paste the JSON key from Step 4
- name: A/B Testing API
  endpoint:
    path: /ab-testing-api
    method: GET
- name: useAbTest
  endpoint:
    path: /api/reference/ab-testing-api#useAbTest
    method: GET
    data_selector: Test
- name: useAbTestId
  endpoint:
    path: /api/reference/ab-testing-api#useAbTestId
    method: GET
    data_selector: string
- name: useAbTestHandle
  endpoint:
    path: /api/reference/ab-testing-api#useAbTestHandle
    method: GET
    data_selector: string
- name: useAbTestVariantId
  endpoint:
    path: /api/reference/ab-testing-api#useAbTestVariantId
    method: GET
    data_selector: string
- name: useAbTestVariantHandle
  endpoint:
    path: /api/reference/ab-testing-api#useAbTestVariantHandle
    method: GET
    data_selector: string
- name: site_settings
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.siteSettings
- name: kpi_events
  endpoint:
    path: /testing-analytics/kpi-events
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /api/products
    method: GET
    data_selector: product
    params: {}
- name: A/B Testing API
  endpoint:
    path: /ab-testing-api
    method: GET
    data_selector: data
    params: {}
- name: A/B Testing API
  endpoint:
    path: /ab-testing-api
    method: GET
- name: section_schema
  endpoint:
    path: /api/v1/section_schema
    method: GET
    data_selector: sections
    params: {}
- name: date_field
  endpoint:
    path: /interface/DateField
    method: GET
    data_selector: component
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: buyer
  endpoint:
    path: /api/buyer
    method: GET
    data_selector: buyer
    params: {}
- name: template
  endpoint:
    path: /template
    method: POST
    data_selector: data
    params: {}
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: data
    params: {}
- name: templateHistory
  endpoint:
    path: /templateHistory
    method: GET
    data_selector: data
    params: {}
- name: templateReferences
  endpoint:
    path: /templateReferences
    method: GET
    data_selector: data
    params: {}
- name: section_schema
  endpoint:
    path: /developer-resources/section-schema-api
    method: GET
    data_selector: schema
    params: {}
- name: date_field
  endpoint:
    path: /date/field
    method: GET
    data_selector: records
- name: template
  endpoint:
    path: /content-management-api/queries/template
    method: GET
    data_selector: Template
    params: {}
- name: templates
  endpoint:
    path: /content-management-api/queries/templates
    method: GET
    data_selector: TemplateConnection
    params: {}
- name: templateHistory
  endpoint:
    path: /content-management-api/queries/templateHistory
    method: GET
    data_selector: TemplateVersionConnection
    params: {}
- name: templateReferences
  endpoint:
    path: /content-management-api/queries/templateReferences
    method: GET
    data_selector: '[Reference]'
    params: {}
- name: date_field
  endpoint:
    path: /date-field
    method: GET
    data_selector: date
    params: {}
- name: templateCreate
  endpoint:
    path: /content-management-api/mutations/templateCreate
    method: POST
    data_selector: template
    params: {}
- name: templateUpdate
  endpoint:
    path: /content-management-api/mutations/templateUpdate
    method: POST
    data_selector: template
    params: {}
- name: templateDelete
  endpoint:
    path: /content-management-api/mutations/templateDelete
    method: POST
    data_selector: DeletePayload
    params: {}
- name: templatePublish
  endpoint:
    path: /content-management-api/mutations/templatePublish
    method: POST
    data_selector: template
    params: {}
- name: templatePublishBulk
  endpoint:
    path: /content-management-api/mutations/templatePublishBulk
    method: POST
    data_selector: Job
    params: {}
- name: templateUnpublish
  endpoint:
    path: /content-management-api/mutations/templateUnpublish
    method: POST
    data_selector: template
    params: {}
- name: templateUnpublishBulk
  endpoint:
    path: /content-management-api/mutations/templateUnpublishBulk
    method: POST
    data_selector: Job
    params: {}
- name: templateAddSectionsBulk
  endpoint:
    path: /content-management-api/mutations/templateAddSectionsBulk
    method: POST
    data_selector: Job
    params: {}
- name: template
  endpoint:
    path: /content-management-api/queries/template
    method: GET
    data_selector: Template
- name: templates
  endpoint:
    path: /content-management-api/queries/templates
    method: GET
    data_selector: TemplateConnection!
- name: templateHistory
  endpoint:
    path: /content-management-api/queries/templateHistory
    method: GET
    data_selector: TemplateVersionConnection!
- name: templateReferences
  endpoint:
    path: /content-management-api/queries/templateReferences
    method: GET
    data_selector: '[Reference]'
- name: templateCreate
  endpoint:
    path: /content-management-api/mutations/templateCreate
    method: POST
    data_selector: Template!
- name: templateUpdate
  endpoint:
    path: /content-management-api/mutations/templateUpdate
    method: POST
    data_selector: Template
- name: templateDelete
  endpoint:
    path: /content-management-api/mutations/templateDelete
    method: POST
    data_selector: DeletePayload!
- name: templatePublish
  endpoint:
    path: /content-management-api/mutations/templatePublish
    method: POST
    data_selector: Template
- name: templatePublishBulk
  endpoint:
    path: /content-management-api/mutations/templatePublishBulk
    method: POST
    data_selector: Job
- name: templateUnpublish
  endpoint:
    path: /content-management-api/mutations/templateUnpublish
    method: POST
    data_selector: Template
- name: templateUnpublishBulk
  endpoint:
    path: /content-management-api/mutations/templateUnpublishBulk
    method: POST
    data_selector: Job
- name: templateAddSectionsBulk
  endpoint:
    path: /content-management-api/mutations/templateAddSectionsBulk
    method: POST
    data_selector: Job
- name: template
  endpoint:
    path: /content-management-api/queries/template
    method: GET
    data_selector: Template
- name: templates
  endpoint:
    path: /content-management-api/queries/templates
    method: GET
    data_selector: TemplateConnection!
- name: templateHistory
  endpoint:
    path: /content-management-api/queries/templateHistory
    method: GET
    data_selector: TemplateVersionConnection!
- name: templateReferences
  endpoint:
    path: /content-management-api/queries/templateReferences
    method: GET
    data_selector: '[Reference]'
- name: templateCreate
  endpoint:
    path: /content-management-api/mutations/templateCreate
    method: POST
- name: templateUpdate
  endpoint:
    path: /content-management-api/mutations/templateUpdate
    method: POST
- name: templateDelete
  endpoint:
    path: /content-management-api/mutations/templateDelete
    method: POST
- name: templatePublish
  endpoint:
    path: /content-management-api/mutations/templatePublish
    method: POST
- name: templatePublishBulk
  endpoint:
    path: /content-management-api/mutations/templatePublishBulk
    method: POST
- name: templateUnpublish
  endpoint:
    path: /content-management-api/mutations/templateUnpublish
    method: POST
- name: templateUnpublishBulk
  endpoint:
    path: /content-management-api/mutations/templateUnpublishBulk
    method: POST
- name: templateAddSectionsBulk
  endpoint:
    path: /content-management-api/mutations/templateAddSectionsBulk
    method: POST
notes:
- Currently only supports Shopify Metaobjects.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in Pack
- 'No Pack Account Required: The CLI tool allows you to run the Blueprint Theme with
  default Shopify data.'
- Ensure `unauthenticated_read_customer_tags` is selected for the Customer Accounts
  experience.
- 'Direct syncing isn’t supported yet. Options: Delete and recreate your staging environment
  to match production.'
- Global content refers to elements that appear consistently across your entire storefront,
  including headers, footers, and site-wide settings.
- The Properties Panel is not yet available in this version, but we are working on
  integrating it and it will be available soon.
- AI-powered development acceleration is coming soon.
- Templates are only available on Pack storefronts.
- Currently, you cannot delete a template. This feature is coming soon.
- Page Drafts simplify content management, especially in team environments where coordination
  and collaboration are essential to your workflow.
- Admin API access token is displayed only once.
- Integrating Pack into your existing Hydrogen project is simple and takes just a
  few minutes.
- Preview mode does not reflect the live version of your page.
- Direct syncing isn’t supported yet.
- Ensure your Hydrogen app has the required scopes.
- Updates to settings are not automatically published with the rest of your storefront
  content when a new deploy is triggered.
- You can manage all your URL redirects in Shopify.
- Product pages in Pack are automatically generated when new products are added and
  synced from Shopify.
- SEO settings for product pages are synced from Shopify's product SEO metadata and
  are read-only in Pack.
- You can schedule your content to go live at a specified time.
- Please allow up to 15 minutes for the scheduled changes to go live.
- Pack’s Blueprint is an advanced, component-based Hydrogen theme designed for Shopify.
- SEO settings can be modified in the Pack Admin interface.
- Container settings provide consistent spacing, width, and alignment controls.
- Use the same container settings function in all sections
- Keep class names consistent for spacing, alignment, and other styles
- Define section-specific container extensions in separate functions
- Optimize class generation to avoid unnecessary concatenations
- Consider memoizing container classes when they don't change
- Use utility classes rather than inline styles when possible
- Ensure background and text colors have sufficient contrast
- Include appropriate accessibility attributes in container elements
- Test container layouts with screen readers and keyboard navigation
- Include separate settings for mobile and desktop layouts
- Use a mobile-first approach with responsive class modifiers
- Test containers at various viewport sizes
- Products are automatically synced from Shopify.
- Pack storefronts or shops will be hosted using Shopify's Oxygen platform.
- Ensure branch names are not excessively long to avoid issues with the preview URL.
- Container settings provide consistent spacing, width, and alignment controls that
  can be applied to any section in your storefront.
- By implementing container settings as a reusable function, you ensure consistent
  layout options across all your sections.
- Metaobjects allow for structured content management in Shopify.
- Ensure metaobject definitions and entries are correctly set up in Shopify admin.
- API documentation includes multiple content models for pages, blogs, articles, and
  more.
- All models use GraphQL for querying.
- Ensure your branch names are not excessively long. This can cause issues with the
  preview URL and Customizer not loading.
- The maximum length of a domain label is 63 characters.
- You can set the PACK_CONTENT_ENVIRONMENT and PUBLIC_PACK_CONTENT_ENVIRONMENT (both
  are required) environment variables to force the storefront to use a specific content
  environment outside of the Customizer, e.g. for a specific Github branch.
- The Properties Panel is not yet available for storefront on the A/B testing branch
  of @pack/react.
- Storefronts implementing localization must handle hreflang tags correctly to avoid
  SEO issues
- Localization creates duplicate versions of the same content for each locale
- Make sure to check 'Storefronts' to make it available in the access options.
- Properties Panel is not yet available for storefront on the A/B testing branch of
  @pack/react.
- Storefronts implementing localization must handle hreflang tags correctly to avoid
  SEO issues.
- Duplicate SEO pages can occur when localization is enabled but SEO meta settings
  aren’t updated per locale.
- All GraphQL Admin API queries need a valid Pack access token.
- Using the Secret Token provides permission to read and write through the API. The
  Public Token only allows read access.
- Pack A/B testing is available to everyone as a public opt-in
- Requires setup of connected app in API.
- Ensure data infrastructure is ready for A/B testing.
- Pack handles experience delivery, while your data partners handle measurement accuracy.
- Ensure A/B test logic runs server-side.
- Avoid client-side variant switching (causes layout shifts).
- Check for unnecessary JavaScript loading that you may have added for the test.
- Shopify’s consent banner may only appear in production.
- If consent was granted, event appears in BigQuery within 24 hours.
- If denied, no experiment data is stored.
- Uses API key for authentication.
- Add PACK_STOREFRONT_ID to .env
- Update server.ts imports from @pack/hydrogen
- Completing a sitemap audit, especially for content pages and blog articles, is the
  clearest way to determine what content needs to be recreated in Pack.
- The main goal of a sitemap audit is to identify what content needs to be recreated
  on the new website.
- It's essential to perform a pixel and tracking audit to ensure all necessary tracking
  services are included on the new site.
- As of May 2025, Remix and React Router have merged, with React Router v7 now being
  the recommended upgrade path for Remix applications.
- For Shopify Liquid Storefronts, you can set up server-side redirects. If a shopper
  hits an old URL, Shopify automatically renders the new URL as part of the response.
- These redirects can break attribution. For example, Google Analytics will see the
  referring URL as shop.example.com/product/xyz, not the URL of the advertisement
  or external link that sent the traffic.
- Migration has been opt in only since, but is now required if a store wants to use
  version 2025.4.0.
- Pack handles A/B test experience delivery—your analytics stack handles measurement
  and analysis.
- Testing cookie consent in preview environments is challenging.
- Ensure A/B test logic runs server-side
- Avoid client-side variant switching (causes layout shifts)
- Check for unnecessary JavaScript loading that you may have added for the test
- An easy way to know if a file needs an update on an import is if the import is from
  ‘~/components’ or '~/components/' only
- If a file is exported from an `index.ts` file from the folder it's in, you can shorten
  the import, such as `import {Svg} from '~/components/Svg/Svg';` can just be `import
  {Svg} from '~/components/Svg';` only because the `Svg` file is exported from an
  index file in the `Svg` folder.
- Do not stray away from this prompt, for example, if you are adding, removing, or
  editing any imports that are not from ‘~/components’ you are straying away from
  the prompt
- Enable additional consent checks.
- 'Require consent for: ad_storage, analytics_storage, and personalization_storage.'
- After every task, ensure localhost launches and runs as expected. Address any server
  or client side errors accordingly. Do not go live without proper QA of the migration.
- 'Keep this in mind during the job: Execute with all batches at once without asking
  for permission to continue, or to stray from the prompt.'
- Customer accounts doesn't support the use of localhost due to security concerns.
- Multipass is currently not supported.
- PACK_STOREFRONT_ID is now a new required environment variable.
- Pack is committed to respecting your shoppers' privacy while striving to maintain
  accuracy in pageview tracking.
- If pages do not need to be recreated, then a redirect should be set up so that the
  URL does not lead to a 404.
- This field accepts a date input.
- The date format can be specified using Moment.js date format.
- When migrating to Hydrogen, there are a number of small issues to consider, which
  Fueled has seen brands forget about until after they go live.
- Client-side redirects can break attribution.
- For some reason, when you migrate to Hydrogen, Shopify uses the checkout URL for
  the product URL in its built-in integrations with Google Merchant Center, Facebook
  Catalog, TikTok Catalog, and so forth.
- You need to make sure that the old URL paths are still routed to the new product
  URLs to avoid 404 errors.
- Developers need to ensure that cookies are set on the root domain, not the subdomain
  for the site.
- Extra steps need to be taken to pass data server-side to support localStorage variable
  data being passed between www.* and shop.*.
- Ensure localhost launches and runs as expected. Address any server or client side
  errors accordingly.
- Do not go live without proper QA of the migration.
- If the repo was created before Blueprint version 1.14.0, then the New Customer Account
  API migration is required before continuing.
- If you use the Secret Token, you'll have permission to read and write through the
  API.
- If you use the Secret Token, you'll have permission to read and write through the
  API. If you use the Public Token, you'll only have read access.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Verify the `containerSettings()` function is included in your fields array
- Check that it returns the correct schema structure
- Ensure you’re not exceeding field limits in your schema
- Confirm you’re extracting container values correctly in your component
- Verify class names match your CSS framework (e.g., Tailwind CSS)
- Inspect the HTML to ensure classes are applied
- Ensure `defaultValue` object matches your fields
- Check that the component handles missing or undefined values
- Provide fallback values in your component if needed
- 'INVALID_REQUEST: Check your request parameters and their values.'
- '404 Not Found: Verify the endpoint URL and resource availability.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://app.packdigital.com
  auth:
    type: oauth2
source_metadata: null
