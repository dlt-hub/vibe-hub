resources:
- name: address_activity
  endpoint:
    path: /webhooks/address_activity
    method: POST
    data_selector: event
- name: chains
  endpoint:
    path: /data-api/chains
    method: GET
    data_selector: chains
- name: blocks
  endpoint:
    path: /data-api/blocks
    method: GET
    data_selector: blocks
- name: transactions
  endpoint:
    path: /data-api/transactions
    method: GET
    data_selector: transactions
- name: utxos
  endpoint:
    path: /data-api/utxos
    method: GET
    data_selector: utxos
- name: balances
  endpoint:
    path: /data-api/balances
    method: GET
    data_selector: balances
- name: rewards
  endpoint:
    path: /data-api/rewards
    method: GET
    data_selector: rewards
- name: assets
  endpoint:
    path: /data-api/assets
    method: GET
    data_selector: assets
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: address_activity
  endpoint:
    path: /webhooks/address_activity
    method: POST
    data_selector: event
- name: validator_info
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
    params: {}
- name: staking_details
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
    params: {}
- name: block_data
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
    params: {}
- name: transaction_data
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
    params: {}
- name: chain_state
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
    params: {}
- name: utxos_balances
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
    params: {}
- name: webhook_event
  endpoint:
    path: /webhooks/address_activity
    method: POST
    data_selector: event
- name: validator_info
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
- name: stake_details
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
- name: block_data
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
- name: transaction_data
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
- name: chain_state
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
- name: utxos_balances
  endpoint:
    path: /rpc
    method: POST
    data_selector: result
- name: list_latest_blocks
  endpoint:
    path: /v1/chains/list-latest-blocks-for-all-supported-evm-chains
    method: GET
- name: list_latest_transactions
  endpoint:
    path: /v1/chains/list-latest-transactions-for-all-supported-evm-chains
    method: GET
- name: list_erc20_balances
  endpoint:
    path: /v1/chains/addresses/{address}/balances:listErc20
    method: GET
- name: list_l1_validators
  endpoint:
    path: /v1/primary-network/list-l1-validators
    method: GET
- name: list_latest_transactions_primary_network
  endpoint:
    path: /v1/primary-network-transactions/list-latest-transactions
    method: GET
- name: get_chains_for_address
  endpoint:
    path: /v1/chains/address/{address}
    method: GET
- name: teleporter_messages
  endpoint:
    path: /v1/teleporter/addresses/{address}/messages
    method: GET
    data_selector: messages
- name: l1_details
  endpoint:
    path: /v1/networks/{network}/subnets/{subnetId}
    method: GET
    data_selector: createBlockTimestamp
- name: aggregated_transactions
  endpoint:
    path: /v1/chains/address/{address}
    method: GET
    data_selector: indexedChains
- name: l1_validators
  endpoint:
    path: /data-api/primary-network/list-l1-validators
    method: GET
    data_selector: validators
- name: blocks
  endpoint:
    path: /v1/chains/43114/blocks
    method: GET
    data_selector: blocks
- name: teleporter_messages
  endpoint:
    path: /v1/teleporter/addresses/{address}/messages
    method: GET
    data_selector: messages
    params: {}
- name: l1_details
  endpoint:
    path: /v1/networks/{network}/subnets/{subnetId}
    method: GET
    data_selector: subnetId
    params: {}
- name: list_transactions
  endpoint:
    path: /data-api/evm-transactions/list-transactions
    method: GET
    data_selector: result
    params:
      chainId: '43114'
      address: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
      sortOrder: asc
- name: blocks
  endpoint:
    path: /v1/chains/43114/blocks
    method: GET
    data_selector: blocks
- name: list_transactions
  endpoint:
    path: /data-api/evm-transactions/list-transactions
    method: GET
    data_selector: result
    params:
      chainId: '43114'
      address: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
      sortOrder: asc
- name: transactions
  endpoint:
    path: /data-api/transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /data-api/transactions
    method: GET
    data_selector: transactions
- name: push_notification
  endpoint:
    path: /webhooks-api/push-notifications
    method: POST
- name: webhooks
  endpoint:
    path: /webhooks-api/webhooks/list-webhooks
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: null
    params: {}
- name: native_balance
  endpoint:
    path: /data-api/evm-balances/get-native-token-balance
    method: GET
    data_selector: nativeTokenBalance
    params:
      chainId: '43114'
      address: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
- name: active_addresses
  endpoint:
    path: /v2/chains/43114/metrics/activeAddresses
    method: GET
    data_selector: results
    params:
      startTimestamp: '1722470400'
      endTimestamp: '1725062400'
      timeInterval: day
      pageSize: '31'
- name: avg_tps
  endpoint:
    path: /v1/avg_tps/{chainId}
    method: GET
    data_selector: results
- name: health-check
  endpoint:
    path: /v2/health-check
    method: GET
- name: chains
  endpoint:
    path: /v2/chains
    method: GET
- name: chains_with_chainId
  endpoint:
    path: /v2/chains/{chainId}
    method: GET
- name: chains_metrics_with_chainId_metric
  endpoint:
    path: /v2/chains/{chainId}/metrics/{metric}
    method: GET
- name: chains_teleporterMetrics_with_chainId_metric
  endpoint:
    path: /v2/chains/{chainId}/teleporterMetrics/{metric}
    method: GET
- name: chains_rollingWindowMetrics_with_chainId_metric
  endpoint:
    path: /v2/chains/{chainId}/rollingWindowMetrics/{metric}
    method: GET
- name: networks_metrics_with_network_metric
  endpoint:
    path: /v2/networks/{network}/metrics/{metric}
    method: GET
- name: contracts_nfts_listHolders
  endpoint:
    path: /v2/chains/{chainId}/contracts/{address}/nfts:listHolders
    method: GET
- name: contracts_balances
  endpoint:
    path: /v2/chains/{chainId}/contracts/{address}/balances
    method: GET
- name: btcb_bridged_getAddresses
  endpoint:
    path: /v2/chains/43114/btcb/bridged:getAddresses
    method: GET
- name: subnets_validators_getAddresses
  endpoint:
    path: /v2/subnets/{subnetId}/validators:getAddresses
    method: GET
- name: lookingGlass_compositeQuery
  endpoint:
    path: /v2/lookingGlass/compositeQuery
    method: POST
- name: chains
  endpoint:
    path: /data-api/chains
    method: GET
- name: blocks
  endpoint:
    path: /data-api/blocks
    method: GET
- name: transactions
  endpoint:
    path: /data-api/transactions
    method: GET
- name: utxos
  endpoint:
    path: /data-api/utxos
    method: GET
- name: balances
  endpoint:
    path: /data-api/balances
    method: GET
- name: native_balance
  endpoint:
    path: /data-api/evm-balances/get-native-token-balance
    method: GET
    data_selector: nativeTokenBalance
    params:
      chainId: '43114'
      address: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
- name: active_addresses
  endpoint:
    path: /v2/chains/43114/metrics/activeAddresses
    method: GET
    data_selector: results
    params:
      startTimestamp: '1722470400'
      endTimestamp: '1725062400'
      timeInterval: day
      pageSize: '31'
- name: avg_tps
  endpoint:
    path: /v1/avg_tps/{chainId}
    method: GET
    data_selector: results
- name: erc20_balances
  endpoint:
    path: /evm/balances/listErc20Balances
    method: POST
    data_selector: erc20TokenBalances
- name: erc_transfers
  endpoint:
    path: /evm-transactions/list-erc-transfers
    method: POST
    data_selector: transfers
- name: internal_transactions
  endpoint:
    path: /evm-transactions/list-internal-transactions
    method: POST
    data_selector: transactions
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
    data_selector: records
- name: address_chains
  endpoint:
    path: /v1/address/{address}/chains
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: blocks
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: records
- name: List L1 Validators
  endpoint:
    path: /data-api/primary-network/list-l1-validators
    method: GET
- name: List L1 validator transactions
  endpoint:
    path: /data-api/primary-network-transactions/list-latest-transactions
    method: GET
- name: health_check
  endpoint:
    path: /v2/health-check
    method: GET
- name: chains
  endpoint:
    path: /v2/chains
    method: GET
- name: chains_with_chainId
  endpoint:
    path: /v2/chains/{chainId}
    method: GET
- name: chains_metrics_with_chainId_metric
  endpoint:
    path: /v2/chains/{chainId}/metrics/{metric}
    method: GET
- name: chains_teleporterMetrics_with_chainId_metric
  endpoint:
    path: /v2/chains/{chainId}/teleporterMetrics/{metric}
    method: GET
- name: chains_rollingWindowMetrics_with_chainId_metric
  endpoint:
    path: /v2/chains/{chainId}/rollingWindowMetrics/{metric}
    method: GET
- name: networks_metrics_with_network_metric
  endpoint:
    path: /v2/networks/{network}/metrics/{metric}
    method: GET
- name: chains_contracts_nfts_listHolders_with_chainId_address
  endpoint:
    path: /v2/chains/{chainId}/contracts/{address}/nfts:listHolders
    method: GET
- name: chains_contracts_balances_with_chainId_address
  endpoint:
    path: /v2/chains/{chainId}/contracts/{address}/balances
    method: GET
- name: chains_btcb_bridged_getAddresses_with_chainId
  endpoint:
    path: /v2/chains/43114/btcb/bridged:getAddresses
    method: GET
- name: subnets_validators_getAddresses_with_subnetId
  endpoint:
    path: /v2/subnets/{subnetId}/validators:getAddresses
    method: GET
- name: lookingGlass_compositeQuery
  endpoint:
    path: /v2/lookingGlass/compositeQuery
    method: POST
- name: C-chain
  endpoint:
    path: /data-api/c-chain
    method: GET
    data_selector: blocks, transactions, logs, internal_transactions, receipts, messages
- name: P-chain
  endpoint:
    path: /data-api/p-chain
    method: GET
    data_selector: blocks, transactions, utxos
- name: X-chain
  endpoint:
    path: /data-api/x-chain
    method: GET
    data_selector: blocks, transactions, vertices
- name: chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
    params:
      network: mainnet
- name: chains
  endpoint:
    path: /v1/chains/{chainId}
    method: GET
    data_selector: chainId
    params: {}
- name: chains_for_address
  endpoint:
    path: /v1/chains/address/{address}
    method: GET
    data_selector: indexedChains
    params: {}
- name: erc20_balances
  endpoint:
    path: /data-api/evm/balances/listErc20Balances
    method: POST
    data_selector: erc20TokenBalances
- name: erc_transfers
  endpoint:
    path: /data-api/evm-transactions/list-erc-transfers
    method: POST
    data_selector: transfers
- name: internal_transactions
  endpoint:
    path: /data-api/evm-transactions/list-internal-transactions
    method: POST
    data_selector: transactions
- name: latest_blocks
  endpoint:
    path: /v1/chains/allBlocks
    method: GET
    data_selector: blocks
    params: {}
- name: allTransactions
  endpoint:
    path: /v1/chains/allTransactions
    method: GET
    data_selector: transactions
    params: {}
- name: list_l1_validators
  endpoint:
    path: /data-api/primary-network/list-l1-validators
    method: GET
- name: list_l1_validator_transactions
  endpoint:
    path: /data-api/primary-network-transactions/list-latest-transactions
    method: GET
- name: get_subnet_details_by_id
  endpoint:
    path: /data-api/primary-network/get-subnet-details-by-id
    method: GET
- name: list_subnets
  endpoint:
    path: /data-api/primary-network/list-subnets
    method: GET
- name: chains
  endpoint:
    path: /v1/address/{address}/chains
    method: GET
    data_selector: indexedChains
    params:
      address: string
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
    data_selector: status
    params: {}
- name: list_chains
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
    params:
      network: mainnet
      feature: nftIndexing
- name: chain_information
  endpoint:
    path: /v1/chains/{chainId}
    method: GET
    data_selector: status
    params: {}
- name: chains
  endpoint:
    path: /v1/chains/address/{address}
    method: GET
    data_selector: indexedChains
- name: latest_blocks
  endpoint:
    path: /v1/chains/allBlocks
    method: GET
    data_selector: blocks
    params:
      pageToken: <string>
      network: mainnet
- name: allTransactions
  endpoint:
    path: /v1/chains/allTransactions
    method: GET
    data_selector: transactions
    params: {}
- name: chains
  endpoint:
    path: /v1/address/{address}/chains
    method: GET
    data_selector: indexedChains
    params:
      address: <string>
- name: health_check
  endpoint:
    path: /v1/health-check
    method: GET
    data_selector: status
    params: {}
notes:
- The Data API and Glacier API refer to the same API.
- If you encounter the term “Glacier API” in other documentation, it is referring
  to the Data API, which was previously known as the Glacier API.
- Webhooks provide real-time notifications for on-chain activities.
- The address_activity event is currently the only supported event type.
- Webhooks are event-driven, providing real-time notifications.
- Only the address_activity event is currently supported.
- 'Developer Preview: This suite of SDKs is currently in beta and is subject to change.
  Use in production at your own risk.'
- The Avalanche SDK is currently in beta and is subject to change.
- The network parameter has been added, allowing selection between mainnet and testnet
  (Fuji).
- Always keep your API keys in a secure environment.
- Never expose them in public repositories.
- Ensure you have set up AvaCloud and have access to your API key.
- Ensure you have access to your API key from AvaCloud.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Congratulations 🎉 You’ve successfully retrieved all transactions for a wallet address
  on the C-chain using the Data API!
- Uses OneSignal for push notifications
- ExternalID is based on a hash of the wallet address
- Uses OneSignal for sending push notifications
- To create a webhook, append '/callbackpath' to the Ngrok forwarding URL.
- Use Ngrok to tunnel the traffic to localhost for testing.
- Uses API key for authentication.
- Uses API key for authentication
- Requires setup of AvaCloud account and API key
- The continuous fee is calculated based on network parameters and the number of active
  L1 validators.
- The minimum fee rate is 512 nAVAX per second.
- All rate limits, weights, and CU values are subject to change.
- If an L1 is listed on the Avalanche Explorer, you can query its data using the Data
  API.
- 'Efficiency: Retrieve all necessary information in a single API call.'
- 'Simplicity: Eliminates complex data processing and reduces development time.'
- Rate limits apply collectively across both Webhooks and Data APIs, with usage from
  each counting toward your total CU limit.
errors:
- '400 Bad Request: Check the request format and required parameters.'
- '404 Not Found: Ensure the webhook ID is correct.'
- '500 Internal Server Error: Retry the request after a brief wait.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Error connecting to Avalanche wallet: Avalanche wallet not detected'
- '401 Unauthorized: Check your API key.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
- '502: Bad Gateway'
- '503: Service Unavailable'
- '200: Successful response'
- '429: Too Many Requests'
- '400 Bad Request: Invalid parameters'
- '401 Unauthorized: Check your API key'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource not found'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Something went wrong'
- '502 Bad Gateway: Invalid response from upstream server'
- '503 Service Unavailable: Service is temporarily unavailable'
- '400 Bad Request: Bad requests generally mean the client has passed invalid or malformed
  parameters.'
- '401 Unauthorized: When a client attempts to access resources that require authorization
  credentials but the client lacks proper authentication in the request.'
- '403 Forbidden: When a client attempts to access resources with valid credentials
  but doesn’t have the privilege to perform that action.'
- '404 Not Found: The 404 error is mostly returned when the client requests with either
  mistyped URL, or the passed resource is moved or deleted, or the resource doesn’t
  exist.'
- '500 Internal Server Error: A generic server-side error that is returned for any
  uncaught and unexpected issues on the server side.'
- '502 Bad Gateway: This is an internal error indicating invalid response received
  by the client-facing proxy or gateway from the upstream server.'
- '503 Service Unavailable: This indicates an internal problem with our Subnet node.'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 429 Too Many Requests
- 500 Internal Server Error
- 502 Bad Gateway
- 503 Service Unavailable
- All rate limits, weights, and CU values are subject to change.
- '400'
- '401'
- '403'
- '404'
- '429'
- '500'
- '502'
- '503'
auth_info:
  mentioned_objects: []
client:
  base_url: https://glacier-api.avax.network
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
