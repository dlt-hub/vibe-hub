resources:
- name: bank_reconciliation
  endpoint:
    path: /analytics/bank_reconciliation
    method: GET
- name: business_valuations
  endpoint:
    path: /analytics/business_valuations
    method: GET
- name: credit_score_rating
  endpoint:
    path: /analytics/credit_score
    method: GET
- name: financial_benchmarking
  endpoint:
    path: /analytics/financial_benchmarking
    method: GET
- name: financial_forecasts
  endpoint:
    path: /analytics/financial_forecasts
    method: GET
- name: financial_ratios
  endpoint:
    path: /analytics/financial_ratios
    method: GET
- name: fraud_risk_metrics
  endpoint:
    path: /analytics/fraud_risk_metrics
    method: GET
- name: tax_benchmarking
  endpoint:
    path: /analytics/tax_benchmarking
    method: GET
- name: create_businesses
  endpoint:
    path: /businesses
    method: POST
    data_selector: null
    params: {}
- name: get_businesses
  endpoint:
    path: /businesses
    method: GET
    data_selector: null
    params: {}
- name: Reconstructed Data
  endpoint:
    path: /reconstructed-data
    method: GET
    data_selector: data
    params:
      reconstruct: 'true'
- name: businesses
  endpoint:
    path: /businesses
    method: GET
    data_selector: businesses
    params: {}
- name: business
  endpoint:
    path: /businesses
    method: POST
    data_selector: businessUUID
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: data
    params: {}
- name: sync_status
  endpoint:
    path: /data/syncStatus
    method: GET
    data_selector: dataTypes
    params: {}
- name: balance_sheets
  endpoint:
    path: /balanceSheets
    method: GET
    data_selector: reports
    params: {}
- name: getAccess
  endpoint:
    path: /auth.railz.ai/getAccess
    method: POST
    data_selector: access_token
    params: {}
- name: FreshBooks
  endpoint:
    path: /docs/integrations-accounting-freshbooks
    method: GET
- name: Microsoft Dynamics 365 Business Central
  endpoint:
    path: /docs/integrations-accounting-dynamics-365-business-central
    method: GET
- name: Microsoft Dynamics 365 Finance
  endpoint:
    path: /docs/integrations-accounting-dynamics-365-finance
    method: GET
- name: MYOB
  endpoint:
    path: /docs/integrations-accounting-myob
    method: GET
- name: Oracle NetSuite
  endpoint:
    path: /docs/integrations-accounting-netsuite
    method: GET
- name: QuickBooks Desktop
  endpoint:
    path: /docs/integrations-accounting-quickbooks-desktop
    method: GET
- name: QuickBooks Online
  endpoint:
    path: /docs/integrations-accounting-quickbooks-online
    method: GET
- name: Sage Business Cloud
  endpoint:
    path: /docs/integrations-accounting-sage-business-cloud
    method: GET
- name: Sage Intacct
  endpoint:
    path: /docs/integrations-accounting-sage-intacct
    method: GET
- name: Xero
  endpoint:
    path: /docs/integrations-accounting-xero
    method: GET
- name: Wave
  endpoint:
    path: /docs/integrations-accounting-wave
    method: GET
- name: ZohoBooks
  endpoint:
    path: /docs/zooho-books
    method: GET
- name: connect
  endpoint:
    path: /connect
    method: POST
- name: metadata
  endpoint:
    path: /businesses
    method: GET
    data_selector: metadata
    params: {}
- name: bank_reconciliation
  endpoint:
    path: /bankReconciliation
    method: GET
    data_selector: data
- name: financial_benchmarking
  endpoint:
    path: /financialBenchmarking
    method: GET
- name: tax_benchmarking
  endpoint:
    path: /taxBenchmarking
    method: GET
    data_selector: financial_benchmarks
- name: creditScores
  endpoint:
    path: /creditScores
    method: GET
    data_selector: records
- name: creditRatings
  endpoint:
    path: /creditRatings
    method: GET
    data_selector: records
- name: businessValuations
  endpoint:
    path: /businessValuations
    method: GET
- name: financialForecasts
  endpoint:
    path: /financialForecasts
    method: GET
    data_selector: financialForecasts
    params:
      percentile: value between 0 and 1 (exclusive)
- name: financial_ratios
  endpoint:
    path: /financialRatios
    method: GET
    data_selector: records
- name: financialFraudRisk
  endpoint:
    path: /financialFraudRisk
    method: GET
- name: portfolio_metrics
  endpoint:
    path: /portfolioMetrics
    method: GET
    data_selector: summary
    params:
      reportFrequency: ''
      endDate: ''
- name: probabilityOfDefault
  endpoint:
    path: /probabilityOfDefault
    method: GET
    data_selector: records
- name: businesses
  endpoint:
    path: /businesses
    method: GET
- name: getAccess
  endpoint:
    path: /getAccess
    method: POST
- name: error_image
  endpoint:
    path: /railz-error-image
    method: GET
    data_selector: response
    params: {}
- name: transactions_control
  endpoint:
    path: /visualization-sdk/components/transactions-control
    method: GET
- name: bank_accounts
  endpoint:
    path: /bankAccounts
    method: GET
    data_selector: records
    params: {}
- name: statements_chart
  endpoint:
    path: /reference/getaccess
    method: GET
- name: transactions_control
  endpoint:
    path: /reference/getaccess
    method: GET
- name: income_statements_chart
  endpoint:
    path: /reference/getaccess
    method: GET
- name: credit_score
  endpoint:
    path: /reference/getaccess
    method: GET
- name: QuickBooks Web Connector
  endpoint:
    path: /integrations/accounting/quickbooks-desktop
    method: GET
    data_selector: data
    params: {}
- name: journal_entries
  endpoint:
    path: /reference/journal-entries
    method: POST
    data_selector: journalEntries
- name: bill_payment_requests
  endpoint:
    path: /reference/bill-payment-requests
    method: POST
    data_selector: billPaymentRequests
- name: bill_payments
  endpoint:
    path: /reference/bill-payments
    method: POST
    data_selector: billPayments
- name: invoice_payments
  endpoint:
    path: /reference/invoice-payments
    method: POST
    data_selector: invoicePayments
- name: bank_accounts_accounting
  endpoint:
    path: /reference/bank-accounts-accounting
    method: GET
    data_selector: bankAccounts
- name: chart_of_accounts
  endpoint:
    path: /reference/chart-of-accounts
    method: GET
    data_selector: chartOfAccounts
- name: Bank Accounts
  endpoint:
    path: /reference/bank-accounts
    method: GET
    data_selector: data
- name: Bank Transactions
  endpoint:
    path: /reference/bank-transactions
    method: GET
    data_selector: data
- name: bank_accounts
  endpoint:
    path: /reference/bank-accounts
    method: GET
- name: bank_assets
  endpoint:
    path: /reference/bank-assets-banking-1
    method: GET
- name: bank_transactions
  endpoint:
    path: /reference/bank-transactions
    method: GET
- name: bank_assets
  endpoint:
    path: /reference/bank-assets-banking-1
    method: GET
- name: shopify
  endpoint:
    path: /commerce-integrations/shopify
    method: GET
- name: square
  endpoint:
    path: /commerce-integrations/square
    method: GET
- name: disputes
  endpoint:
    path: /reference/commerce-disputes
    method: GET
    data_selector: disputes
    params: {}
- name: orders
  endpoint:
    path: /reference/commerce-orders
    method: GET
    data_selector: orders
    params: {}
- name: products
  endpoint:
    path: /reference/commerce-products
    method: GET
    data_selector: products
    params: {}
- name: transactions
  endpoint:
    path: /reference/commerce-transactions
    method: GET
    data_selector: transactions
    params: {}
- name: customer_data_request
  endpoint:
    path: /shopify/customer/request
    method: POST
- name: customer_data_erasure
  endpoint:
    path: /shopify/customer/redact
    method: POST
- name: shop_data_erasure
  endpoint:
    path: /shopify/shop/redact
    method: POST
- name: disputes
  endpoint:
    path: /reference/commerce-disputes
    method: GET
- name: orders
  endpoint:
    path: /reference/commerce-orders
    method: GET
- name: products
  endpoint:
    path: /reference/commerce-products
    method: GET
- name: transactions
  endpoint:
    path: /reference/commerce-transactions
    method: GET
- name: apAging
  endpoint:
    path: /apAging
    method: GET
- name: arAging
  endpoint:
    path: /arAging
    method: GET
- name: balanceSheets
  endpoint:
    path: /balanceSheets
    method: GET
- name: cashflowStatements
  endpoint:
    path: /cashflowStatements
    method: GET
- name: creditScores
  endpoint:
    path: /creditScores
    method: GET
- name: financialBenchmarking
  endpoint:
    path: /financialBenchmarking
    method: GET
- name: financialForecasts
  endpoint:
    path: /financialForecasts
    method: GET
- name: financialRatios
  endpoint:
    path: /financialRatios
    method: GET
- name: fraudRiskMetrics
  endpoint:
    path: /fraudRiskMetrics
    method: GET
- name: incomeStatements
  endpoint:
    path: /incomeStatements
    method: GET
- name: probabilityOfDefault
  endpoint:
    path: /probabilityOfDefault
    method: GET
- name: taxBenchmarking
  endpoint:
    path: /taxBenchmarking
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: bills
  endpoint:
    path: /bills
    method: GET
- name: bills_payments
  endpoint:
    path: /bills/payments
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: invoices
  endpoint:
    path: /invoices
    method: GET
- name: invoices_payments
  endpoint:
    path: /invoices/payments
    method: GET
- name: journalEntries
  endpoint:
    path: /journalEntries
    method: GET
- name: vendors
  endpoint:
    path: /vendors
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: balanceSheets
  endpoint:
    path: /balanceSheets
    method: GET
- name: cashflowStatements
  endpoint:
    path: /cashflowStatements
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: financialForecasts
  endpoint:
    path: /financialForecasts
    method: GET
- name: incomeStatements
  endpoint:
    path: /incomeStatements
    method: GET
- name: journalEntries
  endpoint:
    path: /journalEntries
    method: GET
- name: railzScore
  endpoint:
    path: /reports/railzScore
    method: GET
- name: vendors
  endpoint:
    path: /vendors
    method: GET
- name: access_token
  endpoint:
    path: /getAccess
    method: GET
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: accounting_transactions
  endpoint:
    path: /reference/accounting-transactions
    method: GET
- name: balance_sheet
  endpoint:
    path: /balanceSheets
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
    params: {}
- name: vendors
  endpoint:
    path: /vendors
    method: GET
    data_selector: records
    params: {}
- name: pagination
  endpoint:
    params:
      offset: 0
      limit: 100
- name: Accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: Transactions
  endpoint:
    path: /reference/get-accountingtransactions
    method: GET
- name: Customers
  endpoint:
    path: /reference/getcustomers
    method: GET
- name: Invoices
  endpoint:
    path: /reference/getinvoices
    method: GET
- name: Vendors
  endpoint:
    path: /reference/getvendors
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: ''
- name: connections
  endpoint:
    path: /reference/api-connections
    method: GET
- name: data
  endpoint:
    path: /reference/data
    method: GET
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: sandbox
  endpoint:
    path: /reference/sandbox
    method: GET
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: accounting_transactions
  endpoint:
    path: /reference/accounting-transactions
    method: GET
- name: customers
  endpoint:
    path: /reference/customers
    method: GET
- name: report_meta
  endpoint:
    path: /report/meta
    method: GET
    data_selector: meta
    params: {}
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
    data_selector: data
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
    data_selector: data
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: data_sync
  endpoint:
    path: /data/sync
    method: POST
    data_selector: data
    params: {}
- name: sync_status
  endpoint:
    path: /data/syncStatus
    method: GET
    data_selector: data
    params: {}
- name: pushOptions
  endpoint:
    path: /pushOptions
    method: GET
    data_selector: properties
- name: pushStatus
  endpoint:
    path: /data/pushStatus
    method: GET
    data_selector: pushStatus
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: data_sync
  endpoint:
    path: /reference/datasync
    method: POST
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: sandbox
  endpoint:
    path: /reference/feedersandboxcontrollerv2_firewebhook
    method: POST
- name: Invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: passThrough.CustomField
- name: Estimates
  endpoint:
    path: /estimates
    method: POST
    data_selector: passThrough.CustomField
- name: Purchase Orders
  endpoint:
    path: /purchase-orders
    method: POST
    data_selector: passThrough.CustomField
- name: Invoice Credit Memos
  endpoint:
    path: /invoice-credit-memos
    method: POST
    data_selector: passThrough.CustomField
- name: Refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: passThrough.CustomField
- name: Businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: Invoices
  endpoint:
    path: /reference/invoices
    method: GET
- name: Contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: New Connection
  endpoint:
    path: /reference/connection-webhooks
    method: POST
    data_selector: event
    params: {}
- name: Authentication Completed
  endpoint:
    path: /reference/connection-webhooks
    method: POST
    data_selector: event
    params: {}
- name: Connection Disconnected
  endpoint:
    path: /reference/connection-webhooks
    method: POST
    data_selector: event
    params: {}
- name: push_event
  endpoint:
    path: /webhooks/push
    method: POST
    data_selector: data
    params: {}
- name: Batch Push Status
  endpoint:
    path: /batch-push-status
    method: POST
    data_selector: event
    params: {}
- name: batch_push
  endpoint:
    path: /batchPush
    method: POST
    data_selector: data.batch
    params: {}
- name: data_sync_event
  endpoint:
    path: /webhook/data-sync
    method: POST
    data_selector: data
    params: {}
- name: full_payload
  endpoint:
    path: /full-payload
    method: POST
    data_selector: data
- name: simple_payload
  endpoint:
    path: /simple-payload
    method: POST
    data_selector: data
- name: GDPR Customer Request
  endpoint:
    path: /webhooks/gdpr/customer-request
    method: POST
    data_selector: event
    params: {}
- name: customer_request
  endpoint:
    path: /webhook/customerRequest
    method: POST
    data_selector: data
    params: {}
- name: customer_redact
  endpoint:
    path: /webhook/customerRedact
    method: POST
    data_selector: data
    params: {}
- name: Accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: Invoices
  endpoint:
    path: /reference/getinvoices
    method: GET
- name: Customers
  endpoint:
    path: /reference/getcustomers
    method: GET
- name: fire_webhooks
  endpoint:
    path: /sandbox/fireWebhooks
    method: POST
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: businesses
  endpoint:
    path: /reference/get-businesses
    method: GET
- name: sandbox
  endpoint:
    path: /sandbox/fireWebhooks
    method: POST
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: invoices
  endpoint:
    path: /reference/invoices
    method: GET
- name: transactions
  endpoint:
    path: /reference/commerce-transactions
    method: GET
- name: connections
  endpoint:
    path: /connections
    method: GET
- name: disconnect_connection
  endpoint:
    path: /v2/connections/disconnect
    method: PUT
    data_selector: connectionId
- name: push_status
  endpoint:
    path: /v2/data/pushStatus
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      pushCommunicationId: string
      batchId: string
- name: delete_status
  endpoint:
    path: /v2/data/deleteStatus
    method: GET
    data_selector: data
- name: syncStatus
  endpoint:
    path: /data/syncStatus
    method: GET
- name: syncStatus
  endpoint:
    path: /v2/data/syncStatus
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      offset: number
      limit: number
      startDate: string
      endDate: string
      dataType: string
      reportFrequency: string
      currentStatus: string
      accountingMethod: string
- name: sync_info
  endpoint:
    path: /data/syncInfo
    method: GET
- name: sync_status
  endpoint:
    path: /syncstatus
    method: GET
- name: data_sync
  endpoint:
    path: /datasync
    method: POST
- name: fetch_latest_sync_information
  endpoint:
    path: /v2/data/syncInfo
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      requestId: string
      syncType: string
      dataType: string
- name: push_options
  endpoint:
    path: /v2/data/pushOptions
    method: GET
    params:
      connectionUuid: ''
      dataType: ''
- name: List Businesses
  endpoint:
    path: /reference/get-businesses
    method: GET
    data_selector: ''
    params: {}
- name: business_info
  endpoint:
    path: /reference/businessinfo
    method: GET
    data_selector: businesses
    params: {}
- name: businesses
  endpoint:
    path: /businesses
    method: GET
- name: businesses
  endpoint:
    path: /businesses
    method: GET
    data_selector: data
    params: {}
- name: create_business
  endpoint:
    path: /v2/businesses
    method: POST
- name: business
  endpoint:
    path: /v2/businesses/{uuid}
    method: PUT
    data_selector: object
    params: {}
- name: delete_business
  endpoint:
    path: /v2/businesses/{uuid}
    method: DELETE
    data_selector: deleted
- name: migrate_connection
  endpoint:
    path: /v2/businesses/{uuid}/connection/migrate
    method: POST
    data_selector: connectionUuid
    params: {}
- name: business_info
  endpoint:
    path: /businesses/info
    method: GET
- name: generate_url
  endpoint:
    path: /v2/businesses/generateUrl
    method: POST
- name: trigger_sandbox_webhook_events
  endpoint:
    path: /v2/sandbox/fireWebhooks
    method: POST
- name: accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: transactions
  endpoint:
    path: /reference/get-accountingtransactions
    method: GET
- name: contacts
  endpoint:
    path: /reference/getcontacts
    method: GET
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: businesses
  endpoint:
    path: /reference/get-businesses
    method: GET
- name: customers
  endpoint:
    path: /reference/getcustomers
    method: GET
- name: invoices
  endpoint:
    path: /reference/getinvoices
    method: GET
- name: journal_entries
  endpoint:
    path: /reference/get-journalentries
    method: GET
- name: accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
    data_selector: accounts
- name: accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: transactions
  endpoint:
    path: /reference/get-accountingtransactions
    method: GET
- name: balance_sheets
  endpoint:
    path: /reference/getbalancesheets
    method: GET
- name: income_statements
  endpoint:
    path: /reference/getincomestatements
    method: GET
- name: cashflow_statements
  endpoint:
    path: /reference/getcashflowstatements
    method: GET
- name: VendorRef
  endpoint:
    path: /reference/vendors
    method: GET
    data_selector: vendorRef
    params: {}
- name: connections
  endpoint:
    path: /reference/getconnections
    method: GET
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
- name: customers
  endpoint:
    path: /reference/customers
    method: GET
- name: vendors
  endpoint:
    path: /reference/vendors
    method: GET
- name: customerRef
  endpoint:
    data_selector: customerRef
- name: entityRef
  endpoint:
    data_selector: entityRef
- name: inventoryRef
  endpoint:
    data_selector: inventoryRef
- name: journalRef
  endpoint:
    data_selector: journalRef
- name: locationRef
  endpoint:
    data_selector: locationRef
- name: parentRef
  endpoint:
    data_selector: parentRef
- name: paymentMethodRef
  endpoint:
    data_selector: paymentMethodRef
- name: purchaseOrderRef
  endpoint:
    data_selector: purchaseOrderRef
- name: subsidiaryRef
  endpoint:
    data_selector: subsidiaryRef
- name: taxRateRef
  endpoint:
    data_selector: taxRateRef
- name: trackingCategoryRefs
  endpoint:
    data_selector: trackingCategoryRefs
- name: List Accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: List Businesses
  endpoint:
    path: /reference/get-businesses
    method: GET
- name: accounts
  endpoint:
    path: /reference/getaccounts
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /accounting/accounts
    method: GET
- name: accounts
  endpoint:
    path: /accounting/accounts
    method: GET
    data_selector: data
    params:
      connectionUuid: ''
      offset: ''
      limit: 100
- name: accounts
  endpoint:
    path: /accounting/accounts
    method: POST
    data_selector: object
- name: batch_create_accounts
  endpoint:
    path: /v2/accounting/accounts/batch
    method: POST
    data_selector: batch
    params:
      connectionUuid: required
- name: batch_update_accounts
  endpoint:
    path: /v2/accounting/accounts/batch
    method: PUT
    data_selector: batch
    params:
      connectionUuid: required
- name: update_account
  endpoint:
    path: /v2/accounting/accounts/{id}
    method: PUT
    data_selector: object
    params: {}
- name: accounting_transactions
  endpoint:
    path: /reference/get-accountingtransactions
    method: GET
    data_selector: transactions
    params: {}
- name: accounting_transactions
  endpoint:
    path: /reference/get-accountingtransactions
    method: GET
    data_selector: records
- name: accounting_transactions
  endpoint:
    path: /accounting/accountingTransactions
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: ar_aging
  endpoint:
    path: /reference/get-araging
    method: GET
    data_selector: records
- name: AP Aging
  endpoint:
    path: /reference/get-apaging
    method: GET
    data_selector: AP Aging Details
    params: {}
- name: Aging Reports
  endpoint:
    path: /apAging
    method: GET
    params:
      reportFrequency: month
- name: aged_payables
  endpoint:
    path: /accounting/apAging
    method: GET
    data_selector: reports
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
      reportFrequency: string
- name: Aged Receivables
  endpoint:
    path: /arAging
    method: GET
    params:
      reportFrequency: month
- name: Aged Payables
  endpoint:
    path: /apAging
    method: GET
    params:
      reportFrequency: month
- name: aged_receivables
  endpoint:
    path: /v2/accounting/arAging
    method: GET
    data_selector: reports
    params:
      connectionUuid: ''
      startDate: ''
      endDate: ''
      offset: ''
      limit: ''
      orderBy: ''
      reportFrequency: ''
- name: attachments
  endpoint:
    path: /reference/get-attachments
    method: GET
    data_selector: records
- name: aged_receivables
  endpoint:
    path: /reference/get-araging
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /reference/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: GET
    data_selector: payload
- name: attachments
  endpoint:
    path: /accounting/attachments
    method: GET
    data_selector: data
    params:
      connectionUuid: required
      offset: number
      limit: number
      orderBy: string
- name: attachments
  endpoint:
    path: /v2/accounting/attachments
    method: POST
    data_selector: object
    params: {}
- name: connections
  endpoint:
    path: /reference/api-connections
    method: GET
    data_selector: success
- name: businesses
  endpoint:
    path: /reference/api-businesses
    method: GET
    data_selector: businesses
- name: bank_transfer
  endpoint:
    path: /reference/get-banktransfers
    method: GET
- name: bank_transfers
  endpoint:
    path: /reference/get-banktransfers
    method: GET
    data_selector: records
- name: bankTransfers
  endpoint:
    path: /bankTransfers
    method: GET
- name: bank_transfers
  endpoint:
    path: /accounting/bankTransfers
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: bank_transfers
  endpoint:
    path: /accounting/bankTransfers
    method: POST
- name: bank_accounts
  endpoint:
    path: /accounting/bank-accounts
    method: GET
- name: bank_transfer
  endpoint:
    path: /v2/accounting/bankTransfers
    method: POST
    data_selector: object
    params: {}
- name: bank_accounts
  endpoint:
    path: /reference/accounting-bankaccounts
    method: GET
    data_selector: records
- name: bank_accounts
  endpoint:
    path: /reference/accounting-bankaccounts
    method: GET
- name: bankAccounts
  endpoint:
    path: /bankAccounts
    method: GET
- name: bank_accounts
  endpoint:
    path: /v2/accounting/bankAccounts
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      offset: number
      limit: number
      orderBy: string
- name: bank_accounts
  endpoint:
    path: /v2/accounting/bankAccounts
    method: POST
    data_selector: object
- name: bank_accounts
  endpoint:
    path: /accounting/bankAccounts
    method: GET
- name: bank_transactions
  endpoint:
    path: /accounting/bankTransactions
    method: GET
- name: bank_transactions
  endpoint:
    path: /reference/accounting-banktransactions
    method: GET
- name: bank_transactions
  endpoint:
    path: /accounting-banktransactions
    method: GET
    data_selector: records
- name: bankTransactions
  endpoint:
    path: /bankTransactions
    method: GET
- name: bank_transactions
  endpoint:
    path: /accounting/bankTransactions
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: YYYY-MM-DD
      endDate: YYYY-MM-DD
      offset: number
      limit: number
      orderBy: string
- name: bank_transactions
  endpoint:
    path: /accounting/bankTransactions
    method: POST
- name: bank_transaction
  endpoint:
    path: /accounting/bankTransactions
    method: POST
    data_selector: object
    params: {}
- name: batch_create_bank_transactions
  endpoint:
    path: /v2/accounting/bankTransactions/batch
    method: POST
- name: batch_update_bank_transactions
  endpoint:
    path: /v2/accounting/bankTransactions/batch
    method: PUT
    data_selector: batch
    params: {}
- name: bank_transactions
  endpoint:
    path: /accounting/bankTransactions/id
    method: PUT
- name: update_bank_transaction
  endpoint:
    path: /v2/accounting/bankTransactions/{id}
    method: PUT
    data_selector: object
    params: {}
- name: payments
  endpoint:
    path: /reference/getbills
    method: GET
- name: bill_status
  endpoint:
    path: /reference/bills
    method: GET
- name: bills
  endpoint:
    path: /reference/getbills
    method: GET
    data_selector: bills
    params: {}
- name: bills
  endpoint:
    path: /accounting/bills
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
      status: string
- name: bills
  endpoint:
    path: /bills
    method: GET
- name: bills
  endpoint:
    path: /bills
    method: POST
    data_selector: object
    params: {}
- name: bills
  endpoint:
    path: /v2/accounting/bills/{id}
    method: PUT
- name: bills
  endpoint:
    path: /v2/accounting/bills/{id}
    method: DELETE
    data_selector: object
    params:
      connectionUuid: string
- name: bill_payments
  endpoint:
    path: /reference/bill-payments
    method: GET
    data_selector: bill payments
- name: bill_payments
  endpoint:
    path: /reference/getbillspayments
    method: GET
    data_selector: records
- name: bill_payments
  endpoint:
    path: /bills/payments
    method: GET
    data_selector: payload
- name: bill_payments
  endpoint:
    path: /accounting/bills/payments
    method: GET
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: bill_payments
  endpoint:
    path: /accounting/bills/payments
    method: POST
- name: list_bill_payments
  endpoint:
    path: /accounting/bills/payments
    method: GET
- name: bill_payment
  endpoint:
    path: /v2/accounting/bills/payments
    method: POST
- name: bill_payment
  endpoint:
    path: /v2/accounting/bills/payments/{id}
    method: PUT
    data_selector: object
    params: {}
- name: delete_bill_payment
  endpoint:
    path: /v2/accounting/bills/payments/{id}
    method: DELETE
    data_selector: object
    params:
      connectionUuid: string
- name: bill_credit_notes
  endpoint:
    path: /reference/bill-creditnotes
    method: GET
- name: bill_credit_notes
  endpoint:
    path: /reference/bill-credit-notes
    method: GET
    data_selector: records
- name: bill_credit_notes
  endpoint:
    path: /v2/accounting/bills/creditNotes
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: bill_credit_note
  endpoint:
    path: /v2/accounting/bills/creditNotes
    method: POST
    data_selector: object
    params: {}
- name: bill_credit_notes
  endpoint:
    path: /accounting/bills/creditNotes
    method: POST
- name: bill_payment_requests
  endpoint:
    path: /bill-payment-requests
    method: GET
- name: Bill Payment Requests
  endpoint:
    path: /reference/bill-payment-requests
    method: GET
- name: bill_payment_requests
  endpoint:
    path: /reference/bill-payment-requests
    method: GET
    data_selector: records
- name: bill_payment_requests
  endpoint:
    path: /bills/paymentRequests
    method: GET
- name: bill_payment_requests
  endpoint:
    path: /bills/paymentRequests
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: bill_payment_request
  endpoint:
    path: /accounting/bills/paymentRequests
    method: POST
    data_selector: object
    params: {}
- name: bill_payment_request
  endpoint:
    path: /v2/accounting/bills/paymentRequests/{id}
    method: PATCH
- name: customers
  endpoint:
    path: /reference/getcustomers
    method: GET
- name: customers
  endpoint:
    path: /reference/getcustomers
    method: GET
    data_selector: customers
- name: customer_bank_accounts
  endpoint:
    path: /reference/customers-bankaccounts
    method: GET
    data_selector: bankAccounts
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params:
      incremental: connectionUuid
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: batch_create_customers
  endpoint:
    path: /batchcustomer
    method: POST
- name: customers
  endpoint:
    path: /v2/accounting/customers
    method: POST
    data_selector: object
    params: {}
- name: customers_batch_create
  endpoint:
    path: /v2/accounting/customers/batch
    method: POST
- name: batch_update_customers
  endpoint:
    path: /v2/accounting/customers/batch
    method: PUT
- name: customers
  endpoint:
    path: /accounting/customers/{id}
    method: PUT
    data_selector: object
    params: {}
- name: bankAccounts
  endpoint:
    path: /accounting/customers/bankAccounts
    method: GET
- name: customer_bank_accounts
  endpoint:
    path: /accounting/customers/bankAccounts
    method: GET
    data_selector: data
    params:
      connectionUuid: required
      offset: optional
      limit: optional
      orderBy: optional
- name: customer_bank_account
  endpoint:
    path: /v2/accounting/customers/bankAccounts
    method: POST
    data_selector: object
- name: customer_bank_accounts
  endpoint:
    path: /accounting/customers/bankAccounts
    method: POST
- name: deposits
  endpoint:
    path: /deposits
    method: GET
- name: Deposits
  endpoint:
    path: /reference/get-deposits
    method: GET
- name: Customer Bank Account
  endpoint:
    path: /reference/customers-bankaccounts
    method: GET
- name: deposits
  endpoint:
    path: /reference/deposits
    method: GET
    data_selector: records
    params: {}
- name: deposits
  endpoint:
    path: /accounting/deposits
    method: GET
- name: deposits
  endpoint:
    path: /deposits
    method: GET
    data_selector: data
    params:
      connectionUuid: ''
      startDate: ''
      endDate: ''
      offset: ''
      limit: '100'
      orderBy: ''
- name: deposits
  endpoint:
    path: /accounting/deposits
    method: GET
- name: deposits
  endpoint:
    path: /v2/accounting/deposits
    method: POST
    data_selector: object
    params: {}
- name: estimates
  endpoint:
    path: /reference/get-estimates
    method: GET
- name: estimates
  endpoint:
    path: /reference/estimates
    method: GET
    data_selector: records
- name: estimates
  endpoint:
    path: /estimates
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: estimates
  endpoint:
    path: /v2/accounting/estimates
    method: POST
    data_selector: object
    params: {}
- name: balance_sheets
  endpoint:
    path: /reference/getbalancesheets
    method: GET
    data_selector: reports
    params:
      reconstruct: 'true'
- name: balance_sheets
  endpoint:
    path: /reference/balance-sheets
    method: GET
- name: balance_sheets
  endpoint:
    path: /balanceSheets
    method: GET
    params:
      accountingMethod: accrual
      reportFrequency: month
- name: balance_sheets
  endpoint:
    path: /accounting/balanceSheets
    method: GET
    data_selector: reports
    params:
      connectionUuid: string
      accountingMethod: string
      reportFrequency: string
      startDate: string
      endDate: string
      section: string
      subSection: string
      group: string
      accountId: string
      limit: number
- name: balance_sheets_report
  endpoint:
    path: /v2/accounting/balanceSheets/report
    method: GET
    data_selector: reports
    params:
      connectionUuid: required
      reportFrequency: required
      startDate: required
      endDate: required
- name: balance_sheets_report
  endpoint:
    path: /balanceSheets/report
    method: GET
    params:
      accountingMethod: accrual
      reportFrequency: month
- name: cashflow_statements
  endpoint:
    path: /cashflow-statements
    method: GET
    params: {}
- name: Cashflow Statements
  endpoint:
    path: /cashflow-statements
    method: GET
- name: cashflow_statements
  endpoint:
    path: /reference/getcashflowstatements
    method: GET
    data_selector: records
    params: {}
- name: cashflowStatements
  endpoint:
    path: /cashflowStatements
    method: GET
    params:
      accountingMethod: accrual
      reportFrequency: month
- name: cashflow_statements
  endpoint:
    path: /accounting/cashflowStatements
    method: GET
    data_selector: reports
    params:
      connectionUuid: ''
      accountingMethod: accrual
      reportFrequency: ''
      startDate: ''
      endDate: ''
      section: ''
      subSection: ''
      group: ''
      accountId: ''
      subAccountId: ''
      account: ''
      value: ''
      offset: ''
      limit: ''
- name: cashflow_statements
  endpoint:
    path: /cashflowStatements/report
    method: GET
    params:
      accountingMethod: accrual
      reportFrequency: month
- name: cashflow_statements_report
  endpoint:
    path: /accounting/cashflowStatements/report
    method: GET
    data_selector: reports
    params:
      connectionUuid: string
      accountingMethod: accrual
      reportFrequency: month
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: income_statements
  endpoint:
    path: /reference/getincomestatements
    method: GET
    data_selector: records
- name: income_statements
  endpoint:
    path: /reference/getincomestatements
    method: GET
    data_selector: Income Statements
- name: income_statements
  endpoint:
    path: /accounting/incomeStatements
    method: GET
    params:
      accountingMethod: accrual
      reportFrequency: month
- name: income_statements
  endpoint:
    path: /incomeStatements
    method: GET
    data_selector: reports
    params:
      connectionUuid: required
      accountingMethod: defaults to accrual
      reportFrequency: required
      startDate: string
      endDate: string
      section: string
      subSection: string
      group: string
      subGroup: string
      accountId: string
      subAccountId: string
      account: string
      value: float
      offset: number
      limit: number
      orderBy: string
- name: income_statements
  endpoint:
    path: /accounting/incomeStatements/report
    method: GET
    params:
      accountingMethod: accrual
      reportFrequency: month
- name: income_statements_report
  endpoint:
    path: /accounting/incomeStatements/report
    method: GET
    data_selector: reports
    params:
      connectionUuid: ''
      accountingMethod: accrual
      reportFrequency: ''
      startDate: ''
      endDate: ''
      offset: ''
      limit: ''
      orderBy: ''
- name: List Inventory Items
  endpoint:
    path: /reference/getinventory
    method: GET
- name: Report Income Statements
  endpoint:
    path: /reference/incomestatementsreport
    method: GET
- name: inventory
  endpoint:
    path: /reference/inventory
    method: GET
    data_selector: items
- name: inventory
  endpoint:
    path: /inventory
    method: GET
- name: inventory_items
  endpoint:
    path: /inventory
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      offset: number
      limit: number
      orderBy: string
- name: inventory
  endpoint:
    path: /inventory
    method: GET
- name: inventory_item
  endpoint:
    path: /accounting/inventory
    method: POST
- name: inventory
  endpoint:
    path: /accounting/inventory/{id}
    method: PUT
- name: List Invoices
  endpoint:
    path: /reference/getinvoices
    method: GET
- name: invoices
  endpoint:
    path: /reference/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
      status: string
- name: invoices
  endpoint:
    path: /invoices
    method: GET
- name: create_invoice
  endpoint:
    path: /accounting/invoices
    method: POST
    data_selector: object
    params: {}
- name: invoices
  endpoint:
    path: /v2/accounting/invoices/{id}
    method: PUT
- name: delete_invoice
  endpoint:
    path: /accounting/invoices/{id}
    method: DELETE
    data_selector: object
    params:
      connectionUuid: string
- name: invoice_credit_note
  endpoint:
    path: /reference/get-invoice-creditnotes
    method: GET
- name: invoice_credit_notes
  endpoint:
    path: /reference/get-invoice-creditnotes
    method: GET
    data_selector: records
- name: invoice_credit_notes
  endpoint:
    path: /invoices/creditNotes
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
- name: invoice_credit_notes
  endpoint:
    path: /invoices/creditNotes
    method: POST
- name: invoice_payments
  endpoint:
    path: /invoices/payments
    method: GET
- name: invoice_credit_note
  endpoint:
    path: /v2/accounting/invoices/creditNotes
    method: POST
    data_selector: data
    params: {}
- name: Invoice Payments
  endpoint:
    path: /reference/getinvoicespayments
    method: GET
- name: invoice_payments
  endpoint:
    path: /invoice-payments
    method: GET
    data_selector: invoice_payments
    params: {}
- name: Invoice Payment
  endpoint:
    path: /invoices/payments
    method: GET
- name: list_invoice_payments
  endpoint:
    path: /invoices/payments
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: invoice_payments
  endpoint:
    path: /invoices/payments
    method: POST
- name: list_invoice_payments
  endpoint:
    path: /invoices/payments
    method: GET
- name: invoice_payment
  endpoint:
    path: /v2/accounting/invoices/payments
    method: POST
    data_selector: object
    params: {}
- name: invoice_payment
  endpoint:
    path: /v2/accounting/invoices/payments/{id}
    method: PUT
- name: delete_invoice_payment
  endpoint:
    path: /v2/accounting/invoices/payments/{id}
    method: DELETE
    data_selector: object
    params:
      connectionUuid: string
- name: journal_entries
  endpoint:
    path: /reference/get-journalentries
    method: GET
- name: journal_entries
  endpoint:
    path: /reference/journal-entries
    method: GET
    data_selector: records
    params: {}
- name: journal_entries
  endpoint:
    path: /accounting/journalEntries
    method: GET
- name: journal_entries
  endpoint:
    path: /accounting/journalEntries
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
- name: journal_entries
  endpoint:
    path: /v2/accounting/journalEntries
    method: POST
- name: journal_entries
  endpoint:
    path: /journalEntries
    method: POST
- name: list_journal_entries
  endpoint:
    path: /journalEntries
    method: GET
- name: journalEntries
  endpoint:
    path: /accounting/journalEntries/batch
    method: POST
- name: batch_create_journal_entries
  endpoint:
    path: /v2/accounting/journalEntries/batch
    method: POST
    data_selector: batch
- name: journal_entries
  endpoint:
    path: /accounting/journalEntries/batch
    method: PUT
- name: batch_update_journal_entries
  endpoint:
    path: /v2/accounting/journalEntries/batch
    method: PUT
- name: journal_entries
  endpoint:
    path: /v2/accounting/journalEntries/{id}
    method: PUT
    data_selector: object
    params: {}
- name: journals
  endpoint:
    path: /journals-1
    method: GET
    data_selector: records
- name: journals
  endpoint:
    path: /reference/journals-1
    method: GET
    data_selector: records
- name: journals
  endpoint:
    path: /accounting/journals
    method: GET
- name: journals
  endpoint:
    path: /accounting/journals
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      limit: number
- name: journals
  endpoint:
    path: /v2/accounting/journals
    method: POST
    data_selector: object
- name: journals
  endpoint:
    path: /journals
    method: POST
- name: journal_entries
  endpoint:
    path: /journal-entries
    method: GET
- name: journals
  endpoint:
    path: /accounting/journals/{id}
    method: PUT
    data_selector: object
    params: {}
- name: purchase_orders
  endpoint:
    path: /reference/get-purchaseorder
    method: GET
- name: purchase_orders
  endpoint:
    path: /reference/get-purchaseorder
    method: GET
    data_selector: records
    params: {}
- name: purchase_order
  endpoint:
    path: /v2/accounting/purchaseOrders
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: purchase_orders
  endpoint:
    path: /accounting/purchaseOrders
    method: POST
    data_selector: payload
- name: purchase_order
  endpoint:
    path: /accounting/purchaseOrders
    method: POST
    data_selector: data
    params: {}
- name: refunds
  endpoint:
    path: /reference/refunds
    method: GET
- name: refund
  endpoint:
    path: /reference/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: refunds
  endpoint:
    path: /refunds
    method: GET
- name: create_refund
  endpoint:
    path: /push-refund
    method: POST
- name: refunds
  endpoint:
    path: /accounting/refunds
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      startDate: string
      endDate: string
      offset: number
      limit: number
      orderBy: string
- name: refunds
  endpoint:
    path: /refunds
    method: GET
- name: tax_rates
  endpoint:
    path: /tax-rates
    method: GET
- name: refund
  endpoint:
    path: /v2/accounting/refunds
    method: POST
    data_selector: object
    params: {}
- name: List Tax Rates
  endpoint:
    path: /reference/gettaxrates
    method: GET
- name: tax_rates
  endpoint:
    path: /reference/gettaxrates
    method: GET
    data_selector: taxRates
- name: tax_rates
  endpoint:
    path: /taxRates
    method: GET
- name: tax_rates
  endpoint:
    path: /taxRates
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      offset: number
      limit: number
      orderBy: string
- name: tax_rates
  endpoint:
    path: /accounting/taxRates
    method: POST
- name: list_tax_rates
  endpoint:
    path: /tax-rates
    method: GET
- name: tax_rates
  endpoint:
    path: /v2/accounting/taxRates
    method: POST
    data_selector: data
    params: {}
- name: tax_authority
  endpoint:
    path: /reference/taxauthority
    method: GET
- name: tax_authority
  endpoint:
    path: /reference/tax-authority
    method: GET
    data_selector: taxauthority
    params: {}
- name: taxAuthority
  endpoint:
    path: /taxAuthority
    method: GET
- name: tax_authority
  endpoint:
    path: /taxAuthority
    method: GET
    data_selector: data
    params:
      connectionUuid: string
      offset: number
      limit: number
      orderBy: string
notes:
- The API key you use to authenticate requests will determine whether the request
  is in Sandbox or Production mode.
- Connect up to 5 lifetime businesses.
- Create unlimited Sandbox business connections.
- Businesses created using Connect without a connection will automatically be deleted
  after 24 hours.
- A business can only have one unique active accounting connection.
- Get started with a test integration and life-like data.
- Launch your app with unlimited live connections.
- Once the business customer opens the link they will follow the online authorization
  process as established by each service provider.
- You can view and download the financial summary & reports in Accounting Data as
  a Service™ Dashboard.
- Ensure you are using production versions of your application keys for each integration.
- An access_token is valid for 60 minutes. It is recommended to get a new access_token
  before calling each API endpoint.
- You should have your Accounting Data as a Service™ Sandbox integrations enabled
  before proceeding with this step.
- Accounting Data as a Service™ expects an authentication token to be included in
  all API requests to the server.
- Super Administrators can add members directly by going to Account > Members.
- Deleting a team will disconnect connected businesses and delete all businesses,
  team members and settings under that team.
- Always store API keys securely and avoid exposing them in client-side code or public
  repositories.
- Regularly rotate and update API keys to minimize security risks.
- Assign the minimal necessary permissions to each API key to adhere to the principle
  of least privilege.
- Data synchronization can be configured to occur at specific frequencies—daily, weekly,
  bi-weekly, monthly, quarterly, or annually.
- The amount of historical data to synchronize can be adjusted, ranging from the last
  few years up to a decade, based on the subscription plan and detected data history.
- Some integrations require registration and configuration of integration keys.
- Deleting an API key is irreversible and will permanently disconnect any data retrieval
  using that key.
- Disconnecting a service connection will not delete a business' financial data.
- A deleted business will not show up in the dashboard or in the /businesses API.
- The Sync Data button will be enabled/disabled. If disabled it means the datatype
  does not support on-demand syncing.
- The Developers page is only available to team members with Developer and Administrator
  roles.
- API logs request and status of API calls
- SSO is disabled by default in the Dashboard.
- Enabling SSO will enforce your organization to sign-in using SSO and team members
  will not be able to login with their email and password credentials.
- Accounting Data as a Service™ Sandbox gives you access to a minimum of five years
  of production-like data (starting January 2017) from any accounting integration
  supported by Accounting Data as a Service™.
- There is a 50 connection limit to service provider accounts.
- Data synchronization using Quickbooks Online Sandbox may be delayed if same sandbox
  account is used multiple times due to Quickbooks Online rate limit.
- Pushing data on the sandbox is done through mocked responses. No actual data is
  being created in the Sandbox.
- Pulling and posting attachments are currently not supported in the current version
  of the Accounting Data as a Service™ mocked sandbox.
- Accounting Data as a Service™ does not guarantee the delivery of events in the order
  in which they are generated.
- 'Automatic migration cannot be done for these Service Providers: QuickBooks Desktop,
  Oracle Netsuite, Sage Intacct.'
- Communication with all Accounting Data as a Service™ products requires TLS 1.2 or
  higher.
- Accounting Data as a Service™ maintains SOC2 compliance certifications.
- Accounting Data as a Service™ does not store account credentials, scrape data, nor
  sell business customers data.
- Connect is only supported using the latest version of Google Chrome, Safari, Firefox
  and Microsoft Edge.
- This QuickStart is specifically using the Sandbox environments.
- Application should run at http://localhost:4200
- IP Whitelisting does not apply to Connect in Sandbox Mode.
- IPv6 is currently not supported.
- Available on Enterprise plans only.
- Event Listeners can be utilized for better user experience.
- serviceName is optional in timeout error events.
- Sites will use the same integration settings used by Connect that you enabled in
  the Dashboard.
- A Sites link is valid for 24 hours.
- Customization is available on Pay as You Go and above only.
- Bank reconciliation requires active banking and accounting connections.
- The initial version of our reconciliation doesn't support bank accounts with different
  currencies.
- Available on Enterprise plans only and for US businesses only.
- A missing financial statement for a reporting period will result in a missing credit
  score & rating.
- A missing financial statement for a reporting period (e.g. due to no cashflow activity
  during that period), will result in an incomplete set of business valuations.
- Financial forecasts rely on historical data. The smaller the historical data, the
  less accurate are the financial forecasts of a business.
- A missing financial statement for a reporting period will result in an incomplete
  set of financial forecasts.
- Some financial ratios might not always be available or returned for a business.
- Financial ratios are calculated based on our normalized financial statements (balance
  sheet, income statement and cashflow statement).
- A missing financial statement for a reporting period will result in an incomplete
  set of financial ratios
- A missing financial statement for a reporting period will result in a missing probability
  of default.
- The Accounting Data as a Service™ Visualizations SDK is a collection of reusable
  web components that help you build a dashboard using normalized financial transactions
  and analytics from the Accounting Data as a Service™ API.
- This step is important to ensure you are able to authenticate and generate an access
  token.
- The all option in the Report Type field is not an acceptable parameter by the SDK.
- The Error Image component is used to show an image indicator based on HTTP response
  codes.
- Current version of Visualizations does not allow you to modify the trendline color.
- Depending on the end user's Azure Active Directory settings for Dynamics 365 Business
  Central they may need the connection to your app to be approved by an admin.
- When connecting their Dynamics 365 Business Central account, Accounting Data as
  a Service™ will only allow access to production accounts.
- Dynamics 365 Business Central just allows deleting bills with the status `Draft`.
- When creating Attachments for a Journal Entry in Dynamics 365 Business Central,
  you can link the attachment to the `JournalEntry Line` but not to the `JournalEntry`.
- Depending on the end user's Azure Active Directory settings for Dynamics 365 Finance
  (Dynamics ERP) they may need the connection to your app to be approved by an admin
  of their Azure Active Directory.
- When connecting their Dynamics 365 Finance account, Accounting Data as a Service™
  will only allow access to production accounts.
- Scopes for Pushing Data require corresponding write scope selection.
- FreshBooks limitation doesn't allow Accounting Data as a Service™ to provide cash-based
  reconstructed statements.
- When creating expenses in FreshBooks if a new merchant is added, this merchant is
  not automatically added to your existing vendor list.
- Some objects may return nulls in deeply nested fields
- Create a MYOB developer application and register it to obtain Client ID and Client
  Secret.
- Add your Client ID and Client Secret to Accounting Data as a Service™.
- MYOB only allows pulling 3 years worth of financial data.
- This issue is specific to the API. You can still apply credit notes to foreign currency
  invoices using the MYOB AccountRight UI.
- Uses Oracle NetSuite SOAP Web Service and not the REST Web Service that is still
  in beta.
- Oracle NetSuite does not require any application credentials for accessing the API.
- Ensure to enable Multiple Currencies, Token-based Authentication and Soap Web Services.
- 'Oracle Netsuite can provide Accounting Transactions without any account information.
  For that, Accounting Data as a Service™ will catalog the next fields as `Unknown`:
  `section`, `subSection`, `group`, and `subGroup`.'
- Oracle Netsuite is not retrieving `lines.trackingCategories` for Estimates endpoint.
- NetSuite enforces strict concurrency limits, which can significantly impact the
  processing time for large datasets.
- Utilize the Accounting Data as a Service dashboard to specify and filter the exact
  data types and number of years you need.
- Create a custom version of the Accounting Data as a Service bundle and add the required
  permissions specific to your subsidiaries or business setup.
- Accounting Data as a Service™ does not fix issues related to older versions of the
  software. Please upgrade to the latest version of QuickBooks Desktop to continue
  to use the QuickBooks Desktop connector.
- 'Each business will have access to a unique configuration file with the name convention:
  ADaaS-[BUSINESS_NAME].qwc.'
- Businesses must save their unique Accounting Data as a Service™ .qwc configuration
  file before proceeding.
- For QuickBooks Desktop currency is not exported in Balance Sheet, Income Statement,
  and Trial Balance.
- QuickBooks Online for Accountants and QuickBooks Online for Freelancers are not
  supported.
- Development keys do not work with live QuickBooks Online accounts and vice versa,
  Production keys will not work in the Sandbox environment.
- QuickBooks Online is not returning certain fields for Purchase Orders, Expenses,
  and Customers.
- Enter your Client ID and Client Secret from the step above, then click Save & Enable.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Unlike most other integrations, Sage Intacct does not require any application credentials
  for accessing the API.
- Your business customers must sign in with an administrator role to setup and authorize
  a connection to their Sage Intacct account.
- Sage Intacct does not provide specific format rules for the journalCode field.
- Bill payments created with paymentMethodRef.type of 'cash' or 'bankTransfer' will
  create a bill payment instead of a payment request.
- You need to retrieve your application's secure keys from the Wave developer portal.
- To link more than 25 business connections, you must become a Xero app partner.
- Xero has specific requirements about who can gain partner status and how they must
  build their integration.
- To link more than 25 companies, become a Xero app partner.
- Xero does not allow sending more than one attachment per request.
- When creating an invoice and you fill the field discount_amount, this is getting
  ignored and the return has it as 0.
- For the use of the Bills API in Zoho Books, it's necessary to reconnect all your
  connected businesses.
- Requires setup of connected app in api
- Bank Transactions Classification is in open beta. We recommend getting in touch
  with our product and integration support team before using it in production.
- Plaid requires OAuth for all financial institution integrations they connect to
  through data sharing agreements.
- We Do Not Store Banking Credentials
- Like all connections, a banking connection may become inactive.
- Enable Auth product in your account to connect to Accounting Data as a Service™.
- When setting up Plaid in production, the manage integration page will not prompt
  you to choose an Application Key Type.
- 'Plaid has three different Plaid environments: Sandbox, Development and Production'
- To avoid data inconsistencies, we recommend that you create new businesses when
  changing Plaid environments. Connections originally created in another environment
  will become invalid and will require reauthorization.
- You must create a Shopify app and request access to customer data.
- Shopify app approval can take up to two weeks.
- You will need to setup and enable the GDPR Customer Request and Connection Disconnected
  webhook events.
- Enable the Sandbox mode in the Dashboard and configure your Shopify integration.
- We recommend you start testing Square in Sandbox, so you can retrieve and check
  sample data before going live with your application.
- To use your Square Sandbox account in the Accounting Data as a Service™ Sandbox,
  enable the Sandbox mode in the Dashboard and configure your Square integration.
- Free account allows connecting up to 5 lifetime businesses.
- Ensure you save the client identifier and secret for each environment.
- Whenever you generate new credentials, previous credentials become invalid.
- An access_token is valid for 60 minutes. We recommend getting a new access_token
  before calling each API endpoint.
- API keys for integrations do not expire, they have to be revoked by deleting them
  through the Dashboard to stop them from working.
- Bearer authorization header, which is formed by concatenating the word `Bearer`
  with the access token, separated by a space.
- Rate limits restrict the number of requests that can be made to the API within a
  defined time period.
- Clients with different plans may experience different rate limits.
- Rate limiting restricts the number of requests that can be made to the API within
  a defined time period.
- The API uses a simple set of query parameters on data endpoints to facilitate paging
  through large amounts of data.
- By default, results are returned in ascending order.
- reportFrequency, currency, startDate, and endDate are not always returned.
- Each API endpoint that retrieves data from an Accounting Service Provider returns
  a response with one or more Reports.
- Daily Data Synchronization occurs every 24 hours from the connection date.
- The API does not perform validation on the CustomField.
- Only Root Level fields (a.k.a top level, parent level) are allowed to be used as
  raw fields.
- The API does not perform validation of the raw fields within the `passThrough` section.
  Any errors encountered will originate from the Accounting Service Provider (ASP).
- Your webhook URL needs to be publicly available and secure HTTPS.
- Refresh token expired for quickbooks, reconnection required
- Successful and failed push events are sent as webhooks.
- The batch push webhooks are part of our beta v2 APIs which are not officially supported
  for the general public.
- Handles batch push webhooks for journal entries.
- Webhook events are sent in standard JSON format.
- Applicable to Shopify integrations only.
- We generate a unique secret key for each webhook URL.
- Rate limits may apply to API calls.
- Ensure to handle pagination where necessary.
- You will need to provide us with a public API endpoint that accepts Basic authentication
  using a username and password.
- The URL for this request expired after 30 days.
- 'Railz currently supports the pushing of attachments types: bill, invoice, inventory,
  billPayment, invoicePayment, expense, customer, vendor, journalEntry, deposit, invoicecreditNote,
  billcreditNote, purchaseOrder, bankTransaction, and bankTransfer.'
- Attachments are only retrieved on an Initial data synchronization.
- Do not use the vendorInvoiceNumber field in your request for successful posting
  of Bills to Oracle NetSuite.
- When querying Income Statements through the API, you have the option to include
  the `reconstruct=true` parameter to receive reconstructed Income Statements.
- All income statements are part of an array of reports.
- Due to a limitation in Xero's API, all items from Xero are mapped as `unknown`.
- Due to a limitation in QBO's API, non-inventory items can not be pushed to QuickBooks
  Online.
errors:
- 'duplicateAccount: Account already connected to using another business name.'
- 'unauthorizedClientIdKey: Provided client identifier and secret are not production
  keys.'
- 'unauthorizedCredentials: Client ID and Secret are not authorized, Token does not
  have a valid grant, Token is not authorized and Token does not have valid tenants.'
- 'expiredCredentials: Refresh token expired, reconnection was required and could
  not refresh the credentials.'
- 'credentialsNotFound: Active credential is not found for service provider during
  the pulling of data.'
- 'reauthorizationRequired: The login details of this bank connection need to be reauthorized.'
- 'authorizationRevoked: The business has revoked its permission for your application
  to access its bank account.'
- 'institutionNotFound: Unable to retrieve institution details when business user
  made connection via Connect.'
- 'insufficientPermission: Accounting Data as a Service™ was not given the right permissions
  to fetch data.'
- 'disconnectedByCustomer: The connection was disconnected via the dashboard or API.'
- 'disconnectedByBusinessDeletion: The business was deleted via the dashboard.'
- 'disconnectedByRedaction: Connection disabled due to business data redaction request
  when using Shopify.'
- 'integrationKeyChanged: Connection disconnected by changing the integration API
  keys in the dashboard.'
- '200: Successful execution'
- '401: Unauthorized access'
- Once an API key is deleted, you will not be able to retrieve data with that key
  again.
- 'Return a 2xx Response: Your server must accept HTTP POST requests and respond to
  each event with a 2xx response.'
- 'Invalid Tokens: Access or Refresh Tokens provided are not valid.'
- 'Expired Tokens: The Access or Refresh Tokens have expired.'
- 'Missing Data: Some necessary data is missing in the form submission.'
- 'Incorrect Tenant/Realm ID: The Tenant ID or Realm ID provided does not match with
  the service provider.'
- 'Post-Migration Data Sync Issues: Data does not seem to be syncing correctly after
  the migration.'
- 'Application Errors: Receiving unexpected errors in the application after the migration.'
- 'Data Not Retrieved: Data not retrieved for certain data types.'
- 'timeout: Request has timedout.'
- 'unauthorizedCredentials: Unable to authorize connection with provided credentials.'
- Accounts created earlier than October 2022 are providing account name instead of
  uuid in the account_sub_name field.
- The Expenses endpoint is not returning accountRefId and accountRefName.
- The Journal Entries endpoint can return some unbalanced Journal Entries.
- Unable to find a matching line for sublist apply with key
- Insufficient permissions for setting the value of a field
- Make sure all your transactions have a GST/HST rate before you save.
- If more than one attachment is sent, Xero will return an error.
- If more than one refund is sent, Xero will return an error.
- 401 Invalid Api Identifier or Secret.
- '400: Bad Request - The request was unacceptable, often due to missing a required
  parameter.'
- '401: Unauthorized - No valid API keys or access token provided.'
- '403: Forbidden - The API key doesn''t have permissions to perform the request or
  not supported on current billing plan.'
- '404: Resource Not Found - The requested resource doesn''t exist.'
- '404: Resource Not Found - The requested resource is only available for beta users.'
- '404: Endpoint Not Allowed - You tried to access an unsupported endpoint for ASP.'
- '409: Conflict - The request conflicts with another request.'
- '429: Too Many Requests - Too many requests hit the API too quickly. We recommend
  an exponential backoff of your requests.'
- '500: Server Error - An unexpected error and could not process your request.'
- '502: Bad Gateway - Invalid response received from server.'
- '503: Service Unavailable - Accounting Data as a Service™ is temporarily offline
  for maintenance. Please try again later.'
- '504: Server Timeout - The request timed out from the server.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '429 Too Many Requests: Wait until the Retry-After duration has elapsed before attempting
  to make a new request.'
- '429 Too Many Requests: Wait until the `Retry-After` duration has elapsed before
  attempting to make a new request.'
- '409 Conflict: Data Sync is already in progress'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Business Validation Error: When you use Accounts Payable, you must choose
  a supplier in the Name field.'
- 500 Server Error
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 400 Bad Request Error - Thrown if fields sent via query does not follow specifications
- 401 Unauthorized - Not logged in or log in expired
- 403 Forbidden - Not enough permission
- '500: Server Error'
- '400 Bad Request: Thrown if fields sent via query does not follow specifications'
- '401 Unauthorized: Not logged in or log in expired'
- '403 Forbidden: Not enough permission'
- '200'
- '400'
- '401'
- '403'
- '500'
- '500: Has additional fields'
- 400 Bad Request - Thrown if fields sent via query does not follow specifications
- '500 Server Error: Has additional fields'
- '404'
- '200: Success'
- '202: Data in pending state'
- '204: No data available'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- 500 Internal Server Error
auth_info:
  mentioned_objects:
  - access_token
  - api_client_id
  - api_client_secret
  - Azure Active Directory
  - App Registrations
  - API permissions
  - Authorization Header
client:
  base_url: https://api.railz.ai/v2
source_metadata: null
