Here is the YAML configuration for the `timely_app` REST API source based on the provided documentation:

client:
  base_url: "https://api.timelyapp.com/1.1/"
  auth:
    type: "bearer"
    # Additional auth parameters if needed

resources:
  - name: "accounts"
    endpoint: "/accounts"
    method: "GET"
    params:
      # No specific query parameters mentioned
    data_selector: "$"  # JSONPath to select data from response

  - name: "webhooks"
    endpoint: "/webhooks"
    method: "GET"
    params:
      # No specific query parameters mentioned
    data_selector: "$"  # JSONPath to select data from response

  - name: "webhook"
    endpoint: "/webhook"
    method: "GET"
    params:
      # No specific query parameters mentioned
    data_selector: "$"  # JSONPath to select data from response

notes:
  - "Authentication is managed via OAuth2. The access token must be included in the Authorization header as a Bearer token."
  - "Ensure the webhook URL uses HTTPS."
  - "The base URL and all endpoints require secure HTTP (HTTPS) connections."
  - "It's crucial to handle webhook secrets securely to verify the authenticity of incoming requests."

errors:
  - 401  # Unauthorized - Access token is invalid or expired
  - 403  # Forbidden - Insufficient permissions
  - 429  # Too Many Requests - Rate limit exceeded

auth_info:
  mentioned_objects:
    - "Bearer token required for authentication"
    - "Access token must be retrieved via OAuth2 process"

source_metadata:
  description: "TimelyApp API provides endpoints to access and manage account details and webhook configurations."
### Explanation:
1. **Base URL**: Extracted from the documentation as `https://api.timelyapp.com/1.1/`.
2. **Authentication Method**: Identified as "bearer" token via OAuth2.
3. **API Resources**: Listed three main endpoints: `accounts`, `webhooks`, and `webhook`.
4. **Query Parameters**: No specific query parameters were mentioned in the provided documentation.
5. **Notes**: Included relevant information about authentication, HTTPS requirements, and security practices.
6. **Error Codes**: Common error codes were included based on typical API responses.
7. **Description**: Provided a brief overview of what the API offers based on the context.