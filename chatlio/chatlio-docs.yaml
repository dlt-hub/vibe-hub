resources:
- name: webhook_payload
  endpoint:
    path: /send-to-webhook
    method: POST
    data_selector: payload
    params: {}
- name: chat_widget
  endpoint:
    path: /chatlio/widget
    method: GET
- name: visitor_info
  endpoint:
    path: /chatlio/info
    method: GET
- name: widget
  endpoint:
    path: /chatlio-widget
    method: GET
    data_selector: widgetData
- name: Support Component
  endpoint:
    path: /identify
    method: POST
    data_selector: data
    params: {}
- name: widget_embed_code
  endpoint:
    path: /widget/install
    method: GET
    data_selector: embed_code
- name: widget_install
  endpoint:
    path: /widget/install
    method: POST
    data_selector: embed_code
    params: {}
- name: commands
  endpoint:
    path: /chatlio/commands
    method: GET
    data_selector: commands
    params: {}
- name: new_conversation
  endpoint:
    path: /webhooks/new_conversation
    method: POST
    data_selector: visitor
    params: {}
- name: new_offline_message
  endpoint:
    path: /webhooks/new_offline_message
    method: POST
    data_selector: visitor
    params: {}
- name: chat_transcript
  endpoint:
    path: /webhooks/chat_transcript
    method: POST
    data_selector: visitor
    params: {}
- name: conversation_summary
  endpoint:
    path: /chat_endpoints/all/conversation_summary
    method: GET
    data_selector: records
    params:
      visitor_data: 'true'
- name: widget_conversation_summary
  endpoint:
    path: /chat_endpoints/[widget-id]/conversation_summary
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /track
    method: POST
    data_selector: client.Track
    params: {}
- name: question_group
  endpoint:
    path: /api/question-groups
    method: POST
    data_selector: questionGroup
    params: {}
- name: commands
  endpoint:
    path: /chatlio/commands
    method: GET
    data_selector: commands
    params: {}
- name: webhook
  endpoint:
    path: /send-to-webhook
    method: POST
    data_selector: messages
    params: {}
notes:
- Although we try hard to not modify our classes and markup structure, at times it
  might be necessary on our end. This could break your overrides.
- A common starting point for these is your FAQs.
- Chatlio archives its channels after 12 hours.
- Channels are prefixed with a 'z-' to force them to the bottom of the list.
- Use 'data-start-hidden' attribute to keep the widget hidden until summoned.
- Requires embed code to load the widget.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Custom element <chatlio-widget> must be declared in JSX for TypeScript projects.
- You can use Chatlio with Content Security Policy (CSP) headers.
- If you load the Chatlio embed code from a javascript file, you can avoid the use
  of `script-src 'unsafe-inline'`.
- Response reminders are on by default and notifications are sent every 60 seconds
  until a visitor receives a reply.
- Operating hours schedule is off by default.
- Triggers are only fired once per visitor if the conditions are met.
- The matching behavior determines how Chatlio will check if a visitor should see
  the trigger or not on a given page.
- Exact matches need to include the domain name; this is optional for other matcher
  types.
- If you do not want this to happen, just set it to 0.
- Messages over 110 characters are automatically truncated.
- Sometimes you want to build your own button or link to open Chatlio chat.
- This website is built using latest technologies.
- Use Chatlio's JavaScript Widget API to define a custom URL scheme.
- The customUrlScheme will be the first part of your app URL before the '://'.
- The extraData key contains anything entered after the chatlio-command issued to
  send the webhook.
- You can customize pretty much everything about the chatlio widget.
- We also don’t charge extra for you modifying the CSS for the widget, giving you
  full control over the look of Chatlio.
- Trigger Automatically option to activate question group on widget open
- Chatlio commands are executed within Slack.
- Note that the protocol portion (“http://” or “https://”) is not used for matches
  of any kind.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.chatlio.com/v1/api
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
