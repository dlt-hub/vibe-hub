resources:
- name: auth
  endpoint:
    path: /api/v2/auth/jwt
    method: POST
- name: diagnostics_arp_table
  endpoint:
    path: /api/v2/diagnostics/arp_table
    method: GET
- name: firewall_rules
  endpoint:
    path: /api/v2/firewall/rules
    method: GET
- name: routing_static_routes
  endpoint:
    path: /api/v2/routing/static_routes
    method: GET
- name: haproxy_frontend_acl
  endpoint:
    path: /api/v2/services/haproxy/frontend/acl
    method: DELETE
- name: haproxy_frontend_action
  endpoint:
    path: /api/v2/services/haproxy/frontend/action
    method: POST
- name: haproxy_frontend_address
  endpoint:
    path: /api/v2/services/haproxy/frontend/address
    method: POST
- name: haproxy_frontend_certificate
  endpoint:
    path: /api/v2/services/haproxy/frontend/certificate
    method: POST
- name: haproxy_frontend
  endpoint:
    path: /api/v2/services/haproxy/frontend
    method: POST
- name: haproxy_frontend_error_file
  endpoint:
    path: /api/v2/services/haproxy/frontend/error_file
    method: POST
- name: haproxy_frontends
  endpoint:
    path: /api/v2/services/haproxy/frontends
    method: PUT
- name: haproxy_settings_dns_resolver
  endpoint:
    path: /api/v2/services/haproxy/settings/dns_resolver
    method: POST
- name: haproxy_settings_email_mailer
  endpoint:
    path: /api/v2/services/haproxy/settings/email_mailer
    method: POST
- name: haproxy_settings
  endpoint:
    path: /api/v2/services/haproxy/settings
    method: PATCH
- name: ntp_settings
  endpoint:
    path: /api/v2/services/ntp/settings
    method: PATCH
- name: ntp_time_server
  endpoint:
    path: /api/v2/services/ntp/time_server
    method: POST
- name: ntp_time_servers
  endpoint:
    path: /api/v2/services/ntp/time_servers
    method: PUT
- name: ssh
  endpoint:
    path: /api/v2/services/ssh
    method: PATCH
- name: service_watchdog
  endpoint:
    path: /api/v2/services/service_watchdog
    method: POST
- name: service_watchdogs
  endpoint:
    path: /api/v2/services/service_watchdogs
    method: PUT
- name: wake_on_lan_send
  endpoint:
    path: /api/v2/services/wake_on_lan/send
    method: POST
- name: auth
  endpoint:
    path: /api/v2/auth
    method: POST
    data_selector: data
    params: {}
- name: diagnostics
  endpoint:
    path: /api/v2/diagnostics
    method: GET
    data_selector: data
    params: {}
- name: firewall
  endpoint:
    path: /api/v2/firewall
    method: GET
    data_selector: data
    params: {}
- name: graphql
  endpoint:
    path: /api/v2/graphql
    method: POST
    data_selector: data
    params: {}
- name: interface
  endpoint:
    path: /api/v2/interface
    method: GET
    data_selector: data
    params: {}
- name: routing
  endpoint:
    path: /api/v2/routing
    method: GET
    data_selector: data
    params: {}
- name: status_carp
  endpoint:
    path: /api/v2/status/carp
    method: GET
    data_selector: null
    params: {}
- name: status_dhcp_server_leases
  endpoint:
    path: /api/v2/status/dhcp_server/leases
    method: GET
    data_selector: null
    params: {}
- name: status_gateways
  endpoint:
    path: /api/v2/status/gateways
    method: GET
    data_selector: null
    params: {}
- name: status_interfaces
  endpoint:
    path: /api/v2/status/interfaces
    method: GET
    data_selector: null
    params: {}
- name: status_logs_auth
  endpoint:
    path: /api/v2/status/logs/auth
    method: GET
    data_selector: null
    params: {}
- name: status_logs_dhcp
  endpoint:
    path: /api/v2/status/logs/dhcp
    method: GET
    data_selector: null
    params: {}
- name: status_logs_firewall
  endpoint:
    path: /api/v2/status/logs/firewall
    method: GET
    data_selector: null
    params: {}
- name: status_logs_openvpn
  endpoint:
    path: /api/v2/status/logs/openvpn
    method: GET
    data_selector: null
    params: {}
- name: status_system
  endpoint:
    path: /api/v2/status/system
    method: GET
    data_selector: null
    params: {}
- name: user
  endpoint:
    path: /api/v2/user
    method: GET
    data_selector: null
    params: {}
- name: vpn_ipsec_apply
  endpoint:
    path: /api/v2/vpn/ipsec/apply
    method: GET
    data_selector: null
    params: {}
- name: vpn_openvpn_clients
  endpoint:
    path: /api/v2/vpn/openvpn/clients
    method: GET
    data_selector: null
    params: {}
- name: account_key
  endpoint:
    path: /api/v2/services/acme/account_key
    method: GET
- name: account_key_register
  endpoint:
    path: /api/v2/services/acme/account_key/register
    method: POST
- name: account_key_registrations
  endpoint:
    path: /api/v2/services/acme/account_key/registrations
    method: GET
- name: account_keys
  endpoint:
    path: /api/v2/services/acme/account_keys
    method: GET
- name: certificate_action
  endpoint:
    path: /api/v2/services/acme/certificate/action
    method: GET
- name: certificate_domain
  endpoint:
    path: /api/v2/services/acme/certificate/domain
    method: GET
- name: certificate
  endpoint:
    path: /api/v2/services/acme/certificate
    method: GET
- name: certificate_issuances
  endpoint:
    path: /api/v2/services/acme/certificate/issuances
    method: GET
- name: certificate_renew
  endpoint:
    path: /api/v2/services/acme/certificate/renew
    method: POST
- name: certificate_renewals
  endpoint:
    path: /api/v2/services/acme/certificate/renewals
    method: GET
- name: certificates
  endpoint:
    path: /api/v2/services/acme/certificates
    method: GET
- name: settings
  endpoint:
    path: /api/v2/services/acme/settings
    method: GET
- name: access_list
  endpoint:
    path: /api/v2/services/bind/access_list
    method: GET
- name: access_list_entry
  endpoint:
    path: /api/v2/services/bind/access_list/entry
    method: GET
- name: dns_forwarder_apply
  endpoint:
    path: /api/v2/services/dns_forwarder/apply
    method: GET
- name: dns_resolver_apply
  endpoint:
    path: /api/v2/services/dns_resolver/apply
    method: GET
- name: freeradius_client
  endpoint:
    path: /api/v2/services/freeradius/client
    method: GET
- name: haproxy_apply
  endpoint:
    path: /api/v2/services/haproxy/apply
    method: GET
- name: haproxy_backend
  endpoint:
    path: /api/v2/services/haproxy/backend
    method: GET
- name: haproxy_frontend_acl
  endpoint:
    path: /api/v2/services/haproxy/frontend/acl
    method: DELETE
- name: haproxy_frontend_action
  endpoint:
    path: /api/v2/services/haproxy/frontend/action
    method: POST
- name: haproxy_frontend_address
  endpoint:
    path: /api/v2/services/haproxy/frontend/address
    method: POST
- name: haproxy_frontend_certificate
  endpoint:
    path: /api/v2/services/haproxy/frontend/certificate
    method: POST
- name: haproxy_frontend
  endpoint:
    path: /api/v2/services/haproxy/frontend
    method: POST
- name: haproxy_frontend_error_file
  endpoint:
    path: /api/v2/services/haproxy/frontend/error_file
    method: POST
- name: haproxy_frontends
  endpoint:
    path: /api/v2/services/haproxy/frontends
    method: GET
- name: haproxy_settings_dns_resolver
  endpoint:
    path: /api/v2/services/haproxy/settings/dns_resolver
    method: POST
- name: haproxy_settings_email_mailer
  endpoint:
    path: /api/v2/services/haproxy/settings/email_mailer
    method: POST
- name: haproxy_settings
  endpoint:
    path: /api/v2/services/haproxy/settings
    method: PATCH
- name: ntp_settings
  endpoint:
    path: /api/v2/services/ntp/settings
    method: PATCH
- name: ntp_time_server
  endpoint:
    path: /api/v2/services/ntp/time_server
    method: POST
- name: service_watchdog
  endpoint:
    path: /api/v2/services/service_watchdog
    method: POST
- name: FirewallRule
  endpoint:
    path: /api/firewall/rules
    method: GET
    data_selector: firewallRules
- name: FirewallSchedule
  endpoint:
    path: /api/firewall/schedules
    method: GET
    data_selector: firewallSchedules
- name: FirewallState
  endpoint:
    path: /api/firewall/states
    method: GET
    data_selector: firewallStates
- name: VirtualIP
  endpoint:
    path: /virtual_ip
    method: GET
    data_selector: properties
- name: status_carp
  endpoint:
    path: /api/v2/status/carp
    method: GET
    data_selector: null
    params: {}
- name: status_dhcp_server_leases
  endpoint:
    path: /api/v2/status/dhcp_server/leases
    method: GET
    data_selector: null
    params: {}
- name: status_gateways
  endpoint:
    path: /api/v2/status/gateways
    method: GET
    data_selector: null
    params: {}
- name: status_interfaces
  endpoint:
    path: /api/v2/status/interfaces
    method: GET
    data_selector: null
    params: {}
- name: status_logs_auth
  endpoint:
    path: /api/v2/status/logs/auth
    method: GET
    data_selector: null
    params: {}
- name: status_logs_dhcp
  endpoint:
    path: /api/v2/status/logs/dhcp
    method: GET
    data_selector: null
    params: {}
- name: status_logs_firewall
  endpoint:
    path: /api/v2/status/logs/firewall
    method: GET
    data_selector: null
    params: {}
- name: status_logs_openvpn
  endpoint:
    path: /api/v2/status/logs/openvpn
    method: GET
    data_selector: null
    params: {}
- name: status_logs_system
  endpoint:
    path: /api/v2/status/logs/system
    method: GET
    data_selector: null
    params: {}
- name: system_crl
  endpoint:
    path: /api/v2/system/crl
    method: GET
    data_selector: null
    params: {}
- name: system_certificate_authorities
  endpoint:
    path: /api/v2/system/certificate_authorities
    method: GET
    data_selector: null
    params: {}
- name: user_auth_server
  endpoint:
    path: /api/v2/user/auth_server
    method: GET
    data_selector: null
    params: {}
- name: vpn_ipsec_phase1
  endpoint:
    path: /api/v2/vpn/ipsec/phase1
    method: GET
    data_selector: null
    params: {}
- name: FirewallApply
  endpoint:
    path: /firewall/apply
    method: GET
    data_selector: applied
- name: OneToOneNATMapping
  endpoint:
    path: /firewall/one_to_one_nat_mapping
    method: GET
    data_selector: interface
- name: OutboundNATMapping
  endpoint:
    path: /firewall/outbound_nat_mapping
    method: GET
    data_selector: interface
- name: OutboundNATMode
  endpoint:
    path: /firewall/outbound_nat_mode
    method: GET
    data_selector: mode
- name: PortForward
  endpoint:
    path: /firewall/port_forward
    method: GET
    data_selector: interface
- name: FirewallRule
  endpoint:
    path: /firewall/rule
    method: GET
    data_selector: type
- name: FirewallRule
  endpoint:
    path: /firewall/rules
    method: GET
    data_selector: rules
- name: FirewallSchedule
  endpoint:
    path: /firewall/schedules
    method: GET
    data_selector: schedules
- name: TrafficShaper
  endpoint:
    path: /traffic/shapers
    method: GET
    data_selector: shapers
- name: TrafficShaperLimiterQueue
  endpoint:
    path: /api/traffic_shaper_limiter_queue
    method: GET
- name: TrafficShaperQueue
  endpoint:
    path: /api/traffic_shaper_queue
    method: GET
- name: VirtualIP
  endpoint:
    path: /api/virtual_ip
    method: GET
- name: ACMECertificate
  endpoint:
    path: /acme/certificate
    method: POST
- name: ACMECertificateIssue
  endpoint:
    path: /acme/certificate/issue
    method: POST
- name: ACMECertificateRenew
  endpoint:
    path: /acme/certificate/renew
    method: POST
- name: BINDAccessList
  endpoint:
    path: /bind/accesslist
    method: GET
- name: BINDSettings
  endpoint:
    path: /bind/settings
    method: GET
- name: DHCPServerApply
  endpoint:
    path: /api/dhcpserver/apply
    method: GET
- name: DHCPServerBackend
  endpoint:
    path: /api/dhcpserver/backend
    method: GET
- name: DHCPServerCustomOption
  endpoint:
    path: /api/dhcpserver/customoption
    method: GET
- name: DHCPServer
  endpoint:
    path: /api/dhcpserver
    method: GET
- name: DHCPServerStaticMapping
  endpoint:
    path: /api/dhcpserver/staticmapping
    method: GET
- name: tunnel
  endpoint:
    path: /tunnel
    method: GET
- name: interface_stats
  endpoint:
    path: /interface_stats
    method: GET
- name: auth_log
  endpoint:
    path: /auth_log
    method: GET
- name: dhcp_log
  endpoint:
    path: /dhcp_log
    method: GET
- name: firewall_log
  endpoint:
    path: /firewall_log
    method: GET
- name: openvpn_log
  endpoint:
    path: /openvpn_log
    method: GET
- name: system_log
  endpoint:
    path: /system_log
    method: GET
- name: OpenVPNServerStatus
  endpoint:
    path: /api/openvpn/server/status
    method: GET
    data_selector: status
- name: OpenVPNServerConnectionStatus
  endpoint:
    path: /api/openvpn/server/connections
    method: GET
    data_selector: connections
- name: CertificateGenerate
  endpoint:
    path: /CertificateGenerate
    method: POST
    data_selector: data
- name: CertificateRenew
  endpoint:
    path: /CertificateRenew
    method: POST
    data_selector: data
- name: CertificateSigningRequest
  endpoint:
    path: /CertificateSigningRequest
    method: POST
    data_selector: data
- name: SystemVersion
  endpoint:
    path: /api/system/version
    method: GET
    data_selector: version
- name: SystemHostname
  endpoint:
    path: /api/system/hostname
    method: GET
    data_selector: hostname
- name: OpenVPNClient
  endpoint:
    path: /OpenVPNClient
    method: GET
    data_selector: properties
- name: OpenVPNClientExportConfig
  endpoint:
    path: /OpenVPNClientExportConfig
    method: GET
    data_selector: properties
- name: jd_access_key_id
  endpoint:
    path: /dns/jd/access_key_id
    method: GET
- name: jd_access_key_secret
  endpoint:
    path: /dns/jd/access_key_secret
    method: GET
- name: jd_region
  endpoint:
    path: /dns/jd/region
    method: GET
- name: joker_username
  endpoint:
    path: /dns/joker/username
    method: GET
- name: joker_password
  endpoint:
    path: /dns/joker/password
    method: GET
- name: kappernetdns_key
  endpoint:
    path: /dns/kappernet/key
    method: GET
- name: kappernetdns_secret
  endpoint:
    path: /dns/kappernet/secret
    method: GET
- name: kinghost_username
  endpoint:
    path: /dns/kinghost/username
    method: GET
- name: kinghost_password
  endpoint:
    path: /dns/kinghost/password
    method: GET
- name: knot_server
  endpoint:
    path: /dns/knot/server
    method: GET
- name: knot_key
  endpoint:
    path: /dns/knot/key
    method: GET
- name: la_id
  endpoint:
    path: /dns/la/id
    method: GET
- name: la_key
  endpoint:
    path: /dns/la/key
    method: GET
- name: lsw_key
  endpoint:
    path: /dns/leaseweb/key
    method: GET
- name: limacity_apikey
  endpoint:
    path: /dns/limacity/apikey
    method: GET
- name: linode_api_key
  endpoint:
    path: /dns/linode/api_key
    method: GET
- name: linode_v4_api_key
  endpoint:
    path: /dns/linode/v4/api_key
    method: GET
- name: loopia_user
  endpoint:
    path: /dns/loopia/user
    method: GET
- name: loopia_password
  endpoint:
    path: /dns/loopia/password
    method: GET
- name: lua_key
  endpoint:
    path: /dns/lua/key
    method: GET
- name: lua_email
  endpoint:
    path: /dns/lua/email
    method: GET
- name: miab_username
  endpoint:
    path: /dns/miab/username
    method: GET
- name: miab_password
  endpoint:
    path: /dns/miab/password
    method: GET
- name: miab_server
  endpoint:
    path: /dns/miab/server
    method: GET
- name: misaka_key
  endpoint:
    path: /dns/misaka/key
    method: GET
- name: mydnsjp_masterid
  endpoint:
    path: /dns/mydnsjp/masterid
    method: GET
- name: mydnsjp_password
  endpoint:
    path: /dns/mydnsjp/password
    method: GET
- name: mb_ak
  endpoint:
    path: /dns/mythic_beasts/ak
    method: GET
- name: mb_as
  endpoint:
    path: /dns/mythic_beasts/as
    method: GET
- name: namecom_username
  endpoint:
    path: /dns/namecom/username
    method: GET
- name: namecom_token
  endpoint:
    path: /dns/namecom/token
    method: GET
- name: namecheap_api_key
  endpoint:
    path: /dns/namecheap/api_key
    method: GET
- name: namecheap_username
  endpoint:
    path: /dns/namecheap/username
    method: GET
- name: nm_user
  endpoint:
    path: /dns/nm/user
    method: GET
- name: nm_sha256
  endpoint:
    path: /dns/nm/sha256
    method: GET
- name: nanelo_token
  endpoint:
    path: /dns/nanelo/token
    method: GET
- name: nederhost_key
  endpoint:
    path: /dns/nederhost/key
    method: GET
- name: namesilo_key
  endpoint:
    path: /dns/namesilo/key
    method: GET
- name: neodigit_api_token
  endpoint:
    path: /dns/neodigit/api_token
    method: GET
- name: nc_apikey
  endpoint:
    path: /dns/netcup/apikey
    method: GET
- name: nc_apipw
  endpoint:
    path: /dns/netcup/apipw
    method: GET
- name: nc_cid
  endpoint:
    path: /dns/netcup/cid
    method: GET
- name: netlify_access_token
  endpoint:
    path: /dns/netlify/access_token
    method: GET
- name: nic_clientid
  endpoint:
    path: /dns/nic/clientid
    method: GET
- name: nic_clientsecret
  endpoint:
    path: /dns/nic/clientsecret
    method: GET
- name: nic_username
  endpoint:
    path: /dns/nic/username
    method: GET
- name: nic_password
  endpoint:
    path: /dns/nic/password
    method: GET
- name: ns1_key
  endpoint:
    path: /dns/nsone/key
    method: GET
- name: nw_api_token
  endpoint:
    path: /dns/nw/api_token
    method: GET
- name: nw_api_endpoint
  endpoint:
    path: /dns/nw/api_endpoint
    method: GET
- name: onecom_user
  endpoint:
    path: /dns/one/user
    method: GET
- name: onecom_password
  endpoint:
    path: /dns/one/password
    method: GET
- name: online_api_key
  endpoint:
    path: /dns/online/api_key
    method: GET
- name: oci_cli_tenancy
  endpoint:
    path: /dns/oci/cli/tenancy
    method: GET
- name: oci_cli_user
  endpoint:
    path: /dns/oci/cli/user
    method: GET
- name: oci_cli_region
  endpoint:
    path: /dns/oci/cli/region
    method: GET
- name: oci_cli_key
  endpoint:
    path: /dns/oci/cli/key
    method: GET
- name: auth_jwt
  endpoint:
    path: /api/v2/auth/jwt
    method: POST
- name: auth_key
  endpoint:
    path: /api/v2/auth/key
    method: POST
- name: auth_keys
  endpoint:
    path: /api/v2/auth/keys
    method: GET
- name: delete_auth_key
  endpoint:
    path: /api/v2/auth/keys
    method: DELETE
- name: ARPTable
  endpoint:
    path: /api/v2/diagnostics/arp_table
    method: GET
    data_selector: data
    params:
      limit: '0'
      offset: '0'
- name: deleteARPTable
  endpoint:
    path: /api/v2/diagnostics/arp_table
    method: DELETE
    data_selector: data
- name: config_history_revision
  endpoint:
    path: /api/v2/diagnostics/config_history/revisions
    method: GET
- name: config_history_revision_delete
  endpoint:
    path: /api/v2/diagnostics/config_history/revision
    method: DELETE
- name: diagnostics_halt_system
  endpoint:
    path: /api/v2/diagnostics/halt_system
    method: POST
    data_selector: data
- name: diagnostics_reboot
  endpoint:
    path: /api/v2/diagnostics/reboot
    method: POST
    data_selector: data
- name: diagnostics_table
  endpoint:
    path: /api/v2/diagnostics/table
    method: GET
    data_selector: data
- name: diagnostics_tables
  endpoint:
    path: /api/v2/diagnostics/tables
    method: GET
- name: advanced_settings
  endpoint:
    path: /api/v2/firewall/advanced_settings
    method: GET
    data_selector: data
- name: alias
  endpoint:
    path: /api/v2/firewall/alias
    method: GET
    data_selector: data
- name: openprovider_user
  endpoint:
    path: /openprovider/user
    method: POST
- name: openprovider_passwordhash
  endpoint:
    path: /openprovider/passwordhash
    method: POST
- name: ovh_ak
  endpoint:
    path: /ovh/ak
    method: POST
- name: ovh_as
  endpoint:
    path: /ovh/as
    method: POST
- name: ovh_ck
  endpoint:
    path: /ovh/ck
    method: POST
- name: ovh_end_point
  endpoint:
    path: /ovh/end_point
    method: POST
- name: pleskxml_user
  endpoint:
    path: /pleskxml/user
    method: POST
- name: pleskxml_pass
  endpoint:
    path: /pleskxml/pass
    method: POST
- name: pleskxml_uri
  endpoint:
    path: /pleskxml/uri
    method: POST
- name: pointhq_key
  endpoint:
    path: /pointhq/key
    method: POST
- name: pointhq_email
  endpoint:
    path: /pointhq/email
    method: POST
- name: porkbun_api_key
  endpoint:
    path: /porkbun/api_key
    method: POST
- name: porkbun_secret_api_key
  endpoint:
    path: /porkbun/secret_api_key
    method: POST
- name: pdns_url
  endpoint:
    path: /pdns/url
    method: POST
- name: pdns_serverid
  endpoint:
    path: /pdns/serverid
    method: POST
- name: pdns_token
  endpoint:
    path: /pdns/token
    method: POST
- name: pdns_ttl
  endpoint:
    path: /pdns/ttl
    method: POST
- name: rackcorp_apiuuid
  endpoint:
    path: /rackcorp/apiuuid
    method: POST
- name: rackcorp_apisecret
  endpoint:
    path: /rackcorp/apisecret
    method: POST
- name: rackspace_username
  endpoint:
    path: /rackspace/username
    method: POST
- name: rackspace_apikey
  endpoint:
    path: /rackspace/apikey
    method: POST
- name: rage4_username
  endpoint:
    path: /rage4/username
    method: POST
- name: rage4_token
  endpoint:
    path: /rage4/token
    method: POST
- name: rcode0_api_token
  endpoint:
    path: /rcode0/api_token
    method: POST
- name: rcode0_url
  endpoint:
    path: /rcode0/url
    method: POST
- name: rcode0_ttl
  endpoint:
    path: /rcode0/ttl
    method: POST
- name: regru_api_username
  endpoint:
    path: /regru/api_username
    method: POST
- name: regru_api_password
  endpoint:
    path: /regru/api_password
    method: POST
- name: scaleway_api_token
  endpoint:
    path: /scaleway/api_token
    method: POST
- name: schlundtech_user
  endpoint:
    path: /schlundtech/user
    method: POST
- name: schlundtech_password
  endpoint:
    path: /schlundtech/password
    method: POST
- name: sl_key
  endpoint:
    path: /selectel/key
    method: POST
- name: selfhostdns_username
  endpoint:
    path: /selfhostdns/username
    method: POST
- name: selfhostdns_password
  endpoint:
    path: /selfhostdns/password
    method: POST
- name: selfhostdns_map
  endpoint:
    path: /selfhostdns/map
    method: POST
- name: servercow_api_username
  endpoint:
    path: /servercow/api_username
    method: POST
- name: servercow_api_password
  endpoint:
    path: /servercow/api_password
    method: POST
- name: simply_accountname
  endpoint:
    path: /simply/accountname
    method: POST
- name: simply_apikey
  endpoint:
    path: /simply/apikey
    method: POST
- name: simply_api
  endpoint:
    path: /simply/api
    method: POST
- name: tele3_key
  endpoint:
    path: /tele3/key
    method: POST
- name: tele3_secret
  endpoint:
    path: /tele3/secret
    method: POST
- name: tencent_secretid
  endpoint:
    path: /tencent/secretid
    method: POST
- name: tencent_secretkey
  endpoint:
    path: /tencent/secretkey
    method: POST
- name: udr_user
  endpoint:
    path: /udr/user
    method: POST
- name: udr_pass
  endpoint:
    path: /udr/pass
    method: POST
- name: ultra_usr
  endpoint:
    path: /ultra/usr
    method: POST
- name: ULTRA_PWD
  endpoint:
    path: /ultra/pwd
    method: POST
- name: uno_user
  endpoint:
    path: /uno/user
    method: POST
- name: uno_key
  endpoint:
    path: /uno/key
    method: POST
- name: variomedia_api_token
  endpoint:
    path: /variomedia/api_token
    method: POST
- name: veesp_user
  endpoint:
    path: /veesp/user
    method: POST
- name: veesp_password
  endpoint:
    path: /veesp/password
    method: POST
- name: vercel_token
  endpoint:
    path: /vercel/token
    method: POST
- name: vscale_api_key
  endpoint:
    path: /vscale/api_key
    method: POST
- name: vultr_api_key
  endpoint:
    path: /vultr/api_key
    method: POST
- name: ws_apikey
  endpoint:
    path: /ws/apikey
    method: POST
- name: ws_apisecret
  endpoint:
    path: /ws/apisecret
    method: POST
- name: BINDZone
  endpoint:
    path: /BINDZone
    method: GET
    data_selector: records
- name: BINDView
  endpoint:
    path: /BINDView
    method: GET
    data_selector: records
- name: BINDSyncSettings
  endpoint:
    path: /BINDSyncSettings
    method: GET
    data_selector: records
- name: firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: GET
    data_selector: data
- name: create_firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: POST
    data_selector: data
- name: update_firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: PATCH
    data_selector: data
- name: delete_firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: DELETE
    data_selector: data
- name: DHCPServer
  endpoint:
    path: /api/dhcpserver
    method: GET
    data_selector: records
- name: DNSResolver
  endpoint:
    path: /api/dnsresolver
    method: GET
    data_selector: records
- name: firewall_apply
  endpoint:
    path: /api/v2/firewall/apply
    method: GET
- name: nat_one_to_one_mapping
  endpoint:
    path: /api/v2/firewall/nat/one_to_one/mapping
    method: GET
- name: InterfaceStats
  endpoint:
    path: /interface/stats
    method: GET
    data_selector: interface_stats
- name: AuthLog
  endpoint:
    path: /auth/log
    method: GET
    data_selector: auth_log
- name: DHCPLog
  endpoint:
    path: /dhcp/log
    method: GET
    data_selector: dhcp_log
- name: FirewallLog
  endpoint:
    path: /firewall/log
    method: GET
    data_selector: firewall_log
- name: OpenVPNLog
  endpoint:
    path: /openvpn/log
    method: GET
    data_selector: openvpn_log
- name: SystemLog
  endpoint:
    path: /system/log
    method: GET
    data_selector: system_log
- name: outbound_mapping
  endpoint:
    path: /api/v2/firewall/nat/outbound/mapping
    method: GET
    data_selector: data
    params: {}
- name: create_outbound_mapping
  endpoint:
    path: /api/v2/firewall/nat/outbound/mapping
    method: POST
    data_selector: data
    params: {}
- name: update_outbound_mapping
  endpoint:
    path: /api/v2/firewall/nat/outbound/mapping
    method: PATCH
    data_selector: data
    params: {}
- name: delete_outbound_mapping
  endpoint:
    path: /api/v2/firewall/nat/outbound/mapping
    method: DELETE
    data_selector: data
    params: {}
- name: OpenVPNClient
  endpoint:
    path: /api/v1/openvpn_client
    method: GET
- name: OpenVPNClientExportConfig
  endpoint:
    path: /api/v1/openvpn_client_export_config
    method: GET
- name: outbound_nat_mapping
  endpoint:
    path: /api/v2/firewall/nat/outbound/mappings
    method: GET
- name: delete_firewall_nat_outbound_mapping
  endpoint:
    path: /api/v2/firewall/nat/outbound/mapping
    method: DELETE
    params:
      id: required
- name: WireGuardTunnel
  endpoint:
    path: /api/wireguard/tunnel
    method: GET
    data_selector: tunnels
- name: Firewall NAT Outbound Mappings
  endpoint:
    method: PUT
- name: Firewall NAT Outbound Mappings
  endpoint:
    method: DELETE
- name: auth_jwt
  endpoint:
    path: /api/v2/auth/jwt
    method: POST
- name: auth_key
  endpoint:
    path: /api/v2/auth/key
    method: POST
- name: auth_keys
  endpoint:
    path: /api/v2/auth/keys
    method: GET
- name: firewall_nat_outbound_mode
  endpoint:
    path: /api/v2/firewall/nat/outbound/mode
    method: GET
    data_selector: data
    params: {}
- name: firewall_nat_port_forward
  endpoint:
    path: /api/v2/firewall/nat/port_forward
    method: GET
    data_selector: data
    params: {}
- name: arp_table_entry
  endpoint:
    path: /api/v2/diagnostics/arp_table/entry
    method: GET
    data_selector: data
    params: {}
- name: command_prompt
  endpoint:
    path: /api/v2/diagnostics/command_prompt
    method: POST
    data_selector: data
    params: {}
- name: config_history_revision
  endpoint:
    path: /api/v2/diagnostics/config_history/revision
    method: GET
    data_selector: data
    params: {}
- name: port_forward
  endpoint:
    path: /api/v2/firewall/nat/port_forwards
    method: GET
- name: create_port_forward
  endpoint:
    path: /api/v2/firewall/nat/port_forward
    method: POST
- name: update_port_forward
  endpoint:
    path: /api/v2/firewall/nat/port_forward
    method: PATCH
- name: delete_port_forward
  endpoint:
    path: /api/v2/firewall/nat/port_forward
    method: DELETE
- name: firewall_rule
  endpoint:
    path: /api/v2/firewall/rule
    method: GET
    data_selector: data
    params:
      id:
        required: true
- name: diagnostics_config_history_revisions
  endpoint:
    path: /api/v2/diagnostics/config_history/revisions
    method: GET
- name: diagnostics_config_history_revision
  endpoint:
    path: /api/v2/diagnostics/config_history/revisions/{id}
    method: DELETE
- name: firewall_rule
  endpoint:
    path: /api/v2/firewall/rules
    method: GET
- name: delete_firewall_rule
  endpoint:
    path: /api/v2/firewall/rules
    method: DELETE
- name: firewall_schedule
  endpoint:
    path: /api/v2/firewall/schedule
    method: GET
    data_selector: data
    params:
      id:
        required: true
- name: halt_system
  endpoint:
    path: /api/v2/diagnostics/halt_system
    method: POST
    data_selector: data
    params: {}
- name: reboot
  endpoint:
    path: /api/v2/diagnostics/reboot
    method: POST
    data_selector: data
    params: {}
- name: table
  endpoint:
    path: /api/v2/diagnostics/table
    method: GET
    data_selector: data
    params: {}
- name: FirewallSchedule
  endpoint:
    path: /api/v2/firewall/schedule
    method: GET
    data_selector: data
    params: {}
- name: FirewallScheduleTimeRange
  endpoint:
    path: /api/v2/firewall/schedule/time_range
    method: GET
    data_selector: data
    params: {}
- name: diagnostics_tables
  endpoint:
    path: /api/v2/diagnostics/tables
    method: GET
    params:
      limit: 0
      offset: 0
- name: firewall_schedule_time_range
  endpoint:
    path: /api/v2/firewall/schedule_time_range
    method: DELETE
    data_selector: data
    params:
      parent_id: required
      id: required
- name: firewall_schedules
  endpoint:
    path: /api/v2/firewall/schedules
    method: GET
    data_selector: data
    params:
      limit: optional
- name: advanced_settings
  endpoint:
    path: /advanced_settings
    method: GET
    data_selector: data
    params: {}
- name: alias
  endpoint:
    path: /alias
    method: GET
    data_selector: data
    params:
      id: integer
- name: firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: GET
- name: create_firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: POST
- name: update_firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: PATCH
- name: delete_firewall_alias
  endpoint:
    path: /api/v2/firewall/aliases
    method: DELETE
- name: firewall_states
  endpoint:
    path: /api/v2/firewall/states
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: delete_firewall_states
  endpoint:
    path: /api/v2/firewall/states
    method: DELETE
    data_selector: data
    params: {}
- name: firewall_states_size
  endpoint:
    path: /api/v2/firewall/states/size
    method: GET
    data_selector: data
- name: traffic_shaper
  endpoint:
    path: /api/v2/firewall/traffic_shaper
    method: GET
    data_selector: data
- name: firewall_apply
  endpoint:
    path: /api/v2/firewall/apply
    method: GET
    data_selector: data
- name: nat_one_to_one_mapping
  endpoint:
    path: /api/v2/firewall/nat/one_to_one/mapping
    method: GET
    data_selector: data
- name: TrafficShaper
  endpoint:
    path: /api/v2/firewall/traffic_shaper
    method: POST
- name: TrafficShaperUpdate
  endpoint:
    path: /api/v2/firewall/traffic_shaper
    method: PATCH
- name: TrafficShaperDelete
  endpoint:
    path: /api/v2/firewall/traffic_shaper
    method: DELETE
- name: TrafficShaperLimiterBandwidth
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiter/bandwidth
    method: GET
- name: outbound_mapping
  endpoint:
    path: /api/v2/firewall/nat/outbound/mapping
    method: GET
    data_selector: data
- name: Traffic Shaper Limiter Bandwidth
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiter
    method: GET
    data_selector: data
    params: {}
- name: Traffic Shaper Limiter
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiter
    method: GET
    data_selector: data
    params:
      id:
        required: true
- name: Traffic Shaper Limiter Create
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiter
    method: POST
    data_selector: data
- name: Traffic Shaper Limiter Update
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiter
    method: PATCH
    data_selector: data
- name: Traffic Shaper Limiter Delete
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiter
    method: DELETE
    data_selector: data
    params:
      id:
        required: true
- name: firewall_nat_outbound_mode
  endpoint:
    path: /api/v2/firewall/nat/outbound/mode
    method: GET
    data_selector: data
- name: firewall_nat_port_forward
  endpoint:
    path: /api/v2/firewall/nat/port_forward
    method: GET
    data_selector: data
- name: TrafficShaperLimiterQueue
  endpoint:
    path: /firewall/trafficShaperLimiterQueue
    method: GET
- name: port_forward
  endpoint:
    path: /api/v2/firewall/nat/port_forwards
    method: GET
- endpoint:
    params:
      offset: 0
- name: TrafficShaperLimiters
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiters
    method: PUT
- name: TrafficShaperQueue
  endpoint:
    path: /api/v2/firewall/traffic_shaper/queue
    method: GET
- name: firewall_rule
  endpoint:
    path: /api/v2/firewall/rule
    method: GET
    data_selector: data
    params: {}
- name: firewall_schedule
  endpoint:
    path: /api/v2/firewall/schedule
    method: GET
- name: virtual_ips
  endpoint:
    path: /api/v2/firewall/virtual_ips
    method: GET
- name: virtual_ip
  endpoint:
    path: /api/v2/firewall/virtual_ips/{id}
    method: DELETE
    params:
      id: integer
- name: FirewallSchedule
  endpoint:
    path: /api/v2/firewall/schedule
    method: DELETE
- name: FirewallScheduleTimeRange
  endpoint:
    path: /api/v2/firewall/schedule/time_range
    method: GET
- name: firewall_schedules
  endpoint:
    path: /api/v2/firewall/schedules
    method: GET
    data_selector: data
- name: firewall_schedule_time_range
  endpoint:
    path: /api/v2/firewall/schedules/time-range
    method: DELETE
    data_selector: data
- name: interface_apply
  endpoint:
    path: /api/v2/interface/apply
    method: POST
- name: available_interfaces
  endpoint:
    path: /api/v2/interface/available_interfaces
    method: GET
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: GET
    data_selector: data
    params:
      id: required
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: POST
    data_selector: data
    params: {}
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: PATCH
    data_selector: data
    params:
      id: required
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: DELETE
    data_selector: data
    params:
      id: required
- name: firewall_states
  endpoint:
    path: /api/v2/firewall/states
    method: GET
- name: delete_firewall_states
  endpoint:
    path: /api/v2/firewall/states
    method: DELETE
- name: interface_bridges
  endpoint:
    path: /api/v2/interface/bridges
    method: GET
- name: delete_interface_bridge
  endpoint:
    path: /api/v2/interface/bridges
    method: DELETE
    params:
      id: required
- endpoint:
    params:
      offset: 0
- name: firewall_states_size
  endpoint:
    path: /api/v2/firewall/states/size
    method: GET
    data_selector: data
- name: traffic_shaper
  endpoint:
    path: /api/v2/firewall/traffic_shaper
    method: GET
    data_selector: data
- name: TrafficShaper
  endpoint:
    path: /api/v2/firewall/traffic_shaper
    method: POST
- name: TrafficShaperLimiterBandwidth
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiter/bandwidth
    method: GET
- name: InterfaceGRE
  endpoint:
    path: /api/v2/interface/gre
    method: GET
- name: InterfaceGRE
  endpoint:
    path: /api/v2/interface/gre
    method: POST
- name: InterfaceGRE
  endpoint:
    path: /api/v2/interface/gre
    method: PATCH
- name: InterfaceGRE
  endpoint:
    path: /api/v2/interface/gre
    method: DELETE
- name: InterfaceGroup
  endpoint:
    path: /api/v2/interface/group
    method: GET
    data_selector: data
    params: {}
- name: traffic_shaper_limiter
  endpoint:
    path: /traffic_shaper/limiter
    method: GET
- name: traffic_shaper_limiter_post
  endpoint:
    path: /traffic_shaper/limiter
    method: POST
- name: traffic_shaper_limiter_patch
  endpoint:
    path: /traffic_shaper/limiter
    method: PATCH
- name: traffic_shaper_limiter_delete
  endpoint:
    path: /traffic_shaper/limiter
    method: DELETE
- name: Traffic Shaper Limiter Queue
  endpoint:
    path: /firewall/traffic-shaper-limiter-queue
    method: GET
- name: traffic_shaper_limiters
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiters
    method: GET
    data_selector: data
- endpoint:
    params:
      offset: 0
- name: traffic_shaper_limiters
  endpoint:
    path: /api/v2/firewall/traffic_shaper/limiters
    method: PUT
    data_selector: data
    params: {}
- name: traffic_shaper_queue
  endpoint:
    path: /api/v2/firewall/traffic_shaper/queue
    method: GET
    data_selector: data
    params: {}
- name: Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: GET
    data_selector: data
    params:
      id: string
- name: Create Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: POST
    data_selector: data
    params: {}
- name: Update Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: PATCH
    data_selector: data
    params:
      id: integer
- name: Delete Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: DELETE
    data_selector: data
    params:
      id: integer
- name: InterfaceLAGG
  endpoint:
    path: /api/v2/interface/laggs
    method: GET
- name: InterfaceLAGGDelete
  endpoint:
    path: /api/v2/interface/lagg
    method: DELETE
- name: virtual_ip_apply
  endpoint:
    path: /virtual_ip/apply
    method: GET
    data_selector: data
- name: virtual_ip
  endpoint:
    path: /virtual_ip
    method: GET
    data_selector: data
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: GET
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: POST
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: PATCH
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: DELETE
- name: virtual_ips
  endpoint:
    path: /api/v2/firewall/virtual_ips
    method: GET
    data_selector: data
- name: virtual_ip
  endpoint:
    path: /api/v2/firewall/virtual_ips
    method: POST
    data_selector: data
- name: update_virtual_ip
  endpoint:
    path: /api/v2/firewall/virtual_ips
    method: PATCH
    data_selector: data
- name: delete_virtual_ip
  endpoint:
    path: /api/v2/firewall/virtual_ips
    method: DELETE
    data_selector: data
- endpoint:
    params:
      limit: 0
      offset: 0
      query: {}
- name: interface_apply
  endpoint:
    path: /api/v2/interface/apply
    method: POST
- name: available_interfaces
  endpoint:
    path: /api/v2/interface/available_interfaces
    method: GET
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: GET
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: POST
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: PATCH
- name: InterfaceBridge
  endpoint:
    path: /api/v2/interface/bridge
    method: DELETE
- endpoint:
    params:
      offset: 0
- name: interface_gre
  endpoint:
    path: /api/v2/interface/gre
    method: GET
    data_selector: data
    params:
      id: required
- name: RoutingGateway
  endpoint:
    path: /api/v2/routing/gateway
    method: GET
- name: RoutingGateway
  endpoint:
    path: /api/v2/routing/gateway
    method: POST
- name: RoutingGateway
  endpoint:
    path: /api/v2/routing/gateway
    method: PATCH
- name: RoutingGateway
  endpoint:
    path: /api/v2/routing/gateway
    method: DELETE
- name: InterfaceGRE
  endpoint:
    path: /api/v2/interface/gres
    method: GET
- name: DeleteInterfaceGRE
  endpoint:
    path: /api/v2/interface/gres
    method: DELETE
- name: InterfaceGroup
  endpoint:
    path: /api/v2/interface/group
    method: GET
    data_selector: data
    params:
      id: integer|string
- name: RoutingGatewayGroup
  endpoint:
    path: /api/v2/routing/gateway/group
    method: DELETE
- name: RoutingGatewayGroupPriority
  endpoint:
    path: /api/v2/routing/gateway/group/priority
    method: GET
- name: Routing Gateway Group Priority
  endpoint:
    path: /api/v2/routing/gateway/groups
    method: GET
- name: routing_gateways
  endpoint:
    path: /api/v2/routing/gateways
    method: GET
    data_selector: data
- name: delete_routing_gateways
  endpoint:
    path: /api/v2/routing/gateways
    method: DELETE
    data_selector: data
- name: Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: GET
    data_selector: data
    params:
      id: integer
- name: Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: POST
    data_selector: data
    params: {}
- name: Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: PATCH
    data_selector: data
    params:
      id: integer
- name: Interface LAGG
  endpoint:
    path: /api/v2/interface/lagg
    method: DELETE
    data_selector: data
    params:
      id: integer
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: GET
    data_selector: data
    params:
      id:
        required: true
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: POST
    data_selector: data
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: PATCH
    data_selector: data
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: DELETE
    data_selector: data
- name: InterfaceLAGG
  endpoint:
    path: /api/v2/interface/laggs
    method: GET
- name: InterfaceLAGGEndpoint
  endpoint:
    path: /api/v2/interface/laggs/{id}
    method: DELETE
    params:
      id: required
- name: routing_static_routes
  endpoint:
    path: /api/v2/routing/static_routes
    method: DELETE
    data_selector: data
    params: {}
- name: acme_account_key
  endpoint:
    path: /api/v2/services/acme/account_key
    method: GET
    data_selector: data
    params: {}
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: GET
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: POST
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: PATCH
- name: InterfaceVLAN
  endpoint:
    path: /api/v2/interface/vlan
    method: DELETE
- name: account_key
  endpoint:
    path: /api/v2/services/acme/account_key/register
    method: POST
    data_selector: data
    params: {}
- name: account_key_register
  endpoint:
    path: /api/v2/services/acme/account_key/register
    method: POST
- name: account_key_registrations
  endpoint:
    path: /api/v2/services/acme/account_key/registrations
    method: GET
- name: account_keys
  endpoint:
    path: /api/v2/services/acme/account_keys
    method: GET
    data_selector: data
- name: certificate_action
  endpoint:
    path: /api/v2/services/acme/certificate/action
    method: GET
    data_selector: data
- name: ACMECertificateAction
  endpoint:
    path: /api/v2/services/acme/certificate/action
    method: DELETE
- name: ACMECertificateDomain
  endpoint:
    path: /api/v2/services/acme/certificate/domain
    method: GET
- name: RoutingApply
  endpoint:
    path: /api/v2/routing/apply
    method: GET
- name: DefaultGateway
  endpoint:
    path: /api/v2/routing/gateway/default
    method: GET
- name: routing_gateway
  endpoint:
    path: /api/v2/routing/gateway
    method: GET
- name: routing_gateway_create
  endpoint:
    path: /api/v2/routing/gateway
    method: POST
- name: routing_gateway_update
  endpoint:
    path: /api/v2/routing/gateway
    method: PATCH
- name: routing_gateway_delete
  endpoint:
    path: /api/v2/routing/gateway
    method: DELETE
- name: ACMECertificateDomain
  endpoint:
    path: /api/v2/services/acme/certificate
    method: DELETE
    params:
      parent_id: required
      id: required
- name: ACMECertificate
  endpoint:
    path: /api/v2/services/acme/certificate
    method: GET
    params:
      id: required
- name: ACMECertificate
  endpoint:
    path: /api/v2/services/acme/certificate
    method: POST
    params: {}
- name: ACMECertificate
  endpoint:
    path: /api/v2/services/acme/certificate
    method: PATCH
    params:
      id: required
- name: RoutingGatewayGroup
  endpoint:
    path: /api/v2/routing/gateway/group
    method: DELETE
    data_selector: data
    params:
      id: required
- name: RoutingGatewayGroupPriority
  endpoint:
    path: /api/v2/routing/gateway/group/priority
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: certificate_issue
  endpoint:
    path: /api/v2/services/acme/certificate/issue
    method: POST
- name: certificate_renew
  endpoint:
    path: /api/v2/services/acme/certificate/renew
    method: POST
- name: certificate_renewals
  endpoint:
    path: /api/v2/services/acme/certificate/renewals
    method: GET
- name: certificates
  endpoint:
    path: /api/v2/services/acme/certificates
    method: GET
- name: routing_gateway_groups
  endpoint:
    path: /api/v2/routing/gateway/groups
    method: GET
    data_selector: data
    params:
      limit: number of objects to obtain at once
- name: routing_gateway_group_priority
  endpoint:
    path: /api/v2/routing/gateway/group/priority
    method: DELETE
    data_selector: data
    params:
      parent_id: ID of the parent this object is nested under
      id: ID of the object to target
- name: acme_settings
  endpoint:
    path: /api/v2/services/acme/settings
    method: GET
    data_selector: data
- name: bind_access_list
  endpoint:
    path: /api/v2/services/bind/access_list
    method: GET
    data_selector: data
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: GET
    data_selector: data
    params:
      id: required
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: POST
    data_selector: data
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: PATCH
    data_selector: data
    params:
      id: required
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_route
    method: DELETE
    data_selector: data
    params:
      id: required
- name: bind_access_list_entry
  endpoint:
    path: /services/bind/access_list_entry
    method: POST
    data_selector: data
    params:
      parent_id: required
- name: bind_access_list_entry_update
  endpoint:
    path: /services/bind/access_list_entry
    method: PATCH
    data_selector: data
    params:
      parent_id: required
      id: required
- name: bind_access_list_entry_delete
  endpoint:
    path: /services/bind/access_list_entry
    method: DELETE
    data_selector: data
    params:
      parent_id: required
      id: required
- name: StaticRoute
  endpoint:
    path: /api/v2/routing/static_routes
    method: DELETE
    data_selector: data
    params:
      limit: '0'
      offset: '0'
- name: ACMEAccountKey
  endpoint:
    path: /api/v2/services/acme/account_key
    method: GET
    data_selector: data
    params:
      id: ''
- name: ACMEAccountKey
  endpoint:
    path: /api/v2/services/acme/account_key/register
    method: POST
- name: BINDSettings
  endpoint:
    path: /api/v2/services/bind/settings
    method: GET
    data_selector: data
- name: BINDSyncRemoteHost
  endpoint:
    path: /api/v2/services/bind/sync/remote_host
    method: GET
    data_selector: data
- name: account_key_register
  endpoint:
    path: /account_key/register
    method: POST
    data_selector: data
    params: {}
- name: account_key_registrations
  endpoint:
    path: /account_key/registrations
    method: GET
    data_selector: data
    params: {}
- name: bind_sync_remote_host
  endpoint:
    path: /api/v2/services/bind/sync/remote_hosts
    method: GET
- name: bind_sync_remote_host_create
  endpoint:
    path: /api/v2/services/bind/sync/remote_hosts
    method: POST
- name: bind_sync_remote_host_update
  endpoint:
    path: /api/v2/services/bind/sync/remote_hosts/{id}
    method: PATCH
- name: bind_sync_remote_host_delete
  endpoint:
    path: /api/v2/services/bind/sync/remote_hosts/{id}
    method: DELETE
- name: account_keys
  endpoint:
    path: /api/v2/services/acme/account_keys
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: BINDSyncRemoteHosts
  endpoint:
    method: PUT
- name: BINDSyncRemoteHosts
  endpoint:
    method: DELETE
- name: certificate_action
  endpoint:
    path: /api/v2/services/acme/certificate/action
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: ACMECertificateAction
  endpoint:
    path: /api/v2/services/acme/certificate/action
    method: DELETE
    data_selector: data
    params:
      parent_id: required
      id: required
- name: ACMECertificateDomain
  endpoint:
    path: /api/v2/services/acme/certificate/domain
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/views
    method: GET
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/view
    method: POST
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/view
    method: PATCH
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/view
    method: DELETE
- name: ACMECertificateDomain
  endpoint:
    path: /api/v2/services/acme/certificate
    method: DELETE
- name: ACMECertificate
  endpoint:
    path: /api/v2/services/acme/certificate
    method: GET
- name: ACMECertificate
  endpoint:
    path: /api/v2/services/acme/certificate
    method: POST
- name: ACMECertificate
  endpoint:
    path: /api/v2/services/acme/certificate
    method: PATCH
- name: BINDView
  endpoint:
    method: PUT
    params:
      limit: 0
      offset: 0
      sort_by: null
      sort_order: null
      sort_flags: null
      query: {}
- name: BINDView
  endpoint:
    method: DELETE
    params:
      limit: null
- name: BINDZone
  endpoint:
    path: /api/v2/services/bind/zone
    method: GET
    data_selector: data
    params:
      id: integer
- name: certificate_issue
  endpoint:
    path: /api/v2/services/acme/certificate/issue
    method: POST
- name: certificate_renew
  endpoint:
    path: /api/v2/services/acme/certificate/renew
    method: POST
- name: certificate_renewals
  endpoint:
    path: /api/v2/services/acme/certificate/renewals
    method: GET
- name: BINDZone
  endpoint:
    path: /api/v2/services/bind/zone
    method: DELETE
- name: BINDZoneRecord
  endpoint:
    path: /api/v2/services/bind/zone/record
    method: GET
- name: certificates
  endpoint:
    path: /api/v2/services/acme/certificates
    method: GET
- name: certificates
  endpoint:
    path: /api/v2/services/acme/certificates
    method: PUT
- name: certificates
  endpoint:
    path: /api/v2/services/acme/certificates
    method: DELETE
- name: BINDZone
  endpoint:
    method: PUT
- name: BINDZone
  endpoint:
    method: DELETE
- name: ACMESettings
  endpoint:
    path: /api/v2/services/acme/settings
    method: GET
    data_selector: data
- name: BINDAccessList
  endpoint:
    path: /api/v2/services/bind/access_list
    method: GET
    data_selector: data
- name: bind_access_list
  endpoint:
    path: /api/v2/services/bind/access_list
    method: POST
- name: bind_access_list_entry
  endpoint:
    path: /api/v2/services/bind/access_list/entry
    method: GET
- name: Cron Job
  endpoint:
    path: /api/v2/services/cron/job
    method: GET
    data_selector: data
    params: {}
- name: Cron Job Create
  endpoint:
    path: /api/v2/services/cron/job
    method: POST
    data_selector: data
    params: {}
- name: Cron Job Update
  endpoint:
    path: /api/v2/services/cron/job
    method: PATCH
    data_selector: data
    params: {}
- name: Cron Job Delete
  endpoint:
    path: /api/v2/services/cron/job
    method: DELETE
    data_selector: data
    params: {}
- name: bind_access_list_entry
  endpoint:
    path: /api/v2/services/bind/access_lists
    method: GET
- name: bind_access_list
  endpoint:
    params:
      limit: The number of objects to obtain at once.
- name: CronJob
  endpoint:
    method: PUT
- name: CronJob
  endpoint:
    method: DELETE
- name: dhcp_relay
  endpoint:
    path: /api/v2/services/dhcp_relay
    method: GET
- name: dhcp_server_address_pool
  endpoint:
    path: /api/v2/services/dhcp_server/address_pool
    method: GET
- name: dhcp_server_address_pool
  endpoint:
    path: /api/v2/services/dhcp_server_address_pool
    method: POST
- name: dhcp_server_apply
  endpoint:
    path: /api/v2/services/dhcp_server/apply
    method: GET
- name: BINDSettings
  endpoint:
    path: /api/v2/services/bind/settings
    method: GET
    data_selector: data
- name: BINDSyncRemoteHost
  endpoint:
    path: /api/v2/services/bind/sync/remote_host
    method: GET
    data_selector: data
- name: dhcp_server
  endpoint:
    path: /api/v2/services/dhcp_server
    method: GET
    data_selector: data
    params: {}
- name: dhcp_server_custom_option
  endpoint:
    path: /api/v2/services/dhcp_server_custom_option
    method: PATCH
    data_selector: data
    params:
      parent_id: parent_id
      id: id
- name: bind_sync_settings
  endpoint:
    path: /api/v2/services/bind/sync/settings
    method: GET
    data_selector: data
    params: {}
- name: bind_view
  endpoint:
    path: /api/v2/services/bind/view
    method: GET
    data_selector: data
    params: {}
- name: dhcp_server_static_mapping
  endpoint:
    path: /api/v2/services/dhcp_server/static_mapping
    method: GET
    data_selector: data
    params: {}
- name: dhcp_server_static_mapping_post
  endpoint:
    path: /api/v2/services/dhcp_server/static_mapping
    method: POST
    data_selector: data
    params: {}
- name: dhcp_server_static_mapping_patch
  endpoint:
    path: /api/v2/services/dhcp_server/static_mapping
    method: PATCH
    data_selector: data
    params: {}
- endpoint:
    params:
      offset: 0
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/views
    method: GET
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/view
    method: POST
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/view
    method: PATCH
- name: BINDView
  endpoint:
    path: /api/v2/services/bind/view
    method: DELETE
- name: dns_forwarder_apply
  endpoint:
    path: /api/v2/services/dns_forwarder/apply
    method: GET
    data_selector: data
- name: dns_forwarder_host_override_alias
  endpoint:
    path: /api/v2/services/dns_forwarder/host_override/alias
    method: GET
    data_selector: data
- name: BINDZone
  endpoint:
    path: /api/v2/services/bind/zone
    method: GET
    data_selector: data
    params:
      id: integer
- name: DNSForwarderHostOverrideAlias
  endpoint:
    path: /api/v2/services/dns_forwarder/host_override
    method: GET
- name: DNSForwarderHostOverride
  endpoint:
    path: /services/v2/DNSForwarderHostOverride
    method: GET
- name: bind_zone
  endpoint:
    path: /api/v2/services/bind/zones
    method: GET
    data_selector: data
- name: dns_forwarder_host_overrides
  endpoint:
    path: /api/v2/services/dns_forwarder/host_overrides
    method: GET
    data_selector: data
- name: dns_forwarder_host_override
  endpoint:
    path: /api/v2/services/dns_forwarder/host_overrides
    method: DELETE
    data_selector: data
    params:
      id: required
      apply: optional
- name: DNSForwarderHostOverrides
  endpoint:
    path: /services/v2/services/dns-forwarder-host-overrides
    method: PUT
- name: DNSForwarderHostOverrides_Delete
  endpoint:
    path: /services/v2/services/dns-forwarder-host-overrides
    method: DELETE
- name: access_list
  endpoint:
    path: /api/v2/services/dns_resolver/access_list
    method: GET
    data_selector: data
- name: cron_job
  endpoint:
    path: /api/v2/services/cron/job
    method: GET
    data_selector: data
    params:
      id: required
- name: create_cron_job
  endpoint:
    path: /api/v2/services/cron/job
    method: POST
    data_selector: data
    params: {}
- name: update_cron_job
  endpoint:
    path: /api/v2/services/cron/job
    method: PATCH
    data_selector: data
    params:
      id: required
- name: delete_cron_job
  endpoint:
    path: /api/v2/services/cron/job
    method: DELETE
    data_selector: data
    params:
      id: required
- name: dns_resolver_access_list
  endpoint:
    path: /api/v2/services/dns_resolver/access_list
    method: DELETE
- name: dns_resolver_access_list_network
  endpoint:
    path: /api/v2/services/dns_resolver/access_list/network
    method: GET
- name: DNSResolverAccessList
  endpoint:
    path: /api/v2/services/dns_resolver/access_lists
    method: GET
    data_selector: data
- name: DNSResolverAccessListNetwork
  endpoint:
    path: /api/v2/services/dns_resolver/access_lists/{id}
    method: DELETE
    data_selector: data
- endpoint:
    responses:
      '401':
        description: The client has failed to authenticate the API call.
      '409':
        description: The client's request cannot be fulfilled due to one or more conflicts.
      '424':
        description: The client has requested a resource that requires a dependency
          which is not installed.
      '403':
        description: The client does not have sufficient privileges to make this API
          call.
      '200':
        description: The client has made a successful request.
      '415':
        description: The client has requested a content-type that is not supported
          by the server.
      '405':
        description: The client has requested an HTTP method that is not supported
          by the current URL.
      '406':
        description: The client has requested content in a format that is not supported.
      '404':
        description: The client has requested a resource that could not be found.
      '500':
        description: The server encountered an unexpected error and cannot complete
          the request.
      '503':
        description: The requested service is temporarily unavailable.
      '422':
        description: The client has requested a resource that requires a dependency
          which is not installed.
      '400':
        description: The client request data has one or more input validation errors.
- name: dhcp_server_address_pool
  endpoint:
    path: /api/v2/services/dhcp_server_address_pool
    method: POST
- name: dhcp_server_apply
  endpoint:
    path: /api/v2/services/dhcp_server/apply
    method: GET
- name: DNSResolverApply
  endpoint:
    path: /api/v2/services/dns_resolver/apply
    method: GET
    data_selector: data
- name: DNSResolverDomainOverride
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: GET
    data_selector: data
- name: dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_overrides
    method: GET
- name: create_dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: POST
- name: update_dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: PATCH
- name: delete_dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: DELETE
- name: dhcp_server
  endpoint:
    path: /api/v2/services/dhcp_server
    method: GET
    data_selector: data
    params: {}
- name: dhcp_server_custom_option
  endpoint:
    path: /api/v2/services/dhcp_server_custom_option
    method: PATCH
    data_selector: data
    params:
      incremental: updated_at
- name: DNSResolverDomainOverride
  endpoint:
    method: PUT
- name: DNSResolverDomainOverride
  endpoint:
    method: DELETE
- name: DHCPServer
  endpoint:
    path: /api/v2/services/dhcp_server/static_mapping
    method: GET
- name: DHCPServerStaticMapping
  endpoint:
    path: /api/v2/services/dhcp_server/static_mapping
    method: POST
- name: DHCPServerStaticMapping
  endpoint:
    path: /api/v2/services/dhcp_server/static_mapping
    method: PATCH
- name: dhcp_servers
  endpoint:
    path: /api/v2/services/dhcp_servers
    method: GET
- name: dhcp_server_static_mapping
  endpoint:
    path: /api/v2/services/dhcp_server_static_mapping
    method: DELETE
    params:
      parent_id: required
      id: required
      apply: optional
- endpoint:
    params:
      offset: 0
- name: DNSResolverHostOverrides
  endpoint:
    method: PUT
- name: DNSResolverHostOverrides
  endpoint:
    method: DELETE
- name: DHCPServers
  endpoint:
    path: /api/v2/services/dhcp_servers
    method: PUT
    data_selector: data
    params: {}
- name: DNSForwarderApply
  endpoint:
    path: /api/v2/services/dns_forwarder/apply
    method: GET
    data_selector: data
    params: {}
- name: DNSForwarderApply
  endpoint:
    path: /api/v2/services/dns_forwarder/apply
    method: POST
    data_selector: data
    params: {}
- name: DNSForwarderHostOverrideAlias
  endpoint:
    path: /api/v2/services/dns_forwarder/host_override/alias
    method: GET
    data_selector: data
    params: {}
- name: DNSForwarderHostOverrideAlias
  endpoint:
    path: /api/v2/services/dns_forwarder/host_override
    method: GET
- name: DNS Resolver Settings
  endpoint:
    path: /api/v2/services/dns_resolver/settings
    method: GET
    data_selector: data
    params: {}
- name: Update DNS Resolver Settings
  endpoint:
    path: /api/v2/services/dns_resolver/settings
    method: PATCH
    data_selector: data
    params: {}
- name: Free RADIUS Client
  endpoint:
    path: /api/v2/services/freeradius/client
    method: GET
    data_selector: data
    params: {}
- name: DNSForwarderHostOverride
  endpoint:
    path: /services/v2/dns-forwarder-host-override
    method: GET
- name: DNSForwarderHostOverride
  endpoint:
    path: /services/v2/dns-forwarder-host-override
    method: POST
- name: DNSForwarderHostOverride
  endpoint:
    path: /services/v2/dns-forwarder-host-override
    method: PATCH
- name: DNSForwarderHostOverride
  endpoint:
    path: /services/v2/dns-forwarder-host-override
    method: DELETE
- name: freeradius_clients
  endpoint:
    path: /api/v2/services/freeradius/clients
    method: GET
- name: freeradius_client
  endpoint:
    path: /api/v2/services/freeradius/client
    method: POST
- name: FreeRADIUSClients
  endpoint:
    path: /services/freeradius/clients
    method: PUT
- name: FreeRADIUSClients
  endpoint:
    path: /services/freeradius/clients
    method: DELETE
- name: dns_forwarder_host_overrides
  endpoint:
    path: /api/v2/services/dns_forwarder/host_overrides
    method: GET
    data_selector: data
    params: {}
- name: dns_forwarder_host_override_delete
  endpoint:
    path: /api/v2/services/dns_forwarder/host_overrides
    method: DELETE
    data_selector: data
    params:
      id: required
- name: FreeRADIUSInterface
  endpoint:
    path: /api/v2/services/freeradius/interface
    method: GET
    data_selector: data
    params:
      id: integer
- name: FreeRADIUSInterface
  endpoint:
    path: /api/v2/services/freeradius/interfaces
    method: GET
- name: FreeRADIUSInterfaceDelete
  endpoint:
    path: /api/v2/services/freeradius/interfaces
    method: DELETE
- name: access_list
  endpoint:
    path: /api/v2/services/dns_resolver/access_list
    method: GET
    data_selector: data
    params:
      id:
        required: true
        type: oneOf
        options:
        - type: integer
        - type: string
- name: DNSResolverAccessList
  endpoint:
    path: /api/v2/services/dns_resolver/access_list
    method: DELETE
- name: DNSResolverAccessListNetwork
  endpoint:
    path: /api/v2/services/dns_resolver/access_list/network
    method: GET
- name: user
  endpoint:
    path: /api/v2/services/freeradius/user
    method: GET
    data_selector: data
    params:
      id:
        description: The ID of the object to target.
        required: true
- name: DNSResolverAccessList
  endpoint:
    method: PUT
    responses:
      '401':
        description: The client has failed to authenticate the API call.
      '409':
        description: The client's request cannot be fulfilled due to one or more conflicts.
      '424':
        description: The client has requested a resource that requires a dependency
          which is not installed.
      '403':
        description: The client does not have sufficient privileges to make this API
          call.
      '200':
        description: The client has made a successful request.
      '415':
        description: The client has requested a content-type that is not supported
          by the server.
      '405':
        description: The client has requested an HTTP method that is not supported
          by the current URL.
      '406':
        description: The client has requested content in a format that is not supported.
      '404':
        description: The client has requested a resource that could not be found.
      '500':
        description: The server encountered an unexpected error and cannot complete
          the request.
      '503':
        description: The requested service is temporarily unavailable.
      '422':
        description: The client has requested a resource that requires a dependency
          which is not installed.
      '400':
        description: The client request data has one or more input validation errors.
- name: haproxy_apply
  endpoint:
    path: /api/v2/services/haproxy/apply
    method: GET
    data_selector: data
- name: haproxy_backend_acl
  endpoint:
    path: /api/v2/services/haproxy/backend/acl
    method: GET
    data_selector: data
    params:
      parent_id: ''
      id: ''
- name: dns_resolver_apply
  endpoint:
    path: /api/v2/services/dns_resolver/apply
    method: GET
    data_selector: data
- name: dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: GET
    data_selector: data
- name: dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_overrides
    method: GET
- name: create_dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: POST
- name: update_dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: PATCH
- name: delete_dns_resolver_domain_override
  endpoint:
    path: /api/v2/services/dns_resolver/domain_override
    method: DELETE
- name: HAProxyBackend
  endpoint:
    path: /api/v2/services/haproxy/backend
    method: GET
- name: DNSResolverDomainOverrides
  endpoint:
    method: PUT
- name: DNSResolverDomainOverrides
  endpoint:
    method: DELETE
- name: HAProxyBackendErrorFile
  endpoint:
    path: /services/haproxy/backend/errorfile
    method: GET
- name: DNSResolverHostOverrideAlias
  endpoint:
    path: /api/v2/services/dns_resolver/host_override/alias
    method: GET
- name: haproxy_backend_error_file
  endpoint:
    path: /api/v2/services/haproxy/backend/error/file
    method: DELETE
- name: haproxy_backend_server
  endpoint:
    path: /api/v2/services/haproxy/backend/server
    method: GET
- name: DNSResolverHostOverride
  endpoint:
    path: /api/v2/services/dns_resolver/host_override
    method: GET
    data_selector: data
- name: DNSResolverHostOverride
  endpoint:
    path: /api/v2/services/dns_resolver/host_override
    method: POST
    data_selector: data
- name: DNSResolverHostOverride
  endpoint:
    path: /api/v2/services/dns_resolver/host_override
    method: PATCH
    data_selector: data
- name: DNSResolverHostOverride
  endpoint:
    path: /api/v2/services/dns_resolver/host_override
    method: DELETE
    data_selector: data
- name: DNSResolverHostOverride
  endpoint:
    method: PUT
- name: DNSResolverHostOverride
  endpoint:
    method: DELETE
- name: haproxy_file
  endpoint:
    path: /api/v2/services/haproxy/file
    method: GET
- name: haproxy_file_create
  endpoint:
    path: /api/v2/services/haproxy/file
    method: POST
- name: haproxy_file_update
  endpoint:
    path: /api/v2/services/haproxy/file
    method: PATCH
- name: haproxy_file_delete
  endpoint:
    path: /api/v2/services/haproxy/file
    method: DELETE
- name: dns_resolver_settings
  endpoint:
    path: /api/v2/services/dns_resolver/settings
    method: GET
    data_selector: data
    params: {}
- name: update_dns_resolver_settings
  endpoint:
    path: /api/v2/services/dns_resolver/settings
    method: PATCH
    data_selector: data
    params: {}
- name: freeradius_client
  endpoint:
    path: /api/v2/services/freeradius/client
    method: GET
    data_selector: data
    params: {}
- name: HAProxyFrontendACL
  endpoint:
    path: /api/v2/services/haproxy/frontend/acl
    method: GET
- name: free_radius_client
  endpoint:
    path: /api/v2/services/freeradius/clients
    method: GET
- name: create_free_radius_client
  endpoint:
    path: /api/v2/services/freeradius/client
    method: POST
- name: update_free_radius_client
  endpoint:
    path: /api/v2/services/freeradius/client
    method: PATCH
- name: delete_free_radius_client
  endpoint:
    path: /api/v2/services/freeradius/client
    method: DELETE
- name: FreeRADIUSClient
  endpoint:
    path: /services/free-radius-clients
    method: PUT
    data_selector: data
    params: {}
- name: FreeRADIUSClient
  endpoint:
    path: /services/free-radius-clients
    method: DELETE
    data_selector: data
    params: {}
- name: HAProxyFrontendAction
  endpoint:
    path: /api/v2/services/haproxy/frontend/action
    method: DELETE
    data_selector: data
    params:
      parent_id: integer
      id: integer
- name: HAProxyFrontendAddress
  endpoint:
    path: /api/v2/services/haproxy/frontend/address
    method: GET
    data_selector: data
    params:
      parent_id: integer
      id: integer
- name: Free RADIUS Interface
  endpoint:
    path: /api/v2/services/freeradius/interface
    method: GET
- name: FreeRADIUSInterface
  endpoint:
    path: /api/v2/services/freeradius/interfaces
    method: GET
- name: HAProxyFrontendCertificate
  endpoint:
    path: /api/v2/services/haproxy/frontend
    method: GET
    data_selector: data
    params: {}
- name: haproxy_frontend
  endpoint:
    path: /api/v2/services/haproxy/frontend
    method: POST
- name: haproxy_frontend_error_file
  endpoint:
    path: /api/v2/services/haproxy/frontend/error_file
    method: GET
- name: FreeRADIUSInterface
  endpoint:
    path: /services/free-radius-interfaces
    method: PUT
    data_selector: data
    params: {}
- name: FreeRADIUSInterface
  endpoint:
    path: /services/free-radius-interfaces
    method: DELETE
    data_selector: data
    params: {}
- name: haproxy_frontend_error_file
  endpoint:
    path: /api/v2/services/haproxy/frontends
    method: GET
    data_selector: data
    params: {}
- name: FreeRADIUSUser
  endpoint:
    path: /api/v2/services/freeradius/user
    method: GET
    data_selector: data
    params: {}
- name: HAProxyFrontend
  endpoint:
    path: /services/haproxy/frontends
    method: GET
    data_selector: data
- name: FreeRADIUSUser
  endpoint:
    path: /services/freeRADIUSUsers
    method: PUT
    data_selector: data
    params: {}
- name: DeleteFreeRADIUSUser
  endpoint:
    path: /services/freeRADIUSUsers
    method: DELETE
    data_selector: data
    params: {}
- name: HAProxyApply
  endpoint:
    path: /api/v2/services/haproxy/apply
    method: GET
- name: HAProxyBackendACL
  endpoint:
    path: /api/v2/services/haproxy/backend/acl
    method: GET
- name: dns_resolver
  endpoint:
    path: /api/v2/services/haproxy/settings/dns_resolver
    method: GET
    data_selector: data
    params:
      id: required
- name: HAProxyBackendACL
  endpoint:
    path: /api/v2/services/haproxy/backend/acls
    method: POST
- name: HAProxyBackendAction
  endpoint:
    path: /api/v2/services/haproxy/backend/action
    method: GET
- name: HAProxyDNSResolver
  endpoint:
    path: /api/v2/services/haproxy/settings/dns_resolver
    method: DELETE
- name: HAProxyEmailMailer
  endpoint:
    path: /api/v2/services/haproxy/settings/email_mailer
    method: GET
- name: haproxy_backend
  endpoint:
    path: /api/v2/services/haproxy/backend
    method: GET
    data_selector: data
    params: {}
- name: HAProxySettings
  endpoint:
    path: /api/v2/services/haproxy/settings
    method: GET
    data_selector: data
- name: HAProxySettingsUpdate
  endpoint:
    path: /api/v2/services/haproxy/settings
    method: PATCH
    data_selector: data
- name: NTP Time Server
  endpoint:
    path: /api/v2/services/ntp/time_server
    method: GET
- name: NTP Time Servers
  endpoint:
    path: /api/v2/services/ntp/time_servers
    method: GET
- name: Update NTP Time Server
  endpoint:
    path: /api/v2/services/ntp/time_servers/{id}
    method: PATCH
- name: Delete NTP Time Server
  endpoint:
    path: /api/v2/services/ntp/time_servers/{id}
    method: DELETE
- name: haproxy_backend_error_file
  endpoint:
    path: /api/v2/services/haproxy/backend/error/file
    method: DELETE
- name: haproxy_backend_server
  endpoint:
    path: /api/v2/services/haproxy/backend/server
    method: GET
- name: haproxy_backend
  endpoint:
    path: /api/v2/services/haproxy/backends
    method: GET
    data_selector: data
- name: SSH
  endpoint:
    path: /api/v2/services/ssh
    method: GET
    data_selector: data
- name: ServiceWatchdog
  endpoint:
    path: /api/v2/services/service_watchdog
    method: GET
    data_selector: data
- name: haproxy_file
  endpoint:
    path: /api/v2/services/haproxy/file
    method: GET
    data_selector: data
    params: {}
- name: service_watchdog
  endpoint:
    path: /api/v2/services/service_watchdogs
    method: GET
- name: Service Watchdogs
  endpoint:
    path: /services/service_watchdogs
    method: PUT
- name: Service Watchdogs
  endpoint:
    path: /services/service_watchdogs
    method: DELETE
- name: HAProxyFrontendACL
  endpoint:
    path: /api/v2/services/haproxy/frontend/acl
    method: GET
    data_selector: data
    params: {}
- name: HAProxyFrontendACL
  endpoint:
    path: /api/v2/services/haproxy/frontend/acl
    method: POST
    data_selector: data
    params: {}
- name: HAProxyFrontendACL
  endpoint:
    path: /api/v2/services/haproxy/frontend/acl
    method: PATCH
    data_selector: data
    params: {}
- name: HAProxyFrontendACL
  endpoint:
    path: /api/v2/services/haproxy/frontend/acl
    method: DELETE
    data_selector: data
    params: {}
- name: status_gateways
  endpoint:
    path: /api/v2/status/gateways
    method: GET
- name: status_dhcp_server_leases
  endpoint:
    path: /api/v2/status/dhcp_server_leases
    method: DELETE
- name: ipsec_child_sa_status
  endpoint:
    path: /api/v2/status/ipsec/child_sa
    method: GET
    data_selector: data
- name: ipsec_sa_status
  endpoint:
    path: /api/v2/status/ipsec/sas
    method: GET
    data_selector: data
- name: interface_stats
  endpoint:
    path: /api/v2/status/interfaces
    method: GET
    data_selector: data
- name: haproxy_frontend_action
  endpoint:
    path: /api/v2/services/haproxy/frontend/action
    method: DELETE
    data_selector: data
    params:
      parent_id: required
      id: required
- name: haproxy_frontend_address
  endpoint:
    path: /api/v2/services/haproxy/frontend/address
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: HAProxyFrontendAddress
  endpoint:
    path: /api/v2/services/haproxy/frontend/address
    method: PATCH
- name: HAProxyFrontendCertificate
  endpoint:
    path: /api/v2/services/haproxy/frontend/certificate
    method: GET
- name: auth_logs
  endpoint:
    path: /api/v2/status/logs/auth
    method: GET
    data_selector: data
- name: dhcp_logs
  endpoint:
    path: /api/v2/status/logs/dhcp
    method: GET
    data_selector: data
- name: firewall_logs
  endpoint:
    path: /api/v2/status/logs/firewall
    method: GET
    data_selector: data
- name: HAProxyFrontendCertificate
  endpoint:
    path: /api/v2/services/haproxy/frontend
    method: GET
- name: status_logs_openvpn
  endpoint:
    path: /api/v2/status/logs/openvpn
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: status_logs_settings
  endpoint:
    path: /api/v2/status/logs/settings
    method: GET
    data_selector: data
    params: {}
- name: status_logs_system
  endpoint:
    path: /api/v2/status/logs/system
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: HAProxyFrontendErrorFile
  endpoint:
    path: /api/v2/services/haproxy/frontends
    method: GET
- name: status_openvpn_clients
  endpoint:
    path: /api/v2/status/openvpn/clients
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: HAProxyFrontends
  endpoint:
    method: GET
- name: openvpn_server_connection
  endpoint:
    path: /api/v2/status/openvpn/server/connection
    method: GET
    data_selector: data
    params: {}
- name: openvpn_server_route
  endpoint:
    path: /api/v2/status/openvpn/server/route
    method: GET
    data_selector: data
    params: {}
- name: openvpn_servers
  endpoint:
    path: /api/v2/status/openvpn/servers
    method: GET
    data_selector: data
    params: {}
- name: HAProxyDNSResolver
  endpoint:
    path: /api/v2/services/haproxy/settings/dns_resolver
    method: GET
    data_selector: data
- name: status_service
  endpoint:
    path: /api/v2/status/service
    method: POST
- name: status_services
  endpoint:
    path: /api/v2/status/services
    method: GET
- name: HAProxyDNSResolver
  endpoint:
    path: /api/v2/services/haproxy/settings/dns_resolver
    method: DELETE
    params:
      id: required
- name: HAProxyEmailMailer
  endpoint:
    path: /api/v2/services/haproxy/settings/email_mailer
    method: GET
    params:
      id: required
- name: CertificateRevocationList
  endpoint:
    path: /api/v2/system/crl/revoked_certificate
    method: GET
- name: CertificateRevocationListRevokedCertificate
  endpoint:
    path: /api/v2/system/crl/revoked_certificate
    method: POST
- name: ntp_settings
  endpoint:
    path: /api/v2/services/ntp/time_server
    method: GET
- name: ntp_time_server
  endpoint:
    path: /api/v2/services/ntp/time_server
    method: POST
- name: CertificateRevocationListRevokedCertificate
  endpoint:
    path: /api/v2/system/crls
    method: GET
- name: time_servers
  endpoint:
    path: /api/v2/services/ntp/time_servers
    method: GET
- name: time_server
  endpoint:
    path: /api/v2/services/ntp/time_server
    method: PATCH
- name: time_server_delete
  endpoint:
    path: /api/v2/services/ntp/time_server
    method: DELETE
- name: certificate_authorities
  endpoint:
    path: /api/v2/system/certificate_authorities
    method: GET
- name: delete_certificate_authorities
  endpoint:
    path: /api/v2/system/certificate_authorities
    method: DELETE
- name: NTP Time Servers
  endpoint:
    path: /services/ntp-time-servers
    method: PUT
    data_selector: data
    params: {}
- name: NTP Time Servers
  endpoint:
    path: /services/ntp-time-servers
    method: DELETE
    data_selector: data
    params: {}
- name: certificate_authority_generate
  endpoint:
    path: /api/v2/system/certificate_authority/generate
    method: POST
- name: certificate_authority_renew
  endpoint:
    path: /api/v2/system/certificate_authority/renew
    method: POST
- name: certificate
  endpoint:
    path: /api/v2/system/certificate
    method: GET
- name: SSH
  endpoint:
    path: /api/v2/services/ssh
    method: GET
    data_selector: data
    params: {}
- name: ServiceWatchdog
  endpoint:
    path: /api/v2/services/service_watchdog
    method: GET
    data_selector: data
    params: {}
- name: service_watchdog
  endpoint:
    path: /api/v2/services/service_watchdogs
    method: GET
- name: create_service_watchdog
  endpoint:
    path: /api/v2/services/service_watchdog
    method: POST
- name: update_service_watchdog
  endpoint:
    path: /api/v2/services/service_watchdog
    method: PATCH
- name: delete_service_watchdog
  endpoint:
    path: /api/v2/services/service_watchdog
    method: DELETE
- name: certificate_renew
  endpoint:
    path: /api/v2/system/certificate/renew
    method: POST
- name: certificate_signing_request
  endpoint:
    path: /api/v2/system/certificate/signing_request
    method: POST
- name: certificate_signing_request_sign
  endpoint:
    path: /api/v2/system/certificate/signing_request/sign
    method: POST
- name: certificates
  endpoint:
    path: /api/v2/system/certificates
    method: GET
- name: ipsec_child_sa
  endpoint:
    path: /api/v2/status/ipsec/child_sa
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: ipsec_sas
  endpoint:
    path: /api/v2/status/ipsec/sas
    method: GET
    data_selector: data
    params:
      limit: default 0
      offset: default 0
      sort_by: nullable
      sort_order: nullable
      sort_flags: nullable
- name: interfaces
  endpoint:
    path: /api/v2/status/interfaces
    method: GET
    data_selector: data
    params:
      limit: default 0
      offset: default 0
      sort_by: nullable
      sort_order: nullable
      sort_flags: nullable
- name: system_hostname
  endpoint:
    path: /api/v2/system/hostname
    method: GET
- name: system_notifications_email_settings
  endpoint:
    path: /api/v2/system/notifications/email_settings
    method: GET
- name: system_notifications_email_settings
  endpoint:
    path: /api/v2/system/notifications/email/settings
    method: PATCH
- name: system_package_available
  endpoint:
    path: /api/v2/system/package/available
    method: GET
- name: auth_logs
  endpoint:
    path: /api/v2/status/logs/auth
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: dhcp_logs
  endpoint:
    path: /api/v2/status/logs/dhcp
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: firewall_logs
  endpoint:
    path: /api/v2/status/logs/firewall
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: system_package
  endpoint:
    path: /api/v2/system/package
    method: GET
- name: system_packages
  endpoint:
    path: /api/v2/system/packages
    method: GET
- name: openvpn_logs
  endpoint:
    path: /api/v2/status/logs/openvpn
    method: GET
    data_selector: data
    params: {}
- name: log_settings
  endpoint:
    path: /api/v2/status/logs/settings
    method: GET
    data_selector: data
    params: {}
- name: system_logs
  endpoint:
    path: /api/v2/status/logs/system
    method: GET
    data_selector: data
    params: {}
- name: openvpn_clients
  endpoint:
    path: /api/v2/status/openvpn/clients
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
- name: access_list_entry
  endpoint:
    path: /api/v2/system/restapi/access_list/entry
    method: GET
    data_selector: data
    params: {}
- name: openvpn_server_connection
  endpoint:
    path: /api/v2/status/openvpn/server/connection
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: openvpn_server_route
  endpoint:
    path: /api/v2/status/openvpn/server/route
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: openvpn_servers
  endpoint:
    path: /api/v2/status/openvpn/servers
    method: GET
    data_selector: data
    params:
      limit: optional
- name: SystemRESTAPIVersion
  endpoint:
    path: /api/v2/system/restapi/version
    method: GET
    data_selector: data
    params: {}
- name: SystemTimezone
  endpoint:
    path: /api/v2/system/timezone
    method: GET
    data_selector: data
    params: {}
- name: system_tunable
  endpoint:
    path: /api/v2/system/tunables
    method: GET
- name: status_service
  endpoint:
    path: /api/v2/status/service
    method: POST
    data_selector: data
    params: {}
- name: status_services
  endpoint:
    path: /api/v2/status/services
    method: GET
    data_selector: data
    params: {}
- name: system_status
  endpoint:
    path: /api/v2/status/system
    method: GET
    data_selector: data
- name: certificate_revocation_list
  endpoint:
    path: /api/v2/system/crl
    method: GET
    data_selector: data
- name: systemCRLRevokedCertificate
  endpoint:
    path: /api/v2/system/crl/revoked_certificate
    method: GET
    data_selector: data
    params:
      id: required
- name: auth_server
  endpoint:
    path: /api/v2/user/auth_servers
    method: GET
    data_selector: data
- name: certificate_authorities
  endpoint:
    path: /api/v2/system/certificate_authorities
    method: GET
- name: system_certificate_authorities
  endpoint:
    path: /api/v2/system/certificate_authorities
    method: DELETE
- name: user
  endpoint:
    path: /api/v2/user
    method: GET
    data_selector: data
    params:
      id: required
- name: User
  endpoint:
    path: /api/v2/user
    method: DELETE
    data_selector: data
    params: {}
- name: UserGroup
  endpoint:
    path: /api/v2/user/group
    method: GET
    data_selector: data
    params: {}
- name: CertificateAuthority
  endpoint:
    path: /api/v2/system/certificate_authority
    method: DELETE
- name: CertificateAuthorityGenerate
  endpoint:
    path: /api/v2/system/certificate_authority/generate
    method: POST
- name: CertificateAuthorityRenew
  endpoint:
    path: /api/v2/system/certificate_authority/renew
    method: POST
- name: Certificate
  endpoint:
    path: /api/v2/system/certificate
    method: GET
- name: VPNIPsecApply
  endpoint:
    path: /api/v2/vpn/ipsec/apply
    method: GET
    data_selector: data
    params: {}
- name: VPNIPsecPhase1Encryption
  endpoint:
    path: /api/v2/vpn/ipsec/phase1/encryption
    method: GET
    data_selector: data
    params: {}
- name: renew_certificate
  endpoint:
    path: /api/v2/system/certificate/renew
    method: POST
- name: signing_request
  endpoint:
    path: /api/v2/system/certificate/signing_request
    method: POST
- name: signing_request_sign
  endpoint:
    path: /api/v2/system/certificate/signing_request/sign
    method: POST
- name: certificates
  endpoint:
    path: /api/v2/system/certificates
    method: GET
- name: IPsecPhase1
  endpoint:
    path: /vpn/ipsecPhase1s
    method: GET
    data_selector: data
- name: system_console
  endpoint:
    path: /api/v2/system/console
    method: GET
- name: system_dns
  endpoint:
    path: /api/v2/system/dns
    method: GET
- name: VPN IPsec Phase 1s
  endpoint:
    method: PUT
- name: VPN IPsec Phase 1s
  endpoint:
    method: DELETE
- name: ipsec_phase2_encryption
  endpoint:
    path: /api/v2/vpn/ipsec/phase2/encryption
    method: GET
    data_selector: data
    params: {}
- name: system_hostname
  endpoint:
    path: /api/v2/system/hostname
    method: GET
    data_selector: data
    params: {}
- name: system_dns
  endpoint:
    path: /api/v2/system/dns
    method: PATCH
    data_selector: data
    params: {}
- name: email_notification_settings
  endpoint:
    path: /api/v2/system/notifications/email_settings
    method: GET
    data_selector: data
    params: {}
- name: IPsecPhase2
  endpoint:
    path: /api/v2/vpn/ipsec/phase2
    method: GET
    data_selector: data
- name: IPsecPhase2_Create
  endpoint:
    path: /api/v2/vpn/ipsec/phase2
    method: POST
    data_selector: data
- name: IPsecPhase2_Update
  endpoint:
    path: /api/v2/vpn/ipsec/phase2
    method: PATCH
    data_selector: data
- name: IPsecPhase2_Delete
  endpoint:
    path: /api/v2/vpn/ipsec/phase2
    method: DELETE
    data_selector: data
- name: system_notifications_email_settings
  endpoint:
    path: /api/v2/system/notifications/email/settings
    method: PATCH
- name: available_package
  endpoint:
    path: /api/v2/system/package/available
    method: GET
- name: system_package
  endpoint:
    path: /api/v2/system/package
    method: GET
- name: system_packages
  endpoint:
    path: /api/v2/system/packages
    method: GET
- name: ipsec_phase2
  endpoint:
    path: /api/v2/vpn/ipsec/phase2s
    method: GET
    data_selector: data
- name: delete_ipsec_phase2
  endpoint:
    path: /api/v2/vpn/ipsec/phase2s
    method: DELETE
    data_selector: data
- name: system_packages
  endpoint:
    path: /api/v2/system/restapi/packages
    method: DELETE
- name: system_restapi_access_list
  endpoint:
    path: /api/v2/system/restapi/access_list
    method: GET
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: GET
    data_selector: data
    params: {}
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: POST
    data_selector: data
    params: {}
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: PATCH
    data_selector: data
    params: {}
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: DELETE
    data_selector: data
    params: {}
- name: access_list_entry
  endpoint:
    path: /api/v2/system/restapi/access_list/entry
    method: GET
    data_selector: data
    params:
      id: ''
- name: OpenVPNClient
  endpoint:
    path: /api/v2/vpn/openvpn/client
    method: GET
    data_selector: data
    params:
      id: {}
- name: restapi_access_list_entry
  endpoint:
    path: /api/v2/system/restapi/access_list_entry
    method: DELETE
    data_selector: data
    params:
      id: required
- name: restapi_settings
  endpoint:
    path: /api/v2/system/restapi/settings
    method: GET
    data_selector: data
- name: restapi_settings_patch
  endpoint:
    path: /api/v2/system/restapi/settings
    method: PATCH
    data_selector: data
- name: restapi_settings_sync
  endpoint:
    path: /api/v2/system/restapi/settings/sync
    method: POST
    data_selector: data
- name: restapi_version
  endpoint:
    path: /api/v2/system/restapi/version
    method: GET
    data_selector: data
- name: OpenVPNClient
  endpoint:
    path: /api/v2/vpn/openvpn/client
    method: DELETE
- name: OpenVPNClientExportConfig
  endpoint:
    path: /api/v2/vpn/openvpn/client_export/config
    method: GET
- name: system_tunable
  endpoint:
    path: /api/v2/system/tunables
    method: GET
    data_selector: data
    params: {}
- name: OpenVPNClientExportConfig
  endpoint:
    path: /client_export/configs
    method: GET
- name: DeleteOpenVPNClientExportConfig
  endpoint:
    path: /client_export/configs
    method: DELETE
    params:
      id: required
- name: vpn_openvpn_clients
  endpoint:
    path: /clients
    method: GET
    data_selector: data
- name: delete_vpn_openvpn_clients
  endpoint:
    path: /clients
    method: DELETE
    data_selector: data
- name: System Tunables
  endpoint:
    path: /system/tunables
    method: PUT
    data_selector: data
    params: {}
- name: Delete System Tunables
  endpoint:
    path: /system/tunables
    method: DELETE
    data_selector: data
    params: {}
- name: OpenVPNServer
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: GET
- name: OpenVPNServer
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: POST
- name: OpenVPNServer
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: PATCH
- name: OpenVPNServer
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: DELETE
- name: system_version
  endpoint:
    path: /api/v2/system/version
    method: GET
    data_selector: data
- name: web_gui_settings
  endpoint:
    path: /api/v2/system/webgui/settings
    method: GET
    data_selector: data
- name: auth_server
  endpoint:
    path: /api/v2/user/auth_server
    method: GET
    data_selector: data
- name: auth_server
  endpoint:
    path: /api/v2/user/auth_servers
    method: GET
- name: WireGuardApply
  endpoint:
    path: /api/v2/vpn/wireguard/apply
    method: GET
    data_selector: data
    params: {}
- name: WireGuardPeerAllowedIP
  endpoint:
    path: /api/v2/vpn/wireguard/peer/allowed_ip
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v2/user
    method: GET
    data_selector: data
    params:
      id: required
- name: User
  endpoint:
    path: /api/v2/user
    method: DELETE
- name: UserGroup
  endpoint:
    path: /api/v2/user/group
    method: GET
- name: WireGuardPeer
  endpoint:
    path: /api/v2/vpn/wireguard/peers
    method: GET
- name: wireguard_settings
  endpoint:
    path: /api/v2/vpn/wireguard/settings
    method: GET
    data_selector: data
- name: wireguard_tunnel_address
  endpoint:
    path: /api/v2/vpn/wireguard/tunnel/address
    method: GET
    data_selector: data
- name: ipsec_apply
  endpoint:
    path: /api/v2/vpn/ipsec/apply
    method: GET
    data_selector: data
- name: ipsec_phase1_encryption
  endpoint:
    path: /api/v2/vpn/ipsec/phase1/encryption
    method: GET
    data_selector: data
- name: WireGuardTunnel
  endpoint:
    path: /vpn/wireguard/tunnels
    method: GET
- name: IPsecPhase1
  endpoint:
    path: /vpn/ipsecPhase1s
    method: GET
    data_selector: data
    params:
      limit: number of objects to obtain at once
- name: IPsecPhase1
  endpoint:
    path: /vpn/ipsec-phase1s
    method: PUT
- name: IPsecPhase1Delete
  endpoint:
    path: /vpn/ipsec-phase1s
    method: DELETE
- name: ipsec_phase2_encryption
  endpoint:
    path: /api/v2/vpn/ipsec/phase2/encryption
    method: GET
- name: VPN IPsec Phase 2
  endpoint:
    path: /api/v2/vpn/ipsec/phase2
    method: GET
- name: Delete VPN IPsec Phase 2 Encryption
  endpoint:
    path: /api/v2/vpn/ipsec/phase2/encryption
    method: DELETE
- name: Create VPN IPsec Phase 2
  endpoint:
    path: /api/v2/vpn/ipsec/phase2
    method: POST
- name: Update VPN IPsec Phase 2
  endpoint:
    path: /api/v2/vpn/ipsec/phase2
    method: PATCH
- name: firewall_rule
  endpoint:
    path: /api/v2/firewall/rule
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /api/v2/user
    method: GET
    data_selector: data
- name: network_interface
  endpoint:
    path: /api/v2/interface
    method: GET
    data_selector: data
- name: firewall_rules
  endpoint:
    path: /api/v2/firewall/rules
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: data
- name: network_interfaces
  endpoint:
    path: /api/v2/interfaces
    method: GET
    data_selector: data
- name: examples
  endpoint:
    path: /api/v2/examples
    method: GET
- name: object_ids
  endpoint:
    path: /api/object_ids
    method: GET
    data_selector: data
    params: {}
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: GET
    data_selector: data
    params:
      id:
        required: true
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: POST
    data_selector: data
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: PATCH
    data_selector: data
- name: OpenVPNClientSpecificOverride
  endpoint:
    path: /api/v2/vpn/openvpn/cso
    method: DELETE
    data_selector: data
- name: firewall_alias
  endpoint:
    path: /api/v2/firewall/alias
    method: POST
    data_selector: data
- name: firewall_rule
  endpoint:
    path: /api/v2/firewall/rule
    method: POST
    data_selector: data
- name: interface_vlan
  endpoint:
    path: /api/v2/interface/vlan
    method: POST
    data_selector: data
- name: routing_gateway
  endpoint:
    path: /api/v2/routing/gateway
    method: POST
    data_selector: data
- name: interface
  endpoint:
    path: /api/v2/interface
    method: PATCH
    data_selector: data
- name: OpenVPNClient
  endpoint:
    path: /api/v2/vpn/openvpn/client
    method: GET
- name: OpenVPNClient
  endpoint:
    path: /api/v2/vpn/openvpn/client
    method: POST
- name: OpenVPNClient
  endpoint:
    path: /api/v2/vpn/openvpn/client
    method: PATCH
- name: OpenVPNClient
  endpoint:
    path: /api/v2/vpn/openvpn/client
    method: DELETE
- name: OpenVPNClient
  endpoint:
    path: /openvpn/client
    method: DELETE
- name: OpenVPNClientExportConfig
  endpoint:
    path: /openvpn/client_export/config
    method: GET
- name: OpenVPNClientExportConfig
  endpoint:
    path: /openvpn/client_export/config
    method: POST
- name: OpenVPNClientExportConfig
  endpoint:
    path: /openvpn/client_export/config
    method: PATCH
- name: graphql_schema
  endpoint:
    path: /api/v2/graphql/schema
    method: GET
- name: customfilter
  endpoint:
    path: /api/v2/firewall/rules
    method: GET
    data_selector: filter_value
    params: {}
- name: OpenVPNClientExportConfigs
  endpoint:
    path: /api/v2/vpn/openvpn/client_export
    method: POST
- name: OpenVPNClientExportConfigsDelete
  endpoint:
    path: /api/v2/vpn/openvpn/client_export
    method: DELETE
- name: MyCustomModel
  endpoint:
    path: /RESTAPI/Models/MyCustomModel
    method: GET
    data_selector: objects
    params: {}
- name: openvpn_clients
  endpoint:
    path: /api/v2/vpn/openvpn/clients
    method: GET
    data_selector: data
    params:
      limit: 0
      offset: 0
      sort_by: null
      sort_order: null
      sort_flags: null
      query: {}
- name: delete_openvpn_clients
  endpoint:
    path: /api/v2/vpn/openvpn/clients
    method: DELETE
    data_selector: data
    params:
      limit: null
- name: vpn_openvpn_server
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: GET
- name: vpn_openvpn_server_create
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: POST
- name: vpn_openvpn_server_update
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: PATCH
- name: vpn_openvpn_server_delete
  endpoint:
    path: /api/v2/vpn/openvpn/server
    method: DELETE
- name: MyCustomModel
  endpoint:
    path: /usr/local/pkg/RESTAPI/Models/MyCustomModel.inc
    method: POST
    data_selector: model
    params: {}
- name: MyCustomModel
  endpoint:
    path: /custom_model
    method: POST
    data_selector: data
    params: {}
- name: MyCustomModel
  endpoint:
    path: /usr/local/pkg/RESTAPI/Models/MyCustomModel.inc
    method: GET
    data_selector: records
- name: WireGuardApply
  endpoint:
    path: /api/v2/vpn/wireguard/apply
    method: GET
    data_selector: data
- name: WireGuardPeerAllowedIP
  endpoint:
    path: /api/v2/vpn/wireguard/peer/allowed_ip
    method: GET
    data_selector: data
- name: WireGuardPeerAllowedIP
  endpoint:
    path: /api/v2/vpn/wireguard/peer
    method: POST
- name: WireGuardPeer
  endpoint:
    path: /api/v2/vpn/wireguard/peer
    method: GET
- name: wireguard_peer
  endpoint:
    path: /api/v2/vpn/wireguard/peers
    method: GET
    data_selector: data
- name: wireguard_peers
  endpoint:
    path: /api/v2/vpn/wireguard/peers
    method: GET
- name: ContentHandler
  endpoint:
    path: /usr/local/pkg/RESTAPI/ContentHandlers/
    method: GET
    data_selector: classes
    params: {}
- name: native_schema
  endpoint:
    path: /api/v2/schema/native
    method: GET
- name: wireguard_settings
  endpoint:
    path: /api/v2/vpn/wireguard/settings
    method: GET
    data_selector: data
    params: {}
- name: wireguard_tunnel_address
  endpoint:
    path: /api/v2/vpn/wireguard/tunnel/address
    method: GET
    data_selector: data
    params:
      parent_id: required
      id: required
- name: WireGuardTunnelAddress
  endpoint:
    path: /api/v2/vpn/wireguard/tunnel
    method: GET
- name: WireGuardTunnel
  endpoint:
    path: /api/v2/vpn/wireguard/tunnels
    method: GET
    data_selector: data
- name: WireGuardTunnelCreate
  endpoint:
    path: /api/v2/vpn/wireguard/tunnel
    method: POST
    data_selector: data
- name: WireGuardTunnelUpdate
  endpoint:
    path: /api/v2/vpn/wireguard/tunnel
    method: PATCH
    data_selector: data
- name: WireGuardTunnelDelete
  endpoint:
    path: /api/v2/vpn/wireguard/tunnel
    method: DELETE
    data_selector: data
- name: WireGuardTunnel
  endpoint:
    path: /api/v2/vpn/wireguard/tunnels
    method: GET
- name: firewall_rule
  endpoint:
    path: /api/v2/firewall/rule
    method: GET
- name: user
  endpoint:
    path: /api/v2/user
    method: GET
- name: network_interface
  endpoint:
    path: /api/v2/interface
    method: GET
- name: firewall_rules
  endpoint:
    path: /api/v2/firewall/rules
    method: GET
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
- name: network_interfaces
  endpoint:
    path: /api/v2/interfaces
    method: GET
- name: graphql_schema
  endpoint:
    path: /api/v2/graphql/schema
    method: GET
- name: custom_filter
  endpoint:
    path: /api/v2/firewall/rules
    method: GET
    data_selector: fieldname__customfilter
    params: {}
- name: MyCustomEndpoint
  endpoint:
    path: /api/v2/my/custom/endpoint
    method: GET
    params: {}
- name: ContentHandler
  endpoint:
    path: /usr/local/pkg/RESTAPI/ContentHandlers/
    method: POST
    data_selector: request_content
    params: {}
- name: native_schema
  endpoint:
    path: /api/v2/schema/native
    method: GET
notes:
- Displays `true` when all firewall changes are applied and there are no pending changes
  left.
- Displays `false` when there are pending firewall changes that have not been applied.
- Ensure the firewall API is enabled for access.
- The scheduler manages the sequence of network packets in the limiter's queue.
- Getting Started
- Authentication and Authorization
- Working with Object IDs
- Queries, Filters, and Sorting
- Common Control Parameters
- Working with HATEOAS
- The gateway traffic matching this rule will be routed to. Set to null to use default.
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_ispconfig''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_jd''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_joker''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_kappernet''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_kinghost''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_knot''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_la''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_leaseweb''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_limacity''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_linode''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_linode_v4''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_loopia''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_lua''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_miab''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_misaka''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_mydnsjp''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_mythic_beasts''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_namecom''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_namecheap''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_nm''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_nanelo''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_nederhost''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_namesilo''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_neodigit''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_netcup''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_netlify''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_nic''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_nsone''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_nw''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_one''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_online''`'
- 'This field is only available when the following conditions are met: - `method`
  must be equal to `''dns_oci''`'
- Using an encrypted private key that needs a passphrase is not supported.
- One level is counted for each slash in the request.
- 'This field is only available when the following conditions are met: - `balance`
  must be equal to `''uri`'
- Leave empty to use the system hostname.
- The descriptive name for a certificate must not exceed 1024 characters.
- Requires specific configuration for API access
- 'This field is only available when the following conditions are met: `gwredir` must
  be equal to `false`'
- 'This field is only available when the following conditions are met: `gwredir6`
  must be equal to `false`'
- This API does not require authentication
- Enables or disables allowing the use of whole URIs, including URL parameters.
- Enables or disables password protecting the console.
- Allow DNS servers to be overwritten by DHCP on WAN interfaces.
- Requires authentication
- 'Allowed privileges: [ page-all, api-v2-firewall-traffic-shaper-queue-patch ]'
- 'Utilizes cache: None'
- 'Supported authentication modes: BasicAuth, JWTAuth, KeyAuth'
- Uses BasicAuth, JWTAuth, or KeyAuth for authentication.
- Requires setup of pfSense-pkg-acme.
- Multiple authentication methods can be enabled at the same time.
- Disabling login protection for the REST API will prevent the REST API from logging
  authentication failures.
- Queries are only available for GET requests to plural endpoints.
- Pagination is only available for GET and DELETE requests to plural endpoints.
- Object IDs are not persistent and can change if objects are reordered or deleted.
- Some endpoints may have persistent object IDs related to pfSense interface IDs.
- HATEOAS is an optional feature and is disabled by default. HATEOAS can be enabled
  in the pfSense webConfigurator under 'System' -> 'REST API' -> 'Settings' by checking
  the `Enable HATEOAS` checkbox or via a `PATCH` request to the [/api/v2/system/restapi/settings]
  endpoint's `hateoas` field.
- Enabling HATEOAS can greatly increase the size of API responses as additional links
  are included in the response data; which may also impact performance on large datasets.
  It is strongly recommended to only enable HATEOAS when needed and to use pagination
  to limit the amount of data returned in a single request.
- Requests must pass these parameters according to your specific content type.
- The GraphQL API uses the same authentication methods and privileges as the REST
  API.
- All GraphQL requests are made to the /api/v2/graphql endpoint using the POST HTTP
  method.
- pfSense's XML configuration was not designed for large scale concurrency. It may
  be necessary to delay API calls to prevent unexpected behavior, such as configuration
  overwrites.
- While the REST API contains controls that should help improve scalability and resource
  management in comparison to the webConfigurator, it is still recommended to use
  the API with caution on large datasets.
- The OpenAPI documentation is automatically generated when the package is initially
  installed and the Swagger UI is accessible under 'System > REST API > Documentation'.
- The OpenAPI documentation is automatically generated when the package is initially
  installed.
- The `choices` property may not be relevant to some Field classes such as the `BooleanField`
  class.
- The human-readable choice names will only be used for documentation purposes where
  applicable.
- In the case of a `many` enabled Field, choices defines which values are valid for
  any item within the array.
- The `choices` property is used to define a list of valid choices for the field.
- The `choices_callable` property is an alternative to the `choices` property.
- Both cannot be defined at the same time.
- If set to `true`, the `allow_empty` property will bypass other validations if the
  value assigned is empty.
- If set to `true`, the `allow_null` property will bypass other validations if the
  value assigned is `null`.
- The `unique` property is used to define whether the field must have a unique value.
- If `false`, the field will be read-only and cannot be changed after the object is
  initially created.
- The `read_only` property is used to define whether the field is read-only.
- The `write_only` property is used to define whether the field is write-only.
- Fields with the `representation_only` property must have a corresponding `from_internal_<field_name>()`
  method.
- A `verbose_name` is typically only required when the automatically generated name
  is not suitable.
- The `internal_name` property is only required when the Field object property name
  does not match the XML configuration field name.
- The `internal_namespace` property is only required when the Field object is nested
  under a parent XML element.
- The Model class names defined in the `referenced_by` property must be class's short
  name.
- If a Field's conditions are not met, the Field will be ignored by the Model and
  automatically assume a `null` value.
- The `validators` property is used to define an array of Validator objects.
- It is recommended to use `validate_extra()` instead of `validate_FIELD_NAME()` when
  the validation logic requires the values of multiple Field objects to be considered.
- The `choices_callable` property is an alternative to the `choices` property. Both
  cannot be defined at the same time.
- pfSense represents empty values in the XML configuration as `<field></field>`. Use
  `allow_null` to allow `null` values and omit the field from the XML configuration
  altogether.
- pfSense represents `null` values in the XML configuration as an omitted field. Use
  `allow_empty` to allow empty values and represent them as `<field></field>` in the
  XML configuration.
- The `read_only` and `write_only` properties are mutually exclusive and cannot both
  be assigned to single Field object.
- Fields with the `representation_only` property must have a corresponding `from_internal_<field_name>()`
  method defined in the Model class OR must be assigned by another field's `validate_FIELD_NAME()`
  method.
- The Model class names defined in the `referenced_by` property must be class's short
  name, not the fully qualified class name.
- Validators should only be created for general validations that apply to more than
  one Field object across multiple Model classes.
- Null values will never be passed into the validate() method as null values require
  the Field's allow_null property to be set to true, which bypasses the validation
  process entirely.
- You can bypass the Dispatcher process spawning in the background in your API calls
  by setting the ['async' control parameter] to false.
- ContentHandler classes must have a unique mime_type property.
- Currently, the REST API does not support Basic authentication with LDAP or RADIUS
  authentication server backends. Only the local database is supported.
- API keys are sensitive information and should be treated as such.
- The REST API is designed to be ready to use out of the box.
- While it is not standard HTTP practice, the REST API will allow you to pass query
  parameters in the request body for GET requests as long as the correct Content-Type
  header is set.
- HATEOAS is an optional feature and is disabled by default.
- Requests must pass parameters according to your specific content type.
- This project uses opinionated code formatters to ensure a consistent code style
  across the project.
- The GraphQL schema is automatically generated when the package is initially installed
  and is accessible at /api/v2/graphql/schema.
- Ensure your pull request's target branch is set to merge into the appropriate branch.
- Running tests is a disruptive process and should not be done on a production pfSense
  instance.
- The v2 package is the latest version of the package and is actively developed and
  fully maintained.
- The legacy v1 package is no longer actively developed and is only receiving compatibility
  fixes and critical security updates when necessary.
- Model classes define the structure of the data that the API will work with.
- The `__construct()` method signature and the parent constructor call MUST remain
  exactly as shown in the template.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- You can bypass the Dispatcher process spawning in the background in your API calls
  by setting the 'async' control parameter to false.
- Caches are responsible for storing large datasets which are typically time-consuming
  to generate.
- Cache files are stored in the /usr/local/pkg/RESTAPI/.resources/cache directory.
- The mime_type property must be unique from all other ContentHandler classes.
errors:
- 401 Unauthorized
- 403 forbidden
- 404 not found
- 405 method not allowed
- 406 not acceptable
- 409 conflict
- 422 unprocessable entity
- 424 failed dependency
- 500 internal server error
- 503 service unavailable
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request after some time.'
- '401: The client has failed to authenticate the API call.'
- '409: The client''s request cannot be fulfilled due to one or more conflicts.'
- '424: The client has requested a resource that requires a dependency which is not
  installed.'
- '403: The client does not have sufficient privileges to make this API call.'
- '400: The client request data has one or more input validation errors.'
- '404: The client has requested a resource that could not be found.'
- '422: The client has requested a resource that requires a dependency which is not
  installed.'
- '500: The server encountered an unexpected error and cannot complete the request.'
- '503: The requested service is temporarily unavailable.'
- '401 Unauthorized: The client has failed to authenticate the API call.'
- '403 Forbidden: The client does not have sufficient privileges to make this API
  call.'
- '404 Not Found: The client has requested a resource that could not be found.'
- '500 Internal Server Error: The server encountered an unexpected error and cannot
  complete the request.'
- '503 Service Unavailable: The requested service is temporarily unavailable.'
- '200: The client has made a successful request.'
- '415: The client has requested a content-type that is not supported by the server.'
- '405: The client has requested an HTTP method that is not supported by the current
  URL.'
- '406: The client has requested content in a format that is not supported.'
- '409 Conflict: The client''s request cannot be fulfilled due to one or more conflicts.'
- '424 Failed Dependency: The client has requested a resource that requires a dependency
  which is not installed.'
- '400 Bad Request: The client request data has one or more input validation errors.'
- '422 Unprocessable Entity: The client has requested a resource that requires a dependency
  which is not installed.'
- '422 Unprocessable Content: The client has requested a resource that requires a
  dependency which is not installed.'
- '405 Method Not Allowed: The client has requested an HTTP method that is not supported
  by the current URL.'
- '406 Not Acceptable: The client has requested content in a format that is not supported.'
- '415 Unsupported Media Type: The client has requested a content-type that is not
  supported by the server.'
- '500 Server Error: The server encountered an unexpected error and cannot complete
  the request.'
- '401: Authentication Error'
- '403: Forbidden Error'
- '404: Not Found Error'
- '409: Conflict Error'
- '422: Unprocessable Content Error'
- '500: Server Error'
- '503: Service Unavailable'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck authentication details'
- '404 Not Found: Resource does not exist'
- '500 Internal Server Error: Check server status'
- '400 Validation Error: The client request data has one or more input validation
  errors.'
- '401 Unauthorized: Recheck credentials.'
- '200 OK: Status code does not indicate success or failure of the request; check
  errors array in response.'
- '503 Service Unavailable: If the queue limit is exceeded.'
- '503 Service Unavailable: If the queue limit is exceeded, the Dispatcher will trigger
  this error.'
auth_info:
  mentioned_objects:
  - ldap
  - radius
  - ACMECertificateIssue
  - ACMECertificateRenew
client:
  base_url: https://pfrest.org/api-docs/
source_metadata: null
