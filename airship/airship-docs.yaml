resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Contacts Dashboard
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: contacts
    params: {}
- name: NPS Dashboard
  endpoint:
    path: /api/v1/nps
    method: GET
    data_selector: nps
    params: {}
- name: Goals Dashboard
  endpoint:
    path: /api/v1/goals
    method: GET
    data_selector: goals
    params: {}
- name: messages
  endpoint:
    path: /api/v1/messages
    method: GET
    data_selector: records
    params: {}
- name: audience
  endpoint:
    path: /api/v1/audience
    method: GET
    data_selector: records
    params: {}
- name: Monthly Active Users
  endpoint:
    path: /reference/billing/monthly-active-users
    method: GET
    data_selector: data
    params: {}
- name: Monthly Unique Visitors
  endpoint:
    path: /reference/billing/monthly-unique-visitors
    method: GET
    data_selector: data
    params: {}
- name: Contact
  endpoint:
    path: /reference/billing/contact
    method: GET
    data_selector: data
    params: {}
- name: Notification
  endpoint:
    path: /reference/billing/notification
    method: GET
    data_selector: data
    params: {}
- name: Impression
  endpoint:
    path: /reference/billing/impression
    method: GET
    data_selector: data
    params: {}
- name: Daily Active Flags
  endpoint:
    path: /reference/billing/daily-active-flags
    method: GET
    data_selector: data
    params: {}
- name: Peak Daily Active Flags
  endpoint:
    path: /reference/billing/peak-daily-active-flags
    method: GET
    data_selector: data
    params: {}
- name: Addressable Users
  endpoint:
    path: /reference/billing/addressable-users
    method: GET
    data_selector: data
    params: {}
- name: SMS
  endpoint:
    path: /reference/billing/sms
    method: GET
    data_selector: data
    params: {}
- name: Mobile Wallet - Total Passes Installed
  endpoint:
    path: /reference/billing/mobile-wallet-total-passes-installed
    method: GET
    data_selector: data
    params: {}
- name: Mobile Wallet - Items Under Management
  endpoint:
    path: /reference/billing/mobile-wallet-items-under-management
    method: GET
    data_selector: data
    params: {}
- name: feature_comparison
  endpoint:
    path: /reference/feature-packages/
    method: GET
    data_selector: features
    params: {}
- name: channels
  endpoint:
    path: /api/channels/
    method: GET
    data_selector: channels
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
    params:
      limit: 200
- name: delete_message
  endpoint:
    path: /api/user/messages/{push_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
    params: {}
- name: delete_message
  endpoint:
    path: /api/user/messages/(push_id)
    method: DELETE
    data_selector: null
    params: {}
- name: experiments
  endpoint:
    path: /api/experiments
    method: POST
    data_selector: ok
    params: {}
- name: experiment_lookup
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: channels
  endpoint:
    path: /api/channels/
    method: GET
    data_selector: channels
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: delete_message
  endpoint:
    path: /api/user/messages/{push_id}
    method: DELETE
    data_selector: ok
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
    data_selector: pipelines
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: lookup_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
    data_selector: No Content
- name: validate_experiment
  endpoint:
    path: /experiments/validate
    method: POST
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
    params:
      limit: 10
      offset: 0
- name: schedule_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
    params:
      limit: 10
      offset: 0
- name: create_experiment
  endpoint:
    path: /api/experiments
    method: POST
    data_selector: experiment_id
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
- name: delete_experiment
  endpoint:
    path: /api/experiments/scheduled/{experiment_id}
    method: DELETE
    data_selector: ok
- name: templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: experiments
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: delete_message
  endpoint:
    path: /api/user/messages/(push_id)
    method: DELETE
    data_selector: ''
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
    data_selector: schedule
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params: {}
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: pipelines
  endpoint:
    path: /api/pipelines/
    method: GET
    data_selector: pipelines
- name: pipeline_limits
  endpoint:
    path: /api/pipelines/limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: experiment
    params: {}
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template
    params: {}
- name: validate_template
  endpoint:
    path: /api/templates/push/validate
    method: POST
    data_selector: ok
- name: look_up_template
  endpoint:
    path: /api/templates/{template_id}
    method: GET
    data_selector: template
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
    params:
      limit: 200
- name: delete_message
  endpoint:
    path: /api/user/messages/{push_id}
    method: DELETE
    data_selector: ok
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: POST
    data_selector: pipelines
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
    data_selector: pipelines
- name: pipelines_limits
  endpoint:
    path: /api/pipelines/limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: experiment_validate
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
- name: experiment_lookup
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
- name: template_list
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: template_create
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
- name: template_push
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
- name: delete_template
  endpoint:
    path: /api/templates/{template_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: region_listing
  endpoint:
    path: /regions/
    method: GET
    data_selector: regions
    params:
      limit: 100
- name: region_lookup
  endpoint:
    path: /regions/{region_id}
    method: GET
    data_selector: region
    params: {}
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: delete_message
  endpoint:
    path: /api/user/messages/{push_id}
    method: DELETE
    data_selector: ''
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
- name: update_schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: PUT
- name: delete_schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: DELETE
- name: pause_schedule
  endpoint:
    path: /api/schedules/{schedule_id}/pause
    method: POST
- name: resume_schedule
  endpoint:
    path: /api/schedules/{schedule_id}/resume
    method: POST
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
    data_selector: pipelines
- name: pipelines_limits
  endpoint:
    path: /limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /{pipeline_id}
    method: DELETE
    data_selector: null
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: create_experiment
  endpoint:
    path: /api/experiments
    method: POST
    data_selector: experiment_id
- name: delete_experiment
  endpoint:
    path: /api/experiments/scheduled/{experiment_id}
    method: DELETE
    data_selector: ok
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
    params: {}
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
    params: {}
- name: push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
    params: {}
- name: template
  endpoint:
    path: /templates/{template_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
    params:
      limit: 100
- name: custom_events
  endpoint:
    path: /custom-events
    method: POST
    data_selector: ok
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
- name: sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
- name: opt_out_sms_channel
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: ok
- name: named_users
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: uninstall_sms_channel
  endpoint:
    path: /api/channels/sms/uninstall
    method: POST
- name: update_sms_channel
  endpoint:
    path: /api/channels/sms/{channel_id}
    method: PUT
- name: sms_channel_lookup
  endpoint:
    path: /api/channels/sms/{msisdn}/{sender}
    method: GET
- name: custom_sms_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: named_user_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
- name: named_user_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
    data_selector: ok
- name: named_user_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: named_users_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
- name: named_users_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
- name: named_users_scoped
  endpoint:
    path: /api/named_users/scoped/{named_user_id}
    method: POST
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: audience
    params: {}
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
    data_selector: audience
    params: {}
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: audience
    params: {}
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: audience
    params: {}
- name: suppress_email_channel
  endpoint:
    path: /api/channels/email/suppress
    method: POST
    data_selector: ok
- name: uninstall_email_channel
  endpoint:
    path: /api/channels/email/uninstall
    method: POST
    data_selector: ok
- name: remove_suppression_email_channel
  endpoint:
    path: /api/channels/email/unsuppress
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: named_users_tags
  endpoint:
    path: /named_users/tags
    method: POST
    data_selector: ok
- name: opt_out_sms
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: update_sms_channel
  endpoint:
    path: /api/channels/sms/{channel_id}
    method: PUT
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
- name: named_users
  endpoint:
    path: /api/named_users
    method: GET
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
    params:
      limit: 200
- name: delete_message
  endpoint:
    path: /api/user/messages/{push_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
    data_selector: pipelines
- name: pipelines_limits
  endpoint:
    path: /pipelines/limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /pipelines/{pipeline_id}
    method: DELETE
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
    params:
      limit: '10'
      offset: '0'
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
    params:
      limit: '10'
      offset: '0'
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
    params: {}
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
    params: {}
- name: push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: ok
    params: {}
- name: validate_template
  endpoint:
    path: /api/templates/push/validate
    method: POST
    data_selector: ok
- name: schedule_template
  endpoint:
    path: /api/templates/schedules
    method: POST
    data_selector: ok
- name: lookup_template
  endpoint:
    path: /api/templates/{template_id}
    method: GET
    data_selector: ok
- name: update_template
  endpoint:
    path: /api/templates/{template_id}
    method: POST
    data_selector: ok
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: ok
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    data_selector: ok
- name: channel_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
    data_selector: channel
- name: register_email_channel
  endpoint:
    path: /api/channels/email
    method: POST
    data_selector: attributes
    params: {}
- name: replace_email_channel
  endpoint:
    path: /api/channels/email/replace/{channel_id}
    method: POST
    data_selector: attributes
    params:
      channel_id: ''
- name: custom_unsubscribe_email_channel
  endpoint:
    path: /api/channels/email/custom-unsubscribe
    method: GET
    data_selector: ''
    params:
      ua_unsubscribe_token: ''
      ua_redirect: ''
- name: suppress_email_channel
  endpoint:
    path: /api/channels/email/suppress
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: uninstall_email_channel
  endpoint:
    path: /api/channels/email/uninstall
    method: POST
    data_selector: ok
- name: unsuppress_email_channel
  endpoint:
    path: /api/channels/email/unsuppress
    method: POST
    data_selector: ok
- name: lookup_email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: GET
    data_selector: channel
- name: update_email_channel
  endpoint:
    path: /api/channels/email/{channel_id}
    method: PUT
    data_selector: ok
- name: update_email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
    data_selector: channel_id
- name: register_sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
    data_selector: channel_id
- name: opt_out_sms_channel
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
    data_selector: ok
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: ok
- name: uninstall_sms_channel
  endpoint:
    path: /api/channels/sms/uninstall
    method: POST
    data_selector: ok
- name: update_sms_channel
  endpoint:
    path: /api/channels/sms/{channel_id}
    method: PUT
    data_selector: ok
- name: lookup_sms_channel
  endpoint:
    path: /api/channels/sms/{msisdn}/{sender}
    method: GET
    data_selector: channel
- name: custom_sms_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: response
    params: {}
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: response
    params: {}
- name: named_users
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
    params: {}
- name: named_user_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: named_user_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
    data_selector: ok
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
    params: {}
- name: named_users_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
    params: {}
- name: named_users_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
    data_selector: ok
    params: {}
- name: named_users_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
    data_selector: ok
    params: {}
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
    params: {}
- name: email_channel_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
- name: sms_channel_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
    data_selector: schedule
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: delete_message
  endpoint:
    path: /api/user/messages/{push_id}
    method: DELETE
    data_selector: ok
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
- name: push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
- name: validate_template
  endpoint:
    path: /api/templates/push/validate
    method: POST
    data_selector: ok
- name: schedule_push
  endpoint:
    path: /api/templates/schedules
    method: POST
    data_selector: ok
- name: lookup_template
  endpoint:
    path: /api/templates/{template_id}
    method: GET
    data_selector: template
- name: update_template
  endpoint:
    path: /api/templates/{template_id}
    method: POST
    data_selector: ok
- name: regions
  endpoint:
    path: /api/regions
    method: GET
    data_selector: regions
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: ok
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
    params: {}
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    data_selector: ok
    params: {}
- name: channel_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
- name: tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: suppress_email_channel
  endpoint:
    path: /suppress
    method: POST
    data_selector: ''
    params: {}
- name: email_tags
  endpoint:
    path: /tags
    method: POST
    data_selector: ''
    params: {}
- name: uninstall_email_channel
  endpoint:
    path: /uninstall
    method: POST
    data_selector: ''
    params: {}
- name: unsuppress_email_channel
  endpoint:
    path: /unsuppress
    method: POST
    data_selector: ''
    params: {}
- name: lookup_email_channel
  endpoint:
    path: /{email}
    method: GET
    data_selector: ''
    params: {}
- name: update_email_channel
  endpoint:
    path: /{channel_id}
    method: PUT
    data_selector: ''
    params: {}
- name: update_email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
    data_selector: channel_id
- name: register_sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
    data_selector: channel_id
- name: opt_out_sms_channel
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
    data_selector: ok
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: sms_uninstall
  endpoint:
    path: /api/channels/sms/uninstall
    method: POST
- name: sms_update
  endpoint:
    path: /api/channels/sms/{channel_id}
    method: PUT
- name: sms_lookup
  endpoint:
    path: /api/channels/sms/{msisdn}/{sender}
    method: GET
- name: custom_sms_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
    params: {}
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: ok
    params: {}
- name: named_user_lookup
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
    params: {}
- name: named_users_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
- name: named_users_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: named_user_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
- name: named_user_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
    data_selector: ok
- name: named_user_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: segment
  endpoint:
    path: /api/segments/{segment_id}
    method: PUT
    data_selector: null
    params:
      segment_id: StringREQUIRED
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
    params: {}
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
    data_selector: ok
    params: {}
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: ok
    params: {}
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
    params: {}
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: delete_message
  endpoint:
    path: /api/user/messages/(push_id)
    method: DELETE
    data_selector: ok
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
- name: update_schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: PUT
- name: delete_schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: DELETE
- name: pause_schedule
  endpoint:
    path: /api/schedules/{schedule_id}/pause
    method: POST
- name: resume_schedule
  endpoint:
    path: /api/schedules/{schedule_id}/resume
    method: POST
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: pipeline_limits
  endpoint:
    path: /api/pipelines/limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
    data_selector: '204'
- name: validate_template
  endpoint:
    path: /api/templates/push/validate
    method: POST
    data_selector: ok
- name: schedule_push
  endpoint:
    path: /api/templates/schedules
    method: POST
    data_selector: ok
- name: lookup_template
  endpoint:
    path: /api/templates/{template_id}
    method: GET
    data_selector: template
- name: update_template
  endpoint:
    path: /api/templates/{template_id}
    method: POST
    data_selector: ok
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
- name: push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
- name: regions
  endpoint:
    path: /api/regions
    method: GET
    data_selector: regions
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: ok
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
    params:
      limit: 1000
- name: channel_attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
    params: {}
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
    params: {}
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    data_selector: ok
- name: channel_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
    data_selector: channel
- name: email_channel
  endpoint:
    path: /api/channels/email
    method: POST
    data_selector: ok
- name: custom_unsubscribe
  endpoint:
    path: /api/channels/email/custom-unsubscribe
    method: GET
    data_selector: null
- name: replace_email_channel
  endpoint:
    path: /api/channels/email/replace/{channel_id}
    method: POST
    data_selector: ok
- name: suppress_email_channel
  endpoint:
    path: /api/channels/email/suppress
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: uninstall_email_channel
  endpoint:
    path: /api/channels/email/uninstall
    method: POST
    data_selector: ok
- name: unsuppress_email_channel
  endpoint:
    path: /api/channels/email/unsuppress
    method: POST
    data_selector: ok
- name: email_lookup
  endpoint:
    path: /api/channels/email/{email}
    method: GET
    data_selector: channel
- name: update_email_channel
  endpoint:
    path: /api/channels/email/{channel_id}
    method: PUT
    data_selector: ok
- name: email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
    data_selector: channel
    params: {}
- name: sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
    data_selector: channel
    params: {}
- name: sms_opt_out
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
    data_selector: ok
    params: {}
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: ok
- name: named_user_lookup
  endpoint:
    path: /api/named_users/
    method: GET
    data_selector: named_user
- name: named_user_listing
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
- name: named_user_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: sms_uninstall
  endpoint:
    path: /api/channels/sms/uninstall
    method: POST
- name: sms_update
  endpoint:
    path: /api/channels/sms/{channel_id}
    method: PUT
- name: sms_lookup
  endpoint:
    path: /api/channels/sms/{msisdn}/{sender}
    method: GET
- name: custom_sms_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
- name: named_users
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: named_users_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
    data_selector: ok
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: named_user_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
- name: named_user_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
    data_selector: ok
- name: named_user_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: audience
    params: {}
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
    data_selector: audience
    params: {}
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: audience
    params: {}
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: audience
    params: {}
- name: segment
  endpoint:
    path: /api/segments/{segment_id}
    method: PUT
    data_selector: ok
    params: {}
- name: delete_segment
  endpoint:
    path: /api/segments/{segment_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: channels
  endpoint:
    path: /api/channels/
    method: GET
    data_selector: channels
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
    params:
      limit: 200
- name: schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
    data_selector: schedule
    params: {}
- name: delete_message
  endpoint:
    path: /api/user/messages/{push_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
    data_selector: schedule
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params:
      limit: 5
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
    params:
      limit: 10
      offset: 0
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
    params:
      limit: 10
      offset: 0
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: pipeline_limits
  endpoint:
    path: /api/pipelines/limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
    data_selector: null
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
    params: {}
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
    params: {}
- name: push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
    params: {}
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: ok
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
    params: {}
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    data_selector: ok
- name: channel_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
    data_selector: channel
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
- name: sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
- name: sms_opt_out
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
- name: suppress_email_channel
  endpoint:
    path: /api/channels/email/suppress
    method: POST
    data_selector: ok
    params: {}
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
    params: {}
- name: uninstall_email_channel
  endpoint:
    path: /api/channels/email/uninstall
    method: POST
    data_selector: ok
    params: {}
- name: unsuppress_email_channel
  endpoint:
    path: /api/channels/email/unsuppress
    method: POST
    data_selector: ok
    params: {}
- name: lookup_email_address
  endpoint:
    path: /api/channels/email/{email}
    method: GET
    data_selector: channel
    params: {}
- name: update_email_channel
  endpoint:
    path: /api/channels/email/{channel_id}
    method: PUT
    data_selector: ok
    params: {}
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: ok
- name: named_users
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
- name: named_user_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: named_user_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
    data_selector: ok
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: audience
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: audience
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: audience
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
    params: {}
- name: named_user_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
    params: {}
- name: named_user_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
    data_selector: ok
    params: {}
- name: named_user_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
    data_selector: ok
    params: {}
- name: attribute_list_errors
  endpoint:
    path: /api/attribute-lists/{list_name}/errors
    method: GET
- name: static_lists
  endpoint:
    path: /api/lists
    method: GET
- name: single_static_list
  endpoint:
    path: /api/lists/{list_name}
    method: GET
- name: create_static_list
  endpoint:
    path: /api/lists
    method: POST
- name: attribute_lists
  endpoint:
    path: /api/attribute-lists
    method: GET
    data_selector: lists
- name: create_attribute_list
  endpoint:
    path: /api/attribute-lists
    method: POST
    data_selector: ok
- name: upload_attribute_list
  endpoint:
    path: /api/attribute-lists/{list_name}/csv
    method: PUT
    data_selector: ok
- name: delete_segment
  endpoint:
    path: /api/segments/{segment_id}
    method: DELETE
- name: channels
  endpoint:
    path: /api/channels/
    method: GET
    data_selector: channels
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: delete_message
  endpoint:
    path: /api/user/messages/(push_id)
    method: DELETE
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
    data_selector: schedule
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
    data_selector: pipelines
- name: pipelines_limits
  endpoint:
    path: /api/pipelines/limits
    method: GET
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
- name: individual_pipeline_lookup
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: experiment
    params: {}
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template
    params: {}
- name: push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
    params: {}
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: ok
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
- name: channels_tags
  endpoint:
    path: /api/channels/tags
    method: POST
- name: channels_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
- name: channels_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
- name: email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
- name: sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
- name: sms_opt_out
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
- name: suppress_email_channel
  endpoint:
    path: /suppress
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /tags
    method: POST
    data_selector: ok
- name: uninstall_email_channel
  endpoint:
    path: /uninstall
    method: POST
    data_selector: ok
- name: unsuppress_email_channel
  endpoint:
    path: /unsuppress
    method: POST
    data_selector: ok
- name: lookup_email_address
  endpoint:
    path: /{email}
    method: GET
    data_selector: channel
- name: update_email_channel
  endpoint:
    path: /{channel_id}
    method: PUT
    data_selector: ok
- name: named_users_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: named_users_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
    data_selector: ok
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: response
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: response
- name: named_user_lookup
  endpoint:
    path: /api/named_users/
    method: GET
    data_selector: named_user
- name: named_user_listing
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
- name: named_user_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: response
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: attributes
- name: named_users_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
- name: named_users_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
    data_selector: ok
- name: named_users_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
- name: segment
  endpoint:
    path: /api/segments/{segment_id}
    method: PUT
- name: attribute_lists
  endpoint:
    path: /api/attribute-lists
    method: GET
- name: attribute_list_errors
  endpoint:
    path: /api/attribute-lists/{list_name}/errors
    method: GET
- name: static_lists
  endpoint:
    path: /api/lists
    method: GET
- name: create_static_list
  endpoint:
    path: /api/lists
    method: POST
- name: get_static_list
  endpoint:
    path: /api/lists/{list_name}
    method: GET
- name: update_static_list
  endpoint:
    path: /api/lists/{list_name}
    method: PUT
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
    params:
      limit: 200
- name: delete_message
  endpoint:
    path: /api/user/messages/(push_id)
    method: DELETE
    data_selector: ok
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
- name: update_schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: PUT
- name: delete_schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: DELETE
- name: pause_schedule
  endpoint:
    path: /api/schedules/{schedule_id}/pause
    method: POST
- name: resume_schedule
  endpoint:
    path: /api/schedules/{schedule_id}/resume
    method: POST
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params: {}
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
    params: {}
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
    data_selector: pipelines
    params: {}
- name: create_pipeline
  endpoint:
    path: /api/pipelines
    method: POST
    data_selector: ok
    params: {}
- name: update_constraints
  endpoint:
    path: /api/pipelines/constraints
    method: PUT
    data_selector: ok
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines/
    method: GET
    data_selector: pipelines
- name: pipeline_limits
  endpoint:
    path: /api/pipelines/limits/
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
    data_selector: ''
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: experiment
    params: {}
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template
    params: {}
- name: send_push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
    params: {}
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: ok
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: regions
  endpoint:
    path: /api/regions
    method: GET
    data_selector: regions
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: tags
    params: {}
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    data_selector: channels
    params: {}
- name: channel_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: email_channel
  endpoint:
    path: /api/channels/email
    method: POST
- name: custom_unsubscribe
  endpoint:
    path: /api/channels/email/custom-unsubscribe
    method: GET
- name: replace_email_channel
  endpoint:
    path: /api/channels/email/replace/{channel_id}
    method: POST
- name: suppress_email_channel
  endpoint:
    path: /api/channels/email/suppress
    method: POST
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
- name: uninstall_email_channel
  endpoint:
    path: /api/channels/email/uninstall
    method: POST
- name: unsuppress_email_channel
  endpoint:
    path: /api/channels/email/unsuppress
    method: POST
- name: lookup_email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: GET
- name: update_email_channel
  endpoint:
    path: /api/channels/email/{channel_id}
    method: PUT
- name: email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
    data_selector: ok
- name: sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
    data_selector: ok
- name: named_users
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: named_users_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
    data_selector: ok
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
    params: {}
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: ok
    params: {}
- name: named_user_lookup
  endpoint:
    path: /api/named_users/
    method: GET
    data_selector: named_user
    params: {}
- name: named_user_listing
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
    params: {}
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
- name: named_user_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
- name: named_user_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
- name: named_user_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
- name: segment
  endpoint:
    path: /api/segments/{segment_id}
    method: PUT
    data_selector: Segment
    params: {}
- name: attribute_lists
  endpoint:
    path: /api/attribute-lists
    method: GET
    data_selector: lists
    params: {}
- name: attribute_lists_errors
  endpoint:
    path: /api/attribute-lists/{list_name}/errors
    method: GET
    data_selector: errors
- name: static_lists
  endpoint:
    path: /api/lists
    method: GET
    data_selector: lists
- name: create_static_list
  endpoint:
    path: /api/lists
    method: POST
    data_selector: ok
- name: update_static_list
  endpoint:
    path: /api/lists/{list_name}
    method: PUT
    data_selector: ok
- name: get_static_list_metadata
  endpoint:
    path: /api/lists/{list_name}
    method: GET
    data_selector: static_list
- name: static_list
  endpoint:
    path: /api/lists/{list_name}
    method: DELETE
    data_selector: '204'
    params: {}
- name: static_list_csv
  endpoint:
    path: /api/lists/{list_name}/csv
    method: GET
    data_selector: '200'
    params: {}
- name: static_list_upload_csv
  endpoint:
    path: /api/lists/{list_name}/csv
    method: PUT
    data_selector: '202'
    params: {}
- name: create_and_send
  endpoint:
    path: /api/create-and-send
    method: POST
    data_selector: ok
- name: bulk_send
  endpoint:
    path: /api/bulk-send
    method: POST
    data_selector: ok
- name: validate_create_and_send
  endpoint:
    path: /api/create-and-send/validate
    method: POST
    data_selector: ok
- name: custom_events
  endpoint:
    path: /api/reports/events
    method: GET
    data_selector: events
    params:
      start: '2020-08-01T10:00:00.000Z'
      end: '2020-08-15T20:00:00.000Z'
      precision: MONTHLY
      page_size: 20
- name: app_opens
  endpoint:
    path: /api/reports/opens
    method: GET
    data_selector: opens
    params:
      start: '2020-08-01T10:00:00'
      end: '2020-08-15T20:00:00'
      precision: MONTHLY
- name: opt_out_report
  endpoint:
    path: /api/reports/optouts
    method: GET
    data_selector: optouts
    params:
      start: 2020-08-01T10:00
      end: 2020-08-15T20:00
      precision: MONTHLY
- name: per_push_detail_report
  endpoint:
    path: /api/reports/perpush/detail/{push_id}
    method: GET
    data_selector: push_body
- name: per_push_time_series_report
  endpoint:
    path: /api/reports/perpush/series/{push_id}
    method: GET
    data_selector: counts
    params:
      precision: HOURLY
- name: response_report
  endpoint:
    path: /api/reports/responses
    method: GET
    data_selector: responses
    params:
      start: 2020-05-01T10:00
      end: 2020-05-30T10:00
      precision: MONTHLY
- name: response_listing
  endpoint:
    path: /api/reports/responses/list
    method: GET
    data_selector: pushes
    params:
      start: 2020-08-01T10:00
      end: 2020-08-15T10:00
      limit: 20
- name: individual_response_stats
  endpoint:
    path: /api/reports/responses/{push_id}
    method: GET
    data_selector: push_uuid
- name: push_sends
  endpoint:
    path: /api/reports/sends
    method: GET
    data_selector: sends
    params:
      start: start_time
      end: end_time
      precision: DAILY
- name: time_in_app
  endpoint:
    path: /api/reports/timeinapp
    method: GET
    data_selector: timeinapp
    params:
      start: start_time
      end: end_time
      precision: DAILY
- name: web_interaction
  endpoint:
    path: /api/reports/web/interaction
    method: GET
    data_selector: total_counts
    params:
      app_key: app_key
      start: start_time
      end: end_time
      precision: HOURLY
- name: named_users_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/subscription_lists
    method: GET
    data_selector: subscription_lists
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
    data_selector: schedule
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params:
      limit: '5'
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params:
      limit: '25'
      enabled: true
      offset: 0
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
- name: pipeline_limits
  endpoint:
    path: /api/pipelines/limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: create_experiment
  endpoint:
    path: /api/experiments
    method: POST
    data_selector: ''
    params: {}
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ''
    params: {}
- name: delete_experiment
  endpoint:
    path: /api/experiments/scheduled/{experiment_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
- name: push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: channel_attributes
  endpoint:
    path: /channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /channels/subscription_lists
    method: POST
    data_selector: ok
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    data_selector: ok
- name: channel_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
    data_selector: channel
- name: email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
- name: sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
- name: opt_out_sms_channel
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: ok
- name: sms_uninstall
  endpoint:
    path: /api/channels/sms/uninstall
    method: POST
    data_selector: ok
- name: sms_update
  endpoint:
    path: /api/channels/sms/{channel_id}
    method: PUT
    data_selector: ok
- name: sms_lookup
  endpoint:
    path: /api/channels/sms/{msisdn}/{sender}
    method: GET
    data_selector: channel
- name: custom_sms_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
- name: named_user_association
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: named_user_disassociation
  endpoint:
    path: /api/named_users/disassociate
    method: POST
    data_selector: ok
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
    params: {}
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: ok
    params: {}
- name: named_users
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
    params: {}
- name: named_user_lookup
  endpoint:
    path: /api/named_users/
    method: GET
    data_selector: named_user
    params:
      id: user-456
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
- name: named_users_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
- name: named_users_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
- name: named_users_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
- name: attribute_lists
  endpoint:
    path: /api/attribute-lists
    method: GET
    data_selector: lists
- name: create_attribute_list
  endpoint:
    path: /api/attribute-lists
    method: POST
    data_selector: ok
- name: upload_attribute_list
  endpoint:
    path: /api/attribute-lists/{list_name}/csv
    method: PUT
    data_selector: ok
- name: delete_segment
  endpoint:
    path: /api/segments/{segment_id}
    method: DELETE
    data_selector: '204'
- name: attribute_lists_errors
  endpoint:
    path: /api/attribute-lists/{list_name}/errors
    method: GET
    data_selector: errors
- name: static_lists
  endpoint:
    path: /api/lists
    method: GET
    data_selector: lists
- name: single_static_list
  endpoint:
    path: /api/lists/{list_name}
    method: GET
    data_selector: static_list
- name: create_static_list
  endpoint:
    path: /api/lists
    method: POST
    data_selector: ok
- name: update_static_list
  endpoint:
    path: /api/lists/{list_name}
    method: PUT
    data_selector: ok
- name: static_list
  endpoint:
    path: /api/lists/{list_name}
    method: DELETE
    data_selector: ''
    params: {}
- name: bulk_send
  endpoint:
    path: /api/bulk-send
    method: POST
    data_selector: ''
    params: {}
- name: bulk_send_audience_email
  endpoint:
    path: /api/bulk/email
    method: POST
- name: bulk_send_audience_sms
  endpoint:
    path: /api/bulk/sms
    method: POST
- name: bulk_send_audience_open
  endpoint:
    path: /api/bulk/open/rcs
    method: POST
- name: create_and_send_message
  endpoint:
    path: /api/create-and-send
    method: POST
- name: create_and_send
  endpoint:
    path: /api/schedules/create-and-send
    method: POST
- name: activity_log_report
  endpoint:
    path: /api/reports/activity/details
    method: GET
- name: devices_report
  endpoint:
    path: /api/reports/devices
    method: GET
- name: custom_events_detail_listing
  endpoint:
    path: /api/reports/events
    method: GET
- name: Custom Event Summary
  endpoint:
    path: /api/reports/events/summary/pergroup/{group_id}
    method: GET
    data_selector: events
    params:
      page: 1
      page_size: 25
- name: Custom Events Per Push Summary
  endpoint:
    path: /api/reports/events/summary/perpush/{push_id}
    method: GET
    data_selector: events
    params:
      page: 1
      page_size: 25
- name: Experiment Variant Report
  endpoint:
    path: /api/reports/experiment/detail/{push_id}/{variant_id}
    method: GET
    data_selector: platforms
    params: {}
- name: pergroup_series
  endpoint:
    path: /pergroup/series/{group_id}
    method: GET
    data_selector: counts
    params:
      precision: HOURLY
- name: perpush_detail
  endpoint:
    path: /perpush/detail/{push_id}
    method: GET
    data_selector: push_id
    params: {}
- name: perpush_series
  endpoint:
    path: /perpush/series/{push_id}
    method: GET
    data_selector: counts
    params:
      precision: HOURLY
- name: experiment_overview
  endpoint:
    path: /api/reports/experiment/overview/{push_id}
    method: GET
    data_selector: app_key
    params: {}
- name: app_opens
  endpoint:
    path: /api/reports/opens
    method: GET
    data_selector: opens
    params: {}
- name: optins
  endpoint:
    path: /api/reports/optins
    method: GET
    data_selector: optins
    params: {}
- name: optouts
  endpoint:
    path: /api/reports/optouts
    method: GET
    data_selector: optouts
    params: {}
- name: pergroup_detail
  endpoint:
    path: /api/reports/pergroup/detail/{group_id}
    method: GET
    data_selector: app_key
    params: {}
- name: responses
  endpoint:
    path: /api/reports/responses
    method: GET
    params:
      start: StringREQUIRED
      end: StringREQUIRED
- name: responses_list
  endpoint:
    path: /api/reports/responses/list
    method: GET
    params:
      start: StringREQUIRED
      end: StringREQUIRED
      limit: Integer
- name: individual_response
  endpoint:
    path: /api/reports/responses/{push_id}
    method: GET
    params:
      push_id: StringREQUIRED
- name: sends
  endpoint:
    path: /api/reports/sends
    method: GET
    params:
      start: StringREQUIRED
      end: StringREQUIRED
      precision: StringREQUIRED
- name: time_in_app
  endpoint:
    path: /api/reports/timeinapp
    method: GET
    data_selector: timeinapp
    params:
      start: 2020-05-01T10:00
      end: 2020-05-15T20:00
      precision: MONTHLY
- name: web_interaction
  endpoint:
    path: /api/reports/web/interaction
    method: GET
    data_selector: total_counts
    params:
      app_key: ZGIwZTY3YjEtZTRiMi00ZG
      start: 2020-05-01T10:00
      end: 2020-05-03T20:00
      precision: HOURLY
- name: named_user_subscription_lists
  endpoint:
    path: /api/subscription_lists/named_users/{named_user_id}
    method: GET
- name: channels
  endpoint:
    path: /api/channels/
    method: GET
    data_selector: channels
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
- name: schedule
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
    data_selector: schedule
- name: schedules
  endpoint:
    path: /api/schedules/{schedule_id}
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params:
      enabled: true
      offset: 0
- name: deleted_pipelines
  endpoint:
    path: /api/pipelines/deleted
    method: GET
    data_selector: pipelines
    params: {}
- name: filtered_pipelines
  endpoint:
    path: /api/pipelines/filtered
    method: GET
    data_selector: pipelines
    params:
      start: 0
      limit: 1
- name: pipelines
  endpoint:
    path: /api/pipelines/
    method: GET
    data_selector: pipelines
- name: pipeline_limits
  endpoint:
    path: /api/pipelines/limits
    method: GET
    data_selector: limits
- name: validate_pipeline
  endpoint:
    path: /api/pipelines/validate
    method: POST
    data_selector: ok
- name: individual_pipeline_lookup
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: GET
    data_selector: pipeline
- name: update_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: PUT
    data_selector: ok
- name: delete_pipeline
  endpoint:
    path: /api/pipelines/{pipeline_id}
    method: DELETE
    data_selector: no_content
- name: experiments
  endpoint:
    path: /api/experiments
    method: GET
    data_selector: experiments
- name: scheduled_experiments
  endpoint:
    path: /api/experiments/scheduled
    method: GET
    data_selector: experiments
- name: validate_experiment
  endpoint:
    path: /api/experiments/validate
    method: POST
    data_selector: ok
    params: {}
- name: lookup_experiment
  endpoint:
    path: /api/experiments/{experiment_id}
    method: GET
    data_selector: experiment
    params: {}
- name: list_templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /api/templates
    method: POST
    data_selector: template_id
    params: {}
- name: send_push_template
  endpoint:
    path: /api/templates/push
    method: POST
    data_selector: push_ids
    params: {}
- name: custom_events
  endpoint:
    path: /api/custom-events
    method: POST
    data_selector: ok
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    data_selector: ok
- name: channel_lookup
  endpoint:
    path: /api/channels/{channel_id}
    method: GET
    data_selector: channel
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
- name: channel_attributes
  endpoint:
    path: /api/channels/attributes
    method: POST
    data_selector: ok
- name: subscription_lists
  endpoint:
    path: /api/channels/subscription_lists
    method: POST
    data_selector: ok
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: email_channel
  endpoint:
    path: /api/channels/email/{email}
    method: PUT
    data_selector: channel_id
- name: sms_channel
  endpoint:
    path: /api/channels/sms
    method: POST
    data_selector: channel_id
- name: sms_opt_out
  endpoint:
    path: /api/channels/sms/opt-out
    method: POST
    data_selector: ok
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: ok
- name: sms_uninstall
  endpoint:
    path: /api/channels/sms/uninstall
    method: POST
    data_selector: ok
- name: sms_update
  endpoint:
    path: /api/channels/sms/{channel_id}
    method: PUT
    data_selector: ok
- name: sms_lookup
  endpoint:
    path: /api/channels/sms/{msisdn}/{sender}
    method: GET
    data_selector: channel
- name: custom_sms_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
- name: sms_custom_response
  endpoint:
    path: /api/sms/custom-response
    method: POST
    data_selector: ok
    params: {}
- name: keyword_interaction
  endpoint:
    path: /api/sms/{msisdn}/keywords
    method: POST
    data_selector: ok
    params: {}
- name: named_user_lookup
  endpoint:
    path: /api/named_users/
    method: GET
    data_selector: named_user
    params: {}
- name: named_user_listing
  endpoint:
    path: /api/named_users
    method: GET
    data_selector: named_users
    params: {}
- name: named_user_associate
  endpoint:
    path: /api/named_users/associate
    method: POST
    data_selector: ok
- name: named_user_disassociate
  endpoint:
    path: /api/named_users/disassociate
    method: POST
    data_selector: ok
- name: named_user_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: named_user_scoped_operations
  endpoint:
    path: /api/named_users/scoped/{named_user_id}
    method: POST
    data_selector: ok
- name: named_users_tags
  endpoint:
    path: /api/named_users/tags
    method: POST
    data_selector: ok
- name: named_users_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    data_selector: ok
- name: named_users_update
  endpoint:
    path: /api/named_users/{named_user_id}
    method: POST
    data_selector: ok
- name: named_users_attributes
  endpoint:
    path: /api/named_users/{named_user_id}/attributes
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: email_tags
  endpoint:
    path: /api/channels/email/tags
    method: POST
    data_selector: ok
- name: open_channel_tags
  endpoint:
    path: /api/channels/open/tags
    method: POST
    data_selector: ok
- name: sms_tags
  endpoint:
    path: /api/channels/sms/tags
    method: POST
    data_selector: ok
- name: channel_tags
  endpoint:
    path: /api/channels/tags
    method: POST
    data_selector: ok
- name: attribute_lists_errors
  endpoint:
    path: /api/attribute-lists/{list_name}/errors
    method: GET
- name: static_lists
  endpoint:
    path: /api/lists
    method: GET
- name: platinum_members
  endpoint:
    path: /api/lists/platinum_members
    method: DELETE
- name: foobar
  endpoint:
    path: /api/lists/foobar/csv
    method: GET
- name: bulk_send_audience_email
  endpoint:
    path: /bulk/email
    method: POST
- name: bulk_send_audience_sms
  endpoint:
    path: /bulk/sms
    method: POST
- name: bulk_send_audience_open
  endpoint:
    path: /bulk/open/rcs
    method: POST
- name: create_and_send_message
  endpoint:
    path: /create-and-send
    method: POST
- name: custom_events_summary_per_group
  endpoint:
    path: /api/reports/events/summary/pergroup/{group_id}
    method: GET
    data_selector: events
    params: {}
- name: custom_events_summary_per_push
  endpoint:
    path: /api/reports/events/summary/perpush/{push_id}
    method: GET
    data_selector: events
    params: {}
- name: experiment_variant_report
  endpoint:
    path: /api/reports/experiment/detail/{push_id}/{variant_id}
    method: GET
    data_selector: ''
    params: {}
- name: experiment_overview_report
  endpoint:
    path: /api/reports/experiment/overview/{push_id}
    method: GET
    data_selector: ''
    params: {}
- name: create_and_send
  endpoint:
    path: /api/schedules/create-and-send
    method: POST
- name: activity_log
  endpoint:
    path: /api/reports/activity/details
    method: GET
    params:
      start: '2020-06-02T20:47:20'
      end: '2023-01-31T20:47:20'
- name: devices_report
  endpoint:
    path: /api/reports/devices
    method: GET
    params:
      date: '2020-08-28T00:00:00'
- name: custom_events
  endpoint:
    path: /api/reports/events
    method: GET
    params:
      start: '2022-01-01T10:00:00'
      end: '2023-01-01T10:00:00'
      precision: MONTHLY
      page_size: 20
- name: pergroup_series
  endpoint:
    path: /pergroup/series/{group_id}
    method: GET
- name: perpush_detail
  endpoint:
    path: /perpush/detail/{push_id}
    method: GET
- name: perpush_pushbody
  endpoint:
    path: /perpush/pushbody/{push_id}
    method: GET
- name: perpush_series
  endpoint:
    path: /perpush/series/{push_id}
    method: GET
- name: responses
  endpoint:
    path: /responses
    method: GET
    params:
      precision: MONTHLY
- name: experiment_overview_report
  endpoint:
    path: /api/reports/experiment/overview/{push_id}
    method: GET
    data_selector: app_key, control, direct_responses, influenced_responses, variants,
      web_clicks, web_sessions
    params: {}
- name: app_opens_report
  endpoint:
    path: /api/reports/opens
    method: GET
    data_selector: opens
    params: {}
- name: opt_ins_report
  endpoint:
    path: /api/reports/optins
    method: GET
    data_selector: optins
    params: {}
- name: opt_outs_report
  endpoint:
    path: /api/reports/optouts
    method: GET
    data_selector: optouts
    params: {}
- name: per_group_push_detail_report
  endpoint:
    path: /api/reports/pergroup/detail/{group_id}
    method: GET
    data_selector: app_key, group_id, created, rich_deletions, rich_responses, rich_sends,
      sends, alerting_sends, silent_sends, direct_responses, influenced_responses,
      platforms
    params: {}
- name: response_report
  endpoint:
    path: /api/reports/responses
    method: GET
    data_selector: responses
    params:
      start: 2020-05-01T10:00
      end: 2020-05-30T10:00
- name: push_report
  endpoint:
    path: /api/reports/sends
    method: GET
    data_selector: sends
    params:
      start: 2020-05-01T10:00
      end: 2020-05-30T20:00
      precision: MONTHLY
- name: named_user_subscription_lists
  endpoint:
    path: /api/subscription_lists/named_users/{named_user_id}
    method: GET
- name: tag_lists
  endpoint:
    path: /api/tag-lists
    method: GET
- name: time_in_app_report
  endpoint:
    path: /api/reports/timeinapp
    method: GET
    params:
      start: StringREQUIRED
      end: StringREQUIRED
      precision: StringREQUIRED
- name: web_interaction_report
  endpoint:
    path: /api/reports/web/interaction
    method: GET
    params:
      app_key: StringREQUIRED
      start: StringREQUIRED
      end: String
      precision: String
- name: channel_uninstall
  endpoint:
    path: /api/channels/uninstall
    method: POST
    params: {}
- name: named_users_uninstall
  endpoint:
    path: /api/named_users/uninstall
    method: POST
    params:
      named_user_id: Array [String]REQUIRED
- name: subscription_lists
  endpoint:
    path: /api/subscription_lists
    method: GET
    params: {}
- name: android_notification
  endpoint:
    path: /android/notification
    method: POST
    data_selector: android
- name: tag_lists
  endpoint:
    path: /api/tag-lists
    method: POST
    data_selector: ok
    params: {}
- name: tag_list_errors
  endpoint:
    path: /api/tag-lists/{list_name}/errors
    method: GET
    data_selector: errors
    params: {}
- name: android_override_template
  endpoint:
    path: /android/override/template
    method: POST
    data_selector: android
    params: {}
- name: android_override_template_id
  endpoint:
    path: /android/override/template_id
    method: POST
    data_selector: android
    params: {}
- name: create_and_send
  endpoint:
    path: /api/create_and_send
    method: POST
    data_selector: audience.create_and_send
- name: create_and_send
  endpoint:
    path: /api/create_and_send
    method: POST
    data_selector: audience.create_and_send
- name: create_and_send_sms
  endpoint:
    path: /api/push
    method: POST
    data_selector: audience
    params: {}
- name: create_and_send_email
  endpoint:
    path: /api/push
    method: POST
    data_selector: audience
    params: {}
- name: create_and_send_open_channels
  endpoint:
    path: /api/push
    method: POST
    data_selector: audience
    params: {}
- name: channel_listing
  endpoint:
    path: /channel_listing
    method: GET
    data_selector: channel
    params: {}
- name: button_actions
  endpoint:
    path: /interactive/notification/button_actions
    method: GET
    data_selector: actions
- name: localizations
  endpoint:
    path: /localizations
    method: GET
    data_selector: localizations
- name: push_object
  endpoint:
    path: /push
    method: POST
    data_selector: push
- name: push
  endpoint:
    path: /api/push
    method: POST
    data_selector: ok
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: ''
    params: {}
- name: compliance_events
  endpoint:
    path: /api/events/general
    method: POST
    data_selector: ''
    params: {}
- name: mobile_originated_sms
  endpoint:
    path: /events/mobile_originated_sms
    method: POST
    data_selector: event
    params: {}
- name: duplicate_template
  endpoint:
    path: /duplicate/{templateId}
    method: POST
- name: personalization_requirements
  endpoint:
    path: /{templateId}/personalization
    method: GET
- name: projects
  endpoint:
    path: /v1/project
    method: GET
    data_selector: projects
    params:
      pageSize: 10
      page: 1
      order: id
      direction: DESC
- name: passes
  endpoint:
    path: /v1/links/adaptive/project/id/{projectExternalId}/id/{adaptiveLinkExternalId}
    method: GET
    data_selector: passes
    params: {}
- name: tags
  endpoint:
    path: /v1/pass/template/{templateId}/id/{passExternalId}/tags
    method: GET
    data_selector: tags
- name: delete_pass
  endpoint:
    path: /v1/pass/id/{externalId}
    method: DELETE
    data_selector: passId
- name: event
  endpoint:
    path: /v1/events/project/id/{projectExternalId}/id/{eventExternalId}
    method: POST
    data_selector: schedules
    params: {}
- name: flights
  endpoint:
    path: /v1/flights/project/id/{projectExternalId}/id/passGroups/{passGroup}
    method: PUT
    data_selector: schedules
    params: {}
- name: send_notification
  endpoint:
    path: /v1/pass/{passId}/notify
    method: POST
    data_selector: ticketId
- name: delete_notification
  endpoint:
    path: /v1/pass/{passId}/notify
    method: DELETE
    data_selector: ticketId
- name: get_callback_specification
  endpoint:
    path: /v1/project/{projectId}/settings/callback
    method: GET
    data_selector: baseUrl
- name: check_system_status
  endpoint:
    path: /v1/system/status
    method: GET
    data_selector: Hello
- name: get_messages
  endpoint:
    path: /v1/pass/template/{templateId}/id/{passExternalId}/message
    method: GET
- name: list_schedules
  endpoint:
    path: /v1/schedules/{projectId}
    method: GET
- name: certificates
  endpoint:
    path: /v1/certificates
    method: GET
    data_selector: certificates
    params: {}
- name: event_passes
  endpoint:
    path: /v1/events/project/{projectId}/{eventId}/passes
    method: GET
    data_selector: passes
    params: {}
- name: flight_passes
  endpoint:
    path: /v1/flights/project/{projectId}/{flightId}/passes
    method: GET
    data_selector: passes
    params: {}
- name: download_passes
  endpoint:
    path: /v1/pass/download
    method: GET
    data_selector: pkpass
    params:
      passIds: String
- name: infoModuleData
  endpoint:
    path: /infoModuleData
    method: GET
    data_selector: infoModuleData
    params: {}
- name: textModulesData
  endpoint:
    path: /textModulesData
    method: GET
    data_selector: textModulesData
    params: {}
- name: linksModuleData
  endpoint:
    path: /linksModuleData
    method: GET
    data_selector: linksModuleData
    params: {}
- name: pointsModule
  endpoint:
    path: /pointsModule
    method: GET
    data_selector: pointsModule
    params: {}
- name: titleModule
  endpoint:
    path: /titleModule
    method: GET
    data_selector: titleModule
    params: {}
- name: push
  endpoint:
    path: /api/push
    method: POST
    data_selector: response
- name: push_response_statistics
  endpoint:
    path: /api/reports/responses/statistics
    method: GET
- name: response_listing
  endpoint:
    path: /api/reports/responses/list
    method: GET
- name: custom_event
  endpoint:
    path: /api/custom/events
    method: POST
- name: schedules
  endpoint:
    path: /schedules
    method: POST
    data_selector: schedules
- name: ab_tests
  endpoint:
    path: /ab_tests
    method: POST
    data_selector: ab_tests
- name: templates
  endpoint:
    path: /templates
    method: POST
    data_selector: templates
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: named_users
  endpoint:
    path: /named_users
    method: GET
    data_selector: named_users
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: segments
- name: static_lists
  endpoint:
    path: /static_lists
    method: GET
    data_selector: static_lists
- name: platform_statistics
  endpoint:
    path: /platform_statistics
    method: GET
    data_selector: platform_statistics
- name: push
  endpoint:
    path: /api/push
    method: POST
notes:
- Zero-copy data integration with Airship allows direct use of data from external
  systems, which means data remains in its original location instead of being copied
  or imported into Airship.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Setup requires configuration by Airship.
- Contact your Airship account manager or Support to request the integration.
- SMS content element and Validate Form action require minimum SDKs iOS 19.6 and Android
  19.9.
- You can personalize the message using the data currently selected in the Preview
  Data tool to send a consistent message to all test recipients.
- Branching requires SDKs iOS 19.6+ and Android 19.9+.
- Set brand guidelines for your project to ensure consistent identity while accelerating
  content creation.
- Performance Analytics is included in all current AXP plans.
- Uses OAuth2
- Requires setup of connected app in Airship
- Some endpoints may have specific rate limits
- Uses OAuth2 with refresh token — requires setup of connected app in Airship
- Deactivation Period refers to the period of time after which a mobile application
  or web communication channel has not issued a Registration Event.
- Contacts for the mobile and web notification channels are deactivated from the Airship
  Service when a Contact has not issued a Registration Event to Airship during the
  applicable Deactivation Period.
- Features that require an additional purchase are noted as Available.
- Uses OAuth2 with bearer token
- Use oauth2.asnapius.com for Airship’s North American cloud site when requesting
  an OAuth token.
- When using the OAuth token for Airship API endpoints, make sure your requests are
  using the appropriate domain.
- The API prohibits batch sizes of larger than 1,000 for scheduled pushes, and batches
  of larger than 100 for push to local time scheduled pushes.
- Make sure your requests are using the appropriate domain for the OAuth token.
- The request included a payload larger than the maximum size of 5 MiB (error_code
  41307).
- Use OAuth2 with bearer tokens for authentication.
- Use TLS 1.2 or 1.3 for API requests.
- Ensure proper handling of pagination using the specified parameters.
- Accepts the same range of payloads as `/api/experiments`, but only parses and validates
  the payload without creating the experiment.
- All date-time values are represented as a string according to ISO 8601 in UTC.
- The proper Content-Type for JSON is application/json and for CSV is text/csv.
- Some requests to register or unregister information about a device may take a few
  minutes to process.
- This API is being replaced by new content templating features, currently available
  in the Airship UI.
- Request limit is 1000 regions per page.
- Ensure requests are using the appropriate domain for OAuth token.
- Tags added to a channel via the Named Users tag endpoint will not appear with a
  request to this endpoint.
- You must first create a subscription list in the dashboard before subscribing users.
- Avoid repeated registration attempts for the same msisdn and sender without an opted_in
  value.
- The mobile_originated_id is valid for 10 minutes from the received_timestamp.
- A tag must be < 128 characters. A request with one or more tags longer than 128
  characters will return a 400 response.
- We support up to 1,000 tags per channel.
- A tag must be < 128 characters.
- Uses OAuth2 with Bearer token for authentication
- Ensure to use the appropriate domain for requests
- The API prohibits batch sizes of larger than 1,000 for scheduled pushes.
- Only supports deletion of messages by push_id or message_id.
- If you provide an address in this request, it must be the one that is associated
  with the channel you are updating.
- Repeated registrations of the same msisdn and sender without an opted_in value will
  result in multiple opt-in instruction messages being sent to the msisdn.
- If a channel has an assigned Named User and you make an additional call to associate
  that same channel with a new Named User, the original Named User association will
  be removed.
- We support up to 1,000 tags per Named User.
- All date-time values are represented as a string according to ISO 8601 in UTC
- Tags added to a channel via the Named Users tag endpoint will not appear with a
  request to the channels endpoint.
- If you provide an address in the update email channel request, it must match the
  existing email address.
- Repeated registrations of the same msisdn and sender without an opted_in value will
  result in multiple opt-in instruction messages being sent.
- Segmentation data is evaluated at send time. If you schedule a message that targets
  a Segment and then edit that Segment, the scheduled message automatically uses the
  updated Segment criteria.
- Use the Named Users endpoint to set or remove attributes on Named Users.
- If you provide an `address` in the email update request, it must match the existing
  email address.
- We support up to 1,000 tags per channel. Adding more than 1,000 tags per channel
  can cause latency and service interruptions.
- To view those tags, you must look up the Named User associated with the channel.
- Mobile originated ID is valid for 10 minutes.
- Request body must be in JSON format.
- Supports up to 1,000 tags per Named User.
- Channel uninstallation is asynchronous and may take time.
- Max items for audience is 1000.
- Uses OAuth2 with JWT bearer token for authentication
- API prohibits batch sizes of larger than 1,000 for scheduled pushes.
- The endpoint will not work with a group_id from an automated message.
- When using MMS payloads, they cannot be combined with SMS payloads in a single push.
- Channel uninstallation is an asynchronous operation and may take some time to complete.
- If you provide an `address` in the update request, it must be the one that is associated
  with the channel being updated.
- Repeated registrations of the same msisdn and sender without an `opted_in` value
  will result in multiple opt-in instruction messages being sent to the msisdn.
- The mobile_originated_id is valid for 10 minutes from the received_timestamp in
  the payload.
- If sms and mms are included in the request payload, only one will be processed.
- This operation is not currently supported.
- Make sure your requests are using the appropriate domain for OAuth token.
- The platform override section for Kindle Fire (for Amazon Device Messaging).
- The platform override section for Android. Maximum 4,096 bytes.
- Maximum 4,096 bytes.
- You must prefix tag list names with 'ua_tags_'.
- The API may only be used to create or modify lists with a 'ua_tags_' prefixed name.
- Use a template with an Android-specific fields. You can reference a template by
  ID, or use {{handlebars}} directly in your message.
- Use a `template` with iOS-specific message. You can reference a template by ID,
  or use `{{handlebars}}` directly in your message.
- Using a template enables you to provide and populate variables in your notification.
- Conditionals begin with `{{#operator}}` and end with `{{/operator}}`.
- Atomic selectors are the simplest way to identify a single device, i.e., app or
  browser installation, or a group of devices.
- One of the simplest selector, which targets the entire audience.
- Uses handlebars for message personalization.
- Defines limits to be applied to Push Notifications and standard in-app messages
  (not In-App Automations or Scenes) only.
- A bulk send object describes everything about a Create and Send a message with bulk
  ID notification.
- Attempting to specify an interactive payload for an unsupported device type will
  result in an HTTP 400 response.
- Events must have occurred within the past 90 days. You cannot provide a future date-time.
- A push object describes everything about a push notification, including the audience
  and push payload.
- If a client disconnects for any reason, it should reconnect with instructions to
  start at the last offset it successfully processed, to avoid missing any data.
- For each app key authorized to use Real-Time Data Streaming, Airship stores 7 days
  or 100 GB worth of data, whichever comes first.
- Unlike other APIs, a request to /api/events/ returns a stream of data, where each
  line is a JSON object.
- If no data or new line characters are received for ninety seconds, close the connection
  and reconnect.
- If you do not receive data or new line characters for ninety seconds, close the
  connection and reconnect.
- Requires setup of connected app in api
- Event stream can include multiple event types
- The particular API revision to use is 1.2.
- Only TLS 1.2 and TLS 1.3 are supported for Wallet API endpoint access.
- If your request uses an eventExternalId already associated with an existing event,
  the call is treated as a PUT and updates the existing event.
- The response contains a ticketId that can be used to look up the operation.
- Requires projectId for callback specification endpoint.
- Uses Basic Authentication for access to the API
- Uses HTTP Basic Auth for authentication.
- API revision should be set to 1.2 for all requests.
- When updating a field on a pass or an adaptive link, you need only provide the following
  items. You cannot update the position of the field or other information held by
  the template — only the field label, value, and the message the user receives when
  their pass is updated.
- Minimum-viable UrbanAirshipClient config requires an app key and a master secret.
- OAuth cannot be used with the older `api.urbanairship.com` and `api.airship.eu`
  base URLs.
- Airship is no longer actively developing this library but will respond to feature
  requests, issues, and pull requests submitted to the Airship Support site.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Authentication information (the app key and secret) was either
  incorrect or missing.'
- '403 Forbidden: Authentication was correct, but the user does not have permission
  to access the requested API.'
- '404 Not Found: A request was made for a non-existent entity.'
- '401: Authentication information (the app key and secret or bearer token) was either
  incorrect or missing.'
- '403: Authentication was correct, but the user does not have permission to access
  the requested API.'
- '400: Token not generated.'
- '401: Unauthorized.'
- '406: Not acceptable.'
- '429: There were too many similar requests in a short amount of time.'
- '429 Too Many Requests: A request was denied because the app made too many requests
  to an API in a short period of time.'
- '400: There was a parsing or validation error in the request.'
- '404: The requested resource doesn’t exist.'
- '406: Return when the client requests a version of the API that cannot be satisfied.'
- '413: The number of schedules in the array exceeded the maximum amount.'
- '401: Authentication information was either incorrect or missing.'
- '413: The request included a payload larger than the maximum size of 5 MiB.'
- '401 Unauthorized: Authentication information is either incorrect or missing.'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Authentication information was either incorrect or missing.'
- '403 Forbidden: User does not have permission to access the requested API.'
- '404 Not Found: The requested resource doesn’t exist.'
- '409: The application has exceeded the maximum number of active or total pipelines.'
- '405: Experiments can only be deleted before they start.'
- '400: Bad Request'
- '401: Unauthorized'
- '406: Not acceptable'
- '413: Payload too large'
- '429: Too many requests'
- '401 Unauthorized: Authentication information (the app key and secret or bearer
  token) was either incorrect or missing.'
- '403: Authentication was correct, but the user does not have permission to access
  the requested API, e.g., if the feature in question is not included in your pricing
  plan.'
- '400 Bad Request: There was a parsing or validation error in the request.'
- '400 Bad Request: Parsing or validation error in the request'
- '401 Unauthorized: Authentication information was incorrect or missing'
- '400: Parsing or validating the request failed.'
- '403: Returned in cases when the app does not permit associations from the device.'
- '400: Setting a limit greater than 1,000 returns a 400 response.'
- '400 Bad Request: Parsing or validation error in the request.'
- '400: There was a parsing or validation error in the request. Bad Request errors
  typically include path and location in the response, to help you find the cause
  of the error.'
- '406: Return when the client requests a version of the API that cannot be satisfied,
  because no compatible version is currently deployed.'
- '404: Not Found'
- '400: Bad Request. Parsing or validating the request failed.'
- '403: The application does not have the proper entitlement to create attachments.'
- '429: Too many requests hit the API too quickly.'
- '400 Bad Request: The channel could not be created due to missing required fields.'
- '400: The following sender(s) are not configured for the keyword.'
- '401: Authentication information is either incorrect or missing.'
- '400: The request body is not valid.'
- '403: Forbidden. Authentication was correct, but the user does not have permission
  to access the requested API.'
- '403: Forbidden'
- '406: Not Acceptable'
- '403: Returned in cases when the app does not permit associations from the device.
  Secure tag groups require master secret to modify tags.'
- '403: Secure tag groups require master secret to modify tags.'
- '406: No compatible version is currently deployed.'
- '400 Bad Request: Parsing or validating the request failed.'
- '404 Not Found: The msisdn and/or sender don’t match any existing channel_id.'
- '403: User does not have permission to access the requested API.'
- '400: Bad Request - Parsing or validation error in the request.'
- '401: Unauthorized - Authentication information is incorrect or missing.'
- '404: Not Found - The requested resource doesn’t exist.'
- '403 Forbidden: Secure tag groups require master secret to modify tags.'
- '400: Bad Request - The channel could not be created. This error occurs when the
  project is not configured with a valid sender, the request was missing required
  fields, or the MSISDN does not meet the E.164 international standard.'
- '404: A channel_id does not exist for the msisdn and sender.'
- '401: Authentication information is incorrect or missing.'
- '400: Bad Request - Check for validation errors in request.'
- '401: Unauthorized - Check app key and secret or bearer token.'
- '403: Forbidden - Check permissions for the requested API.'
- '400: Parsing or validating the request failed. You will see this error if the same
  tag is present in both the add and remove fields.'
- '400: Bad Request - There was a parsing or validation error in the request.'
- '401: Unauthorized - Authentication information was either incorrect or missing.'
- '406: Not Acceptable - Return when the client requests a version of the API that
  cannot be satisfied.'
- '401: Authentication information was either incorrect or missing'
- '404: The requested resource doesn’t exist'
- '400 Bad Request: The request was missing required fields or the MSISDN does not
  meet the E.164 standard.'
- '400 Bad Request: The following sender(s) are not configured for the keyword.'
- '401 Unauthorized: Authentication information incorrect or missing.'
- '403 Forbidden: Correct authentication but insufficient permissions.'
- '406 Not Acceptable: Client request for an unsupported API version.'
- '400: Parsing or validating the request failed'
- '403: Secure tag groups require master secret to modify tags'
- '406: Client requests a version of the API that cannot be satisfied'
- '409 Conflict: Local time scheduled push is in progress.'
- '413 Payload Too Large: The request included a payload larger than the maximum size
  of 5 MiB.'
- '403 Forbidden: Authentication was correct, but the user does not have permission.'
- '400: Bad Request - Error with path or location'
- '401: Unauthorized - Incorrect or missing authentication'
- '404: Not Found - Resource does not exist'
- '400: Bad Request.'
- '400 Bad Request: Missing required fields or invalid MSISDN.'
- '401 Unauthorized: Incorrect or missing authentication information.'
- '400 Bad Request: The following sender(s) are not configured for the keyword'
- '401 Unauthorized: Authentication information is incorrect or missing'
- '404 Not Found: The requested resource doesn’t exist'
- '401: Authentication information was incorrect or missing.'
- '403: User does not have permission to access the requested API'
- '406: Requested API version cannot be satisfied'
- '403: Forbidden. Authentication was correct, but the user does not have permission
  to access the requested API, e.g., the API may not be used to create or modify lists
  with a `ua_` prefixed name.'
- '409: The app has reached the maximum number of allowed lists (error_code 40906).
  A list with that name already exists (error_code 40907). List is already processing
  recently uploaded CSV (error_code 40910).'
- '403: Authentication was correct, but the user does not have permission.'
- '409 Conflict: The application has exceeded the maximum number of active or total
  pipelines.'
- '400: Bad Request - The mobile_originated_id could not be found.'
- '403: Forbidden. User does not have permission to access the requested API.'
- '400: Bad Request - Request validation failed.'
- '403: Forbidden - User does not have permission.'
- '404 Not Found: No list with that name exists or the list has not yet successfully
  processed an uploaded CSV.'
- '403 Forbidden: The user does not have permission to access the requested API.'
- '409 Conflict: A list with that name already exists.'
- '403: The API may only be used to create or modify lists with either a ua_attributes_
  or ua_attributes_snapshot_ prefixed name.'
- '404: No list with that name exists.'
- '401 Unauthorized: Authentication information is incorrect or missing.'
- '400: There was a parsing or validation error in the request'
- '406: Return when the client requests a version of the API that cannot be satisfied'
- '413: The request included a payload larger than the maximum size of 5 MiB'
- '429: There were too many similar requests in a short amount of time'
- '400: Bad Request - Parsing or validation error.'
- '401: Unauthorized - Authentication information incorrect or missing.'
- '403: The app does not permit associations from the device.'
- '400: Bad Request if a tag is present in both the add and remove fields.'
- '403: Forbidden if the user does not have permission to access the requested API.'
- '40001: Attempted list rename. List renaming is not allowed.'
- '404 Not Found: No list with that name exists.'
- '400: Bad Request - Errors include as much information as possible to help you understand
  the reason for the failure.'
- '409 Conflict: Exceeded the maximum number of active or total pipelines.'
- '400: Parsing or validation error in the request'
- '401: Authentication information incorrect or missing'
- '404: Resource doesn’t exist'
- '401 Unauthorized: Authentication information was missing or incorrect.'
- '403 Forbidden: The app does not permit associations from the device.'
- '400: Bad Request - parsing or validation error'
- '400: Bad Request - If the request is formatted correctly, one or more sender_ids
  does not exist or the keyword is not configured.'
- '401: Unauthorized - Authentication information is either incorrect or missing.'
- '404 Not Found: No list with that name exists'
- '400 Bad Request: Parsing or validating the request failed'
- '403 Forbidden: You cannot delete or modify lists with a `ua_` prefixed `name`.'
- '403: Forbidden - User does not have permission to access the requested API.'
- '406: Not Acceptable - Requested version of the API cannot be satisfied.'
- '400: There was a parsing or validation error in the request. Bad Request errors
  typically include `path` and `location` in the response, to help you find the cause
  of the error.'
- '404: Returned if no channel was found associated to the specified `address`.'
- '400: The channel could not be created due to missing required fields or invalid
  MSISDN.'
- '400: Parsing or validation error in the request.'
- '406: Requested version of the API cannot be satisfied.'
- '400: The mobile_originated_id could not be found.'
- '400: Bad Request - Parsing or validating the request failed.'
- '403: Forbidden - Authentication was correct, but the user does not have permission
  to access the requested API.'
- '403: You cannot delete or modify lists with a `ua_` prefixed `name`.'
- '400: You can only Create and Send to a single platform per request.'
- '403 Forbidden: Authentication was correct, but user does not have permission to
  access the requested API.'
- '400 Bad Request: A request with one or more tags longer than 128 characters will
  return a 400 response.'
- '403 Forbidden: Returned when the app does not permit associations from the device.'
- '400: Bad Request - Missing required fields or invalid MSISDN.'
- '401: Unauthorized - authentication information incorrect or missing'
- '403: Forbidden - user does not have permission'
- '406: Not Acceptable - requested API version not compatible'
- '403: You cannot delete or modify lists with a ua_ prefixed name.'
- '413: Payload Too Large'
- '400: Malformed JSON payload.'
- '403: The API may only be used to create or modify lists with a ''ua_tags_'' prefixed
  name.'
- '409: The app has reached the maximum number of allowed lists.'
- '400: Using addresses that your Airship Account Manager has not enabled for BCC
  will return a 400.'
- '202 Accepted: The request was accepted and is being processed.'
- '400: An empty array results in a 400 response.'
- '400: If an unexpected attribute appears on an event.'
- '400 Bad Request: Check the request format and parameters'
- '404 Not Found: Ensure the endpoint is correct'
- '404: Template not found'
- '404: The project ID or adaptive link external ID does not exist.'
- '401 Unauthorized: Recheck Project Key and Secret'
- '404: The project or adaptive link does not exist.'
- '404: The pass or template ID does not exist.'
- '400: Missing fields or malformed input.'
- '404: The flight or project cannot be found.'
- '404: The pass does not exist.'
- '404: The requested resource does not exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthCredentials
  - UrbanAirshipClient
  - BasicAuth
  - OAuth2
  - Bearer Token
  - OAuth 2.0
  - BasicAuthClient
  - ABTest
  - BearerTokenClient
  - Attribute
  - NamedUserTags
  - NamedUserUninstaller
  - NamedUserUpdateRequest
  - NamedUserAttributeRequest
client:
  base_url: https://go.urbanairship.com
  auth:
    type: basic
    location: header
    header_name: Authorization
  headers:
    Accept: application/vnd.urbanairship+json; version=3
  paginator:
    type: cursor
    cursor_param: start
    page_size_param: limit
    default_page_size: 200
source_metadata: null
