resources:
- name: txt2img
  endpoint:
    path: /sdapi/v1/txt2img
    method: POST
    data_selector: images
- name: img2img
  endpoint:
    path: /sdapi/v1/img2img
    method: POST
    data_selector: images
- name: options
  endpoint:
    path: /sdapi/v1/options
    method: POST
    data_selector: response
- name: sd_models
  endpoint:
    path: /sdapi/v1/sd-models
    method: GET
    data_selector: models
- name: txt2img
  endpoint:
    path: /sdapi/v1/txt2img
    method: POST
    data_selector: response
    params: {}
- name: img2img
  endpoint:
    path: /sdapi/v1/img2img
    method: POST
    data_selector: response
    params: {}
- name: options
  endpoint:
    path: /sdapi/v1/options
    method: POST
    data_selector: response
    params: {}
- name: sd-models
  endpoint:
    path: /sdapi/v1/sd-models
    method: GET
    data_selector: response
    params: {}
- name: Swan Proxima Testnet
  endpoint:
    path: /rpc-proxima.swanchain.io
    method: GET
- name: swan_testnet
  endpoint:
    path: /rpc-proxima/swanchain
    method: GET
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: data
- name: computing_providers
  endpoint:
    path: /decentralized-auction-marketplace/reputation-system
    method: GET
    data_selector: providers
    params: {}
- name: Image-to-Text
  endpoint:
    path: /api-image-to-text/app
    method: POST
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: bidding_task_state_machine
  endpoint:
    path: /decentralized-auction-marketplace/bidding-task-state-machine
    method: GET
    data_selector: states
    params: {}
- name: computing_providers
  endpoint:
    path: /computing-providers
    method: GET
    data_selector: providers
    params: {}
notes:
- Use Basic Auth with username and password for authentication.
- Gas fees are transaction fees required to execute a transaction. For transactions
  on Lagrange, ETH is required.
- You have to pay Computing Providers in SWANC (Swan Credit Token) to utilize their
  computing resources to power your Space.
- API uses Basic Authentication with username and password.
- Swan, built at OP Stack, is currently available on the Sepolia Testnet.
- 'If the above RPC fails, please try using this RPC: https://rpc-proxima-tp.nebulablock.com'
- Join the Swan official Discord and go to the testnet-faucet channel under the LAGRANGE
  SPACE section.
- Spaces is a powerful yet user-friendly platform that enables users to build web
  applications with seamless access to the Lagrange ecosystem.
- Lagrange Spaces provides an infrastructure based on Streamlit, Gradio, and FastAPI,
  three popular frameworks for building web applications in Python.
- Requires SwanETH for gas fees, which can be obtained by swapping Sepolia ETH via
  a bridge.
- 'Token contract address: 0x91B25A65b295F0405552A4bbB77879ab5e38166c'
- You will be prompted to set your API token. Go to your Lagrange Profile→Settings→Access
  Tokens, and get your access token.
- Use a dockerfile if you don't have a pre-built image.
- Use deploy.yaml if you have an existing image to deploy.
- For large files( ＞50MB）, upload to Multichain.Storage first, and add its IPFS link
  to your dockerfile or deploy.yaml.
- To configure API Token, go to your Lagrange Profile→Settings→Access Tokens, and
  get your access token.
- Configure API Token using lag config --api-token <your_access_token>
- 'There are six types of Space statuses: Created, Waiting For Transaction, Assigning
  To Provider, Deploying, Running, Failed, Stopped, Expired.'
- The table above represents the currently available hardware options.
- Explore our curated selection to enhance your workflow, unleash creativity, enjoy
  classic games, and dive into blockchain technology.
- The table above represents the currently available hardware options. Stay tuned
  for more exciting updates as we expand our offerings with additional hardware resources
  in the future.
- Ensure you choose hardware with at least one GPU; without it, Stable Diffusion Space
  won't function.
- Do not panic if you encounter a '404' or '502' error while accessing the web UI.
  These errors indicate that the web UI is currently deploying, and the process typically
  takes around 1-10 minutes to complete.
- Some objects like Contact may return nulls in deeply nested fields
- The auction engine manages the bidding process for tasks.
- The Decentralized Bidding Marketplace can include an auto-bid mode for providers.
- Each computing provider is assigned a reputation score between 0 and 100.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- All LAG awards will be delivered in the form of NFTs, and NFT holders can claim
  their LAG after the TGE (Token Generated Event).
- Ensure that the MultiAddress is set exactly as "/ip4/<public_ip>/tcp/<port>".
- Please use certificates issued by trusted Certificate Authorities (CA).
- Content must be in English.
- The ranking will be based on the popularity of the space they build.
- The bidding task state machine manages the bidding process for tasks.
- Providers are assigned a reputation score between 0 and 100.
- Higher reputation scores indicate more reliable and trustworthy providers.
- Setup your MetaMask wallet for the Polygon testnet.
- Visit the Polygon Testnet Faucet to get some test MATIC tokens.
- Possess a public IP
- Have a wildcard domain name (*.example.com)
- Have an SSL certificate
- Have at least one GPU
- At least 8 vCPUs
- Minimum 50GB SSD storage
- Minimum 32GB memory
- Minimum 50MB bandwidth
- Please use certificates issued by trusted Certificate Authorities (CA). Currently,
  certificates generated by Certbot are not functioning properly.
- Content must be shared on Twitter, and must tag @lagrangedao and @0xfilswan.
errors:
- '401 Unauthorized: Check username and password.'
- '401 Unauthorized: Recheck username and password.'
- '404: Indicates that the web UI is currently deploying.'
- '502: Indicates that the web UI is currently deploying.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://lagrange.computer
  auth:
    type: oauth2
source_metadata: null
