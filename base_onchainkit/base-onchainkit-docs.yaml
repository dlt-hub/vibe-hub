resources:
- name: Identity
  endpoint:
    path: /onchainkit/identity/identity
    method: GET
- name: Wallet
  endpoint:
    path: /onchainkit/wallet/wallet
    method: GET
- name: Transaction
  endpoint:
    path: /onchainkit/transaction/transaction
    method: GET
- name: Checkout
  endpoint:
    path: /onchainkit/checkout/checkout
    method: GET
- name: Fund
  endpoint:
    path: /onchainkit/fund/fund-button
    method: GET
- name: Tokens
  endpoint:
    path: /onchainkit/token/token-chip
    method: GET
- name: Swap
  endpoint:
    path: /onchainkit/swap/swap
    method: GET
- name: Mint
  endpoint:
    path: /onchainkit/mint/nft-mint-card
    method: GET
- name: Coinbase Developer Platform Faucet
  endpoint:
    path: /products/faucet
    method: GET
- name: thirdweb Faucet
  endpoint:
    path: /base-sepolia-testnet
    method: GET
- name: Superchain Faucet
  endpoint:
    path: /faucet
    method: GET
- name: Alchemy Faucet
  endpoint:
    path: /
    method: GET
- name: Bware Labs Faucet
  endpoint:
    path: /faucets
    method: GET
- name: Chainstack Faucet
  endpoint:
    path: /
    method: GET
- name: QuickNode Faucet
  endpoint:
    path: /drip
    method: GET
- name: LearnWeb3 Faucet
  endpoint:
    path: /faucets/base_sepolia
    method: GET
- name: Ethereum Ecosystem Faucet
  endpoint:
    path: /faucets/base-sepolia
    method: GET
- name: Coinbase Developer Platform Faucet
  endpoint:
    path: https://portal.cdp.coinbase.com/products/faucet
    method: GET
    data_selector: request
    params: {}
- name: thirdweb Faucet
  endpoint:
    path: https://thirdweb.com/base-sepolia-testnet
    method: GET
    data_selector: request
    params: {}
- name: Superchain Faucet
  endpoint:
    path: https://app.optimism.io/faucet
    method: GET
    data_selector: request
    params: {}
- name: Alchemy Faucet
  endpoint:
    path: https://basefaucet.com/
    method: GET
    data_selector: request
    params: {}
- name: Bware Labs Faucet
  endpoint:
    path: https://bwarelabs.com/faucets
    method: GET
    data_selector: request
    params: {}
- name: Chainstack Faucet
  endpoint:
    path: https://faucet.chainstack.com/
    method: GET
    data_selector: request
    params: {}
- name: QuickNode Faucet
  endpoint:
    path: https://faucet.quicknode.com/drip
    method: GET
    data_selector: request
    params: {}
- name: LearnWeb3 Faucet
  endpoint:
    path: https://learnweb3.io/faucets/base_sepolia
    method: GET
    data_selector: request
    params: {}
- name: Ethereum Ecosystem Faucet
  endpoint:
    path: https://www.ethereum-ecosystem.com/faucets/base-sepolia
    method: GET
    data_selector: request
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: Counter
  endpoint:
    path: /contracts/src/Counter.sol
    method: POST
    data_selector: deployed
    params: {}
- name: token
  endpoint:
    path: /launch-token
    method: GET
    data_selector: tokens
- name: Zora
  endpoint:
    path: /token-launch/zora
    method: GET
- name: Clanker
  endpoint:
    path: /token-launch/clanker
    method: GET
- name: Flaunch
  endpoint:
    path: /token-launch/flaunch
    method: GET
- name: Counter
  endpoint:
    path: /src/Counter.sol
    method: POST
    data_selector: contract
    params: {}
- name: Counter
  endpoint:
    path: /src/Counter.sol
    method: POST
    data_selector: transaction
    params:
      rpc-url: $BASE_SEPOLIA_RPC_URL
      account: deployer
- name: Weekly Rewards
  endpoint:
    path: /weekly-rewards
    method: GET
    data_selector: rewards
    params: {}
- name: Builder Grants
  endpoint:
    path: /builder-grants
    method: GET
    data_selector: grants
    params: {}
- name: OP Retro Funding
  endpoint:
    path: /op-retro-funding
    method: GET
    data_selector: funding
    params: {}
- name: Base Batches
  endpoint:
    path: /base-batches
    method: GET
    data_selector: batches
    params: {}
- name: builder_rewards
  endpoint:
    path: /builder/rewards
    method: GET
    data_selector: rewards
    params: {}
- name: builder_grants
  endpoint:
    path: /builder/grants
    method: GET
    data_selector: grants
    params: {}
- name: op_retro_funding
  endpoint:
    path: /op/retro_funding
    method: GET
    data_selector: funding
    params: {}
- name: base_batches
  endpoint:
    path: /base/batches
    method: GET
    data_selector: batches
    params: {}
- name: mentors
  endpoint:
    path: /get-started/base-mentorship-program
    method: GET
    data_selector: mentors
    params: {}
- name: country_leads
  endpoint:
    path: /country_leads
    method: GET
    data_selector: leads
- name: base_ambassadors
  endpoint:
    path: /base_ambassadors
    method: GET
    data_selector: ambassadors
- name: analytics
  endpoint:
    path: /rpc/analytics
    method: POST
    data_selector: data
- name: Identity
  endpoint:
    path: /onchainkit/identity/identity
    method: GET
- name: Wallet
  endpoint:
    path: /onchainkit/wallet/wallet
    method: GET
- name: Transaction
  endpoint:
    path: /onchainkit/transaction/transaction
    method: GET
- name: Checkout
  endpoint:
    path: /onchainkit/checkout/checkout
    method: GET
- name: Fund
  endpoint:
    path: /onchainkit/fund/fund-button
    method: GET
- name: Tokens
  endpoint:
    path: /onchainkit/token/token-chip
    method: GET
- name: Swap
  endpoint:
    path: /onchainkit/swap/swap
    method: GET
- name: Mint
  endpoint:
    path: /onchainkit/mint/nft-mint-card
    method: GET
- name: Identity
  endpoint:
    path: /onchainkit/identity
    method: GET
- name: Wallet
  endpoint:
    path: /onchainkit/wallet
    method: GET
- name: Transaction
  endpoint:
    path: /onchainkit/transaction
    method: GET
- name: Checkout
  endpoint:
    path: /onchainkit/checkout
    method: GET
- name: Fund
  endpoint:
    path: /onchainkit/fund
    method: GET
- name: Tokens
  endpoint:
    path: /onchainkit/token
    method: GET
- name: Swap
  endpoint:
    path: /onchainkit/swap
    method: GET
- name: Mint
  endpoint:
    path: /onchainkit/mint
    method: GET
- name: identity
  endpoint:
    path: /onchainkit/identity/identity
    method: GET
- name: wallet
  endpoint:
    path: /onchainkit/wallet/wallet
    method: GET
- name: transaction
  endpoint:
    path: /onchainkit/transaction/transaction
    method: GET
- name: checkout
  endpoint:
    path: /onchainkit/checkout/checkout
    method: GET
- name: fund
  endpoint:
    path: /onchainkit/fund/fund-button
    method: GET
- name: tokens
  endpoint:
    path: /onchainkit/token/token-chip
    method: GET
- name: swap
  endpoint:
    path: /onchainkit/swap/swap
    method: GET
- name: mint
  endpoint:
    path: /onchainkit/mint/nft-mint-card
    method: GET
- name: identity
  endpoint:
    path: /onchainkit/identity/identity
    method: GET
    data_selector: records
- name: wallet
  endpoint:
    path: /onchainkit/wallet/wallet
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /onchainkit/transaction/transaction
    method: GET
    data_selector: records
- name: checkout
  endpoint:
    path: /onchainkit/checkout/checkout
    method: GET
    data_selector: records
- name: fund
  endpoint:
    path: /onchainkit/fund/fund-button
    method: GET
    data_selector: records
- name: tokens
  endpoint:
    path: /onchainkit/token/token-chip
    method: GET
    data_selector: records
- name: swap
  endpoint:
    path: /onchainkit/swap/swap
    method: GET
    data_selector: records
- name: mint
  endpoint:
    path: /onchainkit/mint/nft-mint-card
    method: GET
    data_selector: records
- name: Identity
  endpoint:
    path: /onchainkit/identity/identity
    method: GET
- name: Wallet
  endpoint:
    path: /onchainkit/wallet/wallet
    method: GET
- name: Transaction
  endpoint:
    path: /onchainkit/transaction/transaction
    method: GET
- name: Checkout
  endpoint:
    path: /onchainkit/checkout/checkout
    method: GET
- name: Fund
  endpoint:
    path: /onchainkit/fund/fund-button
    method: GET
- name: Tokens
  endpoint:
    path: /onchainkit/token/token-chip
    method: GET
- name: Swap
  endpoint:
    path: /onchainkit/swap/swap
    method: GET
- name: Mint
  endpoint:
    path: /onchainkit/mint/nft-mint-card
    method: GET
- name: avatar
  endpoint:
    path: /onchainkit/identity/get-avatar
    method: GET
    data_selector: data
- name: name
  endpoint:
    path: /onchainkit/identity/get-name
    method: GET
    data_selector: data
- name: Identity
  endpoint:
    path: /onchainkit/identity/identity
    method: GET
- name: Wallet
  endpoint:
    path: /onchainkit/wallet/wallet
    method: GET
- name: Transaction
  endpoint:
    path: /onchainkit/transaction/transaction
    method: GET
- name: Checkout
  endpoint:
    path: /onchainkit/checkout/checkout
    method: GET
- name: Fund
  endpoint:
    path: /onchainkit/fund/fund-button
    method: GET
- name: Tokens
  endpoint:
    path: /onchainkit/token/token-chip
    method: GET
- name: Swap
  endpoint:
    path: /onchainkit/swap/swap
    method: GET
- name: Mint
  endpoint:
    path: /onchainkit/mint/nft-mint-card
    method: GET
- name: LifecycleStatus
  endpoint:
    path: /onchainkit/lifecycle-status
    method: GET
    data_selector: status
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: transactionData
- name: OnchainKitProvider
  endpoint:
    path: /onchainkit/provider
    method: GET
    data_selector: config.appearance.theme
- name: LifecycleStatus
  endpoint:
    path: /onchainkit/lifecycle-status
    method: GET
    data_selector: statusData
    params: {}
- name: CheckoutButtonReact
  endpoint:
    path: /onchainkit/checkoutbuttonreact
    method: GET
    data_selector: buttonData
    params: {}
- name: CheckoutReact
  endpoint:
    path: /onchainkit/checkoutreact
    method: GET
    data_selector: checkoutData
    params: {}
- name: CheckoutStatusReact
  endpoint:
    path: /onchainkit/checkoutstatusreact
    method: GET
    data_selector: statusData
    params: {}
- name: avatar
  endpoint:
    path: /onchainkit/identity/get-avatar
    method: GET
- name: name
  endpoint:
    path: /onchainkit/identity/get-name
    method: GET
- name: signature
  endpoint:
    path: /onchainkit/signature
    method: GET
    data_selector: signature
- name: wallet
  endpoint:
    path: /onchainkit/wallet
    method: GET
    data_selector: wallet
- name: transaction
  endpoint:
    path: /onchainkit/transaction
    method: GET
    data_selector: transaction
- name: Transaction
  endpoint:
    path: /onchainkit/transaction
    method: GET
    data_selector: transactions
    params: {}
- name: isWalletACoinbaseSmartWallet
  endpoint:
    path: /onchainkit/wallet/is-wallet-a-coinbase-smart-wallet
    method: GET
    data_selector: response
    params: {}
- name: isValidAAEntrypoint
  endpoint:
    path: /onchainkit/wallet/is-valid-aa-entrypoint
    method: GET
    data_selector: boolean
    params: {}
- name: formatAmount
  endpoint:
    path: /onchainkit/token/format-amount
    method: GET
- name: LifecycleStatus
  endpoint:
    path: /onchainkit/earn/lifecycle-status
    method: GET
    data_selector: status
    params: {}
- name: EarnReact
  endpoint:
    path: /onchainkit/earn/react
    method: GET
    data_selector: react
    params: {}
- name: EarnProviderReact
  endpoint:
    path: /onchainkit/earn/provider-react
    method: GET
    data_selector: provider-react
    params: {}
- name: EarnAmountInputReact
  endpoint:
    path: /onchainkit/earn/amount-input
    method: GET
    data_selector: amount-input
    params: {}
- name: DepositAmountInputReact
  endpoint:
    path: /onchainkit/earn/deposit-amount-input
    method: GET
    data_selector: deposit-amount-input
    params: {}
- name: WithdrawAmountInputReact
  endpoint:
    path: /onchainkit/earn/withdraw-amount-input
    method: GET
    data_selector: withdraw-amount-input
    params: {}
- name: EarnBalanceReact
  endpoint:
    path: /onchainkit/earn/balance
    method: GET
    data_selector: balance
    params: {}
- name: DepositBalanceReact
  endpoint:
    path: /onchainkit/earn/deposit-balance
    method: GET
    data_selector: deposit-balance
    params: {}
- name: WithdrawBalanceReact
  endpoint:
    path: /onchainkit/earn/withdraw-balance
    method: GET
    data_selector: withdraw-balance
    params: {}
- name: EarnDepositReact
  endpoint:
    path: /onchainkit/earn/deposit
    method: GET
    data_selector: deposit
    params: {}
- name: EarnWithdrawReact
  endpoint:
    path: /onchainkit/earn/withdraw
    method: GET
    data_selector: withdraw
    params: {}
- name: EarnDetailsReact
  endpoint:
    path: /onchainkit/earn/details
    method: GET
    data_selector: details
    params: {}
- name: DepositButtonReact
  endpoint:
    path: /onchainkit/earn/deposit-button
    method: GET
    data_selector: deposit-button
    params: {}
- name: WithdrawButtonReact
  endpoint:
    path: /onchainkit/earn/withdraw-button
    method: GET
    data_selector: withdraw-button
    params: {}
- name: FundCardPropsReact
  endpoint:
    path: /fundcardpropsreact
    method: GET
    data_selector: records
    params: {}
- name: LifecycleStatus
  endpoint:
    path: /lifecycleStatus
    method: GET
    data_selector: records
    params: {}
- name: PresetAmountInputs
  endpoint:
    path: /presetAmountInputs
    method: GET
    data_selector: records
    params: {}
- name: FundButtonReact
  endpoint:
    path: /fundButtonReact
    method: GET
    data_selector: records
    params: {}
- name: GetOnrampUrlWithProjectIdParams
  endpoint:
    path: /getOnrampUrlWithProjectIdParams
    method: GET
    data_selector: records
    params: {}
- name: GetOnrampUrlWithSessionTokenParams
  endpoint:
    path: /getOnrampUrlWithSessionTokenParams
    method: GET
    data_selector: records
    params: {}
- name: GetOnrampBuyUrlOptionalProps
  endpoint:
    path: /getOnrampBuyUrlOptionalProps
    method: GET
    data_selector: records
    params: {}
- name: OnrampConfigResponseData
  endpoint:
    path: /onrampConfigResponseData
    method: GET
    data_selector: records
    params: {}
- name: OnrampOptionsResponseData
  endpoint:
    path: /onrampOptionsResponseData
    method: GET
    data_selector: records
    params: {}
- name: OnrampTransactionStatusResponseData
  endpoint:
    path: /onrampTransactionStatusResponseData
    method: GET
    data_selector: records
    params: {}
- name: SuccessEventData
  endpoint:
    path: /successEventData
    method: GET
    data_selector: records
    params: {}
- name: OnrampError
  endpoint:
    path: /onrampError
    method: GET
    data_selector: records
    params: {}
- name: EventMetadata
  endpoint:
    path: /eventMetadata
    method: GET
    data_selector: records
    params: {}
- name: OnrampQuoteResponseData
  endpoint:
    path: /onrampQuoteResponseData
    method: GET
    data_selector: records
    params: {}
- name: AddressReact
  endpoint:
    path: address
    method: GET
    data_selector: address
- name: Attestation
  endpoint:
    path: attestation
    method: GET
    data_selector: attestation
- name: AvatarReact
  endpoint:
    path: avatar
    method: GET
    data_selector: avatar
- name: BadgeReact
  endpoint:
    path: badge
    method: GET
    data_selector: badge
- name: BaseMainnetName
  endpoint:
    path: basemainnetname
    method: GET
    data_selector: basemainnetname
- name: Basename
  endpoint:
    path: basename
    method: GET
    data_selector: basename
- name: BaseSepoliaName
  endpoint:
    path: basesepolianame
    method: GET
    data_selector: basesepolianame
- name: EASSchemaUid
  endpoint:
    path: easschemauid
    method: GET
    data_selector: easschemauid
- name: EASChainDefinition
  endpoint:
    path: easchaindefinition
    method: GET
    data_selector: easchaindefinition
- name: EthBalanceReact
  endpoint:
    path: ethbalance
    method: GET
    data_selector: ethbalance
- name: GetAddress
  endpoint:
    path: getaddress
    method: GET
    data_selector: getaddress
- name: GetAttestationsOptions
  endpoint:
    path: getattestationsoptions
    method: GET
    data_selector: getattestationsoptions
- name: GetAvatar
  endpoint:
    path: getavatar
    method: GET
    data_selector: getavatar
- name: GetName
  endpoint:
    path: getname
    method: GET
    data_selector: getname
- name: GetNames
  endpoint:
    path: getnames
    method: GET
    data_selector: getnames
- name: IdentityCardReact
  endpoint:
    path: identitycard
    method: GET
    data_selector: identitycard
- name: IdentityContextType
  endpoint:
    path: identitycontext
    method: GET
    data_selector: identitycontext
- name: IdentityReact
  endpoint:
    path: identity
    method: GET
    data_selector: identity
- name: NameReact
  endpoint:
    path: name
    method: GET
    data_selector: name
- name: UseAddressOptions
  endpoint:
    path: useaddressoptions
    method: GET
    data_selector: useaddressoptions
- name: UseAvatarOptions
  endpoint:
    path: useavataroptions
    method: GET
    data_selector: useavataroptions
- name: UseAvatarsOptions
  endpoint:
    path: useavatarsoptions
    method: GET
    data_selector: useavatarsoptions
- name: UseNameOptions
  endpoint:
    path: usenameoptions
    method: GET
    data_selector: usenameoptions
- name: UseNamesOptions
  endpoint:
    path: usenamesoptions
    method: GET
    data_selector: usenamesoptions
- name: LifecycleStatus
  endpoint:
    path: /lifecyclestatus
    method: GET
    data_selector: status
- name: NFTCardReact
  endpoint:
    path: /nftcardreact
    method: GET
    data_selector: nftCard
- name: NFTMintCardReact
  endpoint:
    path: /nftmintcardreact
    method: GET
    data_selector: nftMintCard
- name: NFTData
  endpoint:
    path: /nftdata
    method: GET
    data_selector: nftData
- name: Fee
  endpoint:
    path: /fee
    method: GET
    data_selector: amount
    params: {}
- name: QuoteWarning
  endpoint:
    path: /quoteWarning
    method: GET
    data_selector: description
    params: {}
- name: LifecycleStatus
  endpoint:
    path: /lifecycleStatus
    method: GET
    data_selector: statusName
    params: {}
- name: SwapAmountInputReact
  endpoint:
    path: /swapAmountInput
    method: GET
    data_selector: label
    params: {}
- name: SwapButtonReact
  endpoint:
    path: /swapButton
    method: GET
    data_selector: disabled
    params: {}
- name: SwapError
  endpoint:
    path: /swapError
    method: GET
    data_selector: code
    params: {}
- name: SwapMessageReact
  endpoint:
    path: /swapMessage
    method: GET
    data_selector: className
    params: {}
- name: SwapQuote
  endpoint:
    path: /swapQuote
    method: GET
    data_selector: amountReference
    params: {}
- name: SwapReact
  endpoint:
    path: /swapReact
    method: GET
    data_selector: children
    params: {}
- name: SwapDefaultReact
  endpoint:
    path: /swapDefault
    method: GET
    data_selector: to
    params: {}
- name: SwapSettingsReact
  endpoint:
    path: /swapSettings
    method: GET
    data_selector: children
    params: {}
- name: SwapSettingsSlippageDescriptionReact
  endpoint:
    path: /swapSettingsSlippageDescription
    method: GET
    data_selector: children
    params: {}
- name: SwapSettingsSlippageInputReact
  endpoint:
    path: /swapSettingsSlippageInput
    method: GET
    data_selector: className
    params: {}
- name: SwapSettingsSlippageTitleReact
  endpoint:
    path: /swapSettingsSlippageTitle
    method: GET
    data_selector: children
    params: {}
- name: SwapToastReact
  endpoint:
    path: /swapToast
    method: GET
    data_selector: className
    params: {}
- name: SwapToggleButtonReact
  endpoint:
    path: /swapToggleButton
    method: GET
    data_selector: className
    params: {}
- name: Transaction
  endpoint:
    path: /transaction
    method: GET
    data_selector: chainId
    params: {}
- name: Token
  endpoint:
    path: /token
    method: GET
    data_selector: records
- name: Call
  endpoint:
    path: /api/call
    method: GET
    data_selector: data
    params: {}
- name: Calls
  endpoint:
    path: /api/calls
    method: GET
    data_selector: data
    params: {}
- name: Contracts
  endpoint:
    path: /api/contracts
    method: GET
    data_selector: data
    params: {}
- name: LifecycleStatus
  endpoint:
    path: /api/lifecycle-status
    method: GET
    data_selector: data
    params: {}
- name: isValidAAEntrypoint
  endpoint:
    path: /onchainkit/wallet/is-valid-aa-entrypoint
    method: GET
notes:
- Base Accounts are the onchain identity and account layer powering the Base App.
- Each Base Account is an ERC-4337 Smart Wallet that can be deployed on any EVM-compatible
  chain.
- Base is a globally available platform that provides 1-second and <1-cent transactions
  to anyone in the world.
- Base has delivered grants to more than 1,000 builders, with plans to continue supporting
  more.
- The beta is smart wallet only
- Mini Apps eliminate friction and leverage social distribution to create instantly
  engaging, viral experiences.
- Mini Apps eliminate the gap between discovery and engagement.
- Mini Apps represent a fundamental shift toward social-native digital experiences.
- Smart Wallets provide a streamlined onboarding experience through account creation
  with Passkeys.
- The bridge on bridge.base.org has been deprecated.
- Requests to Coinbase Developer Platform’s Faucet are limited to one claim per 24
  hours.
- The thirdweb faucet allows developers to connect their wallet through EOA or social
  logins and claim Base Sepolia testnet funds.
- Developers that choose to authenticate via their onchain identity can claim more
  testnet ETH versus traditional faucets.
- Requests to Alchemy’s Base Sepolia Faucet are limited to one claim per 24 hours.
- Requests to Bware Labs Faucet are limited to one claim per 24 hours.
- Chainstack faucet drips 0.5 ETH every 24 hours.
- Requests to QuickNode Faucet are limited to one drip every 12 hours.
- Requests to LearnWeb3 faucet are limited to one claim per 24 hours.
- Each wallet is restricted to receiving 0.5 ETH from this faucet every 24 hours.
- Requires setup of connected app in base
- Superchain Bridges are operated by third parties, not by Coinbase Technologies,
  Inc.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- API requires OAuth2 with refresh token.
- Some endpoints may have rate limits.
- Base Sepolia is the test network for Base, which we will use for the rest of this
  guide.
- Base Chain will begin enforcing a per-transaction gas cap on September 10th.
- Ensure you have sufficient ETH on Base Mainnet for deployment and gas fees.
- Uses API key for authentication.
- Base Appchains are currently in beta with a waitlist.
- Base Appchains provide dedicated blockspace for individual applications.
- Base ecosystem offers multiple funding pathways designed for builders.
- The Base Mentorship Program is an educational/networking initiative only.
- Requires a Farcaster account for testing and manifest signing
- 'Optional: Coinbase Developer Platform account for a Client API key'
- Requires setup of connected app in Coinbase Developer Platform
- Uses OAuth2 with refresh token — requires setup of connected app in Base
- You are responsible for conducting your own diligence on other interfaces enabling
  you to access Basenames to understand the fees and risks that they present.
- You are responsible for maintaining the confidentiality of any private key controlled
  by your Wallet.
- Requires setup of connected app in Coinbase
- Ensure to complete the Formal Complaint Process before filing an arbitration demand
- Uses OAuth2 with refresh token — requires setup of connected app in Coinbase
- Telemetry is opt-out by default starting with version 0.37.0.
- This Cookie Policy explains how Base uses cookies on our website.
- 'Missing API Key: Project ID is required for this component'
- 'Invalid Environment Variables: Cannot find environment variable'
- Telemetry is opt‑out starting with version 0.37.0
- To access OnchainKit, you need to install the @coinbase/onchainkit package and set
  up a Client API Key.
- You can obtain a Project ID from the Coinbase Developer Platform.
- Allows dynamic switching of themes based on user preference or system settings.
- Default theme is applied automatically if no theme is selected.
- You must provide an apiKey or rpcUrl for onchain requests.
- Building reliable onchain applications requires comprehensive testing.
- OnchainTestKit is a type-safe framework designed specifically for testing blockchain
  applications built with OnchainKit.
- Some objects like Contact may return nulls in deeply nested fields
- Lifecycle Status allows you to manage the state of APIs and onchain transactions
  seamlessly within components.
- Sponsor your transactions with Paymaster capabilities by configuring OnchainKitProvider.
- Supports light and dark modes
- Default theme is applied automatically if no theme is selected
- The Signature component supports signing EIP712 and personal_sign messages.
- The Transaction component handles the transaction lifecycle, including gas estimation,
  fee sponsorship, and status updates.
- To sponsor transactions with Paymaster capabilities, configure your OnchainKitProvider
  with the appropriate paymaster URL.
- Uses OAuth2 with refresh token — requires setup of connected app in onchainkit
- Some objects may return nulls in deeply nested fields
- The `formatAmount` utility is designed for consistent number formatting.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests.'
- 'INVALID_TOKEN: Check the validity of your OAuth token.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or permissions'
- Generic error events along with component context to help us triage any issues.
- Gas estimation failed
- Unable to connect wallet
- Failed to switch chain
- 'Invalid API Key: Check your API key'
- Project ID is required for this component
- Cannot find environment variable
- Contracts are not available
- Cannot find module … or its corresponding type declarations. Consider updating to
  ‘node16’, ‘nodenext’, or ‘bundler’
- User rejected request
- Invalid message format
- Wallet connection issues
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects: []
client:
  base_url: https://base.org
  headers:
    Accept: application/json
source_metadata: null
