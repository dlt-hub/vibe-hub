resources:
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: list_orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
    params:
      count: '10'
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: order_list
  endpoint:
    path: /orders
    method: GET
    data_selector: data
    params:
      count: 10
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params:
      count: 10
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: refunds
  endpoint:
    path: /payments/{payment_id}/refunds
    method: POST
    data_selector: refund
    params:
      payment_id: '{payment_id}'
      amount: 200
      notes:
        sales_channel: website
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params:
      count: '10'
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: refunds
  endpoint:
    path: /payments/{payment_id}/refunds
    method: POST
    data_selector: refund
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params:
      count: '10'
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: data
    params:
      count: '10'
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params:
      count: 10
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: data
    params:
      count: 10
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: product
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: product
    params:
      name: Books
      unit_label: MB
      notes:
        genre: comedy
- name: plan
  endpoint:
    path: /plans
    method: POST
    data_selector: json
    params: {}
- name: payment_transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: ''
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
- name: invoiceitem
  endpoint:
    path: /invoiceitems
    method: POST
    data_selector: invoiceitem
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: invoiceitems
  endpoint:
    path: /invoiceitems
    method: POST
    data_selector: invoiceitem
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: invoice
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /invoices
    method: POST
    data_selector: id
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: ''
- name: payment_transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: payment_links
  endpoint:
    path: /payment_links
    method: POST
    data_selector: payment_link
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: payment_links
  endpoint:
    path: /payment_links
    method: POST
    data_selector: payment_link
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: virtual_accounts
  endpoint:
    path: /virtual_accounts
    method: POST
    data_selector: virtual_account
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
- name: virtual_accounts
  endpoint:
    path: /virtual_accounts
    method: POST
    data_selector: virtual_account
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: ''
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: ''
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: beneficiaryaccounts
  endpoint:
    path: /beneficiaryaccounts
    method: POST
    data_selector: id
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: beneficiaryaccounts
  endpoint:
    path: /beneficiaryaccounts
    method: POST
    data_selector: id
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: POST
    data_selector: data
    params: {}
- name: payment_transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: ''
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
- name: transfers
  endpoint:
    path: /transfers
    method: POST
    data_selector: data
    params: {}
- name: payment_transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /payments/{payment_id}/transfers
    method: GET
    data_selector: data
    params:
      payment_id: '{payment_id}'
notes:
- Uses basic authentication with access_id and secret_key.
- Supports pagination with count and skip parameters.
- Supports a metadata parameter named `notes` for storing additional information about
  the object.
- Pagination is applied on the list of objects that matches the API request.
- Transfers are listed in reverse chronological order, with the most recent transfer
  appearing first.
- Payments are listed in reverse chronological order, with the most recent payment
  appearing first.
- Returns a list of all transfers for a given payment that have previously been created.
- Minimum amount is 100 paise.
- Currently only INR is supported.
- The subscription object can have various statuses including active, in_trial, expired,
  past_due, on_hold, cancelled, or completed.
- Returns a list of all transfers for a given payment that have previously been created.
  The transfers are listed in reverse chronological order.
- Returns a list of all transfers for a given payment that have previously been created.
  The transfers are listed in reverse chronological order, with the most recent transfer
  appearing first.
- Uses API key for authentication.
- Collection methods can include bank_account and upi.
- Unique identifier of the source Payment that was used to fund this transfer.
errors:
- '400 - Bad Request: Invalid API request due to omitted required field or invalid
  field value etc.'
- '401 - Unauthorized: Authentication Error. Access ID or Secret Key is invalid.'
- '404 - Not Found: The requested resource does not exist.'
- '5xx - Server Errors: gateway_error or api_error.'
- '401 Unauthorized: Check access_id and secret_key'
- '400 Bad Request: Validate request parameters.'
- '401 Unauthorized: Recheck access_id or secret_key'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Recheck access_id and secret_key.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Recheck API key or secret key'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify payment_id exists'
- '401 Unauthorized: Recheck access_id and secret_key'
- '401 Unauthorized: Recheck access credentials'
- '401 Unauthorized: Recheck your access_id and secret_key.'
- '400 Bad Request: Check the parameters provided for the request.'
- '400 Bad Request: Verify required parameters and values'
- '400 Bad Request: Check parameters provided in the request'
- '401 Unauthorized: Check access_id and secret_key.'
- '401 Unauthorized: Recheck API credentials or access permissions'
- '400 Bad Request: Verify required fields in the request'
- '404 Not Found: Check if the payment_id is valid'
- '400 Bad Request: Ensure all required fields are provided.'
- '404 Not Found: Verify payment_id'
auth_info:
  mentioned_objects: []
client:
  base_url: https://payabbhi.com/api/v1
  auth:
    type: http_basic
    location: header
    header_name: Authorization
source_metadata: null
