resources:
- name: RecentQuestionsFeed
  endpoint:
    path: /feeds
    method: GET
    data_selector: questions
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: Collectives
  endpoint:
    path: /collectives
    method: GET
    data_selector: data
    params: {}
- name: moderators
  endpoint:
    path: /users?tab=moderators
    method: GET
- name: reputation_change_user_removed
  endpoint:
    path: /help/user-was-removed
    method: GET
    data_selector: reputation_change_info
    params: {}
- name: declined_flags
  endpoint:
    path: /help/declined-flags
    method: GET
    data_selector: content
    params: {}
- name: locked_post
  endpoint:
    path: /help/locked-posts
    method: GET
    data_selector: content
    params: {}
- name: DMCA Takedowns
  endpoint:
    path: /help/dmca-takedown
    method: GET
    data_selector: content
    params: {}
- name: question_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: answer_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: participation_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: tag_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: delete_question
  endpoint:
    path: /help/deleted-questions
    method: GET
- name: edit_question
  endpoint:
    path: /help/asking
    method: GET
- name: request_redaction
  endpoint:
    path: /help/what-to-do-instead-of-deleting-question
    method: GET
- name: deleted_questions
  endpoint:
    path: /help/deleted-questions
    method: GET
    data_selector: questions
    params: {}
- name: question_ban
  endpoint:
    path: /help/question-bans
    method: GET
    data_selector: content
    params: {}
- name: tags
  endpoint:
    path: /help/tagging
    method: GET
    data_selector: tags
- name: referencing_material
  endpoint:
    path: /help/referencing
    method: GET
    data_selector: content
    params: {}
- name: answer_ban
  endpoint:
    path: /help/answer-bans
    method: GET
    data_selector: response
    params: {}
- name: privileges
  endpoint:
    path: /help/privileges
    method: GET
    data_selector: privileges
    params: {}
- name: site_analytics
  endpoint:
    path: /site-analytics
    method: GET
- name: trusted user privileges
  endpoint:
    path: /help/privileges/trusted-user
    method: GET
- name: protected_questions
  endpoint:
    path: /help/privileges/protect-questions
    method: GET
    data_selector: questions
    params: {}
- name: deleted_posts
  endpoint:
    path: /privileges/moderator-tools/deleted-posts
    method: GET
    data_selector: posts
- name: posts_with_extreme_votes
  endpoint:
    path: /privileges/moderator-tools/extreme-votes
    method: GET
    data_selector: posts
- name: recently_closed_questions
  endpoint:
    path: /privileges/moderator-tools/recently-closed
    method: GET
    data_selector: questions
- name: recently_deleted_posts
  endpoint:
    path: /privileges/moderator-tools/recently-deleted
    method: GET
    data_selector: posts
- name: posts_with_pending_delete_votes
  endpoint:
    path: /privileges/moderator-tools/pending-delete
    method: GET
    data_selector: posts
- name: tag_wiki_edits
  endpoint:
    path: /privileges/approve-tag-wiki-edits
    method: GET
    data_selector: edits
    params: {}
- name: tag_synonyms
  endpoint:
    path: /help/privileges/edit
    method: GET
- name: edit_posts
  endpoint:
    path: /help/privileges/edit
    method: GET
- name: gallery_chat_rooms
  endpoint:
    path: /chat/galleries
    method: GET
- name: established_user
  endpoint:
    path: /help/privileges/established-user
    method: GET
    data_selector: privileges
    params: {}
- name: close_votes
  endpoint:
    path: /help/privileges/close-questions
    method: GET
    data_selector: questions
    params: {}
- name: First questions
  endpoint:
    path: /help/review-first-questions
    method: GET
- name: First answers
  endpoint:
    path: /help/review-first-answers
    method: GET
- name: Late answers
  endpoint:
    path: /help/review-late-answers
    method: GET
- name: Close votes
  endpoint:
    path: /help/review-close
    method: GET
- name: Reopen votes
  endpoint:
    path: /help/review-reopen
    method: GET
- name: Low quality posts
  endpoint:
    path: /help/review-low-quality
    method: GET
- name: Suggested edits
  endpoint:
    path: /help/review-suggested-edits
    method: GET
- name: Triage
  endpoint:
    path: /help/review-triage
    method: GET
- name: close_votes
  endpoint:
    path: /help/privileges/view-close-votes
    method: GET
    data_selector: close_votes
    params: {}
- name: reduced_ads
  endpoint:
    path: /help/privileges/reduced-ads
    method: GET
    data_selector: privileges
    params: {}
- name: create_tags
  endpoint:
    path: /help/privileges/create-tags
    method: GET
    data_selector: records
- name: vote_down
  endpoint:
    path: /help/privileges/vote-down
    method: GET
    data_selector: privileges
    params: {}
- name: community_wiki
  endpoint:
    path: /privileges/edit-community-wiki
    method: GET
- name: create_chat_rooms
  endpoint:
    path: /help/privileges/chat-rooms
    method: GET
    data_selector: chat_rooms
- name: bounties
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
    data_selector: bounty_info
    params: {}
- name: comments
  endpoint:
    path: /help/privileges/comment
    method: GET
    data_selector: comments
- name: chat
  endpoint:
    path: /chat
    method: GET
- name: flag_posts
  endpoint:
    path: /help/privileges/flag-posts
    method: GET
    data_selector: content
    params: {}
- name: vote_up
  endpoint:
    path: /privileges/vote-up
    method: GET
    data_selector: data
    params: {}
- name: new_user_restrictions
  endpoint:
    path: /help/privileges/new-user
    method: GET
    data_selector: restrictions
    params: {}
- name: protected_questions
  endpoint:
    path: /help/privileges/protected-questions
    method: GET
    data_selector: questions
    params: {}
- name: community_wiki_posts
  endpoint:
    path: /help/privileges/community-wiki
    method: GET
    data_selector: posts
- name: meta
  endpoint:
    path: /help/privileges/participate-in-meta
    method: GET
- name: create_posts
  endpoint:
    path: /privileges/create-posts
    method: GET
    data_selector: posts
- name: bounty
  endpoint:
    path: /help/bounty
    method: GET
    data_selector: bounty_info
    params: {}
- name: set_bounties
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
    data_selector: bounty_info
- name: recent_questions
  endpoint:
    path: /feeds
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: discipline_questions
  endpoint:
    path: /feeds/tag?tagnames=discipline&sort=newest
    method: GET
    data_selector: questions
- name: creative-writing
  endpoint:
    path: /questions/tagged/creative-writing
    method: GET
    data_selector: questions
- name: dialogue
  endpoint:
    path: /questions/tagged/dialogue
    method: GET
    data_selector: questions
- name: character-development
  endpoint:
    path: /questions/tagged/character-development
    method: GET
    data_selector: questions
- name: questions
  endpoint:
    path: /questions/tagged/characters
    method: GET
    data_selector: questions
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: questions
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: answers
    params: {}
- name: self-publishing_questions
  endpoint:
    path: /questions/tagged/self-publishing
    method: GET
- name: newest_short_story_questions
  endpoint:
    path: /feeds/tag?tagnames=short-story&sort=newest
    method: GET
- name: editing_questions
  endpoint:
    path: /questions/tagged/editing
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
- name: question
  endpoint:
    path: /questions/71928
    method: GET
    data_selector: data
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/fiction
    method: GET
    data_selector: questions
- name: questions
  endpoint:
    path: /questions/tagged/titles
    method: GET
    data_selector: questions
    params: {}
- name: queries
  endpoint:
    path: /questions/tagged/queries
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/publishing
    method: GET
    data_selector: questions
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/character-development
    method: GET
    data_selector: questions
    params: {}
- name: newest_character_development_questions
  endpoint:
    path: /feeds/tag?tagnames=character-development&sort=newest
    method: GET
    data_selector: questions
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /feeds/question/8480
    method: GET
    data_selector: entry
notes:
- By using our products, you agree to our Terms of Service.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires user authentication to access user-specific data.
- Some objects like Contact may return nulls in deeply nested fields
- Users must be logged in to join or participate in Collectives.
- The Extension does not require direct personal information such as your name or
  email address.
- We do not store any user credentials for Stack Overflow or GitHub.
- Moderators act as a liaison between the community and Stack Exchange the company.
- Moderators are distinguished from normal users by the diamond (♦) displayed beside
  their user names.
- Reputation is entirely optional
- Votes for posts marked 'community wiki' do not generate any reputation
- All users start with one reputation point, and reputation can never drop below 1
- A user who voted for one of your posts had their account deleted, resulting in all
  of their votes being removed.
- Moderators may provide specific reasons for declining a flag.
- Locking prevents voting, editing, commenting, answering, and flagging.
- Moderators can lock posts for various reasons including edit wars and inappropriate
  content.
- Bounties must have a minimum duration of at least 1 day.
- Users may only have three active bounties at any given time.
- Questions may only have one active question bounty at any given time.
- Stack Exchange needs to abide by lawful, non-spurious, and validly signed takedown
  requests.
- Some objects may return nulls in deeply nested fields
- Community defined by specific set of topics
- Avoid asking for opinions or open-ended discussion
- Questions that need additional work or that are not a good fit for this site may
  be closed by experienced community members.
- Closed questions cannot be answered, but can be edited to make them eligible for
  reopening.
- If nobody has answered yet, go ahead and delete it — nobody minds.
- A pattern of posting rashly and requesting deletion, redaction, or disassociation,
  over and over again, could lead to suspension.
- All new questions are subjected to a 'minimum quality' filter.
- Questions that are extremely off-topic, or of very low quality, may be removed at
  the discretion of the community and moderators.
- Users can typically delete their own questions with a few exceptions.
- Question bans do not affect other privileges, such as commenting or voting.
- Tags are a means of connecting experts with questions they will be able to answer
  by sorting questions into specific, well-defined categories.
- Each question may only contain 5 tags at a maximum, so choose the ones that best
  describe your question.
- Users with 500 reputation can cast up to 24 reopen votes per day.
- Links to external resources are encouraged, but please add context around the link
  so your fellow users will have some idea what it is and why it’s there.
- Answers can be deleted at any time by their authors, unless the answer has been
  accepted by the question asker.
- Deleted questions and answers are always visible to their authors, regardless of
  the author's reputation.
- Access to internal site analytics
- Questions should be protected when they are attracting poor answers from new users
  that exceed the volume which can be moderated in a timely manner.
- Questions should be unprotected when they are no longer attracting large amounts
  of traffic or would benefit from new answers.
- Access to moderator tools requires 2000 reputation.
- All registered users can submit edits for tag wikis.
- Users with this privilege and a total answer score (total upvotes minus total downvotes)
  of 5 or more on the tag, can suggest tag synonyms.
- When a tag synonym proposal reaches a score of 4, it is accepted and becomes active.
- Users can cast up to 24 close votes per day.
- Close votes age away after a number of days if the threshold is not reached.
- This privilege allows you to view and cast close and reopen votes on your own questions.
- Once you reach the milestone of 200 reputation, certain ads are automatically disabled
  from view.
- Most common tags already exist on a mature site.
- Only create new tags when you feel you can make a strong case that your question
  does cover a new topic that nobody else has asked about before on this site.
- Downvotes should indicate issues with quality, effort, or accuracy of a post.
- You can vote 30 times per UTC day, with an additional 10 votes on questions only.
- Community wiki posts are editable by all users and do not confer any reputation.
- You can only have three open bounties at any one time.
- Bounties expire after seven days.
- Flagging is a way of bringing inappropriate content to the attention of the community.
- Users have different flagging options depending on the type of content.
- You have a limited number of votes per day, so use them wisely.
- Voting up is how the community indicates which comments are most useful and appropriate.
- New users cannot post more than eight hyperlinks at a time.
- New users cannot contribute answers to protected questions.
- Community wiki posts are more easily editable by all users, and do not confer any
  reputation.
- Creation privilege awarded at 1 reputation
- You must have at least 75 reputation to set a bounty.
- Stack Exchange has always explicitly encouraged users to answer their own questions.
- API does not require authentication for public data.
- To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
- 3rd-person narration is a style of grammar.
- The perceptions and understanding of an 11yo are not the same as a 16yo.
- API allows anonymous access to most endpoints
- Readers on Amazon pay to read your stories.
- Requires OAuth2 setup for accessing user data
- Uses OAuth2 with refresh token — requires setup of connected app in Stack Exchange
- Some API endpoints may have rate limits
- Blocking some types of cookies may impact your experience of the site and the services
  we are able to offer.
- The API documentation is available at https://api.stackexchange.com/docs
- This comment attacks a person or group. Learn more in our Abusive behavior policy.
- This comment is rude or condescending. Learn more in our Code of Conduct.
- Requires user authentication for most endpoints.
- Requires OAuth2 setup with a connected app.
- Generative artificial intelligence tools may not be used to generate content for
  Writing Stack Exchange.
- Content generated by generative artificial intelligence tools will likely be deleted.
- The reference documentation for an application programming interface (API) is usually
  generated from the code itself automatically.
- We believe knowledge-sharing happens when people feel safe collaborating and that
  historically marginalized and underrepresented groups are disproportionately impacted
  by online abuse.
- To ensure that all users feel safe and welcome, we do not allow behaviors or content
  that cause or contribute to an atmosphere that excludes, marginalizes, or dehumanizes
  individuals or communities on the basis of their actual or perceived ethnicity,
  age, sexual orientation, gender identity and expression, disability, or held religious
  beliefs.
- We also don't allow promoting, encouraging, or threatening acts of violence.
errors:
- '403 Forbidden: Check API key or permissions.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- If at least a quarter of 10 or more flags were declined during the past 7 days,
  you will be temporarily banned from raising new flags.
- This question has been asked before and already has an answer.
- This question doesn’t meet a Writing Stack Exchange guideline.
- This question should include more details and clarify the problem.
- This question currently includes multiple questions in one. It should focus on one
  problem only.
- This question is likely to be answered with opinions rather than facts and citations.
  It should be updated so it will lead to fact-based answers.
- None of this can be used to lift a posting block by the system
- 'You can''t post new questions right now: Sorry, we are no longer accepting questions
  from your account because most of your questions need improvement or are out of
  scope for this site.'
- Sorry, we are no longer accepting answers from your account because most of your
  answers need improvement or do not sufficiently answer the question.
- '0/3,500: Moderation privilege awarded at 3,500 reputation'
- You have a limited number of votes per day.
- Downvotes cost you a tiny bit of reputation on answers.
- '400 Bad Request: Check your request format and parameters.'
- '403 Forbidden: You do not have permission to access this resource.'
- '400 Bad Request: Check your request parameters.'
- '403 Forbidden: You have exceeded the rate limit.'
- '404 Not Found: Endpoint does not exist.'
- '401 Unauthorized: Invalid credentials or token expired'
- '403 Forbidden: Access to the resource is denied'
- '429 Too Many Requests: Reduce frequency of requests'
- '401 Unauthorized: Check OAuth token validity'
- '400 Bad Request: Check your parameters'
- '403 Forbidden: You do not have permission to access this resource'
- '404 Not Found: The requested resource was not found'
- '401 Unauthorized: Invalid access token.'
- '403 Forbidden: Rate limit exceeded.'
- Content generated by generative artificial intelligence tools may lead to a warning
  from moderators.
- Posting content generated by generative artificial intelligence tools may lead to
  suspension for repeated infractions.
- Bullying and Harassment - severe, repeated, or persistent unsolicited conduct, misuse
  of power or tools, or attacks that target specific users or groups of people in
  a manner that causes harm.
- Hostile comments – malicious, unkind, cruel, or mocking comments that provoke or
  insult another person.
- Dangerous speech – any form of expression that represents rhetoric that demonizes
  or denigrates a group of people.
- Bigotry & Discrimination – the poor treatment, expressed irrational suspicion, hatred,
  targeting, and/or intolerance of another person or group of people.
- Dehumanization – depriving individuals or groups of people of their perceived humanity
  and dignity.
- Extremism – promoting or supporting violent actors, hateful organizations, or groups
  organized under a common name.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.stackexchange.com
  auth:
    type: oauth2
    flow: authorization_code
    token_url: https://stackoverflow.com/oauth/access_token
    client_id: '{{ dlt.secrets[''client_id''] }}'
    client_secret: '{{ dlt.secrets[''client_secret''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
