resources:
- name: session_connection
  endpoint:
    path: /v2/project/<api_key>/session/<sessionId>/connection
    method: GET
    data_selector: items
    params:
      offset: '0'
      count: '50'
- name: session_stream_mute
  endpoint:
    path: /v2/project/<api_key>/session/<session_id>/stream/<stream_id>/mute
    method: POST
    data_selector: project details object
    params: {}
- name: generate_api_secret
  endpoint:
    path: /v2/project/<api_key>/refreshSecret
    method: POST
    data_selector: project details object
    params: {}
- name: archive
  endpoint:
    path: /archive
    method: POST
    data_selector: sessionId
    params: {}
- name: stop_archive
  endpoint:
    path: /archive/<archive_id>/stop
    method: POST
    data_selector: id
    params: {}
- name: list_archives
  endpoint:
    path: /archive
    method: GET
    data_selector: archives
    params: {}
- name: session_create
  endpoint:
    path: /session/create
    method: POST
    data_selector: session_id
    params: {}
- name: send_signal
  endpoint:
    path: /v2/project/{API_KEY}/session/{SESSION_ID}/signal
    method: POST
    data_selector: signal
    params: {}
- name: archive
  endpoint:
    path: /v2/project/<api_key>/archive/<archive_id>
    method: GET
    data_selector: archive
    params: {}
- name: archive
  endpoint:
    path: /v2/project/<project_key>/archive/storage
    method: DELETE
- name: archive_layout
  endpoint:
    path: /v2/project/<apiKey>/archive/<archiveId>/layout
    method: PUT
- name: stream
  endpoint:
    path: /v2/project/<apiKey>/session/<sessionId>/stream
    method: PUT
- name: archive_streams
  endpoint:
    path: /v2/project/<apiKey>/archive/<archiveId>/streams
    method: PATCH
- name: live_captions
  endpoint:
    path: /v2/project/<apiKey>/session/<sessionId>/captions
    method: POST
- name: dial
  endpoint:
    path: /<api_key>/dial
    method: POST
    data_selector: sessionId
    params: {}
- name: play-dtmf
  endpoint:
    path: /<api_key>/session<session_id>/play-dtmf
    method: POST
    data_selector: digits
    params: {}
- name: broadcast
  endpoint:
    path: /<apiKey>/broadcast
    method: POST
    data_selector: ''
    params: {}
- name: stop-broadcast
  endpoint:
    path: /<apiKey>/broadcast/<broadcastId>/stop
    method: POST
    data_selector: ''
    params: {}
- name: broadcast
  endpoint:
    path: /<apiKey>/broadcast
    method: GET
    data_selector: broadcasts
    params:
      offset: optional
      count: optional
- name: broadcast_details
  endpoint:
    path: /<apiKey>/broadcast/<broadcastId>
    method: GET
    data_selector: broadcast
    params: {}
- name: project
  endpoint:
    path: /v2/project
    method: GET
    data_selector: project details object
- name: refresh_project_secret
  endpoint:
    path: /v2/project/<api_key>/refreshSecret
    method: POST
    data_selector: project details object
- name: refreshSecret
  endpoint:
    path: /v2/project/<api_key>/refreshSecret
    method: POST
- name: broadcast_streams
  endpoint:
    path: /broadcast/<broadcastId>/streams
    method: PATCH
    data_selector: null
    params: {}
- name: live_captions
  endpoint:
    path: /captions
    method: POST
    data_selector: null
    params: {}
- name: stop_live_captions
  endpoint:
    path: /captions/<captionsId>/stop
    method: POST
    data_selector: null
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: null
    params: {}
- name: delete_render
  endpoint:
    path: /render/<experienceComposerId>
    method: DELETE
    data_selector: null
    params: {}
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: null
    params: {}
- name: Inspector
  endpoint:
    path: /developer/tools/inspector_doc/
    method: GET
- name: Video API Playground
  endpoint:
    path: /developer/tools/playground_doc/
    method: GET
- name: Archive Inspector
  endpoint:
    path: /developer/tools/archive_inspector_doc/
    method: GET
- name: Insights GraphiQL Explorer
  endpoint:
    path: /developer/tools/graphiql_doc/
    method: GET
- name: Pre-call Test
  endpoint:
    path: /developer/tools/precall_doc/
    method: GET
- name: project
  endpoint:
    path: /developer/rest/#creating-a-new-project-api-key
    method: POST
    data_selector: project
    params: {}
- name: archive
  endpoint:
    path: /developer/rest/
    method: GET
    data_selector: records
- name: archive
  endpoint:
    path: /developer/rest/#start_archive
    method: POST
- name: Audio Connector WebSocket
  endpoint:
    path: /developer/rest/#starting_audio_connector
    method: POST
    data_selector: WebSocket connection
    params: {}
notes:
- API calls must be authenticated using a custom HTTP header — X-OPENTOK-AUTH along
  with a JSON web token.
- The previous authentication method using X-TB-PARTNER-AUTH is deprecated and should
  not be used.
- The Video API is now available on the Vonage API Dashboard and new accounts can
  only be created in the Vonage API Dashboard.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Hands-on developer-focused guide on how to build applications with the Vonage Video
  API and tools.
- Currently video chat embeds only work on the web and provide basic audio-video chat
  functionality.
- Browsers do not allow camera access on http pages. However, they do allow you to
  use http for local testing.
- The features and services provided during a Beta are not guaranteed to meet any
  platform SLOs or SLAs.
- Before using Video Express, be sure to activate the Video Express add-on for your
  account.
- Vonage Video Express 1.0 currently supports 25 simultaneous participants in a room.
- Updated the API server's trust store to include the GlobalSign Root CA.
- The account-level API key and secret is only available to registered administrators
  of your OpenTok account.
- End-to-end encryption is supported in web apps on Chromium-based (Chrome, Opera
  and Edge) and WebKit-based browsers.
- End-to-end encryption is not supported in web apps on Firefox.
- WebKit-based browser support is only available from version OpenTok.js 2.30.0 onwards.
- You can only archive sessions that use the OpenTok Media Router.
- If archiving is started and no data is streamed during the duration of the archive
  (no audio or video is published), the size of archive file will be 0 bytes.
- In an individual stream archive, if there is a short period where no streams are
  published during the recording, the startTimeOffset and stopTimeOffset values can
  be off by a bit.
- Audio Connector is enabled by default for all projects, and it is a usage-based
  product.
- You can send up to 50 audio streams from a single session at a time.
- If a connection to your WebSocket server is not established within 6 seconds, the
  Connect API call will fail.
errors:
- '400: Invalid request.'
- '403: Authentication error.'
- '404: Not found.'
- '500: OpenTok server error.'
- '400: Invalid session ID'
- '403: Invalid API key or JWT token'
- '404: Invalid archive ID'
- '409: Attempted to stop a non-recording archive'
- '500: OpenTok server error'
- '403: Invalid OpenTok API key or JWT token.'
- '400: Invalid request. This response may indicate that data in your request data
  is invalid JSON.'
- 204 Success (no content)
- 403 Authentication error
- 404 Not found
- 500 OpenTok server error
- '404: Not found. There is no project for the API key provided.'
- '200: Success'
- '400: Invalid request'
- '403: Authentication error'
- '404: No matching broadcast found'
- '404: Not found'
- maximum duration exceeded
- maximum idle time exceeded
- session ended
- user initiated
- failure
- clientDisconnected
- networkDisconnected
- forceDisconnected
- forceUnpublished
- mediaStopped
auth_info:
  mentioned_objects:
  - JWT
  - OpenTok REST API
  - project API key
  - project API secret
client:
  base_url: https://tokbox.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
