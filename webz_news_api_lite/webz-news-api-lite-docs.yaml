resources:
- name: news_articles
  endpoint:
    path: /newsApiLite
    method: GET
    data_selector: results
    params:
      ts: timestamp
- name: country_codes
  endpoint:
    path: /countries/codes
    method: GET
    data_selector: country_codes
- name: web_content
  endpoint:
    path: ''
    method: GET
    data_selector: results
    params: {}
- name: post_content_filters
  endpoint:
    path: /filters/post_content
    method: GET
- name: site_filters
  endpoint:
    path: /filters/site
    method: GET
- name: thread_filters
  endpoint:
    path: /filters/thread
    method: GET
- name: social_filters
  endpoint:
    path: /filters/social
    method: GET
- name: entities_entity_sentiment_filters
  endpoint:
    path: /filters/entities
    method: GET
- name: syndication
  endpoint:
    params:
      syndication.syndicated: true
- name: trust
  endpoint:
    params:
      trust.category: fake_news
      trust.top_news: '*'
      trust.bias: right
      trust.source: newsroom
- name: thread
  endpoint:
    path: /api/threads
    method: GET
    data_selector: results
- name: post
  endpoint:
    path: /api/posts
    method: GET
    data_selector: results
- name: trust
  endpoint:
    path: /trust
    method: GET
    data_selector: categories
- name: data_segmentation
  endpoint:
    path: /nbdSeg
    method: GET
    data_selector: results
    params:
      q: query
      token: your_private_access_token
      field: segment
      ts: timestamp
- name: new_sources_request
  endpoint:
    path: /request-sources/new
    method: POST
    data_selector: result
    params: {}
- name: track_results
  endpoint:
    path: /request-sources/track
    method: GET
    data_selector: status
    params: {}
- name: Request Sources
  endpoint:
    path: /addSourceRequest
    method: POST
    data_selector: list_id
    params:
      token: Your private access token that you received when you signed up.
      domain_type: news_and_blogs
      list_name: Name of the list
      domains: list of the required domains / sites
- name: Get Sources Request Status
  endpoint:
    path: /getSourceResults
    method: GET
    data_selector: list_id
    params:
      token: Your private access token that you received when you signed up.
      list_id: The id/token you received as an output from the first step
- name: fact_check
  endpoint:
    path: /fact-check
    method: GET
    data_selector: claims
    params: {}
- name: Curated Feed
  endpoint:
    path: /reference/fh-curated-feed
    method: GET
- name: NBD Search API
  endpoint:
    path: /reference/overview-and-examples
    method: GET
- name: reviews
  endpoint:
    path: /reviewFilter
    method: GET
    data_selector: results
    params:
      q: '[QUERY]'
      token: xxxxx-xxxx-xxxxx
      format: json
      size: '100'
- name: syndication_filters
  endpoint:
    path: /filters/syndication
    method: GET
    data_selector: filters
    params: {}
- name: trust_filters
  endpoint:
    path: /filters/trust
    method: GET
    data_selector: filters
    params: {}
- name: thread
  endpoint:
    path: /api/threads
    method: GET
    data_selector: results
- name: post
  endpoint:
    path: /api/posts
    method: GET
    data_selector: results
- name: reviews
  endpoint:
    path: /api/reviews
    method: GET
    data_selector: reviews
- name: trust_category
  endpoint:
    path: /trust/category
    method: GET
    data_selector: trust.category
- name: trust_top_news
  endpoint:
    path: /trust/top_news
    method: GET
    data_selector: trust.top_news
- name: trust_bias
  endpoint:
    path: /trust/bias
    method: GET
    data_selector: trust.bias
- name: trust_source
  endpoint:
    path: /trust/source
    method: GET
    data_selector: trust.source
- name: data_segmentation
  endpoint:
    path: /nbdSeg
    method: GET
    data_selector: results
    params:
      q: News articles about Bitcoin thread.title:bitcoin site_type:news
- name: add_source_request
  endpoint:
    path: /addSourceRequest
    method: POST
    params:
      domain_type: news_and_blogs
      list_name: agur_test123
      domains: cnn.com,ynet.co.il
- name: get_source_results
  endpoint:
    path: /getSourceResults
    method: GET
    params: {}
- name: fact_check
  endpoint:
    path: /fact-check
    method: GET
    data_selector: ''
    params:
      token: '[USER_TOKEN]'
      uuid: '[POST_UUID]'
- name: fact_check_post
  endpoint:
    path: /fact-check
    method: POST
    data_selector: ''
    params:
      token: '[USER_TOKEN]'
      post_text: '[POST_TITLE+POST_TEXT]'
      post_link: '[POST_LINK]'
      date: '[POST_PUBLISHED_DATE]'
- name: webz_reporter
  endpoint:
    path: /news-api
    method: GET
    data_selector: articles
    params:
      webz_reporter: 'true'
- name: Curated Feed
  endpoint:
    path: /reference/fh-curated-feed
    method: GET
- name: NBD Search API
  endpoint:
    path: /reference/overview-and-examples
    method: GET
- name: reviews
  endpoint:
    path: /reviewFilter
    method: GET
    data_selector: results
    params:
      q: '[QUERY]'
      token: '[MY TOKEN]'
      format: json
      size: '100'
- name: performance_score
  endpoint:
    path: /performance_score
    method: GET
    data_selector: records
- name: news_articles
  endpoint:
    path: /news/articles
    method: GET
    data_selector: articles
    params:
      filter: social.facebook.likes:>1000
- name: reviews
  endpoint:
    path: /reviews
    method: GET
- name: Add New Search Method
  endpoint:
    path: /add-new-search-method
    method: POST
    data_selector: data
- name: Get Product Data
  endpoint:
    path: /get-product-data
    method: GET
    data_selector: data
- name: Update Products
  endpoint:
    path: /update-products
    method: PUT
    data_selector: data
- name: Get Review Data
  endpoint:
    path: /get-review-data
    method: GET
    data_selector: data
- name: Get Search Methods
  endpoint:
    path: /get-search-methods
    method: GET
    data_selector: data
- name: Get Status
  endpoint:
    path: /get-status
    method: GET
    data_selector: data
- name: Delete Products
  endpoint:
    path: /delete-products
    method: DELETE
    data_selector: data
- name: products
  endpoint:
    path: /getProducts
    method: GET
    data_selector: products
    params:
      token: '[MY TOKEN]'
- name: reviews
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
    params:
      token: '[MY TOKEN]'
- name: searches
  endpoint:
    path: /getSearches
    method: GET
    data_selector: searches
    params:
      token: '[MY TOKEN]'
- name: webz_reporter
  endpoint:
    path: /news/api
    method: GET
    data_selector: articles
    params:
      webz_reporter: 'true'
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
    params:
      token: token
      method: PRODUCT_URL, SEARCH_URL, KEYWORD
      domain: domain
      value: value
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
    params:
      token: token
      q: q
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
    params:
      token: token
      uuid: uuid
      reviews_retrieval: reviews_retrieval
      historical_collection: historical_collection
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
    params:
      token: token
      q: q
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    params:
      token: '[MY_TOKEN]'
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    params:
      token: '[MY_TOKEN]'
- name: product_data
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: products
    params: {}
- name: product_reviews
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
    params: {}
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: product_documents
    params: {}
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: review_documents
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: add_new_search_method
  endpoint:
    path: /add_new_search_method
    method: POST
- name: get_product_data
  endpoint:
    path: /get_product_data
    method: GET
- name: update_products
  endpoint:
    path: /update_products
    method: POST
- name: get_review_data
  endpoint:
    path: /get_review_data
    method: GET
- name: get_search_methods
  endpoint:
    path: /get_search_methods
    method: GET
- name: get_status
  endpoint:
    path: /get_status
    method: GET
- name: delete_products
  endpoint:
    path: /delete_products
    method: DELETE
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    data_selector: product
    params: {}
- name: update_products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: product
    params: {}
- name: getProducts
  endpoint:
    path: /getProducts
    method: GET
    data_selector: products
    params:
      q: ''
      token: '[MY TOKEN]'
      size: '100'
- name: getReviews
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
    params:
      q: ''
      token: '[MY TOKEN]'
      size: '100'
- name: getSearches
  endpoint:
    path: /getSearches
    method: GET
    data_selector: searches
    params:
      token: '[MY TOKEN]'
- name: add_new_search_method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: get_products_data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: products
    params: {}
- name: update_products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: get_product_review_data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: credits
    params: {}
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: Product Documents
    params: {}
- name: Update Products (Review Activation)
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: Review Documents
    params: {}
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    data_selector: status
    params: {}
- name: get_product_reviews
  endpoint:
    path: /getReviews
    method: GET
    data_selector: status
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: credits
- name: product_review
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
- name: product_data
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: products
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: product_documents
    params: {}
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: review_documents
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: get_products_data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: products
    params: {}
- name: update_product
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: get_product_review_data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
    params: {}
- name: search_methods
  endpoint:
    path: /getSearches
    method: GET
    params: {}
- name: status
  endpoint:
    path: /getStatus
    method: GET
    params: {}
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    params:
      token: '[MY_TOKEN]'
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    params:
      token: '[MY_TOKEN]'
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    params:
      token: '[MY_TOKEN]'
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
- name: update_products
  endpoint:
    path: /updateProduct
    method: GET
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: productDocuments
    params: {}
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviewDocuments
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: add_new_search_method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: get_products_data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: product_documents
    params: {}
- name: update_products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: get_product_review_data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: review_documents
    params: {}
- name: Get Search Methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: Get Status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    params: {}
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status code and messages
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: Product Documents
    params: {}
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status code and messages
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: Review Documents
    params: {}
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    data_selector: status
    params: {}
- name: get_product_reviews
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: '-'
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: '-'
    params: {}
- name: add_new_search_method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: get_products_data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: product_documents
    params: {}
- name: update_product
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: get_product_review_data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: review_documents
    params: {}
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    params:
      token: '123456789'
      uuid: zyz123
- name: search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params:
      token: XXXXXXXX
- name: status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: credits
    params:
      token: XXXXXXXX
- name: add_new_search_method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: get_products_data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: products
    params: {}
- name: update_product
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: get_product_review_data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviews
    params: {}
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
    data_selector: status
    params: {}
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
    data_selector: productDocuments
    params: {}
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
    data_selector: status
    params: {}
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
    data_selector: reviewDocuments
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    data_selector: status
    params:
      token: '123456789'
      uuid: zyz123
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    data_selector: response
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: response
    params: {}
- name: firehose_output
  endpoint:
    path: /firehose/output
    method: GET
    data_selector: records
    params: {}
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    data_selector: status
    params:
      token: token
      uuid: uuid
- name: search
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      q: '[QUERY]'
      token: '[MY TOKEN]'
- name: Add New Search Method
  endpoint:
    path: /addNewSearch
    method: GET
- name: Get Products Data
  endpoint:
    path: /getProducts
    method: GET
- name: Update Products
  endpoint:
    path: /updateProduct
    method: GET
- name: Get Product Review Data
  endpoint:
    path: /getReviews
    method: GET
- name: Filters
  endpoint:
    path: /filters
    method: GET
    data_selector: records
    params: {}
- name: Thread Filters
  endpoint:
    path: /thread_filters
    method: GET
    data_selector: records
    params: {}
- name: get_search_methods
  endpoint:
    path: /getSearches
    method: GET
    data_selector: methods
    params: {}
- name: get_status
  endpoint:
    path: /getStatus
    method: GET
    data_selector: status
    params: {}
- name: docs
  endpoint:
    path: /dbdocFilter
    method: GET
    data_selector: docs
- name: stealerLogs
  endpoint:
    path: /stealerLogs
    method: GET
    data_selector: stealerLogs
- name: delete_products
  endpoint:
    path: /deleteProducts
    method: GET
    data_selector: status
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: Firehose Output
  endpoint:
    path: /firehose/output
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /LunarEventsFilter
    method: GET
    data_selector: events
- name: open_web_data
  endpoint:
    path: /data
    method: GET
    data_selector: results
    params:
      q: ''
      token: ''
- name: docs
  endpoint:
    path: /docs
    method: GET
    data_selector: docs
- name: stealerLogs
  endpoint:
    path: /stealerLogs
    method: GET
    data_selector: stealerLogs
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: events
  endpoint:
    path: /LunarEventsFilter
    method: GET
    data_selector: events
notes:
- The API includes up to 1,000 monthly API calls and up to 10 results per API call
- The API is for non-commercial use cases
- The API doesn't include the full text of the articles, only the matching snippets
- The API doesn't provide access to blogs, reviews and forums data
- The API returns results by relevancy and doesn't support sorting
- Authentication is confirmed via a unique Private Access Token passed in the API
  call URL.
- Extremely long queries that exceed HTTP GET limitations, should be split into multiple,
  shorter requests.
- Use of latest feature is NOT recommended as it may result in loss of important posts.
- Escaping reserved characters is necessary to prevent syntax errors.
- The API response includes up to 100 search-results and a Meta Info area with reference
  to API consumption and the request itself.
- Classification of fake news, trusted news and satirical news is conducted at the
  domain-level and NOT at the article-level.
- Fact-checking requires an input length of no less than 100 and no more than 10,000
  characters.
- Rate limiting of the API is considered on a per access token basis. You can make
  one request per second.
- To get the best value out of your data feeds do pay close attention to the paging
  and sorting sections following.
- Sorting by any sort parameter value other than crawl date (default) may result in
  missing important posts.
- Request method is HTTP GET.
- If you need to use any of the characters which function as operators in your query
  itself (and not as operators), then you should escape them with a leading backslash.
- The API response includes up to 100 search-results and a Meta Info area with reference
  to API consumption.
- The Reviews API response includes up to 100 Reviews and a Meta Info area with reference
  to API consumption and the request itself
- On the free plan, URLs for post and threads redirect through Omgili.com with a 5
  second redirect lag.
- The ts parameter returns results that were crawled after this timestamp.
- Request Sources functionality is enhancing web data coverage through the ability
  to request additions of News, Blogs and Discussions from Webz.io.
- The 'is_first' filter simplifies content discovery by ensuring searches capture
  only the main post, helping users stay focused on primary content and reducing the
  impact of potentially off-topic or varying comment threads.
- Requires a private access token to be included in the request.
- Allows users to access online news articles generated by WebzReporter
- Users can limit their search to include only AI-generated, fact-based articles
- The site filter in Webz.io’s open web API allows users to limit search results to
  specific websites.
- To consume all the data, keep calling the same URL string value that appears in
  the 'next' key found in the output for each request.
- The title filter supports Boolean queries for refining search results.
- When not specified the default is the past 3 days.
- The performance_score filter enables users to filter news and blog posts based on
  their virality or popularity.
- The 'next' URL ensures that you can access all matching posts in sequence.
- The Reviews API response includes up to 100 Reviews and a Meta Info area with reference
  to API consumption and the request itself.
- Rate limiting of the API is considered on a per access token basis. You can make
  one request per second. Exceeding the API rate limit will result in a 429 HTTP error.
- Understanding the difference between top news sites in a country and of a country
  is key to tailoring your search for the most relevant and reliable news data.
- The size parameter may be between 1 and 100, default is 100.
- The 'is_first' filter simplifies content discovery by ensuring searches capture
  only the main post.
- Access to WebzReporter content requires adding the &webz_reporter=true parameter
  to the GET request.
- The 'site_full' filter allows users to limit search results to specific domains
  and sub-domains.
- The 'title' filter supports Boolean queries.
- Webz.io’s open web API uses pagination and sorting to help users manage large volumes
  of data by controlling the order and number of results returned.
- API adheres to a 48 hour latency across all request types.
- Review data is retained in our system for 30 days since retrieval, and then is terminated.
- Data may take up to 48 hours to be collected after activation.
- Once initial historical data has been collected, we will continue to crawl activated
  products to deliver new reviews in up to every 48 hours.
- Data may only be visible in the endpoint in up to 48 hours since the method was
  added.
- Updated product information data will only be available after product activation.
- Review data may take up to 48 hours to be collected.
- When a product is deleted, the corresponding reviews associated with the product
  will be deleted as well.
- An empty text field is a valid value since a post could be made only from a title,
  or if the text field is made from emojis or images.
- Returns results crawled after this Unix timestamp (in milliseconds).
- The special characters are not supported in Cyber API search. Except for specific
  characters such as & , $ , @ which can be used as part of the keyword search.
- The DBD API response returns up to 10 entities along with a root object containing
  request metadata, including the next URL for pagination.
- Access to leaked credentials is restricted to assets under pre-approved domains
  for applicable asset types.
- Posts may be made only from a title or if the text field is made from emojis or
  images.
- The 'seen before' field can help with deduplicating the content.
- Data includes details about infected devices and breaches
- 'Data breaches: Passwords are always partially masked.'
- The DeviceInfo Object includes details about the infected device.
- The BreachInfo Object contains contextual information about the data breach.
- The PublicationSourceInfo Object includes metadata about the original breach file.
- The OriginalPostInfo Object provides metadata about the original dark web post.
- The AuthorExtendedInfo Object includes metadata about the author who published the
  original post.
errors:
- '429: Request quota exceeded -  you have reached the maximum number of allowed requests
  for your plan.'
- '429: Rate limit exceeded'
- '400: Wrong sort value'
- '400: Wrong order value'
- 'Malformed query parameter: Check your request parameters.'
- 'Syntax error: Failing to escape special characters correctly.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '204: No content available - no relevant facts were found'
- '400: Invalid request - a valid UUID is required'
- '400: Invalid request - text length must be between 100 and 3000 characters'
- '400: Invalid request - post_text, post_link, post_date only supported with POST
  requests'
- '401: Unauthorized - token missing or incorrect'
- '402: Not enough API calls available'
- '429 HTTP error: Exceeding the API rate limit will result in a 429 HTTP error.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429: Rate limiting of the API is considered on a per access token basis.'
- '429 HTTP error: Exceeding the API rate limit'
- Failing to escape these special characters correctly could lead to a syntax error
  which prevents your query from running.
- '429: Exceeding the API rate limit'
- '500: Failed to update product'
- '200: Topic already exists'
- '401: Unauthorized access'
- '400: Invalid request parameters'
- '500: Failed to delete product'
- '422: Unable to process the contained instructions'
- '400 Bad Request: Check query parameters and their values'
- '404 Not Found: Verify the requested resource exists'
- '401 Unauthorized: Recheck API token'
- API calls count when no results are returned.
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.webz.io
  auth:
    type: apikey
    location: query
    header_name: token
source_metadata: null
