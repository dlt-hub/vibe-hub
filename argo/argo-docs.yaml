resources:
- name: downtimes
  endpoint:
    path: /gocdbpi/downtimes
    method: GET
    data_selector: records
    params: {}
- name: poem
  endpoint:
    path: /poem
    method: GET
    data_selector: records
    params: {}
- name: weights
  endpoint:
    path: /weights
    method: GET
    data_selector: records
    params: {}
- name: EGI_Critical
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: EGI_Cloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Cloudmon/group_endpoints_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: BioMed_Critical
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: BioMed_Cloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Cloudmon/group_endpoints_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: downtimes_EGI_Cloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Cloudmon/downtimes_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: downtimes_EGI_Critical
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Critical/downtimes_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: downtimes_BioMed_Cloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Cloudmon/downtimes_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: downtimes_BioMed_Critical
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Critical/downtimes_2015_04_07.avro
    method: GET
    data_selector: records
    params: {}
- name: gocdb
  endpoint:
    path: /gocdb/api
    method: GET
    data_selector: records
    params: {}
- name: poem
  endpoint:
    path: /poem/api
    method: GET
    data_selector: records
    params: {}
- name: weights
  endpoint:
    path: /weights/api
    method: GET
    data_selector: records
    params: {}
- name: downtimes
  endpoint:
    path: /downtimes/api
    method: GET
    data_selector: records
    params: {}
- name: profiles
  endpoint:
    path: /api/0.2/json/profiles/
    method: GET
    data_selector: profiles
- name: metrics_in_profiles
  endpoint:
    path: /api/0.2/json/metrics_in_profiles/
    method: GET
    data_selector: metrics
- name: metric_results
  endpoint:
    path: /api/v2/metric_results
    method: GET
    data_selector: results
- name: EGI_Critical
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: EGI_Cloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Cloudmon/group_endpoints_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: BioMed_Critical
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: BioMed_Cloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Cloudmon/poem_sync_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: profiles
  endpoint:
    path: /api/0.2/json/profiles/
    method: GET
    data_selector: profiles
- name: metrics_in_profiles
  endpoint:
    path: /api/0.2/json/metrics_in_profiles/
    method: GET
    data_selector: metrics
    params:
      mandatory:
        vo_name: VO
      optional:
        profile_name: PROFILE
- name: EGI-trustanchors
  endpoint:
    path: /etc/yum.repos.d/EGI-trustanchors.repo
    method: GET
    data_selector: records
    params: {}
- name: epel-release
  endpoint:
    path: /etc/yum.repos.d/epel-release.repo
    method: GET
    data_selector: records
    params: {}
- name: cloudera-cdh5
  endpoint:
    path: /etc/yum.repos.d/cloudera-cdh5.repo
    method: GET
    data_selector: records
    params: {}
- name: mongodb-org-3.0
  endpoint:
    path: /etc/yum.repos.d/mongodb_3.repo
    method: GET
    data_selector: records
    params: {}
- name: Consumer Service
  endpoint:
    path: /guides/consumer/
    method: GET
- name: Connectors
  endpoint:
    path: /guides/egi-connectors/
    method: GET
- name: Compute Engine
  endpoint:
    path: /guides/argo-compute-engine/
    method: GET
- name: Web API
  endpoint:
    path: /guides/api/
    method: GET
- name: Web UI
  endpoint:
    path: /guides/webui/
    method: GET
- name: EGI-trustanchors
  endpoint:
    path: /etc/yum.repos.d/EGI-trustanchors.repo
    method: GET
    data_selector: ''
    params: {}
- name: EPEL
  endpoint:
    path: /etc/yum.repos.d/epel-release
    method: GET
    data_selector: ''
    params: {}
- name: Cloudera-cdh5
  endpoint:
    path: /etc/yum.repos.d/cloudera-cdh5.repo
    method: GET
    data_selector: ''
    params: {}
- name: mongodb-org-3.0
  endpoint:
    path: /etc/yum.repos.d/mongodb_3.repo
    method: GET
    data_selector: ''
    params: {}
- name: Consumer service
  endpoint:
    path: /guides/consumer/
    method: GET
    data_selector: services
    params: {}
- name: Compute Engine
  endpoint:
    path: /guides/compute/
    method: GET
    data_selector: components
    params: {}
- name: Web API service
  endpoint:
    path: /guides/api/
    method: GET
    data_selector: services
    params: {}
- name: Web UI service
  endpoint:
    path: /guides/webui/
    method: GET
    data_selector: services
    params: {}
- name: consumer_service
  endpoint:
    path: /guides/consumer/
    method: GET
- name: connectors
  endpoint:
    path: /guides/egi-connectors/
    method: GET
- name: Datastore
  endpoint:
    path: /etc/mongod.conf
    method: GET
    data_selector: records
    params: {}
- name: Web API service
  endpoint:
    path: /etc/argo-web-api.conf
    method: GET
    data_selector: records
    params: {}
- name: web_api_service
  endpoint:
    path: /argo-web-api
    method: GET
- name: Consumer service
  endpoint:
    path: /guides/consumer/
    method: GET
    data_selector: services
    params: {}
- name: Compute Engine
  endpoint:
    path: /guides/compute/
    method: GET
    data_selector: engine
    params: {}
- name: EGI Connectors
  endpoint:
    path: /guides/egi-connectors/
    method: GET
    data_selector: connectors
    params: {}
- name: downtimes
  endpoint:
    path: /downtimes
    method: GET
    data_selector: records
- name: weights
  endpoint:
    path: /weights
    method: GET
    data_selector: records
- name: poem
  endpoint:
    path: /poem
    method: GET
    data_selector: records
- name: downtimes
  endpoint:
    path: /downtimes
    method: GET
    data_selector: results
- name: weights
  endpoint:
    path: /weights
    method: GET
    data_selector: results
- name: poem_profiles
  endpoint:
    path: /poem_profiles
    method: GET
    data_selector: results
- name: JOB_EGICritical
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: Certification:Uncertified, Infrastructure:Test, Scope:EGI
- name: JOB_EGICloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Cloudmon/group_endpoints_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: Monitored:Y, Scope:EGI, Production:N
- name: JOB_BioMedCritical
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: Type:OPS_Site
- name: JOB_BioMedCloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Cloudmon/poem_sync_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      incremental: CLOUD-MON
- name: JOB_EGICritical
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      TopoSelectGroupOfGroups: Certification:Uncertified, Infrastructure:Test, Scope:EGI
- name: JOB_EGICloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/EGI_Cloudmon/group_endpoints_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      TopoSelectGroupOfEndpoints: Monitored:Y, Scope:EGI, Production:N
- name: JOB_BioMedCritical
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Critical/group_groups_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      TopoSelectGroupOfGroups: Type:OPS_Site
- name: JOB_BioMedCloudmon
  endpoint:
    path: /var/lib/argo-connectors/EGI/BioMed_Cloudmon/poem_sync_2015_04_07.avro
    method: GET
    data_selector: records
    params:
      Profiles: CLOUD-MON
notes:
- The ARGO Web API uses TLS connections.
- Valid X.509v3 certificate and private key are required.
- The connectors are configured to fetch information on a daily basis.
- Components require avro package to be installed/available.
- Each component generates output file in an avro binary format.
- Data is synced from Operations Portal and GOCDB.
- This is an initial implementation of the user authentication and authorization.
- In the next versions of the ARGO Messaging service we are going to provide support
  for both bear and OpenID Connect tokens for the API access.
- The ARGO Compute Engine can support multiple tenants.
- Service Availability is the fraction of time a service was in the UP Period during
  the known interval.
- based on Lavoisier Framework - http://software.in2p3.fr/lavoisier
- 'prerequisites : a server certificate and java'
- Data is synced from Operations Portal and GOCDB every hour as part of a cron job.
- For a production scale environment we propose three VMs and a Hadoop cluster (distributed
  version).
- One is strongly encouraged to use the Ansible based deployment roles available on
  github.
- For production scale environment, three VMs and a Hadoop cluster are proposed.
- The argo-egi-connectors package is configured to fetch information on a daily basis.
- For all nodes you will need an x509 key/certificate pair in order to proceed.
- For configuration details of the connectors visit the EGI Connectors page.
- The argo-egi-consumer can connect to multiple message brokers.
- The argo-egi-connectors package installs components needed for fetching complimentary
  to the Compute Engine data from sources of truth.
- 'The proposed setup in this case is the following: Node 1 (Consumer service, Connectors
  and Compute Engine/Hadoop client), Node 2 (Datastore and Web API services), Node
  3 (Web UI service).'
- Jobs are configured to select specific groups and endpoints based on defined criteria.
errors:
- '401 Unauthorized: Certificate is needed for access to GOCDB feed.'
auth_info:
  mentioned_objects: []
client:
  base_url: http://rpm.hellasgrid.gr/mash/centos6-arstats/$basearch
  headers:
    Accept: application/json
source_metadata: null
