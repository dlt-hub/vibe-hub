resources:
- name: add_actor_to_watchlist
  endpoint:
    path: /v1/watchlists/<watchlist_id>/included-users/add
    method: POST
    data_selector: userIds
- name: remove_actor_from_watchlist
  endpoint:
    path: /v1/watchlists/<watchlist_id>/included-users/delete
    method: POST
    data_selector: userIds
- name: user_risk_profiles
  endpoint:
    path: /v1/user-risk-profiles
    method: GET
    data_selector: risk_profiles
- name: file_events
  endpoint:
    path: /v2/file-events
    method: POST
    data_selector: events
- name: alerts_query
  endpoint:
    path: /v1/alerts/query-alerts
    method: POST
    data_selector: alerts
    params:
      tenantId: <SampleTenant>
      pgSize: '20'
      pgNum: '0'
      srtKey: CreatedAt
      srtDirection: DESC
- name: alert_details
  endpoint:
    path: /v1/alerts/query-details
    method: POST
    data_selector: alerts
- name: cases
  endpoint:
    path: /v1/cases
    method: POST
    data_selector: cases
- name: file_events
  endpoint:
    path: /v2/file-events
    method: POST
    data_selector: fileEvents
- name: watchlists_included_users_add
  endpoint:
    path: /v1/watchlists/<watchlist_id>/included-users/add
    method: POST
    data_selector: includedUsers
- name: watchlists_included_users_delete
  endpoint:
    path: /v1/watchlists/<watchlist_id>/included-users/delete
    method: POST
    data_selector: deletedUsers
- name: get_actor_by_name
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: get_family_from_any_member_name
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: get_actor_by_actorId
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: get_family_from_any_member_actorId
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: get_list_of_agents
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: get_single_agent_by_id
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: get_session_details
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: search_sessions
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: GET
- name: add_note_to_session
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: POST
- name: change_session_state
  endpoint:
    path: /get/v2/watchlists/{watchlist_id}/members
    method: PUT
- name: cases
  endpoint:
    path: /v2/cases
    method: GET
    data_selector: records
    params: {}
- name: audit_log
  endpoint:
    path: /v2/audit-log
    method: GET
    data_selector: records
    params: {}
- name: file_events
  endpoint:
    path: /v2/watchlists/{watchlist_id}/members
    method: GET
- name: customer_account_information
  endpoint:
    path: /v2/watchlists/{watchlist_id}/members
    method: GET
- name: departments
  endpoint:
    path: /v2/watchlists/{watchlist_id}/members
    method: GET
- name: directory_groups
  endpoint:
    path: /v2/watchlists/{watchlist_id}/members
    method: GET
- name: download_file_by_sha256
  endpoint:
    path: /v2/download/file/sha256
    method: GET
    data_selector: contents
    params:
      sha256: string
- name: matters
  endpoint:
    path: /v2/matters
    method: GET
    data_selector: matters
    params:
      page: 1
      pageSize: 500
- name: matter_custodians
  endpoint:
    path: /v2/matters/{matterId}/custodians
    method: GET
    data_selector: custodians
    params:
      page: 1
      pageSize: 500
- name: create_matter
  endpoint:
    path: /v2/matters
    method: POST
    data_selector: matter
    params: {}
- name: deactivate_matter
  endpoint:
    path: /v2/matters/{matterId}/deactivate
    method: PATCH
    data_selector: matter
    params: {}
- name: reactivate_matter
  endpoint:
    path: /v2/matters/{matterId}/reactivate
    method: PATCH
    data_selector: matter
    params: {}
- name: get_policies
  endpoint:
    path: /v2/policies
    method: GET
    data_selector: policies
    params:
      page: 1
      pageSize: 100
- name: create_policy
  endpoint:
    path: /v2/policies
    method: POST
    data_selector: policy
    params: {}
- name: trusted_activity
  endpoint:
    path: /v2/trusted_activities
    method: GET
    data_selector: results
    params:
      type: string
      is_high_value_source: boolean
      page: string
      page_size: string
      sort_key: string
      sort_direction: string
- name: users
  endpoint:
    path: /v2/users
    method: GET
    data_selector: results
    params:
      active: boolean
      blocked: boolean
      username: string
      page: integer
      pageSize: integer
- name: departments
  endpoint:
    path: /v2/watchlists/{watchlist_id}/members
    method: GET
    data_selector: members
- name: watchlist_members
  endpoint:
    path: /v2/watchlists/{watchlist_id}/members
    method: GET
    data_selector: records
    params:
      page: integer <int64>
      page_size: integer <int64>
- name: watchlist
  endpoint:
    path: /v2/watchlists/{watchlist_id}
    method: GET
    data_selector: records
    params: {}
- name: actors
  endpoint:
    path: /actors
    method: GET
- name: agents
  endpoint:
    path: /agents
    method: GET
- name: alert_rules
  endpoint:
    path: /alert_rules
    method: GET
- name: audit_log
  endpoint:
    path: /audit_log
    method: GET
- name: cases
  endpoint:
    path: /cases
    method: GET
- name: departments
  endpoint:
    path: /departments
    method: GET
- name: directory_groups
  endpoint:
    path: /directory_groups
    method: GET
- name: file_events
  endpoint:
    path: /file_events
    method: GET
- name: sessions
  endpoint:
    path: /sessions
    method: GET
- name: trusted_activities
  endpoint:
    path: /trusted_activities
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: watchlists
  endpoint:
    path: /watchlists
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
- name: actors
  endpoint:
    path: /v*/actors
    method: GET
- name: agents
  endpoint:
    path: /v*/agents
    method: GET
- name: alert_rules
  endpoint:
    path: /v*/alert-rules
    method: GET
- name: audit_log
  endpoint:
    path: /v*/audit
    method: GET
- name: cases
  endpoint:
    path: /v*/cases
    method: GET
- name: customer
  endpoint:
    path: /v*/customer
    method: GET
- name: departments
  endpoint:
    path: /v*/departments
    method: GET
- name: devices
  endpoint:
    path: /v*/devices
    method: GET
- name: directory_groups
  endpoint:
    path: /v*/directory-groups
    method: GET
- name: file_events
  endpoint:
    path: /v*/file-events
    method: GET
- name: sessions
  endpoint:
    path: /v*/sessions
    method: GET
- name: trusted_activities
  endpoint:
    path: /v*/trusted-activities
    method: GET
- name: watchlists
  endpoint:
    path: /v*/watchlists
    method: GET
- name: audit_events
  endpoint:
    path: /api/v1/audit/events
    method: GET
    data_selector: events
- name: cases
  endpoint:
    path: /api/v1/cases
    method: GET
    data_selector: cases
- name: departments
  endpoint:
    path: /api/v1/departments
    method: GET
    data_selector: departments
- name: devices
  endpoint:
    path: /api/v1/devices
    method: GET
    data_selector: devices
- name: directory_groups
  endpoint:
    path: /api/v1/directory/groups
    method: GET
    data_selector: directory_groups
- name: file_events
  endpoint:
    path: /api/v1/file/events
    method: GET
    data_selector: file_events
- name: roles
  endpoint:
    path: /api/v1/roles
    method: GET
    data_selector: roles
- name: sessions
  endpoint:
    path: /models/Sessions
    method: GET
    data_selector: items
    params: {}
- name: trusted_activities
  endpoint:
    path: /models/TrustedActivities
    method: GET
    data_selector: trusted_activities
    params: {}
- name: users
  endpoint:
    path: /models/Users
    method: GET
    data_selector: users
    params: {}
- name: roles
  endpoint:
    path: /models/Roles
    method: GET
    data_selector: roles
    params: {}
notes:
- Bearer authentication tokens must be used in the headers of most API requests to
  validate that the calling client has the proper permissions to take its associated
  action.
- Authentication tokens expire after 15 minutes.
- To receive results in CSV format instead of JSON, use the /v2/file-events/export
  resource instead of /v2/file-events.
- To receive alerts from the watchlist, enable the watchlist's alert rules.
- Uses OAuth2 with client credentials — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Settings can also be loaded from shell environment variables or .env files.
- The API requires an OAuth connection for authentication.
- By default, the incydr.Client uses the Rich library's logging handler and defaults
  to log level warning.
- Incydr CLI logging options can be provided at any level of a command. Any options
  provided will override the corresponding environment variable settings.
- Authentication is now done exclusively through environment variables and must be
  for an API Client.
- Stored checkpoints are associated with the API Client ID used for authentication
  during the command execution.
- TCP protocol is recommended because Incydr's logging messages will often be larger
  than the max size for UDP protocol.
- Using UDP protocol may result in data being truncated.
errors:
- 'REQUEST_LIMIT_EXCEEDED: To ensure optimal performance throughout your Code42 environment,
  Code42 limits API requests to 120 per minute.'
- 'RESULT_LIMIT_EXCEEDED: file-events results are limited to 10,000 events per request.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - API clients
  - Authorization
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.us.code42.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
