resources:
- name: servers
  endpoint:
    path: /api/fes/servers
    method: GET
- name: applications
  endpoint:
    path: /api/fes/applications
    method: GET
- name: events
  endpoint:
    path: /api/fes/events
    method: GET
- name: microservice
  endpoint:
    path: /api/fes/microservice
    method: GET
- name: policies
  endpoint:
    path: /api/fes/policies
    method: GET
- name: document_tracking
  endpoint:
    path: /api/fes/document_tracking
    method: GET
- name: shutdown-server
  endpoint:
    path: /esb/server/bin/shutdown-server
    method: POST
    data_selector: none
    params:
      user: <UserName>
      passwd: <Password>
      fpsname: fps
      url: tsp_tcp://localhost:1947
- name: clearDBServer
  endpoint:
    path: /esb/server/bin/clearDBServer.bat
    method: POST
    data_selector: none
    params:
      mode: fps
- name: server_service
  endpoint:
    path: /esb/server/bin/server-service.sh
    method: POST
    data_selector: service
    params: {}
- name: Event Process Repository
  endpoint:
    path: /fiorano/home/esb/server/repository/applications
    method: GET
- name: Component Repository
  endpoint:
    path: /fiorano/home/esb/server/repository/components
    method: GET
- name: Peer Repository
  endpoint:
    path: /fiorano/home/runtimedata/EnterpriseServers/{FES_profile_name}/FES/Peers/
    method: GET
- name: Security Store
  endpoint:
    path: /fiorano/home/runtimedata/EnterpriseServers/{FES_profile_name}/FES/run/SDB
    method: GET
- name: Runtime Store
  endpoint:
    path: /fiorano/home/runtimedata/EnterpriseServers/{FES_profile_name}/FES/run/admin.dat
    method: GET
- name: Persistent Cache
  endpoint:
    path: /fiorano/home/runtimedata/EnterpriseServers/{FES_Profile_Name}/FES/run/db/PersistantDB/PQ.Tifosi_Enterprise_Server_SBW_Events
    method: GET
- name: Document Tracking H2 Database
  endpoint:
    path: /fiorano/home/runtimedata/EnterpriseServers/{FES_Profile_Name}/FES/doctracking_db
    method: GET
- name: Alert Repository
  endpoint:
    path: /fiorano/home/runtimedata/repository/Notifications
    method: GET
- name: Policy Repository
  endpoint:
    path: /fiorano/home/runtimedata/repository/Policies
    method: GET
- name: Clearing ESB Server Database
  endpoint:
    path: /esb/12.2/clearing-esb-server-database
    method: GET
- name: Peer Server Database
  endpoint:
    path: /esb/12.2/clearing-peer-server-database
    method: GET
- name: FPS Server
  endpoint:
    path: /esb/server/bin/server.bat
    method: RUN
    data_selector: start_server
    params:
      mode: fps
- name: FPS Service Installation
  endpoint:
    path: /esb/server/bin/install-server.service.bat
    method: RUN
    data_selector: install_service
    params:
      mode: fps
- name: FPS Service Uninstallation
  endpoint:
    path: /esb/server/bin/uninstall-server.service.bat
    method: RUN
    data_selector: uninstall_service
    params:
      mode: fps
- name: shutdown-server
  endpoint:
    path: /shutdown-server
    method: POST
    data_selector: response
    params:
      user: admin
      passwd: passwd
      fpsname: fps
      ha: true
- name: Server Ports
  endpoint:
    path: /FPS/ServerPorts
    method: GET
    data_selector: ports
    params: {}
- name: RMI Server Ports
  endpoint:
    path: /FPS/RMIServerPorts
    method: GET
    data_selector: rmi_ports
    params: {}
- name: Memory Configurations
  endpoint:
    path: /FPS/MemoryConfigurations
    method: GET
    data_selector: memory_config
    params: {}
- name: Java Configurations
  endpoint:
    path: /FPS/JavaConfigurations
    method: GET
    data_selector: java_config
    params: {}
- name: clearing_peer_server_database
  endpoint:
    path: /esb/12.2/clearing-peer-server-database
    method: GET
- name: Export Service to Local Disk
  endpoint:
    path: /ExportToLocalDisk
    method: POST
- name: Import From Local Disk
  endpoint:
    path: /ImportFromLocalDisk
    method: POST
- name: Export Service to Server
  endpoint:
    path: /ExportToServer
    method: POST
- name: Import from Server
  endpoint:
    path: /ImportFromServer
    method: POST
- name: Active Server
  endpoint:
    path: /api/active_server
    method: GET
    data_selector: server_status
    params: {}
- name: Event Process
  endpoint:
    path: /api/event_process
    method: GET
    data_selector: event_process_list
    params: {}
- name: document
  endpoint:
    path: /services/data/v12.2/sobjects/Document
    method: GET
    data_selector: records
- name: Export Service to Local Disk
  endpoint:
    path: /export/local
    method: POST
- name: Import From Local Disk
  endpoint:
    path: /import/local
    method: POST
- name: Export Service to Server
  endpoint:
    path: /export/server
    method: POST
- name: Import from Server
  endpoint:
    path: /import/server
    method: POST
- name: documents
  endpoint:
    path: /api/v1/documents
    method: POST
    data_selector: documents
    params: {}
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: data
    params:
      incremental: last_modified
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: records
- name: document
  endpoint:
    path: /services/data/v12.2/sobjects/Document
    method: GET
    data_selector: records
- name: Creating Durable Routes
  endpoint:
    path: /esb/12.2/creating-durable-routes
    method: GET
- name: durable_subscriber
  endpoint:
    path: /durable/subscriber
    method: GET
    data_selector: subscribers
    params: {}
- name: Loggers
  endpoint:
    path: /esb/12.2/log-alerts
    method: GET
- name: Profiles
  endpoint:
    path: /modifying-profiles-remotely
    method: GET
    data_selector: profiles
    params: {}
- name: SamplePublication
  endpoint:
    path: /sample/publication
    method: GET
    data_selector: records
    params: {}
- name: Mapper Project
  endpoint:
    path: /mapper/project
    method: GET
    data_selector: projects
    params: {}
- name: User Defined Functions
  endpoint:
    path: /user/defined/functions
    method: GET
    data_selector: functions
    params: {}
- name: Local Funclet Repository
  endpoint:
    path: /local/funclet/repository
    method: GET
    data_selector: funclets
    params: {}
- name: Global Funclet Repository
  endpoint:
    path: /global/funclet/repository
    method: GET
    data_selector: funclets
    params: {}
- name: Function Palette
  endpoint:
    path: /function/palette
    method: GET
    data_selector: functions
    params: {}
- name: Funclet Easel
  endpoint:
    path: /funclet/easel
    method: GET
    data_selector: mappings
    params: {}
- name: sum
  endpoint:
    path: /functions/sum
    method: GET
    data_selector: output
- name: difference
  endpoint:
    path: /functions/difference
    method: GET
    data_selector: output
- name: distinct
  endpoint:
    path: /functions/distinct
    method: GET
    data_selector: output
- name: has_same_node
  endpoint:
    path: /functions/has_same_node
    method: GET
    data_selector: output
- name: intersection
  endpoint:
    path: /functions/intersection
    method: GET
    data_selector: output
- name: leading
  endpoint:
    path: /functions/leading
    method: GET
    data_selector: output
- name: trailing
  endpoint:
    path: /functions/trailing
    method: GET
    data_selector: output
- name: highest
  endpoint:
    path: /functions/highest
    method: GET
    data_selector: output
- name: lowest
  endpoint:
    path: /functions/lowest
    method: GET
    data_selector: output
- name: minimum
  endpoint:
    path: /functions/minimum
    method: GET
    data_selector: output
- name: maximum
  endpoint:
    path: /functions/maximum
    method: GET
    data_selector: output
- name: ChangeBase
  endpoint:
    path: /functions/changeBase
    method: GET
    data_selector: records
- name: Hex
  endpoint:
    path: /functions/hex
    method: GET
    data_selector: records
- name: Octal
  endpoint:
    path: /functions/octal
    method: GET
    data_selector: records
- name: Binary
  endpoint:
    path: /functions/binary
    method: GET
    data_selector: records
- name: Decimal
  endpoint:
    path: /functions/decimal
    method: GET
    data_selector: records
- name: Degrees
  endpoint:
    path: /functions/degrees
    method: GET
    data_selector: records
- name: Radians
  endpoint:
    path: /functions/radians
    method: GET
    data_selector: records
- name: CDATA
  endpoint:
    path: /functions/cdata
    method: GET
    data_selector: records
- name: Deep-Copy
  endpoint:
    path: /functions/deep-copy
    method: GET
    data_selector: records
- name: Copy-with-Attributes
  endpoint:
    path: /functions/copy-with-attributes
    method: GET
    data_selector: records
- name: Position
  endpoint:
    path: /functions/position
    method: GET
    data_selector: records
- name: Node-Name
  endpoint:
    path: /functions/node-name
    method: GET
    data_selector: records
- name: Count
  endpoint:
    path: /functions/count
    method: GET
    data_selector: records
- name: Format-Number
  endpoint:
    path: /functions/format-number
    method: GET
    data_selector: records
- name: Param
  endpoint:
    path: /functions/param
    method: GET
    data_selector: records
- name: Variable
  endpoint:
    path: /functions/variable
    method: GET
    data_selector: records
- name: Base64 Encode
  endpoint:
    path: /functions/base64-encode
    method: GET
    data_selector: records
- name: Base64 Decode
  endpoint:
    path: /functions/base64-decode
    method: GET
    data_selector: records
- name: Base64 Encode-from-String
  endpoint:
    path: /functions/base64-encode-from-string
    method: GET
    data_selector: records
- name: Base64 Decode-to-String
  endpoint:
    path: /functions/base64-decode-to-string
    method: GET
    data_selector: records
- name: UUID
  endpoint:
    path: /functions/uuid
    method: GET
    data_selector: records
- name: getIncrementalID
  endpoint:
    path: /functions/getIncrementalID
    method: GET
    data_selector: records
- name: Equal
  endpoint:
    path: /equal
    method: GET
    data_selector: boolean
    params: {}
- name: Not Equal
  endpoint:
    path: /not_equal
    method: GET
    data_selector: boolean
    params: {}
- name: Greater than
  endpoint:
    path: /greater_than
    method: GET
    data_selector: boolean
    params: {}
- name: Less Than
  endpoint:
    path: /less_than
    method: GET
    data_selector: boolean
    params: {}
- name: Greater than or Equal
  endpoint:
    path: /greater_than_or_equal
    method: GET
    data_selector: boolean
    params: {}
- name: Less Than or Equal
  endpoint:
    path: /less_than_or_equal
    method: GET
    data_selector: boolean
    params: {}
- name: OR
  endpoint:
    path: /or
    method: GET
    data_selector: boolean
    params: {}
- name: AND
  endpoint:
    path: /and
    method: GET
    data_selector: boolean
    params: {}
- name: NOT
  endpoint:
    path: /not
    method: GET
    data_selector: boolean
    params: {}
- name: BOOL
  endpoint:
    path: /bool
    method: GET
    data_selector: boolean
    params: {}
- name: DBLookup
  endpoint:
    path: /DBLookup
    method: GET
    data_selector: entries
- name: DBNoCache
  endpoint:
    path: /DBNoCache
    method: GET
    data_selector: entries
- name: Date
  endpoint:
    path: /date
    method: GET
    data_selector: date
    params: {}
- name: DateTime
  endpoint:
    path: /datetime
    method: GET
    data_selector: datetime
    params: {}
- name: DayAbbreviation
  endpoint:
    path: /dayAbbreviation
    method: GET
    data_selector: dayAbbreviation
    params: {}
- name: DayInMonth
  endpoint:
    path: /dayInMonth
    method: GET
    data_selector: dayInMonth
    params: {}
- name: DayInWeek
  endpoint:
    path: /dayInWeek
    method: GET
    data_selector: dayInWeek
    params: {}
- name: DayInYear
  endpoint:
    path: /dayInYear
    method: GET
    data_selector: dayInYear
    params: {}
- name: DayName
  endpoint:
    path: /dayName
    method: GET
    data_selector: dayName
    params: {}
- name: DayOfWeekInMonth
  endpoint:
    path: /dayOfWeekInMonth
    method: GET
    data_selector: dayOfWeekInMonth
    params: {}
- name: HourInDay
  endpoint:
    path: /hourInDay
    method: GET
    data_selector: hourInDay
    params: {}
- name: LeapYear
  endpoint:
    path: /leapYear
    method: GET
    data_selector: leapYear
    params: {}
- name: MinuteInHour
  endpoint:
    path: /minuteInHour
    method: GET
    data_selector: minuteInHour
    params: {}
- name: MonthAbbreviation
  endpoint:
    path: /monthAbbreviation
    method: GET
    data_selector: monthAbbreviation
    params: {}
- name: MonthInYear
  endpoint:
    path: /monthInYear
    method: GET
    data_selector: monthInYear
    params: {}
- name: MonthName
  endpoint:
    path: /monthName
    method: GET
    data_selector: monthName
    params: {}
- name: SecondInMinute
  endpoint:
    path: /secondInMinute
    method: GET
    data_selector: secondInMinute
    params: {}
- name: Time
  endpoint:
    path: /time
    method: GET
    data_selector: time
    params: {}
- name: WeekInYear
  endpoint:
    path: /weekInYear
    method: GET
    data_selector: weekInYear
    params: {}
- name: Year
  endpoint:
    path: /year
    method: GET
    data_selector: year
    params: {}
- name: ConvertDate
  endpoint:
    path: /convertDate
    method: GET
    data_selector: convertDate
    params: {}
- name: ConvertDateV2
  endpoint:
    path: /convertDateV2
    method: GET
    data_selector: convertDateV2
    params: {}
- name: ConvertDateV2Advanced
  endpoint:
    path: /convertDateV2Advanced
    method: GET
    data_selector: convertDateV2Advanced
    params: {}
- name: addDate
  endpoint:
    path: /addDate
    method: GET
    data_selector: addDate
    params: {}
- name: subtractDate
  endpoint:
    path: /subtractDate
    method: GET
    data_selector: subtractDate
    params: {}
- name: dateDiff
  endpoint:
    path: /dateDiff
    method: GET
    data_selector: dateDiff
    params: {}
- name: message
  endpoint:
    path: /api/message
    method: GET
    data_selector: message
    params: {}
- name: text_content
  endpoint:
    path: /api/text_content
    method: GET
    data_selector: text_content
    params: {}
- name: byte_content
  endpoint:
    path: /api/byte_content
    method: GET
    data_selector: byte_content
    params: {}
- name: header
  endpoint:
    path: /api/header
    method: GET
    data_selector: header
    params: {}
- name: attachment
  endpoint:
    path: /api/attachment
    method: GET
    data_selector: attachment
    params: {}
- name: application_context
  endpoint:
    path: /api/application_context
    method: GET
    data_selector: application_context
    params: {}
- name: get_text
  endpoint:
    path: /api/get_text
    method: GET
    data_selector: get_text
    params: {}
- name: get_environment
  endpoint:
    path: /api/get_environment
    method: GET
    data_selector: get_environment
    params: {}
- name: get_string_property
  endpoint:
    path: /api/get_string_property
    method: GET
    data_selector: get_string_property
    params: {}
- name: get_byte_property
  endpoint:
    path: /api/get_byte_property
    method: GET
    data_selector: get_byte_property
    params: {}
- name: get_short_property
  endpoint:
    path: /api/get_short_property
    method: GET
    data_selector: get_short_property
    params: {}
- name: get_int_property
  endpoint:
    path: /api/get_int_property
    method: GET
    data_selector: get_int_property
    params: {}
- name: get_long_property
  endpoint:
    path: /api/get_long_property
    method: GET
    data_selector: get_long_property
    params: {}
- name: get_float_property
  endpoint:
    path: /api/get_float_property
    method: GET
    data_selector: get_float_property
    params: {}
- name: get_double_property
  endpoint:
    path: /api/get_double_property
    method: GET
    data_selector: get_double_property
    params: {}
- name: get_boolean_property
  endpoint:
    path: /api/get_boolean_property
    method: GET
    data_selector: get_boolean_property
    params: {}
- name: get_object_property
  endpoint:
    path: /api/get_object_property
    method: GET
    data_selector: get_object_property
    params: {}
- name: get_jms_correlation_id
  endpoint:
    path: /api/get_jms_correlation_id
    method: GET
    data_selector: get_jms_correlation_id
    params: {}
- name: jms_property_type
  endpoint:
    path: /api/jms_property_type
    method: GET
    data_selector: jms_property_type
    params: {}
- name: set_text
  endpoint:
    path: /api/set_text
    method: POST
    data_selector: set_text
    params: {}
- name: set_message_priority
  endpoint:
    path: /api/set_message_priority
    method: POST
    data_selector: set_message_priority
    params: {}
- name: reset_message_priority
  endpoint:
    path: /api/reset_message_priority
    method: POST
    data_selector: reset_message_priority
    params: {}
- name: set_string_property
  endpoint:
    path: /api/set_string_property
    method: POST
    data_selector: set_string_property
    params: {}
- name: set_byte_property
  endpoint:
    path: /api/set_byte_property
    method: POST
    data_selector: set_byte_property
    params: {}
- name: set_short_property
  endpoint:
    path: /api/set_short_property
    method: POST
    data_selector: set_short_property
    params: {}
- name: set_int_property
  endpoint:
    path: /api/set_int_property
    method: POST
    data_selector: set_int_property
    params: {}
- name: set_long_property
  endpoint:
    path: /api/set_long_property
    method: POST
    data_selector: set_long_property
    params: {}
- name: set_float_property
  endpoint:
    path: /api/set_float_property
    method: POST
    data_selector: set_float_property
    params: {}
- name: set_double_property
  endpoint:
    path: /api/set_double_property
    method: POST
    data_selector: set_double_property
    params: {}
- name: set_boolean_property
  endpoint:
    path: /api/set_boolean_property
    method: POST
    data_selector: set_boolean_property
    params: {}
- name: set_object_property
  endpoint:
    path: /api/set_object_property
    method: POST
    data_selector: set_object_property
    params: {}
- name: remove_property
  endpoint:
    path: /api/remove_property
    method: POST
    data_selector: remove_property
    params: {}
- name: set_jms_correlation_id
  endpoint:
    path: /api/set_jms_correlation_id
    method: POST
    data_selector: set_jms_correlation_id
    params: {}
- name: Resource Service
  endpoint:
    path: /resourceService/faces/Login.jsp
    method: GET
- name: BPM Editor
  endpoint:
    path: /yawl/ia
    method: GET
- name: Employee Schema
  endpoint:
    path: /services/data/vXX.X/sobjects/Employee
    method: POST
    data_selector: records
    params: {}
- name: Application Documents
  endpoint:
    path: /api/application/documents
    method: GET
    data_selector: tracked_documents
- name: Search Tracked Documents
  endpoint:
    path: /api/application/documents/search
    method: POST
    data_selector: search_results
- name: server_status
  endpoint:
    path: /server/status
    method: GET
    data_selector: serverDetails
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: eventProcesses
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: latestEvents
- name: event_process
  endpoint:
    path: /event/process
    method: GET
- name: business_service_event
  endpoint:
    path: /business/service/event
    method: GET
- name: Business Components
  endpoint:
    path: /services/data/vXX.X/business_components
    method: GET
    data_selector: components
    params: {}
- name: Process Events
  endpoint:
    path: /services/data/vXX.X/process_events
    method: GET
    data_selector: events
    params: {}
- name: Business Component Events
  endpoint:
    path: /services/data/vXX.X/business_component_events
    method: GET
    data_selector: events
    params: {}
- name: Tracked Documents
  endpoint:
    path: /services/data/vXX.X/tracked_documents
    method: GET
    data_selector: documents
    params: {}
- name: license_configuration
  endpoint:
    path: /licenses/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: connection_properties
  endpoint:
    params:
      ESB_HOME: Relative path to your ESB installation directory
      FIORANO_HOME: Relative path to your Fiorano installation directory
      ANT_LIB: Relative path to your libraries directory
      HTTP_PROXY_SET: Can be set to either 'true' or 'false'
      CONNECTION_USER_NAME: ESB User name
      CONNECTION_PASSWORD: ESB Password
      RMI_CONNECTION_STRING: RMI Connection URL used for connecting to FES server
      RTL_CONNECTION_STRING: RTL Connection URL used for connecting to FES server
      CONNECTION_TIMEOUT: Connection timeout for Cli calls
      VERBOSE: Can be set to either 'true' or 'false'
- name: replace
  endpoint:
    path: /replace
    method: POST
    data_selector: properties
- name: replaceInZip
  endpoint:
    path: /replaceInZip
    method: POST
    data_selector: properties
- name: checkoutAppFromSVN
  endpoint:
    path: /checkoutAppFromSVN
    method: POST
    data_selector: properties
- name: importApplicationFromSVN
  endpoint:
    path: /importApplicationFromSVN
    method: POST
    data_selector: properties
- name: Database
  endpoint:
    path: /database/settings
    method: GET
    data_selector: settings
    params: {}
- name: JMS
  endpoint:
    path: /jms/settings
    method: GET
    data_selector: settings
    params: {}
- name: Host Trading Party
  endpoint:
    path: /addHostTradingParty
    method: POST
    data_selector: tradingPartyDetails
- name: Receive Agreement
  endpoint:
    path: /addReceiveAgreement
    method: POST
    data_selector: agreementDetails
- name: Message Type
  endpoint:
    path: /addMessageType
    method: POST
    data_selector: messageTypeDetails
- name: Message Type Binding
  endpoint:
    path: /addMessageTypeBinding
    method: POST
    data_selector: bindingDetails
- name: B2BHostReceiver
  endpoint:
    path: /B2BHostReceiver
    method: POST
    data_selector: output
- name: PartnerAS2Sender
  endpoint:
    path: /PartnerAS2Sender
    method: POST
    data_selector: output
- name: B2B_AS2_IN_COMING
  endpoint:
    path: /Applications/B2B_AS2_IN_COMING
    method: GET
- name: B2BHOSTRECEIVE
  endpoint:
    path: /Applications/B2BHOSTRECEIVE
    method: GET
- name: PartnerAS2Sender
  endpoint:
    path: /Applications/PartnerAS2Sender
    method: GET
- name: Deactivating Party and Re-injecting Transaction
- name: Message Configurations
  endpoint:
    path: /esb/12.2/message-configurations
    method: GET
- name: BackupServerIp
  endpoint:
    path: /backup/server/ip
    method: GET
- name: BackUpServerPort
  endpoint:
    path: /backup/server/port
    method: GET
- name: BackupHAIPAddress
  endpoint:
    path: /backup/ha/ipaddress
    method: GET
- name: BackupHAPort
  endpoint:
    path: /backup/ha/port
    method: GET
- name: Port
  endpoint:
    path: /ha/manager/port
    method: GET
- name: BackupRMIServerPort
  endpoint:
    path: /backup/rmi/port
    method: GET
- name: RMIServerPort
  endpoint:
    path: /rmi/port
    method: GET
- name: LockFile
  endpoint:
    path: /ha/lockfile
    method: GET
- name: GatewayServerIPAddress
  endpoint:
    path: /gateway/server/ipaddress
    method: GET
- name: GatewayServerPort
  endpoint:
    path: /gateway/server/port
    method: GET
- name: PingInterval
  endpoint:
    path: /ping/interval
    method: GET
- name: ActiveLockReAcquistionInterval
  endpoint:
    path: /active/lock/reacquisition/interval
    method: GET
- name: PassiveLockAcquistionInterval
  endpoint:
    path: /passive/lock/reacquisition/interval
    method: GET
- name: AppRepositoryPath
  endpoint:
    path: /app/repository/path
    method: GET
- name: ComponentRepositoryPath
  endpoint:
    path: /component/repository/path
    method: GET
- name: FPSRepositoryPath
  endpoint:
    path: /fps/repository/path
    method: GET
- name: ApplicationSyncType
  endpoint:
    path: /application/sync/type
    method: GET
- name: ComponentSyncType
  endpoint:
    path: /component/sync/type
    method: GET
- name: Fiorano Enterprise Server HA Primary
  endpoint:
    path: $Fiorano_home/esb/server/profiles/haprofile_shared/primary/FES
    method: GET
- name: Fiorano Enterprise Server HA Secondary
  endpoint:
    path: $Fiorano_home/esb/server/profiles/haprofile_shared/secondary/FES
    method: GET
- name: Fiorano Peer Server HA Primary
  endpoint:
    path: $Fiorano_home/esb/server/profiles/haprofile_shared/primary/FPS
    method: GET
- name: Fiorano Peer Server HA Secondary
  endpoint:
    path: $Fiorano_home/esb/server/profiles/haprofile_shared/secondary/FPS
    method: GET
- name: backlog_and_low_memory_alerts
  endpoint:
    path: /esb/12.2/backlog-and-low-memory-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: snmp_alerts
  endpoint:
    path: /esb/12.2/snmp-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: events_tracking
  endpoint:
    path: /esb/12.2/events
    method: GET
    data_selector: events
    params: {}
- name: SMTP and JMS Transports
  endpoint:
    path: /esb/12.2/configuring-smtp-and-jms-transports
    method: GET
- name: SMTP Transport
  endpoint:
    path: /smtp/transport
    method: POST
    data_selector: settings
    params: {}
- name: JMS Transport
  endpoint:
    path: /jms/transport
    method: POST
    data_selector: settings
    params: {}
- name: SMTP Transport
  endpoint:
    path: /smtp/transport
    method: POST
    data_selector: response
    params:
      smtp_server: SMTP Server
      smtp_port: SMTP Port
      secure_connection_type: Secure Connection Type
      username: Username
      password: Password
- name: JMS Transport
  endpoint:
    path: /jms/transport
    method: POST
    data_selector: response
    params:
      fiorano_provider_url: Fiorano Provider URL
      initial_context_implementation: Initial Context Implementation
      backup_url: Backup URL
      default_security_principal: Default Security Principal
      default_security_credential: Default Security Credential
      default_connection_factory: Default Connection Factory
- name: SMTP Alert
  endpoint:
    path: /managing-smtp-and-jms-alerts/smtp
    method: GET
    data_selector: properties
    params: {}
- name: JMS Alert
  endpoint:
    path: /managing-smtp-and-jms-alerts/jms
    method: GET
    data_selector: properties
    params: {}
- name: Backlog Policy
  endpoint:
    path: /backlog/policy
    method: POST
    data_selector: policy
    params: {}
- name: Low Memory Policy
  endpoint:
    path: /low/memory/policy
    method: POST
    data_selector: policy
    params: {}
- name: Low Disk Policy
  endpoint:
    path: /low/disk/policy
    method: POST
    data_selector: policy
    params: {}
- name: Monitoring Messages
  endpoint:
    path: /esb/12.2/monitoring-messages
    method: GET
- name: SNMP Trap Messages
  endpoint:
    path: /snmp/trap/messages
    method: GET
    data_selector: trap_types
    params: {}
- name: audit_events
  endpoint:
    path: /FES_AUDIT_EVENT_TOPIC
    method: GET
    data_selector: events
- name: system_events
  endpoint:
    path: /FES_SYSTEM_EVENT_TOPIC
    method: GET
    data_selector: events
- name: monitoring_configuration
  endpoint:
    path: /conf/monitoring.conf
    method: GET
    data_selector: properties
- name: server_configuration
  endpoint:
    path: /conf/server1.conf
    method: GET
    data_selector: properties
- name: event_process_monitoring
  endpoint:
    path: /conf/event_process_monitoring.conf
    method: GET
    data_selector: properties
- name: SBWManager
  endpoint:
    path: /FES/Fiorano/Esb/Sbw/SBWManager
    method: GET
    data_selector: properties
    params: {}
- name: wf_inst_event_history
  endpoint:
    path: /create_table/WF_INST_EVENT_HISTORY
    method: POST
    data_selector: records
    params: {}
- name: callout_procedure
  endpoint:
    path: /services/data/vXX.X/sobjects/CalloutProcedure
    method: POST
    data_selector: records
    params: {}
- name: RunTimeDataMigration
  endpoint:
    path: /esb/FioranoMigration/bin/RunTimeDataMigration.properties
    method: GET
    data_selector: properties
    params: {}
- name: Server Runtimedata Migration
  endpoint:
    path: /migrate/server
    method: POST
    data_selector: migration_results
- name: eStudio Runtimedata Migration
  endpoint:
    path: /migrate/estudio
    method: POST
    data_selector: migration_results
- name: Studio Runtimedata Migration
  endpoint:
    path: /migrate/studio
    method: POST
    data_selector: migration_results
- name: Replicated HA to Shared HA Migration
  endpoint:
    path: /migrate/ha
    method: POST
    data_selector: migration_results
- name: ScriptMigration
  endpoint:
    path: ScriptMigration.properties
    method: GET
    data_selector: properties
    params: {}
- name: ComponentResourcesMigration
  endpoint:
    path: /ComponentResourcesMigration.properties
    method: GET
    data_selector: properties
    params: {}
- name: Principal Manager
  endpoint:
    path: /users
    method: GET
    data_selector: '*'
- name: ACL Manager
  endpoint:
    path: /acl_entries
    method: GET
    data_selector: '*'
- name: LdapPrincipalManager
  endpoint:
    path: /LdapPrincipalManager
    method: GET
    data_selector: properties
- name: LdapBasedAclManager
  endpoint:
    path: /LdapBasedAclManager
    method: GET
    data_selector: properties
- name: ApacheDS
  endpoint:
    path: /var/lib/apacheds-1.5.4/default/conf/server.xml
    method: GET
- name: ActiveDirectory
  endpoint:
    path: /O=Fiorano,C=US
    method: GET
- name: Netscape
  endpoint:
    path: /ldapserver:389
    method: GET
- name: UserFile
  endpoint:
    path: /path/to/user.xml
    method: GET
    data_selector: UserManager/User
    params: {}
- name: GroupFile
  endpoint:
    path: /path/to/group.xml
    method: GET
    data_selector: GroupManager/Group
    params: {}
- name: ACLFile
  endpoint:
    path: /path/to/acl.xml
    method: GET
    data_selector: AclManager/ACL
    params: {}
- name: microservice
  endpoint:
    path: /services/data/vXX.X/sobjects/Microservice
    method: POST
    data_selector: records
    params: {}
- name: templates
  endpoint:
    path: /etc/templates.properties
    method: GET
    data_selector: variables
- name: copyright
  endpoint:
    path: /etc/copyright.txt
    method: GET
    data_selector: copyright_notice
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
- name: ConfigLauncher
  endpoint:
    path: /path/to/ConfigLauncher
    method: POST
    data_selector: data
    params: {}
- name: FileConfiguration
  endpoint:
    path: /resources/namedConfigurations.xml
    method: GET
    data_selector: namedConfiguration
- name: Simple JMS
  endpoint:
    path: /templates-console.bat
    method: GET
    data_selector: service_details
    params: {}
- name: Multi Threaded
  endpoint:
    path: /templates-console.bat
    method: GET
    data_selector: service_details
    params: {}
- name: POJO
  endpoint:
    path: /templates-console.bat
    method: GET
    data_selector: service_details
    params: {}
- name: ServiceDescriptor
  endpoint:
    path: etc/ServiceDescriptor.xml
    method: GET
    data_selector: execution
- name: service_refs
  endpoint:
    path: etc/ServiceDescriptor.xml
    method: GET
    data_selector: servicerefs
- name: service_references
  endpoint:
    path: /servicerefs
    method: UPDATE
    data_selector: serviceref
    params: {}
- name: log_modules
  endpoint:
    path: /logmodules
    method: ADD
    data_selector: logmodule
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: jdbc
  endpoint:
    path: /SystemLib/jdbc:4.0
    method: EDIT
    data_selector: ''
    params: {}
- name: JMSAdapters
  endpoint:
    path: /JMS/Adapters:4.0
    method: ADD
    data_selector: ''
    params: {}
- name: JMSCommon
  endpoint:
    path: /JMS/Common:4.0
    method: ADD
    data_selector: ''
    params: {}
- name: MQSeries
  endpoint:
    path: /MQSeries:4.0
    method: ADD
    data_selector: ''
    params: {}
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: Fiorano Enterprise Server HA Primary
  endpoint:
    path: /profiles/haprofile1/primary/FES
    method: GET
    data_selector: records
- name: Fiorano Enterprise Server HA Secondary
  endpoint:
    path: /profiles/haprofile1/secondary/FES
    method: GET
    data_selector: records
- name: Fiorano Peer Server HA Primary
  endpoint:
    path: /profiles/haprofile1/primary/FPS
    method: GET
    data_selector: records
- name: Fiorano Peer Server HA Secondary
  endpoint:
    path: /profiles/haprofile1/secondary/FPS
    method: GET
    data_selector: records
- name: Fiorano Peer Server1 HA Primary
  endpoint:
    path: /profiles/haprofile2/primary/FPS
    method: GET
    data_selector: records
- name: Fiorano Peer Server1 HA Secondary
  endpoint:
    path: /profiles/haprofile2/secondary/FPS
    method: GET
    data_selector: records
- name: Oracle
  endpoint:
    path: /DatabaseConfigurations
    method: GET
    data_selector: SelectQueryOracle
- name: MySQL
  endpoint:
    path: /DatabaseConfigurations
    method: GET
    data_selector: SelectQuerySQL
- name: FileReader
  endpoint:
    path: /dev.txt
    method: GET
    data_selector: records
    params: {}
- name: FileReader
  endpoint:
    path: /prod.txt
    method: GET
    data_selector: records
    params: {}
- name: server_process_id
  endpoint:
    path: /fetch/server/process/id
    method: GET
    data_selector: process_id
    params: {}
- name: component_process_id
  endpoint:
    path: /fetch/component/process/id
    method: GET
    data_selector: process_id
    params: {}
- name: server_thread_dump
  endpoint:
    path: /fetch/server/thread/dump
    method: GET
    data_selector: thread_dump
    params: {}
- name: component_thread_dump
  endpoint:
    path: /fetch/component/thread/dump
    method: GET
    data_selector: thread_dump
    params: {}
- name: server_heap_dump
  endpoint:
    path: /fetch/server/heap/dump
    method: GET
    data_selector: heap_dump
    params: {}
- name: component_heap_dump
  endpoint:
    path: /fetch/component/heap/dump
    method: GET
    data_selector: heap_dump
    params: {}
- name: audit_events
  endpoint:
    path: /api/v1/audit/events
    method: GET
    data_selector: audit_events
- name: system_events
  endpoint:
    path: /api/v1/system/events
    method: GET
    data_selector: system_events
- name: FES Output
  endpoint:
    path: /EnterpriseServers/PROFILE_NAME/FES/run/logs/esbout.log
    method: GET
- name: FES Error
  endpoint:
    path: /EnterpriseServers/PROFILE_NAME/FES/run/logs/esberr.log
    method: GET
- name: Service Logs
  endpoint:
    path: /EnterpriseServers/PROFILE_NAME/service/service.log
    method: GET
- name: FPS Output
  endpoint:
    path: /PeerServers/PEER_PROFILE/FPS/run/logs/esbout.log
    method: GET
- name: FPS Error
  endpoint:
    path: /PeerServers/PEER_PROFILE/FPS/run/logs/esberr.log
    method: GET
- name: Components Output Logs
  endpoint:
    path: /PeerServers/PEER_PROFILE/FPS/run/logs/APP_NAME/APP_VERSION/SERVICE_NAME/APP_NAME_*APP_VERSION*_SERVICE_NAME.out.0
    method: GET
- name: Components Error Logs
  endpoint:
    path: /PeerServers/PEER_PROFILE/FPS/run/logs/APP_NAME/APP_VERSION/SERVICE_NAME/APP_NAME_*APP_VERSION*_SERVICE_NAME.err.0
    method: GET
notes:
- To access the Swagger UI, ensure that the enterprise server is running.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 'External Database for Enterprise Service Bus (ESB): There is a feature called Document
  Tracking which can be used to track messages.'
- 'Lock File server for High Availability: For an HA environment, setup a Lock File
  on a different machine.'
- The bin installer might fail if openjdk is set as JAVA_HOME in some systems. Please
  use Oracle's Java and set the JAVA_HOME variable appropriately.
- In the event of an error saying "Initializing InstallShield Wizard" while installing,
  refer to the Troubleshooting section for the resolution.
- To install the Fiorano Platform on Mac OS platform, download the latest Fiorano
  Installer from the Fiorano website.
- Before launching eStudio, set up the Java Home path correctly by editing the Info.plist
  file.
- If eStudio does not start, replace the line in Info.plist with the path to the JVM
  library.
- After launching eStudio, provide the JAVA_HOME path in Installed JREs and set the
  Compiler Compliance level.
- Edit the global.properties file to set the mac.jre.lib.dir property for the Java
  runtime library.
- Add additional system properties in the Info.plist file as needed.
- Fiorano Servers are pre-configured to run on a single System.
- Fiorano recommends excluding FIORANO_HOME from antivirus checks.
- Allow connections from all ports between the servers. Allow IP based communication
  and do not configure the firewall in a port-specific manner.
- Shutdown scripts cannot be used to shutdown both primary and secondary servers running
  in a shared HA mode simultaneously while using the RMI connection.
- If HA profiles from previous versions are migrated to the current version of the
  product, these profiles need to be re-configured to specify the BackupRMIServerPort
  property.
- Shutdown scripts cannot be used to shutdown both primary and secondary servers running
  in the shared HA mode simultaneously using an RMI connection.
- The Peer Server can be shut down only when logged into it.
- Synchronous components can be tested using the Test button in the Configuration
  Property Sheet (CPS)
- Asynchronous components cannot be tested during the configuration time unless functionality
  is added
- 'Clients need to be aware of ports below: 1947 to connect to Fiorano Server primary
  from external tools. 1948 to connect to Fiorano Server secondary from external tools.
  RMI Ports are used to edit server parameters in online mode.'
- Manual launch should only be done after the Event Process has been launched.
- When a component is set to launch in the manual mode, the Fiorano Peer Server does
  not try to launch the component.
- Configure the server JVM settings before installing the profile as a service.
- Before installation of server profiles as services on Windows Server 2003/2008,
  the following line needs to be added to file %FIORANO_HOME%/esb/server/bin/server.conf
  'java.io.tmpdir=C:/Windows/temp' under the '<java.system.props>' tag.
- Once the server is installed as a service, future changes to the file 'server.conf'
  will have no effect on the server as the configuration files will not be regenerated.
  The server profile needs to be uninstalled and then installed again for the changes
  to take effect.
- Configure all server JVM settings before installing the profile as a service.
- 'The line ''#chkconfig: 2345 20 80'' should remain commented.'
- Requires setup of connected app in api
- If HA profiles are used, set the hostname in both primary and secondary server profiles
  with their corresponding Public IP addresses (or the private static IP in case of
  a Virtual Private Cloud).
- If HA profiles are used, we need to set the MappedPublicAddress in both primary
  and secondary server profiles with their corresponding Public IP (or private static
  IP in case of VPC).
- In a Windows operating system with multiple users, when a user tries to launch eStudio
  installed in a different user in the system, eStudio may not get opened and displays
  a log message.
- Open the eStudio ini file present at $Fiorano_Home/eStudio.
- 'Add the following line, preferably as the last line: -Dosgi.locking=none'
- Check whether the hostname -i command in the terminal / command prompt gives the
  correct in-use IP address of the host, if not, modify the hosts file.
- To avoid errors while installing, InstallShield requires the Unix bc utility.
- 'If the following error occurs, then increase Client Connections within the Peer
  server: Cannot perform this operation, limit reached. :: Cannot create more connections
  as the connection count for this Connection manager has reached the upper limit
  of X connections.'
- 'If the following error is encountered, increase the system file handles: Too many
  files open.'
- Always define user permissions on Applications to control unauthorized access to
  sensitive information.
- Security plays a critical role in a distributed system.
- User-level security is important in avoiding problems such as a Peer injection of
  malicious and corrupt data in to the system.
- In UNIX systems, servers, by default, will start in the Background mode. Pass runtime
  argument –nobackground to the server startup script to run the server in console
  mode.
- NT services will have to be re-installed if you make changes to any configuration
  files. This includes fiorano_vars as well as server.conf.
- Shutdown scripts cannot be used to shutdown both primary and secondary servers running
  in a shared HA mode simultaneously, and using the RMI connection.
- In case, HA profiles from previous versions are migrated to the current version
  of the product, these profiles need to be re-configured to specify the BackupRMIServerPort
  property in order to make use of this functionality.
- Offline mode configuration can be done using the Profile Manager.
- Online mode configuration can be performed using the JMX explorer.
- The server needs to be restarted after the value is set for certain configurations.
- Users connecting to the Fiorano Network are required to furnish their credentials
  which are then authenticated by the network.
- Ensure that the Enterprise Server is shut down before executing the script.
- FPS can be configured either in online mode or offline mode using the Fiorano eStudio.
- Online configuration of a Server can be performed using the JMX explorer.
- Some of the Server configurations are applied only after the restart of the Server.
- The Peer Server connects to the Enterprise Server through this port after FPS is
  started with this profile saved.
- Though changes can be done with the server running, it needs to be restarted after
  the changes are made so that the changes take into effect.
- If different settings from the default settings are to be specified to the FPS,
  then the files server.conf and server.sh/.bat needs to be copied and renamed, so
  that both files have the same name.
- Ensure that the Peer Server is shut down before executing the script.
- Microservices can be categorized into synchronous and asynchronous based on invocation
  method.
- Handshake events are not in use in current implementation. Currently, the decision
  whether component has CCP enabled or not is done by reading ServiceDescriptor.xml
  file of the component.
- Uses OAuth2 with refresh token — requires setup of connected app in SBW
- Some objects may return nulls in deeply nested fields
- On Windows 7 and later, the user must have admin permissions for Fiorano Location
  to work with eStudio. If not, eStudio must be launched using the option “Run as
  Administrator”
- Graphic providers like XServer should be enabled in the system from which eStudio
  is launched.
- It is recommended that the default workspace is used.
- The Remember workspace option can be selected to save the workspace used to avoid
  displaying the dialog box when eStudio is launched next time.
- A Server connection is required only to export the developed Event Processes into
  the server.
- Event Processes present in the Server can also be imported into the eStudio.
- The Enterprise Server provides API access to the event processes such as to save,
  view, export, launch, debug, stop, and similar actions as required.
- The small red cross on the newly added server indicates that the server is not configured
- The previously existing server appears in green font representing the active server.
- Only event processes deployed on the Active Enterprise Server will be displayed.
- Active server can be identified by the color green.
- Some documents may return nulls in deeply nested fields
- Components can be imported from the file system.
- If the Overwrite If Exists checkbox is selected, the service in the repository will
  be overwritten.
- Requires setup of OAuth2 client
- Rate limits are in effect for API calls
- Microservice configurations are saved in the EventProcess.xml file which is in XML
  format.
- It is advised not to define complex mappings (involving huge schemas and mappings)
  using Route Transformations since it may affect the Peer server performance.
- Requires setup of OAuth2 for API access.
- Requires setup of connected app in SBW.
- Some objects may return nulls in deeply nested fields.
- Employ caution when using this option to cleanup routes as this action cleans up
  even the active routes that may be used in the flow.
- Requires setup of connected app in API
- The message flow between two ports (source port and target port) present in an event
  process that is running can be tested using the context menu option.
- Some objects like Contact may return nulls in deeply nested fields
- Durable subscriptions prevent message loss during peer server restarts or failovers.
- Deleting a destination automatically removes all stored messages. Please use the
  Delete option with caution so as not to delete messages that are being used by the
  Server or by a running event process.
- Stopping an event process leads to the loss of Unconsumed (pending) messages. (Avoid
  stopping the application when there are unconsumed messages.)
- If there are multiple selectors defined on a route, only those messages which match
  (while filtering) the criteria set on selectors will be allowed to pass through
  the route.
- The order of evaluation of a message selector is from left to right within precedence
  level.
- An empty string is treated as null and implies having no message selector set for
  the message consumer.
- The option needs to be used after making all the connections. If new inputs or outputs
  are added, the auto select option needs to be selected again.
- Default Workflow data type is set to 'Message Body'.
- Ensure correct API endpoint configuration.
- Check for required permissions on API access.
- The Creation Date field cannot be changed manually.
- Schemas added in the repository can be synchronized with the server schema repository.
- Schemas can be removed from online schema repository by selecting a schema and clicking
  Remove button.
- When a new component instance is added, unresolved dependencies of the component
  will be listed in the Profile Validation Messages view.
- If the component instance added has exclusive dependencies, a new instance of each
  exclusive dependency will be added to the profile within the same domain as the
  component instance.
- The maximum limit beyond which no logging event will be generated.
- Custom Functions can be created by adding a new script.
- Extensions can be defined in Javascript or Java language.
- During runtimedata migration, the funclets in Global Repository will also be migrated
  along with all other configurations in Enterprise Server.
- If a funclet in the global repository and a funclet defined in an event process
  have the same name, the local funclet takes precedence.
- When a global funclet is edited in Online perspective, a running event process should
  be restarted to reflect the changes.
- Creating mappings is as simple as dragging an input node and dropping it on a target
  structure node.
- To export the eMapper project, right-click on the project node and select Export.
- An eMapper project can be imported either from an existing .tmf file or from another
  eMapper project.
- Generated XSL uses java functions from the fix-xmlconverter.jar to fetch the value
  of field from the input FIX message string, calculate the body length / checksum
  of an output FIX message.
- The input FIX message needs to be modified by adding <Message> and </Message> tags
  at the beginning and ending of the message and by replacing the non-printable SOH
  character with '^'.
- Each function returns a boolean value based on the specified input conditions.
- DBLookup fetches the entries from a table and stores them in local cache the first
  time.
- Ensure input values match the column length defined in the database.
- BPM tool is disabled by default in Fiorano 12 and needs to be enabled.
- The schema defines the rules used to convert non-XML text to XML text and vice versa.
- Records can be positional or delimited.
- A flat file schema project can be exported using the Export option available on
  the context menu of the project.
- Every new record, which you create, is inserted as a descendant of the record that
  you selected.
- The name of a record or field needs to be unique. The tool will display an exception
  if you specify a name that has already been assigned to an existing record or field.
- When you delete a record, all child records and fields are also deleted.
- 'Default credentials are: Username: admin, Password: passwd'
- Some Server configurations such as server ports and memory settings are applied
  only after restarting the Server.
- A message dialog box instructing the server to be restarted is displayed whenever
  a Restart is required.
- License files can be managed using License Manager Tool.
- All licenses present in 'FIORANO_HOME/licenses' folder are shown as License nodes.
- Command line interface available for launching Event Processes.
- Ant tasks can be executed to interact with the Fiorano API.
- The user provided should have the permissions to read/delete/create applications
  and services in the Fiorano environment.
- 'By default: ENVIRONMENT is set to RCV'
- DELIVERY_BUNDLE_DIR is set to "$FIORANO_HOME/esb/tools/cli/delivery".
- Ensure that Enterprise Server (FES) is not running; stop the FES in case you have
  started it.
- Create a separate folder under extlib for your convenience (to manage when more
  drivers get added further).
- If the database jar is not available in the system, please download the jar. Save
  it in extlib folder.
- Requires setup of connected app for authentication
- 'Databases supported by Fiorano B2B are: Oracle, Microsoft SQL Server 2008, PostGRESQL,
  MySQL.'
- If the peer server is running on a different machine, then you need to provide the
  valid FPS URL in the Server URL field.
- Fiorano B2B is completely dependent on Fiorano Suite.
- Separate agreements need to be specified for sending and receiving documents.
- Disable the Active check box to deactivate an already added trading party and all
  their endpoints.
- In case of any exception caused due to connection error or network error, you can
  reinject the particular transaction from the Transaction Logs page under Monitor
  tab.
- Unchecking the Active option allows deactivating an already added trading party
  and all their endpoints.
- The channels of a Host Trading Party capture its receiving endpoints configuration.
- Configurations under the Messages tab allow configuring different messages which
  are communicated by the organization.
- The permission to delete/re-inject documents are reserved for administrators and
  can be assigned to others using permission management available within the B2B interface.
- Security settings
- Users in the group B2BAdminstrators can be assigned permission to redo failed Transactions
  and other users can be restricted to access only the transaction status.
- Ensure the OAuth2 client is properly configured in the SBW console.
- Rate limits apply to API requests.
- Ensure that the operating system hosting the server supports the protocol used for
  sharing the lock file.
- The LockFile and the directory containing the LockFile should have Read/Write permission
  set.
- On Operating Systems other than Windows, verify the permissions using the ls -l
  command.
- The newly added mount point will disappear after the system reboot.
- Ensure that the mount is automated on system reboot.
- Backup Server IP is configured in backup URL for default connection factories.
- Backup Server port is configured in backup URL for default connection factories.
- LockFile is mandatory to run HA.
- GatewayServerIPAddress is mandatory to specify.
- The primary and secondary broker pair shares a common database and do not replicate
  data over the network.
- The -dbPath command line option is used for specifying the location of the shared
  database.
- Enable the ScriptEnable property in the FES HA profile Component Instance Configuration
  to invoke an External Script Callout.
- Multiple scripts can be provided for execution separated by commas.
- Managing Policies
- Uses OAuth2 for authentication
- Supports custom microservices
- In Linux, user may not be able to open the trap receiver window if the MIB browser
  is not started in super-user mode.
- Server must be stopped to make changes; it can be changed at runtime by logging
  into FES-JMX.
- This property cannot be changed at runtime.
- Audit Events from the Enterprise Server need to be subscribed to using the method
  described in the documentation.
- Setting the parameter 'EVENT_PROCESS_MONITOR_INTERVAL' to a very less value will
  put considerable load on the server and may impact on the overall server performance.
- Setting the parameter 'SERVER_MONITOR_INTERVAL' to a very less value will put considerable
  load on the server and may impact on the overall server performance.
- It is strongly recommended that the user employ a commercial-grade DB in a production
  system.
- Authentication and Authorization are required for accessing SBW Database.
- If Document Tracking is enabled, there are two ways of re-injecting a failed document
  back into the flow.
- The document may or may not be counted as complete depending on the configuration
  of the work flow.
- In the first two methods of reinjection, previous ports had to be tracked.
- User can enable the task through the Dashboard or eStudio.
- To disable the task, click the Disable button in the purge old Docs dialog box.
- Stored procedure must be created in the desired database
- Callout configuration requires setting up parameters in the callout.cfg file
- To enable sending of log alert, enable the LogAlertSendingEnabled option in the
  FES or FPS profile.
- OAuth2 authentication is required.
- Please make sure that all the servers and tools are stopped before performing the
  migration.
- JAVA_HOME needs to be specified in $FIORANO_HOME/fiorano_vars.sh/bat or globally
  under environment variables for the utility to work.
- Migration of changed credentials requires migrating the entire runtimedata.
- Ensure that you have closed the Fiorano Servers before migration.
- The values entered for the parameters in the properties file are case sensitive.
- Cache of the components maintained by the Peer Servers need not be migrated.
- Log Files for the Servers and components can be deleted for a clean installation.
- Realm Store migration options are provided for users migrating from versions prior
  to Fiorano 9.1.0.
- The values entered for these parameters are case sensitive.
- Values entered for parameters in ComponentResourcesMigration.properties are case
  sensitive.
- If the Runtime Argument value has space(s) between the names in the path, encapsulate
  the value within double quotation marks.
- All the information described above regarding the password rules is valid only if
  the user is added through Dashboard.
- Admin user and administrator group will be created and added to the LDAP datastore
  during server startup.
- In case of HA servers, the LDAP configuration needs to be configured in both Primary
  and Secondary profiles.
- Make sure that the steps mentioned in section LDAP Security Realm have been completed
  before moving on to these steps
- Default UserFileName is user.xml
- Default GroupFileName is group.xml
- Default FileName for ACL is acl.xml
- Default MaxAcePerACL is 100
- Fiorano versions above 9.5.0 support Destination Encryption.
- Uses DES as the default encryption algorithm.
- Encryption properties can be configured in the input/output ports from the JMS Destination
  tab under the Properties panel.
- Fiorano Platform promotes a linear 'build as you grow' model.
- Data flows between distributed processes are not routed through a central hub.
- The Location and Basic Details panel are the only panels in which details are mandatory.
- Each folder in %TEMPLATE_ENGINE%/etc is a setting.
- The template engine uses variables to substitute values during the code generation.
- Deployment can be done in the command prompt or eStudio.
- Use the number '4' to unregister.
- Use the number '2' to reregister.
- Provides Named Configuration support in custom Microservices.
- To check the functionality of this component, it should be registered with the server.
- The steps to register the samples is specified in the Sample Templates page.
- By default, there are no input and output ports for this sample component.
- The UI of the component is handled by the package com.fiorano.edbc.service.editors
  and the scheduling configuration is saved using the class com.fiorano.edbc.service.model.SchedulerConfiguration.
- When external authentication is enabled for the FES, it must also be enabled for
  all Peers connected to the FES.
- When external authentication is enabled, the Security Datastore Reset option in
  dashboard will be disabled.
- Extensions can be defined either in Javascript or Java language.
- Only the public static functions in the class are listed.
- The arguments to the functions should be either primitives or String.
- The return type of the functions should be either void, primitives or String.
- 'The JMS property ''ESBX__SYSTEM__EVENT_PROCESS_ENVIRONMENT'' holds the value of
  environment. Possible values are: development, production, staging, testing.'
- Default user name and password are 'admin' and 'passwd' respectively.
- <Server> is FES in this sample.
- OAuth2 authentication required for API access.
- Ensure that the correct scopes are requested during authentication.
- The default External Port for FES is '1947'.
- The default Internal Port for FES is '1847'.
- The default RMI Port for FES is '2047'.
- The default Jetty port number for FES is '1980'.
- The default Server Port for FPS is '1867'.
- The default RMI Server Port number for FPS is '2067'.
- The default Jetty port number for FPS is '1880'.
- While running the servers on the same machine, both the HA servers should have their
  databases pointing to the same physical directory.
- The shared database is critical for the servers to function, as the servers store
  the entire data in it.
- 'By default, the launch order and stop order will be disabled with their respective
  drop-down options: Specify Launch order and Specify Stop order, set as "no". Enable
  the functionality by changing the option to "yes".'
- Components whose values are less than or equal to zero are considered to be independent
  of SLO and will be launched/stopped first without referring to the order specified.
- Whenever these components have to be considered within SLO, provide an appropriate
  positive value.
- Next priority will only be considered when all of its prior components (holding
  lesser values) are launched successfully.
- Changing Admin password requires profile changes and server restart.
- Scheduler mode is selected during SQL Configuration and hence external input is
  not required.
- The default environment for a new Event Process will be 'development'.
- Configuration set in this instance can be saved with a name by providing a name
  under Named Configuration.
- Use jstack for thread dumps and jmap for heap dumps.
- Event Monitoring feature helps to monitor performance bottlenecks in real time.
- Events monitored include Application Events, Service Events, Security Events, TPS/FPS
  Events, SP/Enterprise Server Events, and Gateway Events.
- Application uptime and downtime can be checked in the FES output log.
- Logs related to the availability of a component are logged in FPS output logs.
errors:
- If a mode is not specified, the mode is taken to be 'fps'.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Connected to [URL: null]'
- 'Cannot perform this operation, limit reached. :: Cannot create more connections
  as the connection count for this Connection manager has reached the upper limit
  of X connections'
- Too many files open
- Server needs to be restarted after changing certain properties.
- 'ConnectionRefused: Ensure the FPS server is running'
- 'InvalidPort: Check the port configuration'
- 'AuthenticationFailed: Verify credentials for FES'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Ensure endpoint URL is correct'
- '429 Too Many Requests: Slow down requests'
- '403 Forbidden: Check permissions or API key validity.'
- '404 Not Found: Verify endpoint URL.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Verify authentication credentials.'
- 'NOT_FOUND: The requested resource was not found.'
- 'INVALID_CLIENT: Check the client ID and secret.'
- 'ACCESS_DENIED: Verify user permissions.'
- 'SERVER_NOT_RUNNING: Check the server configuration and restart the utility'
- 'INVALID_CONFIGURATION: Review the properties in the monitoring configuration files'
- 'INVALID_TOKEN: Check if the token is valid and not expired.'
- 'FORBIDDEN: Ensure permissions are granted for the requested resource.'
- java.lang.OutOfMemoryError
- 'Exception String in Proxy: fiorano.jms.common.FioranoException: REQUEST_TIMED_OUT'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - OAuthToken
  - IStrengthChecker
  - IValidationChecker
  - NamedCredential
  - OAuth2
client:
  base_url: https://docs.fiorano.com/esb/12.2
  headers:
    Accept: application/json
source_metadata: null
