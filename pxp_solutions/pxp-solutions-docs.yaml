resources:
- name: transaction
  endpoint:
    path: /transactionservice/api/v5/transactions
    method: POST
- name: Public Key
  endpoint:
    path: /PublicKeyService/api/v5/PublicKeys
    method: GET
    params:
      merchantId: '{merchantId}'
      type: '{type}'
- name: card_transactions
  endpoint:
    path: /processing-card-transactions
    method: POST
    data_selector: transactions
    params: {}
- name: IccTransactionRequest
  endpoint:
    path: /sale/transaction
    method: POST
- name: IccTransactionResponse
  endpoint:
    path: /sale/transaction/response
    method: GET
- name: PreAuthorization
  endpoint:
    path: /processing-a-preauthorization-transaction
    method: POST
    data_selector: IccTransactionRequest
- name: TokenTopupRequest
  endpoint:
    path: /processing-a-topup-transaction
    method: POST
    data_selector: TokenTopupRequest
- name: IccTransactionResponse
  endpoint:
    path: /icctransactionresponse-element
    method: GET
    data_selector: IccTransactionResponse
- name: TokenSettlementRequest
  endpoint:
    path: /capture-transaction
    method: POST
    data_selector: TokenSettlementRequest
    params: {}
- name: IccTransactionResponse
  endpoint:
    path: /icctransactionresponse
    method: GET
    data_selector: IccTransactionResponse
    params: {}
- name: IccTransactionRequest
  endpoint:
    path: /processing-a-refund-transaction
    method: POST
    data_selector: IccTransactionRequest
- name: IccTransactionResponse
  endpoint:
    path: /processing-a-refund-transaction
    method: GET
    data_selector: IccTransactionResponse
- name: TokenRefundRequest
  endpoint:
    path: /processing-a-token-refund-transaction
    method: POST
    data_selector: TokenRefundRequest
- name: IccTransactionRequest
  endpoint:
    path: /docs/keyed-on-ped-transaction
    method: POST
    data_selector: IccTransactionRequest
- name: IccTransactionResponse
  endpoint:
    path: /docs/keyed-on-ped-transaction
    method: GET
    data_selector: IccTransactionResponse
- name: TokenTransactionRequest
  endpoint:
    path: /TokenTransactionRequest
    method: POST
    data_selector: TokenTransactionRequest
    params: {}
- name: IccTransactionResponse
  endpoint:
    path: /IccTransactionResponse
    method: GET
    data_selector: IccTransactionResponse
    params: {}
- name: IccTransactionRequest
  endpoint:
    path: /reference/icctransactionrequest-element
    method: POST
    data_selector: IccTransactionRequest
    params: {}
- name: IccTransactionResponse
  endpoint:
    path: /reference/icctransactionresponse-element
    method: GET
    data_selector: IccTransactionResponse
    params: {}
- name: Card Account Verification
  endpoint:
    path: /verification-transaction
    method: POST
    data_selector: IccTransactionResponse
- name: IccTransactionRequest
  endpoint:
    path: /processing-a-forced-store-and-forward-transaction
    method: POST
    data_selector: IccTransactionRequest
    params: {}
- name: IccTransactionResponse
  endpoint:
    path: /processing-a-forced-store-and-forward-transaction
    method: GET
    data_selector: IccTransactionResponse
    params: {}
- name: reversal_transaction
  endpoint:
    path: /processing-a-reversal-transaction
    method: POST
    data_selector: TokenReversalRequest
- name: TokenReferralRequest
  endpoint:
    path: /processing-a-referral-transaction
    method: POST
    data_selector: TokenReferralRequest
- name: IccTransactionResponse
  endpoint:
    path: /processing-a-referral-transaction
    method: GET
    data_selector: IccTransactionResponse
- name: IccTransactionRequest
  endpoint:
    path: /api/icctransactionrequest
    method: POST
    data_selector: IccTransactionRequest
    params: {}
- name: IccTransactionResponse
  endpoint:
    path: /api/icctransactionresponse
    method: GET
    data_selector: IccTransactionResponse
    params: {}
- name: Pay at Table Login
  endpoint:
    path: /docs/processing-a-pay-at-table-login-message
    method: GET
- name: Pay at Table Itemised Check
  endpoint:
    path: /docs/processing-a-pay-at-table-itemized-receipt-message
    method: GET
- name: Pay at Table Check Info
  endpoint:
    path: /docs/processing-a-pay-at-table-check-info-message
    method: GET
- name: Pay at Table Post Payment
  endpoint:
    path: /docs/processing-a-pay-at-table-post-payment-message
    method: GET
- name: Pay at Table Disconnect
  endpoint:
    path: /docs/processing-a-pay-at-table-disconnect-message
    method: GET
- name: PayAtTableLoginRequest
  endpoint:
    path: /processing-a-pay-at-table-login-message
    method: POST
    data_selector: PayAtTableLoginRequest
- name: PayAtTableLoginResponse
  endpoint:
    path: /processing-a-pay-at-table-login-message
    method: POST
    data_selector: PayAtTableLoginResponse
- name: PayAtTableItemisedCheckRequest
  endpoint:
    path: /processing/payattableitemizedcheckrequest
    method: POST
    data_selector: PayAtTableItemisedCheckRequest
- name: PayAtTableItemisedCheckResponse
  endpoint:
    path: /processing/payattableitemizedcheckresponse
    method: GET
    data_selector: PayAtTableItemisedCheckResponse
- name: PayAtTableCheckInfoRequest
  endpoint:
    path: /reference/payattablecheckinforequest-element
    method: POST
    data_selector: PayAtTableCheckInfoRequest
- name: PayAtTableCheckInfoResponse
  endpoint:
    path: /reference/payattablecheckinforesponse-element
    method: POST
    data_selector: PayAtTableCheckInfoResponse
- name: PayAtTablePostPaymentRequest
  endpoint:
    path: /processing-a-pay-at-table-post-payment-message
    method: POST
    data_selector: PayAtTablePostPaymentRequest
- name: PayAtTablePostPaymentResponse
  endpoint:
    path: /processing-a-pay-at-table-post-payment-message
    method: POST
    data_selector: PayAtTablePostPaymentResponse
- name: PayAtTableDisconnectRequest
  endpoint:
    path: /reference/payattabledisconnectrequest-element
    method: POST
    data_selector: PayAtTableDisconnectRequest
    params: {}
- name: PayAtTableDisconnectResponse
  endpoint:
    path: /reference/payattabledisconnectresponse-element
    method: POST
    data_selector: PayAtTableDisconnectResponse
    params: {}
- name: Pay At Table Fault Responses
  endpoint:
    path: /pay-at-table-fault-responses
    method: GET
    data_selector: FaultResponseCode
    params: {}
- name: QueryPedRequest
  endpoint:
    path: /request-the-status-of-a-pin-entry-device
    method: POST
    data_selector: QueryPedResponse
    params: {}
- name: QueryPosRequest
  endpoint:
    path: /queryposrequest
    method: POST
    data_selector: QueryPosResponse
    params: {}
- name: QueryTransactionRequest
  endpoint:
    path: /request-the-status-of-a-transaction
    method: POST
    data_selector: TransactionReference
    params: {}
- name: restart_pin_entry_device
  endpoint:
    path: /restart/pin-entry-device
    method: POST
    data_selector: ResponseCode
- name: Pin Entry Device Information
  endpoint:
    path: /docs/to-do
    method: GET
- name: Latest Available Updates for PIN Entry Device
  endpoint:
    path: /docs/request-latest-available-updates-for-pin-entry-device
    method: GET
- name: Update on a Pin Entry Device
  endpoint:
    path: /docs/processing-an-update-on-a-pin-entry-device
    method: POST
- name: Force Update on a Pin Entry Device
  endpoint:
    path: /docs/processing-a-force-update-on-a-pin-entry-device
    method: POST
- name: GetPedInfoRequest
  endpoint:
    path: /request-version-information-for-pin-entry-device
    method: GET
    data_selector: GetPedInfoRequest
    params: {}
- name: GetPedInfoResponse
  endpoint:
    path: /request-version-information-for-pin-entry-device
    method: GET
    data_selector: GetPedInfoResponse
    params: {}
- name: GetLatestPedUpdateRequest
  endpoint:
    path: /request-latest-available-updates-for-pin-entry-device
    method: GET
    data_selector: ResponseCode
    params: {}
- name: UpdatePedRequest
  endpoint:
    path: /processing-an-update-on-a-pin-entry-device
    method: POST
    data_selector: UpdatePedRequest
    params: {}
- name: UpdatePedResponse
  endpoint:
    path: /processing-an-update-on-a-pin-entry-device
    method: GET
    data_selector: UpdatePedResponse
    params: {}
- name: sale_transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
    data_selector: transaction
    params: {}
- name: preauthorization_transaction
  endpoint:
    path: /processing-a-preauthorization-transaction
    method: POST
    data_selector: transaction
    params: {}
- name: TopUp
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
    data_selector: accountDetails
    params: {}
- name: capture_transaction
  endpoint:
    path: /processing-a-capture-transaction
    method: POST
    data_selector: response
    params: {}
- name: refund_transaction
  endpoint:
    path: /processing-a-refund-transaction
    method: POST
    data_selector: response
    params: {}
- name: public_api_key
  endpoint:
    path: /PublicKeyService/api/v5/PublicKeys
    method: GET
    data_selector: state
    params:
      type: Api
      merchantId: BDD
- name: public_encryption_key
  endpoint:
    path: /PublicKeyService/api/v5/PublicKeys
    method: GET
    data_selector: publicEncryptionKey
    params:
      type: Encryption
      merchantId: BDD
- name: checkout_overview
  endpoint:
    path: /docs/checkout-overview
    method: GET
- name: processing_checkout_transactions
  endpoint:
    path: /docs/processing-checkout-transactions
    method: GET
- name: skin_customisation
  endpoint:
    path: /docs/skin-customisation
    method: GET
- name: checkout_transaction
  endpoint:
    path: /checkout/transactions
    method: POST
    data_selector: redirectUrl
- name: pre_authentication_request
  endpoint:
    path: /pre-authentication
    method: POST
    data_selector: request
    params: {}
- name: pre_authentication_response
  endpoint:
    path: /pre-authentication/response
    method: GET
    data_selector: response
    params: {}
- name: three_d_secure_details
  endpoint:
    path: /3d-secure/details
    method: GET
    data_selector: threeDSecureDetails
- name: Fingerprinting
  endpoint:
    path: /WebMockProviders/threedsv2acs/fingerprint
    method: POST
- name: Challenge
  endpoint:
    path: /V3DSTestSuiteService2/acs2Service/browserCReq
    method: POST
- name: Card Transaction
  endpoint:
    path: /transaction
    method: POST
- name: 3D Secure Redirect Request
  endpoint:
    path: /ThreeDSecureService/v5/3ds/redirect
    method: POST
    data_selector: request
    params: {}
- name: 3D Secure Redirect Response
  endpoint:
    path: /ThreeDSecureService/v5/3ds/redirect
    method: GET
    data_selector: response
    params: {}
- name: threeDSecureStatusById
  endpoint:
    path: /threeDSecureService/api/v5/3ds/threeDSecureStatusById
    method: GET
    data_selector: state
- name: customer_registration
  endpoint:
    path: /customer-registration
    method: POST
    data_selector: customerDetails
    params: {}
- name: standalone_pin_entry_device_state_notification
  endpoint:
    path: /standalone_pin_entry_device_state_notification
    method: POST
    data_selector: standalonePinEntryDetails
- name: Activate TMS for Stand-alone Pin Entry Device
  endpoint:
    path: /activate-tms-for-stand-alone-pin-entry-device
    method: POST
    data_selector: customerDetails
    params: {}
- name: Enable Stand-alone Pin Entry Device
  endpoint:
    path: /reference/enable-stand-alone-pin-entry-device
    method: POST
    data_selector: response
    params: {}
- name: Disable Stand-alone Pin Entry Device
  endpoint:
    path: /reference/disable-stand-alone-pin-entry-device-1
    method: POST
    data_selector: response
    params: {}
- name: terminate_standalone_pin_entry_device
  endpoint:
    path: /terminate/standalone-pin-entry-device
    method: POST
    data_selector: response
    params: {}
- name: token_transaction_status
  endpoint:
    path: /transactionservice/api/v5/transactions/{transactionId}
    method: GET
    data_selector: records
- name: transaction_status
  endpoint:
    path: /transactionservice/api/v5/transactions
    method: GET
    data_selector: records
    params:
      merchantId: '{merchantId}'
      clientSystemTransactionId: '{clientSystemTransactionId}'
- name: SingleUseToken Transaction Status
  endpoint:
    path: /transactionservice/api/v5/transactions
    method: GET
    data_selector: transactions
    params:
      merchantId: merchantId
      clientSystemTransactionId: clientSystemTransactionId
      singleUseTokenId: singleUseTokenId
- name: PosConfigurationService
  endpoint:
    path: /POSConfigurationService/
    method: GET
    data_selector: records
    params: {}
- name: Public Key
  endpoint:
    path: /PublicKeyService/api/v5/PublicKeys
    method: GET
    params:
      merchantId: '{merchantId}'
      type: '{type}'
- name: single_use_token
  endpoint:
    path: /singleusetokenservice/api/v5/tokens
    method: POST
    data_selector: object
    params:
      merchantId: required
      clientSystemTokenId: optional
      details: optional
- name: single_use_token
  endpoint:
    path: /singleusetokenservice/api/v5/tokens
    method: POST
- name: card_transaction
  endpoint:
    path: /processing-a-transaction-using-a-card-number
    method: POST
- name: transaction_status
  endpoint:
    path: /transactionservice/api/v5/transactions/{token_id}
    method: GET
    data_selector: object
- name: transaction
  endpoint:
    path: /transactions/03379763-2E9A-4AB8-9E0F-ED8C39614FCF
    method: GET
- name: transaction_status
  endpoint:
    path: /transactionservice/api/v5/transactions
    method: GET
    params:
      merchantId: BDD
      clientSystemTransactionId: '12345'
      optionalResponseFields:
      - clientSystemTransactionId
      - clientSystemInvoiceId
      - cardSchemeReference
      - providerResponseCodeResult
      - providerCardSecurityResponseCode
      - providerAddressVerificationResponseCode
      - providerDiscretionaryData
      - providerRetrievalReferenceNumber
- name: transactions
  endpoint:
    path: /transactionservice/api/v5/transactions
    method: GET
- name: single_use_token_transaction_status
  endpoint:
    path: /transactionservice/api/v5/transactions
    method: GET
    params:
      merchantId: BDD
      clientSystemTransactionId: '12345'
      singleUseTokenId: 03379763-2E9A-4AB8-9E0F-ED8C39614FCF
      optionalResponseFields:
      - clientSystemTransactionId
      - clientSystemInvoiceId
      - cardSchemeReference
      - providerResponseCodeResult
      - providerCardSecurityResponseCode
      - providerAddressVerificationResponseCode
      - providerDiscretionaryData
      - providerRetrievalReferenceNumber
- name: transactions
  endpoint:
    path: /transactionservice/api/v5/transactions
    method: GET
    params:
      merchantId: BDD
      clientSystemTransactionId: '12345'
      singleUseTokenId: 03379763-2E9A-4AB8-9E0F-ED8C39614FCF
      optionalResponseFields:
      - '12345'
      - clientSystemInvoiceId
- name: apm_transaction
  endpoint:
    path: /transactionservice/api/v5/apmTransactions
    method: POST
    data_selector: ''
    params: {}
- name: apmTransactions
  endpoint:
    path: /apmTransactions
    method: POST
- name: apm_transaction_status
  endpoint:
    path: /transactionservice/api/v5/apmTransactions
    method: GET
    params:
      merchantId: BDD
      storeId: BDD000000001
      clientSystemTransactionId: UniqueTransactionReference
- name: apmTransactions
  endpoint:
    path: /apmTransactions
    method: GET
    params:
      merchantId: BDD
      storeId: BDD000000001
      clientSystemTransactionId: UniqueTransactionReference
- name: checkout
  endpoint:
    path: /api/v5/checkout
    method: POST
    data_selector: ''
    params: {}
- name: apmTransactions
  endpoint:
    path: /api/v5/apmTransactions
    method: POST
    data_selector: ''
    params: {}
- name: apmTransactions
  endpoint:
    path: /api/v5/apmTransactions
    method: GET
    params:
      merchantId: '{merchantId}'
      storeId: '{storeId}'
      clientSystemTransactionId: '{clientSystemTransactionId}'
- name: detached_refund
  endpoint:
    path: /api/v5/apmTransactions
    method: POST
    data_selector: ''
    params: {}
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: PayPal
  endpoint:
    path: /reference/paypal-documentation
    method: GET
    data_selector: records
- name: AliPay
  endpoint:
    path: /reference/alipay-documentation
    method: GET
    data_selector: records
- name: Wechat
  endpoint:
    path: /reference/wechat-documentation
    method: GET
    data_selector: records
- name: Klarna
  endpoint:
    path: /reference/klarna-documentation
    method: GET
    data_selector: records
- name: Bancontact
  endpoint:
    path: /reference/bancontact-documentation
    method: GET
    data_selector: records
- name: iDeal
  endpoint:
    path: /reference/ideal-documentation
    method: GET
    data_selector: records
- name: GiroPay
  endpoint:
    path: /reference/giropay-documentation
    method: GET
    data_selector: records
- name: Trustly
  endpoint:
    path: /reference/trustly-documentation
    method: GET
    data_selector: records
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
    data_selector: ''
    params: {}
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
    data_selector: ''
    params: {}
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
    data_selector: ''
    params: {}
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: public_key_request
  endpoint:
    path: /reference/public-key
    method: GET
- name: single_use_token_transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: card_transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: token_transaction_status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: transaction_reference_status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: single_use_token_status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: alternative_payment_method_transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: paypal
  endpoint:
    path: /reference/paypal-documentation
    method: GET
- name: 3d_secure_pre_authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3d_secure_authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: ThreeDSecure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: ThreeDSecureStatus
  endpoint:
    path: /reference/threedsecure-status
    method: GET
    data_selector: records
- name: card_types
  endpoint:
    path: /reference/card-types
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /threeDSecureService/api/v5/3ds2/preauthentication
    method: POST
- name: 3DS 2.0 PreAuthentication
  endpoint:
    path: /preauthentication
    method: POST
- name: 3D Secure Authentication
  endpoint:
    path: /threeDSecureService/api/v5/3ds2/authentication
    method: POST
    data_selector: response
    params: {}
- name: 3D Secure Challenge
  endpoint:
    path: /threeDSecureService/api/v5/3ds2/challenge
    method: POST
    data_selector: ''
    params: {}
- name: 3D Secure Redirect
  endpoint:
    path: /threeDSecureService/api/v5/3ds/redirect
    method: POST
- name: 3DS Redirect
  endpoint:
    path: /threeDSecureService/api/v5/3ds/redirect
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /threeDSecureService/api/v5/threedsecurestatus
    method: GET
- name: 3D Secure Status
  endpoint:
    path: /threeDSecureService/api/v5/3ds/threeDSecureStatusById
    method: GET
    params:
      merchantId: '{merchantId}'
      Id: '{Id}'
- name: threeDSecureStatusById
  endpoint:
    path: /3ds/threeDSecureStatusById
    method: GET
    params:
      merchantId: BDD
      Id: 57bc8107-0482-488d-8c0c-5021042124f
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Redirect
  endpoint:
    path: /reference/3d-secure-redirect
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: current_status
  endpoint:
    path: /reference/current-status
    method: GET
- name: 3d_secure_2_pre_authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3d_secure_2_authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3d_secure_2_challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3d_secure_redirect
  endpoint:
    path: /reference/3d-secure-redirect
    method: POST
- name: 3d_secure_status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: TransactionStatus
  endpoint:
    path: /3ds/2.0/transactionstatus
    method: GET
    data_selector: transactionStatus
- name: 3DS 2.0 WhitelistStatus
  endpoint:
    path: /reference/3ds-20-whiteliststatus
    method: GET
- name: 3DS 2.0 TransactionStatus
  endpoint:
    path: /reference/3ds-20-transactionstatus
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: SCA Apply Exemption At
  endpoint:
    path: /reference/sca-apply-exemption-at
    method: GET
- name: SCA Policy
  endpoint:
    path: /reference/sca-policy
    method: GET
- name: SCA Exemption Engine Result
  endpoint:
    path: /reference/sca-exemption-engine-result
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: SCA Exemption Engine Result
  endpoint:
    path: /reference/sca-exemption-engine-result
    method: GET
    data_selector: results
- name: SCA Apply Exemption At
  endpoint:
    path: /reference/sca-apply-exemption-at
    method: POST
    data_selector: results
- name: Tokenize a Card
  endpoint:
    path: /reference/token-vault-operations
    method: POST
    data_selector: results
- name: tokenize_card
  endpoint:
    path: /tokenvaultservice/api/v5/accounts
    method: POST
    data_selector: object
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: public_key_request
  endpoint:
    path: /reference/public-key
    method: GET
    data_selector: records
    params: {}
- name: single_use_token_transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
    data_selector: records
    params: {}
- name: card_transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
    data_selector: records
    params: {}
- name: token_transaction_status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
    data_selector: records
    params: {}
- name: transaction_reference_status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
    data_selector: records
    params: {}
- name: single_use_token_status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
    data_selector: records
    params: {}
- name: single_use_token_service
  endpoint:
    path: /single-use-token
    method: POST
- name: transaction_service
  endpoint:
    path: /transaction
    method: POST
- name: token_transaction_status
  endpoint:
    path: /transaction/token-status
    method: GET
- name: payment_account
  endpoint:
    path: /reference/get-payment-account
    method: POST
- name: create_payment_account
  endpoint:
    path: /reference/create-payment-account
    method: POST
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Redirect
  endpoint:
    path: /reference/3d-secure-redirect
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: checkout_transaction
  endpoint:
    path: /Checkout
    method: POST
    data_selector: object
    params: {}
- name: Checkout
  endpoint:
    path: /Checkout
    method: POST
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: 3D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: customer_registration
  endpoint:
    path: /customerservice/api/v5/customer/autoregistration
    method: POST
    data_selector: json
    params: {}
- name: customer_autoregistration
  endpoint:
    path: /customerservice/api/v5/customer/autoregistration
    method: POST
- name: standalone_pin_entry_device_state_notification
  endpoint:
    path: /customerservice/api/v5/standaloneped/statenotification
    method: POST
- name: enable_stand_alone_pin_entry_device
  endpoint:
    path: /customerservice/api/v5/standaloneped/enable
    method: PUT
- name: standalone_pin_entry_device
  endpoint:
    path: /customerservice/api/v5/standaloneped/enable
    method: PUT
- name: standalone_pin_entry_device
  endpoint:
    path: /customerservice/api/v5/standaloneped/disable
    method: PUT
- name: standalone_pin_entry_device_terminate
  endpoint:
    path: /customerservice/api/v5/standaloneped/terminate
    method: PUT
- name: disable_stand_alone_pin_entry_device
  endpoint:
    path: /disable-stand-alone-pin-entry-device-1
    method: PUT
- name: activate_tms_for_stand_alone_pin_entry_device
  endpoint:
    path: /invoke-tms-on-stand-alone-pin-entry-device
    method: PUT
- name: Activate TMS for Stand-alone Pin Entry Device
  endpoint:
    path: /customerservice/api/v5/standaloneped/tms
    method: PUT
- name: terminate_stand_alone_pin_entry_device
  endpoint:
    path: /standaloneped/tms
    method: PUT
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Three D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: Errors
  endpoint:
    path: /reference/fault-response-codes
    method: GET
- name: Settlement
  endpoint:
    path: /reference/settlement-processor
    method: GET
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: CardTransactionResponse
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: POST
    data_selector: ResponseCode
    params: {}
- name: GetPedInfoRequest
  endpoint:
    path: /reference/getpedinforequest-element
    method: GET
- name: GetPedInfoRequest
  endpoint:
    path: /reference/getpedinforequest-element
    method: POST
    data_selector: GetPedInfoResponse
- name: TransactionConfig
  endpoint:
    path: /reference/transactionconfig-element-1
    method: POST
    data_selector: TransactionConfig
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: GetPedInfo
  endpoint:
    path: /reference/getpedinforequest-element
    method: GET
- name: GetLatestPedUpdate
  endpoint:
    path: /reference/getlatestpedupdaterequest-element
    method: GET
- name: GetLatestPedUpdateRequest
  endpoint:
    path: /reference/getlatestpedupdaterequest-element
    method: GET
- name: GetLatestPedUpdateRequest
  endpoint:
    path: /GetLatestPedUpdateRequest
    method: POST
    data_selector: pedUpdateRequest
- name: GetPedInfoResponse
  endpoint:
    path: /GetPedInfoResponse
    method: GET
    data_selector: pedInfo
- name: GetLatestPedUpdateResponse
  endpoint:
    path: /reference/getlatestpedupdaterequest-element
    method: GET
- name: GetLatestPedUpdateResponse
  endpoint:
    path: /reference/getlatestpedupdateresponse-element
    method: GET
    data_selector: ResponseCode
    params: {}
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: Tokenize a Card
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: GetLatestPedUpdateResponse
  endpoint:
    path: /reference/getlatestpedupdateresponse-element
    method: GET
    data_selector: records
    params: {}
- name: UpdatePedResponse
  endpoint:
    path: /reference/updatepedresponse-element
    method: POST
    data_selector: records
    params: {}
- name: UpdatePedResponse
  endpoint:
    path: /reference/updatepedresponse-element
    method: GET
    data_selector: records
- name: UpdatePedRequest
  endpoint:
    path: /reference/updatepedrequest-element
    method: GET
    data_selector: records
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionusing-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: Tokenize a Card
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: UpdatePedResponse
  endpoint:
    path: /reference/updatepedresponse-element
    method: GET
- name: ForcePedUpdateResponse
  endpoint:
    path: /reference/forcepedupdateresponse-element
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: ForceUpdatePedRequest
  endpoint:
    path: /reference/forceupdatepedrequest-element
    method: POST
- name: IccTransactionRequest
  endpoint:
    path: /reference/icctransactionrequest-element
    method: POST
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: IccTransactionRequest
  endpoint:
    path: /reference/icctransactionrequest-element
    method: POST
    data_selector: TransactionConfig
- name: ForcePedUpdateResponse
  endpoint:
    path: /reference/forcepedupdateresponse-element
    method: GET
    data_selector: ForcePedUpdateResponse
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: Tokenize a Card
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: IccTransactionResponse
  endpoint:
    path: /reference/icctransactionresponse-element
    method: GET
    data_selector: ResponseCode
    params: {}
- name: IccTransactionResponse
  endpoint:
    path: /reference/icctransactionresponse-element
    method: GET
- name: PayAtTableLoginResponse
  endpoint:
    path: /reference/payattableloginresponse-element
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: PayAtTableLoginResponse
  endpoint:
    path: /reference/payattable-login-element
    method: GET
    data_selector: ResponseCode
    params: {}
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: PayAtTableItemisedCheckRequest
  endpoint:
    path: /reference/payattableitemisedcheckrequest-element
    method: GET
    data_selector: records
- name: PayAtTableItemisedCheck
  endpoint:
    path: /reference/payattableitemizedcheck
    method: GET
    data_selector: ResponseCode
    params: {}
- name: PayAtTableCheckInfoRequest
  endpoint:
    path: /reference/payattablecheckinforequest-element
    method: POST
    data_selector: CheckInfo
    params: {}
- name: PayAtTableCheckInfo
  endpoint:
    path: /reference/payattablecheckinforequest-element
    method: GET
- name: CheckInfo
  endpoint:
    path: /reference/checkinfo-complex-type
    method: GET
    data_selector: CheckInfo
- name: PayAtTableDisconnectRequest
  endpoint:
    path: /reference/payatabledisconnectrequest-element
    method: POST
- name: PayAtTableDisconnectRequest
  endpoint:
    path: /payattabledisconnectrequest
    method: POST
    data_selector: PayAtTableDisconnectRequest
    params: {}
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: Tokenize a Card
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: PayAtTableDisconnectResponse
  endpoint:
    path: /reference/payattabledisconnectresponse-element
    method: GET
    data_selector: ResponseCode
    params: {}
- name: PayAtTablePostPaymentRequest
  endpoint:
    path: /reference/payattablepostpaymentrequest-element
    method: POST
- name: PayAtTablePostPaymentRequest
  endpoint:
    path: /payattable/postpayment
    method: POST
    data_selector: response
    params: {}
- name: PayAtTablePostPaymentResponse
  endpoint:
    path: /payattablepostpaymentresponse
    method: GET
    data_selector: ResponseCode
    params: {}
- name: PayAtTablePostPaymentRequest
  endpoint:
    path: /payattablepostpaymentrequest
    method: POST
    data_selector: ResponseMessage
    params: {}
- name: TokenReferralRequest
  endpoint:
    path: /reference/tokenreferralrequest-element
    method: GET
- name: TransactionConfig
  endpoint:
    path: /transaction/config
    method: POST
    data_selector: TransactionConfig
    params: {}
- name: Token
  endpoint:
    path: /transaction/token
    method: GET
    data_selector: Token
    params: {}
- name: TokenRefundRequest
  endpoint:
    path: /reference/tokenrefundrequest-element
    method: POST
    data_selector: TokenRefundRequest
    params: {}
- name: TokenReferralRequest
  endpoint:
    path: /reference/tokenreferralrequest-element
    method: POST
    data_selector: TokenReferralRequest
    params: {}
- name: TokenReversalRequest
  endpoint:
    path: /reference/tokenreversalrequest-element
    method: POST
    data_selector: TokenReversalRequest
    params: {}
- name: TokenReversalRequest
  endpoint:
    path: /reference/tokenreversalrequest-element
    method: GET
- name: TokenSettlementRequest
  endpoint:
    path: /reference/tokensettlementrequest-element
    method: GET
- name: TokenSettlementRequest
  endpoint:
    path: /transaction/tokenSettlementRequest
    method: POST
    data_selector: TransactionConfig
    params: {}
- name: TokenReversalRequest
  endpoint:
    path: /transaction/tokenReversalRequest
    method: POST
    data_selector: TransactionConfig
    params: {}
- name: TokenTopupRequest
  endpoint:
    path: /transaction/tokenTopupRequest
    method: POST
    data_selector: TransactionConfig
    params: {}
- name: TokenTopupRequest
  endpoint:
    path: /tokentopuprequest
    method: POST
- name: TokenSettlementRequest
  endpoint:
    path: /tokensettlementrequest
    method: POST
- name: QueryPedRequest
  endpoint:
    path: /querypedrequest
    method: POST
- name: QueryPedRequest
  endpoint:
    path: /reference/querypedrequest-element
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionusing-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: PedEndpointAddress
  endpoint:
    path: /pedendpointaddress
    method: GET
    data_selector: pedEndpointAddress
- name: QueryPedResponse
  endpoint:
    path: /reference/querypedresponse-element
    method: GET
- name: QueryPedRequest
  endpoint:
    path: /reference/querypedrequest-element
    method: GET
    data_selector: records
    params: {}
- name: QueryPosResponse
  endpoint:
    path: /reference/queryposresponse-element
    method: GET
    data_selector: records
    params: {}
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionusing-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: PayPal
  endpoint:
    path: /reference/paypal-documentation
    method: GET
- name: Detached / Unlinked Refunds
  endpoint:
    path: /reference/detached-unlinked-refunds
    method: GET
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: Error Response
  endpoint:
    path: /reference/errorresponse-element
    method: GET
- name: QueryTransactionRequest
  endpoint:
    path: /reference/querytransactionrequest-element
    method: GET
- name: QueryTransactionRequest
  endpoint:
    path: /reference/querytransactionrequest-element
    method: POST
- name: QueryPosResponse
  endpoint:
    path: /reference/queryposresponse-element
    method: GET
- name: RestartPedRequest
  endpoint:
    path: /reference/restartpedrequest-element
    method: POST
- name: RestartPedRequest
  endpoint:
    path: /reference/restartpedrequest-element
    method: GET
- name: RestartPedRequest
  endpoint:
    path: /reference/restartpedrequest-element
    method: POST
- name: QueryTransactionRequest
  endpoint:
    path: /reference/querytransactionrequest-element
    method: POST
- name: RestartPedResponse
  endpoint:
    path: /reference/restartpedresponse-element
    method: GET
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: CheckInfo
  endpoint:
    path: /CheckInfo
    method: GET
    data_selector: CheckInfo
    params: {}
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: 3D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: CustomerPresent
  endpoint:
    path: /reference/customer-present-complex-type
    method: GET
    data_selector: records
    params:
      CustomerPresent: optional
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: DccReceiptInfo
  endpoint:
    path: /dccreceiptinfo
    method: GET
    data_selector: records
- name: TcpEndpointAddress
  endpoint:
    path: /reference/tcpendpointaddress-complex-type
    method: GET
- name: SerialEndpointAddress
  endpoint:
    path: /reference/serialendpointaddress-complex-type
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: 3D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: GetPedInfoResponse
  endpoint:
    path: /v1.0/reference/getpedinforesponse-element
    method: GET
    data_selector: records
- name: IccTransactionResponse
  endpoint:
    path: /v1.0/reference/icctransactionresponse-element
    method: GET
    data_selector: records
- name: ReceiptInfo
  endpoint:
    path: /reference/receiptinfo-complex-type
    method: GET
    data_selector: records
- name: Line
  endpoint:
    path: /reference/text-complex-type
    method: GET
    data_selector: Line
    params:
      constraint: Mandatory
- name: '@ break'
  endpoint:
    path: /reference/text-complex-type
    method: GET
    data_selector: '@ break'
    params:
      constraint: Optional
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: PayPal
  endpoint:
    path: /reference/paypal-documentation
    method: GET
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionusing-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: TcpEndpointAddress
  endpoint:
    path: /reference/tcpendpointaddress-complex-type
    method: GET
    data_selector: details
    params: {}
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: TransactionConfig
  endpoint:
    path: /reference/transactionconfig-element-1
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/complex-types
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Three D Secure Service
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: Icc
  endpoint:
    path: /reference/capturemethod-simple-type/Icc
    method: GET
- name: IccFallback
  endpoint:
    path: /reference/capturemethod-simple-type/IccFallback
    method: GET
- name: OnDeviceContactless
  endpoint:
    path: /reference/capturemethod-simple-type/OnDeviceContactless
    method: GET
- name: IccContactless
  endpoint:
    path: /reference/capturemethod-simple-type/IccContactless
    method: GET
- name: MsrContactless
  endpoint:
    path: /reference/capturemethod-simple-type/MsrContactless
    method: GET
- name: Swiped
  endpoint:
    path: /reference/capturemethod-simple-type/Swiped
    method: GET
- name: Keyed
  endpoint:
    path: /reference/capturemethod-simple-type/Keyed
    method: GET
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionusing-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Card Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: PayPal
  endpoint:
    path: /reference/paypal-documentation
    method: GET
- name: 3D Secure 2.0 Pre Authentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: 3D Secure 2.0 Authentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: 3D Secure 2.0 Challenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: 3D Secure Status
  endpoint:
    path: /reference/3d-secure-status
    method: GET
- name: Tokenize a Card
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Transaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: PublicKeyService
  endpoint:
    path: /reference/public-key
    method: GET
- name: SingleUseTokenService
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: TransactionService
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: TokenVaultService
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: CheckoutService
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: CustomerService
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpayPOS
  endpoint:
    path: /reference/complex-types
    method: GET
- name: Line
  endpoint:
    path: /reference/line-simple-type
    method: GET
    data_selector: records
- name: PublicKeyRequest
  endpoint:
    path: /reference/public-key
    method: GET
- name: SingleUseTokenTransaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: CardTransaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: TokenTransactionStatus
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReferenceStatus
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-transactionreference
    method: GET
- name: SingleUseTokenStatus
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: APMTransaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: APMTransactionStatus
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: PayPal
  endpoint:
    path: /reference/paypal-documentation
    method: GET
- name: DetachedUnlinkedRefunds
  endpoint:
    path: /reference/detached-unlinked-refunds
    method: GET
- name: ThreeDSecurePreAuthentication
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: ThreeDSecureAuthentication
  endpoint:
    path: /reference/3d-secure-2-authentication
    method: POST
- name: ThreeDSecureChallenge
  endpoint:
    path: /reference/3d-secure-2-challenge
    method: POST
- name: ThreeDSecureRedirect
  endpoint:
    path: /reference/3d-secure-redirect
    method: POST
- name: TokenizeCard
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: ProcessingCheckoutTransaction
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: CustomerRegistration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Three D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/complex-types
    method: GET
- name: Public Key Request
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReference Transaction Status
  endpoint:
    path: /reference/get-details-of-a-transactionusing-a-transactionreference
    method: GET
- name: SingleUseToken Transaction Status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: Alternative Payment Method (APM) Transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: Alternative Payment Method (APM) Transaction Status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: Three D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/complex-types
    method: GET
- name: Errors
  endpoint:
    path: /reference/fault-response-codes
    method: GET
- name: CreatePed
  endpoint:
    path: /CreatePed
    method: POST
    data_selector: object
    params: {}
- name: create_ped
  endpoint:
    path: /CreatePed
    method: POST
    data_selector: object
- name: dispose_ped
  endpoint:
    path: /DisposePed
    method: POST
    data_selector: object
- name: dispose
  endpoint:
    path: /Dispose
    method: POST
    data_selector: json
- name: dispose
  endpoint:
    path: /Dispose
    method: POST
    data_selector: null
    params: {}
- name: public_key_request
  endpoint:
    path: /reference/public-key
    method: GET
- name: single_use_token_transaction
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: card_transaction
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: token_transaction_status
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: transaction_reference_status
  endpoint:
    path: /reference/get-details-of-a-transactionreference
    method: GET
- name: single_use_token_status
  endpoint:
    path: /reference/get-details-of-a-singleusetoken
    method: GET
- name: apm_transaction
  endpoint:
    path: /reference/processing-a-transaction-using-an-alternative-payment-method
    method: POST
- name: apm_transaction_status
  endpoint:
    path: /reference/get-details-of-an-apm-transaction-using-a-transactionreference
    method: GET
- name: paypal
  endpoint:
    path: /reference/paypal-documentation
    method: GET
- name: customer_registration
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Three D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/complex-types
    method: GET
- name: Ped Emulator
  endpoint:
    path: /reference/createped
    method: POST
- name: Errors
  endpoint:
    path: /reference/fault-response-codes
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: ANYpay POS
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: Public Key Service
  endpoint:
    path: /reference/public-key
    method: GET
- name: Single Use Token Service
  endpoint:
    path: /reference/request-a-single-use-token
    method: POST
- name: Transaction Service
  endpoint:
    path: /reference/processing-a-transaction-using-a-card-number
    method: POST
- name: Three D Secure Service
  endpoint:
    path: /reference/3d-secure-2-preauthentication
    method: POST
- name: Token Vault Service
  endpoint:
    path: /reference/token-vault-operations
    method: POST
- name: Checkout Service
  endpoint:
    path: /reference/processing-a-checkout-transaction
    method: POST
- name: Customer Service
  endpoint:
    path: /reference/processing-a-merchant-registration
    method: POST
- name: Ped Emulator
  endpoint:
    path: /reference/createped
    method: POST
- name: Errors
  endpoint:
    path: /reference/fault-response-codes
    method: GET
- name: CardTransactionResponse
  endpoint:
    path: /reference/cardtransactionresponse-element
    method: GET
- name: TokenTransactionStatus
  endpoint:
    path: /reference/get-details-of-a-transaction-using-a-tokenid
    method: GET
- name: TransactionReferenceStatus
  endpoint:
    path: /reference/get-details-of-a-transactionusing-a-transactionreference
    method: GET
- name: card_transaction
  endpoint:
    path: /transaction/card
    method: POST
    data_selector: CardTransactionResponse
    params: {}
notes:
- The decimal separator/radix character used is the Period ('.') used to indicate
  decimal places.
- ANYpay POS enables a merchant to do single stage authorization commonly known as
  a sale transaction and multi-stage authorization commonly known as the pre-authorization
  or 'pre-auth' scenario.
- ANYpay POS runs as a Service Application on a merchant’s POS, workstation or server
  with a windows or Linux operating system.
- The high level system architecture of ANYpay POS is shown in the following illustration
  when the merchant POS uses a TCP connection.
- Status messages are sent via a http call to a listening url on the merchant POS.
- The integration of a merchant's system with ANYpay POS is facilitated by socket
  based XML message interchange in accordance with an XML schema definition.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- AuthorizationConnectionType MUST be set to OnlineAuthorization
- TransactionType MUST be set to Sale
- TransactionType MUST be set to PreAuthorization
- If the final amount of the transaction is likely to exceed the amount of the PreAuthorization,
  a top-up can be done.
- The merchant's system sends a TokenTopupRequest message to ANYpay POS that contains
  the tokenized card number returned in the response to the original pre-authorization
  request.
- A transaction cannot be reversed after a TokenSettlementRequest message has been
  processed
- TransactionType MUST be set to Refund
- TokenisedCardNumber MUST be supplied
- TransactionReference is a reference to the Refund transaction
- TransactionType can be set to either Sale, Refund, or PreAuthorization
- KeyOnPed must be set to true
- CustomerPresent attribute must be set to true or false
- AuthorizationConnectionType can ONLY be set to OnlineAuthorization or OfflineAuthorization
- TransactionType can ONLY be set to Sale or PreAuthorization, all other transaction
  types will be rejected
- AuthorizationConnectionType MUST be set to OfflineAuthorization
- TransactionAmount MUST be set to 0.00
- This is currently only supported for merchants using Euronet
- 'TransactionTypes NOT supported include: TopUp, Capture, Activation, VoidActivation,
  RedemptionNoNsf, VoidRedemption, BalanceEnquiry, Cashout'
- Transactions captured using Online PIN are NOT supported
- Cards swiped with an expired card are NOT supported
- Debit Cards will NOT be supported if the merchant has Store and Forward disabled
  for Debit cards
- The Store and Forward Ceiling Amount is decided by the merchant.
- 'TransactionTypes NOT supported include: TopUp, Capture, Activation, VoidActivation,
  RedemptionNoNsf, VoidRedemption, BalanceEnquiry, Cashout.'
- Partial reversals may not be supported by your acquirer.
- Any over authorised funds will be dealt with by the acquirer and card scheme.
- The merchant may receive a 'referred' response to an online sale authorization request.
- CardOnFileIndicator MUST be set to CardDetailsStoredFirstTime
- ReturnCardSchemeReference MUST be set to True for subsequent Stored Credential transactions
- Check Numbers must range from 1 to 99999999 (Max 8 chars)
- Check Numbers can be alphanumeric (1001A)
- Check Numbers can contain special characters (1001-A)
- Either a CheckNumber or TableNumber MUST be present in the PayAtTableCheckInfoRequest
  message
- Check Numbers must range from 1 to 99999999 (Max 8 chars) and can be alphanumeric
- The merchant system is responsible for storing and keeping track of this data
- The merchant system is responsible for closing a Check once the outstanding balance
  had been successfully completed
- A ANYpay POS query enables a merchant to check the status of an ANYpay POS instance
  before a transaction is invoked.
- A Restart PIN Entry Device request enables a merchant to remotely restart a PIN
  Entry Device for maintenance.
- Update Ped Request only when terminal packages are different to those installed
- A Force Update PED request message will overwrite all terminal packages on the PIN
  Entry Device that have been requested.
- Basic authentication is a authentication scheme built into the HTTP protocol.
- A 401 “Unauthorized” response will be returned if the username or password is incorrect.
- In this section you will learn how to process the different types of card transactions
  using the ANYpay Gateway
- Key elements of a Sale transaction request message must include type set to ecom.sale
  or mailorder.sale.
- Type MUST be set to 'ecom.topUp' or 'mailorder.topUp'
- clientSystemInvoiceId must match the associated PreAuthorization transaction
- A reversal in a Hospitality environment reverses the entire transaction and NOT
  the amount specified in the request.
- Partial Reversals are currently NOT supported by Elavon or PXP Financial Acquiring.
- Key elements of an Account Verification transaction request message include 'Type'
  set to ecom.accountVerification or mailorder.accountVerification. Amount is NOT
  required.
- Uses Basic Authentication
- Type MUST be set to Encryption
- The duration of expiresAt field is a configurable field
- A merchant can choose the frequency of how often they wish to retrieve a new Public
  API Key, this is also dependent on when the Public API Key expires
- 'PCI Level 1 Certified: ANYpay Checkout reduces the PCI scope for a merchant as
  card data is securely captured outside of the merchant''s environment.'
- Default skin has PXP's branding.
- Merchant must provide logo.png file with dimensions 223x95 pixels and bit depth
  of 32.
- To avoid cliff edge impact, Issuers within the EEA will begin a phased enforcement
  and begin to gradually 'soft decline' a small number of transactions without SCA,
  slowly ramping it up as we approach the respective deadlines.
- Where an exemption is applied successfully without SCA, liability will be shifted
  to the merchant.
- PXP's default SCA Policy is 1 for all merchants, however if a merchant requires
  a different policy set, then this can be requested during initial set up.
- Alternatively, this can be dynamically set for each transaction by including it
  in the 3D Secure 2.0 Pre Authentication requests under scaDetails.scaPolicy.
- scaDetails object is not yet available for either the request or response.
- If no response is received by the ACS within 10 seconds, then proceed without the
  Fingerprint response data.
- The field 'creq' MUST be lowercase when POSTing to the challengeRedirectUrl.
- If isAutoAuthorisationRequired is set to true, PXP will automatically analyse the
  3D Secure response following authentication.
- Merchant's backend system can send GET requests at configured intervals to monitor
  the 3D Secure process.
- Some objects may return nulls in deeply nested fields
- CustomerId must be obtained from PXP Financial.
- PXP Financial will post a JSON Stand-alone Pin Entry Device State Notification request
  message to the merchant's system advising of state for the Stand-alone Pin Entry
  Device following a Registration or reseed of the device.
- An empty body will be returned upon success
- PXP does not provide a health check API and customers should subscribe for notifications
  on operational status of PXP services using our Status Page.
- Enables a merchant to return the status of a transaction using a token associated
  with a previous transaction
- merchantId is a unique customer ID allocated by PXP Financial
- clientSystemTransactionId is the merchant's own unique reference for the transaction
- PosConfigurationServiceHost must be set to the url of the PosConfigurationService
  in order to authenticate the ANYpay TMS Client
- If a user account is either blocked or newly created, it is requirement to either
  unlock the user or update the password.
- The ANYpay TMS Client session will expire after 15 minutes of no activity (excluding
  any TMS queries running).
- Requires setup of connected app in api
- Make sure PED configuration (Template/Group/PED) setup correctly
- TCPPROTOCOL must be set to True for TCP connectivity
- HTTPSPROTOCOL must be set to True for HTTPS connectivity
- HTTPPROTOCOL must be set to True for HTTP connectivity
- This should be used in conjunction with a migration file process so that PXP has
  knowledge of the Paypal Transactions that are available to Refund during the migration
  period.
- Updated over 7 years ago
- Updated over 6 years ago
- Only returned in the response of a GET Transaction or GET apmTransaction.
- Only returned in the response of a GET apmTransaction.
- Only applicable for Klarna.
- Merchants must retain the Card Scheme Reference from the Initial Recurring Transaction
  and return it on the Subsequent Recurring Transactions.
- SCA Exemptions cannot be used with the SCA Challenge Indicator
- The decimal separator used is the Period ('.') used to indicate decimal places.
- Various authentication/account verification statuses are defined.
- Challenge Indicators only apply to 3D Secure 2.0 only and are version dependant.
- If a preference is supplied which is not yet supported by the card issuer, then
  it cannot not be applied.
- SCA Challenge Indicator cannot be used with the SCA Exemptions.
- Exemptions will be applied by PXP where possible (Default if not supplied)
- The exemption will be applied during the authentication stage of 3D Secure 2.0 (If
  supported)
- The exemption will be flagged in the authorisation stage, bypassing 3D Secure 2.0
- Ensure the website is served over HTTPS for Apple Pay to work.
- Device must be compatible with Apple Pay requirements.
- What happens when the call to the `runApplePay()` function returns an error?
- Upon a failed call to the `runApplePay()` function - that is, upon the script returning
  an error in processing the payment - the error data will be sent to the merchant
  from the PXP payment processing backend servers. This should allow the merchant
  to further work with the errors received.
- Ensure that your site is served over HTTPS, as Google Pay requires a secure connection.
- Merchant must provide their own button for Google Pay integration.
- By integrating the Google Pay API, you must accept the Google Pay API Terms of Service.
- 3DS authentication is required for PAN_ONLY cards
- The decimal separator/radix character used is the Period ('.') used to indicate
  decimal places. Other characters such as Comma (',') will not be recognised and
  may result in an unintended amount being processed.
- Merchant's own unique reference for the request is mandatory and has a max length
  of 50.
- The response message from the acquirer or ANYpay service is mandatory and has a
  max length of 255.
- The fault response code is mandatory and has a max length of 7.
- Public Key Service for secure transactions
- Single Use Token Service for transaction processing
- ResponseCode is mandatory
- FaultResponseCode is optional
- This is the object that describes how to connect to the PIN Entry Device
- Reference is the merchant's own unique reference for the request
- AuthorizationConnectionType must be set to OnlineAuthorization
- ResponseCode indicates the result of the processing operation
- ResponseMessage provides a human readable message from the acquirer or the ANYpay
  service
- FaultResponseCode indicates the reason when the response code is an 'Error'
- ResponseMessage describes the Response Code
- SessionId is associated to a single Pay at Table transaction
- A minimum of 4 digits is required for CheckNumber starting at 1000.
- A minimum of 4 alphanumerics is required for TableNumber.
- SessionId is mandatory and has a length of 36.
- ResponseMessage is mandatory with a max length of 255
- ReceiptPrintData is mandatory
- This object describes information about the check or table number
- A minimum of 4 digits is required for CheckNumber and TableNumber.
- This is the response code indicating the result of the processing operation
- This is the monetary value of the outstanding balance for a Check in minor units
- Requires setup of credentials for ANYpay
- Requires setup of connected app in ANYpay
- This is a reference for requesting the status of a PIN Entry Device
- Either an 'INUSE' or 'NOTINUSE' will be returned
- Optional fields include Status, Selected, TransactionAmount, ExchangeRate, Disclosure,
  Logo, AuthorizedTransactionAmount, RateDate, RateSource, MarkupPercentage, MarkUpText.
- SerialNumber is always returned in an IccTransactionResponse message if the transaction
  was captured on a Pin Entry Device
- SerialNumber is always returned in a GetPedInfoResponse message
- This is the line that defines what will be printed on a receipt
- This is only required when more than one receipt is returned
- CustomerCode is a mandatory field with a maximum length of 3.
- Site is a mandatory field with a maximum length of 15.
- Culture is a mandatory field with a maximum length of 2.
- Workstation is a mandatory field with a maximum length of 50.
- MerchantId is a mandatory field with a maximum length of 20.
- Username is a mandatory field with a maximum length of 50.
- Password is a mandatory field with a maximum length of 50.
- IpAddress is a mandatory field with a maximum length of 15.
- The method used to authorize the transaction can be Online, Manual, or Pseudo.
- The handshaking protocol. The default value is none
- The default value is none
- The standard number of stop bits per byte. The default value is 1
- Updated almost 5 years ago
- ResponseCode is mandatory.
- ResponseMessage is mandatory.
- ReceiptInfo is mandatory.
- Token is mandatory.
- TokenizedCardNumber is mandatory.
errors:
- 'ResponseCode: Approved'
- 'ResponseCode: Declined'
- 'AuthorisationResponseCode: 3030 indicates an Authorised response'
- 'AuthorisationResponseCode: 3035 indicates a Declined response'
- 'FaultResponseCode: Check for authorization issues or invalid parameters.'
- 'ResponseCode: Handle response codes accordingly.'
- 'FaultResponseCode: Check the request parameters'
- 'ResponseCode: Ensure the transaction type is valid'
- 'ResponseCode: Authorised'
- 'FaultResponseCode: 0'
- 'DECLINED: Transaction declined by the bank'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'ApprovedRangeSpecified: Connection to ANYpay Gateway for authorization has failed.'
- User 001 invalid
- General Error
- 'FaultResponseCode 5: Itemised Check Not Found'
- 'FaultResponseCode 7: General Error'
- '2: Check not found'
- '16: Check is already opened on device'
- '7: General Error'
- 'ResponseCode: Error and a valid FaultResponseCode being returned if processing
  fails'
- 'ResponseCode: Error AND the ReversePostPaymentFailure flag is enabled for the merchant
  then a Reversal will be invoked to cancel the transaction.'
- 'ResponseCode: Error, FaultResponseCode: 4, ResponseMessage: User 001 invalid'
- 'ResponseCode: Error, FaultResponseCode: 7, ResponseMessage: General Error'
- User {} invalid
- Check/Table {} not found
- Unable to close check {0}
- Itemised check {} not found
- Device not registered
- Check {} already paid
- Check {} is already open on device {}
- 'FaultResponseCode: 0 - Successful response'
- 'FaultResponseCode: 1 - General error'
- 'FaultResponseCode: 2 - Invalid request'
- '4001150: Couldn''t find transactions for merchantId'
- 'ResponseCode: Success'
- 'ResponseMessage: Packages Downloaded'
- 'ResponseCode: Success - Update Complete'
- '401 Unauthorized: Recheck username or password'
- '4017740: Invalid username or password'
- 'Soft decline: Issuer informing you that you need to step up and perform SCA before
  re-attempting the transaction.'
- code: '4000340'
  details:
    message: Unable to verify enrollment status of card
- 'ChallengeNotAuthenticated: Card authentication failed'
- 'ChallengeRejected: Card authentication failed'
- '4011930: Merchant id is invalid'
- '4087640: Couldn''t find transaction for merchantId: BDD, requestId: 57bc8107-0482-488d-8c0c-5021042124f'
- An unexpected error occurred during the authentication process. Details of the error
  will be included in the API response
- '200 OK: A 200 OK Response will return an empty body'
- '412 Precondition Failed: Customer Code does not exist'
- Error when registering a Stand-alone Pin Entry Device
- '200 OK: An empty body will be returned'
- '412 Precondition Failed: Stand-alone Pin Entry Device for merchant id 11111111
  and terminal id 11111111 failed to activate TMS'
- '412 Precondition Failed: Stand-alone Pin Entry Device for merchant id 11111111
  and terminal id 11111111 failed to enable'
- 200 OK
- 412 Precondition Failed
- '412 Precondition Failed: Stand-alone Pin Entry Device for merchant id 11111111
  and terminal id 11111111 failed to terminate'
- An excessive amount of blocked/malformed/invalid requests may lead to your IP being
  blacklisted and affect transaction processing.
- '200 OK: Successful request'
- '400 Bad Request: Invalid parameters'
- '401 Unauthorized: Authentication failure'
- '400: Bad request. Client supplied invalid input.'
- '401: Unauthorized. In this case WWW-Authenticate response header contains the allowed
  authorization schemes.'
- '403: Forbidden. Unsupported version of client application is contacting the API.
  Update client application to fix this.'
- '404: NotFound. This happens when the resource does not exist or the user does not
  have the permission to access the resource.'
- '405: MethodNotAllowed. Request HTTP method not expected.'
- '406: NotAcceptable. Client is trying to execute not allowed action.'
- '412: PreconditionFailed. For example user does not have enough funds to make a
  transaction.'
- '419: Authentication token expired. Re-authenticate the user to fix this.'
- '423: Account Locked. This happens if the user exceeded the number of incorrect
  authentication attempts.'
- '500: InternalServerError. See the additional info in the response body.'
- '401 Unauthorized: Recheck username or password.'
- 400 - Result
- 412 - Result
- '200: Success'
- '200: array of objects'
- '400: Result'
- 401 Unauthorized
- 404 Not Found
- Fault Response Codes
- 'RefundLimitExceeded: Refund amount exceeded! Deposit amount = 40.0000; Refunded
  amount = 40.0000; Max refundable amount = 0.0000; Refund amount = 1.00'
- 'SchemaValidationError: The MerchantId field is required.'
- URL expired after 30 days.
- '200: Successful authentication'
- '200: ChallengeAuthenticated - Authorised'
- '200: Attempted'
- '200: Unavailable'
- 200 - ChallengeAuthenticated
- 200 - ChallengeNotAuthenticated
- 200 - Authorised - (isAutoAuthorisationRequired = True)
- 200 - ChallengeRejected
- 200 - Attempted
- 200 - Unavailable
- '401 Unauthorized: object'
- '404 Not Found: object'
- '400 Bad Request: Check the request parameters and their validity.'
- 'GeneralValidationError: The Token field is required.'
- 'OFFER_INVALID: Promotional code is invalid'
- 'PAYMENT_DATA_INVALID: Payment data is invalid'
- 'SHIPPING_ADDRESS_INVALID: Provided shipping address is invalid'
- 'SHIPPING_ADDRESS_UNSERVICEABLE: Shipping address cannot be serviced'
- 'SHIPPING_OPTION_INVALID: Selected shipping option is invalid'
- 'URL Expired: The URL for this request expired after 30 days.'
- 'Error: Check the FaultResponseCode for details'
- 'Error: FaultResponseCode'
- 'Error: ResponseCode'
- '4107940: {responseCode}{spacer}{message}'
- '6000100: Validation of BatchInformation has failed -> {0}'
- '6000200: Unable To Store Batch Event'
- '6000300: Unable To Store Transaction Event'
- '6000400: Settlement Service Controller Exception'
- '6000500: Unable To Get TransactionIds For Batch {0}'
- '6000600: UnableTo Parse InternalTransaction json for {0}'
- '6000700: Unable To Store File {0} To Local Storage'
- '6000800: Local Storage File {0} Already Exists'
- '6000900: Local Storage Unable To Write Contents To File {0}'
- '6001000: Local Storage Unable To Move File From {0} To {1}'
- '6001100: More Than One Currency For Merchant {0} -> {1}'
- '6001200: More Than One Retailer -> {0}'
- '6001300: CvmResults Are Null On IccTransaction'
- '6001400: Unable To Parse CvmResults On IccTransaction'
- '6001500: Unrecognised CaptureMethod {0}'
- '6001600: General Error Constructing Section Composite {0}'
- '6001700: General Error Constructing Transaction Composite {0}'
- '6001800: General Error Constructing Transaction Leaf {0}'
- '6001900: General Error Constructing Transaction Section Leaf {0}'
- '6002000: Transaction {0} is not unique'
- '6002100: Simple Transactions Function Section Leaf Unable To Run Function'
- '6002300: All Transactions Failed To Build'
- '6002400: Unable to get status of batch id {0}'
- '6002500: Unable to get status of transaction id {0}'
- '6002600: Unable to set batch {0} to be sent in Local Storage Manager'
- '6002700: Unable to Send Batch File Via Sftp'
- '6002800: Unable to find transactions waiting to be confirmed for batch {0}'
- '6002900: Unable to find transaction {0} for batch {1}'
- '6003000: Local Storage File {0} Does Not Exist'
- '6003100: Unable to set batch {0} to be cancelled in Local Storage Manager'
- '6003200: Unable to set batch {0} to be confirmed in Local Storage Manager'
- '6003300: More Than One sort code For Merchant {0} -> {1}'
- '6003400: More Than One account number For Merchant {0} -> {1}'
- '6003500: More Than One Terminal No -> {0}'
- '6003600: More Than One Merchant No {0} -> {1}'
- '6003700: Invalid Customer Instructions'
- '7001030: Luhn check failure'
auth_info:
  mentioned_objects:
  - DccStatus
  - DccSelected
  - Money
  - AuthorizationConnectionType
  - AuthorityMethod
client:
  base_url: https://api-integration.pxp-solutions.net
  headers:
    Accept: application/json
source_metadata: null
