resources:
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /api/v1/services
    method: GET
    data_selector: services
    params: {}
- name: incident_workflow_actions
  endpoint:
    path: /actions/docs
    method: GET
- name: AWS_Invoke_a_Lambda_Function
  endpoint:
    path: /actions/docs/aws-invoke-a-lambda-function
    method: GET
- name: AWS_Get_CloudWatch_Logs_by_Query
  endpoint:
    path: /actions/docs/aws-get-cloudwatch-logs-by-query
    method: GET
- name: Azure_Invoke_an_Azure_Function
  endpoint:
    path: /actions/docs/azure-invoke-an-azure-function
    method: GET
- name: Datadog_Create_a_Graph_Snapshot
  endpoint:
    path: /actions/docs/datadog-create-a-graph-snapshot
    method: GET
- name: Datadog_Get_a_Monitor's_Details
  endpoint:
    path: /actions/docs/datadog-get-a-monitors-details
    method: GET
- name: Datadog_Get_the_Alerting_Monitor
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: Datadog_Search_Logs
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: Google_Meet_Create_a_Meeting
  endpoint:
    path: /actions/docs/google-meet-create-a-meeting
    method: GET
- name: JavaScript_Run_Code
  endpoint:
    path: /actions/docs/javascript-run-code
    method: GET
- name: Jeli_Create_A_Post-Incident_Review
  endpoint:
    path: /actions/docs/jeli-create-a-post-incident-review
    method: GET
- name: Jira_Cloud_Create_an_Issue_for_an_Incident
  endpoint:
    path: /actions/docs/jira-cloud-create-an-issue-for-an-incident
    method: GET
- name: Jira_Server_Create_an_Issue_for_an_Incident
  endpoint:
    path: /actions/docs/jira-server-create-an-issue-for-an-incident
    method: GET
- name: Lookup_Value_by_Key
  endpoint:
    path: /actions/docs/lookup-value-by-key
    method: GET
- name: Logic_Condition
  endpoint:
    path: /actions/docs/condition
    method: GET
- name: Logic_Delay
  endpoint:
    path: /actions/docs/delay
    method: GET
- name: Logic_Loop_Until
  endpoint:
    path: /actions/docs/loop-until
    method: GET
- name: Microsoft_Teams_Create_a_Dedicated_Chat_in_Microsoft_Teams
  endpoint:
    path: /actions/docs/create-a-dedicated-chat-in-microsoft-teams
    method: GET
- name: Microsoft_Teams_Create_Conference_Bridge_in_Microsoft_Teams
  endpoint:
    path: /actions/docs/create-conference-bridge-in-microsoft-teams
    method: GET
- name: PagerDuty_Advance_Add_PagerDuty_Advance_Scribe_Agent
  endpoint:
    path: /actions/docs/add-pagerduty-advance-scribe-agent
    method: GET
- name: PagerDuty_AIOps_Set_a_Cache_Variable_Value
  endpoint:
    path: /actions/docs/set-a-cache-variable-value
    method: GET
- name: PagerDuty_AIOps_Remove_from_a_Cache_Variable_Value
  endpoint:
    path: /actions/docs/remove-from-a-cache-variable-value
    method: GET
- name: PagerDuty_AIOps_Append_to_a_Cache_Variable_Value
  endpoint:
    path: /actions/docs/append-to-a-cache-variable-value
    method: GET
- name: PagerDuty_Incident_Management_Add_Conference_Bridge
  endpoint:
    path: /actions/docs/add-conference-bridge
    method: GET
- name: PagerDuty_Incident_Management_Add_Responders
  endpoint:
    path: /actions/docs/add-responders
    method: GET
- name: PagerDuty_Incident_Management_Add_Stakeholders
  endpoint:
    path: /actions/docs/add-stakeholders
    method: GET
- name: PagerDuty_Incident_Management_Get_Business_Service_Details
  endpoint:
    path: /actions/docs/get-business-service-details
    method: GET
- name: PagerDuty_Incident_Management_Get_On-Call_User_from_a_Schedule
  endpoint:
    path: /actions/docs/get-on-call-user-from-a-schedule
    method: GET
- name: PagerDuty_Incident_Management_Get_Users_on_a_Team
  endpoint:
    path: /actions/docs/get-users-on-a-team
    method: GET
- name: PagerDuty_Incident_Management_List_Impacted_Business_Services
  endpoint:
    path: /actions/docs/list-impacted-business-services
    method: GET
- name: PagerDuty_Incident_Management_List_Related_Change_Events_for_an_Incident
  endpoint:
    path: /actions/docs/list-related-change-events-for-an-incident
    method: GET
- name: PagerDuty_Incident_Management_Post_to_External_Status_Page
  endpoint:
    path: /actions/docs/post-to-external-status-page
    method: GET
- name: PagerDuty_Incident_Management_Reassign_the_Incident
  endpoint:
    path: /actions/docs/reassign-the-incident
    method: GET
- name: PagerDuty_Incident_Management_Run_an_Automation_Action
  endpoint:
    path: /actions/docs/run-an-automation-action
    method: GET
- name: PagerDuty_Incident_Management_Send_Status_Update
  endpoint:
    path: /actions/docs/send-status-update
    method: GET
- name: PagerDuty_Incident_Management_Wait_for_Status_to_Change
  endpoint:
    path: /actions/docs/wait-for-status-to-change
    method: GET
- name: PagerDuty_Incident_Management_Get_Service_Details
  endpoint:
    path: /actions/docs/get-service-details
    method: GET
- name: PagerDuty_Incident_Management_Get_Notes_for_an_Incident
  endpoint:
    path: /actions/docs/get-notes-for-an-incident
    method: GET
- name: PagerDuty_Incident_Management_List_Related_Change_Events_for_an_Incident
  endpoint:
    path: /actions/docs/list-related-change-events-for-an-incident
    method: GET
- name: PagerDuty_Incident_Management_Get_Alerts_for_an_Incident
  endpoint:
    path: /actions/docs/get-alerts-for-an-incident
    method: GET
- name: PagerDuty_Incident_Management_Get_User
  endpoint:
    path: /actions/docs/get-user
    method: GET
- name: PagerDuty_Incident_Management_Update_Incident_Type
  endpoint:
    path: /actions/docs/update-incident-type
    method: GET
- name: PagerDuty_Incident_Management_Set_Incident_Custom_Field
  endpoint:
    path: /actions/docs/set-incident-custom-field
    method: GET
- name: PagerDuty_Incident_Management_Add_Note_to_an_Incident
  endpoint:
    path: /actions/docs/add-note-to-an-incident
    method: GET
- name: PagerDuty_Incident_Management_Add_an_Impacted_Business_Service
  endpoint:
    path: /actions/docs/add-an-impacted-business-service
    method: GET
- name: PagerDuty_Incident_Management_Create_an_Incident
  endpoint:
    path: /actions/docs/create-an-incident
    method: GET
- name: PagerDuty_Incident_Management_Get_Status_Updates_for_an_Incident
  endpoint:
    path: /actions/docs/get-status-updates-for-an-incident
    method: GET
- name: Roles_Assign_a_Role
  endpoint:
    path: /actions/docs/assign-a-role-eim
    method: GET
- name: Roles_Unassign_a_Role
  endpoint:
    path: /actions/docs/unassign-a-role
    method: GET
- name: ServiceNow_ITSM_Create_an_Incident
  endpoint:
    path: /actions/docs/servicenow-itsm-create-an-incident
    method: GET
- name: Slack_Archive_Incident_Dedicated_Channel
  endpoint:
    path: /actions/docs/archive-a-slack-dedicated-channel
    method: GET
- name: Slack_Add_a_Bookmark
  endpoint:
    path: /actions/docs/add-a-bookmark
    method: GET
- name: Slack_Create_a_Slack_Channel_for_an_Incident
  endpoint:
    path: /actions/docs/create-a-slack-channel-for-an-incident
    method: GET
- name: Slack_Link_a_Slack_Channel_to_an_Incident
  endpoint:
    path: /actions/docs/link-a-slack-channel-to-an-incident
    method: GET
- name: Slack_Prompt_to_Add_a_Note_to_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-add-a-note-to-the-incident
    method: GET
- name: Slack_Prompt_to_Add_Responders_to_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-add-responders-to-the-incident
    method: GET
- name: Slack_Prompt_to_Escalate_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-escalate-the-incident
    method: GET
- name: Slack_Prompt_to_Reassign_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-reassign-the-incident
    method: GET
- name: Slack_Prompt_to_Run_an_Automation_Action_on_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-automation-action-on-the-incident
    method: GET
- name: Slack_Prompt_to_Run_an_Incident_Workflow_on_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-incident-workflow-on-the-incident
    method: GET
- name: Slack_Prompt_to_Send_a_Status_Update_for_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-send-a-status-update-for-the-incident
    method: GET
- name: Slack_Prompt_to_Update_Priority_on_the_Incident
  endpoint:
    path: /actions/docs/prompt-to-update-priority-on-the-incident
    method: GET
- name: Slack_Send_a_Direct_Message
  endpoint:
    path: /actions/docs/send-a-direct-message
    method: GET
- name: Slack_Send_an_Ephemeral_Message
  endpoint:
    path: /actions/docs/send-an-ephemeral-message
    method: GET
- name: Slack_Send_a_Message_to_a_Channel
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel
    method: GET
- name: Slack_Send_a_Message_to_a_Channel_with_an_Incident_Action
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel-with-an-incident-action
    method: GET
- name: Slack_Set_a_Channel_Topic
  endpoint:
    path: /actions/docs/set-a-channel-topic
    method: GET
- name: Slack_Rename_a_Slack_Channel
  endpoint:
    path: /actions/docs/rename-a-slack-channel
    method: GET
- name: Tasks_Create_a_Task
  endpoint:
    path: /actions/docs/create-a-task
    method: GET
- name: Tasks_Update_Task_Assignee
  endpoint:
    path: /actions/docs/update-task-assignee
    method: GET
- name: Tasks_Update_Task_Details
  endpoint:
    path: /actions/docs/update-task-details
    method: GET
- name: Tasks_Update_Task_Name
  endpoint:
    path: /actions/docs/update-task-name
    method: GET
- name: Tasks_Update_Task_Status
  endpoint:
    path: /actions/docs/update-task-status
    method: GET
- name: Text_Generate_Random_Positive_Adjective
  endpoint:
    path: /actions/docs/generate-random-positive-adjective
    method: GET
- name: Text_Generate_Random_Animal
  endpoint:
    path: /actions/docs/generate-random-animal
    method: GET
- name: Text_Generate_Random_Color
  endpoint:
    path: /actions/docs/generate-random-color
    method: GET
- name: Web_API_Send_DELETE_Request
  endpoint:
    path: /actions/docs/send-delete-request
    method: GET
- name: Web_API_Send_GET_Request
  endpoint:
    path: /actions/docs/send-get-request
    method: GET
- name: Web_API_Send_HEAD_Request
  endpoint:
    path: /actions/docs/send-head-request
    method: GET
- name: Web_API_Send_PATCH_Request
  endpoint:
    path: /actions/docs/send-patch-request
    method: GET
- name: Web_API_Send_POST_Request
  endpoint:
    path: /actions/docs/send-post-request
    method: GET
- name: Web_API_Send_PUT_Request
  endpoint:
    path: /actions/docs/send-put-request
    method: GET
- name: Web_API_Send_a_Webhook_POST
  endpoint:
    path: /actions/docs/send-a-webhook-post
    method: GET
- name: Zoom_Create_a_Zoom_Meeting
  endpoint:
    path: /actions/docs/create-a-zoom-meeting
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incident
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: post_incident_review
  endpoint:
    path: /api/v1/post_incident_reviews
    method: GET
    data_selector: reviews
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/v2/incidents
    method: POST
    data_selector: incident
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: Reopen Incidents
  endpoint:
    path: /main/docs/reopen-incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: incident_priority
  endpoint:
    path: /incidents
    method: GET
    data_selector: priorities
    params: {}
- name: incident_roles
  endpoint:
    path: /main/docs/incident-roles
    method: GET
    data_selector: roles
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: conference_bridge
  endpoint:
    path: /main/docs/jeli-api
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params:
      since: updated_at
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /api/v2/incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /api/v2/alerts
    method: GET
    data_selector: alerts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: country
  endpoint:
    path: /countries
    method: GET
    data_selector: records
- name: notification_phone_numbers
  endpoint:
    path: /notification_phone_numbers
    method: GET
    data_selector: notification_phone_numbers
    params: {}
- name: vCard
  endpoint:
    path: /pdpartner/PagerDuty+Outgoing+Numbers.vcf
    method: GET
    data_selector: numbers
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/v1/service_dependencies
    method: GET
    data_selector: dependencies
- name: incidents
  endpoint:
    path: /v2/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /v2/services
    method: GET
    data_selector: services
    params: {}
- name: custom_fields
  endpoint:
    path: /services/{service_id}/custom_fields
    method: GET
    data_selector: custom_fields
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: business_service
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: incidents
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /api/v1/services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Notification Rules
  endpoint:
    path: /main/docs/notification-rules
    method: GET
    data_selector: notification_rules
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: schedules
  endpoint:
    path: /main/docs/schedules
    method: GET
    data_selector: schedules
    params: {}
- name: schedules
  endpoint:
    path: /main/docs/schedules-list
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: escalation_policy
  endpoint:
    path: /escalation_policies
    method: GET
    data_selector: escalation_policies
- name: schedule
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: schedules
  endpoint:
    path: /v2/schedules
    method: GET
    data_selector: schedules
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: on_call_shifts
  endpoint:
    path: /api/v1/on_call_shifts
    method: GET
    data_selector: shifts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: escalation_policy
  endpoint:
    path: /escalation_policies
    method: GET
    data_selector: escalation_policies
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: escalation_policy
  endpoint:
    path: /escalation_policies
    method: GET
    data_selector: escalation_policies
    params: {}
- name: schedule
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: Automation Actions
  endpoint:
    path: /main/docs/automation-actions
    method: GET
- name: Runbook Automation
  endpoint:
    path: /docs/about/cloud/#runbook-automation
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: workflow_integration
  endpoint:
    path: /actions/docs/incident-workflow-actions-overview
    method: GET
    data_selector: connections
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: 'AWS: Invoke a Lambda Function'
  endpoint:
    path: /actions/docs/aws-invoke-a-lambda-function
    method: GET
- name: 'AWS: Get CloudWatch Logs by Query'
  endpoint:
    path: /actions/docs/aws-get-cloudwatch-logs-by-query
    method: GET
- name: 'Azure: Invoke an Azure Function'
  endpoint:
    path: /actions/docs/azure-invoke-an-azure-function
    method: GET
- name: 'Datadog: Create a Graph Snapshot'
  endpoint:
    path: /actions/docs/datadog-create-a-graph-snapshot
    method: GET
- name: 'Datadog: Get a Monitor''s Details'
  endpoint:
    path: /actions/docs/datadog-get-a-monitors-details
    method: GET
- name: 'Datadog: Get the Alerting Monitor'
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: 'Datadog: Search Logs'
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: 'Google Meet: Create a Meeting'
  endpoint:
    path: /actions/docs/google-meet-create-a-meeting
    method: GET
- name: 'JavaScript: Run Code'
  endpoint:
    path: /actions/docs/javascript-run-code
    method: GET
- name: 'Jeli: Create A Post-Incident Review'
  endpoint:
    path: /actions/docs/jeli-create-a-post-incident-review
    method: GET
- name: 'Jira Cloud: Create an Issue for an Incident'
  endpoint:
    path: /actions/docs/jira-cloud-create-an-issue-for-an-incident
    method: GET
- name: 'Jira Server: Create an Issue for an Incident'
  endpoint:
    path: /actions/docs/jira-server-create-an-issue-for-an-incident
    method: GET
- name: Lookup Value by Key
  endpoint:
    path: /actions/docs/lookup-value-by-key
    method: GET
- name: Condition
  endpoint:
    path: /actions/docs/condition
    method: GET
- name: Delay
  endpoint:
    path: /actions/docs/delay
    method: GET
- name: Loop Until
  endpoint:
    path: /actions/docs/loop-until
    method: GET
- name: Create a Dedicated Chat in Microsoft Teams
  endpoint:
    path: /actions/docs/create-a-dedicated-chat-in-microsoft-teams
    method: GET
- name: Create Conference Bridge in Microsoft Teams
  endpoint:
    path: /actions/docs/create-conference-bridge-in-microsoft-teams
    method: GET
- name: Add PagerDuty Advance Scribe Agent
  endpoint:
    path: /actions/docs/add-pagerduty-advance-scribe-agent
    method: GET
- name: Set a Cache Variable Value
  endpoint:
    path: /actions/docs/set-a-cache-variable-value
    method: GET
- name: Remove from a Cache Variable Value
  endpoint:
    path: /actions/docs/remove-from-a-cache-variable-value
    method: GET
- name: Append to a Cache Variable Value
  endpoint:
    path: /actions/docs/append-to-a-cache-variable-value
    method: GET
- name: Add Conference Bridge
  endpoint:
    path: /actions/docs/add-conference-bridge
    method: GET
- name: Add Responders
  endpoint:
    path: /actions/docs/add-responders
    method: GET
- name: Add Stakeholders
  endpoint:
    path: /actions/docs/add-stakeholders
    method: GET
- name: Get Business Service Details
  endpoint:
    path: /actions/docs/get-business-service-details
    method: GET
- name: Get On-Call User from a Schedule
  endpoint:
    path: /actions/docs/get-on-call-user-from-a-schedule
    method: GET
- name: Get Users on a Team
  endpoint:
    path: /actions/docs/get-users-on-a-team
    method: GET
- name: List Impacted Business Services
  endpoint:
    path: /actions/docs/list-impacted-business-services
    method: GET
- name: List Related Change Events for an Incident
  endpoint:
    path: /actions/docs/list-related-change-events-for-an-incident
    method: GET
- name: Post to External Status Page
  endpoint:
    path: /actions/docs/post-to-external-status-page
    method: GET
- name: Reassign the Incident
  endpoint:
    path: /actions/docs/reassign-the-incident
    method: GET
- name: Run an Automation Action
  endpoint:
    path: /actions/docs/run-an-automation-action
    method: GET
- name: Send Status Update
  endpoint:
    path: /actions/docs/send-status-update
    method: GET
- name: Wait for Status to Change
  endpoint:
    path: /actions/docs/wait-for-status-to-change
    method: GET
- name: Get Service Details
  endpoint:
    path: /actions/docs/get-service-details
    method: GET
- name: Get Notes for an Incident
  endpoint:
    path: /actions/docs/get-notes-for-an-incident
    method: GET
- name: Get Alerts for an Incident
  endpoint:
    path: /actions/docs/get-alerts-for-an-incident
    method: GET
- name: Get User
  endpoint:
    path: /actions/docs/get-user
    method: GET
- name: Update Incident Type
  endpoint:
    path: /actions/docs/update-incident-type
    method: GET
- name: Set Incident Custom Field
  endpoint:
    path: /actions/docs/set-incident-custom-field
    method: GET
- name: Add Note to an Incident
  endpoint:
    path: /actions/docs/add-note-to-an-incident
    method: GET
- name: Add an Impacted Business Service
  endpoint:
    path: /actions/docs/add-an-impacted-business-service
    method: GET
- name: Create an Incident
  endpoint:
    path: /actions/docs/create-an-incident
    method: GET
- name: Get Status Updates for an Incident
  endpoint:
    path: /actions/docs/get-status-updates-for-an-incident
    method: GET
- name: Assign a Role
  endpoint:
    path: /actions/docs/assign-a-role-eim
    method: GET
- name: Unassign a Role
  endpoint:
    path: /actions/docs/unassign-a-role
    method: GET
- name: 'ServiceNow ITSM: Create an Incident'
  endpoint:
    path: /actions/docs/servicenow-itsm-create-an-incident
    method: GET
- name: Archive Incident Dedicated Channel
  endpoint:
    path: /actions/docs/archive-a-slack-dedicated-channel
    method: GET
- name: Add a Bookmark
  endpoint:
    path: /actions/docs/add-a-bookmark
    method: GET
- name: Create a Slack Channel for an Incident
  endpoint:
    path: /actions/docs/create-a-slack-channel-for-an-incident
    method: GET
- name: Link a Slack Channel to an Incident
  endpoint:
    path: /actions/docs/link-a-slack-channel-to-an-incident
    method: GET
- name: Prompt to Add a Note to the Incident
  endpoint:
    path: /actions/docs/prompt-to-add-a-note-to-the-incident
    method: GET
- name: Prompt to Add Responders to the Incident
  endpoint:
    path: /actions/docs/prompt-to-add-responders-to-the-incident
    method: GET
- name: Prompt to Escalate the Incident
  endpoint:
    path: /actions/docs/prompt-to-escalate-the-incident
    method: GET
- name: Prompt to Reassign the Incident
  endpoint:
    path: /actions/docs/prompt-to-reassign-the-incident
    method: GET
- name: Prompt to Run an Automation Action on the Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-automation-action-on-the-incident
    method: GET
- name: Prompt to Run an Incident Workflow on the Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-incident-workflow-on-the-incident
    method: GET
- name: Prompt to Send a Status Update for the Incident
  endpoint:
    path: /actions/docs/prompt-to-send-a-status-update-for-the-incident
    method: GET
- name: Prompt to Update Priority on the Incident
  endpoint:
    path: /actions/docs/prompt-to-update-priority-on-the-incident
    method: GET
- name: Send a Direct Message
  endpoint:
    path: /actions/docs/send-a-direct-message
    method: GET
- name: Send an Ephemeral Message
  endpoint:
    path: /actions/docs/send-an-ephemeral-message
    method: GET
- name: Send a Message to a Channel
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel
    method: GET
- name: Send a Message to a Channel with an Incident Action
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel-with-an-incident-action
    method: GET
- name: Set a Channel Topic
  endpoint:
    path: /actions/docs/set-a-channel-topic
    method: GET
- name: Rename a Slack Channel
  endpoint:
    path: /actions/docs/rename-a-slack-channel
    method: GET
- name: Create a Task
  endpoint:
    path: /actions/docs/create-a-task
    method: GET
- name: Update Task Assignee
  endpoint:
    path: /actions/docs/update-task-assignee
    method: GET
- name: Update Task Details
  endpoint:
    path: /actions/docs/update-task-details
    method: GET
- name: Update Task Name
  endpoint:
    path: /actions/docs/update-task-name
    method: GET
- name: Update Task Status
  endpoint:
    path: /actions/docs/update-task-status
    method: GET
- name: Generate Random Positive Adjective
  endpoint:
    path: /actions/docs/generate-random-positive-adjective
    method: GET
- name: Generate Random Animal
  endpoint:
    path: /actions/docs/generate-random-animal
    method: GET
- name: Generate Random Color
  endpoint:
    path: /actions/docs/generate-random-color
    method: GET
- name: Send DELETE Request
  endpoint:
    path: /actions/docs/send-delete-request
    method: GET
- name: Send GET Request
  endpoint:
    path: /actions/docs/send-get-request
    method: GET
- name: Send HEAD Request
  endpoint:
    path: /actions/docs/send-head-request
    method: GET
- name: Send PATCH Request
  endpoint:
    path: /actions/docs/send-patch-request
    method: GET
- name: Send POST Request
  endpoint:
    path: /actions/docs/send-post-request
    method: GET
- name: Send PUT Request
  endpoint:
    path: /actions/docs/send-put-request
    method: GET
- name: Send a Webhook POST
  endpoint:
    path: /actions/docs/send-a-webhook-post
    method: GET
- name: Create a Zoom Meeting
  endpoint:
    path: /actions/docs/create-a-zoom-meeting
    method: GET
- name: 'AWS: Invoke a Lambda Function'
  endpoint:
    path: /actions/docs/aws-invoke-a-lambda-function
    method: GET
- name: 'AWS: Get CloudWatch Logs by Query'
  endpoint:
    path: /actions/docs/aws-get-cloudwatch-logs-by-query
    method: GET
- name: 'Azure: Invoke an Azure Function'
  endpoint:
    path: /actions/docs/azure-invoke-an-azure-function
    method: GET
- name: 'Datadog: Create a Graph Snapshot'
  endpoint:
    path: /actions/docs/datadog-create-a-graph-snapshot
    method: GET
- name: 'Datadog: Get a Monitor''s Details'
  endpoint:
    path: /actions/docs/datadog-get-a-monitors-details
    method: GET
- name: 'Datadog: Get the Alerting Monitor'
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: 'Datadog: Search Logs'
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: 'Google Meet: Create a Meeting'
  endpoint:
    path: /actions/docs/google-meet-create-a-meeting
    method: GET
- name: 'JavaScript: Run Code'
  endpoint:
    path: /actions/docs/javascript-run-code
    method: GET
- name: 'Jeli: Create A Post-Incident Review'
  endpoint:
    path: /actions/docs/jeli-create-a-post-incident-review
    method: GET
- name: 'Jira Cloud: Create an Issue for an Incident'
  endpoint:
    path: /actions/docs/jira-cloud-create-an-issue-for-an-incident
    method: GET
- name: 'Jira Server: Create an Issue for an Incident'
  endpoint:
    path: /actions/docs/jira-server-create-an-issue-for-an-incident
    method: GET
- name: Lookup Value by Key
  endpoint:
    path: /actions/docs/lookup-value-by-key
    method: GET
- name: Condition
  endpoint:
    path: /actions/docs/condition
    method: GET
- name: Delay
  endpoint:
    path: /actions/docs/delay
    method: GET
- name: Loop Until
  endpoint:
    path: /actions/docs/loop-until
    method: GET
- name: Create a Dedicated Chat in Microsoft Teams
  endpoint:
    path: /actions/docs/create-a-dedicated-chat-in-microsoft-teams
    method: GET
- name: Create Conference Bridge in Microsoft Teams
  endpoint:
    path: /actions/docs/create-conference-bridge-in-microsoft-teams
    method: GET
- name: Add PagerDuty Advance Scribe Agent
  endpoint:
    path: /actions/docs/add-pagerduty-advance-scribe-agent
    method: GET
- name: Set a Cache Variable Value
  endpoint:
    path: /actions/docs/set-a-cache-variable-value
    method: GET
- name: Remove from a Cache Variable Value
  endpoint:
    path: /actions/docs/remove-from-a-cache-variable-value
    method: GET
- name: Append to a Cache Variable Value
  endpoint:
    path: /actions/docs/append-to-a-cache-variable-value
    method: GET
- name: Add Conference Bridge
  endpoint:
    path: /actions/docs/add-conference-bridge
    method: GET
- name: Add Responders
  endpoint:
    path: /actions/docs/add-responders
    method: GET
- name: Add Stakeholders
  endpoint:
    path: /actions/docs/add-stakeholders
    method: GET
- name: Get Business Service Details
  endpoint:
    path: /actions/docs/get-business-service-details
    method: GET
- name: Get On-Call User from a Schedule
  endpoint:
    path: /actions/docs/get-on-call-user-from-a-schedule
    method: GET
- name: Get Users on a Team
  endpoint:
    path: /actions/docs/get-users-on-a-team
    method: GET
- name: List Impacted Business Services
  endpoint:
    path: /actions/docs/list-impacted-business-services
    method: GET
- name: List Related Change Events for an Incident
  endpoint:
    path: /actions/docs/list-related-change-events-for-an-incident
    method: GET
- name: Post to External Status Page
  endpoint:
    path: /actions/docs/post-to-external-status-page
    method: GET
- name: Reassign the Incident
  endpoint:
    path: /actions/docs/reassign-the-incident
    method: GET
- name: Run an Automation Action
  endpoint:
    path: /actions/docs/run-an-automation-action
    method: GET
- name: Send Status Update
  endpoint:
    path: /actions/docs/send-status-update
    method: GET
- name: Wait for Status to Change
  endpoint:
    path: /actions/docs/wait-for-status-to-change
    method: GET
- name: Get Service Details
  endpoint:
    path: /actions/docs/get-service-details
    method: GET
- name: Get Notes for an Incident
  endpoint:
    path: /actions/docs/get-notes-for-an-incident
    method: GET
- name: Get Alerts for an Incident
  endpoint:
    path: /actions/docs/get-alerts-for-an-incident
    method: GET
- name: Get User
  endpoint:
    path: /actions/docs/get-user
    method: GET
- name: Update Incident Type
  endpoint:
    path: /actions/docs/update-incident-type
    method: GET
- name: Set Incident Custom Field
  endpoint:
    path: /actions/docs/set-incident-custom-field
    method: GET
- name: Add Note to an Incident
  endpoint:
    path: /actions/docs/add-note-to-an-incident
    method: GET
- name: Add an Impacted Business Service
  endpoint:
    path: /actions/docs/add-an-impacted-business-service
    method: GET
- name: Create an Incident
  endpoint:
    path: /actions/docs/create-an-incident
    method: GET
- name: Get Status Updates for an Incident
  endpoint:
    path: /actions/docs/get-status-updates-for-an-incident
    method: GET
- name: Assign a Role
  endpoint:
    path: /actions/docs/assign-a-role-eim
    method: GET
- name: Unassign a Role
  endpoint:
    path: /actions/docs/unassign-a-role
    method: GET
- name: 'ServiceNow ITSM: Create an Incident'
  endpoint:
    path: /actions/docs/servicenow-itsm-create-an-incident
    method: GET
- name: Archive Incident Dedicated Channel
  endpoint:
    path: /actions/docs/archive-a-slack-dedicated-channel
    method: GET
- name: Add a Bookmark
  endpoint:
    path: /actions/docs/add-a-bookmark
    method: GET
- name: Create a Slack Channel for an Incident
  endpoint:
    path: /actions/docs/create-a-slack-channel-for-an-incident
    method: GET
- name: Link a Slack Channel to an Incident
  endpoint:
    path: /actions/docs/link-a-slack-channel-to-an-incident
    method: GET
- name: Prompt to Add a Note to the Incident
  endpoint:
    path: /actions/docs/prompt-to-add-a-note-to-the-incident
    method: GET
- name: Prompt to Add Responders to the Incident
  endpoint:
    path: /actions/docs/prompt-to-add-responders-to-the-incident
    method: GET
- name: Prompt to Escalate the Incident
  endpoint:
    path: /actions/docs/prompt-to-escalate-the-incident
    method: GET
- name: Prompt to Reassign the Incident
  endpoint:
    path: /actions/docs/prompt-to-reassign-the-incident
    method: GET
- name: Prompt to Run an Automation Action on the Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-automation-action-on-the-incident
    method: GET
- name: Prompt to Run an Incident Workflow on the Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-incident-workflow-on-the-incident
    method: GET
- name: Prompt to Send a Status Update for the Incident
  endpoint:
    path: /actions/docs/prompt-to-send-a-status-update-for-the-incident
    method: GET
- name: Prompt to Update Priority on the Incident
  endpoint:
    path: /actions/docs/prompt-to-update-priority-on-the-incident
    method: GET
- name: Send a Direct Message
  endpoint:
    path: /actions/docs/send-a-direct-message
    method: GET
- name: Send an Ephemeral Message
  endpoint:
    path: /actions/docs/send-an-ephemeral-message
    method: GET
- name: Send a Message to a Channel
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel
    method: GET
- name: Send a Message to a Channel with an Incident Action
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel-with-an-incident-action
    method: GET
- name: Set a Channel Topic
  endpoint:
    path: /actions/docs/set-a-channel-topic
    method: GET
- name: Rename a Slack Channel
  endpoint:
    path: /actions/docs/rename-a-slack-channel
    method: GET
- name: Create a Task
  endpoint:
    path: /actions/docs/create-a-task
    method: GET
- name: Update Task Assignee
  endpoint:
    path: /actions/docs/update-task-assignee
    method: GET
- name: Update Task Details
  endpoint:
    path: /actions/docs/update-task-details
    method: GET
- name: Update Task Name
  endpoint:
    path: /actions/docs/update-task-name
    method: GET
- name: Update Task Status
  endpoint:
    path: /actions/docs/update-task-status
    method: GET
- name: Generate Random Positive Adjective
  endpoint:
    path: /actions/docs/generate-random-positive-adjective
    method: GET
- name: Generate Random Animal
  endpoint:
    path: /actions/docs/generate-random-animal
    method: GET
- name: Generate Random Color
  endpoint:
    path: /actions/docs/generate-random-color
    method: GET
- name: Send DELETE Request
  endpoint:
    path: /actions/docs/send-delete-request
    method: GET
- name: Send GET Request
  endpoint:
    path: /actions/docs/send-get-request
    method: GET
- name: Send HEAD Request
  endpoint:
    path: /actions/docs/send-head-request
    method: GET
- name: Send PATCH Request
  endpoint:
    path: /actions/docs/send-patch-request
    method: GET
- name: Send POST Request
  endpoint:
    path: /actions/docs/send-post-request
    method: GET
- name: Send PUT Request
  endpoint:
    path: /actions/docs/send-put-request
    method: GET
- name: Send a Webhook POST
  endpoint:
    path: /actions/docs/send-a-webhook-post
    method: GET
- name: Create a Zoom Meeting
  endpoint:
    path: /actions/docs/create-a-zoom-meeting
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incident
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: post_incident_review
  endpoint:
    path: /api/v1/post_incident_reviews
    method: GET
    data_selector: reviews
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Add Scribe Agent to Meeting
  endpoint:
    path: /main/docs/add-pagerduty-advance-scribe-agent
    method: POST
- name: Zoom
  endpoint:
    path: /zoom/meetings
    method: GET
- name: Microsoft Teams
  endpoint:
    path: /teams/meetings
    method: GET
- name: Google Meet
  endpoint:
    path: /google/meetings
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: Shift Agent
  endpoint:
    path: /main/docs/jeli-api
    method: GET
    data_selector: records
- name: list_escalation_policies
  endpoint:
    path: /mcp
    method: GET
- name: get_incident
  endpoint:
    path: /mcp
    method: GET
- name: list_incidents
  endpoint:
    path: /mcp
    method: GET
- name: add_note_to_incident
  endpoint:
    path: /mcp
    method: POST
- name: add_responders
  endpoint:
    path: /mcp
    method: POST
- name: create_incident
  endpoint:
    path: /mcp
    method: POST
- name: manage_incidents
  endpoint:
    path: /mcp
    method: PATCH
- name: list_oncalls
  endpoint:
    path: /mcp
    method: GET
- name: get_schedule
  endpoint:
    path: /mcp
    method: GET
- name: list_schedule_users
  endpoint:
    path: /mcp
    method: GET
- name: list_schedules
  endpoint:
    path: /mcp
    method: GET
- name: create_schedule_override
  endpoint:
    path: /mcp
    method: POST
- name: get_service
  endpoint:
    path: /mcp
    method: GET
- name: list_services
  endpoint:
    path: /mcp
    method: GET
- name: create_service
  endpoint:
    path: /mcp
    method: POST
- name: update_service
  endpoint:
    path: /mcp
    method: PATCH
- name: get_team
  endpoint:
    path: /mcp
    method: GET
- name: list_team_members
  endpoint:
    path: /mcp
    method: GET
- name: list_teams
  endpoint:
    path: /mcp
    method: GET
- name: add_team_member
  endpoint:
    path: /mcp
    method: POST
- name: create_team
  endpoint:
    path: /mcp
    method: POST
- name: delete_team
  endpoint:
    path: /mcp
    method: DELETE
- name: remove_team_member
  endpoint:
    path: /mcp
    method: DELETE
- name: update_team
  endpoint:
    path: /mcp
    method: PATCH
- name: get_user_data
  endpoint:
    path: /mcp
    method: GET
- name: list_users
  endpoint:
    path: /mcp
    method: GET
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: event
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: related_incidents
  endpoint:
    path: /api/related_incidents
    method: GET
    data_selector: related_incidents
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: change_events
  endpoint:
    path: /v2/change/enqueue
    method: POST
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: Event Orchestration
  endpoint:
    path: /main/docs/event-orchestration
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: event
  endpoint:
    path: /events
    method: POST
    data_selector: event
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: global_alert_grouping
  endpoint:
    path: /main/docs/global-alert-grouping
    method: GET
    data_selector: records
- name: list_alert_grouping_settings
  endpoint:
    path: /api-reference/b9fe211cc2748-list-alert-grouping-settings
    method: GET
- name: create_alert_grouping_setting
  endpoint:
    path: /api-reference/587edbc8ff416-create-an-alert-grouping-setting
    method: POST
- name: get_alert_grouping_setting
  endpoint:
    path: /api-reference/9b5a6c8d7379b-get-an-alert-grouping-setting
    method: GET
- name: delete_alert_grouping_setting
  endpoint:
    path: /api-reference/a7d67c3892003-delete-an-alert-grouping-setting
    method: DELETE
- name: update_alert_grouping_setting
  endpoint:
    path: /api-reference/37fd444303e1a-update-an-alert-grouping-setting
    method: PUT
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Post-Incident Reviews
  endpoint:
    path: /main/docs/jeli-post-incident-reviews
    method: GET
    data_selector: records
- name: Jeli API
  endpoint:
    path: /main/docs/jeli-api
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: Auto-Pause Incident Notifications
  endpoint:
    path: /main/docs/configure-auto-pause-incident-notifications
    method: GET
    data_selector: settings
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: rulesets
  endpoint:
    path: /api/v1/rulesets
    method: GET
    data_selector: rulesets
- name: service_event_rules
  endpoint:
    path: /api/v1/service_event_rules
    method: GET
    data_selector: event_rules
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: rulesets
  endpoint:
    path: /api/v1/rulesets
    method: GET
    data_selector: rulesets
- name: event_rules
  endpoint:
    path: /api/v1/event_rules
    method: GET
    data_selector: event_rules
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: Analytics Dashboard
  endpoint:
    path: /analytics/dashboard
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Service Performance
  endpoint:
    path: /analytics/insights/service-performance
    method: GET
    data_selector: servicePerformanceData
- name: Incident Activity
  endpoint:
    path: /analytics/insights/incident-activity
    method: GET
    data_selector: incidentActivityData
- name: services_list
  endpoint:
    path: /services/list
    method: GET
    data_selector: services
- name: responder_report
  endpoint:
    path: /responder/report
    method: GET
    data_selector: responders
- name: team_report
  endpoint:
    path: /team/report
    method: GET
    data_selector: teams
- name: escalation_policy_report
  endpoint:
    path: /escalation/policy/report
    method: GET
    data_selector: escalationPolicies
- name: escalation_policy_list
  endpoint:
    path: /escalation_policy_list
    method: GET
- name: business_impact_report
  endpoint:
    path: /business_impact_report
    method: GET
- name: services_list
  endpoint:
    path: /services_list
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: escalation_policy
  endpoint:
    path: /escalation_policies
    method: GET
    data_selector: escalation_policies
    params:
      page_size: 10
- name: business_impact
  endpoint:
    path: /business_impact
    method: GET
    data_selector: business_impact_data
    params:
      page_size: 10
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: operational_reviews
  endpoint:
    path: /api/v1/operational_reviews
    method: GET
    data_selector: reviews
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /v2/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: User Onboarding Report
  endpoint:
    path: /api/user_onboarding_report
    method: GET
    data_selector: user_metrics
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: audit_trail
  endpoint:
    path: /audit_trail
    method: GET
    data_selector: audit_records
- name: audit_trail
  endpoint:
    path: /audit_trails
    method: GET
    data_selector: audit_trails
    params: {}
- name: audit_trail
  endpoint:
    path: /audit_trail
    method: GET
    data_selector: audit_records
- name: insights_reports
  endpoint:
    path: /insights/reports
    method: GET
    data_selector: reports
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: post_incident_review
  endpoint:
    path: /services/data/vXX.X/sobjects/PostIncidentReview
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Event Source
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: incident_acknowledge
  endpoint:
    path: /log_entries/R01VZ6VKNDJ0CJHSW30OHVHMQV
    method: GET
    data_selector: log_entries
    params: {}
- name: incident_annotate
  endpoint:
    path: /log_entries/RPXWOZF8SFUEZB295YOQ5BPHF4
    method: GET
    data_selector: log_entries
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: log_entry
  endpoint:
    path: /log_entries
    method: GET
    data_selector: log_entries
    params: {}
- name: incident.delegate
  endpoint:
    path: /log_entries
    method: GET
    data_selector: log_entries
- name: incident.escalate
  endpoint:
    path: /log_entries
    method: GET
    data_selector: log_entries
- name: incident
  endpoint:
    path: /api/v1/incidents
    method: POST
    data_selector: incidents
    params: {}
- name: incident
  endpoint:
    path: /incidents/P8E12U3
    method: GET
    data_selector: incident
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Integration
  endpoint:
    path: /x-ere/[YOUR_INTEGRATION_KEY_HERE]
    method: POST
    data_selector: Message
- name: incidents
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /api/v1/services
    method: GET
    data_selector: services
- name: PagerDuty Integration
  endpoint:
    path: /integration/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/enqueue
    method: POST
    data_selector: integration_data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: Post-Incident Reviews
  endpoint:
    path: /main/docs/jeli-post-incident-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: Datadog Apps Integration
  endpoint:
    path: /main/docs/jeli-api
    method: GET
    data_selector: datadog_apps
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: post_incident_review
  endpoint:
    path: /services/data/vXX.X/sobjects/PostIncidentReview
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: change_events
  endpoint:
    path: /integration/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/change/enqueue
    method: POST
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: merge_request_event
  endpoint:
    path: /integration/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/change/enqueue
    method: POST
    data_selector: event
    params: {}
- name: change_events
  endpoint:
    path: /services/change-events
    method: POST
    data_selector: events
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: jira_issue
  endpoint:
    path: /rest/api/3/issue
    method: POST
    data_selector: issue
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Jira Issues
  endpoint:
    path: /api/jira/issues
    method: POST
    data_selector: issue
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: post_incident_reviews
  endpoint:
    path: /api/v1/post_incident_reviews
    method: GET
    data_selector: reviews
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: PagerDuty Configuration
  endpoint:
    path: /api/v1/configuration
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Salesforce Custom Field Mappings
  endpoint:
    path: /services/data/v3.19/customFieldMappings
    method: GET
    data_selector: mappings
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: PagerDuty Settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
- name: Integration Health Check
  endpoint:
    path: /health_check
    method: GET
    data_selector: health
- name: webhook_health_check
  endpoint:
    path: /api/now/webhook_health_check
    method: GET
    data_selector: result
    params: {}
- name: webhook_migration
  endpoint:
    path: /api/now/webhook_migration
    method: POST
    data_selector: result
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: inbound_field_rules
  endpoint:
    path: /inbound_field_rules
    method: GET
    data_selector: records
- name: webhook_import_rows
  endpoint:
    path: /webhook_import_rows
    method: GET
    data_selector: records
- name: Custom Field Mappings
  endpoint:
    path: /main/docs/custom-field-mappings
    method: GET
- name: ServiceNow Integration
  endpoint:
    path: /main/docs/servicenow-integration-guide
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: change_events
  endpoint:
    path: /main/docs/change-events
    method: GET
    data_selector: records
    params: {}
- name: Change Events
  endpoint:
    path: /main/docs/change-events
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: post_incident_review
  endpoint:
    path: /api/v1/post_incident_reviews
    method: GET
    data_selector: data
- name: integration_health_check
  endpoint:
    path: /api/now/table/integration_health_check
    method: GET
    data_selector: result
    params: {}
- name: pagerduty_settings
  endpoint:
    path: /api/now/table/pagerduty_settings
    method: GET
    data_selector: result
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: pagerduty_csm_rules
  endpoint:
    path: /pagerduty/csm/rules
    method: GET
    data_selector: rules
    params: {}
- name: PagerDuty CSM Rules
  endpoint:
    path: /pagerduty/csm/rules
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: post_incident_review
  endpoint:
    path: /api/v1/post_incident_reviews
    method: GET
    data_selector: reviews
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: post_incident_reviews
  endpoint:
    path: /api/v1/post_incident_reviews
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incident
  endpoint:
    path: /main/docs/zendesk-integration-guide
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: PagerDuty Integration
  endpoint:
    path: /api/v1/events
    method: POST
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: extensions
  endpoint:
    path: /extensions
    method: GET
    data_selector: extensions
- name: webhook_subscriptions
  endpoint:
    path: /webhook_subscriptions
    method: POST
    data_selector: webhook_subscription
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: subscribers
  endpoint:
    path: /status/subscribers
    method: GET
    data_selector: subscribers
    params: {}
- name: status_updates
  endpoint:
    path: /status/updates
    method: GET
    data_selector: updates
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: private_status_page
  endpoint:
    path: /status_pages
    method: GET
    data_selector: status_pages
    params: {}
- name: status_pages
  endpoint:
    path: /.well-known/openid-configuration
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
    params: {}
- name: escalation_policies
  endpoint:
    path: /escalation_policies
    method: GET
    data_selector: escalation_policies
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: Community Support
  endpoint:
    path: https://community.pagerduty.com/
    method: GET
- name: Email Support
  endpoint:
    path: mailto:support@pagerduty.com
    method: GET
- name: PagerDuty Status Page
  endpoint:
    path: https://status.pagerduty.com/
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /api/v1/services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: iOS
  endpoint:
    path: /managedAppConfiguration/iOS
    method: GET
    data_selector: managedAppConfiguration
    params:
      bundleId: com.pagerduty.PagerDuty
- name: Android
  endpoint:
    path: /managedAppConfiguration/Android
    method: GET
    data_selector: managedAppConfiguration
    params:
      bundleId: com.pagerduty.android
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: PagerDuty for Intune
  endpoint:
    path: /apps/add
    method: POST
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: service
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incident
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: incidents
  endpoint:
    path: /api/v2/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incident
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: PD-CEF
  endpoint:
    path: /events
    method: POST
    data_selector: payload
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
- name: users
  endpoint:
    path: /users
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: post_incident_reviews
  endpoint:
    path: /main/docs/jeli-post-incident-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: Post-Incident Review
  endpoint:
    path: /main/docs/jeli-api
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: Post-Incident Reviews
  endpoint:
    path: /main/docs/jeli-post-incident-reviews
    method: GET
    data_selector: reviews
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: post_incident_review
  endpoint:
    path: /services/data/vXX.X/sobjects/PostIncidentReview
    method: GET
    data_selector: records
- name: participants
  endpoint:
    path: /participants
    method: GET
- name: reactions
  endpoint:
    path: /reactions
    method: GET
- name: event_sources
  endpoint:
    path: /event_sources
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: people
  endpoint:
    path: /main/docs/view-people-in-jeli
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: import_log
  endpoint:
    path: /import-log
    method: GET
    data_selector: import_logs
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: Jira Issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: jira
  endpoint:
    path: /settings/integrations/jira
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: HR Data
  endpoint:
    path: /hr/data/upload
    method: POST
    data_selector: uploadStatus
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: incidents
  endpoint:
    path: /main/docs/jeli-incidents
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: close_incident_mitigated
  endpoint:
    path: /jeli/close
    method: POST
- name: close_incident_investigating_or_identified
  endpoint:
    path: /jeli/close
    method: POST
- name: create_followups
  endpoint:
    path: /jeli/remind
    method: POST
- name: get_list_of_followups
  endpoint:
    path: /jeli/reminders
    method: GET
- name: add_link_to_incident
  endpoint:
    path: /jeli/link
    method: POST
- name: create_link_jira_tickets
  endpoint:
    path: /jeli/jira
    method: POST
- name: create_statuspage_incident
  endpoint:
    path: /jeli/statuspage
    method: POST
- name: get_full_list_of_statuses
  endpoint:
    path: /jeli/history
    method: GET
- name: get_list_of_active_incidents
  endpoint:
    path: /jeli/active
    method: GET
- name: get_summary_of_active_incident_updates
  endpoint:
    path: /jeli/catch-up
    method: GET
- name: escalate_incident
  endpoint:
    path: /jeli/page
    method: POST
- name: run_demo_incident
  endpoint:
    path: /jeli/demo
    method: POST
- name: import_event_data
  endpoint:
    path: /jeli/import
    method: POST
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: people
  endpoint:
    path: /main/docs/view-people-in-jeli
    method: GET
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: Entra ID
  endpoint:
    path: /login/app/jeli.io/login/callback
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Jira Issues
  endpoint:
    path: /api/jira/issues
    method: POST
- name: incident
  endpoint:
    path: /v0/incident/
    method: POST
    data_selector: incident
    params: {}
- name: open-jeli-incident
  endpoint:
    path: /incident/
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incident
  endpoint:
    path: /v0/incident/
    method: POST
    data_selector: open_incident
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: statuspage
  endpoint:
    path: /api/v1/statuspage
    method: POST
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: HR Data Upload
  endpoint:
    path: /main/docs/import-hr-data
    method: GET
    data_selector: CSV example
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: post_incident_review
  endpoint:
    path: /services/data/vXX.X/sobjects/PostIncidentReview
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: incident
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: service
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: Get Alerts for an Incident
  endpoint:
    path: /actions/docs/get-alerts-for-an-incident
    method: GET
- name: Get User
  endpoint:
    path: /actions/docs/get-user
    method: GET
- name: Create an Incident
  endpoint:
    path: /actions/docs/create-an-incident
    method: POST
- name: incident_workflow
  endpoint:
    path: /actions/docs/incident-workflows
    method: GET
- name: web_api
  endpoint:
    path: /actions/docs/web-api
    method: GET
- name: incident_workflow_actions
  endpoint:
    path: /actions/docs
    method: GET
    data_selector: actions
    params: {}
- name: 'AWS: Invoke a Lambda Function'
  endpoint:
    path: /actions/docs/aws-invoke-a-lambda-function
    method: GET
- name: 'AWS: Get CloudWatch Logs by Query'
  endpoint:
    path: /actions/docs/aws-get-cloudwatch-logs-by-query
    method: GET
- name: 'Azure: Invoke an Azure Function'
  endpoint:
    path: /actions/docs/azure-invoke-an-azure-function
    method: GET
- name: 'Datadog: Create a Graph Snapshot'
  endpoint:
    path: /actions/docs/datadog-create-a-graph-snapshot
    method: GET
- name: 'Datadog: Get a Monitor''s Details'
  endpoint:
    path: /actions/docs/datadog-get-a-monitors-details
    method: GET
- name: 'Datadog: Get the Alerting Monitor'
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: 'Datadog: Search Logs'
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
- name: 'Google Meet: Create a Meeting'
  endpoint:
    path: /actions/docs/google-meet-create-a-meeting
    method: GET
- name: 'JavaScript: Run Code'
  endpoint:
    path: /actions/docs/javascript-run-code
    method: GET
- name: 'Jeli: Create A Post-Incident Review'
  endpoint:
    path: /actions/docs/jeli-create-a-post-incident-review
    method: GET
- name: 'Jira Cloud: Create an Issue for an Incident'
  endpoint:
    path: /actions/docs/jira-cloud-create-an-issue-for-an-incident
    method: GET
- name: 'Jira Server: Create an Issue for an Incident'
  endpoint:
    path: /actions/docs/jira-server-create-an-issue-for-an-incident
    method: GET
- name: Lookup Value by Key
  endpoint:
    path: /actions/docs/lookup-value-by-key
    method: GET
- name: Condition
  endpoint:
    path: /actions/docs/condition
    method: GET
- name: Delay
  endpoint:
    path: /actions/docs/delay
    method: GET
- name: Loop Until
  endpoint:
    path: /actions/docs/loop-until
    method: GET
- name: Create a Dedicated Chat in Microsoft Teams
  endpoint:
    path: /actions/docs/create-a-dedicated-chat-in-microsoft-teams
    method: GET
- name: Create Conference Bridge in Microsoft Teams
  endpoint:
    path: /actions/docs/create-conference-bridge-in-microsoft-teams
    method: GET
- name: Add PagerDuty Advance Scribe Agent
  endpoint:
    path: /actions/docs/add-pagerduty-advance-scribe-agent
    method: GET
- name: Set a Cache Variable Value
  endpoint:
    path: /actions/docs/set-a-cache-variable-value
    method: GET
- name: Remove from a Cache Variable Value
  endpoint:
    path: /actions/docs/remove-from-a-cache-variable-value
    method: GET
- name: Append to a Cache Variable Value
  endpoint:
    path: /actions/docs/append-to-a-cache-variable-value
    method: GET
- name: Add Conference Bridge
  endpoint:
    path: /actions/docs/add-conference-bridge
    method: GET
- name: Add Responders
  endpoint:
    path: /actions/docs/add-responders
    method: GET
- name: Add Stakeholders
  endpoint:
    path: /actions/docs/add-stakeholders
    method: GET
- name: Get Business Service Details
  endpoint:
    path: /actions/docs/get-business-service-details
    method: GET
- name: Get On-Call User from a Schedule
  endpoint:
    path: /actions/docs/get-on-call-user-from-a-schedule
    method: GET
- name: Get Users on a Team
  endpoint:
    path: /actions/docs/get-users-on-a-team
    method: GET
- name: List Impacted Business Services
  endpoint:
    path: /actions/docs/list-impacted-business-services
    method: GET
- name: List Related Change Events for an Incident
  endpoint:
    path: /actions/docs/list-related-change-events-for-an-incident
    method: GET
- name: Post to External Status Page
  endpoint:
    path: /actions/docs/post-to-external-status-page
    method: GET
- name: Reassign the Incident
  endpoint:
    path: /actions/docs/reassign-the-incident
    method: GET
- name: Run an Automation Action
  endpoint:
    path: /actions/docs/run-an-automation-action
    method: GET
- name: Send Status Update
  endpoint:
    path: /actions/docs/send-status-update
    method: GET
- name: Wait for Status to Change
  endpoint:
    path: /actions/docs/wait-for-status-to-change
    method: GET
- name: Get Service Details
  endpoint:
    path: /actions/docs/get-service-details
    method: GET
- name: Get Notes for an Incident
  endpoint:
    path: /actions/docs/get-notes-for-an-incident
    method: GET
- name: List Related Change Events for an Incident
  endpoint:
    path: /actions/docs/list-related-change-events-for-an-incident
    method: GET
- name: Get Alerts for an Incident
  endpoint:
    path: /actions/docs/get-alerts-for-an-incident
    method: GET
- name: Get User
  endpoint:
    path: /actions/docs/get-user
    method: GET
- name: Update Incident Type
  endpoint:
    path: /actions/docs/update-incident-type
    method: GET
- name: Set Incident Custom Field
  endpoint:
    path: /actions/docs/set-incident-custom-field
    method: GET
- name: Add Note to an Incident
  endpoint:
    path: /actions/docs/add-note-to-an-incident
    method: GET
- name: Add an Impacted Business Service
  endpoint:
    path: /actions/docs/add-an-impacted-business-service
    method: GET
- name: Create an Incident
  endpoint:
    path: /actions/docs/create-an-incident
    method: GET
- name: Get Status Updates for an Incident
  endpoint:
    path: /actions/docs/get-status-updates-for-an-incident
    method: GET
- name: Assign a Role
  endpoint:
    path: /actions/docs/assign-a-role-eim
    method: GET
- name: Unassign a Role
  endpoint:
    path: /actions/docs/unassign-a-role
    method: GET
- name: 'ServiceNow ITSM: Create an Incident'
  endpoint:
    path: /actions/docs/servicenow-itsm-create-an-incident
    method: GET
- name: Archive Incident Dedicated Channel
  endpoint:
    path: /actions/docs/archive-a-slack-dedicated-channel
    method: GET
- name: Add a Bookmark
  endpoint:
    path: /actions/docs/add-a-bookmark
    method: GET
- name: Create a Slack Channel for an Incident
  endpoint:
    path: /actions/docs/create-a-slack-channel-for-an-incident
    method: GET
- name: Link a Slack Channel to an Incident
  endpoint:
    path: /actions/docs/link-a-slack-channel-to-an-incident
    method: GET
- name: Prompt to Add a Note to the Incident
  endpoint:
    path: /actions/docs/prompt-to-add-a-note-to-the-incident
    method: GET
- name: Prompt to Add Responders to the Incident
  endpoint:
    path: /actions/docs/prompt-to-add-responders-to-the-incident
    method: GET
- name: Prompt to Escalate the Incident
  endpoint:
    path: /actions/docs/prompt-to-escalate-the-incident
    method: GET
- name: Prompt to Reassign the Incident
  endpoint:
    path: /actions/docs/prompt-to-reassign-the-incident
    method: GET
- name: Prompt to Run an Automation Action on the Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-automation-action-on-the-incident
    method: GET
- name: Prompt to Run an Incident Workflow on the Incident
  endpoint:
    path: /actions/docs/prompt-to-run-an-incident-workflow-on-the-incident
    method: GET
- name: Prompt to Send a Status Update for the Incident
  endpoint:
    path: /actions/docs/prompt-to-send-a-status-update-for-the-incident
    method: GET
- name: Prompt to Update Priority on the Incident
  endpoint:
    path: /actions/docs/prompt-to-update-priority-on-the-incident
    method: GET
- name: Send a Direct Message
  endpoint:
    path: /actions/docs/send-a-direct-message
    method: GET
- name: Send an Ephemeral Message
  endpoint:
    path: /actions/docs/send-an-ephemeral-message
    method: GET
- name: Send a Message to a Channel
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel
    method: GET
- name: Send a Message to a Channel with an Incident Action
  endpoint:
    path: /actions/docs/send-a-message-to-a-channel-with-an-incident-action
    method: GET
- name: Set a Channel Topic
  endpoint:
    path: /actions/docs/set-a-channel-topic
    method: GET
- name: Rename a Slack Channel
  endpoint:
    path: /actions/docs/rename-a-slack-channel
    method: GET
- name: Create a Task
  endpoint:
    path: /actions/docs/create-a-task
    method: GET
- name: Update Task Assignee
  endpoint:
    path: /actions/docs/update-task-assignee
    method: GET
- name: Update Task Details
  endpoint:
    path: /actions/docs/update-task-details
    method: GET
- name: Update Task Name
  endpoint:
    path: /actions/docs/update-task-name
    method: GET
- name: Update Task Status
  endpoint:
    path: /actions/docs/update-task-status
    method: GET
- name: Generate Random Positive Adjective
  endpoint:
    path: /actions/docs/generate-random-positive-adjective
    method: GET
- name: Generate Random Animal
  endpoint:
    path: /actions/docs/generate-random-animal
    method: GET
- name: Generate Random Color
  endpoint:
    path: /actions/docs/generate-random-color
    method: GET
- name: Send DELETE Request
  endpoint:
    path: /actions/docs/send-delete-request
    method: GET
- name: Send GET Request
  endpoint:
    path: /actions/docs/send-get-request
    method: GET
- name: Send HEAD Request
  endpoint:
    path: /actions/docs/send-head-request
    method: GET
- name: Send PATCH Request
  endpoint:
    path: /actions/docs/send-patch-request
    method: GET
- name: Send POST Request
  endpoint:
    path: /actions/docs/send-post-request
    method: GET
- name: Send PUT Request
  endpoint:
    path: /actions/docs/send-put-request
    method: GET
- name: Send a Webhook POST
  endpoint:
    path: /actions/docs/send-a-webhook-post
    method: GET
- name: Create a Zoom Meeting
  endpoint:
    path: /actions/docs/create-a-zoom-meeting
    method: GET
- name: incident
  endpoint:
    path: /actions/docs/create-an-incident
    method: POST
- name: status_update
  endpoint:
    path: /actions/docs/send-status-update
    method: POST
- name: cloudwatch_logs
  endpoint:
    path: /aws/cloudwatch/logs
    method: POST
    data_selector: logs
    params: {}
- name: cloudwatch_logs
  endpoint:
    path: /actions/aws/get_cloudwatch_logs_by_query
    method: POST
    data_selector: logs
    params: {}
- name: invoke_lambda_function
  endpoint:
    path: /invoke/lambda
    method: POST
    data_selector: outputs
- name: invoke_lambda_function
  endpoint:
    path: /actions/docs/aws-invoke-a-lambda-function
    method: POST
    data_selector: Outputs
- name: Invoke Azure Function
  endpoint:
    path: /main/docs/incident-workflows#create-an-incident-workflow
    method: POST
    data_selector: Outputs
    params: {}
- name: Azure Functions
  endpoint:
    path: /actions/docs/azure-invoke-an-azure-function
    method: POST
    data_selector: Outputs
    params: {}
- name: graph_snapshot
  endpoint:
    path: /actions/docs/datadog-create-a-graph-snapshot
    method: POST
- name: Create a Graph Snapshot
  endpoint:
    path: /actions/docs/datadog-create-a-graph-snapshot
    method: POST
    data_selector: outputs
    params: {}
- name: Get a Monitor's Details
  endpoint:
    path: /actions/docs/datadog-get-a-monitors-details
    method: GET
    data_selector: outputs
    params: {}
- name: Get the Alerting Monitor
  endpoint:
    path: /actions/docs/datadog-get-the-alerting-monitor
    method: GET
    data_selector: outputs
    params: {}
- name: Search Logs
  endpoint:
    path: /actions/docs/datadog-search-logs
    method: GET
    data_selector: outputs
    params: {}
- name: monitor_details
  endpoint:
    path: /monitors
    method: GET
    data_selector: monitor_status
- name: monitor_details
  endpoint:
    path: /api/v1/monitor/{monitor_id}
    method: GET
    data_selector: monitor
    params: {}
- name: 'Datadog: Get the Alerting Monitor'
  endpoint:
    path: /actions/docs/datadog-get-the-alerting-monitor
    method: GET
- name: logs
  endpoint:
    path: /api/v2/logs/events/search
    method: GET
- name: logs
  endpoint:
    path: /api/v2/logs/events/search
    method: GET
    data_selector: logs
    params: {}
- name: Create a Meeting
  endpoint:
    path: /actions/docs/google-meet-create-a-meeting
    method: POST
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: post_incident_review
  endpoint:
    path: /main/docs/jeli-create-a-post-incident-review
    method: POST
    data_selector: outputs
- name: create_issue
  endpoint:
    path: /api/v2/issues
    method: POST
    data_selector: issue
    params: {}
- name: Create an Issue for an Incident
  endpoint:
    path: /actions/docs/jira-cloud-create-an-issue-for-an-incident
    method: POST
- name: create_issue
  endpoint:
    path: /actions/docs/jira-server-create-an-issue-for-an-incident
    method: POST
- name: Create Issue
  endpoint:
    path: /actions/docs/jira-server-create-an-issue-for-an-incident
    method: POST
- name: Lookup Value
  endpoint:
    path: /actions/docs/lookup-value-by-key
    method: POST
    data_selector: Inputs
    params: {}
- name: Lookup Value by Key
  endpoint:
    path: /actions/docs/lookup-value-by-key
    method: GET
    data_selector: outputs
    params: {}
- name: incident_workflow_actions
  endpoint:
    path: /actions/docs
    method: GET
    data_selector: actions
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: incident_workflow_actions
  endpoint:
    path: /actions/docs/incident-workflow-actions-overview
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
    params: {}
- name: dedicated_chat
  endpoint:
    path: /actions/docs/create-a-dedicated-chat-in-microsoft-teams
    method: POST
- name: create_dedicated_chat
  endpoint:
    path: /actions/docs/create-a-dedicated-chat-in-microsoft-teams
    method: POST
    data_selector: outputs
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /create-conference-bridge
    method: POST
- name: conference_bridge
  endpoint:
    path: /actions/create_conference_bridge
    method: POST
    data_selector: outputs
    params: {}
- name: Add PagerDuty Advance Scribe Agent
  endpoint:
    path: /actions/docs/add-pagerduty-advance-scribe-agent
    method: GET
- name: remove_cache_variable_value
  endpoint:
    path: /actions/remove_from_cache_variable_value
    method: POST
    data_selector: result
    params: {}
- name: cache_variable
  endpoint:
    path: /api/v1/cache_variable
    method: POST
    data_selector: cache_variable_data
- name: Add Conference Bridge
  endpoint:
    path: /actions/docs/add-conference-bridge
    method: POST
- name: add_conference_bridge
  endpoint:
    path: /actions/docs/add-conference-bridge
    method: POST
    data_selector: outputs
    params: {}
- name: impacted_business_service
  endpoint:
    path: /incidents/{incident_id}/business_services
    method: POST
    data_selector: result
    params:
      incident_id: '{{ incident_id }}'
      business_service_id: '{{ business_service_id }}'
- name: impacted_business_service
  endpoint:
    path: /api/v1/incidents/{incident_id}/impact
    method: POST
    data_selector: result
    params: {}
- name: add_note_to_incident
  endpoint:
    path: /incidents/{id}/notes
    method: POST
- name: add_note_to_incident
  endpoint:
    path: /api/v1/incidents/{incident_id}/notes
    method: POST
    data_selector: result
    params: {}
- name: add_responders
  endpoint:
    path: /actions/add-responders
    method: POST
    data_selector: outputs
    params: {}
- name: add_responder
  endpoint:
    path: /incidents/{incident_id}/responders
    method: POST
    data_selector: result
    params: {}
- name: Add Stakeholders
  endpoint:
    path: /actions/docs/add-stakeholders
    method: POST
- name: incident
  endpoint:
    path: /incidents
    method: GET
    data_selector: incidents
- name: create_incident
  endpoint:
    path: /actions/docs/create-an-incident
    method: POST
- name: create_incident
  endpoint:
    path: /api/v1/incidents
    method: POST
    data_selector: incident
    params: {}
- name: Get Alerts for an Incident
  endpoint:
    path: /incidents/{incident_id}/alerts
    method: GET
- name: alerts_for_incident
  endpoint:
    path: /incidents/{incident_id}/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: business_service
  endpoint:
    path: /actions/docs/get-business-service-details
    method: GET
    data_selector: Business Service
    params: {}
- name: business_service
  endpoint:
    path: /api/v1/business_services/{id}
    method: GET
    data_selector: business_service
    params: {}
- name: Get Notes for an Incident
  endpoint:
    path: /incidents/{incident_id}/notes
    method: GET
- name: get_notes_for_incident
  endpoint:
    path: /actions/docs/get-notes-for-an-incident
    method: GET
- name: get_on_call_user
  endpoint:
    path: /get_on_call_user
    method: POST
    data_selector: outputs
- name: Get On-Call User from a Schedule
  endpoint:
    path: /actions/docs/get-on-call-user-from-a-schedule
    method: GET
    data_selector: outputs
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Ensure API access key is included in request headers.
- Uses OAuth2 with refresh token — requires setup of connected app in PagerDuty
- Some API responses may include rate limits
- OAuth2 setup is required for API access.
- API requires proper OAuth setup in PagerDuty.
- Rate limits apply to API calls.
- Incident Workflow actions that make external HTTP requests will originate from the
  list of IP addresses.
- Ensure to configure OAuth2 with necessary scopes.
- Requires setup of OAuth 2.0 for authentication
- Uses OAuth2 with refresh token.
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token
- Rate limits apply on API calls
- Make sure to handle rate limiting as per the API documentation.
- Incidents are only created when an escalation policy has an on-call user.
- Alerts cannot be acknowledged, only triggered or resolved.
- Integration keys can be found by navigating to Services > Service Directory > select
  the service > Integrations tab
- Incidents must be assigned to a user based on escalation policy.
- Ensure to handle API rate limits appropriately.
- Redaction cannot be undone, not even by PagerDuty Support.
- Refer to the API Docs for detailed information.
- An incident can have up to 2,000 notes.
- Incident notes are limited to 65,535 single-byte characters.
- API is RESTful
- Some endpoints may require specific permissions or scopes.
- Reopen Incidents is available to all pricing plans, with the exception of Digital
  Operations (Legacy).
- Requires OAuth2 authentication for API access.
- Customers on the Enterprise plan for Incident Management can use two predefined
  roles (i.e., Incident Commander and Customer Liaison) and create up to 10 custom
  roles, for a total of 12 Incident Roles.
- Customers on the Business pricing plan can use two predefined roles (i.e., Incident
  Commander and Customer Liaison) and create one custom role.
- Customer on the Professional pricing plan can use two predefined roles (i.e., Incident
  Commander and Customer Liaison).
- Incident Tasks are included with our Enterprise Incident Management package.
- Incident Types are viewable on the Incidents page directly above the incident status.
- Custom fields can be added to incidents.
- This feature is available with the Business, Enterprise for Incident Management
  and Digital Operations (Legacy) pricing plans.
- Requires OAuth2 setup with PagerDuty.
- The conference bridge feature is available on current Business, Enterprise for Incident
  Management and Digital Operations (Legacy) plans.
- The One Touch To Join feature is supported in over 30 of our highest responder countries.
- One Touch To Join works with conference bridges hosted in Base countries only.
- Uses OAuth2 with refresh token — requires setup of connected app in PagerDuty.
- Some responses may include additional metadata
- Some endpoints may have rate limits
- Status updates are sent to subscribed users depending on their status update notification
  rules.
- Rate limits apply to API requests.
- Ensure to handle pagination for large datasets.
- If an incident has its own conference bridge, this value will be shown. If not,
  and the conference bridge is configured at the service level, information for the
  service-level conference bridge will be shown. If no conference bridge information
  is available, this value will be empty.
- Rate limits apply per minute for API calls.
- Jeli is not available for accounts in the EU service region.
- Requires setup of connected app in PagerDuty
- Visibility Console will reach end-of-life on October 31, 2025 for month-to-month
  accounts and January 31, 2026 for term accounts with active usage.
- Uses OAuth2 with refresh token — requires setup in PagerDuty.
- Some API responses may include nested structures.
- Ensure proper scopes are set for OAuth tokens.
- Ensure that OAuth scopes are correctly configured for your use case.
- Requires setup of OAuth application in PagerDuty.
- API usage may be limited based on account type.
- Ensure correct OAuth scopes are set for the API.
- Some responses may contain pagination.
- API uses OAuth2 with refresh token.
- Some API calls may have rate limits that could affect data extraction.
- Requires API access key for authentication.
- Rate limits are enforced on API calls.
- API requests require authentication via OAuth2.
- Ensure to handle rate limits appropriately.
- Uses OAuth2 for authentication
- Requires OAuth2 authentication for accessing the API
- PagerDuty does not have full control over the deliverability of SMS notifications.
- Push notifications are recommended as the primary contact method.
- Messages containing URLs are highly likely to be filtered.
- Avoid words like 'banking,' 'finance,' 'marketing,' 'sale,' etc.
- Check with your mobile service provider for outages or restrictions.
- Ensure correct OAuth scopes are set for API access.
- Toll-free numbers are not supported as a contact method.
- Taking action on an incident by responding to a phone notification is supported
  in all countries listed below.
- Most PagerDuty users can take action on an incident by responding to an SMS notification.
- API requires OAuth2 authentication with a connected app.
- Users with Manager, Admin, Global Admin, or Account Owner can add integrations.
- Users with roles User, Admin, Manager, Global Admin, and Account Owner can create,
  edit, and delete services.
- Full Stakeholders, Observers, Responders, Managers, Admins and the Account Owner
  can view all services.
- Restricted Access users will only be able to view services that they have been added
  to via team or object permissions.
- Suggested Technical Service Dependencies will be provided based on incident correlation.
- Custom Fields on Services is available with Business and Enterprise for Incident
  Management pricing plans.
- API requires OAuth2 authentication.
- API supports OAuth2 authentication.
- Rate limits are enforced on the API.
- Rate limits are enforced on a per-account basis.
- The API supports standard RESTful authentication.
- Requires OAuth2 authentication.
- Requires OAuth2 setup for API access
- Rate limits apply to API calls
- Ensure to use the correct API version in requests.
- Admin, Global Admin, and Account Owner base roles can manage users.
- SCIM User Provisioning is available on all plans, and in all service regions.
- Requires OAuth setup in PagerDuty
- Only the Account Owner can request user import assistance from Support.
- 'Offboarding is available on the following pricing plans: Business, Digital Operations
  (legacy) and Enterprise for Incident Management.'
- Ensure API access keys are set up correctly in the account settings.
- Ensure proper OAuth scopes are set for the integration.
- Ensure proper scopes are set for the access token
- API Access section is the starting point for building your own OAuth-connected PagerDuty
  app.
- Some resources may have rate limits
- Some objects like Contact may return nulls in deeply nested fields
- Some responses may include null values for optional fields
- OAuth2 is used for authentication
- Rate limits apply to API access
- Each escalation policy must contain at least one target.
- Uses OAuth2 with refresh token for authentication.
- Ensure API access key is included in the request headers.
- Ensure that your API key has the necessary permissions.
- Google Calendar can take up to 24 hours to refresh an imported on-call schedule.
- Ensure to follow API rate limits to avoid throttling.
- API uses OAuth2 authentication.
- Escalation policies notify on-call users about incidents
- An escalation policy can be associated with as many services as you like
- Escalation policies notify on-call users about incidents.
- An escalation policy can be associated with only one team at a time.
- Some objects like incidents may return nulls in deeply nested fields
- Requires OAuth2 with refresh token for API calls
- Ensure to comply with API rate limits.
- A PD Automation Actions user license is required for this feature.
- Users with specific roles can create, edit, and delete Automation Actions and Runners.
- 'The 14-day trial is available to existing customers on the following pricing plans:
  Business, Digital Operations (legacy) and Enterprise for Incident Management.'
- API supports pagination through 'offset' and 'limit' query parameters.
- Users can only select services that they have edit permissions on.
- You can create and enable up to 10 Incident Workflows with conditional triggers
  that apply to the same technical service.
- You can create and enable up to five Incident Workflows with conditional triggers
  that apply to all services on the account.
- If you reach the trigger limit, you will see an error message indicating this when
  attempting to save the workflow.
- Supports authentication using API keys and/or OAuth.
- Designed for incident response teams and administrators.
- 'Users with the following base roles can add, update and delete Workflow Integration
  connections: Manager, Admin, Account Owner.'
- Incident Workflow actions that make external HTTP requests will originate from the
  list of IP addresses in our developer documentation.
- Requires setup of connected app in AWS IAM Identity Center.
- Requires integration with Jeli to create Post-Incident Reviews.
- Available in US and EU service regions.
- Requires integration with Jeli for Post-Incident Reviews.
- Initial Configuration requires an Admin, Global Admin, or Account Owner base role
  in PagerDuty.
- Only one Scribe Agent can join and transcribe each incident meeting.
- Agents are a PagerDuty Advance feature.
- Scribe Agent can only join one meeting at a time.
- The Scribe Agent appears as 'Unverified' in Microsoft Teams due to Microsoft's February
  2024 update.
- Support for Microsoft Teams as a chat application is scheduled for later in the
  year 2025.
- Ensure correct scopes are authorized via OAuth.
- The Google Calendar Extension is available on all pricing plans.
- Shift Agent ingests users' Google Calendar data once an hour, and may not detect
  the latest conflicts.
- Uses API token for authentication — must be kept secure
- This API supports high event ingestion rates.
- Ensure to manage your event volume to avoid additional charges.
- Requires setup of OAuth2 credentials in PagerDuty
- Ensure correct API version is used in requests
- Requires setup of OAuth in PagerDuty.
- Requires OAuth2 with refresh token — setup connected app in PagerDuty
- Change events must be sent to a service-level integration key.
- Webhook Actions allow response teams to define a dynamic webhook.
- Automation Actions can only be enabled for Service Orchestration rules.
- Global Orchestrations are only available on accounts with the PagerDuty AIOps add-on
  and the Advanced Event Orchestration pricing tier.
- Service Orchestrations are available on all packages.
- Global Orchestration rules are optional rules that can be created before a routing
  rule.
- Service Orchestration rules are optional rules that can be created after a routing
  rule.
- When there is more than one potential global or service orchestration rule that
  an event could match against, that group of rules is called a set.
- When creating a Global or Service Orchestration rule, any conditions can be created
  and combined, similar to a routing rule.
- Threshold-based conditions can only ever exist on their own.
- Pausing incident notifications is available as part of the Advanced Event Orchestration
  package.
- The maximum payload size for an Event Orchestration is 4 MB.
- Users can associate up to 10 integrations with one Event Orchestration.
- Ensure proper OAuth setup to access the API
- Cache variables can be set in both Global and Service Orchestrations, but they are
  only usable within the orchestration in which they were created.
- Stored values last for 24 hours, or until they're replaced by a new value.
- Ensure a human and not an automated system event is responsible for resolving all
  high priority incidents.
- Alert Grouping features are available with our PagerDuty AIOps package.
- Global Alert Grouping reduces noise by grouping alerts across more than one technical
  service.
- Ensure to handle rate limits as per API guidelines.
- Intelligent Alert Grouping is included with the PagerDuty AIOps add-on.
- The maximum number of alerts that can group into a single incident is 1,000.
- API rate limits apply
- Ensure to set up OAuth2 credentials in PagerDuty.
- Auto-Pause Incident Notifications is configured at the service level.
- AIOps Service Configuration is in Limited General Availability.
- Requires OAuth2 setup through PagerDuty
- Rate limits may apply depending on the account type
- Ensure to handle rate limiting as per API documentation
- Rulesets and Event Rules webpages reached end-of-life on January 31, 2025.
- Rulesets and Event Rules webpages reached end-of-life on January 31, 2025 and are
  no longer visible in the PagerDuty web app.
- API supports pagination by page number.
- Ensure to set the correct headers for authentication.
- Dynamic Field Enrichment & Extraction is available with both Global Event Rules
  and Service Event Rules.
- Scheduled Rules functionality is available with our Business, Enterprise for Incident
  Management and Digital Operations (Legacy) plans, or as part of our PagerDuty AIOps
  product, which is purchased separately from the core PagerDuty platform.
- Recurring Event Rules functionality is available with our Business, Enterprise for
  Incident Management and Digital Operations (Legacy) plans, or as part of our PagerDuty
  AIOps product, which is purchased separately from the core PagerDuty platform.
- Ensure to follow the API rate limits to avoid throttling issues.
- API uses OAuth2 for authentication.
- Rate limits are applied to API calls.
- Event Rules reached end-of-life (EOL) on January 31, 2025.
- Requires setup of OAuth2 with refresh token.
- Data in the Analytics Dashboard updates once per day, and it may take up to 24 hours
  for new data to appear.
- By default, the Services List display 10 results at a time.
- By default, the Responders List display 10 results at a time.
- By default, the Teams List display 10 results at a time.
- By default, the Escalation Policy List display 10 results at a time.
- Requires API access key for authentication
- Rate limits apply based on account type
- When the count of filtered objects goes over the limit, the list will grey out and
  you can no longer select/deselect individual objects.
- Operational Reviews feature is included on Business, Digital Operations (legacy),
  and Enterprise for Incident Management plans.
- API access requires OAuth2 authentication.
- Data in the Analytics Dashboard updates once per day.
- It may take up to 24 hours for new data to appear.
- User Onboarding report data is updated once per day, and it may take up to 24 hours
  for new data to appear.
- Audit Trail Reporting is available on the Business, Enterprise for Incident Management,
  and Digital Operations (legacy) pricing plans.
- Users can access audit records from the last 12 months, on-demand, and at any frequency.
  The maximum duration you can view at once is 31 days.
- Requires setup of OAuth integration in PagerDuty
- Rate limits apply to API requests
- Audit Trail Reporting is available on Business, Enterprise for Incident Management,
  and Digital Operations pricing plans.
- The PagerDuty Analytics Slack integration requires the Teams feature, which is available
  on Business, Digital Operations (legacy) and Enterprise plans.
- Some API responses may vary based on the user's permissions
- Ensure the correct OAuth scopes are set for data access.
- The Operational Maturity report is included on all PagerDuty pricing plans.
- All user roles can view the Operational Maturity report.
- The integration expects to find a nested JSON-encoded object in the Message property.
  If we do not receive it, an alert will not trigger.
- Some endpoints may have rate limits and require handling of errors.
- This integration requires a Manager, Admin, Global Admin or Account Owner base role
  to configure.
- All users, except Limited Stakeholders and Full Stakeholders, can trigger incidents
  to use the EventBridge integration.
- PagerDuty can send different types of events to the Partner Event Source.
- Uses PagerDuty Webhook for incident notifications
- Uses webhooks to integrate with PagerDuty events
- Events include incident.trigger and incident.resolve
- Ensure proper permissions are granted for API access.
- When a CloudTrail metric goes beyond a predefined ALARM state threshold, a CloudWatch
  alert sends an event to a PagerDuty endpoint, triggering an incident.
- When the CloudTrail metric returns to an OK state below the predefined threshold,
  a resolve event is sent to the same endpoint, resolving the PagerDuty incident.
- Ensure that you have the required permissions for accessing the API.
- When AWS is experiencing problems, Amazon EventBridge sends AWS Health Dashboard
  events to PagerDuty.
- Some API calls may have rate limits
- No updates will be posted/synced back with the particular AWS Security Hub Finding.
- Integration requires a Manager base role or higher to configure in PagerDuty.
- Users must be able to edit repository settings in Bitbucket.
- This integration requires the dashboards_write permission in Datadog.
- Requires OAuth2 setup in PagerDuty.
- Emails sent to an email integration endpoint must be sent in UTF-8.
- PagerDuty will strip all attachments from emails and truncate messages if the email
  is over 96 KB.
- If an email is over 10 MB (including headers and attachments), our server will reject
  it.
- Email events have an ingestion rate limit of 60 events/min, per key.
- Ensure OAuth scopes are configured properly for access.
- Uses OAuth2 with refresh token — requires setup of connected app in Jeli
- Some responses may include null values in optional fields
- By default, the integration tracks the main/master branch.
- Requires setup of OAuth2 authentication.
- Integration requires AIOps enabled in PagerDuty service configuration.
- Requires Manager base role or higher in PagerDuty and Maintainer, Admin or Owner
  role in GitLab.
- This integration requires a Manager base role or higher to configure in PagerDuty.
- This integration requires administrator permissions to install the Jenkins PagerDuty
  plugin.
- This integration requires a Manager base role or higher to configure.
- Requires setup of connected app in PagerDuty.
- Uninstalling the Jira Cloud Integration will remove all configurations and cannot
  be undone.
- No synchronization of data between the linked Jira issue and the PagerDuty incident.
- Rate limits apply to the API.
- Ensure that the correct OAuth scopes are set for access.
- Integration is bidirectional — Jira issues can be created from PagerDuty incidents
  and vice versa.
- Only one Jira issue will be created per PagerDuty incident.
- API requires a valid API access key for authentication.
- API requires user authentication for all requests.
- 'This integration only works with Jira Server for PagerDuty customers on the following
  pricing plans: Professional, Business, Digital Operations (legacy) and Enterprise
  for Incident Management.'
- You must have a PagerDuty user license to use the integration.
- Uses OAuth2 with refresh token — requires setup of OAuth app in PagerDuty
- Some endpoints may return nested data structures
- Rate limits apply for API calls
- API provides a REST interface for integration with various services.
- User credentials should have read/write access to the connected projects and they
  should be basic authorization credentials, not SSO.
- The REST API Key should be a full access key, not a read-only API key.
- Rate limits are enforced on a per-user basis.
- PagerDuty Admin is required to authorize the connection of PagerDuty to Microsoft
  Teams.
- Uses Microsoft Graph API to request permissions for automation tasks.
- Ensure to have the correct scopes for API access
- Requires setup of API access keys
- Transitioning to application-level permissions model.
- Requires API access keys for authentication.
- Ensure that API Access is enabled on your Organization. Salesforce Organizations
  in Trial Mode will normally not have API access enabled.
- One PagerDuty account can be linked to multiple Salesforce accounts.
- Only one Salesforce account can be linked to one PagerDuty account.
- Requires OAuth2 authentication with a connected app.
- Salesforce Custom Fields Mappings is only available from the Salesforce Service
  Cloud integration version v3.19.
- The ServiceNow integration is available to accounts on the Business or Enterprise
  pricing plans.
- PagerDuty Custom Field synchronization and the Create a ServiceNow Incident Workflow
  Action are two premium features only available on the Enterprise plan for Incident
  Management.
- Ensure that the Password needs reset and Locked out checkboxes are unchecked.
- Ensure that Active is checked.
- Ensure API access keys are set up correctly.
- A ServiceNow Administrator role is required for configuration.
- 'Once you have successfully installed and configured the PagerDuty application in
  your ServiceNow instance, it is highly recommended that you index the following
  columns in ServiceNow: incident.x_pd_integration_incident, sys_user_group.x_pd_integration_pagerduty_escalation,
  sys_user.x_pd_integration_pagerduty_id, cmdb_ci.x_pd_integration_pagerduty_service,
  task.x_pd_integration_incident_id.'
- Requires ServiceNow Admin role for upgrades.
- Integration Health Check must be run during initial configuration.
- 'Required user permissions for webhook health check: x_pd_integration.admin'
- Requires OAuth2 authentication setup.
- Requires setup of OAuth2 in PagerDuty.
- To enable additional API call for v3 webhooks, set the fetch_first_trigger_log_entry
  property to true.
- Uses OAuth2 authentication for API access.
- Custom Field Mappings and syncing is available on our Enterprise Incident Management
  plan.
- Choice field options can only be updated within the ServiceNow Custom Field Mappings
  page; these changes cannot be made within PagerDuty.
- Editing the ServiceNow field data type may cause syncing issues, since the data
  type sent from the PagerDuty custom field will no longer match the data type expected
  by the ServiceNow field.
- The integration does not sync field label updates to the Custom Fields Mapping table
  in ServiceNow.
- Deleting a ServiceNow Field will remove the field from all of your ServiceNow incident
  records, along with its existing field values.
- ServiceNow OAuth Authentication is available on Business or Enterprise pricing plans.
- This feature is available for ServiceNow Integration version 8.3.0.
- This integration is available with the PagerDuty AIOps add-on.
- The ServiceNow Change Request integration is available on versions 7.5 and higher.
- If you do not have the AIOps add-on, change events will create maintenance windows
  on PagerDuty services, but you won't be able to see ServiceNow change events in
  PagerDuty.
- Some endpoints may have rate limits.
- Check the Default user ID on the PagerDuty Settings page in ServiceNow.
- Ensure API access keys are secured.
- ServiceNow CSM application is available to accounts on certain pricing plans.
- Global Admin or Account Owner user permissions required in PagerDuty.
- ServiceNow admin permissions required for the PagerDuty configuration page.
- Admin permissions are required to manage integrations in Jeli
- Users with a Manager role or higher can create and manage their teams’ connections.
- A PagerDuty users with an Admin role or higher will still need to connect the PagerDuty
  account to the Slack Workspace first.
- Slack workflows are developed and maintained by Slack.
- Utilize Slack's new Workflow Builder for creating incident trigger workflows.
- Ensure to set appropriate scopes for OAuth tokens.
- If your PagerDuty account is in the EU service region, you'll need to use /pdeu
  to run all slash commands instead of /pd.
- With the deprecation of Slack’s legacy workflows, we highly recommend utilizing
  Slack's new Workflow Builder for creating incident trigger workflows.
- Requires setup of connected app in Jeli
- Requires OAuth2 setup
- Rate limits apply to API usage
- Zendesk integration is available to accounts on specific pricing plans.
- An Admin base role is required to connect PagerDuty to Zendesk and create a PagerDuty
  API key.
- The Zendesk integration is available to accounts on specific pricing plans.
- Users with Admin/Global Admin or Account Owner roles can configure the integration.
- Users with administrator permissions can configure the integration.
- Responders can create Zoom meetings via incidents.
- Some API calls may require specific permissions
- There could also be an issue related to the command file's permissions, in which
  case you will need to check to see what user ID is running the script, and ensure
  it has write permission to the command file.
- The PagerDuty Agent is currently available in deb and rpm package formats and supported
  on Ubuntu 12.04, 14.04, and 16.04, and CentOS 6.
- The Agent does not run on CentOS 5 or lower, as it requires a newer version of Python
  than the version included with CentOS 5.
- The PagerDuty Agent requires Python 2.7 or higher, but Python 3 is recommended.
- Requires setup of API access keys.
- If the integration is not working as expected, it typically has something to do
  with one of the steps outlined in the integration process.
- Rate limits are applied based on the API key used.
- API rate limits apply, check the documentation for details.
- OAuth2 authentication is required for API access
- End-of-support for V2 webhooks began on October 31, 2022.
- V1 webhook extensions became unsupported on November 13, 2021 and lost functionality
  on October 31, 2022.
- Team Managers will only be able to migrate webhooks for the Teams they are assigned
  to.
- Requires OAuth2 authentication with refresh token.
- Be sure to replace `subdomain` with your own PagerDuty subdomain (e.g., `https://subdomain.pagerduty.com`)
- Be sure to replace the `provider` URL with your own.
- Live Call Routing is designed to handle voice calls and does not support SMS messages.
- Ensure API access keys are set up for your account
- The REST API is available to all customers on current pricing plans.
- Both types of REST API keys are 20-character strings.
- REST API is available to all customers on current pricing plans.
- Events API keys are 32-character strings.
- REST API Rate Limits
- Make sure to set up your API access key in the PagerDuty dashboard.
- Webhook IPs are a fixed list and should not change
- REST API only allows HTTPS connections; HTTP connections are not allowed
- API calls may be rate limited based on account type
- The REST API only allows HTTPS connections; for security’s sake, HTTP connections
  are not allowed.
- Rate limits are enforced on API requests.
- The Internal Status Page refreshes every 30 seconds.
- External Status Pages are available on all plans and can be extended to include
  Private/Audience-specific pages or more subscribers with the add-on.
- Professional plans include one public page, and Business plans include one public
  and one private status page.
- You can have a maximum of 50 ongoing posts per status page. This includes both incident
  and maintenance posts.
- Maximum number of subscriptions per status page is 150,000.
- Uses OAuth2 with refresh token — requires setup of a connected app in PagerDuty
- Private Status Pages use the OpenID Connect (OIDC) protocol for user access.
- Uses OAuth2 with Client Secret Post method
- Private Status Pages use OpenID SSO for user access.
- Ensure that the Identity Provider is enabled in Salesforce.
- Enable Authorization Code and Credentials Flow in OAuth settings.
- Some APIs may have rate limits that need to be considered.
- Ensure OAuth scopes are correctly set for all API calls.
- The API uses OAuth2 for authentication.
- Requires API access keys for authentication
- Some API endpoints may have rate limits
- Supports both REST API and GraphQL.
- Ensure to check rate limits for API usage
- Changing the account subdomain is available for Professional, Business, Enterprise
  for Incident Management and Digital Operations (Legacy) plans.
- Ensure to manage rate limits as per the documentation.
- Check the API version for compatibility.
- Rooted devices are not supported for the mobile app.
- The mobile app is supported on iOS 17 and higher, or Android 12 and higher.
- Users can be reached via email, call, or SMS.
- The app supports Advanced Mobile Security including a passcode.
- API has rate limits.
- Critical Alerts can cause some calls made through third-party communication apps
  to drop when they’re sent during an ongoing call.
- Ensure to set proper OAuth scopes for access.
- The API requires OAuth2 authentication
- Rate limits may apply to API requests
- Users must have a Microsoft Intune account with an assigned Microsoft Intune license.
- Admins and the Account Owner can configure PagerDuty for Intune.
- Requires OAuth2 authentication for data access.
- Ensure to set up API key and tokens correctly.
- 'New minimum OS requirements: Android requires 11 or higher, iOS requires 16.0 or
  higher.'
- 'New minimum OS req: Our app now requires Android 11 or higher for future updates'
- Ensure to handle rate limits as specified in the API docs.
- 'New minimum OS req: Starting June 18, 2024, our app will require Android 11 or
  higher for future updates'
- To improve security, Mobile app login from rooted or jailbroken devices is now blocked
- API supports pagination through the 'offset' parameter.
- No specific notes provided.
- Thanks for all the great feedback! We're always looking for ways to improve the
  app. Email support@pagerduty.com with any comments.
- Ensure to configure the app with the appropriate permissions.
- Great work continues behind the scenes for upcoming functionality.
- Some features may be limited based on plan
- Requires OAuth setup in PagerDuty.
- We're always looking for ways to improve the app.
- New functionality and bug fixes are continuously being worked on.
- OAuth2 requires setup of connected app in PagerDuty
- Ensure to check for OAuth scopes and permissions when configuring access.
- Native login is available in the app.
- Ensure the API access key is valid and has the required permissions.
- API requires OAuth2 authentication with a connected app
- Some API calls may limit the number of requests per minute.
- PagerDuty can forward both REST API and Events API requests from the US service
  region to the EU service region.
- Requires OAuth2 setup for API access.
- Jeli is available to all customers on Professional, Business, and Enterprise Incident
  Management pricing plans.
- At this time, Jeli is not available for accounts in the EU Service Region.
- Admin or Account Owner must enable Post-Incident Reviews in the PagerDuty web app.
- Customers with the Enterprise for Incident Management pricing plan can create unlimited
  Jeli Post-Incident Reviews.
- Customers on Professional and Business pricing plans can create up to 300 Post-Incident
  Reviews per year.
- Jeli is available to customers with a standalone Jeli plan, or the Enterprise plan
  for Incident Management.
- Post-Incident Review Stages are available with the Professional, Business, and Enterprise
  for Incident Management pricing plans.
- Post-Incident Review Stages are not customizable.
- Ensure to configure the connected app correctly for token generation.
- Ensure proper OAuth scopes are granted for API access.
- The Narrative Builder is available with the Professional, Business, and Enterprise
  for Incident Management pricing plans.
- Some endpoints may return paginated results.
- Requires setup of API access key in PagerDuty
- Ensure to use the correct OAuth2 scopes.
- Rate limiting applies to all API calls.
- Some API endpoints may have specific rate limits
- Accounts on Professional, Business and Enterprise for Incident Management plans
  can access the People page
- Requires setup of OAuth application in PagerDuty
- Admin permissions are required to manage Jeli settings.
- Tokens should be used as Bearer tokens in the header of your API requests.
- Not all Jeli pricing plans offer API access.
- API requires OAuth setup for authentication
- It is not currently possible to roll back to previous versions.
- Deletion of a webhook is not reversible.
- Ensure to handle rate limiting as per PagerDuty's API guidelines.
- At this time, Jeli is not available for accounts in the EU service region.
- API calls are rate limited.
- Some endpoints may require additional permissions.
- Users must be able to read and edit Zoom integrations.
- We recommend creating an internal service account to configure the Zoom integration.
- Admin permissions are required to manage Jeli integrations.
- Uploading HR data is a manual process which is completed by uploading a CSV file.
- Jeli Incidents are only available on the Jeli Standalone (Legacy) plan.
- Requires OAuth2 for authentication
- The Jeli Slackbot is only available on the Jeli Standalone (Legacy) plan.
- Requires setup of OAuth2 application in PagerDuty.
- Jeli Workflows are only available on the Jeli Standalone (Legacy) pricing plan.
- API uses OAuth2 with refresh token — requires setup of connected app in PagerDuty
- The Jeli Learning Center is available with the Enterprise for Incident Management
  pricing plan.
- Starting the week of February 3, 2025, customers on Professional and Business pricing
  plans may have access to the Jeli Learning Center.
- This action is not reversible, and a deleted webhooks cannot be recovered.
- OAuth2 integration requires setup of connected app in PagerDuty
- Only one enterprise connection can be enabled at a given time.
- The Google Meet Jeli integration is available on the Jeli Standalone (Legacy) pricing
  plan.
- The access token will only be visible once.
- API rate limits apply.
- The Okta subdomain should be all lowercase characters.
- Requires OAuth2 authentication to access the API
- A Jeli account can only have an Opsgenie or PagerDuty integration configured, not
  both.
- Use the v2 API version for all requests.
- Jeli is available to customers with a standalone Jeli plan, or if they are on the
  Enterprise Incident Management or Enterprise Customer Service Ops plans.
- 'Webhook URL format: https://<url of your servicenow instance>/<resource path>'
- The email address used for the email_of_incident_opener variable must exist as a
  user in Jeli.
- The Statuspage Jeli integration is available on the Jeli Standalone (Legacy) pricing
  plan.
- API calls are rate limited, make sure to handle 429 errors.
- Users must be able to read and edit Zoom integrations. Please contact your Zoom
  administrator to adjust your permissions.
- Only a Jeli Admin can manage API access tokens.
- The Commercial and Enterprise Jeli pricing plans offer API access.
- Some endpoints may have specific rate limits.
- Uses OAuth2 with refresh token — needs setup of connected app in PagerDuty
- Rate limits apply based on the API access keys
- API v2 is the latest version and should be used for all integrations.
- Some API responses may include rate limit headers
- Some API responses may contain pagination data
- Actions marked in the Professional plan column are available on the Professional
  pricing plan.
- Actions marked in the Business plan column are available on the Business pricing
  plan.
- Actions marked in the Enterprise plan column are available on the Enterprise plan
  for Incident Management and Customer Service.
- If left blank, the action uses `us-east-1` as the default region.
- Default result limit is `100`, maximum is `1000`.
- This workflow action is available on our Business and Enterprise for Incident Management
  pricing plans.
- This workflow action is available on our Enterprise plan for Incident Management.
- Requires a valid Datadog API key for access.
- This workflow action is available on our Professional, Business and Enterprise for
  Incident Management pricing plans.
- The Loop Until action will not automatically terminate when an incident is resolved.
- This workflow action is available on Business and Enterprise for Incident Management
  pricing plans.
- This functionality is available to customers on the Professional, Business, and
  Enterprise plans for Incident Management with PagerDuty Advance and the Scribe Agent
  enabled.
- This action requires the Zoom | PagerDuty integration for Zoom meetings, or the
  Microsoft Teams | PagerDuty integration for Microsoft Teams meetings.
- For Microsoft Teams meetings, the Scribe Agent can only be automatically added to
  meetings created through the Microsoft Teams | PagerDuty integration.
- This workflow action is available to AIOps customers on our Business and Enterprise
  for Incident Management pricing plans.
- Requires setup of API Access Key with WRITE permissions for the Event Orchestration
  that the Cache Variable belongs to.
- The existing Cache Variable value must follow JSON array formatting.
- The existing Cache Variable value must follow JSON array formatting for the action
  to successfully complete.
- The Cache Variable being set must be of External Data Variable Type and String Data
  Format.
- This action will only mark an impacted business service. You can’t use it to mark
  a non-impacted business service.
- Once added, incident notes cannot be edited or deleted.
- Incident notes are limited to 65,535 single-byte characters. This typically equates
  to ~16,000 characters of UTF-8 encoded text.
- This workflow action is available on Business and Enterprise pricing plans.
errors:
- '403 Forbidden: Check API access permissions.'
- '404 Not Found: Verify endpoint and resource availability.'
- '503 Service Unavailable: Retry after a short delay'
- '401 Unauthorized: Check your authentication credentials'
- '401 Unauthorized: Check credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Ensure the endpoint exists'
- '500 Internal Server Error: Retry the request'
- '429 Too Many Requests: Reduce the frequency of API calls.'
- '401 Unauthorized: Check your OAuth credentials.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: The requested resource does not exist.'
- '403 Forbidden: Check your API key and permissions'
- '403 Forbidden: Check your API token and permissions.'
- '404 Not Found: Verify the endpoint or resource ID.'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '404 Not Found: Check if the resource exists'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '404 Not Found: Verify the endpoint and parameters.'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify the resource ID.'
- '422 Unprocessable Entity: Check request parameters.'
- '400 Bad Request: Invalid request format'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource not found'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '404 Not Found: Verify endpoint path.'
- '400 Bad Request: Validate request parameters.'
- You can create up to 200 tasks for an incident.
- '404 Not Found: Verify the endpoint or resource.'
- '500 Internal Server Error: Retry the request.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '429 Too Many Requests: Exceeded rate limits, slow down requests'
- '401 Unauthorized: Check your API key and permissions'
- '403 Forbidden: Check permissions.'
- '404 Not Found: Verify endpoint.'
- '403 Forbidden: Check your API key permissions.'
- '404 Not Found: Ensure the endpoint exists.'
- '429 Too Many Requests: Reduce request frequency.'
- '404 Not Found: Check the endpoint path.'
- Postmortems will be removed from the product and become unavailable on Jan 30, 2026.
- '403 Forbidden: Check permissions for the API key'
- '404 Not Found: Verify the endpoint URL'
- '429 Too Many Requests: Slow down API calls'
- Data in the Markdown Module must be manually copied if you want to preserve it.
- '403 Forbidden: Check API access key and permissions'
- '404 Not Found: Verify endpoint and resource'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Verify OAuth token validity.'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Verify the endpoint and resource.'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '404 Not Found: Check the endpoint and parameters for correctness.'
- '403 Forbidden: Check API key or permissions.'
- '404 Not Found: Verify endpoint and resource.'
- '403 Forbidden: Ensure API key is valid and has appropriate permissions'
- '404 Not Found: Check endpoint path and parameters'
- '404 Not Found: Verify resource ID.'
- '422 Unprocessable Entity: Check request format.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry after a few minutes.'
- '403 Forbidden: Check permissions for the API key.'
- '404 Not Found: Verify endpoint URL and resource ID.'
- '403 Forbidden: Ensure API key has correct permissions.'
- '404 Not Found: Check the endpoint path for errors.'
- '500 Internal Server Error: Retry the request or check system status.'
- '404 Not Found: Verify endpoint URL.'
- '500 Internal Server Error: Retry after some time.'
- '400 Bad Request: Check request parameters'
- '403 Forbidden: Ensure proper permissions are granted'
- '422 Unprocessable Entity: Check request data structure'
- '403 Forbidden: Verify API key or permissions'
- '401 Unauthorized: Check token validity'
- '403 Forbidden: Check your API access permissions.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '403 Forbidden: Verify API key and permissions.'
- '404 Not Found: Check endpoint path and resource ID.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Verify the endpoint'
- '401 Unauthorized: Check OAuth token validity'
- '401 Unauthorized: Verify your API key and permissions.'
- '404 Not Found: The requested resource could not be found.'
- '403 Forbidden: Check permissions for the requested resource.'
- '404 Not Found: Verify the resource exists.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '403 Forbidden: Check if the API key is valid and has the right permissions.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Check your API key and permissions.'
- '404 Not Found: Endpoint does not exist.'
- '403 Forbidden: Check your API access permissions'
- '404 Not Found: Verify the requested resource path'
- '403 Forbidden: Check if the API key has the required permissions.'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Retry after some time'
- '404 Not Found: Verify endpoint and resource ID'
- '404 Not Found: Ensure the resource path is correct.'
- '404 Not Found: Verify endpoint and resource existence.'
- '401 Unauthorized: Verify API key or OAuth token'
- '429 Too Many Requests: Rate limit exceeded'
- '404 Not Found: Verify the endpoint and resource ID'
- '429 Too Many Requests: Reduce request frequency'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '404 Not Found: Check the endpoint path or resource ID'
- '401 Unauthorized: Verify OAuth tokens and scopes'
- '403 Forbidden: Check your API key or permissions'
- '404 Not Found: Ensure the resource exists'
- '401 Unauthorized: Recheck user permissions or API key.'
- '404 Not Found: Verify the resource path'
- '429 Too Many Requests: Respect the API rate limits.'
- '403 Forbidden: Check API key or permissions'
- '404 Not Found: Verify endpoint and parameters'
- '429 Too Many Requests: Throttle your requests'
- '404 Not Found: Verify the endpoint and resource ID.'
- Deleting an escalation policy is permanent and it cannot be restored afterwards
- '403 Forbidden: Check user permissions or API keys.'
- '404 Not Found: Ensure the endpoint or resource exists.'
- '403 Forbidden: Ensure correct permissions for the API token'
- '403 Forbidden: Check your API key permissions'
- '404 Not Found: Verify the endpoint.'
- '403 Forbidden: Check permissions for the API key used'
- '404 Not Found: Ensure the endpoint is correct'
- '400 Bad Request: Validate request parameters'
- '429 Too Many Requests: Reduce the number of requests made to the API.'
- '403 Forbidden: Ensure proper permissions are granted.'
- '404 Not Found: Check the endpoint or resource being accessed.'
- '404 Not Found: Verify the endpoint or resource ID'
- '500 Internal Server Error: Retry the request after some time'
- '403 Forbidden: Check API access permissions'
- '404 Not Found: Verify endpoint and parameters.'
- '422 Unprocessable Entity: Check request format and data.'
- '401 Unauthorized: Verify your API token is correct and has necessary permissions'
- 'Connection Issues: Ensure the server is running and accessible'
- '429 Too Many Requests: Exceeded rate limit. Reduce frequency of requests.'
- '400 Bad Request: Ensure all required fields are provided.'
- '401 Unauthorized: Check client ID and secret.'
- '403 Forbidden: Ensure you have permission to access this resource.'
- '403 Forbidden: Verify API key and permissions'
- '404 Not Found: Check resource existence'
- '404 Not Found: Verify the endpoint and resource'
- '413 Payload Too Large: Orchestrations greater than 4 MB will not save.'
- '401 Unauthorized: Invalid or expired token'
- '404 Not Found: Resource does not exist'
- Disabling or deleting a cache variable may lead to unexpected behavior if there
  are any rules that still reference it.
- '404 Not Found: Verify the endpoint and parameters'
- '500 Internal Server Error: Retry the request later'
- '401 Unauthorized: Check API token or OAuth scopes.'
- '401 Unauthorized: Recheck API key or permissions'
- '403 Forbidden: Check your permissions or token'
- '403 Forbidden: Recheck permissions for the API key'
- '404 Not Found: Check the endpoint path and resource existence'
- '429 Too Many Requests: Reduce frequency of requests.'
- '403 Forbidden: Check access permissions'
- '403 Forbidden: Check API key or OAuth scopes'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: Verify the endpoint path'
- '403 Forbidden: Check if your API key has the required permissions'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '403 Forbidden: Check your permissions for the requested resource.'
- '429 Too Many Requests: Reduce the rate of requests.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- '500 Internal Server Error: Try again later.'
- '403 Forbidden: Check API key and permissions'
- '404 Not Found: Resource may not exist'
- 'Filter limits for Service, Responder, and Escalation Policy Filters: 1000'
- 'Team Filter limit: 200'
- 'FILTER_LIMIT_EXCEEDED: Reduce number of filters applied'
- '404 Not Found: Verify endpoint and resource availability'
- '429 Too Many Requests: Throttle requests to avoid hitting rate limits'
- '401 Unauthorized: Recheck API key or token expiration'
- '404 Not Found: Verify endpoint and resource existence'
- '403 Forbidden: Recheck API access permissions'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify endpoint paths'
- '429 Too Many Requests: Reduce frequency of requests'
- '429 Too Many Requests: Implement exponential backoff.'
- '404 Not Found: Verify the URL and resource existence'
- '404 Not Found: Check the endpoint path'
- '400 Bad Request: Validate your request data'
- '403 Forbidden: Ensure correct permissions'
- '404 Not Found: Resource does not exist.'
- '403 Forbidden: Check your permissions or API key.'
- '429 Too Many Requests: Reduce request rate'
- '429 Too Many Requests: Throttle your API requests.'
- Message size exceeds fixed limit
- Incident key truncation if more than 255 characters
- Details section of each incident will be truncated to 500 characters
- '403 Forbidden: Check your API key and access permissions'
- 'MESSAGE_SIZE_EXCEEDS_FIXED_LIMIT: Message size exceeds fixed limit'
- '403 Forbidden: Check if the user has access to the resource.'
- '429 Too Many Requests: Implement exponential backoff for retries.'
- '401 Unauthorized: Check user roles and permissions in PagerDuty and GitLab'
- 'Unauthorized: Ensure you have the required user permissions.'
- 'Configuration Error: Check your Jira connection code.'
- '400 Bad Request: Check the request format and required fields.'
- '403 Forbidden: Check your API Key and permissions.'
- 'Jira test failed: cannot change status to requested state'
- '403 Forbidden: Check your API access key and permissions.'
- '429 Too Many Requests: Rate limit exceeded. Try again later.'
- '429 Too Many Requests: Throttle your requests.'
- 'Webhook update error: Troubleshoot via the Debug logs tab in PagerDuty settings.'
- '404 Not Found: Verify the endpoint URL or resource'
- '401 Unauthorized: Check OAuth credentials and Token expiration'
- '404 Not Found: Verify the endpoint path or resource ID'
- We can't connect Microsoft Teams to PagerDuty. Authorization cannot be completed
  at this time. You may close this window.
- We can't connect Microsoft Teams to PagerDuty. The authorization link has expired
  or is not valid. Return to Teams to generate a new one. You may close this window.
- '401 Unauthorized: Ensure proper permissions are granted.'
- '500 Internal Server Error: Try again later'
- '403 Forbidden: Check your API access keys'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify request paths.'
- '422 Unprocessable Entity: Validate request data.'
- '403 Forbidden: Insufficient permissions for the requested action'
- '422 Unprocessable Entity: Validation errors in request payload'
- '200: Connection test successful'
- '401: ServiceNow user authentication test failed'
- '403 Forbidden: Check your user permissions'
- '429 Too Many Requests: Throttle API calls.'
- '404 Not Found: Verify the endpoint or resource'
- '`FIELD_DELETED`: The ServiceNow field used for this mapping was deleted in ServiceNow,
  or is no longer eligible for mapping.'
- '`FIELD_TYPE_CHANGED`: The ServiceNow field type has changed and is no longer compatible
  with the current mapping.'
- '`REFERENCE_FIELD_ERROR`: You cannot update reference fields from PagerDuty.'
- '`DEPENDENT_FIELD_ERROR`: You cannot update choices with a dependent field from
  PagerDuty.'
- '`READONLY_FIELD_ERROR`: You cannot update read-only fields from PagerDuty.'
- '`PD_FIELD_DISABLED`: The PagerDuty field used for this mapping is disabled in PagerDuty.'
- '`PD_FIELD_DELETED`: The PagerDuty field used for this mapping was deleted in PagerDuty.'
- '400 Bad Request: Module Access Policies configured via the Key Management Admin
  may reject the use of application scripts’ decryptor.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '401 Unauthorized: Check API User Token or ServiceNow credentials.'
- '400 Bad Request: Check the request parameters and structure.'
- '403 Forbidden: Insufficient permissions'
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify endpoint or resource'
- '429 Too Many Requests: Slow down API requests'
- '403 Forbidden: Check the API key or permissions.'
- '429 Too Many Requests: Slow down the request rate.'
- 'Unauthorized: Recheck account permissions or authorization settings.'
- ERROR NOTIFICATIONTYPE field must be present
- ERROR Error Performing CheckSum
- ERROR Agent is not running
- ERROR File was rejected because could not find CONTACTPAGER
- '429 Too Many Requests: Exceeded rate limit.'
- There was an error while importing alert from ... Please check OrionWeb.log for
  more details.
- Couldn't connect or send data to PagerDuty
- File could not be opened
- service_key is blank
- '403 Forbidden: Check API token permissions.'
- '403 Forbidden: Check that the user has access to the requested resource'
- '404 Not Found: Confirm the resource exists.'
- '429 Too Many Requests: Rate limit exceeded, retry later.'
- Failed to create webhook. Webhook subscription limit exceeded for the selected scope.
- '403 Forbidden: Check permissions for the API key used.'
- '403 Forbidden: Check if the API key has the correct permissions'
- '404 Not Found: Check the resource path'
- '429 Too Many Requests: Throttle your API requests'
- '403 Forbidden: Client request for an operation that the user is not permitted to
  perform.'
- '403 Forbidden: User does not have permission for the operation.'
- '422 Unprocessable Entity: Check the request parameters.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '401 Unauthorized: Invalid or expired OAuth token.'
- '403 Forbidden: Check API keys or permissions'
- '403 Forbidden: Check permissions or API token'
- '401 Unauthorized: Check API key or OAuth token.'
- '403 Forbidden: You do not have permission to access this resource.'
- '429 Too Many Requests: Exceeded rate limit for API calls.'
- '401 Unauthorized: Invalid or expired credentials.'
- '403 Forbidden: Check your API access keys or permissions'
- '404 Not Found: Verify the endpoint or resource exists'
- '400 Bad Request: Check request format and parameters.'
- '401 Unauthorized: Verify API key or OAuth token.'
- '404 Not Found: Verify the resource exists'
- '429 Too Many Requests: Reduce the frequency of your requests.'
- '401 Unauthorized: Check your access token or credentials.'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Check API key or token.'
- '403 Forbidden: Check API Access Keys or permissions'
- '403 Forbidden: Check permissions and scopes.'
- '403 Forbidden: Invalid API key or insufficient permissions'
- '404 Not Found: Requested resource does not exist'
- 'App disabled: Please contact your organization''s PagerDuty administrator to adjust
  mobile app access.'
- '404 Not Found: Check the endpoint path or resource identifier.'
- '403 Forbidden: Check API Key and permissions.'
- '401 Unauthorized: Check authentication credentials.'
- '429 Too Many Requests: Reduce API call frequency'
- '403 Forbidden: Check user permissions for the requested resource.'
- '429 Too Many Requests: Implement exponential backoff for API calls.'
- '403 Forbidden: Check permissions for the API access key.'
- '404 Not Found: Verify endpoint URL'
- '429 Too Many Requests: Reduce request rate.'
- '403 Forbidden: Check permissions and API key validity'
- '403 Forbidden: Ensure you have the right permissions'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '404 Not Found: Ensure endpoint is correct'
- '429 Too Many Requests: Implement exponential backoff'
- '403 Forbidden: Check your API key.'
- '404 Not Found: Verify endpoint correctness.'
- '422 Unprocessable Entity: Validation failed for the request.'
- '429 Too Many Requests: Slow down your requests'
- '404 Not Found: Ensure the resource exists.'
- '400 Bad Request: Check the request format and parameters.'
- '403 Forbidden: Ensure the user has the necessary permissions.'
- '404 Not Found: Verify the endpoint and resource identifiers.'
- '403 Forbidden: Check permissions and scopes'
- '403 Forbidden: Check your authentication credentials.'
- '429 Too Many Requests: Respect the rate limits.'
- '403 Forbidden: Check your API key or token permissions.'
- We were unable to import this meeting’s information from Zoom
- We were unable to import this meeting’s information from Zoom.
- '403 Forbidden: Check your permissions'
- '401 Unauthorized: Check your access token'
- '422 Unprocessable Entity: Check request parameters and payload.'
- '403 Forbidden: Verify API key or OAuth scopes.'
- '404 Not Found: Confirm endpoint exists.'
- '404 Not Found: Verify resource path'
- '429 Too Many Requests: Throttle requests to comply with rate limits'
- '403 Forbidden: Check user permissions.'
- '422 Unprocessable Entity: Validate request parameters.'
- '429 Too Many Requests: Exceeded rate limits'
- '401 Unauthorized: Check your credentials and permissions'
- '404 Not Found: The requested resource does not exist'
- 'Unauthorized: Recheck API key or permissions'
- '422 Unprocessable Entity: Review request parameters.'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Verify endpoint is correct.'
- 'Invalid API Key: Ensure the API Key is correct and has not expired.'
- '404 Not Found: Check your endpoint and parameters.'
- '404 Not Found: Verify the resource identifier'
- '429 Too Many Requests: Slow down API requests.'
- '429 Too Many Requests: Slow down requests to avoid throttling'
- '400 Bad Request: Check your request format and parameters'
- '401 Unauthorized: Verify your API key or OAuth token'
- '403 Forbidden: Check if API key is valid.'
- '404 Not Found: Monitor ID does not exist.'
- '400 Bad Request: Check your request format or parameters.'
- '403 Forbidden: Verify your permissions for the requested resource.'
- '400 Bad Request: Check required fields and their values.'
- '401 Unauthorized: Verify credentials and token validity.'
- If the provided string does not exist in the Cache Variable, the workflow will not
  attempt to update the value.
- '400 Bad Request: The provided string does not exist in the Cache Variable.'
- '401 Unauthorized: Recheck API Key or permissions.'
- '400 Bad Request: Check input parameters and structure.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure the incident ID is valid.'
auth_info:
  mentioned_objects:
  - OAuth
  - API Access Keys
  - OAuthToken
  - AuthProvider
  - OauthToken
  - ClientCredentials
  - NamedCredential
  - OAuth2
  - AccessToken
  - ApiKey
  - OAuth Token
  - API Key
  - Client ID
  - Client
  - Authorization
  - OauthTokens
  - ServiceNow user ID
  - ServiceNow user password
  - x_pd_integration.admin
  - OpenID Connect
  - Authorization Server
  - offline_access
  - openid
  - profile
  - DeviceManagementManagedApps.ReadWrite
  - RefreshToken
  - User
  - Service
client:
  base_url: https://api.pagerduty.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.pagerduty.com/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/vnd.pagerduty+json;version=2
source_metadata: null
