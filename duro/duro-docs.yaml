resources:
- name: apiToken
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.apiToken
- name: categories
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.categories
- name: categoriesByIds
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.categoriesByIds
- name: changeOrderApprovalTemplates
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.changeOrderApprovalTemplates
- name: changeOrders
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.changeOrders
- name: changeOrdersByIds
  endpoint:
    path: /changeOrdersByIds
    method: POST
    data_selector: data.changeOrdersByIds
    params:
      ids: '[ID]'
      includeArchived: Boolean
- name: companiesByIds
  endpoint:
    path: /companiesByIds
    method: POST
    data_selector: data.companiesByIds
    params:
      ids: '[ID]'
- name: companyCategories
  endpoint:
    path: /companyCategories
    method: GET
    data_selector: companyCategories
    params:
      fetchAll: false
      id: '4'
- name: componentRevisionsByIds
  endpoint:
    path: /componentRevisionsByIds
    method: GET
    data_selector: componentRevisionsByIds
    params:
      ids:
      - '4'
- name: componentTreeById
  endpoint:
    path: /componentTreeById
    method: POST
    data_selector: data.componentTreeById
- name: componentTreeByIds
  endpoint:
    path: componentTreeByIds
    method: POST
    data_selector: data.componentTreeByIds
    params:
      depth: null
      filter: children
      ids:
      - 4
- name: components
  endpoint:
    path: components
    method: POST
    data_selector: data.components
    params:
      libraryType: GENERAL
      orderBy: []
      search: {}
- name: componentsByIds
  endpoint:
    path: /componentsByIds
    method: POST
    data_selector: data.componentsByIds
    params: {}
- name: family
  endpoint:
    path: /family
    method: POST
    data_selector: data.family
    params: {}
- name: imagesByIds
  endpoint:
    path: /imagesByIds
    method: POST
    data_selector: data.imagesByIds
    params: {}
- name: librariesByIds
  endpoint:
    path: /librariesByIds
    method: POST
    data_selector: data.librariesByIds
    params: {}
- name: productRevisionsByIds
  endpoint:
    path: /productRevisionsByIds
    method: GET
    data_selector: data.productRevisionsByIds
    params:
      ids: '[ID]'
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data.products
    params:
      libraryType: GENERAL
- name: subdomain
  endpoint:
    path: /subdomain
    method: GET
    data_selector: data.subdomain
- name: tokenActiveLibrary
  endpoint:
    path: /tokenActiveLibrary
    method: GET
    data_selector: data.tokenActiveLibrary
- name: userById
  endpoint:
    path: /userById
    method: GET
    data_selector: data.userById
- name: webhooksByIds
  endpoint:
    path: /webhooksByIds
    method: POST
    data_selector: data.webhooksByIds
    params: {}
- name: archiveChangeOrderApprovalTemplate
  endpoint:
    path: /archiveChangeOrderApprovalTemplate
    method: POST
    data_selector: data.archiveChangeOrderApprovalTemplate
    params: {}
- name: createChangeOrder
  endpoint:
    path: /createChangeOrder
    method: POST
    data_selector: data.createChangeOrder
    params: {}
- name: createChangeOrderApprovalTemplate
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createChangeOrderApprovalTemplate
    params:
      input: CreateChangeOrderApprovalTemplateInput
- name: createComponent
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createComponent
    params:
      input: CreateComponentInput
- name: createDocuments
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createDocuments
    params:
      input: '[CreateDocumentInput]'
      itemId: ID
      itemType: ModelType
- name: createProduct
  endpoint:
    path: /mutations/createProduct
    method: POST
    data_selector: data.createProduct
    params: {}
- name: createWebhook
  endpoint:
    path: /mutations/createWebhook
    method: POST
    data_selector: data.createWebhook
    params: {}
- name: deleteChangeOrder
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.deleteChangeOrder
    params: {}
- name: deleteComponent
  endpoint:
    path: /deleteComponent
    method: POST
    data_selector: data.deleteComponent
    params: {}
- name: deleteDocuments
  endpoint:
    path: /deleteDocuments
    method: POST
    data_selector: data.deleteDocuments
    params: {}
- name: deleteProduct
  endpoint:
    path: /deleteProduct
    method: POST
    data_selector: data.deleteProduct
    params: {}
- name: deleteWebhookById
  endpoint:
    path: /deleteWebhookById
    method: POST
    data_selector: data.deleteWebhookById
    params: {}
- name: deleteWebhookByUrl
  endpoint:
    path: /deleteWebhookByUrl
    method: POST
    data_selector: data.deleteWebhookByUrl
    params: {}
- name: updateCategories
  endpoint:
    path: /updateCategories
    method: POST
    data_selector: data.updateCategories
    params: {}
- name: updateChangeOrder
  endpoint:
    path: /updateChangeOrder
    method: POST
    data_selector: data.updateChangeOrder
    params: {}
- name: updateChangeOrderApprovalTemplate
  endpoint:
    path: /updateChangeOrderApprovalTemplate
    method: POST
    data_selector: data.updateChangeOrderApprovalTemplate
    params: {}
- name: updateComponent
  endpoint:
    path: /updateComponent
    method: POST
    data_selector: data.updateComponent
    params: {}
- name: updateProduct
  endpoint:
    path: /updateProduct
    method: POST
    data_selector: data.updateProduct
    params: {}
- name: change_orders
  endpoint:
    path: /changeOrders
    method: GET
    data_selector: connection
    params: {}
- name: Company
  endpoint:
    path: /company
    method: GET
    data_selector: companyData
- name: ComponentRevision
  endpoint:
    path: /components/revision
    method: GET
    data_selector: records
    params: {}
- name: Cpn
  endpoint:
    path: /cpn
    method: GET
- name: CpnCounterType
  endpoint:
    path: /cpnCounterType
    method: GET
- name: CreateCategoryInput
  endpoint:
    path: /createCategory
    method: POST
- name: CreateChangeOrderInput
  endpoint:
    path: /createChangeOrder
    method: POST
- name: CreateComponentInput
  endpoint:
    path: /createComponent
    method: POST
- name: CreateProductInput
  endpoint:
    path: /createProduct
    method: POST
- name: CreateWebhookInput
  endpoint:
    path: /createWebhook
    method: POST
- name: datasheet
  endpoint:
    path: /datasheet
    method: GET
    data_selector: src
    params: {}
- name: datasheetInput
  endpoint:
    path: /datasheetInput
    method: GET
    data_selector: src
    params: {}
- name: deleteInput
  endpoint:
    path: /deleteInput
    method: GET
    data_selector: id
    params: {}
- name: deleteWebhookByUrlInput
  endpoint:
    path: /deleteWebhookByUrlInput
    method: GET
    data_selector: webhookUrl
    params: {}
- name: document
  endpoint:
    path: /document
    method: GET
    data_selector: id
    params: {}
- name: documentLink
  endpoint:
    path: /documentLink
    method: GET
    data_selector: document
    params: {}
- name: documentSpec
  endpoint:
    path: /documentSpec
    method: GET
    data_selector: lastModified
    params: {}
- name: effectivity
  endpoint:
    path: /effectivity
    method: GET
    data_selector: startDate
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: src
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: connection
    params: {}
- name: Products
  endpoint:
    path: /products
    method: GET
    data_selector: connection
    params: {}
- name: RolledUpCostInput
  endpoint:
    path: /RolledUpCostInput
    method: GET
    data_selector: fields
    params: {}
- name: SearchFields
  endpoint:
    path: /SearchFields
    method: GET
    data_selector: fields
    params: {}
- name: SolidworksAnalytics
  endpoint:
    path: /SolidworksAnalytics
    method: GET
    data_selector: fields
    params: {}
- name: Status
  endpoint:
    path: /Status
    method: GET
    data_selector: fields
    params: {}
- name: TeamStruct
  endpoint:
    path: /TeamStruct
    method: GET
    data_selector: fields
    params: {}
- name: UpdateChangeOrderApprovalTemplateInput
  endpoint:
    path: /UpdateChangeOrderApprovalTemplateInput
    method: GET
    data_selector: fields
    params: {}
- name: UpdateChangeOrderInput
  endpoint:
    path: /UpdateChangeOrderInput
    method: GET
    data_selector: fields
    params: {}
- name: UpdateComponentInput
  endpoint:
    path: /UpdateComponentInput
    method: GET
    data_selector: fields
    params: {}
- name: UpdateProductInput
  endpoint:
    path: /UpdateProductInput
    method: GET
    data_selector: fields
    params: {}
- name: User
  endpoint:
    path: /user
    method: GET
    data_selector: records
notes:
- Default value for includeArchived is false.
- The response includes various nested objects and structures.
- This API supports GraphQL mutations for creating products and webhooks.
- Approval type can be 'FIRST_IN'.
- Returns a Component
errors:
- '400 Bad Request: Check your input fields and types'
- '401 Unauthorized: Verify your authentication credentials'
- '404 Not Found: Ensure the endpoint URL is correct'
- '400 Bad Request: Check input for required fields.'
- '401 Unauthorized: Ensure proper authentication.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://<BASE_URL>/graphql
  headers:
    apiToken: <YOUR_TOKEN_HERE>
source_metadata: null
